//Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
//Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
//--------------------------------------------------------------------------------
//Command: generate_target bd_afc3.bd
//Design : bd_afc3
//Purpose: IP block netlist
//--------------------------------------------------------------------------------
`timescale 1 ps / 1 ps

(* CORE_GENERATION_INFO = "bd_afc3,IP_Integrator,{x_ipVendor=xilinx.com,x_ipLibrary=BlockDiagram,x_ipName=bd_afc3,x_ipVersion=1.00.a,x_ipLanguage=VERILOG,numBlks=575,numReposBlks=453,numNonXlnxBlks=0,numHierBlks=122,maxHierDepth=2,numSysgenBlks=0,numHlsBlks=0,numHdlrefBlks=0,numPkgbdBlks=0,bdsource=SBD,synth_mode=None}" *) (* HW_HANDOFF = "design_1_axi_smc_0.hwdef" *) 
module bd_afc3
   (M00_AXI_araddr,
    M00_AXI_arburst,
    M00_AXI_arcache,
    M00_AXI_arlen,
    M00_AXI_arlock,
    M00_AXI_arprot,
    M00_AXI_arqos,
    M00_AXI_arready,
    M00_AXI_arsize,
    M00_AXI_aruser,
    M00_AXI_arvalid,
    M00_AXI_awaddr,
    M00_AXI_awburst,
    M00_AXI_awcache,
    M00_AXI_awlen,
    M00_AXI_awlock,
    M00_AXI_awprot,
    M00_AXI_awqos,
    M00_AXI_awready,
    M00_AXI_awsize,
    M00_AXI_awuser,
    M00_AXI_awvalid,
    M00_AXI_bready,
    M00_AXI_bresp,
    M00_AXI_bvalid,
    M00_AXI_rdata,
    M00_AXI_rlast,
    M00_AXI_rready,
    M00_AXI_rresp,
    M00_AXI_rvalid,
    M00_AXI_wdata,
    M00_AXI_wlast,
    M00_AXI_wready,
    M00_AXI_wstrb,
    M00_AXI_wvalid,
    M01_AXI_araddr,
    M01_AXI_arburst,
    M01_AXI_arcache,
    M01_AXI_arlen,
    M01_AXI_arlock,
    M01_AXI_arprot,
    M01_AXI_arqos,
    M01_AXI_arready,
    M01_AXI_arsize,
    M01_AXI_aruser,
    M01_AXI_arvalid,
    M01_AXI_awaddr,
    M01_AXI_awburst,
    M01_AXI_awcache,
    M01_AXI_awlen,
    M01_AXI_awlock,
    M01_AXI_awprot,
    M01_AXI_awqos,
    M01_AXI_awready,
    M01_AXI_awsize,
    M01_AXI_awuser,
    M01_AXI_awvalid,
    M01_AXI_bready,
    M01_AXI_bresp,
    M01_AXI_bvalid,
    M01_AXI_rdata,
    M01_AXI_rlast,
    M01_AXI_rready,
    M01_AXI_rresp,
    M01_AXI_rvalid,
    M01_AXI_wdata,
    M01_AXI_wlast,
    M01_AXI_wready,
    M01_AXI_wstrb,
    M01_AXI_wvalid,
    M02_AXI_araddr,
    M02_AXI_arburst,
    M02_AXI_arcache,
    M02_AXI_arlen,
    M02_AXI_arlock,
    M02_AXI_arprot,
    M02_AXI_arqos,
    M02_AXI_arready,
    M02_AXI_arsize,
    M02_AXI_aruser,
    M02_AXI_arvalid,
    M02_AXI_awaddr,
    M02_AXI_awburst,
    M02_AXI_awcache,
    M02_AXI_awlen,
    M02_AXI_awlock,
    M02_AXI_awprot,
    M02_AXI_awqos,
    M02_AXI_awready,
    M02_AXI_awsize,
    M02_AXI_awuser,
    M02_AXI_awvalid,
    M02_AXI_bready,
    M02_AXI_bresp,
    M02_AXI_bvalid,
    M02_AXI_rdata,
    M02_AXI_rlast,
    M02_AXI_rready,
    M02_AXI_rresp,
    M02_AXI_rvalid,
    M02_AXI_wdata,
    M02_AXI_wlast,
    M02_AXI_wready,
    M02_AXI_wstrb,
    M02_AXI_wvalid,
    M03_AXI_araddr,
    M03_AXI_arburst,
    M03_AXI_arcache,
    M03_AXI_arlen,
    M03_AXI_arlock,
    M03_AXI_arprot,
    M03_AXI_arqos,
    M03_AXI_arready,
    M03_AXI_arsize,
    M03_AXI_aruser,
    M03_AXI_arvalid,
    M03_AXI_awaddr,
    M03_AXI_awburst,
    M03_AXI_awcache,
    M03_AXI_awlen,
    M03_AXI_awlock,
    M03_AXI_awprot,
    M03_AXI_awqos,
    M03_AXI_awready,
    M03_AXI_awsize,
    M03_AXI_awuser,
    M03_AXI_awvalid,
    M03_AXI_bready,
    M03_AXI_bresp,
    M03_AXI_bvalid,
    M03_AXI_rdata,
    M03_AXI_rlast,
    M03_AXI_rready,
    M03_AXI_rresp,
    M03_AXI_rvalid,
    M03_AXI_wdata,
    M03_AXI_wlast,
    M03_AXI_wready,
    M03_AXI_wstrb,
    M03_AXI_wvalid,
    M04_AXI_araddr,
    M04_AXI_arburst,
    M04_AXI_arcache,
    M04_AXI_arlen,
    M04_AXI_arlock,
    M04_AXI_arprot,
    M04_AXI_arqos,
    M04_AXI_arready,
    M04_AXI_arsize,
    M04_AXI_aruser,
    M04_AXI_arvalid,
    M04_AXI_awaddr,
    M04_AXI_awburst,
    M04_AXI_awcache,
    M04_AXI_awlen,
    M04_AXI_awlock,
    M04_AXI_awprot,
    M04_AXI_awqos,
    M04_AXI_awready,
    M04_AXI_awsize,
    M04_AXI_awuser,
    M04_AXI_awvalid,
    M04_AXI_bready,
    M04_AXI_bresp,
    M04_AXI_bvalid,
    M04_AXI_rdata,
    M04_AXI_rlast,
    M04_AXI_rready,
    M04_AXI_rresp,
    M04_AXI_rvalid,
    M04_AXI_wdata,
    M04_AXI_wlast,
    M04_AXI_wready,
    M04_AXI_wstrb,
    M04_AXI_wvalid,
    M05_AXI_araddr,
    M05_AXI_arburst,
    M05_AXI_arcache,
    M05_AXI_arlen,
    M05_AXI_arlock,
    M05_AXI_arprot,
    M05_AXI_arqos,
    M05_AXI_arready,
    M05_AXI_arsize,
    M05_AXI_aruser,
    M05_AXI_arvalid,
    M05_AXI_awaddr,
    M05_AXI_awburst,
    M05_AXI_awcache,
    M05_AXI_awlen,
    M05_AXI_awlock,
    M05_AXI_awprot,
    M05_AXI_awqos,
    M05_AXI_awready,
    M05_AXI_awsize,
    M05_AXI_awuser,
    M05_AXI_awvalid,
    M05_AXI_bready,
    M05_AXI_bresp,
    M05_AXI_bvalid,
    M05_AXI_rdata,
    M05_AXI_rlast,
    M05_AXI_rready,
    M05_AXI_rresp,
    M05_AXI_rvalid,
    M05_AXI_wdata,
    M05_AXI_wlast,
    M05_AXI_wready,
    M05_AXI_wstrb,
    M05_AXI_wvalid,
    M06_AXI_araddr,
    M06_AXI_arburst,
    M06_AXI_arcache,
    M06_AXI_arlen,
    M06_AXI_arlock,
    M06_AXI_arprot,
    M06_AXI_arqos,
    M06_AXI_arready,
    M06_AXI_arsize,
    M06_AXI_aruser,
    M06_AXI_arvalid,
    M06_AXI_awaddr,
    M06_AXI_awburst,
    M06_AXI_awcache,
    M06_AXI_awlen,
    M06_AXI_awlock,
    M06_AXI_awprot,
    M06_AXI_awqos,
    M06_AXI_awready,
    M06_AXI_awsize,
    M06_AXI_awuser,
    M06_AXI_awvalid,
    M06_AXI_bready,
    M06_AXI_bresp,
    M06_AXI_bvalid,
    M06_AXI_rdata,
    M06_AXI_rlast,
    M06_AXI_rready,
    M06_AXI_rresp,
    M06_AXI_rvalid,
    M06_AXI_wdata,
    M06_AXI_wlast,
    M06_AXI_wready,
    M06_AXI_wstrb,
    M06_AXI_wvalid,
    M07_AXI_araddr,
    M07_AXI_arburst,
    M07_AXI_arcache,
    M07_AXI_arlen,
    M07_AXI_arlock,
    M07_AXI_arprot,
    M07_AXI_arqos,
    M07_AXI_arready,
    M07_AXI_arsize,
    M07_AXI_aruser,
    M07_AXI_arvalid,
    M07_AXI_awaddr,
    M07_AXI_awburst,
    M07_AXI_awcache,
    M07_AXI_awlen,
    M07_AXI_awlock,
    M07_AXI_awprot,
    M07_AXI_awqos,
    M07_AXI_awready,
    M07_AXI_awsize,
    M07_AXI_awuser,
    M07_AXI_awvalid,
    M07_AXI_bready,
    M07_AXI_bresp,
    M07_AXI_bvalid,
    M07_AXI_rdata,
    M07_AXI_rlast,
    M07_AXI_rready,
    M07_AXI_rresp,
    M07_AXI_rvalid,
    M07_AXI_wdata,
    M07_AXI_wlast,
    M07_AXI_wready,
    M07_AXI_wstrb,
    M07_AXI_wvalid,
    M08_AXI_araddr,
    M08_AXI_arburst,
    M08_AXI_arcache,
    M08_AXI_arlen,
    M08_AXI_arlock,
    M08_AXI_arprot,
    M08_AXI_arqos,
    M08_AXI_arready,
    M08_AXI_arsize,
    M08_AXI_aruser,
    M08_AXI_arvalid,
    M08_AXI_awaddr,
    M08_AXI_awburst,
    M08_AXI_awcache,
    M08_AXI_awlen,
    M08_AXI_awlock,
    M08_AXI_awprot,
    M08_AXI_awqos,
    M08_AXI_awready,
    M08_AXI_awsize,
    M08_AXI_awuser,
    M08_AXI_awvalid,
    M08_AXI_bready,
    M08_AXI_bresp,
    M08_AXI_bvalid,
    M08_AXI_rdata,
    M08_AXI_rlast,
    M08_AXI_rready,
    M08_AXI_rresp,
    M08_AXI_rvalid,
    M08_AXI_wdata,
    M08_AXI_wlast,
    M08_AXI_wready,
    M08_AXI_wstrb,
    M08_AXI_wvalid,
    M09_AXI_araddr,
    M09_AXI_arburst,
    M09_AXI_arcache,
    M09_AXI_arlen,
    M09_AXI_arlock,
    M09_AXI_arprot,
    M09_AXI_arqos,
    M09_AXI_arready,
    M09_AXI_arsize,
    M09_AXI_aruser,
    M09_AXI_arvalid,
    M09_AXI_awaddr,
    M09_AXI_awburst,
    M09_AXI_awcache,
    M09_AXI_awlen,
    M09_AXI_awlock,
    M09_AXI_awprot,
    M09_AXI_awqos,
    M09_AXI_awready,
    M09_AXI_awsize,
    M09_AXI_awuser,
    M09_AXI_awvalid,
    M09_AXI_bready,
    M09_AXI_bresp,
    M09_AXI_bvalid,
    M09_AXI_rdata,
    M09_AXI_rlast,
    M09_AXI_rready,
    M09_AXI_rresp,
    M09_AXI_rvalid,
    M09_AXI_wdata,
    M09_AXI_wlast,
    M09_AXI_wready,
    M09_AXI_wstrb,
    M09_AXI_wvalid,
    M10_AXI_araddr,
    M10_AXI_arburst,
    M10_AXI_arcache,
    M10_AXI_arlen,
    M10_AXI_arlock,
    M10_AXI_arprot,
    M10_AXI_arqos,
    M10_AXI_arready,
    M10_AXI_arsize,
    M10_AXI_aruser,
    M10_AXI_arvalid,
    M10_AXI_awaddr,
    M10_AXI_awburst,
    M10_AXI_awcache,
    M10_AXI_awlen,
    M10_AXI_awlock,
    M10_AXI_awprot,
    M10_AXI_awqos,
    M10_AXI_awready,
    M10_AXI_awsize,
    M10_AXI_awuser,
    M10_AXI_awvalid,
    M10_AXI_bready,
    M10_AXI_bresp,
    M10_AXI_bvalid,
    M10_AXI_rdata,
    M10_AXI_rlast,
    M10_AXI_rready,
    M10_AXI_rresp,
    M10_AXI_rvalid,
    M10_AXI_wdata,
    M10_AXI_wlast,
    M10_AXI_wready,
    M10_AXI_wstrb,
    M10_AXI_wvalid,
    M11_AXI_araddr,
    M11_AXI_arburst,
    M11_AXI_arcache,
    M11_AXI_arlen,
    M11_AXI_arlock,
    M11_AXI_arprot,
    M11_AXI_arqos,
    M11_AXI_arready,
    M11_AXI_arsize,
    M11_AXI_aruser,
    M11_AXI_arvalid,
    M11_AXI_awaddr,
    M11_AXI_awburst,
    M11_AXI_awcache,
    M11_AXI_awlen,
    M11_AXI_awlock,
    M11_AXI_awprot,
    M11_AXI_awqos,
    M11_AXI_awready,
    M11_AXI_awsize,
    M11_AXI_awuser,
    M11_AXI_awvalid,
    M11_AXI_bready,
    M11_AXI_bresp,
    M11_AXI_bvalid,
    M11_AXI_rdata,
    M11_AXI_rlast,
    M11_AXI_rready,
    M11_AXI_rresp,
    M11_AXI_rvalid,
    M11_AXI_wdata,
    M11_AXI_wlast,
    M11_AXI_wready,
    M11_AXI_wstrb,
    M11_AXI_wvalid,
    M12_AXI_araddr,
    M12_AXI_arprot,
    M12_AXI_arready,
    M12_AXI_arvalid,
    M12_AXI_awaddr,
    M12_AXI_awprot,
    M12_AXI_awready,
    M12_AXI_awvalid,
    M12_AXI_bready,
    M12_AXI_bresp,
    M12_AXI_bvalid,
    M12_AXI_rdata,
    M12_AXI_rready,
    M12_AXI_rresp,
    M12_AXI_rvalid,
    M12_AXI_wdata,
    M12_AXI_wready,
    M12_AXI_wstrb,
    M12_AXI_wvalid,
    M13_AXI_araddr,
    M13_AXI_arprot,
    M13_AXI_arready,
    M13_AXI_arvalid,
    M13_AXI_awaddr,
    M13_AXI_awprot,
    M13_AXI_awready,
    M13_AXI_awvalid,
    M13_AXI_bready,
    M13_AXI_bresp,
    M13_AXI_bvalid,
    M13_AXI_rdata,
    M13_AXI_rready,
    M13_AXI_rresp,
    M13_AXI_rvalid,
    M13_AXI_wdata,
    M13_AXI_wready,
    M13_AXI_wstrb,
    M13_AXI_wvalid,
    M14_AXI_araddr,
    M14_AXI_arprot,
    M14_AXI_arready,
    M14_AXI_arvalid,
    M14_AXI_awaddr,
    M14_AXI_awprot,
    M14_AXI_awready,
    M14_AXI_awvalid,
    M14_AXI_bready,
    M14_AXI_bresp,
    M14_AXI_bvalid,
    M14_AXI_rdata,
    M14_AXI_rready,
    M14_AXI_rresp,
    M14_AXI_rvalid,
    M14_AXI_wdata,
    M14_AXI_wready,
    M14_AXI_wstrb,
    M14_AXI_wvalid,
    M15_AXI_araddr,
    M15_AXI_arprot,
    M15_AXI_arready,
    M15_AXI_arvalid,
    M15_AXI_awaddr,
    M15_AXI_awprot,
    M15_AXI_awready,
    M15_AXI_awvalid,
    M15_AXI_bready,
    M15_AXI_bresp,
    M15_AXI_bvalid,
    M15_AXI_rdata,
    M15_AXI_rready,
    M15_AXI_rresp,
    M15_AXI_rvalid,
    M15_AXI_wdata,
    M15_AXI_wready,
    M15_AXI_wstrb,
    M15_AXI_wvalid,
    M16_AXI_araddr,
    M16_AXI_arprot,
    M16_AXI_arready,
    M16_AXI_arvalid,
    M16_AXI_awaddr,
    M16_AXI_awprot,
    M16_AXI_awready,
    M16_AXI_awvalid,
    M16_AXI_bready,
    M16_AXI_bresp,
    M16_AXI_bvalid,
    M16_AXI_rdata,
    M16_AXI_rready,
    M16_AXI_rresp,
    M16_AXI_rvalid,
    M16_AXI_wdata,
    M16_AXI_wready,
    M16_AXI_wstrb,
    M16_AXI_wvalid,
    M17_AXI_araddr,
    M17_AXI_arprot,
    M17_AXI_arready,
    M17_AXI_arvalid,
    M17_AXI_awaddr,
    M17_AXI_awprot,
    M17_AXI_awready,
    M17_AXI_awvalid,
    M17_AXI_bready,
    M17_AXI_bresp,
    M17_AXI_bvalid,
    M17_AXI_rdata,
    M17_AXI_rready,
    M17_AXI_rresp,
    M17_AXI_rvalid,
    M17_AXI_wdata,
    M17_AXI_wready,
    M17_AXI_wstrb,
    M17_AXI_wvalid,
    M18_AXI_araddr,
    M18_AXI_arprot,
    M18_AXI_arready,
    M18_AXI_arvalid,
    M18_AXI_awaddr,
    M18_AXI_awprot,
    M18_AXI_awready,
    M18_AXI_awvalid,
    M18_AXI_bready,
    M18_AXI_bresp,
    M18_AXI_bvalid,
    M18_AXI_rdata,
    M18_AXI_rready,
    M18_AXI_rresp,
    M18_AXI_rvalid,
    M18_AXI_wdata,
    M18_AXI_wready,
    M18_AXI_wstrb,
    M18_AXI_wvalid,
    M19_AXI_araddr,
    M19_AXI_arprot,
    M19_AXI_arready,
    M19_AXI_arvalid,
    M19_AXI_awaddr,
    M19_AXI_awprot,
    M19_AXI_awready,
    M19_AXI_awvalid,
    M19_AXI_bready,
    M19_AXI_bresp,
    M19_AXI_bvalid,
    M19_AXI_rdata,
    M19_AXI_rready,
    M19_AXI_rresp,
    M19_AXI_rvalid,
    M19_AXI_wdata,
    M19_AXI_wready,
    M19_AXI_wstrb,
    M19_AXI_wvalid,
    M20_AXI_araddr,
    M20_AXI_arprot,
    M20_AXI_arready,
    M20_AXI_arvalid,
    M20_AXI_awaddr,
    M20_AXI_awprot,
    M20_AXI_awready,
    M20_AXI_awvalid,
    M20_AXI_bready,
    M20_AXI_bresp,
    M20_AXI_bvalid,
    M20_AXI_rdata,
    M20_AXI_rready,
    M20_AXI_rresp,
    M20_AXI_rvalid,
    M20_AXI_wdata,
    M20_AXI_wready,
    M20_AXI_wstrb,
    M20_AXI_wvalid,
    M21_AXI_araddr,
    M21_AXI_arprot,
    M21_AXI_arready,
    M21_AXI_arvalid,
    M21_AXI_awaddr,
    M21_AXI_awprot,
    M21_AXI_awready,
    M21_AXI_awvalid,
    M21_AXI_bready,
    M21_AXI_bresp,
    M21_AXI_bvalid,
    M21_AXI_rdata,
    M21_AXI_rready,
    M21_AXI_rresp,
    M21_AXI_rvalid,
    M21_AXI_wdata,
    M21_AXI_wready,
    M21_AXI_wstrb,
    M21_AXI_wvalid,
    M22_AXI_araddr,
    M22_AXI_arprot,
    M22_AXI_arready,
    M22_AXI_arvalid,
    M22_AXI_awaddr,
    M22_AXI_awprot,
    M22_AXI_awready,
    M22_AXI_awvalid,
    M22_AXI_bready,
    M22_AXI_bresp,
    M22_AXI_bvalid,
    M22_AXI_rdata,
    M22_AXI_rready,
    M22_AXI_rresp,
    M22_AXI_rvalid,
    M22_AXI_wdata,
    M22_AXI_wready,
    M22_AXI_wstrb,
    M22_AXI_wvalid,
    M23_AXI_araddr,
    M23_AXI_arprot,
    M23_AXI_arready,
    M23_AXI_arvalid,
    M23_AXI_awaddr,
    M23_AXI_awprot,
    M23_AXI_awready,
    M23_AXI_awvalid,
    M23_AXI_bready,
    M23_AXI_bresp,
    M23_AXI_bvalid,
    M23_AXI_rdata,
    M23_AXI_rready,
    M23_AXI_rresp,
    M23_AXI_rvalid,
    M23_AXI_wdata,
    M23_AXI_wready,
    M23_AXI_wstrb,
    M23_AXI_wvalid,
    M24_AXI_araddr,
    M24_AXI_arprot,
    M24_AXI_arready,
    M24_AXI_arvalid,
    M24_AXI_awaddr,
    M24_AXI_awprot,
    M24_AXI_awready,
    M24_AXI_awvalid,
    M24_AXI_bready,
    M24_AXI_bresp,
    M24_AXI_bvalid,
    M24_AXI_rdata,
    M24_AXI_rready,
    M24_AXI_rresp,
    M24_AXI_rvalid,
    M24_AXI_wdata,
    M24_AXI_wready,
    M24_AXI_wstrb,
    M24_AXI_wvalid,
    M25_AXI_araddr,
    M25_AXI_arprot,
    M25_AXI_arready,
    M25_AXI_arvalid,
    M25_AXI_awaddr,
    M25_AXI_awprot,
    M25_AXI_awready,
    M25_AXI_awvalid,
    M25_AXI_bready,
    M25_AXI_bresp,
    M25_AXI_bvalid,
    M25_AXI_rdata,
    M25_AXI_rready,
    M25_AXI_rresp,
    M25_AXI_rvalid,
    M25_AXI_wdata,
    M25_AXI_wready,
    M25_AXI_wstrb,
    M25_AXI_wvalid,
    M26_AXI_araddr,
    M26_AXI_arprot,
    M26_AXI_arready,
    M26_AXI_arvalid,
    M26_AXI_awaddr,
    M26_AXI_awprot,
    M26_AXI_awready,
    M26_AXI_awvalid,
    M26_AXI_bready,
    M26_AXI_bresp,
    M26_AXI_bvalid,
    M26_AXI_rdata,
    M26_AXI_rready,
    M26_AXI_rresp,
    M26_AXI_rvalid,
    M26_AXI_wdata,
    M26_AXI_wready,
    M26_AXI_wstrb,
    M26_AXI_wvalid,
    M27_AXI_araddr,
    M27_AXI_arprot,
    M27_AXI_arready,
    M27_AXI_arvalid,
    M27_AXI_awaddr,
    M27_AXI_awprot,
    M27_AXI_awready,
    M27_AXI_awvalid,
    M27_AXI_bready,
    M27_AXI_bresp,
    M27_AXI_bvalid,
    M27_AXI_rdata,
    M27_AXI_rready,
    M27_AXI_rresp,
    M27_AXI_rvalid,
    M27_AXI_wdata,
    M27_AXI_wready,
    M27_AXI_wstrb,
    M27_AXI_wvalid,
    M28_AXI_araddr,
    M28_AXI_arprot,
    M28_AXI_arready,
    M28_AXI_arvalid,
    M28_AXI_awaddr,
    M28_AXI_awprot,
    M28_AXI_awready,
    M28_AXI_awvalid,
    M28_AXI_bready,
    M28_AXI_bresp,
    M28_AXI_bvalid,
    M28_AXI_rdata,
    M28_AXI_rready,
    M28_AXI_rresp,
    M28_AXI_rvalid,
    M28_AXI_wdata,
    M28_AXI_wready,
    M28_AXI_wstrb,
    M28_AXI_wvalid,
    M29_AXI_araddr,
    M29_AXI_arprot,
    M29_AXI_arready,
    M29_AXI_arvalid,
    M29_AXI_awaddr,
    M29_AXI_awprot,
    M29_AXI_awready,
    M29_AXI_awvalid,
    M29_AXI_bready,
    M29_AXI_bresp,
    M29_AXI_bvalid,
    M29_AXI_rdata,
    M29_AXI_rready,
    M29_AXI_rresp,
    M29_AXI_rvalid,
    M29_AXI_wdata,
    M29_AXI_wready,
    M29_AXI_wstrb,
    M29_AXI_wvalid,
    M30_AXI_araddr,
    M30_AXI_arprot,
    M30_AXI_arready,
    M30_AXI_arvalid,
    M30_AXI_awaddr,
    M30_AXI_awprot,
    M30_AXI_awready,
    M30_AXI_awvalid,
    M30_AXI_bready,
    M30_AXI_bresp,
    M30_AXI_bvalid,
    M30_AXI_rdata,
    M30_AXI_rready,
    M30_AXI_rresp,
    M30_AXI_rvalid,
    M30_AXI_wdata,
    M30_AXI_wready,
    M30_AXI_wstrb,
    M30_AXI_wvalid,
    M31_AXI_araddr,
    M31_AXI_arprot,
    M31_AXI_arready,
    M31_AXI_arvalid,
    M31_AXI_awaddr,
    M31_AXI_awprot,
    M31_AXI_awready,
    M31_AXI_awvalid,
    M31_AXI_bready,
    M31_AXI_bresp,
    M31_AXI_bvalid,
    M31_AXI_rdata,
    M31_AXI_rready,
    M31_AXI_rresp,
    M31_AXI_rvalid,
    M31_AXI_wdata,
    M31_AXI_wready,
    M31_AXI_wstrb,
    M31_AXI_wvalid,
    M32_AXI_araddr,
    M32_AXI_arprot,
    M32_AXI_arready,
    M32_AXI_arvalid,
    M32_AXI_awaddr,
    M32_AXI_awprot,
    M32_AXI_awready,
    M32_AXI_awvalid,
    M32_AXI_bready,
    M32_AXI_bresp,
    M32_AXI_bvalid,
    M32_AXI_rdata,
    M32_AXI_rready,
    M32_AXI_rresp,
    M32_AXI_rvalid,
    M32_AXI_wdata,
    M32_AXI_wready,
    M32_AXI_wstrb,
    M32_AXI_wvalid,
    M33_AXI_araddr,
    M33_AXI_arprot,
    M33_AXI_arready,
    M33_AXI_arvalid,
    M33_AXI_awaddr,
    M33_AXI_awprot,
    M33_AXI_awready,
    M33_AXI_awvalid,
    M33_AXI_bready,
    M33_AXI_bresp,
    M33_AXI_bvalid,
    M33_AXI_rdata,
    M33_AXI_rready,
    M33_AXI_rresp,
    M33_AXI_rvalid,
    M33_AXI_wdata,
    M33_AXI_wready,
    M33_AXI_wstrb,
    M33_AXI_wvalid,
    M34_AXI_araddr,
    M34_AXI_arprot,
    M34_AXI_arready,
    M34_AXI_arvalid,
    M34_AXI_awaddr,
    M34_AXI_awprot,
    M34_AXI_awready,
    M34_AXI_awvalid,
    M34_AXI_bready,
    M34_AXI_bresp,
    M34_AXI_bvalid,
    M34_AXI_rdata,
    M34_AXI_rready,
    M34_AXI_rresp,
    M34_AXI_rvalid,
    M34_AXI_wdata,
    M34_AXI_wready,
    M34_AXI_wstrb,
    M34_AXI_wvalid,
    M35_AXI_araddr,
    M35_AXI_arprot,
    M35_AXI_arready,
    M35_AXI_arvalid,
    M35_AXI_awaddr,
    M35_AXI_awprot,
    M35_AXI_awready,
    M35_AXI_awvalid,
    M35_AXI_bready,
    M35_AXI_bresp,
    M35_AXI_bvalid,
    M35_AXI_rdata,
    M35_AXI_rready,
    M35_AXI_rresp,
    M35_AXI_rvalid,
    M35_AXI_wdata,
    M35_AXI_wready,
    M35_AXI_wstrb,
    M35_AXI_wvalid,
    M36_AXI_araddr,
    M36_AXI_arprot,
    M36_AXI_arready,
    M36_AXI_arvalid,
    M36_AXI_awaddr,
    M36_AXI_awprot,
    M36_AXI_awready,
    M36_AXI_awvalid,
    M36_AXI_bready,
    M36_AXI_bresp,
    M36_AXI_bvalid,
    M36_AXI_rdata,
    M36_AXI_rready,
    M36_AXI_rresp,
    M36_AXI_rvalid,
    M36_AXI_wdata,
    M36_AXI_wready,
    M36_AXI_wstrb,
    M36_AXI_wvalid,
    M37_AXI_araddr,
    M37_AXI_arprot,
    M37_AXI_arready,
    M37_AXI_arvalid,
    M37_AXI_awaddr,
    M37_AXI_awprot,
    M37_AXI_awready,
    M37_AXI_awvalid,
    M37_AXI_bready,
    M37_AXI_bresp,
    M37_AXI_bvalid,
    M37_AXI_rdata,
    M37_AXI_rready,
    M37_AXI_rresp,
    M37_AXI_rvalid,
    M37_AXI_wdata,
    M37_AXI_wready,
    M37_AXI_wstrb,
    M37_AXI_wvalid,
    M38_AXI_araddr,
    M38_AXI_arprot,
    M38_AXI_arready,
    M38_AXI_arvalid,
    M38_AXI_awaddr,
    M38_AXI_awprot,
    M38_AXI_awready,
    M38_AXI_awvalid,
    M38_AXI_bready,
    M38_AXI_bresp,
    M38_AXI_bvalid,
    M38_AXI_rdata,
    M38_AXI_rready,
    M38_AXI_rresp,
    M38_AXI_rvalid,
    M38_AXI_wdata,
    M38_AXI_wready,
    M38_AXI_wstrb,
    M38_AXI_wvalid,
    M39_AXI_araddr,
    M39_AXI_arprot,
    M39_AXI_arready,
    M39_AXI_arvalid,
    M39_AXI_awaddr,
    M39_AXI_awprot,
    M39_AXI_awready,
    M39_AXI_awvalid,
    M39_AXI_bready,
    M39_AXI_bresp,
    M39_AXI_bvalid,
    M39_AXI_rdata,
    M39_AXI_rready,
    M39_AXI_rresp,
    M39_AXI_rvalid,
    M39_AXI_wdata,
    M39_AXI_wready,
    M39_AXI_wstrb,
    M39_AXI_wvalid,
    M40_AXI_araddr,
    M40_AXI_arprot,
    M40_AXI_arready,
    M40_AXI_arvalid,
    M40_AXI_awaddr,
    M40_AXI_awprot,
    M40_AXI_awready,
    M40_AXI_awvalid,
    M40_AXI_bready,
    M40_AXI_bresp,
    M40_AXI_bvalid,
    M40_AXI_rdata,
    M40_AXI_rready,
    M40_AXI_rresp,
    M40_AXI_rvalid,
    M40_AXI_wdata,
    M40_AXI_wready,
    M40_AXI_wstrb,
    M40_AXI_wvalid,
    M41_AXI_araddr,
    M41_AXI_arprot,
    M41_AXI_arready,
    M41_AXI_arvalid,
    M41_AXI_awaddr,
    M41_AXI_awprot,
    M41_AXI_awready,
    M41_AXI_awvalid,
    M41_AXI_bready,
    M41_AXI_bresp,
    M41_AXI_bvalid,
    M41_AXI_rdata,
    M41_AXI_rready,
    M41_AXI_rresp,
    M41_AXI_rvalid,
    M41_AXI_wdata,
    M41_AXI_wready,
    M41_AXI_wstrb,
    M41_AXI_wvalid,
    M42_AXI_araddr,
    M42_AXI_arprot,
    M42_AXI_arready,
    M42_AXI_arvalid,
    M42_AXI_awaddr,
    M42_AXI_awprot,
    M42_AXI_awready,
    M42_AXI_awvalid,
    M42_AXI_bready,
    M42_AXI_bresp,
    M42_AXI_bvalid,
    M42_AXI_rdata,
    M42_AXI_rready,
    M42_AXI_rresp,
    M42_AXI_rvalid,
    M42_AXI_wdata,
    M42_AXI_wready,
    M42_AXI_wstrb,
    M42_AXI_wvalid,
    M43_AXI_araddr,
    M43_AXI_arprot,
    M43_AXI_arready,
    M43_AXI_arvalid,
    M43_AXI_awaddr,
    M43_AXI_awprot,
    M43_AXI_awready,
    M43_AXI_awvalid,
    M43_AXI_bready,
    M43_AXI_bresp,
    M43_AXI_bvalid,
    M43_AXI_rdata,
    M43_AXI_rready,
    M43_AXI_rresp,
    M43_AXI_rvalid,
    M43_AXI_wdata,
    M43_AXI_wready,
    M43_AXI_wstrb,
    M43_AXI_wvalid,
    M44_AXI_araddr,
    M44_AXI_arprot,
    M44_AXI_arready,
    M44_AXI_arvalid,
    M44_AXI_awaddr,
    M44_AXI_awprot,
    M44_AXI_awready,
    M44_AXI_awvalid,
    M44_AXI_bready,
    M44_AXI_bresp,
    M44_AXI_bvalid,
    M44_AXI_rdata,
    M44_AXI_rready,
    M44_AXI_rresp,
    M44_AXI_rvalid,
    M44_AXI_wdata,
    M44_AXI_wready,
    M44_AXI_wstrb,
    M44_AXI_wvalid,
    M45_AXI_araddr,
    M45_AXI_arprot,
    M45_AXI_arready,
    M45_AXI_arvalid,
    M45_AXI_awaddr,
    M45_AXI_awprot,
    M45_AXI_awready,
    M45_AXI_awvalid,
    M45_AXI_bready,
    M45_AXI_bresp,
    M45_AXI_bvalid,
    M45_AXI_rdata,
    M45_AXI_rready,
    M45_AXI_rresp,
    M45_AXI_rvalid,
    M45_AXI_wdata,
    M45_AXI_wready,
    M45_AXI_wstrb,
    M45_AXI_wvalid,
    M46_AXI_araddr,
    M46_AXI_arprot,
    M46_AXI_arready,
    M46_AXI_arvalid,
    M46_AXI_awaddr,
    M46_AXI_awprot,
    M46_AXI_awready,
    M46_AXI_awvalid,
    M46_AXI_bready,
    M46_AXI_bresp,
    M46_AXI_bvalid,
    M46_AXI_rdata,
    M46_AXI_rready,
    M46_AXI_rresp,
    M46_AXI_rvalid,
    M46_AXI_wdata,
    M46_AXI_wready,
    M46_AXI_wstrb,
    M46_AXI_wvalid,
    M47_AXI_araddr,
    M47_AXI_arprot,
    M47_AXI_arready,
    M47_AXI_arvalid,
    M47_AXI_awaddr,
    M47_AXI_awprot,
    M47_AXI_awready,
    M47_AXI_awvalid,
    M47_AXI_bready,
    M47_AXI_bresp,
    M47_AXI_bvalid,
    M47_AXI_rdata,
    M47_AXI_rready,
    M47_AXI_rresp,
    M47_AXI_rvalid,
    M47_AXI_wdata,
    M47_AXI_wready,
    M47_AXI_wstrb,
    M47_AXI_wvalid,
    M48_AXI_araddr,
    M48_AXI_arprot,
    M48_AXI_arready,
    M48_AXI_arvalid,
    M48_AXI_awaddr,
    M48_AXI_awprot,
    M48_AXI_awready,
    M48_AXI_awvalid,
    M48_AXI_bready,
    M48_AXI_bresp,
    M48_AXI_bvalid,
    M48_AXI_rdata,
    M48_AXI_rready,
    M48_AXI_rresp,
    M48_AXI_rvalid,
    M48_AXI_wdata,
    M48_AXI_wready,
    M48_AXI_wstrb,
    M48_AXI_wvalid,
    M49_AXI_araddr,
    M49_AXI_arprot,
    M49_AXI_arready,
    M49_AXI_arvalid,
    M49_AXI_awaddr,
    M49_AXI_awprot,
    M49_AXI_awready,
    M49_AXI_awvalid,
    M49_AXI_bready,
    M49_AXI_bresp,
    M49_AXI_bvalid,
    M49_AXI_rdata,
    M49_AXI_rready,
    M49_AXI_rresp,
    M49_AXI_rvalid,
    M49_AXI_wdata,
    M49_AXI_wready,
    M49_AXI_wstrb,
    M49_AXI_wvalid,
    M50_AXI_araddr,
    M50_AXI_arprot,
    M50_AXI_arready,
    M50_AXI_arvalid,
    M50_AXI_awaddr,
    M50_AXI_awprot,
    M50_AXI_awready,
    M50_AXI_awvalid,
    M50_AXI_bready,
    M50_AXI_bresp,
    M50_AXI_bvalid,
    M50_AXI_rdata,
    M50_AXI_rready,
    M50_AXI_rresp,
    M50_AXI_rvalid,
    M50_AXI_wdata,
    M50_AXI_wready,
    M50_AXI_wstrb,
    M50_AXI_wvalid,
    S00_AXI_araddr,
    S00_AXI_arburst,
    S00_AXI_arcache,
    S00_AXI_arid,
    S00_AXI_arlen,
    S00_AXI_arlock,
    S00_AXI_arprot,
    S00_AXI_arqos,
    S00_AXI_arready,
    S00_AXI_arsize,
    S00_AXI_aruser,
    S00_AXI_arvalid,
    S00_AXI_awaddr,
    S00_AXI_awburst,
    S00_AXI_awcache,
    S00_AXI_awid,
    S00_AXI_awlen,
    S00_AXI_awlock,
    S00_AXI_awprot,
    S00_AXI_awqos,
    S00_AXI_awready,
    S00_AXI_awsize,
    S00_AXI_awuser,
    S00_AXI_awvalid,
    S00_AXI_bid,
    S00_AXI_bready,
    S00_AXI_bresp,
    S00_AXI_bvalid,
    S00_AXI_rdata,
    S00_AXI_rid,
    S00_AXI_rlast,
    S00_AXI_rready,
    S00_AXI_rresp,
    S00_AXI_rvalid,
    S00_AXI_wdata,
    S00_AXI_wlast,
    S00_AXI_wready,
    S00_AXI_wstrb,
    S00_AXI_wvalid,
    aclk,
    aresetn);
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M00_AXI ARADDR" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME M00_AXI, ADDR_WIDTH 13, ARUSER_WIDTH 16, AWUSER_WIDTH 16, BUSER_WIDTH 0, CLK_DOMAIN design_1_zynq_ultra_ps_e_0_0_pl_clk0, DATA_WIDTH 32, FREQ_HZ 96968727, HAS_BRESP 1, HAS_BURST 1, HAS_CACHE 1, HAS_LOCK 1, HAS_PROT 1, HAS_QOS 1, HAS_REGION 0, HAS_RRESP 1, HAS_WSTRB 1, ID_WIDTH 0, INSERT_VIP 0, MAX_BURST_LENGTH 256, NUM_READ_OUTSTANDING 8, NUM_READ_THREADS 1, NUM_WRITE_OUTSTANDING 8, NUM_WRITE_THREADS 1, PHASE 0.0, PROTOCOL AXI4, READ_WRITE_MODE READ_WRITE, RUSER_BITS_PER_BYTE 0, RUSER_WIDTH 0, SUPPORTS_NARROW_BURST 0, WUSER_BITS_PER_BYTE 0, WUSER_WIDTH 0" *) output [12:0]M00_AXI_araddr;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M00_AXI ARBURST" *) output [1:0]M00_AXI_arburst;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M00_AXI ARCACHE" *) output [3:0]M00_AXI_arcache;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M00_AXI ARLEN" *) output [7:0]M00_AXI_arlen;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M00_AXI ARLOCK" *) output [0:0]M00_AXI_arlock;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M00_AXI ARPROT" *) output [2:0]M00_AXI_arprot;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M00_AXI ARQOS" *) output [3:0]M00_AXI_arqos;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M00_AXI ARREADY" *) input M00_AXI_arready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M00_AXI ARSIZE" *) output [2:0]M00_AXI_arsize;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M00_AXI ARUSER" *) output [15:0]M00_AXI_aruser;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M00_AXI ARVALID" *) output M00_AXI_arvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M00_AXI AWADDR" *) output [12:0]M00_AXI_awaddr;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M00_AXI AWBURST" *) output [1:0]M00_AXI_awburst;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M00_AXI AWCACHE" *) output [3:0]M00_AXI_awcache;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M00_AXI AWLEN" *) output [7:0]M00_AXI_awlen;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M00_AXI AWLOCK" *) output [0:0]M00_AXI_awlock;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M00_AXI AWPROT" *) output [2:0]M00_AXI_awprot;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M00_AXI AWQOS" *) output [3:0]M00_AXI_awqos;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M00_AXI AWREADY" *) input M00_AXI_awready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M00_AXI AWSIZE" *) output [2:0]M00_AXI_awsize;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M00_AXI AWUSER" *) output [15:0]M00_AXI_awuser;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M00_AXI AWVALID" *) output M00_AXI_awvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M00_AXI BREADY" *) output M00_AXI_bready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M00_AXI BRESP" *) input [1:0]M00_AXI_bresp;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M00_AXI BVALID" *) input M00_AXI_bvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M00_AXI RDATA" *) input [31:0]M00_AXI_rdata;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M00_AXI RLAST" *) input M00_AXI_rlast;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M00_AXI RREADY" *) output M00_AXI_rready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M00_AXI RRESP" *) input [1:0]M00_AXI_rresp;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M00_AXI RVALID" *) input M00_AXI_rvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M00_AXI WDATA" *) output [31:0]M00_AXI_wdata;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M00_AXI WLAST" *) output M00_AXI_wlast;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M00_AXI WREADY" *) input M00_AXI_wready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M00_AXI WSTRB" *) output [3:0]M00_AXI_wstrb;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M00_AXI WVALID" *) output M00_AXI_wvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M01_AXI ARADDR" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME M01_AXI, ADDR_WIDTH 13, ARUSER_WIDTH 16, AWUSER_WIDTH 16, BUSER_WIDTH 0, CLK_DOMAIN design_1_zynq_ultra_ps_e_0_0_pl_clk0, DATA_WIDTH 32, FREQ_HZ 96968727, HAS_BRESP 1, HAS_BURST 1, HAS_CACHE 1, HAS_LOCK 1, HAS_PROT 1, HAS_QOS 1, HAS_REGION 0, HAS_RRESP 1, HAS_WSTRB 1, ID_WIDTH 0, INSERT_VIP 0, MAX_BURST_LENGTH 256, NUM_READ_OUTSTANDING 8, NUM_READ_THREADS 1, NUM_WRITE_OUTSTANDING 8, NUM_WRITE_THREADS 1, PHASE 0.0, PROTOCOL AXI4, READ_WRITE_MODE READ_WRITE, RUSER_BITS_PER_BYTE 0, RUSER_WIDTH 0, SUPPORTS_NARROW_BURST 0, WUSER_BITS_PER_BYTE 0, WUSER_WIDTH 0" *) output [12:0]M01_AXI_araddr;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M01_AXI ARBURST" *) output [1:0]M01_AXI_arburst;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M01_AXI ARCACHE" *) output [3:0]M01_AXI_arcache;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M01_AXI ARLEN" *) output [7:0]M01_AXI_arlen;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M01_AXI ARLOCK" *) output [0:0]M01_AXI_arlock;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M01_AXI ARPROT" *) output [2:0]M01_AXI_arprot;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M01_AXI ARQOS" *) output [3:0]M01_AXI_arqos;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M01_AXI ARREADY" *) input M01_AXI_arready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M01_AXI ARSIZE" *) output [2:0]M01_AXI_arsize;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M01_AXI ARUSER" *) output [15:0]M01_AXI_aruser;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M01_AXI ARVALID" *) output M01_AXI_arvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M01_AXI AWADDR" *) output [12:0]M01_AXI_awaddr;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M01_AXI AWBURST" *) output [1:0]M01_AXI_awburst;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M01_AXI AWCACHE" *) output [3:0]M01_AXI_awcache;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M01_AXI AWLEN" *) output [7:0]M01_AXI_awlen;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M01_AXI AWLOCK" *) output [0:0]M01_AXI_awlock;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M01_AXI AWPROT" *) output [2:0]M01_AXI_awprot;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M01_AXI AWQOS" *) output [3:0]M01_AXI_awqos;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M01_AXI AWREADY" *) input M01_AXI_awready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M01_AXI AWSIZE" *) output [2:0]M01_AXI_awsize;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M01_AXI AWUSER" *) output [15:0]M01_AXI_awuser;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M01_AXI AWVALID" *) output M01_AXI_awvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M01_AXI BREADY" *) output M01_AXI_bready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M01_AXI BRESP" *) input [1:0]M01_AXI_bresp;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M01_AXI BVALID" *) input M01_AXI_bvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M01_AXI RDATA" *) input [31:0]M01_AXI_rdata;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M01_AXI RLAST" *) input M01_AXI_rlast;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M01_AXI RREADY" *) output M01_AXI_rready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M01_AXI RRESP" *) input [1:0]M01_AXI_rresp;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M01_AXI RVALID" *) input M01_AXI_rvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M01_AXI WDATA" *) output [31:0]M01_AXI_wdata;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M01_AXI WLAST" *) output M01_AXI_wlast;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M01_AXI WREADY" *) input M01_AXI_wready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M01_AXI WSTRB" *) output [3:0]M01_AXI_wstrb;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M01_AXI WVALID" *) output M01_AXI_wvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M02_AXI ARADDR" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME M02_AXI, ADDR_WIDTH 13, ARUSER_WIDTH 16, AWUSER_WIDTH 16, BUSER_WIDTH 0, CLK_DOMAIN design_1_zynq_ultra_ps_e_0_0_pl_clk0, DATA_WIDTH 32, FREQ_HZ 96968727, HAS_BRESP 1, HAS_BURST 1, HAS_CACHE 1, HAS_LOCK 1, HAS_PROT 1, HAS_QOS 1, HAS_REGION 0, HAS_RRESP 1, HAS_WSTRB 1, ID_WIDTH 0, INSERT_VIP 0, MAX_BURST_LENGTH 256, NUM_READ_OUTSTANDING 8, NUM_READ_THREADS 1, NUM_WRITE_OUTSTANDING 8, NUM_WRITE_THREADS 1, PHASE 0.0, PROTOCOL AXI4, READ_WRITE_MODE READ_WRITE, RUSER_BITS_PER_BYTE 0, RUSER_WIDTH 0, SUPPORTS_NARROW_BURST 0, WUSER_BITS_PER_BYTE 0, WUSER_WIDTH 0" *) output [12:0]M02_AXI_araddr;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M02_AXI ARBURST" *) output [1:0]M02_AXI_arburst;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M02_AXI ARCACHE" *) output [3:0]M02_AXI_arcache;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M02_AXI ARLEN" *) output [7:0]M02_AXI_arlen;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M02_AXI ARLOCK" *) output [0:0]M02_AXI_arlock;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M02_AXI ARPROT" *) output [2:0]M02_AXI_arprot;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M02_AXI ARQOS" *) output [3:0]M02_AXI_arqos;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M02_AXI ARREADY" *) input M02_AXI_arready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M02_AXI ARSIZE" *) output [2:0]M02_AXI_arsize;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M02_AXI ARUSER" *) output [15:0]M02_AXI_aruser;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M02_AXI ARVALID" *) output M02_AXI_arvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M02_AXI AWADDR" *) output [12:0]M02_AXI_awaddr;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M02_AXI AWBURST" *) output [1:0]M02_AXI_awburst;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M02_AXI AWCACHE" *) output [3:0]M02_AXI_awcache;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M02_AXI AWLEN" *) output [7:0]M02_AXI_awlen;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M02_AXI AWLOCK" *) output [0:0]M02_AXI_awlock;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M02_AXI AWPROT" *) output [2:0]M02_AXI_awprot;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M02_AXI AWQOS" *) output [3:0]M02_AXI_awqos;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M02_AXI AWREADY" *) input M02_AXI_awready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M02_AXI AWSIZE" *) output [2:0]M02_AXI_awsize;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M02_AXI AWUSER" *) output [15:0]M02_AXI_awuser;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M02_AXI AWVALID" *) output M02_AXI_awvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M02_AXI BREADY" *) output M02_AXI_bready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M02_AXI BRESP" *) input [1:0]M02_AXI_bresp;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M02_AXI BVALID" *) input M02_AXI_bvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M02_AXI RDATA" *) input [31:0]M02_AXI_rdata;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M02_AXI RLAST" *) input M02_AXI_rlast;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M02_AXI RREADY" *) output M02_AXI_rready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M02_AXI RRESP" *) input [1:0]M02_AXI_rresp;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M02_AXI RVALID" *) input M02_AXI_rvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M02_AXI WDATA" *) output [31:0]M02_AXI_wdata;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M02_AXI WLAST" *) output M02_AXI_wlast;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M02_AXI WREADY" *) input M02_AXI_wready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M02_AXI WSTRB" *) output [3:0]M02_AXI_wstrb;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M02_AXI WVALID" *) output M02_AXI_wvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M03_AXI ARADDR" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME M03_AXI, ADDR_WIDTH 13, ARUSER_WIDTH 16, AWUSER_WIDTH 16, BUSER_WIDTH 0, CLK_DOMAIN design_1_zynq_ultra_ps_e_0_0_pl_clk0, DATA_WIDTH 32, FREQ_HZ 96968727, HAS_BRESP 1, HAS_BURST 1, HAS_CACHE 1, HAS_LOCK 1, HAS_PROT 1, HAS_QOS 1, HAS_REGION 0, HAS_RRESP 1, HAS_WSTRB 1, ID_WIDTH 0, INSERT_VIP 0, MAX_BURST_LENGTH 256, NUM_READ_OUTSTANDING 8, NUM_READ_THREADS 1, NUM_WRITE_OUTSTANDING 8, NUM_WRITE_THREADS 1, PHASE 0.0, PROTOCOL AXI4, READ_WRITE_MODE READ_WRITE, RUSER_BITS_PER_BYTE 0, RUSER_WIDTH 0, SUPPORTS_NARROW_BURST 0, WUSER_BITS_PER_BYTE 0, WUSER_WIDTH 0" *) output [12:0]M03_AXI_araddr;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M03_AXI ARBURST" *) output [1:0]M03_AXI_arburst;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M03_AXI ARCACHE" *) output [3:0]M03_AXI_arcache;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M03_AXI ARLEN" *) output [7:0]M03_AXI_arlen;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M03_AXI ARLOCK" *) output [0:0]M03_AXI_arlock;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M03_AXI ARPROT" *) output [2:0]M03_AXI_arprot;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M03_AXI ARQOS" *) output [3:0]M03_AXI_arqos;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M03_AXI ARREADY" *) input M03_AXI_arready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M03_AXI ARSIZE" *) output [2:0]M03_AXI_arsize;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M03_AXI ARUSER" *) output [15:0]M03_AXI_aruser;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M03_AXI ARVALID" *) output M03_AXI_arvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M03_AXI AWADDR" *) output [12:0]M03_AXI_awaddr;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M03_AXI AWBURST" *) output [1:0]M03_AXI_awburst;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M03_AXI AWCACHE" *) output [3:0]M03_AXI_awcache;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M03_AXI AWLEN" *) output [7:0]M03_AXI_awlen;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M03_AXI AWLOCK" *) output [0:0]M03_AXI_awlock;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M03_AXI AWPROT" *) output [2:0]M03_AXI_awprot;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M03_AXI AWQOS" *) output [3:0]M03_AXI_awqos;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M03_AXI AWREADY" *) input M03_AXI_awready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M03_AXI AWSIZE" *) output [2:0]M03_AXI_awsize;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M03_AXI AWUSER" *) output [15:0]M03_AXI_awuser;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M03_AXI AWVALID" *) output M03_AXI_awvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M03_AXI BREADY" *) output M03_AXI_bready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M03_AXI BRESP" *) input [1:0]M03_AXI_bresp;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M03_AXI BVALID" *) input M03_AXI_bvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M03_AXI RDATA" *) input [31:0]M03_AXI_rdata;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M03_AXI RLAST" *) input M03_AXI_rlast;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M03_AXI RREADY" *) output M03_AXI_rready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M03_AXI RRESP" *) input [1:0]M03_AXI_rresp;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M03_AXI RVALID" *) input M03_AXI_rvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M03_AXI WDATA" *) output [31:0]M03_AXI_wdata;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M03_AXI WLAST" *) output M03_AXI_wlast;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M03_AXI WREADY" *) input M03_AXI_wready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M03_AXI WSTRB" *) output [3:0]M03_AXI_wstrb;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M03_AXI WVALID" *) output M03_AXI_wvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M04_AXI ARADDR" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME M04_AXI, ADDR_WIDTH 13, ARUSER_WIDTH 16, AWUSER_WIDTH 16, BUSER_WIDTH 0, CLK_DOMAIN design_1_zynq_ultra_ps_e_0_0_pl_clk0, DATA_WIDTH 32, FREQ_HZ 96968727, HAS_BRESP 1, HAS_BURST 1, HAS_CACHE 1, HAS_LOCK 1, HAS_PROT 1, HAS_QOS 1, HAS_REGION 0, HAS_RRESP 1, HAS_WSTRB 1, ID_WIDTH 0, INSERT_VIP 0, MAX_BURST_LENGTH 256, NUM_READ_OUTSTANDING 8, NUM_READ_THREADS 1, NUM_WRITE_OUTSTANDING 8, NUM_WRITE_THREADS 1, PHASE 0.0, PROTOCOL AXI4, READ_WRITE_MODE READ_WRITE, RUSER_BITS_PER_BYTE 0, RUSER_WIDTH 0, SUPPORTS_NARROW_BURST 0, WUSER_BITS_PER_BYTE 0, WUSER_WIDTH 0" *) output [12:0]M04_AXI_araddr;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M04_AXI ARBURST" *) output [1:0]M04_AXI_arburst;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M04_AXI ARCACHE" *) output [3:0]M04_AXI_arcache;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M04_AXI ARLEN" *) output [7:0]M04_AXI_arlen;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M04_AXI ARLOCK" *) output [0:0]M04_AXI_arlock;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M04_AXI ARPROT" *) output [2:0]M04_AXI_arprot;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M04_AXI ARQOS" *) output [3:0]M04_AXI_arqos;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M04_AXI ARREADY" *) input M04_AXI_arready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M04_AXI ARSIZE" *) output [2:0]M04_AXI_arsize;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M04_AXI ARUSER" *) output [15:0]M04_AXI_aruser;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M04_AXI ARVALID" *) output M04_AXI_arvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M04_AXI AWADDR" *) output [12:0]M04_AXI_awaddr;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M04_AXI AWBURST" *) output [1:0]M04_AXI_awburst;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M04_AXI AWCACHE" *) output [3:0]M04_AXI_awcache;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M04_AXI AWLEN" *) output [7:0]M04_AXI_awlen;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M04_AXI AWLOCK" *) output [0:0]M04_AXI_awlock;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M04_AXI AWPROT" *) output [2:0]M04_AXI_awprot;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M04_AXI AWQOS" *) output [3:0]M04_AXI_awqos;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M04_AXI AWREADY" *) input M04_AXI_awready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M04_AXI AWSIZE" *) output [2:0]M04_AXI_awsize;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M04_AXI AWUSER" *) output [15:0]M04_AXI_awuser;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M04_AXI AWVALID" *) output M04_AXI_awvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M04_AXI BREADY" *) output M04_AXI_bready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M04_AXI BRESP" *) input [1:0]M04_AXI_bresp;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M04_AXI BVALID" *) input M04_AXI_bvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M04_AXI RDATA" *) input [31:0]M04_AXI_rdata;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M04_AXI RLAST" *) input M04_AXI_rlast;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M04_AXI RREADY" *) output M04_AXI_rready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M04_AXI RRESP" *) input [1:0]M04_AXI_rresp;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M04_AXI RVALID" *) input M04_AXI_rvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M04_AXI WDATA" *) output [31:0]M04_AXI_wdata;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M04_AXI WLAST" *) output M04_AXI_wlast;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M04_AXI WREADY" *) input M04_AXI_wready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M04_AXI WSTRB" *) output [3:0]M04_AXI_wstrb;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M04_AXI WVALID" *) output M04_AXI_wvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M05_AXI ARADDR" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME M05_AXI, ADDR_WIDTH 13, ARUSER_WIDTH 16, AWUSER_WIDTH 16, BUSER_WIDTH 0, CLK_DOMAIN design_1_zynq_ultra_ps_e_0_0_pl_clk0, DATA_WIDTH 32, FREQ_HZ 96968727, HAS_BRESP 1, HAS_BURST 1, HAS_CACHE 1, HAS_LOCK 1, HAS_PROT 1, HAS_QOS 1, HAS_REGION 0, HAS_RRESP 1, HAS_WSTRB 1, ID_WIDTH 0, INSERT_VIP 0, MAX_BURST_LENGTH 256, NUM_READ_OUTSTANDING 8, NUM_READ_THREADS 1, NUM_WRITE_OUTSTANDING 8, NUM_WRITE_THREADS 1, PHASE 0.0, PROTOCOL AXI4, READ_WRITE_MODE READ_WRITE, RUSER_BITS_PER_BYTE 0, RUSER_WIDTH 0, SUPPORTS_NARROW_BURST 0, WUSER_BITS_PER_BYTE 0, WUSER_WIDTH 0" *) output [12:0]M05_AXI_araddr;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M05_AXI ARBURST" *) output [1:0]M05_AXI_arburst;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M05_AXI ARCACHE" *) output [3:0]M05_AXI_arcache;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M05_AXI ARLEN" *) output [7:0]M05_AXI_arlen;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M05_AXI ARLOCK" *) output [0:0]M05_AXI_arlock;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M05_AXI ARPROT" *) output [2:0]M05_AXI_arprot;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M05_AXI ARQOS" *) output [3:0]M05_AXI_arqos;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M05_AXI ARREADY" *) input M05_AXI_arready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M05_AXI ARSIZE" *) output [2:0]M05_AXI_arsize;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M05_AXI ARUSER" *) output [15:0]M05_AXI_aruser;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M05_AXI ARVALID" *) output M05_AXI_arvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M05_AXI AWADDR" *) output [12:0]M05_AXI_awaddr;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M05_AXI AWBURST" *) output [1:0]M05_AXI_awburst;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M05_AXI AWCACHE" *) output [3:0]M05_AXI_awcache;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M05_AXI AWLEN" *) output [7:0]M05_AXI_awlen;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M05_AXI AWLOCK" *) output [0:0]M05_AXI_awlock;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M05_AXI AWPROT" *) output [2:0]M05_AXI_awprot;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M05_AXI AWQOS" *) output [3:0]M05_AXI_awqos;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M05_AXI AWREADY" *) input M05_AXI_awready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M05_AXI AWSIZE" *) output [2:0]M05_AXI_awsize;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M05_AXI AWUSER" *) output [15:0]M05_AXI_awuser;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M05_AXI AWVALID" *) output M05_AXI_awvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M05_AXI BREADY" *) output M05_AXI_bready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M05_AXI BRESP" *) input [1:0]M05_AXI_bresp;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M05_AXI BVALID" *) input M05_AXI_bvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M05_AXI RDATA" *) input [31:0]M05_AXI_rdata;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M05_AXI RLAST" *) input M05_AXI_rlast;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M05_AXI RREADY" *) output M05_AXI_rready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M05_AXI RRESP" *) input [1:0]M05_AXI_rresp;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M05_AXI RVALID" *) input M05_AXI_rvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M05_AXI WDATA" *) output [31:0]M05_AXI_wdata;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M05_AXI WLAST" *) output M05_AXI_wlast;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M05_AXI WREADY" *) input M05_AXI_wready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M05_AXI WSTRB" *) output [3:0]M05_AXI_wstrb;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M05_AXI WVALID" *) output M05_AXI_wvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M06_AXI ARADDR" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME M06_AXI, ADDR_WIDTH 13, ARUSER_WIDTH 16, AWUSER_WIDTH 16, BUSER_WIDTH 0, CLK_DOMAIN design_1_zynq_ultra_ps_e_0_0_pl_clk0, DATA_WIDTH 32, FREQ_HZ 96968727, HAS_BRESP 1, HAS_BURST 1, HAS_CACHE 1, HAS_LOCK 1, HAS_PROT 1, HAS_QOS 1, HAS_REGION 0, HAS_RRESP 1, HAS_WSTRB 1, ID_WIDTH 0, INSERT_VIP 0, MAX_BURST_LENGTH 256, NUM_READ_OUTSTANDING 8, NUM_READ_THREADS 1, NUM_WRITE_OUTSTANDING 8, NUM_WRITE_THREADS 1, PHASE 0.0, PROTOCOL AXI4, READ_WRITE_MODE READ_WRITE, RUSER_BITS_PER_BYTE 0, RUSER_WIDTH 0, SUPPORTS_NARROW_BURST 0, WUSER_BITS_PER_BYTE 0, WUSER_WIDTH 0" *) output [12:0]M06_AXI_araddr;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M06_AXI ARBURST" *) output [1:0]M06_AXI_arburst;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M06_AXI ARCACHE" *) output [3:0]M06_AXI_arcache;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M06_AXI ARLEN" *) output [7:0]M06_AXI_arlen;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M06_AXI ARLOCK" *) output [0:0]M06_AXI_arlock;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M06_AXI ARPROT" *) output [2:0]M06_AXI_arprot;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M06_AXI ARQOS" *) output [3:0]M06_AXI_arqos;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M06_AXI ARREADY" *) input M06_AXI_arready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M06_AXI ARSIZE" *) output [2:0]M06_AXI_arsize;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M06_AXI ARUSER" *) output [15:0]M06_AXI_aruser;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M06_AXI ARVALID" *) output M06_AXI_arvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M06_AXI AWADDR" *) output [12:0]M06_AXI_awaddr;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M06_AXI AWBURST" *) output [1:0]M06_AXI_awburst;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M06_AXI AWCACHE" *) output [3:0]M06_AXI_awcache;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M06_AXI AWLEN" *) output [7:0]M06_AXI_awlen;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M06_AXI AWLOCK" *) output [0:0]M06_AXI_awlock;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M06_AXI AWPROT" *) output [2:0]M06_AXI_awprot;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M06_AXI AWQOS" *) output [3:0]M06_AXI_awqos;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M06_AXI AWREADY" *) input M06_AXI_awready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M06_AXI AWSIZE" *) output [2:0]M06_AXI_awsize;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M06_AXI AWUSER" *) output [15:0]M06_AXI_awuser;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M06_AXI AWVALID" *) output M06_AXI_awvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M06_AXI BREADY" *) output M06_AXI_bready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M06_AXI BRESP" *) input [1:0]M06_AXI_bresp;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M06_AXI BVALID" *) input M06_AXI_bvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M06_AXI RDATA" *) input [31:0]M06_AXI_rdata;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M06_AXI RLAST" *) input M06_AXI_rlast;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M06_AXI RREADY" *) output M06_AXI_rready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M06_AXI RRESP" *) input [1:0]M06_AXI_rresp;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M06_AXI RVALID" *) input M06_AXI_rvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M06_AXI WDATA" *) output [31:0]M06_AXI_wdata;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M06_AXI WLAST" *) output M06_AXI_wlast;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M06_AXI WREADY" *) input M06_AXI_wready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M06_AXI WSTRB" *) output [3:0]M06_AXI_wstrb;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M06_AXI WVALID" *) output M06_AXI_wvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M07_AXI ARADDR" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME M07_AXI, ADDR_WIDTH 13, ARUSER_WIDTH 16, AWUSER_WIDTH 16, BUSER_WIDTH 0, CLK_DOMAIN design_1_zynq_ultra_ps_e_0_0_pl_clk0, DATA_WIDTH 32, FREQ_HZ 96968727, HAS_BRESP 1, HAS_BURST 1, HAS_CACHE 1, HAS_LOCK 1, HAS_PROT 1, HAS_QOS 1, HAS_REGION 0, HAS_RRESP 1, HAS_WSTRB 1, ID_WIDTH 0, INSERT_VIP 0, MAX_BURST_LENGTH 256, NUM_READ_OUTSTANDING 8, NUM_READ_THREADS 1, NUM_WRITE_OUTSTANDING 8, NUM_WRITE_THREADS 1, PHASE 0.0, PROTOCOL AXI4, READ_WRITE_MODE READ_WRITE, RUSER_BITS_PER_BYTE 0, RUSER_WIDTH 0, SUPPORTS_NARROW_BURST 0, WUSER_BITS_PER_BYTE 0, WUSER_WIDTH 0" *) output [12:0]M07_AXI_araddr;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M07_AXI ARBURST" *) output [1:0]M07_AXI_arburst;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M07_AXI ARCACHE" *) output [3:0]M07_AXI_arcache;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M07_AXI ARLEN" *) output [7:0]M07_AXI_arlen;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M07_AXI ARLOCK" *) output [0:0]M07_AXI_arlock;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M07_AXI ARPROT" *) output [2:0]M07_AXI_arprot;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M07_AXI ARQOS" *) output [3:0]M07_AXI_arqos;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M07_AXI ARREADY" *) input M07_AXI_arready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M07_AXI ARSIZE" *) output [2:0]M07_AXI_arsize;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M07_AXI ARUSER" *) output [15:0]M07_AXI_aruser;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M07_AXI ARVALID" *) output M07_AXI_arvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M07_AXI AWADDR" *) output [12:0]M07_AXI_awaddr;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M07_AXI AWBURST" *) output [1:0]M07_AXI_awburst;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M07_AXI AWCACHE" *) output [3:0]M07_AXI_awcache;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M07_AXI AWLEN" *) output [7:0]M07_AXI_awlen;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M07_AXI AWLOCK" *) output [0:0]M07_AXI_awlock;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M07_AXI AWPROT" *) output [2:0]M07_AXI_awprot;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M07_AXI AWQOS" *) output [3:0]M07_AXI_awqos;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M07_AXI AWREADY" *) input M07_AXI_awready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M07_AXI AWSIZE" *) output [2:0]M07_AXI_awsize;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M07_AXI AWUSER" *) output [15:0]M07_AXI_awuser;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M07_AXI AWVALID" *) output M07_AXI_awvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M07_AXI BREADY" *) output M07_AXI_bready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M07_AXI BRESP" *) input [1:0]M07_AXI_bresp;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M07_AXI BVALID" *) input M07_AXI_bvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M07_AXI RDATA" *) input [31:0]M07_AXI_rdata;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M07_AXI RLAST" *) input M07_AXI_rlast;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M07_AXI RREADY" *) output M07_AXI_rready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M07_AXI RRESP" *) input [1:0]M07_AXI_rresp;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M07_AXI RVALID" *) input M07_AXI_rvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M07_AXI WDATA" *) output [31:0]M07_AXI_wdata;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M07_AXI WLAST" *) output M07_AXI_wlast;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M07_AXI WREADY" *) input M07_AXI_wready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M07_AXI WSTRB" *) output [3:0]M07_AXI_wstrb;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M07_AXI WVALID" *) output M07_AXI_wvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M08_AXI ARADDR" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME M08_AXI, ADDR_WIDTH 13, ARUSER_WIDTH 16, AWUSER_WIDTH 16, BUSER_WIDTH 0, CLK_DOMAIN design_1_zynq_ultra_ps_e_0_0_pl_clk0, DATA_WIDTH 32, FREQ_HZ 96968727, HAS_BRESP 1, HAS_BURST 1, HAS_CACHE 1, HAS_LOCK 1, HAS_PROT 1, HAS_QOS 1, HAS_REGION 0, HAS_RRESP 1, HAS_WSTRB 1, ID_WIDTH 0, INSERT_VIP 0, MAX_BURST_LENGTH 256, NUM_READ_OUTSTANDING 8, NUM_READ_THREADS 1, NUM_WRITE_OUTSTANDING 8, NUM_WRITE_THREADS 1, PHASE 0.0, PROTOCOL AXI4, READ_WRITE_MODE READ_WRITE, RUSER_BITS_PER_BYTE 0, RUSER_WIDTH 0, SUPPORTS_NARROW_BURST 0, WUSER_BITS_PER_BYTE 0, WUSER_WIDTH 0" *) output [12:0]M08_AXI_araddr;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M08_AXI ARBURST" *) output [1:0]M08_AXI_arburst;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M08_AXI ARCACHE" *) output [3:0]M08_AXI_arcache;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M08_AXI ARLEN" *) output [7:0]M08_AXI_arlen;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M08_AXI ARLOCK" *) output [0:0]M08_AXI_arlock;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M08_AXI ARPROT" *) output [2:0]M08_AXI_arprot;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M08_AXI ARQOS" *) output [3:0]M08_AXI_arqos;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M08_AXI ARREADY" *) input M08_AXI_arready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M08_AXI ARSIZE" *) output [2:0]M08_AXI_arsize;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M08_AXI ARUSER" *) output [15:0]M08_AXI_aruser;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M08_AXI ARVALID" *) output M08_AXI_arvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M08_AXI AWADDR" *) output [12:0]M08_AXI_awaddr;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M08_AXI AWBURST" *) output [1:0]M08_AXI_awburst;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M08_AXI AWCACHE" *) output [3:0]M08_AXI_awcache;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M08_AXI AWLEN" *) output [7:0]M08_AXI_awlen;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M08_AXI AWLOCK" *) output [0:0]M08_AXI_awlock;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M08_AXI AWPROT" *) output [2:0]M08_AXI_awprot;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M08_AXI AWQOS" *) output [3:0]M08_AXI_awqos;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M08_AXI AWREADY" *) input M08_AXI_awready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M08_AXI AWSIZE" *) output [2:0]M08_AXI_awsize;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M08_AXI AWUSER" *) output [15:0]M08_AXI_awuser;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M08_AXI AWVALID" *) output M08_AXI_awvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M08_AXI BREADY" *) output M08_AXI_bready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M08_AXI BRESP" *) input [1:0]M08_AXI_bresp;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M08_AXI BVALID" *) input M08_AXI_bvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M08_AXI RDATA" *) input [31:0]M08_AXI_rdata;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M08_AXI RLAST" *) input M08_AXI_rlast;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M08_AXI RREADY" *) output M08_AXI_rready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M08_AXI RRESP" *) input [1:0]M08_AXI_rresp;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M08_AXI RVALID" *) input M08_AXI_rvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M08_AXI WDATA" *) output [31:0]M08_AXI_wdata;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M08_AXI WLAST" *) output M08_AXI_wlast;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M08_AXI WREADY" *) input M08_AXI_wready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M08_AXI WSTRB" *) output [3:0]M08_AXI_wstrb;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M08_AXI WVALID" *) output M08_AXI_wvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M09_AXI ARADDR" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME M09_AXI, ADDR_WIDTH 13, ARUSER_WIDTH 16, AWUSER_WIDTH 16, BUSER_WIDTH 0, CLK_DOMAIN design_1_zynq_ultra_ps_e_0_0_pl_clk0, DATA_WIDTH 32, FREQ_HZ 96968727, HAS_BRESP 1, HAS_BURST 1, HAS_CACHE 1, HAS_LOCK 1, HAS_PROT 1, HAS_QOS 1, HAS_REGION 0, HAS_RRESP 1, HAS_WSTRB 1, ID_WIDTH 0, INSERT_VIP 0, MAX_BURST_LENGTH 256, NUM_READ_OUTSTANDING 8, NUM_READ_THREADS 1, NUM_WRITE_OUTSTANDING 8, NUM_WRITE_THREADS 1, PHASE 0.0, PROTOCOL AXI4, READ_WRITE_MODE READ_WRITE, RUSER_BITS_PER_BYTE 0, RUSER_WIDTH 0, SUPPORTS_NARROW_BURST 0, WUSER_BITS_PER_BYTE 0, WUSER_WIDTH 0" *) output [12:0]M09_AXI_araddr;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M09_AXI ARBURST" *) output [1:0]M09_AXI_arburst;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M09_AXI ARCACHE" *) output [3:0]M09_AXI_arcache;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M09_AXI ARLEN" *) output [7:0]M09_AXI_arlen;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M09_AXI ARLOCK" *) output [0:0]M09_AXI_arlock;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M09_AXI ARPROT" *) output [2:0]M09_AXI_arprot;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M09_AXI ARQOS" *) output [3:0]M09_AXI_arqos;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M09_AXI ARREADY" *) input M09_AXI_arready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M09_AXI ARSIZE" *) output [2:0]M09_AXI_arsize;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M09_AXI ARUSER" *) output [15:0]M09_AXI_aruser;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M09_AXI ARVALID" *) output M09_AXI_arvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M09_AXI AWADDR" *) output [12:0]M09_AXI_awaddr;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M09_AXI AWBURST" *) output [1:0]M09_AXI_awburst;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M09_AXI AWCACHE" *) output [3:0]M09_AXI_awcache;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M09_AXI AWLEN" *) output [7:0]M09_AXI_awlen;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M09_AXI AWLOCK" *) output [0:0]M09_AXI_awlock;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M09_AXI AWPROT" *) output [2:0]M09_AXI_awprot;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M09_AXI AWQOS" *) output [3:0]M09_AXI_awqos;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M09_AXI AWREADY" *) input M09_AXI_awready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M09_AXI AWSIZE" *) output [2:0]M09_AXI_awsize;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M09_AXI AWUSER" *) output [15:0]M09_AXI_awuser;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M09_AXI AWVALID" *) output M09_AXI_awvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M09_AXI BREADY" *) output M09_AXI_bready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M09_AXI BRESP" *) input [1:0]M09_AXI_bresp;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M09_AXI BVALID" *) input M09_AXI_bvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M09_AXI RDATA" *) input [31:0]M09_AXI_rdata;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M09_AXI RLAST" *) input M09_AXI_rlast;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M09_AXI RREADY" *) output M09_AXI_rready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M09_AXI RRESP" *) input [1:0]M09_AXI_rresp;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M09_AXI RVALID" *) input M09_AXI_rvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M09_AXI WDATA" *) output [31:0]M09_AXI_wdata;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M09_AXI WLAST" *) output M09_AXI_wlast;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M09_AXI WREADY" *) input M09_AXI_wready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M09_AXI WSTRB" *) output [3:0]M09_AXI_wstrb;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M09_AXI WVALID" *) output M09_AXI_wvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M10_AXI ARADDR" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME M10_AXI, ADDR_WIDTH 13, ARUSER_WIDTH 16, AWUSER_WIDTH 16, BUSER_WIDTH 0, CLK_DOMAIN design_1_zynq_ultra_ps_e_0_0_pl_clk0, DATA_WIDTH 32, FREQ_HZ 96968727, HAS_BRESP 1, HAS_BURST 1, HAS_CACHE 1, HAS_LOCK 1, HAS_PROT 1, HAS_QOS 1, HAS_REGION 0, HAS_RRESP 1, HAS_WSTRB 1, ID_WIDTH 0, INSERT_VIP 0, MAX_BURST_LENGTH 256, NUM_READ_OUTSTANDING 8, NUM_READ_THREADS 1, NUM_WRITE_OUTSTANDING 8, NUM_WRITE_THREADS 1, PHASE 0.0, PROTOCOL AXI4, READ_WRITE_MODE READ_WRITE, RUSER_BITS_PER_BYTE 0, RUSER_WIDTH 0, SUPPORTS_NARROW_BURST 0, WUSER_BITS_PER_BYTE 0, WUSER_WIDTH 0" *) output [12:0]M10_AXI_araddr;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M10_AXI ARBURST" *) output [1:0]M10_AXI_arburst;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M10_AXI ARCACHE" *) output [3:0]M10_AXI_arcache;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M10_AXI ARLEN" *) output [7:0]M10_AXI_arlen;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M10_AXI ARLOCK" *) output [0:0]M10_AXI_arlock;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M10_AXI ARPROT" *) output [2:0]M10_AXI_arprot;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M10_AXI ARQOS" *) output [3:0]M10_AXI_arqos;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M10_AXI ARREADY" *) input M10_AXI_arready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M10_AXI ARSIZE" *) output [2:0]M10_AXI_arsize;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M10_AXI ARUSER" *) output [15:0]M10_AXI_aruser;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M10_AXI ARVALID" *) output M10_AXI_arvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M10_AXI AWADDR" *) output [12:0]M10_AXI_awaddr;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M10_AXI AWBURST" *) output [1:0]M10_AXI_awburst;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M10_AXI AWCACHE" *) output [3:0]M10_AXI_awcache;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M10_AXI AWLEN" *) output [7:0]M10_AXI_awlen;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M10_AXI AWLOCK" *) output [0:0]M10_AXI_awlock;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M10_AXI AWPROT" *) output [2:0]M10_AXI_awprot;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M10_AXI AWQOS" *) output [3:0]M10_AXI_awqos;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M10_AXI AWREADY" *) input M10_AXI_awready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M10_AXI AWSIZE" *) output [2:0]M10_AXI_awsize;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M10_AXI AWUSER" *) output [15:0]M10_AXI_awuser;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M10_AXI AWVALID" *) output M10_AXI_awvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M10_AXI BREADY" *) output M10_AXI_bready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M10_AXI BRESP" *) input [1:0]M10_AXI_bresp;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M10_AXI BVALID" *) input M10_AXI_bvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M10_AXI RDATA" *) input [31:0]M10_AXI_rdata;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M10_AXI RLAST" *) input M10_AXI_rlast;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M10_AXI RREADY" *) output M10_AXI_rready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M10_AXI RRESP" *) input [1:0]M10_AXI_rresp;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M10_AXI RVALID" *) input M10_AXI_rvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M10_AXI WDATA" *) output [31:0]M10_AXI_wdata;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M10_AXI WLAST" *) output M10_AXI_wlast;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M10_AXI WREADY" *) input M10_AXI_wready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M10_AXI WSTRB" *) output [3:0]M10_AXI_wstrb;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M10_AXI WVALID" *) output M10_AXI_wvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M11_AXI ARADDR" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME M11_AXI, ADDR_WIDTH 13, ARUSER_WIDTH 16, AWUSER_WIDTH 16, BUSER_WIDTH 0, CLK_DOMAIN design_1_zynq_ultra_ps_e_0_0_pl_clk0, DATA_WIDTH 32, FREQ_HZ 96968727, HAS_BRESP 1, HAS_BURST 1, HAS_CACHE 1, HAS_LOCK 1, HAS_PROT 1, HAS_QOS 1, HAS_REGION 0, HAS_RRESP 1, HAS_WSTRB 1, ID_WIDTH 0, INSERT_VIP 0, MAX_BURST_LENGTH 256, NUM_READ_OUTSTANDING 8, NUM_READ_THREADS 1, NUM_WRITE_OUTSTANDING 8, NUM_WRITE_THREADS 1, PHASE 0.0, PROTOCOL AXI4, READ_WRITE_MODE READ_WRITE, RUSER_BITS_PER_BYTE 0, RUSER_WIDTH 0, SUPPORTS_NARROW_BURST 0, WUSER_BITS_PER_BYTE 0, WUSER_WIDTH 0" *) output [12:0]M11_AXI_araddr;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M11_AXI ARBURST" *) output [1:0]M11_AXI_arburst;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M11_AXI ARCACHE" *) output [3:0]M11_AXI_arcache;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M11_AXI ARLEN" *) output [7:0]M11_AXI_arlen;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M11_AXI ARLOCK" *) output [0:0]M11_AXI_arlock;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M11_AXI ARPROT" *) output [2:0]M11_AXI_arprot;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M11_AXI ARQOS" *) output [3:0]M11_AXI_arqos;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M11_AXI ARREADY" *) input M11_AXI_arready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M11_AXI ARSIZE" *) output [2:0]M11_AXI_arsize;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M11_AXI ARUSER" *) output [15:0]M11_AXI_aruser;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M11_AXI ARVALID" *) output M11_AXI_arvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M11_AXI AWADDR" *) output [12:0]M11_AXI_awaddr;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M11_AXI AWBURST" *) output [1:0]M11_AXI_awburst;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M11_AXI AWCACHE" *) output [3:0]M11_AXI_awcache;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M11_AXI AWLEN" *) output [7:0]M11_AXI_awlen;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M11_AXI AWLOCK" *) output [0:0]M11_AXI_awlock;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M11_AXI AWPROT" *) output [2:0]M11_AXI_awprot;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M11_AXI AWQOS" *) output [3:0]M11_AXI_awqos;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M11_AXI AWREADY" *) input M11_AXI_awready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M11_AXI AWSIZE" *) output [2:0]M11_AXI_awsize;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M11_AXI AWUSER" *) output [15:0]M11_AXI_awuser;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M11_AXI AWVALID" *) output M11_AXI_awvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M11_AXI BREADY" *) output M11_AXI_bready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M11_AXI BRESP" *) input [1:0]M11_AXI_bresp;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M11_AXI BVALID" *) input M11_AXI_bvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M11_AXI RDATA" *) input [31:0]M11_AXI_rdata;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M11_AXI RLAST" *) input M11_AXI_rlast;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M11_AXI RREADY" *) output M11_AXI_rready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M11_AXI RRESP" *) input [1:0]M11_AXI_rresp;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M11_AXI RVALID" *) input M11_AXI_rvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M11_AXI WDATA" *) output [31:0]M11_AXI_wdata;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M11_AXI WLAST" *) output M11_AXI_wlast;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M11_AXI WREADY" *) input M11_AXI_wready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M11_AXI WSTRB" *) output [3:0]M11_AXI_wstrb;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M11_AXI WVALID" *) output M11_AXI_wvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M12_AXI ARADDR" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME M12_AXI, ADDR_WIDTH 5, ARUSER_WIDTH 0, AWUSER_WIDTH 0, BUSER_WIDTH 0, CLK_DOMAIN design_1_zynq_ultra_ps_e_0_0_pl_clk0, DATA_WIDTH 32, FREQ_HZ 96968727, HAS_BRESP 1, HAS_BURST 0, HAS_CACHE 0, HAS_LOCK 0, HAS_PROT 1, HAS_QOS 0, HAS_REGION 0, HAS_RRESP 1, HAS_WSTRB 1, ID_WIDTH 0, INSERT_VIP 0, MAX_BURST_LENGTH 1, NUM_READ_OUTSTANDING 8, NUM_READ_THREADS 1, NUM_WRITE_OUTSTANDING 8, NUM_WRITE_THREADS 1, PHASE 0.0, PROTOCOL AXI4LITE, READ_WRITE_MODE READ_WRITE, RUSER_BITS_PER_BYTE 0, RUSER_WIDTH 0, SUPPORTS_NARROW_BURST 0, WUSER_BITS_PER_BYTE 0, WUSER_WIDTH 0" *) output [4:0]M12_AXI_araddr;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M12_AXI ARPROT" *) output [2:0]M12_AXI_arprot;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M12_AXI ARREADY" *) input M12_AXI_arready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M12_AXI ARVALID" *) output M12_AXI_arvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M12_AXI AWADDR" *) output [4:0]M12_AXI_awaddr;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M12_AXI AWPROT" *) output [2:0]M12_AXI_awprot;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M12_AXI AWREADY" *) input M12_AXI_awready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M12_AXI AWVALID" *) output M12_AXI_awvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M12_AXI BREADY" *) output M12_AXI_bready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M12_AXI BRESP" *) input [1:0]M12_AXI_bresp;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M12_AXI BVALID" *) input M12_AXI_bvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M12_AXI RDATA" *) input [31:0]M12_AXI_rdata;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M12_AXI RREADY" *) output M12_AXI_rready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M12_AXI RRESP" *) input [1:0]M12_AXI_rresp;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M12_AXI RVALID" *) input M12_AXI_rvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M12_AXI WDATA" *) output [31:0]M12_AXI_wdata;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M12_AXI WREADY" *) input M12_AXI_wready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M12_AXI WSTRB" *) output [3:0]M12_AXI_wstrb;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M12_AXI WVALID" *) output M12_AXI_wvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M13_AXI ARADDR" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME M13_AXI, ADDR_WIDTH 5, ARUSER_WIDTH 0, AWUSER_WIDTH 0, BUSER_WIDTH 0, CLK_DOMAIN design_1_zynq_ultra_ps_e_0_0_pl_clk0, DATA_WIDTH 32, FREQ_HZ 96968727, HAS_BRESP 1, HAS_BURST 0, HAS_CACHE 0, HAS_LOCK 0, HAS_PROT 1, HAS_QOS 0, HAS_REGION 0, HAS_RRESP 1, HAS_WSTRB 1, ID_WIDTH 0, INSERT_VIP 0, MAX_BURST_LENGTH 1, NUM_READ_OUTSTANDING 8, NUM_READ_THREADS 1, NUM_WRITE_OUTSTANDING 8, NUM_WRITE_THREADS 1, PHASE 0.0, PROTOCOL AXI4LITE, READ_WRITE_MODE READ_WRITE, RUSER_BITS_PER_BYTE 0, RUSER_WIDTH 0, SUPPORTS_NARROW_BURST 0, WUSER_BITS_PER_BYTE 0, WUSER_WIDTH 0" *) output [4:0]M13_AXI_araddr;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M13_AXI ARPROT" *) output [2:0]M13_AXI_arprot;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M13_AXI ARREADY" *) input M13_AXI_arready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M13_AXI ARVALID" *) output M13_AXI_arvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M13_AXI AWADDR" *) output [4:0]M13_AXI_awaddr;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M13_AXI AWPROT" *) output [2:0]M13_AXI_awprot;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M13_AXI AWREADY" *) input M13_AXI_awready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M13_AXI AWVALID" *) output M13_AXI_awvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M13_AXI BREADY" *) output M13_AXI_bready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M13_AXI BRESP" *) input [1:0]M13_AXI_bresp;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M13_AXI BVALID" *) input M13_AXI_bvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M13_AXI RDATA" *) input [31:0]M13_AXI_rdata;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M13_AXI RREADY" *) output M13_AXI_rready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M13_AXI RRESP" *) input [1:0]M13_AXI_rresp;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M13_AXI RVALID" *) input M13_AXI_rvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M13_AXI WDATA" *) output [31:0]M13_AXI_wdata;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M13_AXI WREADY" *) input M13_AXI_wready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M13_AXI WSTRB" *) output [3:0]M13_AXI_wstrb;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M13_AXI WVALID" *) output M13_AXI_wvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M14_AXI ARADDR" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME M14_AXI, ADDR_WIDTH 5, ARUSER_WIDTH 0, AWUSER_WIDTH 0, BUSER_WIDTH 0, CLK_DOMAIN design_1_zynq_ultra_ps_e_0_0_pl_clk0, DATA_WIDTH 32, FREQ_HZ 96968727, HAS_BRESP 1, HAS_BURST 0, HAS_CACHE 0, HAS_LOCK 0, HAS_PROT 1, HAS_QOS 0, HAS_REGION 0, HAS_RRESP 1, HAS_WSTRB 1, ID_WIDTH 0, INSERT_VIP 0, MAX_BURST_LENGTH 1, NUM_READ_OUTSTANDING 8, NUM_READ_THREADS 1, NUM_WRITE_OUTSTANDING 8, NUM_WRITE_THREADS 1, PHASE 0.0, PROTOCOL AXI4LITE, READ_WRITE_MODE READ_WRITE, RUSER_BITS_PER_BYTE 0, RUSER_WIDTH 0, SUPPORTS_NARROW_BURST 0, WUSER_BITS_PER_BYTE 0, WUSER_WIDTH 0" *) output [4:0]M14_AXI_araddr;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M14_AXI ARPROT" *) output [2:0]M14_AXI_arprot;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M14_AXI ARREADY" *) input M14_AXI_arready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M14_AXI ARVALID" *) output M14_AXI_arvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M14_AXI AWADDR" *) output [4:0]M14_AXI_awaddr;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M14_AXI AWPROT" *) output [2:0]M14_AXI_awprot;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M14_AXI AWREADY" *) input M14_AXI_awready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M14_AXI AWVALID" *) output M14_AXI_awvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M14_AXI BREADY" *) output M14_AXI_bready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M14_AXI BRESP" *) input [1:0]M14_AXI_bresp;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M14_AXI BVALID" *) input M14_AXI_bvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M14_AXI RDATA" *) input [31:0]M14_AXI_rdata;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M14_AXI RREADY" *) output M14_AXI_rready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M14_AXI RRESP" *) input [1:0]M14_AXI_rresp;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M14_AXI RVALID" *) input M14_AXI_rvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M14_AXI WDATA" *) output [31:0]M14_AXI_wdata;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M14_AXI WREADY" *) input M14_AXI_wready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M14_AXI WSTRB" *) output [3:0]M14_AXI_wstrb;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M14_AXI WVALID" *) output M14_AXI_wvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M15_AXI ARADDR" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME M15_AXI, ADDR_WIDTH 5, ARUSER_WIDTH 0, AWUSER_WIDTH 0, BUSER_WIDTH 0, CLK_DOMAIN design_1_zynq_ultra_ps_e_0_0_pl_clk0, DATA_WIDTH 32, FREQ_HZ 96968727, HAS_BRESP 1, HAS_BURST 0, HAS_CACHE 0, HAS_LOCK 0, HAS_PROT 1, HAS_QOS 0, HAS_REGION 0, HAS_RRESP 1, HAS_WSTRB 1, ID_WIDTH 0, INSERT_VIP 0, MAX_BURST_LENGTH 1, NUM_READ_OUTSTANDING 8, NUM_READ_THREADS 1, NUM_WRITE_OUTSTANDING 8, NUM_WRITE_THREADS 1, PHASE 0.0, PROTOCOL AXI4LITE, READ_WRITE_MODE READ_WRITE, RUSER_BITS_PER_BYTE 0, RUSER_WIDTH 0, SUPPORTS_NARROW_BURST 0, WUSER_BITS_PER_BYTE 0, WUSER_WIDTH 0" *) output [4:0]M15_AXI_araddr;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M15_AXI ARPROT" *) output [2:0]M15_AXI_arprot;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M15_AXI ARREADY" *) input M15_AXI_arready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M15_AXI ARVALID" *) output M15_AXI_arvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M15_AXI AWADDR" *) output [4:0]M15_AXI_awaddr;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M15_AXI AWPROT" *) output [2:0]M15_AXI_awprot;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M15_AXI AWREADY" *) input M15_AXI_awready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M15_AXI AWVALID" *) output M15_AXI_awvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M15_AXI BREADY" *) output M15_AXI_bready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M15_AXI BRESP" *) input [1:0]M15_AXI_bresp;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M15_AXI BVALID" *) input M15_AXI_bvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M15_AXI RDATA" *) input [31:0]M15_AXI_rdata;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M15_AXI RREADY" *) output M15_AXI_rready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M15_AXI RRESP" *) input [1:0]M15_AXI_rresp;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M15_AXI RVALID" *) input M15_AXI_rvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M15_AXI WDATA" *) output [31:0]M15_AXI_wdata;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M15_AXI WREADY" *) input M15_AXI_wready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M15_AXI WSTRB" *) output [3:0]M15_AXI_wstrb;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M15_AXI WVALID" *) output M15_AXI_wvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M16_AXI ARADDR" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME M16_AXI, ADDR_WIDTH 5, ARUSER_WIDTH 0, AWUSER_WIDTH 0, BUSER_WIDTH 0, CLK_DOMAIN design_1_zynq_ultra_ps_e_0_0_pl_clk0, DATA_WIDTH 32, FREQ_HZ 96968727, HAS_BRESP 1, HAS_BURST 0, HAS_CACHE 0, HAS_LOCK 0, HAS_PROT 1, HAS_QOS 0, HAS_REGION 0, HAS_RRESP 1, HAS_WSTRB 1, ID_WIDTH 0, INSERT_VIP 0, MAX_BURST_LENGTH 1, NUM_READ_OUTSTANDING 8, NUM_READ_THREADS 1, NUM_WRITE_OUTSTANDING 8, NUM_WRITE_THREADS 1, PHASE 0.0, PROTOCOL AXI4LITE, READ_WRITE_MODE READ_WRITE, RUSER_BITS_PER_BYTE 0, RUSER_WIDTH 0, SUPPORTS_NARROW_BURST 0, WUSER_BITS_PER_BYTE 0, WUSER_WIDTH 0" *) output [4:0]M16_AXI_araddr;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M16_AXI ARPROT" *) output [2:0]M16_AXI_arprot;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M16_AXI ARREADY" *) input M16_AXI_arready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M16_AXI ARVALID" *) output M16_AXI_arvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M16_AXI AWADDR" *) output [4:0]M16_AXI_awaddr;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M16_AXI AWPROT" *) output [2:0]M16_AXI_awprot;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M16_AXI AWREADY" *) input M16_AXI_awready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M16_AXI AWVALID" *) output M16_AXI_awvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M16_AXI BREADY" *) output M16_AXI_bready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M16_AXI BRESP" *) input [1:0]M16_AXI_bresp;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M16_AXI BVALID" *) input M16_AXI_bvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M16_AXI RDATA" *) input [31:0]M16_AXI_rdata;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M16_AXI RREADY" *) output M16_AXI_rready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M16_AXI RRESP" *) input [1:0]M16_AXI_rresp;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M16_AXI RVALID" *) input M16_AXI_rvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M16_AXI WDATA" *) output [31:0]M16_AXI_wdata;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M16_AXI WREADY" *) input M16_AXI_wready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M16_AXI WSTRB" *) output [3:0]M16_AXI_wstrb;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M16_AXI WVALID" *) output M16_AXI_wvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M17_AXI ARADDR" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME M17_AXI, ADDR_WIDTH 5, ARUSER_WIDTH 0, AWUSER_WIDTH 0, BUSER_WIDTH 0, CLK_DOMAIN design_1_zynq_ultra_ps_e_0_0_pl_clk0, DATA_WIDTH 32, FREQ_HZ 96968727, HAS_BRESP 1, HAS_BURST 0, HAS_CACHE 0, HAS_LOCK 0, HAS_PROT 1, HAS_QOS 0, HAS_REGION 0, HAS_RRESP 1, HAS_WSTRB 1, ID_WIDTH 0, INSERT_VIP 0, MAX_BURST_LENGTH 1, NUM_READ_OUTSTANDING 8, NUM_READ_THREADS 1, NUM_WRITE_OUTSTANDING 8, NUM_WRITE_THREADS 1, PHASE 0.0, PROTOCOL AXI4LITE, READ_WRITE_MODE READ_WRITE, RUSER_BITS_PER_BYTE 0, RUSER_WIDTH 0, SUPPORTS_NARROW_BURST 0, WUSER_BITS_PER_BYTE 0, WUSER_WIDTH 0" *) output [4:0]M17_AXI_araddr;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M17_AXI ARPROT" *) output [2:0]M17_AXI_arprot;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M17_AXI ARREADY" *) input M17_AXI_arready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M17_AXI ARVALID" *) output M17_AXI_arvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M17_AXI AWADDR" *) output [4:0]M17_AXI_awaddr;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M17_AXI AWPROT" *) output [2:0]M17_AXI_awprot;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M17_AXI AWREADY" *) input M17_AXI_awready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M17_AXI AWVALID" *) output M17_AXI_awvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M17_AXI BREADY" *) output M17_AXI_bready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M17_AXI BRESP" *) input [1:0]M17_AXI_bresp;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M17_AXI BVALID" *) input M17_AXI_bvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M17_AXI RDATA" *) input [31:0]M17_AXI_rdata;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M17_AXI RREADY" *) output M17_AXI_rready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M17_AXI RRESP" *) input [1:0]M17_AXI_rresp;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M17_AXI RVALID" *) input M17_AXI_rvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M17_AXI WDATA" *) output [31:0]M17_AXI_wdata;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M17_AXI WREADY" *) input M17_AXI_wready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M17_AXI WSTRB" *) output [3:0]M17_AXI_wstrb;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M17_AXI WVALID" *) output M17_AXI_wvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M18_AXI ARADDR" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME M18_AXI, ADDR_WIDTH 5, ARUSER_WIDTH 0, AWUSER_WIDTH 0, BUSER_WIDTH 0, CLK_DOMAIN design_1_zynq_ultra_ps_e_0_0_pl_clk0, DATA_WIDTH 32, FREQ_HZ 96968727, HAS_BRESP 1, HAS_BURST 0, HAS_CACHE 0, HAS_LOCK 0, HAS_PROT 1, HAS_QOS 0, HAS_REGION 0, HAS_RRESP 1, HAS_WSTRB 1, ID_WIDTH 0, INSERT_VIP 0, MAX_BURST_LENGTH 1, NUM_READ_OUTSTANDING 8, NUM_READ_THREADS 1, NUM_WRITE_OUTSTANDING 8, NUM_WRITE_THREADS 1, PHASE 0.0, PROTOCOL AXI4LITE, READ_WRITE_MODE READ_WRITE, RUSER_BITS_PER_BYTE 0, RUSER_WIDTH 0, SUPPORTS_NARROW_BURST 0, WUSER_BITS_PER_BYTE 0, WUSER_WIDTH 0" *) output [4:0]M18_AXI_araddr;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M18_AXI ARPROT" *) output [2:0]M18_AXI_arprot;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M18_AXI ARREADY" *) input M18_AXI_arready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M18_AXI ARVALID" *) output M18_AXI_arvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M18_AXI AWADDR" *) output [4:0]M18_AXI_awaddr;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M18_AXI AWPROT" *) output [2:0]M18_AXI_awprot;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M18_AXI AWREADY" *) input M18_AXI_awready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M18_AXI AWVALID" *) output M18_AXI_awvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M18_AXI BREADY" *) output M18_AXI_bready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M18_AXI BRESP" *) input [1:0]M18_AXI_bresp;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M18_AXI BVALID" *) input M18_AXI_bvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M18_AXI RDATA" *) input [31:0]M18_AXI_rdata;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M18_AXI RREADY" *) output M18_AXI_rready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M18_AXI RRESP" *) input [1:0]M18_AXI_rresp;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M18_AXI RVALID" *) input M18_AXI_rvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M18_AXI WDATA" *) output [31:0]M18_AXI_wdata;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M18_AXI WREADY" *) input M18_AXI_wready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M18_AXI WSTRB" *) output [3:0]M18_AXI_wstrb;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M18_AXI WVALID" *) output M18_AXI_wvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M19_AXI ARADDR" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME M19_AXI, ADDR_WIDTH 5, ARUSER_WIDTH 0, AWUSER_WIDTH 0, BUSER_WIDTH 0, CLK_DOMAIN design_1_zynq_ultra_ps_e_0_0_pl_clk0, DATA_WIDTH 32, FREQ_HZ 96968727, HAS_BRESP 1, HAS_BURST 0, HAS_CACHE 0, HAS_LOCK 0, HAS_PROT 1, HAS_QOS 0, HAS_REGION 0, HAS_RRESP 1, HAS_WSTRB 1, ID_WIDTH 0, INSERT_VIP 0, MAX_BURST_LENGTH 1, NUM_READ_OUTSTANDING 8, NUM_READ_THREADS 1, NUM_WRITE_OUTSTANDING 8, NUM_WRITE_THREADS 1, PHASE 0.0, PROTOCOL AXI4LITE, READ_WRITE_MODE READ_WRITE, RUSER_BITS_PER_BYTE 0, RUSER_WIDTH 0, SUPPORTS_NARROW_BURST 0, WUSER_BITS_PER_BYTE 0, WUSER_WIDTH 0" *) output [4:0]M19_AXI_araddr;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M19_AXI ARPROT" *) output [2:0]M19_AXI_arprot;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M19_AXI ARREADY" *) input M19_AXI_arready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M19_AXI ARVALID" *) output M19_AXI_arvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M19_AXI AWADDR" *) output [4:0]M19_AXI_awaddr;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M19_AXI AWPROT" *) output [2:0]M19_AXI_awprot;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M19_AXI AWREADY" *) input M19_AXI_awready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M19_AXI AWVALID" *) output M19_AXI_awvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M19_AXI BREADY" *) output M19_AXI_bready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M19_AXI BRESP" *) input [1:0]M19_AXI_bresp;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M19_AXI BVALID" *) input M19_AXI_bvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M19_AXI RDATA" *) input [31:0]M19_AXI_rdata;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M19_AXI RREADY" *) output M19_AXI_rready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M19_AXI RRESP" *) input [1:0]M19_AXI_rresp;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M19_AXI RVALID" *) input M19_AXI_rvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M19_AXI WDATA" *) output [31:0]M19_AXI_wdata;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M19_AXI WREADY" *) input M19_AXI_wready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M19_AXI WSTRB" *) output [3:0]M19_AXI_wstrb;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M19_AXI WVALID" *) output M19_AXI_wvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M20_AXI ARADDR" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME M20_AXI, ADDR_WIDTH 5, ARUSER_WIDTH 0, AWUSER_WIDTH 0, BUSER_WIDTH 0, CLK_DOMAIN design_1_zynq_ultra_ps_e_0_0_pl_clk0, DATA_WIDTH 32, FREQ_HZ 96968727, HAS_BRESP 1, HAS_BURST 0, HAS_CACHE 0, HAS_LOCK 0, HAS_PROT 1, HAS_QOS 0, HAS_REGION 0, HAS_RRESP 1, HAS_WSTRB 1, ID_WIDTH 0, INSERT_VIP 0, MAX_BURST_LENGTH 1, NUM_READ_OUTSTANDING 8, NUM_READ_THREADS 1, NUM_WRITE_OUTSTANDING 8, NUM_WRITE_THREADS 1, PHASE 0.0, PROTOCOL AXI4LITE, READ_WRITE_MODE READ_WRITE, RUSER_BITS_PER_BYTE 0, RUSER_WIDTH 0, SUPPORTS_NARROW_BURST 0, WUSER_BITS_PER_BYTE 0, WUSER_WIDTH 0" *) output [4:0]M20_AXI_araddr;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M20_AXI ARPROT" *) output [2:0]M20_AXI_arprot;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M20_AXI ARREADY" *) input M20_AXI_arready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M20_AXI ARVALID" *) output M20_AXI_arvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M20_AXI AWADDR" *) output [4:0]M20_AXI_awaddr;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M20_AXI AWPROT" *) output [2:0]M20_AXI_awprot;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M20_AXI AWREADY" *) input M20_AXI_awready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M20_AXI AWVALID" *) output M20_AXI_awvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M20_AXI BREADY" *) output M20_AXI_bready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M20_AXI BRESP" *) input [1:0]M20_AXI_bresp;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M20_AXI BVALID" *) input M20_AXI_bvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M20_AXI RDATA" *) input [31:0]M20_AXI_rdata;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M20_AXI RREADY" *) output M20_AXI_rready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M20_AXI RRESP" *) input [1:0]M20_AXI_rresp;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M20_AXI RVALID" *) input M20_AXI_rvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M20_AXI WDATA" *) output [31:0]M20_AXI_wdata;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M20_AXI WREADY" *) input M20_AXI_wready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M20_AXI WSTRB" *) output [3:0]M20_AXI_wstrb;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M20_AXI WVALID" *) output M20_AXI_wvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M21_AXI ARADDR" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME M21_AXI, ADDR_WIDTH 5, ARUSER_WIDTH 0, AWUSER_WIDTH 0, BUSER_WIDTH 0, CLK_DOMAIN design_1_zynq_ultra_ps_e_0_0_pl_clk0, DATA_WIDTH 32, FREQ_HZ 96968727, HAS_BRESP 1, HAS_BURST 0, HAS_CACHE 0, HAS_LOCK 0, HAS_PROT 1, HAS_QOS 0, HAS_REGION 0, HAS_RRESP 1, HAS_WSTRB 1, ID_WIDTH 0, INSERT_VIP 0, MAX_BURST_LENGTH 1, NUM_READ_OUTSTANDING 8, NUM_READ_THREADS 1, NUM_WRITE_OUTSTANDING 8, NUM_WRITE_THREADS 1, PHASE 0.0, PROTOCOL AXI4LITE, READ_WRITE_MODE READ_WRITE, RUSER_BITS_PER_BYTE 0, RUSER_WIDTH 0, SUPPORTS_NARROW_BURST 0, WUSER_BITS_PER_BYTE 0, WUSER_WIDTH 0" *) output [4:0]M21_AXI_araddr;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M21_AXI ARPROT" *) output [2:0]M21_AXI_arprot;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M21_AXI ARREADY" *) input M21_AXI_arready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M21_AXI ARVALID" *) output M21_AXI_arvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M21_AXI AWADDR" *) output [4:0]M21_AXI_awaddr;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M21_AXI AWPROT" *) output [2:0]M21_AXI_awprot;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M21_AXI AWREADY" *) input M21_AXI_awready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M21_AXI AWVALID" *) output M21_AXI_awvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M21_AXI BREADY" *) output M21_AXI_bready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M21_AXI BRESP" *) input [1:0]M21_AXI_bresp;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M21_AXI BVALID" *) input M21_AXI_bvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M21_AXI RDATA" *) input [31:0]M21_AXI_rdata;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M21_AXI RREADY" *) output M21_AXI_rready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M21_AXI RRESP" *) input [1:0]M21_AXI_rresp;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M21_AXI RVALID" *) input M21_AXI_rvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M21_AXI WDATA" *) output [31:0]M21_AXI_wdata;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M21_AXI WREADY" *) input M21_AXI_wready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M21_AXI WSTRB" *) output [3:0]M21_AXI_wstrb;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M21_AXI WVALID" *) output M21_AXI_wvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M22_AXI ARADDR" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME M22_AXI, ADDR_WIDTH 5, ARUSER_WIDTH 0, AWUSER_WIDTH 0, BUSER_WIDTH 0, CLK_DOMAIN design_1_zynq_ultra_ps_e_0_0_pl_clk0, DATA_WIDTH 32, FREQ_HZ 96968727, HAS_BRESP 1, HAS_BURST 0, HAS_CACHE 0, HAS_LOCK 0, HAS_PROT 1, HAS_QOS 0, HAS_REGION 0, HAS_RRESP 1, HAS_WSTRB 1, ID_WIDTH 0, INSERT_VIP 0, MAX_BURST_LENGTH 1, NUM_READ_OUTSTANDING 8, NUM_READ_THREADS 1, NUM_WRITE_OUTSTANDING 8, NUM_WRITE_THREADS 1, PHASE 0.0, PROTOCOL AXI4LITE, READ_WRITE_MODE READ_WRITE, RUSER_BITS_PER_BYTE 0, RUSER_WIDTH 0, SUPPORTS_NARROW_BURST 0, WUSER_BITS_PER_BYTE 0, WUSER_WIDTH 0" *) output [4:0]M22_AXI_araddr;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M22_AXI ARPROT" *) output [2:0]M22_AXI_arprot;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M22_AXI ARREADY" *) input M22_AXI_arready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M22_AXI ARVALID" *) output M22_AXI_arvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M22_AXI AWADDR" *) output [4:0]M22_AXI_awaddr;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M22_AXI AWPROT" *) output [2:0]M22_AXI_awprot;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M22_AXI AWREADY" *) input M22_AXI_awready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M22_AXI AWVALID" *) output M22_AXI_awvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M22_AXI BREADY" *) output M22_AXI_bready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M22_AXI BRESP" *) input [1:0]M22_AXI_bresp;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M22_AXI BVALID" *) input M22_AXI_bvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M22_AXI RDATA" *) input [31:0]M22_AXI_rdata;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M22_AXI RREADY" *) output M22_AXI_rready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M22_AXI RRESP" *) input [1:0]M22_AXI_rresp;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M22_AXI RVALID" *) input M22_AXI_rvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M22_AXI WDATA" *) output [31:0]M22_AXI_wdata;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M22_AXI WREADY" *) input M22_AXI_wready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M22_AXI WSTRB" *) output [3:0]M22_AXI_wstrb;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M22_AXI WVALID" *) output M22_AXI_wvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M23_AXI ARADDR" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME M23_AXI, ADDR_WIDTH 5, ARUSER_WIDTH 0, AWUSER_WIDTH 0, BUSER_WIDTH 0, CLK_DOMAIN design_1_zynq_ultra_ps_e_0_0_pl_clk0, DATA_WIDTH 32, FREQ_HZ 96968727, HAS_BRESP 1, HAS_BURST 0, HAS_CACHE 0, HAS_LOCK 0, HAS_PROT 1, HAS_QOS 0, HAS_REGION 0, HAS_RRESP 1, HAS_WSTRB 1, ID_WIDTH 0, INSERT_VIP 0, MAX_BURST_LENGTH 1, NUM_READ_OUTSTANDING 8, NUM_READ_THREADS 1, NUM_WRITE_OUTSTANDING 8, NUM_WRITE_THREADS 1, PHASE 0.0, PROTOCOL AXI4LITE, READ_WRITE_MODE READ_WRITE, RUSER_BITS_PER_BYTE 0, RUSER_WIDTH 0, SUPPORTS_NARROW_BURST 0, WUSER_BITS_PER_BYTE 0, WUSER_WIDTH 0" *) output [4:0]M23_AXI_araddr;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M23_AXI ARPROT" *) output [2:0]M23_AXI_arprot;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M23_AXI ARREADY" *) input M23_AXI_arready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M23_AXI ARVALID" *) output M23_AXI_arvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M23_AXI AWADDR" *) output [4:0]M23_AXI_awaddr;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M23_AXI AWPROT" *) output [2:0]M23_AXI_awprot;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M23_AXI AWREADY" *) input M23_AXI_awready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M23_AXI AWVALID" *) output M23_AXI_awvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M23_AXI BREADY" *) output M23_AXI_bready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M23_AXI BRESP" *) input [1:0]M23_AXI_bresp;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M23_AXI BVALID" *) input M23_AXI_bvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M23_AXI RDATA" *) input [31:0]M23_AXI_rdata;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M23_AXI RREADY" *) output M23_AXI_rready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M23_AXI RRESP" *) input [1:0]M23_AXI_rresp;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M23_AXI RVALID" *) input M23_AXI_rvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M23_AXI WDATA" *) output [31:0]M23_AXI_wdata;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M23_AXI WREADY" *) input M23_AXI_wready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M23_AXI WSTRB" *) output [3:0]M23_AXI_wstrb;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M23_AXI WVALID" *) output M23_AXI_wvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M24_AXI ARADDR" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME M24_AXI, ADDR_WIDTH 10, ARUSER_WIDTH 0, AWUSER_WIDTH 0, BUSER_WIDTH 0, CLK_DOMAIN design_1_zynq_ultra_ps_e_0_0_pl_clk0, DATA_WIDTH 32, FREQ_HZ 96968727, HAS_BRESP 1, HAS_BURST 0, HAS_CACHE 0, HAS_LOCK 0, HAS_PROT 1, HAS_QOS 0, HAS_REGION 0, HAS_RRESP 1, HAS_WSTRB 1, ID_WIDTH 0, INSERT_VIP 0, MAX_BURST_LENGTH 1, NUM_READ_OUTSTANDING 8, NUM_READ_THREADS 1, NUM_WRITE_OUTSTANDING 8, NUM_WRITE_THREADS 1, PHASE 0.0, PROTOCOL AXI4LITE, READ_WRITE_MODE READ_WRITE, RUSER_BITS_PER_BYTE 0, RUSER_WIDTH 0, SUPPORTS_NARROW_BURST 0, WUSER_BITS_PER_BYTE 0, WUSER_WIDTH 0" *) output [9:0]M24_AXI_araddr;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M24_AXI ARPROT" *) output [2:0]M24_AXI_arprot;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M24_AXI ARREADY" *) input M24_AXI_arready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M24_AXI ARVALID" *) output M24_AXI_arvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M24_AXI AWADDR" *) output [9:0]M24_AXI_awaddr;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M24_AXI AWPROT" *) output [2:0]M24_AXI_awprot;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M24_AXI AWREADY" *) input M24_AXI_awready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M24_AXI AWVALID" *) output M24_AXI_awvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M24_AXI BREADY" *) output M24_AXI_bready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M24_AXI BRESP" *) input [1:0]M24_AXI_bresp;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M24_AXI BVALID" *) input M24_AXI_bvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M24_AXI RDATA" *) input [31:0]M24_AXI_rdata;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M24_AXI RREADY" *) output M24_AXI_rready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M24_AXI RRESP" *) input [1:0]M24_AXI_rresp;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M24_AXI RVALID" *) input M24_AXI_rvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M24_AXI WDATA" *) output [31:0]M24_AXI_wdata;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M24_AXI WREADY" *) input M24_AXI_wready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M24_AXI WSTRB" *) output [3:0]M24_AXI_wstrb;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M24_AXI WVALID" *) output M24_AXI_wvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M25_AXI ARADDR" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME M25_AXI, ADDR_WIDTH 10, ARUSER_WIDTH 0, AWUSER_WIDTH 0, BUSER_WIDTH 0, CLK_DOMAIN design_1_zynq_ultra_ps_e_0_0_pl_clk0, DATA_WIDTH 32, FREQ_HZ 96968727, HAS_BRESP 1, HAS_BURST 0, HAS_CACHE 0, HAS_LOCK 0, HAS_PROT 1, HAS_QOS 0, HAS_REGION 0, HAS_RRESP 1, HAS_WSTRB 1, ID_WIDTH 0, INSERT_VIP 0, MAX_BURST_LENGTH 1, NUM_READ_OUTSTANDING 8, NUM_READ_THREADS 1, NUM_WRITE_OUTSTANDING 8, NUM_WRITE_THREADS 1, PHASE 0.0, PROTOCOL AXI4LITE, READ_WRITE_MODE READ_WRITE, RUSER_BITS_PER_BYTE 0, RUSER_WIDTH 0, SUPPORTS_NARROW_BURST 0, WUSER_BITS_PER_BYTE 0, WUSER_WIDTH 0" *) output [9:0]M25_AXI_araddr;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M25_AXI ARPROT" *) output [2:0]M25_AXI_arprot;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M25_AXI ARREADY" *) input M25_AXI_arready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M25_AXI ARVALID" *) output M25_AXI_arvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M25_AXI AWADDR" *) output [9:0]M25_AXI_awaddr;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M25_AXI AWPROT" *) output [2:0]M25_AXI_awprot;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M25_AXI AWREADY" *) input M25_AXI_awready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M25_AXI AWVALID" *) output M25_AXI_awvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M25_AXI BREADY" *) output M25_AXI_bready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M25_AXI BRESP" *) input [1:0]M25_AXI_bresp;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M25_AXI BVALID" *) input M25_AXI_bvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M25_AXI RDATA" *) input [31:0]M25_AXI_rdata;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M25_AXI RREADY" *) output M25_AXI_rready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M25_AXI RRESP" *) input [1:0]M25_AXI_rresp;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M25_AXI RVALID" *) input M25_AXI_rvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M25_AXI WDATA" *) output [31:0]M25_AXI_wdata;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M25_AXI WREADY" *) input M25_AXI_wready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M25_AXI WSTRB" *) output [3:0]M25_AXI_wstrb;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M25_AXI WVALID" *) output M25_AXI_wvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M26_AXI ARADDR" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME M26_AXI, ADDR_WIDTH 10, ARUSER_WIDTH 0, AWUSER_WIDTH 0, BUSER_WIDTH 0, CLK_DOMAIN design_1_zynq_ultra_ps_e_0_0_pl_clk0, DATA_WIDTH 32, FREQ_HZ 96968727, HAS_BRESP 1, HAS_BURST 0, HAS_CACHE 0, HAS_LOCK 0, HAS_PROT 1, HAS_QOS 0, HAS_REGION 0, HAS_RRESP 1, HAS_WSTRB 1, ID_WIDTH 0, INSERT_VIP 0, MAX_BURST_LENGTH 1, NUM_READ_OUTSTANDING 8, NUM_READ_THREADS 1, NUM_WRITE_OUTSTANDING 8, NUM_WRITE_THREADS 1, PHASE 0.0, PROTOCOL AXI4LITE, READ_WRITE_MODE READ_WRITE, RUSER_BITS_PER_BYTE 0, RUSER_WIDTH 0, SUPPORTS_NARROW_BURST 0, WUSER_BITS_PER_BYTE 0, WUSER_WIDTH 0" *) output [9:0]M26_AXI_araddr;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M26_AXI ARPROT" *) output [2:0]M26_AXI_arprot;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M26_AXI ARREADY" *) input M26_AXI_arready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M26_AXI ARVALID" *) output M26_AXI_arvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M26_AXI AWADDR" *) output [9:0]M26_AXI_awaddr;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M26_AXI AWPROT" *) output [2:0]M26_AXI_awprot;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M26_AXI AWREADY" *) input M26_AXI_awready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M26_AXI AWVALID" *) output M26_AXI_awvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M26_AXI BREADY" *) output M26_AXI_bready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M26_AXI BRESP" *) input [1:0]M26_AXI_bresp;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M26_AXI BVALID" *) input M26_AXI_bvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M26_AXI RDATA" *) input [31:0]M26_AXI_rdata;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M26_AXI RREADY" *) output M26_AXI_rready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M26_AXI RRESP" *) input [1:0]M26_AXI_rresp;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M26_AXI RVALID" *) input M26_AXI_rvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M26_AXI WDATA" *) output [31:0]M26_AXI_wdata;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M26_AXI WREADY" *) input M26_AXI_wready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M26_AXI WSTRB" *) output [3:0]M26_AXI_wstrb;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M26_AXI WVALID" *) output M26_AXI_wvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M27_AXI ARADDR" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME M27_AXI, ADDR_WIDTH 10, ARUSER_WIDTH 0, AWUSER_WIDTH 0, BUSER_WIDTH 0, CLK_DOMAIN design_1_zynq_ultra_ps_e_0_0_pl_clk0, DATA_WIDTH 32, FREQ_HZ 96968727, HAS_BRESP 1, HAS_BURST 0, HAS_CACHE 0, HAS_LOCK 0, HAS_PROT 1, HAS_QOS 0, HAS_REGION 0, HAS_RRESP 1, HAS_WSTRB 1, ID_WIDTH 0, INSERT_VIP 0, MAX_BURST_LENGTH 1, NUM_READ_OUTSTANDING 8, NUM_READ_THREADS 1, NUM_WRITE_OUTSTANDING 8, NUM_WRITE_THREADS 1, PHASE 0.0, PROTOCOL AXI4LITE, READ_WRITE_MODE READ_WRITE, RUSER_BITS_PER_BYTE 0, RUSER_WIDTH 0, SUPPORTS_NARROW_BURST 0, WUSER_BITS_PER_BYTE 0, WUSER_WIDTH 0" *) output [9:0]M27_AXI_araddr;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M27_AXI ARPROT" *) output [2:0]M27_AXI_arprot;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M27_AXI ARREADY" *) input M27_AXI_arready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M27_AXI ARVALID" *) output M27_AXI_arvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M27_AXI AWADDR" *) output [9:0]M27_AXI_awaddr;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M27_AXI AWPROT" *) output [2:0]M27_AXI_awprot;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M27_AXI AWREADY" *) input M27_AXI_awready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M27_AXI AWVALID" *) output M27_AXI_awvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M27_AXI BREADY" *) output M27_AXI_bready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M27_AXI BRESP" *) input [1:0]M27_AXI_bresp;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M27_AXI BVALID" *) input M27_AXI_bvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M27_AXI RDATA" *) input [31:0]M27_AXI_rdata;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M27_AXI RREADY" *) output M27_AXI_rready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M27_AXI RRESP" *) input [1:0]M27_AXI_rresp;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M27_AXI RVALID" *) input M27_AXI_rvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M27_AXI WDATA" *) output [31:0]M27_AXI_wdata;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M27_AXI WREADY" *) input M27_AXI_wready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M27_AXI WSTRB" *) output [3:0]M27_AXI_wstrb;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M27_AXI WVALID" *) output M27_AXI_wvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M28_AXI ARADDR" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME M28_AXI, ADDR_WIDTH 10, ARUSER_WIDTH 0, AWUSER_WIDTH 0, BUSER_WIDTH 0, CLK_DOMAIN design_1_zynq_ultra_ps_e_0_0_pl_clk0, DATA_WIDTH 32, FREQ_HZ 96968727, HAS_BRESP 1, HAS_BURST 0, HAS_CACHE 0, HAS_LOCK 0, HAS_PROT 1, HAS_QOS 0, HAS_REGION 0, HAS_RRESP 1, HAS_WSTRB 1, ID_WIDTH 0, INSERT_VIP 0, MAX_BURST_LENGTH 1, NUM_READ_OUTSTANDING 8, NUM_READ_THREADS 1, NUM_WRITE_OUTSTANDING 8, NUM_WRITE_THREADS 1, PHASE 0.0, PROTOCOL AXI4LITE, READ_WRITE_MODE READ_WRITE, RUSER_BITS_PER_BYTE 0, RUSER_WIDTH 0, SUPPORTS_NARROW_BURST 0, WUSER_BITS_PER_BYTE 0, WUSER_WIDTH 0" *) output [9:0]M28_AXI_araddr;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M28_AXI ARPROT" *) output [2:0]M28_AXI_arprot;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M28_AXI ARREADY" *) input M28_AXI_arready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M28_AXI ARVALID" *) output M28_AXI_arvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M28_AXI AWADDR" *) output [9:0]M28_AXI_awaddr;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M28_AXI AWPROT" *) output [2:0]M28_AXI_awprot;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M28_AXI AWREADY" *) input M28_AXI_awready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M28_AXI AWVALID" *) output M28_AXI_awvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M28_AXI BREADY" *) output M28_AXI_bready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M28_AXI BRESP" *) input [1:0]M28_AXI_bresp;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M28_AXI BVALID" *) input M28_AXI_bvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M28_AXI RDATA" *) input [31:0]M28_AXI_rdata;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M28_AXI RREADY" *) output M28_AXI_rready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M28_AXI RRESP" *) input [1:0]M28_AXI_rresp;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M28_AXI RVALID" *) input M28_AXI_rvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M28_AXI WDATA" *) output [31:0]M28_AXI_wdata;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M28_AXI WREADY" *) input M28_AXI_wready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M28_AXI WSTRB" *) output [3:0]M28_AXI_wstrb;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M28_AXI WVALID" *) output M28_AXI_wvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M29_AXI ARADDR" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME M29_AXI, ADDR_WIDTH 10, ARUSER_WIDTH 0, AWUSER_WIDTH 0, BUSER_WIDTH 0, CLK_DOMAIN design_1_zynq_ultra_ps_e_0_0_pl_clk0, DATA_WIDTH 32, FREQ_HZ 96968727, HAS_BRESP 1, HAS_BURST 0, HAS_CACHE 0, HAS_LOCK 0, HAS_PROT 1, HAS_QOS 0, HAS_REGION 0, HAS_RRESP 1, HAS_WSTRB 1, ID_WIDTH 0, INSERT_VIP 0, MAX_BURST_LENGTH 1, NUM_READ_OUTSTANDING 8, NUM_READ_THREADS 1, NUM_WRITE_OUTSTANDING 8, NUM_WRITE_THREADS 1, PHASE 0.0, PROTOCOL AXI4LITE, READ_WRITE_MODE READ_WRITE, RUSER_BITS_PER_BYTE 0, RUSER_WIDTH 0, SUPPORTS_NARROW_BURST 0, WUSER_BITS_PER_BYTE 0, WUSER_WIDTH 0" *) output [9:0]M29_AXI_araddr;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M29_AXI ARPROT" *) output [2:0]M29_AXI_arprot;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M29_AXI ARREADY" *) input M29_AXI_arready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M29_AXI ARVALID" *) output M29_AXI_arvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M29_AXI AWADDR" *) output [9:0]M29_AXI_awaddr;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M29_AXI AWPROT" *) output [2:0]M29_AXI_awprot;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M29_AXI AWREADY" *) input M29_AXI_awready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M29_AXI AWVALID" *) output M29_AXI_awvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M29_AXI BREADY" *) output M29_AXI_bready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M29_AXI BRESP" *) input [1:0]M29_AXI_bresp;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M29_AXI BVALID" *) input M29_AXI_bvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M29_AXI RDATA" *) input [31:0]M29_AXI_rdata;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M29_AXI RREADY" *) output M29_AXI_rready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M29_AXI RRESP" *) input [1:0]M29_AXI_rresp;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M29_AXI RVALID" *) input M29_AXI_rvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M29_AXI WDATA" *) output [31:0]M29_AXI_wdata;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M29_AXI WREADY" *) input M29_AXI_wready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M29_AXI WSTRB" *) output [3:0]M29_AXI_wstrb;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M29_AXI WVALID" *) output M29_AXI_wvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M30_AXI ARADDR" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME M30_AXI, ADDR_WIDTH 10, ARUSER_WIDTH 0, AWUSER_WIDTH 0, BUSER_WIDTH 0, CLK_DOMAIN design_1_zynq_ultra_ps_e_0_0_pl_clk0, DATA_WIDTH 32, FREQ_HZ 96968727, HAS_BRESP 1, HAS_BURST 0, HAS_CACHE 0, HAS_LOCK 0, HAS_PROT 1, HAS_QOS 0, HAS_REGION 0, HAS_RRESP 1, HAS_WSTRB 1, ID_WIDTH 0, INSERT_VIP 0, MAX_BURST_LENGTH 1, NUM_READ_OUTSTANDING 8, NUM_READ_THREADS 1, NUM_WRITE_OUTSTANDING 8, NUM_WRITE_THREADS 1, PHASE 0.0, PROTOCOL AXI4LITE, READ_WRITE_MODE READ_WRITE, RUSER_BITS_PER_BYTE 0, RUSER_WIDTH 0, SUPPORTS_NARROW_BURST 0, WUSER_BITS_PER_BYTE 0, WUSER_WIDTH 0" *) output [9:0]M30_AXI_araddr;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M30_AXI ARPROT" *) output [2:0]M30_AXI_arprot;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M30_AXI ARREADY" *) input M30_AXI_arready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M30_AXI ARVALID" *) output M30_AXI_arvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M30_AXI AWADDR" *) output [9:0]M30_AXI_awaddr;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M30_AXI AWPROT" *) output [2:0]M30_AXI_awprot;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M30_AXI AWREADY" *) input M30_AXI_awready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M30_AXI AWVALID" *) output M30_AXI_awvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M30_AXI BREADY" *) output M30_AXI_bready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M30_AXI BRESP" *) input [1:0]M30_AXI_bresp;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M30_AXI BVALID" *) input M30_AXI_bvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M30_AXI RDATA" *) input [31:0]M30_AXI_rdata;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M30_AXI RREADY" *) output M30_AXI_rready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M30_AXI RRESP" *) input [1:0]M30_AXI_rresp;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M30_AXI RVALID" *) input M30_AXI_rvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M30_AXI WDATA" *) output [31:0]M30_AXI_wdata;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M30_AXI WREADY" *) input M30_AXI_wready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M30_AXI WSTRB" *) output [3:0]M30_AXI_wstrb;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M30_AXI WVALID" *) output M30_AXI_wvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M31_AXI ARADDR" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME M31_AXI, ADDR_WIDTH 10, ARUSER_WIDTH 0, AWUSER_WIDTH 0, BUSER_WIDTH 0, CLK_DOMAIN design_1_zynq_ultra_ps_e_0_0_pl_clk0, DATA_WIDTH 32, FREQ_HZ 96968727, HAS_BRESP 1, HAS_BURST 0, HAS_CACHE 0, HAS_LOCK 0, HAS_PROT 1, HAS_QOS 0, HAS_REGION 0, HAS_RRESP 1, HAS_WSTRB 1, ID_WIDTH 0, INSERT_VIP 0, MAX_BURST_LENGTH 1, NUM_READ_OUTSTANDING 8, NUM_READ_THREADS 1, NUM_WRITE_OUTSTANDING 8, NUM_WRITE_THREADS 1, PHASE 0.0, PROTOCOL AXI4LITE, READ_WRITE_MODE READ_WRITE, RUSER_BITS_PER_BYTE 0, RUSER_WIDTH 0, SUPPORTS_NARROW_BURST 0, WUSER_BITS_PER_BYTE 0, WUSER_WIDTH 0" *) output [9:0]M31_AXI_araddr;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M31_AXI ARPROT" *) output [2:0]M31_AXI_arprot;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M31_AXI ARREADY" *) input M31_AXI_arready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M31_AXI ARVALID" *) output M31_AXI_arvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M31_AXI AWADDR" *) output [9:0]M31_AXI_awaddr;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M31_AXI AWPROT" *) output [2:0]M31_AXI_awprot;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M31_AXI AWREADY" *) input M31_AXI_awready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M31_AXI AWVALID" *) output M31_AXI_awvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M31_AXI BREADY" *) output M31_AXI_bready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M31_AXI BRESP" *) input [1:0]M31_AXI_bresp;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M31_AXI BVALID" *) input M31_AXI_bvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M31_AXI RDATA" *) input [31:0]M31_AXI_rdata;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M31_AXI RREADY" *) output M31_AXI_rready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M31_AXI RRESP" *) input [1:0]M31_AXI_rresp;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M31_AXI RVALID" *) input M31_AXI_rvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M31_AXI WDATA" *) output [31:0]M31_AXI_wdata;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M31_AXI WREADY" *) input M31_AXI_wready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M31_AXI WSTRB" *) output [3:0]M31_AXI_wstrb;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M31_AXI WVALID" *) output M31_AXI_wvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M32_AXI ARADDR" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME M32_AXI, ADDR_WIDTH 10, ARUSER_WIDTH 0, AWUSER_WIDTH 0, BUSER_WIDTH 0, CLK_DOMAIN design_1_zynq_ultra_ps_e_0_0_pl_clk0, DATA_WIDTH 32, FREQ_HZ 96968727, HAS_BRESP 1, HAS_BURST 0, HAS_CACHE 0, HAS_LOCK 0, HAS_PROT 1, HAS_QOS 0, HAS_REGION 0, HAS_RRESP 1, HAS_WSTRB 1, ID_WIDTH 0, INSERT_VIP 0, MAX_BURST_LENGTH 1, NUM_READ_OUTSTANDING 8, NUM_READ_THREADS 1, NUM_WRITE_OUTSTANDING 8, NUM_WRITE_THREADS 1, PHASE 0.0, PROTOCOL AXI4LITE, READ_WRITE_MODE READ_WRITE, RUSER_BITS_PER_BYTE 0, RUSER_WIDTH 0, SUPPORTS_NARROW_BURST 0, WUSER_BITS_PER_BYTE 0, WUSER_WIDTH 0" *) output [9:0]M32_AXI_araddr;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M32_AXI ARPROT" *) output [2:0]M32_AXI_arprot;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M32_AXI ARREADY" *) input M32_AXI_arready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M32_AXI ARVALID" *) output M32_AXI_arvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M32_AXI AWADDR" *) output [9:0]M32_AXI_awaddr;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M32_AXI AWPROT" *) output [2:0]M32_AXI_awprot;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M32_AXI AWREADY" *) input M32_AXI_awready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M32_AXI AWVALID" *) output M32_AXI_awvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M32_AXI BREADY" *) output M32_AXI_bready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M32_AXI BRESP" *) input [1:0]M32_AXI_bresp;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M32_AXI BVALID" *) input M32_AXI_bvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M32_AXI RDATA" *) input [31:0]M32_AXI_rdata;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M32_AXI RREADY" *) output M32_AXI_rready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M32_AXI RRESP" *) input [1:0]M32_AXI_rresp;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M32_AXI RVALID" *) input M32_AXI_rvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M32_AXI WDATA" *) output [31:0]M32_AXI_wdata;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M32_AXI WREADY" *) input M32_AXI_wready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M32_AXI WSTRB" *) output [3:0]M32_AXI_wstrb;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M32_AXI WVALID" *) output M32_AXI_wvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M33_AXI ARADDR" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME M33_AXI, ADDR_WIDTH 10, ARUSER_WIDTH 0, AWUSER_WIDTH 0, BUSER_WIDTH 0, CLK_DOMAIN design_1_zynq_ultra_ps_e_0_0_pl_clk0, DATA_WIDTH 32, FREQ_HZ 96968727, HAS_BRESP 1, HAS_BURST 0, HAS_CACHE 0, HAS_LOCK 0, HAS_PROT 1, HAS_QOS 0, HAS_REGION 0, HAS_RRESP 1, HAS_WSTRB 1, ID_WIDTH 0, INSERT_VIP 0, MAX_BURST_LENGTH 1, NUM_READ_OUTSTANDING 8, NUM_READ_THREADS 1, NUM_WRITE_OUTSTANDING 8, NUM_WRITE_THREADS 1, PHASE 0.0, PROTOCOL AXI4LITE, READ_WRITE_MODE READ_WRITE, RUSER_BITS_PER_BYTE 0, RUSER_WIDTH 0, SUPPORTS_NARROW_BURST 0, WUSER_BITS_PER_BYTE 0, WUSER_WIDTH 0" *) output [9:0]M33_AXI_araddr;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M33_AXI ARPROT" *) output [2:0]M33_AXI_arprot;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M33_AXI ARREADY" *) input M33_AXI_arready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M33_AXI ARVALID" *) output M33_AXI_arvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M33_AXI AWADDR" *) output [9:0]M33_AXI_awaddr;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M33_AXI AWPROT" *) output [2:0]M33_AXI_awprot;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M33_AXI AWREADY" *) input M33_AXI_awready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M33_AXI AWVALID" *) output M33_AXI_awvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M33_AXI BREADY" *) output M33_AXI_bready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M33_AXI BRESP" *) input [1:0]M33_AXI_bresp;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M33_AXI BVALID" *) input M33_AXI_bvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M33_AXI RDATA" *) input [31:0]M33_AXI_rdata;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M33_AXI RREADY" *) output M33_AXI_rready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M33_AXI RRESP" *) input [1:0]M33_AXI_rresp;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M33_AXI RVALID" *) input M33_AXI_rvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M33_AXI WDATA" *) output [31:0]M33_AXI_wdata;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M33_AXI WREADY" *) input M33_AXI_wready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M33_AXI WSTRB" *) output [3:0]M33_AXI_wstrb;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M33_AXI WVALID" *) output M33_AXI_wvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M34_AXI ARADDR" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME M34_AXI, ADDR_WIDTH 10, ARUSER_WIDTH 0, AWUSER_WIDTH 0, BUSER_WIDTH 0, CLK_DOMAIN design_1_zynq_ultra_ps_e_0_0_pl_clk0, DATA_WIDTH 32, FREQ_HZ 96968727, HAS_BRESP 1, HAS_BURST 0, HAS_CACHE 0, HAS_LOCK 0, HAS_PROT 1, HAS_QOS 0, HAS_REGION 0, HAS_RRESP 1, HAS_WSTRB 1, ID_WIDTH 0, INSERT_VIP 0, MAX_BURST_LENGTH 1, NUM_READ_OUTSTANDING 8, NUM_READ_THREADS 1, NUM_WRITE_OUTSTANDING 8, NUM_WRITE_THREADS 1, PHASE 0.0, PROTOCOL AXI4LITE, READ_WRITE_MODE READ_WRITE, RUSER_BITS_PER_BYTE 0, RUSER_WIDTH 0, SUPPORTS_NARROW_BURST 0, WUSER_BITS_PER_BYTE 0, WUSER_WIDTH 0" *) output [9:0]M34_AXI_araddr;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M34_AXI ARPROT" *) output [2:0]M34_AXI_arprot;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M34_AXI ARREADY" *) input M34_AXI_arready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M34_AXI ARVALID" *) output M34_AXI_arvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M34_AXI AWADDR" *) output [9:0]M34_AXI_awaddr;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M34_AXI AWPROT" *) output [2:0]M34_AXI_awprot;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M34_AXI AWREADY" *) input M34_AXI_awready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M34_AXI AWVALID" *) output M34_AXI_awvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M34_AXI BREADY" *) output M34_AXI_bready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M34_AXI BRESP" *) input [1:0]M34_AXI_bresp;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M34_AXI BVALID" *) input M34_AXI_bvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M34_AXI RDATA" *) input [31:0]M34_AXI_rdata;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M34_AXI RREADY" *) output M34_AXI_rready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M34_AXI RRESP" *) input [1:0]M34_AXI_rresp;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M34_AXI RVALID" *) input M34_AXI_rvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M34_AXI WDATA" *) output [31:0]M34_AXI_wdata;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M34_AXI WREADY" *) input M34_AXI_wready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M34_AXI WSTRB" *) output [3:0]M34_AXI_wstrb;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M34_AXI WVALID" *) output M34_AXI_wvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M35_AXI ARADDR" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME M35_AXI, ADDR_WIDTH 10, ARUSER_WIDTH 0, AWUSER_WIDTH 0, BUSER_WIDTH 0, CLK_DOMAIN design_1_zynq_ultra_ps_e_0_0_pl_clk0, DATA_WIDTH 32, FREQ_HZ 96968727, HAS_BRESP 1, HAS_BURST 0, HAS_CACHE 0, HAS_LOCK 0, HAS_PROT 1, HAS_QOS 0, HAS_REGION 0, HAS_RRESP 1, HAS_WSTRB 1, ID_WIDTH 0, INSERT_VIP 0, MAX_BURST_LENGTH 1, NUM_READ_OUTSTANDING 8, NUM_READ_THREADS 1, NUM_WRITE_OUTSTANDING 8, NUM_WRITE_THREADS 1, PHASE 0.0, PROTOCOL AXI4LITE, READ_WRITE_MODE READ_WRITE, RUSER_BITS_PER_BYTE 0, RUSER_WIDTH 0, SUPPORTS_NARROW_BURST 0, WUSER_BITS_PER_BYTE 0, WUSER_WIDTH 0" *) output [9:0]M35_AXI_araddr;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M35_AXI ARPROT" *) output [2:0]M35_AXI_arprot;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M35_AXI ARREADY" *) input M35_AXI_arready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M35_AXI ARVALID" *) output M35_AXI_arvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M35_AXI AWADDR" *) output [9:0]M35_AXI_awaddr;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M35_AXI AWPROT" *) output [2:0]M35_AXI_awprot;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M35_AXI AWREADY" *) input M35_AXI_awready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M35_AXI AWVALID" *) output M35_AXI_awvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M35_AXI BREADY" *) output M35_AXI_bready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M35_AXI BRESP" *) input [1:0]M35_AXI_bresp;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M35_AXI BVALID" *) input M35_AXI_bvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M35_AXI RDATA" *) input [31:0]M35_AXI_rdata;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M35_AXI RREADY" *) output M35_AXI_rready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M35_AXI RRESP" *) input [1:0]M35_AXI_rresp;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M35_AXI RVALID" *) input M35_AXI_rvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M35_AXI WDATA" *) output [31:0]M35_AXI_wdata;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M35_AXI WREADY" *) input M35_AXI_wready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M35_AXI WSTRB" *) output [3:0]M35_AXI_wstrb;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M35_AXI WVALID" *) output M35_AXI_wvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M36_AXI ARADDR" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME M36_AXI, ADDR_WIDTH 10, ARUSER_WIDTH 0, AWUSER_WIDTH 0, BUSER_WIDTH 0, CLK_DOMAIN design_1_zynq_ultra_ps_e_0_0_pl_clk0, DATA_WIDTH 32, FREQ_HZ 96968727, HAS_BRESP 1, HAS_BURST 0, HAS_CACHE 0, HAS_LOCK 0, HAS_PROT 1, HAS_QOS 0, HAS_REGION 0, HAS_RRESP 1, HAS_WSTRB 1, ID_WIDTH 0, INSERT_VIP 0, MAX_BURST_LENGTH 1, NUM_READ_OUTSTANDING 8, NUM_READ_THREADS 1, NUM_WRITE_OUTSTANDING 8, NUM_WRITE_THREADS 1, PHASE 0.0, PROTOCOL AXI4LITE, READ_WRITE_MODE READ_WRITE, RUSER_BITS_PER_BYTE 0, RUSER_WIDTH 0, SUPPORTS_NARROW_BURST 0, WUSER_BITS_PER_BYTE 0, WUSER_WIDTH 0" *) output [9:0]M36_AXI_araddr;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M36_AXI ARPROT" *) output [2:0]M36_AXI_arprot;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M36_AXI ARREADY" *) input M36_AXI_arready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M36_AXI ARVALID" *) output M36_AXI_arvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M36_AXI AWADDR" *) output [9:0]M36_AXI_awaddr;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M36_AXI AWPROT" *) output [2:0]M36_AXI_awprot;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M36_AXI AWREADY" *) input M36_AXI_awready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M36_AXI AWVALID" *) output M36_AXI_awvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M36_AXI BREADY" *) output M36_AXI_bready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M36_AXI BRESP" *) input [1:0]M36_AXI_bresp;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M36_AXI BVALID" *) input M36_AXI_bvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M36_AXI RDATA" *) input [31:0]M36_AXI_rdata;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M36_AXI RREADY" *) output M36_AXI_rready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M36_AXI RRESP" *) input [1:0]M36_AXI_rresp;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M36_AXI RVALID" *) input M36_AXI_rvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M36_AXI WDATA" *) output [31:0]M36_AXI_wdata;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M36_AXI WREADY" *) input M36_AXI_wready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M36_AXI WSTRB" *) output [3:0]M36_AXI_wstrb;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M36_AXI WVALID" *) output M36_AXI_wvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M37_AXI ARADDR" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME M37_AXI, ADDR_WIDTH 10, ARUSER_WIDTH 0, AWUSER_WIDTH 0, BUSER_WIDTH 0, CLK_DOMAIN design_1_zynq_ultra_ps_e_0_0_pl_clk0, DATA_WIDTH 32, FREQ_HZ 96968727, HAS_BRESP 1, HAS_BURST 0, HAS_CACHE 0, HAS_LOCK 0, HAS_PROT 1, HAS_QOS 0, HAS_REGION 0, HAS_RRESP 1, HAS_WSTRB 1, ID_WIDTH 0, INSERT_VIP 0, MAX_BURST_LENGTH 1, NUM_READ_OUTSTANDING 8, NUM_READ_THREADS 1, NUM_WRITE_OUTSTANDING 8, NUM_WRITE_THREADS 1, PHASE 0.0, PROTOCOL AXI4LITE, READ_WRITE_MODE READ_WRITE, RUSER_BITS_PER_BYTE 0, RUSER_WIDTH 0, SUPPORTS_NARROW_BURST 0, WUSER_BITS_PER_BYTE 0, WUSER_WIDTH 0" *) output [9:0]M37_AXI_araddr;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M37_AXI ARPROT" *) output [2:0]M37_AXI_arprot;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M37_AXI ARREADY" *) input M37_AXI_arready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M37_AXI ARVALID" *) output M37_AXI_arvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M37_AXI AWADDR" *) output [9:0]M37_AXI_awaddr;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M37_AXI AWPROT" *) output [2:0]M37_AXI_awprot;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M37_AXI AWREADY" *) input M37_AXI_awready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M37_AXI AWVALID" *) output M37_AXI_awvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M37_AXI BREADY" *) output M37_AXI_bready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M37_AXI BRESP" *) input [1:0]M37_AXI_bresp;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M37_AXI BVALID" *) input M37_AXI_bvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M37_AXI RDATA" *) input [31:0]M37_AXI_rdata;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M37_AXI RREADY" *) output M37_AXI_rready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M37_AXI RRESP" *) input [1:0]M37_AXI_rresp;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M37_AXI RVALID" *) input M37_AXI_rvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M37_AXI WDATA" *) output [31:0]M37_AXI_wdata;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M37_AXI WREADY" *) input M37_AXI_wready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M37_AXI WSTRB" *) output [3:0]M37_AXI_wstrb;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M37_AXI WVALID" *) output M37_AXI_wvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M38_AXI ARADDR" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME M38_AXI, ADDR_WIDTH 10, ARUSER_WIDTH 0, AWUSER_WIDTH 0, BUSER_WIDTH 0, CLK_DOMAIN design_1_zynq_ultra_ps_e_0_0_pl_clk0, DATA_WIDTH 32, FREQ_HZ 96968727, HAS_BRESP 1, HAS_BURST 0, HAS_CACHE 0, HAS_LOCK 0, HAS_PROT 1, HAS_QOS 0, HAS_REGION 0, HAS_RRESP 1, HAS_WSTRB 1, ID_WIDTH 0, INSERT_VIP 0, MAX_BURST_LENGTH 1, NUM_READ_OUTSTANDING 8, NUM_READ_THREADS 1, NUM_WRITE_OUTSTANDING 8, NUM_WRITE_THREADS 1, PHASE 0.0, PROTOCOL AXI4LITE, READ_WRITE_MODE READ_WRITE, RUSER_BITS_PER_BYTE 0, RUSER_WIDTH 0, SUPPORTS_NARROW_BURST 0, WUSER_BITS_PER_BYTE 0, WUSER_WIDTH 0" *) output [9:0]M38_AXI_araddr;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M38_AXI ARPROT" *) output [2:0]M38_AXI_arprot;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M38_AXI ARREADY" *) input M38_AXI_arready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M38_AXI ARVALID" *) output M38_AXI_arvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M38_AXI AWADDR" *) output [9:0]M38_AXI_awaddr;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M38_AXI AWPROT" *) output [2:0]M38_AXI_awprot;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M38_AXI AWREADY" *) input M38_AXI_awready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M38_AXI AWVALID" *) output M38_AXI_awvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M38_AXI BREADY" *) output M38_AXI_bready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M38_AXI BRESP" *) input [1:0]M38_AXI_bresp;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M38_AXI BVALID" *) input M38_AXI_bvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M38_AXI RDATA" *) input [31:0]M38_AXI_rdata;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M38_AXI RREADY" *) output M38_AXI_rready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M38_AXI RRESP" *) input [1:0]M38_AXI_rresp;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M38_AXI RVALID" *) input M38_AXI_rvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M38_AXI WDATA" *) output [31:0]M38_AXI_wdata;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M38_AXI WREADY" *) input M38_AXI_wready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M38_AXI WSTRB" *) output [3:0]M38_AXI_wstrb;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M38_AXI WVALID" *) output M38_AXI_wvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M39_AXI ARADDR" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME M39_AXI, ADDR_WIDTH 10, ARUSER_WIDTH 0, AWUSER_WIDTH 0, BUSER_WIDTH 0, CLK_DOMAIN design_1_zynq_ultra_ps_e_0_0_pl_clk0, DATA_WIDTH 32, FREQ_HZ 96968727, HAS_BRESP 1, HAS_BURST 0, HAS_CACHE 0, HAS_LOCK 0, HAS_PROT 1, HAS_QOS 0, HAS_REGION 0, HAS_RRESP 1, HAS_WSTRB 1, ID_WIDTH 0, INSERT_VIP 0, MAX_BURST_LENGTH 1, NUM_READ_OUTSTANDING 8, NUM_READ_THREADS 1, NUM_WRITE_OUTSTANDING 8, NUM_WRITE_THREADS 1, PHASE 0.0, PROTOCOL AXI4LITE, READ_WRITE_MODE READ_WRITE, RUSER_BITS_PER_BYTE 0, RUSER_WIDTH 0, SUPPORTS_NARROW_BURST 0, WUSER_BITS_PER_BYTE 0, WUSER_WIDTH 0" *) output [9:0]M39_AXI_araddr;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M39_AXI ARPROT" *) output [2:0]M39_AXI_arprot;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M39_AXI ARREADY" *) input M39_AXI_arready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M39_AXI ARVALID" *) output M39_AXI_arvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M39_AXI AWADDR" *) output [9:0]M39_AXI_awaddr;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M39_AXI AWPROT" *) output [2:0]M39_AXI_awprot;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M39_AXI AWREADY" *) input M39_AXI_awready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M39_AXI AWVALID" *) output M39_AXI_awvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M39_AXI BREADY" *) output M39_AXI_bready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M39_AXI BRESP" *) input [1:0]M39_AXI_bresp;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M39_AXI BVALID" *) input M39_AXI_bvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M39_AXI RDATA" *) input [31:0]M39_AXI_rdata;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M39_AXI RREADY" *) output M39_AXI_rready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M39_AXI RRESP" *) input [1:0]M39_AXI_rresp;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M39_AXI RVALID" *) input M39_AXI_rvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M39_AXI WDATA" *) output [31:0]M39_AXI_wdata;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M39_AXI WREADY" *) input M39_AXI_wready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M39_AXI WSTRB" *) output [3:0]M39_AXI_wstrb;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M39_AXI WVALID" *) output M39_AXI_wvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M40_AXI ARADDR" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME M40_AXI, ADDR_WIDTH 10, ARUSER_WIDTH 0, AWUSER_WIDTH 0, BUSER_WIDTH 0, CLK_DOMAIN design_1_zynq_ultra_ps_e_0_0_pl_clk0, DATA_WIDTH 32, FREQ_HZ 96968727, HAS_BRESP 1, HAS_BURST 0, HAS_CACHE 0, HAS_LOCK 0, HAS_PROT 1, HAS_QOS 0, HAS_REGION 0, HAS_RRESP 1, HAS_WSTRB 1, ID_WIDTH 0, INSERT_VIP 0, MAX_BURST_LENGTH 1, NUM_READ_OUTSTANDING 8, NUM_READ_THREADS 1, NUM_WRITE_OUTSTANDING 8, NUM_WRITE_THREADS 1, PHASE 0.0, PROTOCOL AXI4LITE, READ_WRITE_MODE READ_WRITE, RUSER_BITS_PER_BYTE 0, RUSER_WIDTH 0, SUPPORTS_NARROW_BURST 0, WUSER_BITS_PER_BYTE 0, WUSER_WIDTH 0" *) output [9:0]M40_AXI_araddr;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M40_AXI ARPROT" *) output [2:0]M40_AXI_arprot;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M40_AXI ARREADY" *) input M40_AXI_arready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M40_AXI ARVALID" *) output M40_AXI_arvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M40_AXI AWADDR" *) output [9:0]M40_AXI_awaddr;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M40_AXI AWPROT" *) output [2:0]M40_AXI_awprot;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M40_AXI AWREADY" *) input M40_AXI_awready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M40_AXI AWVALID" *) output M40_AXI_awvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M40_AXI BREADY" *) output M40_AXI_bready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M40_AXI BRESP" *) input [1:0]M40_AXI_bresp;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M40_AXI BVALID" *) input M40_AXI_bvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M40_AXI RDATA" *) input [31:0]M40_AXI_rdata;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M40_AXI RREADY" *) output M40_AXI_rready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M40_AXI RRESP" *) input [1:0]M40_AXI_rresp;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M40_AXI RVALID" *) input M40_AXI_rvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M40_AXI WDATA" *) output [31:0]M40_AXI_wdata;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M40_AXI WREADY" *) input M40_AXI_wready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M40_AXI WSTRB" *) output [3:0]M40_AXI_wstrb;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M40_AXI WVALID" *) output M40_AXI_wvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M41_AXI ARADDR" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME M41_AXI, ADDR_WIDTH 10, ARUSER_WIDTH 0, AWUSER_WIDTH 0, BUSER_WIDTH 0, CLK_DOMAIN design_1_zynq_ultra_ps_e_0_0_pl_clk0, DATA_WIDTH 32, FREQ_HZ 96968727, HAS_BRESP 1, HAS_BURST 0, HAS_CACHE 0, HAS_LOCK 0, HAS_PROT 1, HAS_QOS 0, HAS_REGION 0, HAS_RRESP 1, HAS_WSTRB 1, ID_WIDTH 0, INSERT_VIP 0, MAX_BURST_LENGTH 1, NUM_READ_OUTSTANDING 8, NUM_READ_THREADS 1, NUM_WRITE_OUTSTANDING 8, NUM_WRITE_THREADS 1, PHASE 0.0, PROTOCOL AXI4LITE, READ_WRITE_MODE READ_WRITE, RUSER_BITS_PER_BYTE 0, RUSER_WIDTH 0, SUPPORTS_NARROW_BURST 0, WUSER_BITS_PER_BYTE 0, WUSER_WIDTH 0" *) output [9:0]M41_AXI_araddr;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M41_AXI ARPROT" *) output [2:0]M41_AXI_arprot;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M41_AXI ARREADY" *) input M41_AXI_arready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M41_AXI ARVALID" *) output M41_AXI_arvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M41_AXI AWADDR" *) output [9:0]M41_AXI_awaddr;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M41_AXI AWPROT" *) output [2:0]M41_AXI_awprot;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M41_AXI AWREADY" *) input M41_AXI_awready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M41_AXI AWVALID" *) output M41_AXI_awvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M41_AXI BREADY" *) output M41_AXI_bready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M41_AXI BRESP" *) input [1:0]M41_AXI_bresp;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M41_AXI BVALID" *) input M41_AXI_bvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M41_AXI RDATA" *) input [31:0]M41_AXI_rdata;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M41_AXI RREADY" *) output M41_AXI_rready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M41_AXI RRESP" *) input [1:0]M41_AXI_rresp;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M41_AXI RVALID" *) input M41_AXI_rvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M41_AXI WDATA" *) output [31:0]M41_AXI_wdata;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M41_AXI WREADY" *) input M41_AXI_wready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M41_AXI WSTRB" *) output [3:0]M41_AXI_wstrb;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M41_AXI WVALID" *) output M41_AXI_wvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M42_AXI ARADDR" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME M42_AXI, ADDR_WIDTH 10, ARUSER_WIDTH 0, AWUSER_WIDTH 0, BUSER_WIDTH 0, CLK_DOMAIN design_1_zynq_ultra_ps_e_0_0_pl_clk0, DATA_WIDTH 32, FREQ_HZ 96968727, HAS_BRESP 1, HAS_BURST 0, HAS_CACHE 0, HAS_LOCK 0, HAS_PROT 1, HAS_QOS 0, HAS_REGION 0, HAS_RRESP 1, HAS_WSTRB 1, ID_WIDTH 0, INSERT_VIP 0, MAX_BURST_LENGTH 1, NUM_READ_OUTSTANDING 8, NUM_READ_THREADS 1, NUM_WRITE_OUTSTANDING 8, NUM_WRITE_THREADS 1, PHASE 0.0, PROTOCOL AXI4LITE, READ_WRITE_MODE READ_WRITE, RUSER_BITS_PER_BYTE 0, RUSER_WIDTH 0, SUPPORTS_NARROW_BURST 0, WUSER_BITS_PER_BYTE 0, WUSER_WIDTH 0" *) output [9:0]M42_AXI_araddr;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M42_AXI ARPROT" *) output [2:0]M42_AXI_arprot;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M42_AXI ARREADY" *) input M42_AXI_arready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M42_AXI ARVALID" *) output M42_AXI_arvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M42_AXI AWADDR" *) output [9:0]M42_AXI_awaddr;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M42_AXI AWPROT" *) output [2:0]M42_AXI_awprot;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M42_AXI AWREADY" *) input M42_AXI_awready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M42_AXI AWVALID" *) output M42_AXI_awvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M42_AXI BREADY" *) output M42_AXI_bready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M42_AXI BRESP" *) input [1:0]M42_AXI_bresp;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M42_AXI BVALID" *) input M42_AXI_bvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M42_AXI RDATA" *) input [31:0]M42_AXI_rdata;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M42_AXI RREADY" *) output M42_AXI_rready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M42_AXI RRESP" *) input [1:0]M42_AXI_rresp;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M42_AXI RVALID" *) input M42_AXI_rvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M42_AXI WDATA" *) output [31:0]M42_AXI_wdata;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M42_AXI WREADY" *) input M42_AXI_wready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M42_AXI WSTRB" *) output [3:0]M42_AXI_wstrb;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M42_AXI WVALID" *) output M42_AXI_wvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M43_AXI ARADDR" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME M43_AXI, ADDR_WIDTH 10, ARUSER_WIDTH 0, AWUSER_WIDTH 0, BUSER_WIDTH 0, CLK_DOMAIN design_1_zynq_ultra_ps_e_0_0_pl_clk0, DATA_WIDTH 32, FREQ_HZ 96968727, HAS_BRESP 1, HAS_BURST 0, HAS_CACHE 0, HAS_LOCK 0, HAS_PROT 1, HAS_QOS 0, HAS_REGION 0, HAS_RRESP 1, HAS_WSTRB 1, ID_WIDTH 0, INSERT_VIP 0, MAX_BURST_LENGTH 1, NUM_READ_OUTSTANDING 8, NUM_READ_THREADS 1, NUM_WRITE_OUTSTANDING 8, NUM_WRITE_THREADS 1, PHASE 0.0, PROTOCOL AXI4LITE, READ_WRITE_MODE READ_WRITE, RUSER_BITS_PER_BYTE 0, RUSER_WIDTH 0, SUPPORTS_NARROW_BURST 0, WUSER_BITS_PER_BYTE 0, WUSER_WIDTH 0" *) output [9:0]M43_AXI_araddr;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M43_AXI ARPROT" *) output [2:0]M43_AXI_arprot;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M43_AXI ARREADY" *) input M43_AXI_arready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M43_AXI ARVALID" *) output M43_AXI_arvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M43_AXI AWADDR" *) output [9:0]M43_AXI_awaddr;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M43_AXI AWPROT" *) output [2:0]M43_AXI_awprot;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M43_AXI AWREADY" *) input M43_AXI_awready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M43_AXI AWVALID" *) output M43_AXI_awvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M43_AXI BREADY" *) output M43_AXI_bready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M43_AXI BRESP" *) input [1:0]M43_AXI_bresp;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M43_AXI BVALID" *) input M43_AXI_bvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M43_AXI RDATA" *) input [31:0]M43_AXI_rdata;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M43_AXI RREADY" *) output M43_AXI_rready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M43_AXI RRESP" *) input [1:0]M43_AXI_rresp;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M43_AXI RVALID" *) input M43_AXI_rvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M43_AXI WDATA" *) output [31:0]M43_AXI_wdata;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M43_AXI WREADY" *) input M43_AXI_wready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M43_AXI WSTRB" *) output [3:0]M43_AXI_wstrb;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M43_AXI WVALID" *) output M43_AXI_wvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M44_AXI ARADDR" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME M44_AXI, ADDR_WIDTH 10, ARUSER_WIDTH 0, AWUSER_WIDTH 0, BUSER_WIDTH 0, CLK_DOMAIN design_1_zynq_ultra_ps_e_0_0_pl_clk0, DATA_WIDTH 32, FREQ_HZ 96968727, HAS_BRESP 1, HAS_BURST 0, HAS_CACHE 0, HAS_LOCK 0, HAS_PROT 1, HAS_QOS 0, HAS_REGION 0, HAS_RRESP 1, HAS_WSTRB 1, ID_WIDTH 0, INSERT_VIP 0, MAX_BURST_LENGTH 1, NUM_READ_OUTSTANDING 8, NUM_READ_THREADS 1, NUM_WRITE_OUTSTANDING 8, NUM_WRITE_THREADS 1, PHASE 0.0, PROTOCOL AXI4LITE, READ_WRITE_MODE READ_WRITE, RUSER_BITS_PER_BYTE 0, RUSER_WIDTH 0, SUPPORTS_NARROW_BURST 0, WUSER_BITS_PER_BYTE 0, WUSER_WIDTH 0" *) output [9:0]M44_AXI_araddr;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M44_AXI ARPROT" *) output [2:0]M44_AXI_arprot;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M44_AXI ARREADY" *) input M44_AXI_arready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M44_AXI ARVALID" *) output M44_AXI_arvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M44_AXI AWADDR" *) output [9:0]M44_AXI_awaddr;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M44_AXI AWPROT" *) output [2:0]M44_AXI_awprot;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M44_AXI AWREADY" *) input M44_AXI_awready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M44_AXI AWVALID" *) output M44_AXI_awvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M44_AXI BREADY" *) output M44_AXI_bready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M44_AXI BRESP" *) input [1:0]M44_AXI_bresp;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M44_AXI BVALID" *) input M44_AXI_bvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M44_AXI RDATA" *) input [31:0]M44_AXI_rdata;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M44_AXI RREADY" *) output M44_AXI_rready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M44_AXI RRESP" *) input [1:0]M44_AXI_rresp;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M44_AXI RVALID" *) input M44_AXI_rvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M44_AXI WDATA" *) output [31:0]M44_AXI_wdata;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M44_AXI WREADY" *) input M44_AXI_wready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M44_AXI WSTRB" *) output [3:0]M44_AXI_wstrb;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M44_AXI WVALID" *) output M44_AXI_wvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M45_AXI ARADDR" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME M45_AXI, ADDR_WIDTH 10, ARUSER_WIDTH 0, AWUSER_WIDTH 0, BUSER_WIDTH 0, CLK_DOMAIN design_1_zynq_ultra_ps_e_0_0_pl_clk0, DATA_WIDTH 32, FREQ_HZ 96968727, HAS_BRESP 1, HAS_BURST 0, HAS_CACHE 0, HAS_LOCK 0, HAS_PROT 1, HAS_QOS 0, HAS_REGION 0, HAS_RRESP 1, HAS_WSTRB 1, ID_WIDTH 0, INSERT_VIP 0, MAX_BURST_LENGTH 1, NUM_READ_OUTSTANDING 8, NUM_READ_THREADS 1, NUM_WRITE_OUTSTANDING 8, NUM_WRITE_THREADS 1, PHASE 0.0, PROTOCOL AXI4LITE, READ_WRITE_MODE READ_WRITE, RUSER_BITS_PER_BYTE 0, RUSER_WIDTH 0, SUPPORTS_NARROW_BURST 0, WUSER_BITS_PER_BYTE 0, WUSER_WIDTH 0" *) output [9:0]M45_AXI_araddr;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M45_AXI ARPROT" *) output [2:0]M45_AXI_arprot;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M45_AXI ARREADY" *) input M45_AXI_arready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M45_AXI ARVALID" *) output M45_AXI_arvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M45_AXI AWADDR" *) output [9:0]M45_AXI_awaddr;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M45_AXI AWPROT" *) output [2:0]M45_AXI_awprot;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M45_AXI AWREADY" *) input M45_AXI_awready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M45_AXI AWVALID" *) output M45_AXI_awvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M45_AXI BREADY" *) output M45_AXI_bready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M45_AXI BRESP" *) input [1:0]M45_AXI_bresp;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M45_AXI BVALID" *) input M45_AXI_bvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M45_AXI RDATA" *) input [31:0]M45_AXI_rdata;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M45_AXI RREADY" *) output M45_AXI_rready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M45_AXI RRESP" *) input [1:0]M45_AXI_rresp;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M45_AXI RVALID" *) input M45_AXI_rvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M45_AXI WDATA" *) output [31:0]M45_AXI_wdata;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M45_AXI WREADY" *) input M45_AXI_wready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M45_AXI WSTRB" *) output [3:0]M45_AXI_wstrb;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M45_AXI WVALID" *) output M45_AXI_wvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M46_AXI ARADDR" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME M46_AXI, ADDR_WIDTH 10, ARUSER_WIDTH 0, AWUSER_WIDTH 0, BUSER_WIDTH 0, CLK_DOMAIN design_1_zynq_ultra_ps_e_0_0_pl_clk0, DATA_WIDTH 32, FREQ_HZ 96968727, HAS_BRESP 1, HAS_BURST 0, HAS_CACHE 0, HAS_LOCK 0, HAS_PROT 1, HAS_QOS 0, HAS_REGION 0, HAS_RRESP 1, HAS_WSTRB 1, ID_WIDTH 0, INSERT_VIP 0, MAX_BURST_LENGTH 1, NUM_READ_OUTSTANDING 8, NUM_READ_THREADS 1, NUM_WRITE_OUTSTANDING 8, NUM_WRITE_THREADS 1, PHASE 0.0, PROTOCOL AXI4LITE, READ_WRITE_MODE READ_WRITE, RUSER_BITS_PER_BYTE 0, RUSER_WIDTH 0, SUPPORTS_NARROW_BURST 0, WUSER_BITS_PER_BYTE 0, WUSER_WIDTH 0" *) output [9:0]M46_AXI_araddr;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M46_AXI ARPROT" *) output [2:0]M46_AXI_arprot;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M46_AXI ARREADY" *) input M46_AXI_arready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M46_AXI ARVALID" *) output M46_AXI_arvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M46_AXI AWADDR" *) output [9:0]M46_AXI_awaddr;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M46_AXI AWPROT" *) output [2:0]M46_AXI_awprot;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M46_AXI AWREADY" *) input M46_AXI_awready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M46_AXI AWVALID" *) output M46_AXI_awvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M46_AXI BREADY" *) output M46_AXI_bready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M46_AXI BRESP" *) input [1:0]M46_AXI_bresp;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M46_AXI BVALID" *) input M46_AXI_bvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M46_AXI RDATA" *) input [31:0]M46_AXI_rdata;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M46_AXI RREADY" *) output M46_AXI_rready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M46_AXI RRESP" *) input [1:0]M46_AXI_rresp;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M46_AXI RVALID" *) input M46_AXI_rvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M46_AXI WDATA" *) output [31:0]M46_AXI_wdata;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M46_AXI WREADY" *) input M46_AXI_wready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M46_AXI WSTRB" *) output [3:0]M46_AXI_wstrb;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M46_AXI WVALID" *) output M46_AXI_wvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M47_AXI ARADDR" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME M47_AXI, ADDR_WIDTH 10, ARUSER_WIDTH 0, AWUSER_WIDTH 0, BUSER_WIDTH 0, CLK_DOMAIN design_1_zynq_ultra_ps_e_0_0_pl_clk0, DATA_WIDTH 32, FREQ_HZ 96968727, HAS_BRESP 1, HAS_BURST 0, HAS_CACHE 0, HAS_LOCK 0, HAS_PROT 1, HAS_QOS 0, HAS_REGION 0, HAS_RRESP 1, HAS_WSTRB 1, ID_WIDTH 0, INSERT_VIP 0, MAX_BURST_LENGTH 1, NUM_READ_OUTSTANDING 8, NUM_READ_THREADS 1, NUM_WRITE_OUTSTANDING 8, NUM_WRITE_THREADS 1, PHASE 0.0, PROTOCOL AXI4LITE, READ_WRITE_MODE READ_WRITE, RUSER_BITS_PER_BYTE 0, RUSER_WIDTH 0, SUPPORTS_NARROW_BURST 0, WUSER_BITS_PER_BYTE 0, WUSER_WIDTH 0" *) output [9:0]M47_AXI_araddr;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M47_AXI ARPROT" *) output [2:0]M47_AXI_arprot;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M47_AXI ARREADY" *) input M47_AXI_arready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M47_AXI ARVALID" *) output M47_AXI_arvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M47_AXI AWADDR" *) output [9:0]M47_AXI_awaddr;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M47_AXI AWPROT" *) output [2:0]M47_AXI_awprot;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M47_AXI AWREADY" *) input M47_AXI_awready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M47_AXI AWVALID" *) output M47_AXI_awvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M47_AXI BREADY" *) output M47_AXI_bready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M47_AXI BRESP" *) input [1:0]M47_AXI_bresp;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M47_AXI BVALID" *) input M47_AXI_bvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M47_AXI RDATA" *) input [31:0]M47_AXI_rdata;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M47_AXI RREADY" *) output M47_AXI_rready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M47_AXI RRESP" *) input [1:0]M47_AXI_rresp;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M47_AXI RVALID" *) input M47_AXI_rvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M47_AXI WDATA" *) output [31:0]M47_AXI_wdata;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M47_AXI WREADY" *) input M47_AXI_wready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M47_AXI WSTRB" *) output [3:0]M47_AXI_wstrb;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M47_AXI WVALID" *) output M47_AXI_wvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M48_AXI ARADDR" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME M48_AXI, ADDR_WIDTH 10, ARUSER_WIDTH 0, AWUSER_WIDTH 0, BUSER_WIDTH 0, CLK_DOMAIN design_1_zynq_ultra_ps_e_0_0_pl_clk0, DATA_WIDTH 32, FREQ_HZ 96968727, HAS_BRESP 1, HAS_BURST 0, HAS_CACHE 0, HAS_LOCK 0, HAS_PROT 1, HAS_QOS 0, HAS_REGION 0, HAS_RRESP 1, HAS_WSTRB 1, ID_WIDTH 0, INSERT_VIP 0, MAX_BURST_LENGTH 1, NUM_READ_OUTSTANDING 8, NUM_READ_THREADS 1, NUM_WRITE_OUTSTANDING 8, NUM_WRITE_THREADS 1, PHASE 0.0, PROTOCOL AXI4LITE, READ_WRITE_MODE READ_WRITE, RUSER_BITS_PER_BYTE 0, RUSER_WIDTH 0, SUPPORTS_NARROW_BURST 0, WUSER_BITS_PER_BYTE 0, WUSER_WIDTH 0" *) output [9:0]M48_AXI_araddr;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M48_AXI ARPROT" *) output [2:0]M48_AXI_arprot;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M48_AXI ARREADY" *) input M48_AXI_arready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M48_AXI ARVALID" *) output M48_AXI_arvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M48_AXI AWADDR" *) output [9:0]M48_AXI_awaddr;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M48_AXI AWPROT" *) output [2:0]M48_AXI_awprot;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M48_AXI AWREADY" *) input M48_AXI_awready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M48_AXI AWVALID" *) output M48_AXI_awvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M48_AXI BREADY" *) output M48_AXI_bready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M48_AXI BRESP" *) input [1:0]M48_AXI_bresp;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M48_AXI BVALID" *) input M48_AXI_bvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M48_AXI RDATA" *) input [31:0]M48_AXI_rdata;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M48_AXI RREADY" *) output M48_AXI_rready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M48_AXI RRESP" *) input [1:0]M48_AXI_rresp;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M48_AXI RVALID" *) input M48_AXI_rvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M48_AXI WDATA" *) output [31:0]M48_AXI_wdata;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M48_AXI WREADY" *) input M48_AXI_wready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M48_AXI WSTRB" *) output [3:0]M48_AXI_wstrb;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M48_AXI WVALID" *) output M48_AXI_wvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M49_AXI ARADDR" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME M49_AXI, ADDR_WIDTH 10, ARUSER_WIDTH 0, AWUSER_WIDTH 0, BUSER_WIDTH 0, CLK_DOMAIN design_1_zynq_ultra_ps_e_0_0_pl_clk0, DATA_WIDTH 32, FREQ_HZ 96968727, HAS_BRESP 1, HAS_BURST 0, HAS_CACHE 0, HAS_LOCK 0, HAS_PROT 1, HAS_QOS 0, HAS_REGION 0, HAS_RRESP 1, HAS_WSTRB 1, ID_WIDTH 0, INSERT_VIP 0, MAX_BURST_LENGTH 1, NUM_READ_OUTSTANDING 8, NUM_READ_THREADS 1, NUM_WRITE_OUTSTANDING 8, NUM_WRITE_THREADS 1, PHASE 0.0, PROTOCOL AXI4LITE, READ_WRITE_MODE READ_WRITE, RUSER_BITS_PER_BYTE 0, RUSER_WIDTH 0, SUPPORTS_NARROW_BURST 0, WUSER_BITS_PER_BYTE 0, WUSER_WIDTH 0" *) output [9:0]M49_AXI_araddr;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M49_AXI ARPROT" *) output [2:0]M49_AXI_arprot;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M49_AXI ARREADY" *) input M49_AXI_arready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M49_AXI ARVALID" *) output M49_AXI_arvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M49_AXI AWADDR" *) output [9:0]M49_AXI_awaddr;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M49_AXI AWPROT" *) output [2:0]M49_AXI_awprot;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M49_AXI AWREADY" *) input M49_AXI_awready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M49_AXI AWVALID" *) output M49_AXI_awvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M49_AXI BREADY" *) output M49_AXI_bready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M49_AXI BRESP" *) input [1:0]M49_AXI_bresp;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M49_AXI BVALID" *) input M49_AXI_bvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M49_AXI RDATA" *) input [31:0]M49_AXI_rdata;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M49_AXI RREADY" *) output M49_AXI_rready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M49_AXI RRESP" *) input [1:0]M49_AXI_rresp;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M49_AXI RVALID" *) input M49_AXI_rvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M49_AXI WDATA" *) output [31:0]M49_AXI_wdata;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M49_AXI WREADY" *) input M49_AXI_wready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M49_AXI WSTRB" *) output [3:0]M49_AXI_wstrb;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M49_AXI WVALID" *) output M49_AXI_wvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M50_AXI ARADDR" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME M50_AXI, ADDR_WIDTH 5, ARUSER_WIDTH 0, AWUSER_WIDTH 0, BUSER_WIDTH 0, CLK_DOMAIN design_1_zynq_ultra_ps_e_0_0_pl_clk0, DATA_WIDTH 32, FREQ_HZ 96968727, HAS_BRESP 1, HAS_BURST 0, HAS_CACHE 0, HAS_LOCK 0, HAS_PROT 1, HAS_QOS 0, HAS_REGION 0, HAS_RRESP 1, HAS_WSTRB 1, ID_WIDTH 0, INSERT_VIP 0, MAX_BURST_LENGTH 1, NUM_READ_OUTSTANDING 8, NUM_READ_THREADS 1, NUM_WRITE_OUTSTANDING 8, NUM_WRITE_THREADS 1, PHASE 0.0, PROTOCOL AXI4LITE, READ_WRITE_MODE READ_WRITE, RUSER_BITS_PER_BYTE 0, RUSER_WIDTH 0, SUPPORTS_NARROW_BURST 0, WUSER_BITS_PER_BYTE 0, WUSER_WIDTH 0" *) output [4:0]M50_AXI_araddr;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M50_AXI ARPROT" *) output [2:0]M50_AXI_arprot;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M50_AXI ARREADY" *) input M50_AXI_arready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M50_AXI ARVALID" *) output M50_AXI_arvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M50_AXI AWADDR" *) output [4:0]M50_AXI_awaddr;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M50_AXI AWPROT" *) output [2:0]M50_AXI_awprot;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M50_AXI AWREADY" *) input M50_AXI_awready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M50_AXI AWVALID" *) output M50_AXI_awvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M50_AXI BREADY" *) output M50_AXI_bready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M50_AXI BRESP" *) input [1:0]M50_AXI_bresp;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M50_AXI BVALID" *) input M50_AXI_bvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M50_AXI RDATA" *) input [31:0]M50_AXI_rdata;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M50_AXI RREADY" *) output M50_AXI_rready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M50_AXI RRESP" *) input [1:0]M50_AXI_rresp;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M50_AXI RVALID" *) input M50_AXI_rvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M50_AXI WDATA" *) output [31:0]M50_AXI_wdata;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M50_AXI WREADY" *) input M50_AXI_wready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M50_AXI WSTRB" *) output [3:0]M50_AXI_wstrb;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M50_AXI WVALID" *) output M50_AXI_wvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S00_AXI ARADDR" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME S00_AXI, ADDR_WIDTH 40, ARUSER_WIDTH 16, AWUSER_WIDTH 16, BUSER_WIDTH 0, CLK_DOMAIN design_1_zynq_ultra_ps_e_0_0_pl_clk0, DATA_WIDTH 32, FREQ_HZ 96968727, HAS_BRESP 1, HAS_BURST 1, HAS_CACHE 1, HAS_LOCK 1, HAS_PROT 1, HAS_QOS 1, HAS_REGION 0, HAS_RRESP 1, HAS_WSTRB 1, ID_WIDTH 16, INSERT_VIP 0, MAX_BURST_LENGTH 256, NUM_READ_OUTSTANDING 8, NUM_READ_THREADS 4, NUM_WRITE_OUTSTANDING 8, NUM_WRITE_THREADS 4, PHASE 0.0, PROTOCOL AXI4, READ_WRITE_MODE READ_WRITE, RUSER_BITS_PER_BYTE 0, RUSER_WIDTH 0, SUPPORTS_NARROW_BURST 1, WUSER_BITS_PER_BYTE 0, WUSER_WIDTH 0" *) input [39:0]S00_AXI_araddr;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S00_AXI ARBURST" *) input [1:0]S00_AXI_arburst;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S00_AXI ARCACHE" *) input [3:0]S00_AXI_arcache;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S00_AXI ARID" *) input [15:0]S00_AXI_arid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S00_AXI ARLEN" *) input [7:0]S00_AXI_arlen;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S00_AXI ARLOCK" *) input [0:0]S00_AXI_arlock;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S00_AXI ARPROT" *) input [2:0]S00_AXI_arprot;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S00_AXI ARQOS" *) input [3:0]S00_AXI_arqos;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S00_AXI ARREADY" *) output S00_AXI_arready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S00_AXI ARSIZE" *) input [2:0]S00_AXI_arsize;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S00_AXI ARUSER" *) input [15:0]S00_AXI_aruser;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S00_AXI ARVALID" *) input S00_AXI_arvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S00_AXI AWADDR" *) input [39:0]S00_AXI_awaddr;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S00_AXI AWBURST" *) input [1:0]S00_AXI_awburst;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S00_AXI AWCACHE" *) input [3:0]S00_AXI_awcache;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S00_AXI AWID" *) input [15:0]S00_AXI_awid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S00_AXI AWLEN" *) input [7:0]S00_AXI_awlen;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S00_AXI AWLOCK" *) input [0:0]S00_AXI_awlock;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S00_AXI AWPROT" *) input [2:0]S00_AXI_awprot;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S00_AXI AWQOS" *) input [3:0]S00_AXI_awqos;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S00_AXI AWREADY" *) output S00_AXI_awready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S00_AXI AWSIZE" *) input [2:0]S00_AXI_awsize;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S00_AXI AWUSER" *) input [15:0]S00_AXI_awuser;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S00_AXI AWVALID" *) input S00_AXI_awvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S00_AXI BID" *) output [15:0]S00_AXI_bid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S00_AXI BREADY" *) input S00_AXI_bready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S00_AXI BRESP" *) output [1:0]S00_AXI_bresp;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S00_AXI BVALID" *) output S00_AXI_bvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S00_AXI RDATA" *) output [31:0]S00_AXI_rdata;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S00_AXI RID" *) output [15:0]S00_AXI_rid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S00_AXI RLAST" *) output S00_AXI_rlast;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S00_AXI RREADY" *) input S00_AXI_rready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S00_AXI RRESP" *) output [1:0]S00_AXI_rresp;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S00_AXI RVALID" *) output S00_AXI_rvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S00_AXI WDATA" *) input [31:0]S00_AXI_wdata;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S00_AXI WLAST" *) input S00_AXI_wlast;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S00_AXI WREADY" *) output S00_AXI_wready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S00_AXI WSTRB" *) input [3:0]S00_AXI_wstrb;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S00_AXI WVALID" *) input S00_AXI_wvalid;
  (* X_INTERFACE_INFO = "xilinx.com:signal:clock:1.0 CLK.ACLK CLK" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME CLK.ACLK, ASSOCIATED_BUSIF M00_AXI:M01_AXI:M02_AXI:M03_AXI:M04_AXI:M05_AXI:M06_AXI:M07_AXI:M08_AXI:M09_AXI:M10_AXI:M11_AXI:M12_AXI:M13_AXI:M14_AXI:M15_AXI:M16_AXI:M17_AXI:M18_AXI:M19_AXI:M20_AXI:M21_AXI:M22_AXI:M23_AXI:M24_AXI:M25_AXI:M26_AXI:M27_AXI:M28_AXI:M29_AXI:M30_AXI:M31_AXI:M32_AXI:M33_AXI:M34_AXI:M35_AXI:M36_AXI:M37_AXI:M38_AXI:M39_AXI:M40_AXI:M41_AXI:M42_AXI:M43_AXI:M44_AXI:M45_AXI:M46_AXI:M47_AXI:M48_AXI:M49_AXI:M50_AXI:S00_AXI, ASSOCIATED_CLKEN s_sc_aclken, CLK_DOMAIN design_1_zynq_ultra_ps_e_0_0_pl_clk0, FREQ_HZ 96968727, FREQ_TOLERANCE_HZ 0, INSERT_VIP 0, PHASE 0.0" *) input aclk;
  (* X_INTERFACE_INFO = "xilinx.com:signal:reset:1.0 RST.ARESETN RST" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME RST.ARESETN, INSERT_VIP 0, POLARITY ACTIVE_LOW" *) input aresetn;

  wire [39:0]S00_AXI_1_ARADDR;
  wire [1:0]S00_AXI_1_ARBURST;
  wire [3:0]S00_AXI_1_ARCACHE;
  wire [15:0]S00_AXI_1_ARID;
  wire [7:0]S00_AXI_1_ARLEN;
  wire [0:0]S00_AXI_1_ARLOCK;
  wire [2:0]S00_AXI_1_ARPROT;
  wire [3:0]S00_AXI_1_ARQOS;
  wire S00_AXI_1_ARREADY;
  wire [2:0]S00_AXI_1_ARSIZE;
  wire [15:0]S00_AXI_1_ARUSER;
  wire S00_AXI_1_ARVALID;
  wire [39:0]S00_AXI_1_AWADDR;
  wire [1:0]S00_AXI_1_AWBURST;
  wire [3:0]S00_AXI_1_AWCACHE;
  wire [15:0]S00_AXI_1_AWID;
  wire [7:0]S00_AXI_1_AWLEN;
  wire [0:0]S00_AXI_1_AWLOCK;
  wire [2:0]S00_AXI_1_AWPROT;
  wire [3:0]S00_AXI_1_AWQOS;
  wire S00_AXI_1_AWREADY;
  wire [2:0]S00_AXI_1_AWSIZE;
  wire [15:0]S00_AXI_1_AWUSER;
  wire S00_AXI_1_AWVALID;
  wire [15:0]S00_AXI_1_BID;
  wire S00_AXI_1_BREADY;
  wire [1:0]S00_AXI_1_BRESP;
  wire S00_AXI_1_BVALID;
  wire [31:0]S00_AXI_1_RDATA;
  wire [15:0]S00_AXI_1_RID;
  wire S00_AXI_1_RLAST;
  wire S00_AXI_1_RREADY;
  wire [1:0]S00_AXI_1_RRESP;
  wire S00_AXI_1_RVALID;
  wire [31:0]S00_AXI_1_WDATA;
  wire S00_AXI_1_WLAST;
  wire S00_AXI_1_WREADY;
  wire [3:0]S00_AXI_1_WSTRB;
  wire S00_AXI_1_WVALID;
  wire [0:0]S_SC_AR_10_INFO;
  wire [181:0]S_SC_AR_10_PAYLD;
  wire [0:0]S_SC_AR_10_RECV;
  wire [0:0]S_SC_AR_10_REQ;
  wire [0:0]S_SC_AR_10_SEND;
  wire [0:0]S_SC_AR_11_INFO;
  wire [181:0]S_SC_AR_11_PAYLD;
  wire [0:0]S_SC_AR_11_RECV;
  wire [0:0]S_SC_AR_11_REQ;
  wire [0:0]S_SC_AR_11_SEND;
  wire [0:0]S_SC_AR_12_INFO;
  wire [181:0]S_SC_AR_12_PAYLD;
  wire [0:0]S_SC_AR_12_RECV;
  wire [0:0]S_SC_AR_12_REQ;
  wire [0:0]S_SC_AR_12_SEND;
  wire [0:0]S_SC_AR_13_INFO;
  wire [181:0]S_SC_AR_13_PAYLD;
  wire [0:0]S_SC_AR_13_RECV;
  wire [0:0]S_SC_AR_13_REQ;
  wire [0:0]S_SC_AR_13_SEND;
  wire [0:0]S_SC_AR_14_INFO;
  wire [181:0]S_SC_AR_14_PAYLD;
  wire [0:0]S_SC_AR_14_RECV;
  wire [0:0]S_SC_AR_14_REQ;
  wire [0:0]S_SC_AR_14_SEND;
  wire [0:0]S_SC_AR_15_INFO;
  wire [181:0]S_SC_AR_15_PAYLD;
  wire [0:0]S_SC_AR_15_RECV;
  wire [0:0]S_SC_AR_15_REQ;
  wire [0:0]S_SC_AR_15_SEND;
  wire [0:0]S_SC_AR_16_INFO;
  wire [181:0]S_SC_AR_16_PAYLD;
  wire [0:0]S_SC_AR_16_RECV;
  wire [0:0]S_SC_AR_16_REQ;
  wire [0:0]S_SC_AR_16_SEND;
  wire [0:0]S_SC_AR_17_INFO;
  wire [181:0]S_SC_AR_17_PAYLD;
  wire [0:0]S_SC_AR_17_RECV;
  wire [0:0]S_SC_AR_17_REQ;
  wire [0:0]S_SC_AR_17_SEND;
  wire [0:0]S_SC_AR_18_INFO;
  wire [181:0]S_SC_AR_18_PAYLD;
  wire [0:0]S_SC_AR_18_RECV;
  wire [0:0]S_SC_AR_18_REQ;
  wire [0:0]S_SC_AR_18_SEND;
  wire [0:0]S_SC_AR_19_INFO;
  wire [181:0]S_SC_AR_19_PAYLD;
  wire [0:0]S_SC_AR_19_RECV;
  wire [0:0]S_SC_AR_19_REQ;
  wire [0:0]S_SC_AR_19_SEND;
  wire [0:0]S_SC_AR_1_INFO;
  wire [179:0]S_SC_AR_1_PAYLD;
  wire [0:0]S_SC_AR_1_RECV;
  wire S_SC_AR_1_REQ;
  wire S_SC_AR_1_SEND;
  wire [0:0]S_SC_AR_20_INFO;
  wire [181:0]S_SC_AR_20_PAYLD;
  wire [0:0]S_SC_AR_20_RECV;
  wire [0:0]S_SC_AR_20_REQ;
  wire [0:0]S_SC_AR_20_SEND;
  wire [0:0]S_SC_AR_21_INFO;
  wire [181:0]S_SC_AR_21_PAYLD;
  wire [0:0]S_SC_AR_21_RECV;
  wire [0:0]S_SC_AR_21_REQ;
  wire [0:0]S_SC_AR_21_SEND;
  wire [0:0]S_SC_AR_22_INFO;
  wire [181:0]S_SC_AR_22_PAYLD;
  wire [0:0]S_SC_AR_22_RECV;
  wire [0:0]S_SC_AR_22_REQ;
  wire [0:0]S_SC_AR_22_SEND;
  wire [0:0]S_SC_AR_23_INFO;
  wire [181:0]S_SC_AR_23_PAYLD;
  wire [0:0]S_SC_AR_23_RECV;
  wire [0:0]S_SC_AR_23_REQ;
  wire [0:0]S_SC_AR_23_SEND;
  wire [0:0]S_SC_AR_24_INFO;
  wire [181:0]S_SC_AR_24_PAYLD;
  wire [0:0]S_SC_AR_24_RECV;
  wire [0:0]S_SC_AR_24_REQ;
  wire [0:0]S_SC_AR_24_SEND;
  wire [0:0]S_SC_AR_25_INFO;
  wire [181:0]S_SC_AR_25_PAYLD;
  wire [0:0]S_SC_AR_25_RECV;
  wire [0:0]S_SC_AR_25_REQ;
  wire [0:0]S_SC_AR_25_SEND;
  wire [0:0]S_SC_AR_26_INFO;
  wire [181:0]S_SC_AR_26_PAYLD;
  wire [0:0]S_SC_AR_26_RECV;
  wire [0:0]S_SC_AR_26_REQ;
  wire [0:0]S_SC_AR_26_SEND;
  wire [0:0]S_SC_AR_27_INFO;
  wire [181:0]S_SC_AR_27_PAYLD;
  wire [0:0]S_SC_AR_27_RECV;
  wire [0:0]S_SC_AR_27_REQ;
  wire [0:0]S_SC_AR_27_SEND;
  wire [0:0]S_SC_AR_28_INFO;
  wire [181:0]S_SC_AR_28_PAYLD;
  wire [0:0]S_SC_AR_28_RECV;
  wire [0:0]S_SC_AR_28_REQ;
  wire [0:0]S_SC_AR_28_SEND;
  wire [0:0]S_SC_AR_29_INFO;
  wire [181:0]S_SC_AR_29_PAYLD;
  wire [0:0]S_SC_AR_29_RECV;
  wire [0:0]S_SC_AR_29_REQ;
  wire [0:0]S_SC_AR_29_SEND;
  wire [0:0]S_SC_AR_2_INFO;
  wire [181:0]S_SC_AR_2_PAYLD;
  wire [0:0]S_SC_AR_2_RECV;
  wire [0:0]S_SC_AR_2_REQ;
  wire [0:0]S_SC_AR_2_SEND;
  wire [0:0]S_SC_AR_30_INFO;
  wire [181:0]S_SC_AR_30_PAYLD;
  wire [0:0]S_SC_AR_30_RECV;
  wire [0:0]S_SC_AR_30_REQ;
  wire [0:0]S_SC_AR_30_SEND;
  wire [0:0]S_SC_AR_31_INFO;
  wire [181:0]S_SC_AR_31_PAYLD;
  wire [0:0]S_SC_AR_31_RECV;
  wire [0:0]S_SC_AR_31_REQ;
  wire [0:0]S_SC_AR_31_SEND;
  wire [0:0]S_SC_AR_32_INFO;
  wire [181:0]S_SC_AR_32_PAYLD;
  wire [0:0]S_SC_AR_32_RECV;
  wire [0:0]S_SC_AR_32_REQ;
  wire [0:0]S_SC_AR_32_SEND;
  wire [0:0]S_SC_AR_33_INFO;
  wire [181:0]S_SC_AR_33_PAYLD;
  wire [0:0]S_SC_AR_33_RECV;
  wire [0:0]S_SC_AR_33_REQ;
  wire [0:0]S_SC_AR_33_SEND;
  wire [0:0]S_SC_AR_34_INFO;
  wire [181:0]S_SC_AR_34_PAYLD;
  wire [0:0]S_SC_AR_34_RECV;
  wire [0:0]S_SC_AR_34_REQ;
  wire [0:0]S_SC_AR_34_SEND;
  wire [0:0]S_SC_AR_35_INFO;
  wire [181:0]S_SC_AR_35_PAYLD;
  wire [0:0]S_SC_AR_35_RECV;
  wire [0:0]S_SC_AR_35_REQ;
  wire [0:0]S_SC_AR_35_SEND;
  wire [0:0]S_SC_AR_36_INFO;
  wire [181:0]S_SC_AR_36_PAYLD;
  wire [0:0]S_SC_AR_36_RECV;
  wire [0:0]S_SC_AR_36_REQ;
  wire [0:0]S_SC_AR_36_SEND;
  wire [0:0]S_SC_AR_37_INFO;
  wire [181:0]S_SC_AR_37_PAYLD;
  wire [0:0]S_SC_AR_37_RECV;
  wire [0:0]S_SC_AR_37_REQ;
  wire [0:0]S_SC_AR_37_SEND;
  wire [0:0]S_SC_AR_38_INFO;
  wire [181:0]S_SC_AR_38_PAYLD;
  wire [0:0]S_SC_AR_38_RECV;
  wire [0:0]S_SC_AR_38_REQ;
  wire [0:0]S_SC_AR_38_SEND;
  wire [0:0]S_SC_AR_39_INFO;
  wire [181:0]S_SC_AR_39_PAYLD;
  wire [0:0]S_SC_AR_39_RECV;
  wire [0:0]S_SC_AR_39_REQ;
  wire [0:0]S_SC_AR_39_SEND;
  wire [0:0]S_SC_AR_3_INFO;
  wire [181:0]S_SC_AR_3_PAYLD;
  wire [0:0]S_SC_AR_3_RECV;
  wire [0:0]S_SC_AR_3_REQ;
  wire [0:0]S_SC_AR_3_SEND;
  wire [0:0]S_SC_AR_40_INFO;
  wire [181:0]S_SC_AR_40_PAYLD;
  wire [0:0]S_SC_AR_40_RECV;
  wire [0:0]S_SC_AR_40_REQ;
  wire [0:0]S_SC_AR_40_SEND;
  wire [0:0]S_SC_AR_41_INFO;
  wire [181:0]S_SC_AR_41_PAYLD;
  wire [0:0]S_SC_AR_41_RECV;
  wire [0:0]S_SC_AR_41_REQ;
  wire [0:0]S_SC_AR_41_SEND;
  wire [0:0]S_SC_AR_42_INFO;
  wire [181:0]S_SC_AR_42_PAYLD;
  wire [0:0]S_SC_AR_42_RECV;
  wire [0:0]S_SC_AR_42_REQ;
  wire [0:0]S_SC_AR_42_SEND;
  wire [0:0]S_SC_AR_43_INFO;
  wire [181:0]S_SC_AR_43_PAYLD;
  wire [0:0]S_SC_AR_43_RECV;
  wire [0:0]S_SC_AR_43_REQ;
  wire [0:0]S_SC_AR_43_SEND;
  wire [0:0]S_SC_AR_44_INFO;
  wire [181:0]S_SC_AR_44_PAYLD;
  wire [0:0]S_SC_AR_44_RECV;
  wire [0:0]S_SC_AR_44_REQ;
  wire [0:0]S_SC_AR_44_SEND;
  wire [0:0]S_SC_AR_45_INFO;
  wire [181:0]S_SC_AR_45_PAYLD;
  wire [0:0]S_SC_AR_45_RECV;
  wire [0:0]S_SC_AR_45_REQ;
  wire [0:0]S_SC_AR_45_SEND;
  wire [0:0]S_SC_AR_46_INFO;
  wire [181:0]S_SC_AR_46_PAYLD;
  wire [0:0]S_SC_AR_46_RECV;
  wire [0:0]S_SC_AR_46_REQ;
  wire [0:0]S_SC_AR_46_SEND;
  wire [0:0]S_SC_AR_47_INFO;
  wire [181:0]S_SC_AR_47_PAYLD;
  wire [0:0]S_SC_AR_47_RECV;
  wire [0:0]S_SC_AR_47_REQ;
  wire [0:0]S_SC_AR_47_SEND;
  wire [0:0]S_SC_AR_48_INFO;
  wire [181:0]S_SC_AR_48_PAYLD;
  wire [0:0]S_SC_AR_48_RECV;
  wire [0:0]S_SC_AR_48_REQ;
  wire [0:0]S_SC_AR_48_SEND;
  wire [0:0]S_SC_AR_49_INFO;
  wire [181:0]S_SC_AR_49_PAYLD;
  wire [0:0]S_SC_AR_49_RECV;
  wire [0:0]S_SC_AR_49_REQ;
  wire [0:0]S_SC_AR_49_SEND;
  wire [0:0]S_SC_AR_4_INFO;
  wire [181:0]S_SC_AR_4_PAYLD;
  wire [0:0]S_SC_AR_4_RECV;
  wire [0:0]S_SC_AR_4_REQ;
  wire [0:0]S_SC_AR_4_SEND;
  wire [0:0]S_SC_AR_50_INFO;
  wire [181:0]S_SC_AR_50_PAYLD;
  wire [0:0]S_SC_AR_50_RECV;
  wire [0:0]S_SC_AR_50_REQ;
  wire [0:0]S_SC_AR_50_SEND;
  wire [0:0]S_SC_AR_51_INFO;
  wire [181:0]S_SC_AR_51_PAYLD;
  wire [0:0]S_SC_AR_51_RECV;
  wire [0:0]S_SC_AR_51_REQ;
  wire [0:0]S_SC_AR_51_SEND;
  wire [0:0]S_SC_AR_52_INFO;
  wire [181:0]S_SC_AR_52_PAYLD;
  wire [0:0]S_SC_AR_52_RECV;
  wire [0:0]S_SC_AR_52_REQ;
  wire [0:0]S_SC_AR_52_SEND;
  wire [0:0]S_SC_AR_5_INFO;
  wire [181:0]S_SC_AR_5_PAYLD;
  wire [0:0]S_SC_AR_5_RECV;
  wire [0:0]S_SC_AR_5_REQ;
  wire [0:0]S_SC_AR_5_SEND;
  wire [0:0]S_SC_AR_6_INFO;
  wire [181:0]S_SC_AR_6_PAYLD;
  wire [0:0]S_SC_AR_6_RECV;
  wire [0:0]S_SC_AR_6_REQ;
  wire [0:0]S_SC_AR_6_SEND;
  wire [0:0]S_SC_AR_7_INFO;
  wire [181:0]S_SC_AR_7_PAYLD;
  wire [0:0]S_SC_AR_7_RECV;
  wire [0:0]S_SC_AR_7_REQ;
  wire [0:0]S_SC_AR_7_SEND;
  wire [0:0]S_SC_AR_8_INFO;
  wire [181:0]S_SC_AR_8_PAYLD;
  wire [0:0]S_SC_AR_8_RECV;
  wire [0:0]S_SC_AR_8_REQ;
  wire [0:0]S_SC_AR_8_SEND;
  wire [0:0]S_SC_AR_9_INFO;
  wire [181:0]S_SC_AR_9_PAYLD;
  wire [0:0]S_SC_AR_9_RECV;
  wire [0:0]S_SC_AR_9_REQ;
  wire [0:0]S_SC_AR_9_SEND;
  wire [0:0]S_SC_AW_10_INFO;
  wire [181:0]S_SC_AW_10_PAYLD;
  wire [0:0]S_SC_AW_10_RECV;
  wire [0:0]S_SC_AW_10_REQ;
  wire [0:0]S_SC_AW_10_SEND;
  wire [0:0]S_SC_AW_11_INFO;
  wire [181:0]S_SC_AW_11_PAYLD;
  wire [0:0]S_SC_AW_11_RECV;
  wire [0:0]S_SC_AW_11_REQ;
  wire [0:0]S_SC_AW_11_SEND;
  wire [0:0]S_SC_AW_12_INFO;
  wire [181:0]S_SC_AW_12_PAYLD;
  wire [0:0]S_SC_AW_12_RECV;
  wire [0:0]S_SC_AW_12_REQ;
  wire [0:0]S_SC_AW_12_SEND;
  wire [0:0]S_SC_AW_13_INFO;
  wire [181:0]S_SC_AW_13_PAYLD;
  wire [0:0]S_SC_AW_13_RECV;
  wire [0:0]S_SC_AW_13_REQ;
  wire [0:0]S_SC_AW_13_SEND;
  wire [0:0]S_SC_AW_14_INFO;
  wire [181:0]S_SC_AW_14_PAYLD;
  wire [0:0]S_SC_AW_14_RECV;
  wire [0:0]S_SC_AW_14_REQ;
  wire [0:0]S_SC_AW_14_SEND;
  wire [0:0]S_SC_AW_15_INFO;
  wire [181:0]S_SC_AW_15_PAYLD;
  wire [0:0]S_SC_AW_15_RECV;
  wire [0:0]S_SC_AW_15_REQ;
  wire [0:0]S_SC_AW_15_SEND;
  wire [0:0]S_SC_AW_16_INFO;
  wire [181:0]S_SC_AW_16_PAYLD;
  wire [0:0]S_SC_AW_16_RECV;
  wire [0:0]S_SC_AW_16_REQ;
  wire [0:0]S_SC_AW_16_SEND;
  wire [0:0]S_SC_AW_17_INFO;
  wire [181:0]S_SC_AW_17_PAYLD;
  wire [0:0]S_SC_AW_17_RECV;
  wire [0:0]S_SC_AW_17_REQ;
  wire [0:0]S_SC_AW_17_SEND;
  wire [0:0]S_SC_AW_18_INFO;
  wire [181:0]S_SC_AW_18_PAYLD;
  wire [0:0]S_SC_AW_18_RECV;
  wire [0:0]S_SC_AW_18_REQ;
  wire [0:0]S_SC_AW_18_SEND;
  wire [0:0]S_SC_AW_19_INFO;
  wire [181:0]S_SC_AW_19_PAYLD;
  wire [0:0]S_SC_AW_19_RECV;
  wire [0:0]S_SC_AW_19_REQ;
  wire [0:0]S_SC_AW_19_SEND;
  wire [0:0]S_SC_AW_1_INFO;
  wire [179:0]S_SC_AW_1_PAYLD;
  wire [0:0]S_SC_AW_1_RECV;
  wire S_SC_AW_1_REQ;
  wire S_SC_AW_1_SEND;
  wire [0:0]S_SC_AW_20_INFO;
  wire [181:0]S_SC_AW_20_PAYLD;
  wire [0:0]S_SC_AW_20_RECV;
  wire [0:0]S_SC_AW_20_REQ;
  wire [0:0]S_SC_AW_20_SEND;
  wire [0:0]S_SC_AW_21_INFO;
  wire [181:0]S_SC_AW_21_PAYLD;
  wire [0:0]S_SC_AW_21_RECV;
  wire [0:0]S_SC_AW_21_REQ;
  wire [0:0]S_SC_AW_21_SEND;
  wire [0:0]S_SC_AW_22_INFO;
  wire [181:0]S_SC_AW_22_PAYLD;
  wire [0:0]S_SC_AW_22_RECV;
  wire [0:0]S_SC_AW_22_REQ;
  wire [0:0]S_SC_AW_22_SEND;
  wire [0:0]S_SC_AW_23_INFO;
  wire [181:0]S_SC_AW_23_PAYLD;
  wire [0:0]S_SC_AW_23_RECV;
  wire [0:0]S_SC_AW_23_REQ;
  wire [0:0]S_SC_AW_23_SEND;
  wire [0:0]S_SC_AW_24_INFO;
  wire [181:0]S_SC_AW_24_PAYLD;
  wire [0:0]S_SC_AW_24_RECV;
  wire [0:0]S_SC_AW_24_REQ;
  wire [0:0]S_SC_AW_24_SEND;
  wire [0:0]S_SC_AW_25_INFO;
  wire [181:0]S_SC_AW_25_PAYLD;
  wire [0:0]S_SC_AW_25_RECV;
  wire [0:0]S_SC_AW_25_REQ;
  wire [0:0]S_SC_AW_25_SEND;
  wire [0:0]S_SC_AW_26_INFO;
  wire [181:0]S_SC_AW_26_PAYLD;
  wire [0:0]S_SC_AW_26_RECV;
  wire [0:0]S_SC_AW_26_REQ;
  wire [0:0]S_SC_AW_26_SEND;
  wire [0:0]S_SC_AW_27_INFO;
  wire [181:0]S_SC_AW_27_PAYLD;
  wire [0:0]S_SC_AW_27_RECV;
  wire [0:0]S_SC_AW_27_REQ;
  wire [0:0]S_SC_AW_27_SEND;
  wire [0:0]S_SC_AW_28_INFO;
  wire [181:0]S_SC_AW_28_PAYLD;
  wire [0:0]S_SC_AW_28_RECV;
  wire [0:0]S_SC_AW_28_REQ;
  wire [0:0]S_SC_AW_28_SEND;
  wire [0:0]S_SC_AW_29_INFO;
  wire [181:0]S_SC_AW_29_PAYLD;
  wire [0:0]S_SC_AW_29_RECV;
  wire [0:0]S_SC_AW_29_REQ;
  wire [0:0]S_SC_AW_29_SEND;
  wire [0:0]S_SC_AW_2_INFO;
  wire [181:0]S_SC_AW_2_PAYLD;
  wire [0:0]S_SC_AW_2_RECV;
  wire [0:0]S_SC_AW_2_REQ;
  wire [0:0]S_SC_AW_2_SEND;
  wire [0:0]S_SC_AW_30_INFO;
  wire [181:0]S_SC_AW_30_PAYLD;
  wire [0:0]S_SC_AW_30_RECV;
  wire [0:0]S_SC_AW_30_REQ;
  wire [0:0]S_SC_AW_30_SEND;
  wire [0:0]S_SC_AW_31_INFO;
  wire [181:0]S_SC_AW_31_PAYLD;
  wire [0:0]S_SC_AW_31_RECV;
  wire [0:0]S_SC_AW_31_REQ;
  wire [0:0]S_SC_AW_31_SEND;
  wire [0:0]S_SC_AW_32_INFO;
  wire [181:0]S_SC_AW_32_PAYLD;
  wire [0:0]S_SC_AW_32_RECV;
  wire [0:0]S_SC_AW_32_REQ;
  wire [0:0]S_SC_AW_32_SEND;
  wire [0:0]S_SC_AW_33_INFO;
  wire [181:0]S_SC_AW_33_PAYLD;
  wire [0:0]S_SC_AW_33_RECV;
  wire [0:0]S_SC_AW_33_REQ;
  wire [0:0]S_SC_AW_33_SEND;
  wire [0:0]S_SC_AW_34_INFO;
  wire [181:0]S_SC_AW_34_PAYLD;
  wire [0:0]S_SC_AW_34_RECV;
  wire [0:0]S_SC_AW_34_REQ;
  wire [0:0]S_SC_AW_34_SEND;
  wire [0:0]S_SC_AW_35_INFO;
  wire [181:0]S_SC_AW_35_PAYLD;
  wire [0:0]S_SC_AW_35_RECV;
  wire [0:0]S_SC_AW_35_REQ;
  wire [0:0]S_SC_AW_35_SEND;
  wire [0:0]S_SC_AW_36_INFO;
  wire [181:0]S_SC_AW_36_PAYLD;
  wire [0:0]S_SC_AW_36_RECV;
  wire [0:0]S_SC_AW_36_REQ;
  wire [0:0]S_SC_AW_36_SEND;
  wire [0:0]S_SC_AW_37_INFO;
  wire [181:0]S_SC_AW_37_PAYLD;
  wire [0:0]S_SC_AW_37_RECV;
  wire [0:0]S_SC_AW_37_REQ;
  wire [0:0]S_SC_AW_37_SEND;
  wire [0:0]S_SC_AW_38_INFO;
  wire [181:0]S_SC_AW_38_PAYLD;
  wire [0:0]S_SC_AW_38_RECV;
  wire [0:0]S_SC_AW_38_REQ;
  wire [0:0]S_SC_AW_38_SEND;
  wire [0:0]S_SC_AW_39_INFO;
  wire [181:0]S_SC_AW_39_PAYLD;
  wire [0:0]S_SC_AW_39_RECV;
  wire [0:0]S_SC_AW_39_REQ;
  wire [0:0]S_SC_AW_39_SEND;
  wire [0:0]S_SC_AW_3_INFO;
  wire [181:0]S_SC_AW_3_PAYLD;
  wire [0:0]S_SC_AW_3_RECV;
  wire [0:0]S_SC_AW_3_REQ;
  wire [0:0]S_SC_AW_3_SEND;
  wire [0:0]S_SC_AW_40_INFO;
  wire [181:0]S_SC_AW_40_PAYLD;
  wire [0:0]S_SC_AW_40_RECV;
  wire [0:0]S_SC_AW_40_REQ;
  wire [0:0]S_SC_AW_40_SEND;
  wire [0:0]S_SC_AW_41_INFO;
  wire [181:0]S_SC_AW_41_PAYLD;
  wire [0:0]S_SC_AW_41_RECV;
  wire [0:0]S_SC_AW_41_REQ;
  wire [0:0]S_SC_AW_41_SEND;
  wire [0:0]S_SC_AW_42_INFO;
  wire [181:0]S_SC_AW_42_PAYLD;
  wire [0:0]S_SC_AW_42_RECV;
  wire [0:0]S_SC_AW_42_REQ;
  wire [0:0]S_SC_AW_42_SEND;
  wire [0:0]S_SC_AW_43_INFO;
  wire [181:0]S_SC_AW_43_PAYLD;
  wire [0:0]S_SC_AW_43_RECV;
  wire [0:0]S_SC_AW_43_REQ;
  wire [0:0]S_SC_AW_43_SEND;
  wire [0:0]S_SC_AW_44_INFO;
  wire [181:0]S_SC_AW_44_PAYLD;
  wire [0:0]S_SC_AW_44_RECV;
  wire [0:0]S_SC_AW_44_REQ;
  wire [0:0]S_SC_AW_44_SEND;
  wire [0:0]S_SC_AW_45_INFO;
  wire [181:0]S_SC_AW_45_PAYLD;
  wire [0:0]S_SC_AW_45_RECV;
  wire [0:0]S_SC_AW_45_REQ;
  wire [0:0]S_SC_AW_45_SEND;
  wire [0:0]S_SC_AW_46_INFO;
  wire [181:0]S_SC_AW_46_PAYLD;
  wire [0:0]S_SC_AW_46_RECV;
  wire [0:0]S_SC_AW_46_REQ;
  wire [0:0]S_SC_AW_46_SEND;
  wire [0:0]S_SC_AW_47_INFO;
  wire [181:0]S_SC_AW_47_PAYLD;
  wire [0:0]S_SC_AW_47_RECV;
  wire [0:0]S_SC_AW_47_REQ;
  wire [0:0]S_SC_AW_47_SEND;
  wire [0:0]S_SC_AW_48_INFO;
  wire [181:0]S_SC_AW_48_PAYLD;
  wire [0:0]S_SC_AW_48_RECV;
  wire [0:0]S_SC_AW_48_REQ;
  wire [0:0]S_SC_AW_48_SEND;
  wire [0:0]S_SC_AW_49_INFO;
  wire [181:0]S_SC_AW_49_PAYLD;
  wire [0:0]S_SC_AW_49_RECV;
  wire [0:0]S_SC_AW_49_REQ;
  wire [0:0]S_SC_AW_49_SEND;
  wire [0:0]S_SC_AW_4_INFO;
  wire [181:0]S_SC_AW_4_PAYLD;
  wire [0:0]S_SC_AW_4_RECV;
  wire [0:0]S_SC_AW_4_REQ;
  wire [0:0]S_SC_AW_4_SEND;
  wire [0:0]S_SC_AW_50_INFO;
  wire [181:0]S_SC_AW_50_PAYLD;
  wire [0:0]S_SC_AW_50_RECV;
  wire [0:0]S_SC_AW_50_REQ;
  wire [0:0]S_SC_AW_50_SEND;
  wire [0:0]S_SC_AW_51_INFO;
  wire [181:0]S_SC_AW_51_PAYLD;
  wire [0:0]S_SC_AW_51_RECV;
  wire [0:0]S_SC_AW_51_REQ;
  wire [0:0]S_SC_AW_51_SEND;
  wire [0:0]S_SC_AW_52_INFO;
  wire [181:0]S_SC_AW_52_PAYLD;
  wire [0:0]S_SC_AW_52_RECV;
  wire [0:0]S_SC_AW_52_REQ;
  wire [0:0]S_SC_AW_52_SEND;
  wire [0:0]S_SC_AW_5_INFO;
  wire [181:0]S_SC_AW_5_PAYLD;
  wire [0:0]S_SC_AW_5_RECV;
  wire [0:0]S_SC_AW_5_REQ;
  wire [0:0]S_SC_AW_5_SEND;
  wire [0:0]S_SC_AW_6_INFO;
  wire [181:0]S_SC_AW_6_PAYLD;
  wire [0:0]S_SC_AW_6_RECV;
  wire [0:0]S_SC_AW_6_REQ;
  wire [0:0]S_SC_AW_6_SEND;
  wire [0:0]S_SC_AW_7_INFO;
  wire [181:0]S_SC_AW_7_PAYLD;
  wire [0:0]S_SC_AW_7_RECV;
  wire [0:0]S_SC_AW_7_REQ;
  wire [0:0]S_SC_AW_7_SEND;
  wire [0:0]S_SC_AW_8_INFO;
  wire [181:0]S_SC_AW_8_PAYLD;
  wire [0:0]S_SC_AW_8_RECV;
  wire [0:0]S_SC_AW_8_REQ;
  wire [0:0]S_SC_AW_8_SEND;
  wire [0:0]S_SC_AW_9_INFO;
  wire [181:0]S_SC_AW_9_PAYLD;
  wire [0:0]S_SC_AW_9_RECV;
  wire [0:0]S_SC_AW_9_REQ;
  wire [0:0]S_SC_AW_9_SEND;
  wire [0:0]S_SC_B_10_INFO;
  wire [8:0]S_SC_B_10_PAYLD;
  wire [0:0]S_SC_B_10_RECV;
  wire S_SC_B_10_REQ;
  wire S_SC_B_10_SEND;
  wire [0:0]S_SC_B_11_INFO;
  wire [8:0]S_SC_B_11_PAYLD;
  wire [0:0]S_SC_B_11_RECV;
  wire S_SC_B_11_REQ;
  wire S_SC_B_11_SEND;
  wire [0:0]S_SC_B_12_INFO;
  wire [8:0]S_SC_B_12_PAYLD;
  wire [0:0]S_SC_B_12_RECV;
  wire S_SC_B_12_REQ;
  wire S_SC_B_12_SEND;
  wire [0:0]S_SC_B_13_INFO;
  wire [8:0]S_SC_B_13_PAYLD;
  wire [0:0]S_SC_B_13_RECV;
  wire S_SC_B_13_REQ;
  wire S_SC_B_13_SEND;
  wire [0:0]S_SC_B_14_INFO;
  wire [8:0]S_SC_B_14_PAYLD;
  wire [0:0]S_SC_B_14_RECV;
  wire S_SC_B_14_REQ;
  wire S_SC_B_14_SEND;
  wire [0:0]S_SC_B_15_INFO;
  wire [8:0]S_SC_B_15_PAYLD;
  wire [0:0]S_SC_B_15_RECV;
  wire S_SC_B_15_REQ;
  wire S_SC_B_15_SEND;
  wire [0:0]S_SC_B_16_INFO;
  wire [8:0]S_SC_B_16_PAYLD;
  wire [0:0]S_SC_B_16_RECV;
  wire S_SC_B_16_REQ;
  wire S_SC_B_16_SEND;
  wire [0:0]S_SC_B_17_INFO;
  wire [8:0]S_SC_B_17_PAYLD;
  wire [0:0]S_SC_B_17_RECV;
  wire S_SC_B_17_REQ;
  wire S_SC_B_17_SEND;
  wire [0:0]S_SC_B_18_INFO;
  wire [8:0]S_SC_B_18_PAYLD;
  wire [0:0]S_SC_B_18_RECV;
  wire S_SC_B_18_REQ;
  wire S_SC_B_18_SEND;
  wire [0:0]S_SC_B_19_INFO;
  wire [8:0]S_SC_B_19_PAYLD;
  wire [0:0]S_SC_B_19_RECV;
  wire S_SC_B_19_REQ;
  wire S_SC_B_19_SEND;
  wire [7:0]S_SC_B_1_INFO;
  wire [8:0]S_SC_B_1_PAYLD;
  wire [7:0]S_SC_B_1_RECV;
  wire [7:0]S_SC_B_1_REQ;
  wire [7:0]S_SC_B_1_SEND;
  wire [0:0]S_SC_B_20_INFO;
  wire [8:0]S_SC_B_20_PAYLD;
  wire [0:0]S_SC_B_20_RECV;
  wire S_SC_B_20_REQ;
  wire S_SC_B_20_SEND;
  wire [0:0]S_SC_B_21_INFO;
  wire [8:0]S_SC_B_21_PAYLD;
  wire [0:0]S_SC_B_21_RECV;
  wire S_SC_B_21_REQ;
  wire S_SC_B_21_SEND;
  wire [0:0]S_SC_B_22_INFO;
  wire [8:0]S_SC_B_22_PAYLD;
  wire [0:0]S_SC_B_22_RECV;
  wire S_SC_B_22_REQ;
  wire S_SC_B_22_SEND;
  wire [0:0]S_SC_B_23_INFO;
  wire [8:0]S_SC_B_23_PAYLD;
  wire [0:0]S_SC_B_23_RECV;
  wire S_SC_B_23_REQ;
  wire S_SC_B_23_SEND;
  wire [0:0]S_SC_B_24_INFO;
  wire [8:0]S_SC_B_24_PAYLD;
  wire [0:0]S_SC_B_24_RECV;
  wire S_SC_B_24_REQ;
  wire S_SC_B_24_SEND;
  wire [0:0]S_SC_B_25_INFO;
  wire [8:0]S_SC_B_25_PAYLD;
  wire [0:0]S_SC_B_25_RECV;
  wire S_SC_B_25_REQ;
  wire S_SC_B_25_SEND;
  wire [0:0]S_SC_B_26_INFO;
  wire [8:0]S_SC_B_26_PAYLD;
  wire [0:0]S_SC_B_26_RECV;
  wire S_SC_B_26_REQ;
  wire S_SC_B_26_SEND;
  wire [0:0]S_SC_B_27_INFO;
  wire [8:0]S_SC_B_27_PAYLD;
  wire [0:0]S_SC_B_27_RECV;
  wire S_SC_B_27_REQ;
  wire S_SC_B_27_SEND;
  wire [0:0]S_SC_B_28_INFO;
  wire [8:0]S_SC_B_28_PAYLD;
  wire [0:0]S_SC_B_28_RECV;
  wire S_SC_B_28_REQ;
  wire S_SC_B_28_SEND;
  wire [0:0]S_SC_B_29_INFO;
  wire [8:0]S_SC_B_29_PAYLD;
  wire [0:0]S_SC_B_29_RECV;
  wire S_SC_B_29_REQ;
  wire S_SC_B_29_SEND;
  wire [0:0]S_SC_B_2_INFO;
  wire [8:0]S_SC_B_2_PAYLD;
  wire [0:0]S_SC_B_2_RECV;
  wire S_SC_B_2_REQ;
  wire S_SC_B_2_SEND;
  wire [0:0]S_SC_B_30_INFO;
  wire [8:0]S_SC_B_30_PAYLD;
  wire [0:0]S_SC_B_30_RECV;
  wire S_SC_B_30_REQ;
  wire S_SC_B_30_SEND;
  wire [0:0]S_SC_B_31_INFO;
  wire [8:0]S_SC_B_31_PAYLD;
  wire [0:0]S_SC_B_31_RECV;
  wire S_SC_B_31_REQ;
  wire S_SC_B_31_SEND;
  wire [0:0]S_SC_B_32_INFO;
  wire [8:0]S_SC_B_32_PAYLD;
  wire [0:0]S_SC_B_32_RECV;
  wire S_SC_B_32_REQ;
  wire S_SC_B_32_SEND;
  wire [0:0]S_SC_B_33_INFO;
  wire [8:0]S_SC_B_33_PAYLD;
  wire [0:0]S_SC_B_33_RECV;
  wire S_SC_B_33_REQ;
  wire S_SC_B_33_SEND;
  wire [0:0]S_SC_B_34_INFO;
  wire [8:0]S_SC_B_34_PAYLD;
  wire [0:0]S_SC_B_34_RECV;
  wire S_SC_B_34_REQ;
  wire S_SC_B_34_SEND;
  wire [0:0]S_SC_B_35_INFO;
  wire [8:0]S_SC_B_35_PAYLD;
  wire [0:0]S_SC_B_35_RECV;
  wire S_SC_B_35_REQ;
  wire S_SC_B_35_SEND;
  wire [0:0]S_SC_B_36_INFO;
  wire [8:0]S_SC_B_36_PAYLD;
  wire [0:0]S_SC_B_36_RECV;
  wire S_SC_B_36_REQ;
  wire S_SC_B_36_SEND;
  wire [0:0]S_SC_B_37_INFO;
  wire [8:0]S_SC_B_37_PAYLD;
  wire [0:0]S_SC_B_37_RECV;
  wire S_SC_B_37_REQ;
  wire S_SC_B_37_SEND;
  wire [0:0]S_SC_B_38_INFO;
  wire [8:0]S_SC_B_38_PAYLD;
  wire [0:0]S_SC_B_38_RECV;
  wire S_SC_B_38_REQ;
  wire S_SC_B_38_SEND;
  wire [0:0]S_SC_B_39_INFO;
  wire [8:0]S_SC_B_39_PAYLD;
  wire [0:0]S_SC_B_39_RECV;
  wire S_SC_B_39_REQ;
  wire S_SC_B_39_SEND;
  wire [0:0]S_SC_B_3_INFO;
  wire [8:0]S_SC_B_3_PAYLD;
  wire [0:0]S_SC_B_3_RECV;
  wire S_SC_B_3_REQ;
  wire S_SC_B_3_SEND;
  wire [0:0]S_SC_B_40_INFO;
  wire [8:0]S_SC_B_40_PAYLD;
  wire [0:0]S_SC_B_40_RECV;
  wire S_SC_B_40_REQ;
  wire S_SC_B_40_SEND;
  wire [0:0]S_SC_B_41_INFO;
  wire [8:0]S_SC_B_41_PAYLD;
  wire [0:0]S_SC_B_41_RECV;
  wire S_SC_B_41_REQ;
  wire S_SC_B_41_SEND;
  wire [0:0]S_SC_B_42_INFO;
  wire [8:0]S_SC_B_42_PAYLD;
  wire [0:0]S_SC_B_42_RECV;
  wire S_SC_B_42_REQ;
  wire S_SC_B_42_SEND;
  wire [0:0]S_SC_B_43_INFO;
  wire [8:0]S_SC_B_43_PAYLD;
  wire [0:0]S_SC_B_43_RECV;
  wire S_SC_B_43_REQ;
  wire S_SC_B_43_SEND;
  wire [0:0]S_SC_B_44_INFO;
  wire [8:0]S_SC_B_44_PAYLD;
  wire [0:0]S_SC_B_44_RECV;
  wire S_SC_B_44_REQ;
  wire S_SC_B_44_SEND;
  wire [0:0]S_SC_B_45_INFO;
  wire [8:0]S_SC_B_45_PAYLD;
  wire [0:0]S_SC_B_45_RECV;
  wire S_SC_B_45_REQ;
  wire S_SC_B_45_SEND;
  wire [0:0]S_SC_B_46_INFO;
  wire [8:0]S_SC_B_46_PAYLD;
  wire [0:0]S_SC_B_46_RECV;
  wire S_SC_B_46_REQ;
  wire S_SC_B_46_SEND;
  wire [0:0]S_SC_B_47_INFO;
  wire [8:0]S_SC_B_47_PAYLD;
  wire [0:0]S_SC_B_47_RECV;
  wire S_SC_B_47_REQ;
  wire S_SC_B_47_SEND;
  wire [0:0]S_SC_B_48_INFO;
  wire [8:0]S_SC_B_48_PAYLD;
  wire [0:0]S_SC_B_48_RECV;
  wire S_SC_B_48_REQ;
  wire S_SC_B_48_SEND;
  wire [0:0]S_SC_B_49_INFO;
  wire [8:0]S_SC_B_49_PAYLD;
  wire [0:0]S_SC_B_49_RECV;
  wire S_SC_B_49_REQ;
  wire S_SC_B_49_SEND;
  wire [0:0]S_SC_B_4_INFO;
  wire [8:0]S_SC_B_4_PAYLD;
  wire [0:0]S_SC_B_4_RECV;
  wire S_SC_B_4_REQ;
  wire S_SC_B_4_SEND;
  wire [0:0]S_SC_B_50_INFO;
  wire [8:0]S_SC_B_50_PAYLD;
  wire [0:0]S_SC_B_50_RECV;
  wire S_SC_B_50_REQ;
  wire S_SC_B_50_SEND;
  wire [0:0]S_SC_B_51_INFO;
  wire [8:0]S_SC_B_51_PAYLD;
  wire [0:0]S_SC_B_51_RECV;
  wire S_SC_B_51_REQ;
  wire S_SC_B_51_SEND;
  wire [0:0]S_SC_B_52_INFO;
  wire [8:0]S_SC_B_52_PAYLD;
  wire [0:0]S_SC_B_52_RECV;
  wire S_SC_B_52_REQ;
  wire S_SC_B_52_SEND;
  wire [0:0]S_SC_B_5_INFO;
  wire [8:0]S_SC_B_5_PAYLD;
  wire [0:0]S_SC_B_5_RECV;
  wire S_SC_B_5_REQ;
  wire S_SC_B_5_SEND;
  wire [0:0]S_SC_B_6_INFO;
  wire [8:0]S_SC_B_6_PAYLD;
  wire [0:0]S_SC_B_6_RECV;
  wire S_SC_B_6_REQ;
  wire S_SC_B_6_SEND;
  wire [0:0]S_SC_B_7_INFO;
  wire [8:0]S_SC_B_7_PAYLD;
  wire [0:0]S_SC_B_7_RECV;
  wire S_SC_B_7_REQ;
  wire S_SC_B_7_SEND;
  wire [0:0]S_SC_B_8_INFO;
  wire [8:0]S_SC_B_8_PAYLD;
  wire [0:0]S_SC_B_8_RECV;
  wire S_SC_B_8_REQ;
  wire S_SC_B_8_SEND;
  wire [0:0]S_SC_B_9_INFO;
  wire [8:0]S_SC_B_9_PAYLD;
  wire [0:0]S_SC_B_9_RECV;
  wire S_SC_B_9_REQ;
  wire S_SC_B_9_SEND;
  wire [0:0]S_SC_R_10_INFO;
  wire [54:0]S_SC_R_10_PAYLD;
  wire [0:0]S_SC_R_10_RECV;
  wire S_SC_R_10_REQ;
  wire S_SC_R_10_SEND;
  wire [0:0]S_SC_R_11_INFO;
  wire [54:0]S_SC_R_11_PAYLD;
  wire [0:0]S_SC_R_11_RECV;
  wire S_SC_R_11_REQ;
  wire S_SC_R_11_SEND;
  wire [0:0]S_SC_R_12_INFO;
  wire [54:0]S_SC_R_12_PAYLD;
  wire [0:0]S_SC_R_12_RECV;
  wire S_SC_R_12_REQ;
  wire S_SC_R_12_SEND;
  wire [0:0]S_SC_R_13_INFO;
  wire [54:0]S_SC_R_13_PAYLD;
  wire [0:0]S_SC_R_13_RECV;
  wire S_SC_R_13_REQ;
  wire S_SC_R_13_SEND;
  wire [0:0]S_SC_R_14_INFO;
  wire [54:0]S_SC_R_14_PAYLD;
  wire [0:0]S_SC_R_14_RECV;
  wire S_SC_R_14_REQ;
  wire S_SC_R_14_SEND;
  wire [0:0]S_SC_R_15_INFO;
  wire [54:0]S_SC_R_15_PAYLD;
  wire [0:0]S_SC_R_15_RECV;
  wire S_SC_R_15_REQ;
  wire S_SC_R_15_SEND;
  wire [0:0]S_SC_R_16_INFO;
  wire [54:0]S_SC_R_16_PAYLD;
  wire [0:0]S_SC_R_16_RECV;
  wire S_SC_R_16_REQ;
  wire S_SC_R_16_SEND;
  wire [0:0]S_SC_R_17_INFO;
  wire [54:0]S_SC_R_17_PAYLD;
  wire [0:0]S_SC_R_17_RECV;
  wire S_SC_R_17_REQ;
  wire S_SC_R_17_SEND;
  wire [0:0]S_SC_R_18_INFO;
  wire [54:0]S_SC_R_18_PAYLD;
  wire [0:0]S_SC_R_18_RECV;
  wire S_SC_R_18_REQ;
  wire S_SC_R_18_SEND;
  wire [0:0]S_SC_R_19_INFO;
  wire [54:0]S_SC_R_19_PAYLD;
  wire [0:0]S_SC_R_19_RECV;
  wire S_SC_R_19_REQ;
  wire S_SC_R_19_SEND;
  wire [7:0]S_SC_R_1_INFO;
  wire [54:0]S_SC_R_1_PAYLD;
  wire [7:0]S_SC_R_1_RECV;
  wire [7:0]S_SC_R_1_REQ;
  wire [7:0]S_SC_R_1_SEND;
  wire [0:0]S_SC_R_20_INFO;
  wire [54:0]S_SC_R_20_PAYLD;
  wire [0:0]S_SC_R_20_RECV;
  wire S_SC_R_20_REQ;
  wire S_SC_R_20_SEND;
  wire [0:0]S_SC_R_21_INFO;
  wire [54:0]S_SC_R_21_PAYLD;
  wire [0:0]S_SC_R_21_RECV;
  wire S_SC_R_21_REQ;
  wire S_SC_R_21_SEND;
  wire [0:0]S_SC_R_22_INFO;
  wire [54:0]S_SC_R_22_PAYLD;
  wire [0:0]S_SC_R_22_RECV;
  wire S_SC_R_22_REQ;
  wire S_SC_R_22_SEND;
  wire [0:0]S_SC_R_23_INFO;
  wire [54:0]S_SC_R_23_PAYLD;
  wire [0:0]S_SC_R_23_RECV;
  wire S_SC_R_23_REQ;
  wire S_SC_R_23_SEND;
  wire [0:0]S_SC_R_24_INFO;
  wire [54:0]S_SC_R_24_PAYLD;
  wire [0:0]S_SC_R_24_RECV;
  wire S_SC_R_24_REQ;
  wire S_SC_R_24_SEND;
  wire [0:0]S_SC_R_25_INFO;
  wire [54:0]S_SC_R_25_PAYLD;
  wire [0:0]S_SC_R_25_RECV;
  wire S_SC_R_25_REQ;
  wire S_SC_R_25_SEND;
  wire [0:0]S_SC_R_26_INFO;
  wire [54:0]S_SC_R_26_PAYLD;
  wire [0:0]S_SC_R_26_RECV;
  wire S_SC_R_26_REQ;
  wire S_SC_R_26_SEND;
  wire [0:0]S_SC_R_27_INFO;
  wire [54:0]S_SC_R_27_PAYLD;
  wire [0:0]S_SC_R_27_RECV;
  wire S_SC_R_27_REQ;
  wire S_SC_R_27_SEND;
  wire [0:0]S_SC_R_28_INFO;
  wire [54:0]S_SC_R_28_PAYLD;
  wire [0:0]S_SC_R_28_RECV;
  wire S_SC_R_28_REQ;
  wire S_SC_R_28_SEND;
  wire [0:0]S_SC_R_29_INFO;
  wire [54:0]S_SC_R_29_PAYLD;
  wire [0:0]S_SC_R_29_RECV;
  wire S_SC_R_29_REQ;
  wire S_SC_R_29_SEND;
  wire [0:0]S_SC_R_2_INFO;
  wire [54:0]S_SC_R_2_PAYLD;
  wire [0:0]S_SC_R_2_RECV;
  wire S_SC_R_2_REQ;
  wire S_SC_R_2_SEND;
  wire [0:0]S_SC_R_30_INFO;
  wire [54:0]S_SC_R_30_PAYLD;
  wire [0:0]S_SC_R_30_RECV;
  wire S_SC_R_30_REQ;
  wire S_SC_R_30_SEND;
  wire [0:0]S_SC_R_31_INFO;
  wire [54:0]S_SC_R_31_PAYLD;
  wire [0:0]S_SC_R_31_RECV;
  wire S_SC_R_31_REQ;
  wire S_SC_R_31_SEND;
  wire [0:0]S_SC_R_32_INFO;
  wire [54:0]S_SC_R_32_PAYLD;
  wire [0:0]S_SC_R_32_RECV;
  wire S_SC_R_32_REQ;
  wire S_SC_R_32_SEND;
  wire [0:0]S_SC_R_33_INFO;
  wire [54:0]S_SC_R_33_PAYLD;
  wire [0:0]S_SC_R_33_RECV;
  wire S_SC_R_33_REQ;
  wire S_SC_R_33_SEND;
  wire [0:0]S_SC_R_34_INFO;
  wire [54:0]S_SC_R_34_PAYLD;
  wire [0:0]S_SC_R_34_RECV;
  wire S_SC_R_34_REQ;
  wire S_SC_R_34_SEND;
  wire [0:0]S_SC_R_35_INFO;
  wire [54:0]S_SC_R_35_PAYLD;
  wire [0:0]S_SC_R_35_RECV;
  wire S_SC_R_35_REQ;
  wire S_SC_R_35_SEND;
  wire [0:0]S_SC_R_36_INFO;
  wire [54:0]S_SC_R_36_PAYLD;
  wire [0:0]S_SC_R_36_RECV;
  wire S_SC_R_36_REQ;
  wire S_SC_R_36_SEND;
  wire [0:0]S_SC_R_37_INFO;
  wire [54:0]S_SC_R_37_PAYLD;
  wire [0:0]S_SC_R_37_RECV;
  wire S_SC_R_37_REQ;
  wire S_SC_R_37_SEND;
  wire [0:0]S_SC_R_38_INFO;
  wire [54:0]S_SC_R_38_PAYLD;
  wire [0:0]S_SC_R_38_RECV;
  wire S_SC_R_38_REQ;
  wire S_SC_R_38_SEND;
  wire [0:0]S_SC_R_39_INFO;
  wire [54:0]S_SC_R_39_PAYLD;
  wire [0:0]S_SC_R_39_RECV;
  wire S_SC_R_39_REQ;
  wire S_SC_R_39_SEND;
  wire [0:0]S_SC_R_3_INFO;
  wire [54:0]S_SC_R_3_PAYLD;
  wire [0:0]S_SC_R_3_RECV;
  wire S_SC_R_3_REQ;
  wire S_SC_R_3_SEND;
  wire [0:0]S_SC_R_40_INFO;
  wire [54:0]S_SC_R_40_PAYLD;
  wire [0:0]S_SC_R_40_RECV;
  wire S_SC_R_40_REQ;
  wire S_SC_R_40_SEND;
  wire [0:0]S_SC_R_41_INFO;
  wire [54:0]S_SC_R_41_PAYLD;
  wire [0:0]S_SC_R_41_RECV;
  wire S_SC_R_41_REQ;
  wire S_SC_R_41_SEND;
  wire [0:0]S_SC_R_42_INFO;
  wire [54:0]S_SC_R_42_PAYLD;
  wire [0:0]S_SC_R_42_RECV;
  wire S_SC_R_42_REQ;
  wire S_SC_R_42_SEND;
  wire [0:0]S_SC_R_43_INFO;
  wire [54:0]S_SC_R_43_PAYLD;
  wire [0:0]S_SC_R_43_RECV;
  wire S_SC_R_43_REQ;
  wire S_SC_R_43_SEND;
  wire [0:0]S_SC_R_44_INFO;
  wire [54:0]S_SC_R_44_PAYLD;
  wire [0:0]S_SC_R_44_RECV;
  wire S_SC_R_44_REQ;
  wire S_SC_R_44_SEND;
  wire [0:0]S_SC_R_45_INFO;
  wire [54:0]S_SC_R_45_PAYLD;
  wire [0:0]S_SC_R_45_RECV;
  wire S_SC_R_45_REQ;
  wire S_SC_R_45_SEND;
  wire [0:0]S_SC_R_46_INFO;
  wire [54:0]S_SC_R_46_PAYLD;
  wire [0:0]S_SC_R_46_RECV;
  wire S_SC_R_46_REQ;
  wire S_SC_R_46_SEND;
  wire [0:0]S_SC_R_47_INFO;
  wire [54:0]S_SC_R_47_PAYLD;
  wire [0:0]S_SC_R_47_RECV;
  wire S_SC_R_47_REQ;
  wire S_SC_R_47_SEND;
  wire [0:0]S_SC_R_48_INFO;
  wire [54:0]S_SC_R_48_PAYLD;
  wire [0:0]S_SC_R_48_RECV;
  wire S_SC_R_48_REQ;
  wire S_SC_R_48_SEND;
  wire [0:0]S_SC_R_49_INFO;
  wire [54:0]S_SC_R_49_PAYLD;
  wire [0:0]S_SC_R_49_RECV;
  wire S_SC_R_49_REQ;
  wire S_SC_R_49_SEND;
  wire [0:0]S_SC_R_4_INFO;
  wire [54:0]S_SC_R_4_PAYLD;
  wire [0:0]S_SC_R_4_RECV;
  wire S_SC_R_4_REQ;
  wire S_SC_R_4_SEND;
  wire [0:0]S_SC_R_50_INFO;
  wire [54:0]S_SC_R_50_PAYLD;
  wire [0:0]S_SC_R_50_RECV;
  wire S_SC_R_50_REQ;
  wire S_SC_R_50_SEND;
  wire [0:0]S_SC_R_51_INFO;
  wire [54:0]S_SC_R_51_PAYLD;
  wire [0:0]S_SC_R_51_RECV;
  wire S_SC_R_51_REQ;
  wire S_SC_R_51_SEND;
  wire [0:0]S_SC_R_52_INFO;
  wire [54:0]S_SC_R_52_PAYLD;
  wire [0:0]S_SC_R_52_RECV;
  wire S_SC_R_52_REQ;
  wire S_SC_R_52_SEND;
  wire [0:0]S_SC_R_5_INFO;
  wire [54:0]S_SC_R_5_PAYLD;
  wire [0:0]S_SC_R_5_RECV;
  wire S_SC_R_5_REQ;
  wire S_SC_R_5_SEND;
  wire [0:0]S_SC_R_6_INFO;
  wire [54:0]S_SC_R_6_PAYLD;
  wire [0:0]S_SC_R_6_RECV;
  wire S_SC_R_6_REQ;
  wire S_SC_R_6_SEND;
  wire [0:0]S_SC_R_7_INFO;
  wire [54:0]S_SC_R_7_PAYLD;
  wire [0:0]S_SC_R_7_RECV;
  wire S_SC_R_7_REQ;
  wire S_SC_R_7_SEND;
  wire [0:0]S_SC_R_8_INFO;
  wire [54:0]S_SC_R_8_PAYLD;
  wire [0:0]S_SC_R_8_RECV;
  wire S_SC_R_8_REQ;
  wire S_SC_R_8_SEND;
  wire [0:0]S_SC_R_9_INFO;
  wire [54:0]S_SC_R_9_PAYLD;
  wire [0:0]S_SC_R_9_RECV;
  wire S_SC_R_9_REQ;
  wire S_SC_R_9_SEND;
  wire [0:0]S_SC_W_10_INFO;
  wire [68:0]S_SC_W_10_PAYLD;
  wire [0:0]S_SC_W_10_RECV;
  wire [0:0]S_SC_W_10_REQ;
  wire [0:0]S_SC_W_10_SEND;
  wire [0:0]S_SC_W_11_INFO;
  wire [68:0]S_SC_W_11_PAYLD;
  wire [0:0]S_SC_W_11_RECV;
  wire [0:0]S_SC_W_11_REQ;
  wire [0:0]S_SC_W_11_SEND;
  wire [0:0]S_SC_W_12_INFO;
  wire [68:0]S_SC_W_12_PAYLD;
  wire [0:0]S_SC_W_12_RECV;
  wire [0:0]S_SC_W_12_REQ;
  wire [0:0]S_SC_W_12_SEND;
  wire [0:0]S_SC_W_13_INFO;
  wire [68:0]S_SC_W_13_PAYLD;
  wire [0:0]S_SC_W_13_RECV;
  wire [0:0]S_SC_W_13_REQ;
  wire [0:0]S_SC_W_13_SEND;
  wire [0:0]S_SC_W_14_INFO;
  wire [68:0]S_SC_W_14_PAYLD;
  wire [0:0]S_SC_W_14_RECV;
  wire [0:0]S_SC_W_14_REQ;
  wire [0:0]S_SC_W_14_SEND;
  wire [0:0]S_SC_W_15_INFO;
  wire [68:0]S_SC_W_15_PAYLD;
  wire [0:0]S_SC_W_15_RECV;
  wire [0:0]S_SC_W_15_REQ;
  wire [0:0]S_SC_W_15_SEND;
  wire [0:0]S_SC_W_16_INFO;
  wire [68:0]S_SC_W_16_PAYLD;
  wire [0:0]S_SC_W_16_RECV;
  wire [0:0]S_SC_W_16_REQ;
  wire [0:0]S_SC_W_16_SEND;
  wire [0:0]S_SC_W_17_INFO;
  wire [68:0]S_SC_W_17_PAYLD;
  wire [0:0]S_SC_W_17_RECV;
  wire [0:0]S_SC_W_17_REQ;
  wire [0:0]S_SC_W_17_SEND;
  wire [0:0]S_SC_W_18_INFO;
  wire [68:0]S_SC_W_18_PAYLD;
  wire [0:0]S_SC_W_18_RECV;
  wire [0:0]S_SC_W_18_REQ;
  wire [0:0]S_SC_W_18_SEND;
  wire [0:0]S_SC_W_19_INFO;
  wire [68:0]S_SC_W_19_PAYLD;
  wire [0:0]S_SC_W_19_RECV;
  wire [0:0]S_SC_W_19_REQ;
  wire [0:0]S_SC_W_19_SEND;
  wire [0:0]S_SC_W_1_INFO;
  wire [66:0]S_SC_W_1_PAYLD;
  wire [0:0]S_SC_W_1_RECV;
  wire S_SC_W_1_REQ;
  wire S_SC_W_1_SEND;
  wire [0:0]S_SC_W_20_INFO;
  wire [68:0]S_SC_W_20_PAYLD;
  wire [0:0]S_SC_W_20_RECV;
  wire [0:0]S_SC_W_20_REQ;
  wire [0:0]S_SC_W_20_SEND;
  wire [0:0]S_SC_W_21_INFO;
  wire [68:0]S_SC_W_21_PAYLD;
  wire [0:0]S_SC_W_21_RECV;
  wire [0:0]S_SC_W_21_REQ;
  wire [0:0]S_SC_W_21_SEND;
  wire [0:0]S_SC_W_22_INFO;
  wire [68:0]S_SC_W_22_PAYLD;
  wire [0:0]S_SC_W_22_RECV;
  wire [0:0]S_SC_W_22_REQ;
  wire [0:0]S_SC_W_22_SEND;
  wire [0:0]S_SC_W_23_INFO;
  wire [68:0]S_SC_W_23_PAYLD;
  wire [0:0]S_SC_W_23_RECV;
  wire [0:0]S_SC_W_23_REQ;
  wire [0:0]S_SC_W_23_SEND;
  wire [0:0]S_SC_W_24_INFO;
  wire [68:0]S_SC_W_24_PAYLD;
  wire [0:0]S_SC_W_24_RECV;
  wire [0:0]S_SC_W_24_REQ;
  wire [0:0]S_SC_W_24_SEND;
  wire [0:0]S_SC_W_25_INFO;
  wire [68:0]S_SC_W_25_PAYLD;
  wire [0:0]S_SC_W_25_RECV;
  wire [0:0]S_SC_W_25_REQ;
  wire [0:0]S_SC_W_25_SEND;
  wire [0:0]S_SC_W_26_INFO;
  wire [68:0]S_SC_W_26_PAYLD;
  wire [0:0]S_SC_W_26_RECV;
  wire [0:0]S_SC_W_26_REQ;
  wire [0:0]S_SC_W_26_SEND;
  wire [0:0]S_SC_W_27_INFO;
  wire [68:0]S_SC_W_27_PAYLD;
  wire [0:0]S_SC_W_27_RECV;
  wire [0:0]S_SC_W_27_REQ;
  wire [0:0]S_SC_W_27_SEND;
  wire [0:0]S_SC_W_28_INFO;
  wire [68:0]S_SC_W_28_PAYLD;
  wire [0:0]S_SC_W_28_RECV;
  wire [0:0]S_SC_W_28_REQ;
  wire [0:0]S_SC_W_28_SEND;
  wire [0:0]S_SC_W_29_INFO;
  wire [68:0]S_SC_W_29_PAYLD;
  wire [0:0]S_SC_W_29_RECV;
  wire [0:0]S_SC_W_29_REQ;
  wire [0:0]S_SC_W_29_SEND;
  wire [0:0]S_SC_W_2_INFO;
  wire [68:0]S_SC_W_2_PAYLD;
  wire [0:0]S_SC_W_2_RECV;
  wire [0:0]S_SC_W_2_REQ;
  wire [0:0]S_SC_W_2_SEND;
  wire [0:0]S_SC_W_30_INFO;
  wire [68:0]S_SC_W_30_PAYLD;
  wire [0:0]S_SC_W_30_RECV;
  wire [0:0]S_SC_W_30_REQ;
  wire [0:0]S_SC_W_30_SEND;
  wire [0:0]S_SC_W_31_INFO;
  wire [68:0]S_SC_W_31_PAYLD;
  wire [0:0]S_SC_W_31_RECV;
  wire [0:0]S_SC_W_31_REQ;
  wire [0:0]S_SC_W_31_SEND;
  wire [0:0]S_SC_W_32_INFO;
  wire [68:0]S_SC_W_32_PAYLD;
  wire [0:0]S_SC_W_32_RECV;
  wire [0:0]S_SC_W_32_REQ;
  wire [0:0]S_SC_W_32_SEND;
  wire [0:0]S_SC_W_33_INFO;
  wire [68:0]S_SC_W_33_PAYLD;
  wire [0:0]S_SC_W_33_RECV;
  wire [0:0]S_SC_W_33_REQ;
  wire [0:0]S_SC_W_33_SEND;
  wire [0:0]S_SC_W_34_INFO;
  wire [68:0]S_SC_W_34_PAYLD;
  wire [0:0]S_SC_W_34_RECV;
  wire [0:0]S_SC_W_34_REQ;
  wire [0:0]S_SC_W_34_SEND;
  wire [0:0]S_SC_W_35_INFO;
  wire [68:0]S_SC_W_35_PAYLD;
  wire [0:0]S_SC_W_35_RECV;
  wire [0:0]S_SC_W_35_REQ;
  wire [0:0]S_SC_W_35_SEND;
  wire [0:0]S_SC_W_36_INFO;
  wire [68:0]S_SC_W_36_PAYLD;
  wire [0:0]S_SC_W_36_RECV;
  wire [0:0]S_SC_W_36_REQ;
  wire [0:0]S_SC_W_36_SEND;
  wire [0:0]S_SC_W_37_INFO;
  wire [68:0]S_SC_W_37_PAYLD;
  wire [0:0]S_SC_W_37_RECV;
  wire [0:0]S_SC_W_37_REQ;
  wire [0:0]S_SC_W_37_SEND;
  wire [0:0]S_SC_W_38_INFO;
  wire [68:0]S_SC_W_38_PAYLD;
  wire [0:0]S_SC_W_38_RECV;
  wire [0:0]S_SC_W_38_REQ;
  wire [0:0]S_SC_W_38_SEND;
  wire [0:0]S_SC_W_39_INFO;
  wire [68:0]S_SC_W_39_PAYLD;
  wire [0:0]S_SC_W_39_RECV;
  wire [0:0]S_SC_W_39_REQ;
  wire [0:0]S_SC_W_39_SEND;
  wire [0:0]S_SC_W_3_INFO;
  wire [68:0]S_SC_W_3_PAYLD;
  wire [0:0]S_SC_W_3_RECV;
  wire [0:0]S_SC_W_3_REQ;
  wire [0:0]S_SC_W_3_SEND;
  wire [0:0]S_SC_W_40_INFO;
  wire [68:0]S_SC_W_40_PAYLD;
  wire [0:0]S_SC_W_40_RECV;
  wire [0:0]S_SC_W_40_REQ;
  wire [0:0]S_SC_W_40_SEND;
  wire [0:0]S_SC_W_41_INFO;
  wire [68:0]S_SC_W_41_PAYLD;
  wire [0:0]S_SC_W_41_RECV;
  wire [0:0]S_SC_W_41_REQ;
  wire [0:0]S_SC_W_41_SEND;
  wire [0:0]S_SC_W_42_INFO;
  wire [68:0]S_SC_W_42_PAYLD;
  wire [0:0]S_SC_W_42_RECV;
  wire [0:0]S_SC_W_42_REQ;
  wire [0:0]S_SC_W_42_SEND;
  wire [0:0]S_SC_W_43_INFO;
  wire [68:0]S_SC_W_43_PAYLD;
  wire [0:0]S_SC_W_43_RECV;
  wire [0:0]S_SC_W_43_REQ;
  wire [0:0]S_SC_W_43_SEND;
  wire [0:0]S_SC_W_44_INFO;
  wire [68:0]S_SC_W_44_PAYLD;
  wire [0:0]S_SC_W_44_RECV;
  wire [0:0]S_SC_W_44_REQ;
  wire [0:0]S_SC_W_44_SEND;
  wire [0:0]S_SC_W_45_INFO;
  wire [68:0]S_SC_W_45_PAYLD;
  wire [0:0]S_SC_W_45_RECV;
  wire [0:0]S_SC_W_45_REQ;
  wire [0:0]S_SC_W_45_SEND;
  wire [0:0]S_SC_W_46_INFO;
  wire [68:0]S_SC_W_46_PAYLD;
  wire [0:0]S_SC_W_46_RECV;
  wire [0:0]S_SC_W_46_REQ;
  wire [0:0]S_SC_W_46_SEND;
  wire [0:0]S_SC_W_47_INFO;
  wire [68:0]S_SC_W_47_PAYLD;
  wire [0:0]S_SC_W_47_RECV;
  wire [0:0]S_SC_W_47_REQ;
  wire [0:0]S_SC_W_47_SEND;
  wire [0:0]S_SC_W_48_INFO;
  wire [68:0]S_SC_W_48_PAYLD;
  wire [0:0]S_SC_W_48_RECV;
  wire [0:0]S_SC_W_48_REQ;
  wire [0:0]S_SC_W_48_SEND;
  wire [0:0]S_SC_W_49_INFO;
  wire [68:0]S_SC_W_49_PAYLD;
  wire [0:0]S_SC_W_49_RECV;
  wire [0:0]S_SC_W_49_REQ;
  wire [0:0]S_SC_W_49_SEND;
  wire [0:0]S_SC_W_4_INFO;
  wire [68:0]S_SC_W_4_PAYLD;
  wire [0:0]S_SC_W_4_RECV;
  wire [0:0]S_SC_W_4_REQ;
  wire [0:0]S_SC_W_4_SEND;
  wire [0:0]S_SC_W_50_INFO;
  wire [68:0]S_SC_W_50_PAYLD;
  wire [0:0]S_SC_W_50_RECV;
  wire [0:0]S_SC_W_50_REQ;
  wire [0:0]S_SC_W_50_SEND;
  wire [0:0]S_SC_W_51_INFO;
  wire [68:0]S_SC_W_51_PAYLD;
  wire [0:0]S_SC_W_51_RECV;
  wire [0:0]S_SC_W_51_REQ;
  wire [0:0]S_SC_W_51_SEND;
  wire [0:0]S_SC_W_52_INFO;
  wire [68:0]S_SC_W_52_PAYLD;
  wire [0:0]S_SC_W_52_RECV;
  wire [0:0]S_SC_W_52_REQ;
  wire [0:0]S_SC_W_52_SEND;
  wire [0:0]S_SC_W_5_INFO;
  wire [68:0]S_SC_W_5_PAYLD;
  wire [0:0]S_SC_W_5_RECV;
  wire [0:0]S_SC_W_5_REQ;
  wire [0:0]S_SC_W_5_SEND;
  wire [0:0]S_SC_W_6_INFO;
  wire [68:0]S_SC_W_6_PAYLD;
  wire [0:0]S_SC_W_6_RECV;
  wire [0:0]S_SC_W_6_REQ;
  wire [0:0]S_SC_W_6_SEND;
  wire [0:0]S_SC_W_7_INFO;
  wire [68:0]S_SC_W_7_PAYLD;
  wire [0:0]S_SC_W_7_RECV;
  wire [0:0]S_SC_W_7_REQ;
  wire [0:0]S_SC_W_7_SEND;
  wire [0:0]S_SC_W_8_INFO;
  wire [68:0]S_SC_W_8_PAYLD;
  wire [0:0]S_SC_W_8_RECV;
  wire [0:0]S_SC_W_8_REQ;
  wire [0:0]S_SC_W_8_SEND;
  wire [0:0]S_SC_W_9_INFO;
  wire [68:0]S_SC_W_9_PAYLD;
  wire [0:0]S_SC_W_9_RECV;
  wire [0:0]S_SC_W_9_REQ;
  wire [0:0]S_SC_W_9_SEND;
  wire aclk_1;
  wire aclk_net;
  wire aresetn_1;
  wire [0:0]aresetn_2;
  wire aresetn_net;
  wire clk_map_M00_ACLK;
  wire [0:0]clk_map_M00_ARESETN;
  wire clk_map_M01_ACLK;
  wire clk_map_M02_ACLK;
  wire clk_map_M03_ACLK;
  wire clk_map_M04_ACLK;
  wire clk_map_M05_ACLK;
  wire clk_map_M06_ACLK;
  wire clk_map_M07_ACLK;
  wire clk_map_M08_ACLK;
  wire clk_map_M09_ACLK;
  wire clk_map_M10_ACLK;
  wire clk_map_M11_ACLK;
  wire clk_map_M12_ACLK;
  wire clk_map_M13_ACLK;
  wire clk_map_M14_ACLK;
  wire clk_map_M15_ACLK;
  wire clk_map_M16_ACLK;
  wire clk_map_M17_ACLK;
  wire clk_map_M18_ACLK;
  wire clk_map_M19_ACLK;
  wire clk_map_M20_ACLK;
  wire clk_map_M21_ACLK;
  wire clk_map_M22_ACLK;
  wire clk_map_M23_ACLK;
  wire clk_map_M24_ACLK;
  wire clk_map_M25_ACLK;
  wire clk_map_M26_ACLK;
  wire clk_map_M27_ACLK;
  wire clk_map_M28_ACLK;
  wire clk_map_M29_ACLK;
  wire clk_map_M30_ACLK;
  wire clk_map_M31_ACLK;
  wire clk_map_M32_ACLK;
  wire clk_map_M33_ACLK;
  wire clk_map_M34_ACLK;
  wire clk_map_M35_ACLK;
  wire clk_map_M36_ACLK;
  wire clk_map_M37_ACLK;
  wire clk_map_M38_ACLK;
  wire clk_map_M39_ACLK;
  wire clk_map_M40_ACLK;
  wire clk_map_M41_ACLK;
  wire clk_map_M42_ACLK;
  wire clk_map_M43_ACLK;
  wire clk_map_M44_ACLK;
  wire clk_map_M45_ACLK;
  wire clk_map_M46_ACLK;
  wire clk_map_M47_ACLK;
  wire clk_map_M48_ACLK;
  wire clk_map_M49_ACLK;
  wire clk_map_M50_ACLK;
  wire [12:0]m00_exit_pipeline_m_axi_ARADDR;
  wire [1:0]m00_exit_pipeline_m_axi_ARBURST;
  wire [3:0]m00_exit_pipeline_m_axi_ARCACHE;
  wire [7:0]m00_exit_pipeline_m_axi_ARLEN;
  wire [0:0]m00_exit_pipeline_m_axi_ARLOCK;
  wire [2:0]m00_exit_pipeline_m_axi_ARPROT;
  wire [3:0]m00_exit_pipeline_m_axi_ARQOS;
  wire m00_exit_pipeline_m_axi_ARREADY;
  wire [2:0]m00_exit_pipeline_m_axi_ARSIZE;
  wire [15:0]m00_exit_pipeline_m_axi_ARUSER;
  wire m00_exit_pipeline_m_axi_ARVALID;
  wire [12:0]m00_exit_pipeline_m_axi_AWADDR;
  wire [1:0]m00_exit_pipeline_m_axi_AWBURST;
  wire [3:0]m00_exit_pipeline_m_axi_AWCACHE;
  wire [7:0]m00_exit_pipeline_m_axi_AWLEN;
  wire [0:0]m00_exit_pipeline_m_axi_AWLOCK;
  wire [2:0]m00_exit_pipeline_m_axi_AWPROT;
  wire [3:0]m00_exit_pipeline_m_axi_AWQOS;
  wire m00_exit_pipeline_m_axi_AWREADY;
  wire [2:0]m00_exit_pipeline_m_axi_AWSIZE;
  wire [15:0]m00_exit_pipeline_m_axi_AWUSER;
  wire m00_exit_pipeline_m_axi_AWVALID;
  wire m00_exit_pipeline_m_axi_BREADY;
  wire [1:0]m00_exit_pipeline_m_axi_BRESP;
  wire m00_exit_pipeline_m_axi_BVALID;
  wire [31:0]m00_exit_pipeline_m_axi_RDATA;
  wire m00_exit_pipeline_m_axi_RLAST;
  wire m00_exit_pipeline_m_axi_RREADY;
  wire [1:0]m00_exit_pipeline_m_axi_RRESP;
  wire m00_exit_pipeline_m_axi_RVALID;
  wire [31:0]m00_exit_pipeline_m_axi_WDATA;
  wire m00_exit_pipeline_m_axi_WLAST;
  wire m00_exit_pipeline_m_axi_WREADY;
  wire [3:0]m00_exit_pipeline_m_axi_WSTRB;
  wire m00_exit_pipeline_m_axi_WVALID;
  wire [0:0]m00_nodes_M_SC_AR_INFO;
  wire [181:0]m00_nodes_M_SC_AR_PAYLD;
  wire m00_nodes_M_SC_AR_RECV;
  wire [0:0]m00_nodes_M_SC_AR_REQ;
  wire [0:0]m00_nodes_M_SC_AR_SEND;
  wire [0:0]m00_nodes_M_SC_AW_INFO;
  wire [181:0]m00_nodes_M_SC_AW_PAYLD;
  wire m00_nodes_M_SC_AW_RECV;
  wire [0:0]m00_nodes_M_SC_AW_REQ;
  wire [0:0]m00_nodes_M_SC_AW_SEND;
  wire [0:0]m00_nodes_M_SC_B_INFO;
  wire [8:0]m00_nodes_M_SC_B_PAYLD;
  wire [0:0]m00_nodes_M_SC_B_RECV;
  wire [0:0]m00_nodes_M_SC_B_REQ;
  wire [0:0]m00_nodes_M_SC_B_SEND;
  wire [0:0]m00_nodes_M_SC_R_INFO;
  wire [54:0]m00_nodes_M_SC_R_PAYLD;
  wire [0:0]m00_nodes_M_SC_R_RECV;
  wire [0:0]m00_nodes_M_SC_R_REQ;
  wire [0:0]m00_nodes_M_SC_R_SEND;
  wire [0:0]m00_nodes_M_SC_W_INFO;
  wire [68:0]m00_nodes_M_SC_W_PAYLD;
  wire m00_nodes_M_SC_W_RECV;
  wire [0:0]m00_nodes_M_SC_W_REQ;
  wire [0:0]m00_nodes_M_SC_W_SEND;
  wire [12:0]m00_sc2axi_M_AXI_ARADDR;
  wire [3:0]m00_sc2axi_M_AXI_ARCACHE;
  wire [2:0]m00_sc2axi_M_AXI_ARID;
  wire [7:0]m00_sc2axi_M_AXI_ARLEN;
  wire [0:0]m00_sc2axi_M_AXI_ARLOCK;
  wire [2:0]m00_sc2axi_M_AXI_ARPROT;
  wire [3:0]m00_sc2axi_M_AXI_ARQOS;
  wire m00_sc2axi_M_AXI_ARREADY;
  wire [1023:0]m00_sc2axi_M_AXI_ARUSER;
  wire m00_sc2axi_M_AXI_ARVALID;
  wire [12:0]m00_sc2axi_M_AXI_AWADDR;
  wire [3:0]m00_sc2axi_M_AXI_AWCACHE;
  wire [2:0]m00_sc2axi_M_AXI_AWID;
  wire [7:0]m00_sc2axi_M_AXI_AWLEN;
  wire [0:0]m00_sc2axi_M_AXI_AWLOCK;
  wire [2:0]m00_sc2axi_M_AXI_AWPROT;
  wire [3:0]m00_sc2axi_M_AXI_AWQOS;
  wire m00_sc2axi_M_AXI_AWREADY;
  wire [1023:0]m00_sc2axi_M_AXI_AWUSER;
  wire m00_sc2axi_M_AXI_AWVALID;
  wire [2:0]m00_sc2axi_M_AXI_BID;
  wire m00_sc2axi_M_AXI_BREADY;
  wire [1:0]m00_sc2axi_M_AXI_BRESP;
  wire [1023:0]m00_sc2axi_M_AXI_BUSER;
  wire m00_sc2axi_M_AXI_BVALID;
  wire [31:0]m00_sc2axi_M_AXI_RDATA;
  wire [2:0]m00_sc2axi_M_AXI_RID;
  wire m00_sc2axi_M_AXI_RLAST;
  wire m00_sc2axi_M_AXI_RREADY;
  wire [1:0]m00_sc2axi_M_AXI_RRESP;
  wire [1023:0]m00_sc2axi_M_AXI_RUSER;
  wire m00_sc2axi_M_AXI_RVALID;
  wire [31:0]m00_sc2axi_M_AXI_WDATA;
  wire m00_sc2axi_M_AXI_WLAST;
  wire m00_sc2axi_M_AXI_WREADY;
  wire [3:0]m00_sc2axi_M_AXI_WSTRB;
  wire [1023:0]m00_sc2axi_M_AXI_WUSER;
  wire m00_sc2axi_M_AXI_WVALID;
  wire [12:0]m01_exit_pipeline_m_axi_ARADDR;
  wire [1:0]m01_exit_pipeline_m_axi_ARBURST;
  wire [3:0]m01_exit_pipeline_m_axi_ARCACHE;
  wire [7:0]m01_exit_pipeline_m_axi_ARLEN;
  wire [0:0]m01_exit_pipeline_m_axi_ARLOCK;
  wire [2:0]m01_exit_pipeline_m_axi_ARPROT;
  wire [3:0]m01_exit_pipeline_m_axi_ARQOS;
  wire m01_exit_pipeline_m_axi_ARREADY;
  wire [2:0]m01_exit_pipeline_m_axi_ARSIZE;
  wire [15:0]m01_exit_pipeline_m_axi_ARUSER;
  wire m01_exit_pipeline_m_axi_ARVALID;
  wire [12:0]m01_exit_pipeline_m_axi_AWADDR;
  wire [1:0]m01_exit_pipeline_m_axi_AWBURST;
  wire [3:0]m01_exit_pipeline_m_axi_AWCACHE;
  wire [7:0]m01_exit_pipeline_m_axi_AWLEN;
  wire [0:0]m01_exit_pipeline_m_axi_AWLOCK;
  wire [2:0]m01_exit_pipeline_m_axi_AWPROT;
  wire [3:0]m01_exit_pipeline_m_axi_AWQOS;
  wire m01_exit_pipeline_m_axi_AWREADY;
  wire [2:0]m01_exit_pipeline_m_axi_AWSIZE;
  wire [15:0]m01_exit_pipeline_m_axi_AWUSER;
  wire m01_exit_pipeline_m_axi_AWVALID;
  wire m01_exit_pipeline_m_axi_BREADY;
  wire [1:0]m01_exit_pipeline_m_axi_BRESP;
  wire m01_exit_pipeline_m_axi_BVALID;
  wire [31:0]m01_exit_pipeline_m_axi_RDATA;
  wire m01_exit_pipeline_m_axi_RLAST;
  wire m01_exit_pipeline_m_axi_RREADY;
  wire [1:0]m01_exit_pipeline_m_axi_RRESP;
  wire m01_exit_pipeline_m_axi_RVALID;
  wire [31:0]m01_exit_pipeline_m_axi_WDATA;
  wire m01_exit_pipeline_m_axi_WLAST;
  wire m01_exit_pipeline_m_axi_WREADY;
  wire [3:0]m01_exit_pipeline_m_axi_WSTRB;
  wire m01_exit_pipeline_m_axi_WVALID;
  wire [0:0]m01_nodes_M_SC_AR_INFO;
  wire [181:0]m01_nodes_M_SC_AR_PAYLD;
  wire m01_nodes_M_SC_AR_RECV;
  wire [0:0]m01_nodes_M_SC_AR_REQ;
  wire [0:0]m01_nodes_M_SC_AR_SEND;
  wire [0:0]m01_nodes_M_SC_AW_INFO;
  wire [181:0]m01_nodes_M_SC_AW_PAYLD;
  wire m01_nodes_M_SC_AW_RECV;
  wire [0:0]m01_nodes_M_SC_AW_REQ;
  wire [0:0]m01_nodes_M_SC_AW_SEND;
  wire [0:0]m01_nodes_M_SC_B_INFO;
  wire [8:0]m01_nodes_M_SC_B_PAYLD;
  wire [0:0]m01_nodes_M_SC_B_RECV;
  wire [0:0]m01_nodes_M_SC_B_REQ;
  wire [0:0]m01_nodes_M_SC_B_SEND;
  wire [0:0]m01_nodes_M_SC_R_INFO;
  wire [54:0]m01_nodes_M_SC_R_PAYLD;
  wire [0:0]m01_nodes_M_SC_R_RECV;
  wire [0:0]m01_nodes_M_SC_R_REQ;
  wire [0:0]m01_nodes_M_SC_R_SEND;
  wire [0:0]m01_nodes_M_SC_W_INFO;
  wire [68:0]m01_nodes_M_SC_W_PAYLD;
  wire m01_nodes_M_SC_W_RECV;
  wire [0:0]m01_nodes_M_SC_W_REQ;
  wire [0:0]m01_nodes_M_SC_W_SEND;
  wire [12:0]m01_sc2axi_M_AXI_ARADDR;
  wire [3:0]m01_sc2axi_M_AXI_ARCACHE;
  wire [2:0]m01_sc2axi_M_AXI_ARID;
  wire [7:0]m01_sc2axi_M_AXI_ARLEN;
  wire [0:0]m01_sc2axi_M_AXI_ARLOCK;
  wire [2:0]m01_sc2axi_M_AXI_ARPROT;
  wire [3:0]m01_sc2axi_M_AXI_ARQOS;
  wire m01_sc2axi_M_AXI_ARREADY;
  wire [1023:0]m01_sc2axi_M_AXI_ARUSER;
  wire m01_sc2axi_M_AXI_ARVALID;
  wire [12:0]m01_sc2axi_M_AXI_AWADDR;
  wire [3:0]m01_sc2axi_M_AXI_AWCACHE;
  wire [2:0]m01_sc2axi_M_AXI_AWID;
  wire [7:0]m01_sc2axi_M_AXI_AWLEN;
  wire [0:0]m01_sc2axi_M_AXI_AWLOCK;
  wire [2:0]m01_sc2axi_M_AXI_AWPROT;
  wire [3:0]m01_sc2axi_M_AXI_AWQOS;
  wire m01_sc2axi_M_AXI_AWREADY;
  wire [1023:0]m01_sc2axi_M_AXI_AWUSER;
  wire m01_sc2axi_M_AXI_AWVALID;
  wire [2:0]m01_sc2axi_M_AXI_BID;
  wire m01_sc2axi_M_AXI_BREADY;
  wire [1:0]m01_sc2axi_M_AXI_BRESP;
  wire [1023:0]m01_sc2axi_M_AXI_BUSER;
  wire m01_sc2axi_M_AXI_BVALID;
  wire [31:0]m01_sc2axi_M_AXI_RDATA;
  wire [2:0]m01_sc2axi_M_AXI_RID;
  wire m01_sc2axi_M_AXI_RLAST;
  wire m01_sc2axi_M_AXI_RREADY;
  wire [1:0]m01_sc2axi_M_AXI_RRESP;
  wire [1023:0]m01_sc2axi_M_AXI_RUSER;
  wire m01_sc2axi_M_AXI_RVALID;
  wire [31:0]m01_sc2axi_M_AXI_WDATA;
  wire m01_sc2axi_M_AXI_WLAST;
  wire m01_sc2axi_M_AXI_WREADY;
  wire [3:0]m01_sc2axi_M_AXI_WSTRB;
  wire [1023:0]m01_sc2axi_M_AXI_WUSER;
  wire m01_sc2axi_M_AXI_WVALID;
  wire [12:0]m02_exit_pipeline_m_axi_ARADDR;
  wire [1:0]m02_exit_pipeline_m_axi_ARBURST;
  wire [3:0]m02_exit_pipeline_m_axi_ARCACHE;
  wire [7:0]m02_exit_pipeline_m_axi_ARLEN;
  wire [0:0]m02_exit_pipeline_m_axi_ARLOCK;
  wire [2:0]m02_exit_pipeline_m_axi_ARPROT;
  wire [3:0]m02_exit_pipeline_m_axi_ARQOS;
  wire m02_exit_pipeline_m_axi_ARREADY;
  wire [2:0]m02_exit_pipeline_m_axi_ARSIZE;
  wire [15:0]m02_exit_pipeline_m_axi_ARUSER;
  wire m02_exit_pipeline_m_axi_ARVALID;
  wire [12:0]m02_exit_pipeline_m_axi_AWADDR;
  wire [1:0]m02_exit_pipeline_m_axi_AWBURST;
  wire [3:0]m02_exit_pipeline_m_axi_AWCACHE;
  wire [7:0]m02_exit_pipeline_m_axi_AWLEN;
  wire [0:0]m02_exit_pipeline_m_axi_AWLOCK;
  wire [2:0]m02_exit_pipeline_m_axi_AWPROT;
  wire [3:0]m02_exit_pipeline_m_axi_AWQOS;
  wire m02_exit_pipeline_m_axi_AWREADY;
  wire [2:0]m02_exit_pipeline_m_axi_AWSIZE;
  wire [15:0]m02_exit_pipeline_m_axi_AWUSER;
  wire m02_exit_pipeline_m_axi_AWVALID;
  wire m02_exit_pipeline_m_axi_BREADY;
  wire [1:0]m02_exit_pipeline_m_axi_BRESP;
  wire m02_exit_pipeline_m_axi_BVALID;
  wire [31:0]m02_exit_pipeline_m_axi_RDATA;
  wire m02_exit_pipeline_m_axi_RLAST;
  wire m02_exit_pipeline_m_axi_RREADY;
  wire [1:0]m02_exit_pipeline_m_axi_RRESP;
  wire m02_exit_pipeline_m_axi_RVALID;
  wire [31:0]m02_exit_pipeline_m_axi_WDATA;
  wire m02_exit_pipeline_m_axi_WLAST;
  wire m02_exit_pipeline_m_axi_WREADY;
  wire [3:0]m02_exit_pipeline_m_axi_WSTRB;
  wire m02_exit_pipeline_m_axi_WVALID;
  wire [0:0]m02_nodes_M_SC_AR_INFO;
  wire [181:0]m02_nodes_M_SC_AR_PAYLD;
  wire m02_nodes_M_SC_AR_RECV;
  wire [0:0]m02_nodes_M_SC_AR_REQ;
  wire [0:0]m02_nodes_M_SC_AR_SEND;
  wire [0:0]m02_nodes_M_SC_AW_INFO;
  wire [181:0]m02_nodes_M_SC_AW_PAYLD;
  wire m02_nodes_M_SC_AW_RECV;
  wire [0:0]m02_nodes_M_SC_AW_REQ;
  wire [0:0]m02_nodes_M_SC_AW_SEND;
  wire [0:0]m02_nodes_M_SC_B_INFO;
  wire [8:0]m02_nodes_M_SC_B_PAYLD;
  wire [0:0]m02_nodes_M_SC_B_RECV;
  wire [0:0]m02_nodes_M_SC_B_REQ;
  wire [0:0]m02_nodes_M_SC_B_SEND;
  wire [0:0]m02_nodes_M_SC_R_INFO;
  wire [54:0]m02_nodes_M_SC_R_PAYLD;
  wire [0:0]m02_nodes_M_SC_R_RECV;
  wire [0:0]m02_nodes_M_SC_R_REQ;
  wire [0:0]m02_nodes_M_SC_R_SEND;
  wire [0:0]m02_nodes_M_SC_W_INFO;
  wire [68:0]m02_nodes_M_SC_W_PAYLD;
  wire m02_nodes_M_SC_W_RECV;
  wire [0:0]m02_nodes_M_SC_W_REQ;
  wire [0:0]m02_nodes_M_SC_W_SEND;
  wire [12:0]m02_sc2axi_M_AXI_ARADDR;
  wire [3:0]m02_sc2axi_M_AXI_ARCACHE;
  wire [2:0]m02_sc2axi_M_AXI_ARID;
  wire [7:0]m02_sc2axi_M_AXI_ARLEN;
  wire [0:0]m02_sc2axi_M_AXI_ARLOCK;
  wire [2:0]m02_sc2axi_M_AXI_ARPROT;
  wire [3:0]m02_sc2axi_M_AXI_ARQOS;
  wire m02_sc2axi_M_AXI_ARREADY;
  wire [1023:0]m02_sc2axi_M_AXI_ARUSER;
  wire m02_sc2axi_M_AXI_ARVALID;
  wire [12:0]m02_sc2axi_M_AXI_AWADDR;
  wire [3:0]m02_sc2axi_M_AXI_AWCACHE;
  wire [2:0]m02_sc2axi_M_AXI_AWID;
  wire [7:0]m02_sc2axi_M_AXI_AWLEN;
  wire [0:0]m02_sc2axi_M_AXI_AWLOCK;
  wire [2:0]m02_sc2axi_M_AXI_AWPROT;
  wire [3:0]m02_sc2axi_M_AXI_AWQOS;
  wire m02_sc2axi_M_AXI_AWREADY;
  wire [1023:0]m02_sc2axi_M_AXI_AWUSER;
  wire m02_sc2axi_M_AXI_AWVALID;
  wire [2:0]m02_sc2axi_M_AXI_BID;
  wire m02_sc2axi_M_AXI_BREADY;
  wire [1:0]m02_sc2axi_M_AXI_BRESP;
  wire [1023:0]m02_sc2axi_M_AXI_BUSER;
  wire m02_sc2axi_M_AXI_BVALID;
  wire [31:0]m02_sc2axi_M_AXI_RDATA;
  wire [2:0]m02_sc2axi_M_AXI_RID;
  wire m02_sc2axi_M_AXI_RLAST;
  wire m02_sc2axi_M_AXI_RREADY;
  wire [1:0]m02_sc2axi_M_AXI_RRESP;
  wire [1023:0]m02_sc2axi_M_AXI_RUSER;
  wire m02_sc2axi_M_AXI_RVALID;
  wire [31:0]m02_sc2axi_M_AXI_WDATA;
  wire m02_sc2axi_M_AXI_WLAST;
  wire m02_sc2axi_M_AXI_WREADY;
  wire [3:0]m02_sc2axi_M_AXI_WSTRB;
  wire [1023:0]m02_sc2axi_M_AXI_WUSER;
  wire m02_sc2axi_M_AXI_WVALID;
  wire [12:0]m03_exit_pipeline_m_axi_ARADDR;
  wire [1:0]m03_exit_pipeline_m_axi_ARBURST;
  wire [3:0]m03_exit_pipeline_m_axi_ARCACHE;
  wire [7:0]m03_exit_pipeline_m_axi_ARLEN;
  wire [0:0]m03_exit_pipeline_m_axi_ARLOCK;
  wire [2:0]m03_exit_pipeline_m_axi_ARPROT;
  wire [3:0]m03_exit_pipeline_m_axi_ARQOS;
  wire m03_exit_pipeline_m_axi_ARREADY;
  wire [2:0]m03_exit_pipeline_m_axi_ARSIZE;
  wire [15:0]m03_exit_pipeline_m_axi_ARUSER;
  wire m03_exit_pipeline_m_axi_ARVALID;
  wire [12:0]m03_exit_pipeline_m_axi_AWADDR;
  wire [1:0]m03_exit_pipeline_m_axi_AWBURST;
  wire [3:0]m03_exit_pipeline_m_axi_AWCACHE;
  wire [7:0]m03_exit_pipeline_m_axi_AWLEN;
  wire [0:0]m03_exit_pipeline_m_axi_AWLOCK;
  wire [2:0]m03_exit_pipeline_m_axi_AWPROT;
  wire [3:0]m03_exit_pipeline_m_axi_AWQOS;
  wire m03_exit_pipeline_m_axi_AWREADY;
  wire [2:0]m03_exit_pipeline_m_axi_AWSIZE;
  wire [15:0]m03_exit_pipeline_m_axi_AWUSER;
  wire m03_exit_pipeline_m_axi_AWVALID;
  wire m03_exit_pipeline_m_axi_BREADY;
  wire [1:0]m03_exit_pipeline_m_axi_BRESP;
  wire m03_exit_pipeline_m_axi_BVALID;
  wire [31:0]m03_exit_pipeline_m_axi_RDATA;
  wire m03_exit_pipeline_m_axi_RLAST;
  wire m03_exit_pipeline_m_axi_RREADY;
  wire [1:0]m03_exit_pipeline_m_axi_RRESP;
  wire m03_exit_pipeline_m_axi_RVALID;
  wire [31:0]m03_exit_pipeline_m_axi_WDATA;
  wire m03_exit_pipeline_m_axi_WLAST;
  wire m03_exit_pipeline_m_axi_WREADY;
  wire [3:0]m03_exit_pipeline_m_axi_WSTRB;
  wire m03_exit_pipeline_m_axi_WVALID;
  wire [0:0]m03_nodes_M_SC_AR_INFO;
  wire [181:0]m03_nodes_M_SC_AR_PAYLD;
  wire m03_nodes_M_SC_AR_RECV;
  wire [0:0]m03_nodes_M_SC_AR_REQ;
  wire [0:0]m03_nodes_M_SC_AR_SEND;
  wire [0:0]m03_nodes_M_SC_AW_INFO;
  wire [181:0]m03_nodes_M_SC_AW_PAYLD;
  wire m03_nodes_M_SC_AW_RECV;
  wire [0:0]m03_nodes_M_SC_AW_REQ;
  wire [0:0]m03_nodes_M_SC_AW_SEND;
  wire [0:0]m03_nodes_M_SC_B_INFO;
  wire [8:0]m03_nodes_M_SC_B_PAYLD;
  wire [0:0]m03_nodes_M_SC_B_RECV;
  wire [0:0]m03_nodes_M_SC_B_REQ;
  wire [0:0]m03_nodes_M_SC_B_SEND;
  wire [0:0]m03_nodes_M_SC_R_INFO;
  wire [54:0]m03_nodes_M_SC_R_PAYLD;
  wire [0:0]m03_nodes_M_SC_R_RECV;
  wire [0:0]m03_nodes_M_SC_R_REQ;
  wire [0:0]m03_nodes_M_SC_R_SEND;
  wire [0:0]m03_nodes_M_SC_W_INFO;
  wire [68:0]m03_nodes_M_SC_W_PAYLD;
  wire m03_nodes_M_SC_W_RECV;
  wire [0:0]m03_nodes_M_SC_W_REQ;
  wire [0:0]m03_nodes_M_SC_W_SEND;
  wire [12:0]m03_sc2axi_M_AXI_ARADDR;
  wire [3:0]m03_sc2axi_M_AXI_ARCACHE;
  wire [2:0]m03_sc2axi_M_AXI_ARID;
  wire [7:0]m03_sc2axi_M_AXI_ARLEN;
  wire [0:0]m03_sc2axi_M_AXI_ARLOCK;
  wire [2:0]m03_sc2axi_M_AXI_ARPROT;
  wire [3:0]m03_sc2axi_M_AXI_ARQOS;
  wire m03_sc2axi_M_AXI_ARREADY;
  wire [1023:0]m03_sc2axi_M_AXI_ARUSER;
  wire m03_sc2axi_M_AXI_ARVALID;
  wire [12:0]m03_sc2axi_M_AXI_AWADDR;
  wire [3:0]m03_sc2axi_M_AXI_AWCACHE;
  wire [2:0]m03_sc2axi_M_AXI_AWID;
  wire [7:0]m03_sc2axi_M_AXI_AWLEN;
  wire [0:0]m03_sc2axi_M_AXI_AWLOCK;
  wire [2:0]m03_sc2axi_M_AXI_AWPROT;
  wire [3:0]m03_sc2axi_M_AXI_AWQOS;
  wire m03_sc2axi_M_AXI_AWREADY;
  wire [1023:0]m03_sc2axi_M_AXI_AWUSER;
  wire m03_sc2axi_M_AXI_AWVALID;
  wire [2:0]m03_sc2axi_M_AXI_BID;
  wire m03_sc2axi_M_AXI_BREADY;
  wire [1:0]m03_sc2axi_M_AXI_BRESP;
  wire [1023:0]m03_sc2axi_M_AXI_BUSER;
  wire m03_sc2axi_M_AXI_BVALID;
  wire [31:0]m03_sc2axi_M_AXI_RDATA;
  wire [2:0]m03_sc2axi_M_AXI_RID;
  wire m03_sc2axi_M_AXI_RLAST;
  wire m03_sc2axi_M_AXI_RREADY;
  wire [1:0]m03_sc2axi_M_AXI_RRESP;
  wire [1023:0]m03_sc2axi_M_AXI_RUSER;
  wire m03_sc2axi_M_AXI_RVALID;
  wire [31:0]m03_sc2axi_M_AXI_WDATA;
  wire m03_sc2axi_M_AXI_WLAST;
  wire m03_sc2axi_M_AXI_WREADY;
  wire [3:0]m03_sc2axi_M_AXI_WSTRB;
  wire [1023:0]m03_sc2axi_M_AXI_WUSER;
  wire m03_sc2axi_M_AXI_WVALID;
  wire [12:0]m04_exit_pipeline_m_axi_ARADDR;
  wire [1:0]m04_exit_pipeline_m_axi_ARBURST;
  wire [3:0]m04_exit_pipeline_m_axi_ARCACHE;
  wire [7:0]m04_exit_pipeline_m_axi_ARLEN;
  wire [0:0]m04_exit_pipeline_m_axi_ARLOCK;
  wire [2:0]m04_exit_pipeline_m_axi_ARPROT;
  wire [3:0]m04_exit_pipeline_m_axi_ARQOS;
  wire m04_exit_pipeline_m_axi_ARREADY;
  wire [2:0]m04_exit_pipeline_m_axi_ARSIZE;
  wire [15:0]m04_exit_pipeline_m_axi_ARUSER;
  wire m04_exit_pipeline_m_axi_ARVALID;
  wire [12:0]m04_exit_pipeline_m_axi_AWADDR;
  wire [1:0]m04_exit_pipeline_m_axi_AWBURST;
  wire [3:0]m04_exit_pipeline_m_axi_AWCACHE;
  wire [7:0]m04_exit_pipeline_m_axi_AWLEN;
  wire [0:0]m04_exit_pipeline_m_axi_AWLOCK;
  wire [2:0]m04_exit_pipeline_m_axi_AWPROT;
  wire [3:0]m04_exit_pipeline_m_axi_AWQOS;
  wire m04_exit_pipeline_m_axi_AWREADY;
  wire [2:0]m04_exit_pipeline_m_axi_AWSIZE;
  wire [15:0]m04_exit_pipeline_m_axi_AWUSER;
  wire m04_exit_pipeline_m_axi_AWVALID;
  wire m04_exit_pipeline_m_axi_BREADY;
  wire [1:0]m04_exit_pipeline_m_axi_BRESP;
  wire m04_exit_pipeline_m_axi_BVALID;
  wire [31:0]m04_exit_pipeline_m_axi_RDATA;
  wire m04_exit_pipeline_m_axi_RLAST;
  wire m04_exit_pipeline_m_axi_RREADY;
  wire [1:0]m04_exit_pipeline_m_axi_RRESP;
  wire m04_exit_pipeline_m_axi_RVALID;
  wire [31:0]m04_exit_pipeline_m_axi_WDATA;
  wire m04_exit_pipeline_m_axi_WLAST;
  wire m04_exit_pipeline_m_axi_WREADY;
  wire [3:0]m04_exit_pipeline_m_axi_WSTRB;
  wire m04_exit_pipeline_m_axi_WVALID;
  wire [0:0]m04_nodes_M_SC_AR_INFO;
  wire [181:0]m04_nodes_M_SC_AR_PAYLD;
  wire m04_nodes_M_SC_AR_RECV;
  wire [0:0]m04_nodes_M_SC_AR_REQ;
  wire [0:0]m04_nodes_M_SC_AR_SEND;
  wire [0:0]m04_nodes_M_SC_AW_INFO;
  wire [181:0]m04_nodes_M_SC_AW_PAYLD;
  wire m04_nodes_M_SC_AW_RECV;
  wire [0:0]m04_nodes_M_SC_AW_REQ;
  wire [0:0]m04_nodes_M_SC_AW_SEND;
  wire [0:0]m04_nodes_M_SC_B_INFO;
  wire [8:0]m04_nodes_M_SC_B_PAYLD;
  wire [0:0]m04_nodes_M_SC_B_RECV;
  wire [0:0]m04_nodes_M_SC_B_REQ;
  wire [0:0]m04_nodes_M_SC_B_SEND;
  wire [0:0]m04_nodes_M_SC_R_INFO;
  wire [54:0]m04_nodes_M_SC_R_PAYLD;
  wire [0:0]m04_nodes_M_SC_R_RECV;
  wire [0:0]m04_nodes_M_SC_R_REQ;
  wire [0:0]m04_nodes_M_SC_R_SEND;
  wire [0:0]m04_nodes_M_SC_W_INFO;
  wire [68:0]m04_nodes_M_SC_W_PAYLD;
  wire m04_nodes_M_SC_W_RECV;
  wire [0:0]m04_nodes_M_SC_W_REQ;
  wire [0:0]m04_nodes_M_SC_W_SEND;
  wire [12:0]m04_sc2axi_M_AXI_ARADDR;
  wire [3:0]m04_sc2axi_M_AXI_ARCACHE;
  wire [2:0]m04_sc2axi_M_AXI_ARID;
  wire [7:0]m04_sc2axi_M_AXI_ARLEN;
  wire [0:0]m04_sc2axi_M_AXI_ARLOCK;
  wire [2:0]m04_sc2axi_M_AXI_ARPROT;
  wire [3:0]m04_sc2axi_M_AXI_ARQOS;
  wire m04_sc2axi_M_AXI_ARREADY;
  wire [1023:0]m04_sc2axi_M_AXI_ARUSER;
  wire m04_sc2axi_M_AXI_ARVALID;
  wire [12:0]m04_sc2axi_M_AXI_AWADDR;
  wire [3:0]m04_sc2axi_M_AXI_AWCACHE;
  wire [2:0]m04_sc2axi_M_AXI_AWID;
  wire [7:0]m04_sc2axi_M_AXI_AWLEN;
  wire [0:0]m04_sc2axi_M_AXI_AWLOCK;
  wire [2:0]m04_sc2axi_M_AXI_AWPROT;
  wire [3:0]m04_sc2axi_M_AXI_AWQOS;
  wire m04_sc2axi_M_AXI_AWREADY;
  wire [1023:0]m04_sc2axi_M_AXI_AWUSER;
  wire m04_sc2axi_M_AXI_AWVALID;
  wire [2:0]m04_sc2axi_M_AXI_BID;
  wire m04_sc2axi_M_AXI_BREADY;
  wire [1:0]m04_sc2axi_M_AXI_BRESP;
  wire [1023:0]m04_sc2axi_M_AXI_BUSER;
  wire m04_sc2axi_M_AXI_BVALID;
  wire [31:0]m04_sc2axi_M_AXI_RDATA;
  wire [2:0]m04_sc2axi_M_AXI_RID;
  wire m04_sc2axi_M_AXI_RLAST;
  wire m04_sc2axi_M_AXI_RREADY;
  wire [1:0]m04_sc2axi_M_AXI_RRESP;
  wire [1023:0]m04_sc2axi_M_AXI_RUSER;
  wire m04_sc2axi_M_AXI_RVALID;
  wire [31:0]m04_sc2axi_M_AXI_WDATA;
  wire m04_sc2axi_M_AXI_WLAST;
  wire m04_sc2axi_M_AXI_WREADY;
  wire [3:0]m04_sc2axi_M_AXI_WSTRB;
  wire [1023:0]m04_sc2axi_M_AXI_WUSER;
  wire m04_sc2axi_M_AXI_WVALID;
  wire [12:0]m05_exit_pipeline_m_axi_ARADDR;
  wire [1:0]m05_exit_pipeline_m_axi_ARBURST;
  wire [3:0]m05_exit_pipeline_m_axi_ARCACHE;
  wire [7:0]m05_exit_pipeline_m_axi_ARLEN;
  wire [0:0]m05_exit_pipeline_m_axi_ARLOCK;
  wire [2:0]m05_exit_pipeline_m_axi_ARPROT;
  wire [3:0]m05_exit_pipeline_m_axi_ARQOS;
  wire m05_exit_pipeline_m_axi_ARREADY;
  wire [2:0]m05_exit_pipeline_m_axi_ARSIZE;
  wire [15:0]m05_exit_pipeline_m_axi_ARUSER;
  wire m05_exit_pipeline_m_axi_ARVALID;
  wire [12:0]m05_exit_pipeline_m_axi_AWADDR;
  wire [1:0]m05_exit_pipeline_m_axi_AWBURST;
  wire [3:0]m05_exit_pipeline_m_axi_AWCACHE;
  wire [7:0]m05_exit_pipeline_m_axi_AWLEN;
  wire [0:0]m05_exit_pipeline_m_axi_AWLOCK;
  wire [2:0]m05_exit_pipeline_m_axi_AWPROT;
  wire [3:0]m05_exit_pipeline_m_axi_AWQOS;
  wire m05_exit_pipeline_m_axi_AWREADY;
  wire [2:0]m05_exit_pipeline_m_axi_AWSIZE;
  wire [15:0]m05_exit_pipeline_m_axi_AWUSER;
  wire m05_exit_pipeline_m_axi_AWVALID;
  wire m05_exit_pipeline_m_axi_BREADY;
  wire [1:0]m05_exit_pipeline_m_axi_BRESP;
  wire m05_exit_pipeline_m_axi_BVALID;
  wire [31:0]m05_exit_pipeline_m_axi_RDATA;
  wire m05_exit_pipeline_m_axi_RLAST;
  wire m05_exit_pipeline_m_axi_RREADY;
  wire [1:0]m05_exit_pipeline_m_axi_RRESP;
  wire m05_exit_pipeline_m_axi_RVALID;
  wire [31:0]m05_exit_pipeline_m_axi_WDATA;
  wire m05_exit_pipeline_m_axi_WLAST;
  wire m05_exit_pipeline_m_axi_WREADY;
  wire [3:0]m05_exit_pipeline_m_axi_WSTRB;
  wire m05_exit_pipeline_m_axi_WVALID;
  wire [0:0]m05_nodes_M_SC_AR_INFO;
  wire [181:0]m05_nodes_M_SC_AR_PAYLD;
  wire m05_nodes_M_SC_AR_RECV;
  wire [0:0]m05_nodes_M_SC_AR_REQ;
  wire [0:0]m05_nodes_M_SC_AR_SEND;
  wire [0:0]m05_nodes_M_SC_AW_INFO;
  wire [181:0]m05_nodes_M_SC_AW_PAYLD;
  wire m05_nodes_M_SC_AW_RECV;
  wire [0:0]m05_nodes_M_SC_AW_REQ;
  wire [0:0]m05_nodes_M_SC_AW_SEND;
  wire [0:0]m05_nodes_M_SC_B_INFO;
  wire [8:0]m05_nodes_M_SC_B_PAYLD;
  wire [0:0]m05_nodes_M_SC_B_RECV;
  wire [0:0]m05_nodes_M_SC_B_REQ;
  wire [0:0]m05_nodes_M_SC_B_SEND;
  wire [0:0]m05_nodes_M_SC_R_INFO;
  wire [54:0]m05_nodes_M_SC_R_PAYLD;
  wire [0:0]m05_nodes_M_SC_R_RECV;
  wire [0:0]m05_nodes_M_SC_R_REQ;
  wire [0:0]m05_nodes_M_SC_R_SEND;
  wire [0:0]m05_nodes_M_SC_W_INFO;
  wire [68:0]m05_nodes_M_SC_W_PAYLD;
  wire m05_nodes_M_SC_W_RECV;
  wire [0:0]m05_nodes_M_SC_W_REQ;
  wire [0:0]m05_nodes_M_SC_W_SEND;
  wire [12:0]m05_sc2axi_M_AXI_ARADDR;
  wire [3:0]m05_sc2axi_M_AXI_ARCACHE;
  wire [2:0]m05_sc2axi_M_AXI_ARID;
  wire [7:0]m05_sc2axi_M_AXI_ARLEN;
  wire [0:0]m05_sc2axi_M_AXI_ARLOCK;
  wire [2:0]m05_sc2axi_M_AXI_ARPROT;
  wire [3:0]m05_sc2axi_M_AXI_ARQOS;
  wire m05_sc2axi_M_AXI_ARREADY;
  wire [1023:0]m05_sc2axi_M_AXI_ARUSER;
  wire m05_sc2axi_M_AXI_ARVALID;
  wire [12:0]m05_sc2axi_M_AXI_AWADDR;
  wire [3:0]m05_sc2axi_M_AXI_AWCACHE;
  wire [2:0]m05_sc2axi_M_AXI_AWID;
  wire [7:0]m05_sc2axi_M_AXI_AWLEN;
  wire [0:0]m05_sc2axi_M_AXI_AWLOCK;
  wire [2:0]m05_sc2axi_M_AXI_AWPROT;
  wire [3:0]m05_sc2axi_M_AXI_AWQOS;
  wire m05_sc2axi_M_AXI_AWREADY;
  wire [1023:0]m05_sc2axi_M_AXI_AWUSER;
  wire m05_sc2axi_M_AXI_AWVALID;
  wire [2:0]m05_sc2axi_M_AXI_BID;
  wire m05_sc2axi_M_AXI_BREADY;
  wire [1:0]m05_sc2axi_M_AXI_BRESP;
  wire [1023:0]m05_sc2axi_M_AXI_BUSER;
  wire m05_sc2axi_M_AXI_BVALID;
  wire [31:0]m05_sc2axi_M_AXI_RDATA;
  wire [2:0]m05_sc2axi_M_AXI_RID;
  wire m05_sc2axi_M_AXI_RLAST;
  wire m05_sc2axi_M_AXI_RREADY;
  wire [1:0]m05_sc2axi_M_AXI_RRESP;
  wire [1023:0]m05_sc2axi_M_AXI_RUSER;
  wire m05_sc2axi_M_AXI_RVALID;
  wire [31:0]m05_sc2axi_M_AXI_WDATA;
  wire m05_sc2axi_M_AXI_WLAST;
  wire m05_sc2axi_M_AXI_WREADY;
  wire [3:0]m05_sc2axi_M_AXI_WSTRB;
  wire [1023:0]m05_sc2axi_M_AXI_WUSER;
  wire m05_sc2axi_M_AXI_WVALID;
  wire [12:0]m06_exit_pipeline_m_axi_ARADDR;
  wire [1:0]m06_exit_pipeline_m_axi_ARBURST;
  wire [3:0]m06_exit_pipeline_m_axi_ARCACHE;
  wire [7:0]m06_exit_pipeline_m_axi_ARLEN;
  wire [0:0]m06_exit_pipeline_m_axi_ARLOCK;
  wire [2:0]m06_exit_pipeline_m_axi_ARPROT;
  wire [3:0]m06_exit_pipeline_m_axi_ARQOS;
  wire m06_exit_pipeline_m_axi_ARREADY;
  wire [2:0]m06_exit_pipeline_m_axi_ARSIZE;
  wire [15:0]m06_exit_pipeline_m_axi_ARUSER;
  wire m06_exit_pipeline_m_axi_ARVALID;
  wire [12:0]m06_exit_pipeline_m_axi_AWADDR;
  wire [1:0]m06_exit_pipeline_m_axi_AWBURST;
  wire [3:0]m06_exit_pipeline_m_axi_AWCACHE;
  wire [7:0]m06_exit_pipeline_m_axi_AWLEN;
  wire [0:0]m06_exit_pipeline_m_axi_AWLOCK;
  wire [2:0]m06_exit_pipeline_m_axi_AWPROT;
  wire [3:0]m06_exit_pipeline_m_axi_AWQOS;
  wire m06_exit_pipeline_m_axi_AWREADY;
  wire [2:0]m06_exit_pipeline_m_axi_AWSIZE;
  wire [15:0]m06_exit_pipeline_m_axi_AWUSER;
  wire m06_exit_pipeline_m_axi_AWVALID;
  wire m06_exit_pipeline_m_axi_BREADY;
  wire [1:0]m06_exit_pipeline_m_axi_BRESP;
  wire m06_exit_pipeline_m_axi_BVALID;
  wire [31:0]m06_exit_pipeline_m_axi_RDATA;
  wire m06_exit_pipeline_m_axi_RLAST;
  wire m06_exit_pipeline_m_axi_RREADY;
  wire [1:0]m06_exit_pipeline_m_axi_RRESP;
  wire m06_exit_pipeline_m_axi_RVALID;
  wire [31:0]m06_exit_pipeline_m_axi_WDATA;
  wire m06_exit_pipeline_m_axi_WLAST;
  wire m06_exit_pipeline_m_axi_WREADY;
  wire [3:0]m06_exit_pipeline_m_axi_WSTRB;
  wire m06_exit_pipeline_m_axi_WVALID;
  wire [0:0]m06_nodes_M_SC_AR_INFO;
  wire [181:0]m06_nodes_M_SC_AR_PAYLD;
  wire m06_nodes_M_SC_AR_RECV;
  wire [0:0]m06_nodes_M_SC_AR_REQ;
  wire [0:0]m06_nodes_M_SC_AR_SEND;
  wire [0:0]m06_nodes_M_SC_AW_INFO;
  wire [181:0]m06_nodes_M_SC_AW_PAYLD;
  wire m06_nodes_M_SC_AW_RECV;
  wire [0:0]m06_nodes_M_SC_AW_REQ;
  wire [0:0]m06_nodes_M_SC_AW_SEND;
  wire [0:0]m06_nodes_M_SC_B_INFO;
  wire [8:0]m06_nodes_M_SC_B_PAYLD;
  wire [0:0]m06_nodes_M_SC_B_RECV;
  wire [0:0]m06_nodes_M_SC_B_REQ;
  wire [0:0]m06_nodes_M_SC_B_SEND;
  wire [0:0]m06_nodes_M_SC_R_INFO;
  wire [54:0]m06_nodes_M_SC_R_PAYLD;
  wire [0:0]m06_nodes_M_SC_R_RECV;
  wire [0:0]m06_nodes_M_SC_R_REQ;
  wire [0:0]m06_nodes_M_SC_R_SEND;
  wire [0:0]m06_nodes_M_SC_W_INFO;
  wire [68:0]m06_nodes_M_SC_W_PAYLD;
  wire m06_nodes_M_SC_W_RECV;
  wire [0:0]m06_nodes_M_SC_W_REQ;
  wire [0:0]m06_nodes_M_SC_W_SEND;
  wire [12:0]m06_sc2axi_M_AXI_ARADDR;
  wire [3:0]m06_sc2axi_M_AXI_ARCACHE;
  wire [2:0]m06_sc2axi_M_AXI_ARID;
  wire [7:0]m06_sc2axi_M_AXI_ARLEN;
  wire [0:0]m06_sc2axi_M_AXI_ARLOCK;
  wire [2:0]m06_sc2axi_M_AXI_ARPROT;
  wire [3:0]m06_sc2axi_M_AXI_ARQOS;
  wire m06_sc2axi_M_AXI_ARREADY;
  wire [1023:0]m06_sc2axi_M_AXI_ARUSER;
  wire m06_sc2axi_M_AXI_ARVALID;
  wire [12:0]m06_sc2axi_M_AXI_AWADDR;
  wire [3:0]m06_sc2axi_M_AXI_AWCACHE;
  wire [2:0]m06_sc2axi_M_AXI_AWID;
  wire [7:0]m06_sc2axi_M_AXI_AWLEN;
  wire [0:0]m06_sc2axi_M_AXI_AWLOCK;
  wire [2:0]m06_sc2axi_M_AXI_AWPROT;
  wire [3:0]m06_sc2axi_M_AXI_AWQOS;
  wire m06_sc2axi_M_AXI_AWREADY;
  wire [1023:0]m06_sc2axi_M_AXI_AWUSER;
  wire m06_sc2axi_M_AXI_AWVALID;
  wire [2:0]m06_sc2axi_M_AXI_BID;
  wire m06_sc2axi_M_AXI_BREADY;
  wire [1:0]m06_sc2axi_M_AXI_BRESP;
  wire [1023:0]m06_sc2axi_M_AXI_BUSER;
  wire m06_sc2axi_M_AXI_BVALID;
  wire [31:0]m06_sc2axi_M_AXI_RDATA;
  wire [2:0]m06_sc2axi_M_AXI_RID;
  wire m06_sc2axi_M_AXI_RLAST;
  wire m06_sc2axi_M_AXI_RREADY;
  wire [1:0]m06_sc2axi_M_AXI_RRESP;
  wire [1023:0]m06_sc2axi_M_AXI_RUSER;
  wire m06_sc2axi_M_AXI_RVALID;
  wire [31:0]m06_sc2axi_M_AXI_WDATA;
  wire m06_sc2axi_M_AXI_WLAST;
  wire m06_sc2axi_M_AXI_WREADY;
  wire [3:0]m06_sc2axi_M_AXI_WSTRB;
  wire [1023:0]m06_sc2axi_M_AXI_WUSER;
  wire m06_sc2axi_M_AXI_WVALID;
  wire [12:0]m07_exit_pipeline_m_axi_ARADDR;
  wire [1:0]m07_exit_pipeline_m_axi_ARBURST;
  wire [3:0]m07_exit_pipeline_m_axi_ARCACHE;
  wire [7:0]m07_exit_pipeline_m_axi_ARLEN;
  wire [0:0]m07_exit_pipeline_m_axi_ARLOCK;
  wire [2:0]m07_exit_pipeline_m_axi_ARPROT;
  wire [3:0]m07_exit_pipeline_m_axi_ARQOS;
  wire m07_exit_pipeline_m_axi_ARREADY;
  wire [2:0]m07_exit_pipeline_m_axi_ARSIZE;
  wire [15:0]m07_exit_pipeline_m_axi_ARUSER;
  wire m07_exit_pipeline_m_axi_ARVALID;
  wire [12:0]m07_exit_pipeline_m_axi_AWADDR;
  wire [1:0]m07_exit_pipeline_m_axi_AWBURST;
  wire [3:0]m07_exit_pipeline_m_axi_AWCACHE;
  wire [7:0]m07_exit_pipeline_m_axi_AWLEN;
  wire [0:0]m07_exit_pipeline_m_axi_AWLOCK;
  wire [2:0]m07_exit_pipeline_m_axi_AWPROT;
  wire [3:0]m07_exit_pipeline_m_axi_AWQOS;
  wire m07_exit_pipeline_m_axi_AWREADY;
  wire [2:0]m07_exit_pipeline_m_axi_AWSIZE;
  wire [15:0]m07_exit_pipeline_m_axi_AWUSER;
  wire m07_exit_pipeline_m_axi_AWVALID;
  wire m07_exit_pipeline_m_axi_BREADY;
  wire [1:0]m07_exit_pipeline_m_axi_BRESP;
  wire m07_exit_pipeline_m_axi_BVALID;
  wire [31:0]m07_exit_pipeline_m_axi_RDATA;
  wire m07_exit_pipeline_m_axi_RLAST;
  wire m07_exit_pipeline_m_axi_RREADY;
  wire [1:0]m07_exit_pipeline_m_axi_RRESP;
  wire m07_exit_pipeline_m_axi_RVALID;
  wire [31:0]m07_exit_pipeline_m_axi_WDATA;
  wire m07_exit_pipeline_m_axi_WLAST;
  wire m07_exit_pipeline_m_axi_WREADY;
  wire [3:0]m07_exit_pipeline_m_axi_WSTRB;
  wire m07_exit_pipeline_m_axi_WVALID;
  wire [0:0]m07_nodes_M_SC_AR_INFO;
  wire [181:0]m07_nodes_M_SC_AR_PAYLD;
  wire m07_nodes_M_SC_AR_RECV;
  wire [0:0]m07_nodes_M_SC_AR_REQ;
  wire [0:0]m07_nodes_M_SC_AR_SEND;
  wire [0:0]m07_nodes_M_SC_AW_INFO;
  wire [181:0]m07_nodes_M_SC_AW_PAYLD;
  wire m07_nodes_M_SC_AW_RECV;
  wire [0:0]m07_nodes_M_SC_AW_REQ;
  wire [0:0]m07_nodes_M_SC_AW_SEND;
  wire [0:0]m07_nodes_M_SC_B_INFO;
  wire [8:0]m07_nodes_M_SC_B_PAYLD;
  wire [0:0]m07_nodes_M_SC_B_RECV;
  wire [0:0]m07_nodes_M_SC_B_REQ;
  wire [0:0]m07_nodes_M_SC_B_SEND;
  wire [0:0]m07_nodes_M_SC_R_INFO;
  wire [54:0]m07_nodes_M_SC_R_PAYLD;
  wire [0:0]m07_nodes_M_SC_R_RECV;
  wire [0:0]m07_nodes_M_SC_R_REQ;
  wire [0:0]m07_nodes_M_SC_R_SEND;
  wire [0:0]m07_nodes_M_SC_W_INFO;
  wire [68:0]m07_nodes_M_SC_W_PAYLD;
  wire m07_nodes_M_SC_W_RECV;
  wire [0:0]m07_nodes_M_SC_W_REQ;
  wire [0:0]m07_nodes_M_SC_W_SEND;
  wire [12:0]m07_sc2axi_M_AXI_ARADDR;
  wire [3:0]m07_sc2axi_M_AXI_ARCACHE;
  wire [2:0]m07_sc2axi_M_AXI_ARID;
  wire [7:0]m07_sc2axi_M_AXI_ARLEN;
  wire [0:0]m07_sc2axi_M_AXI_ARLOCK;
  wire [2:0]m07_sc2axi_M_AXI_ARPROT;
  wire [3:0]m07_sc2axi_M_AXI_ARQOS;
  wire m07_sc2axi_M_AXI_ARREADY;
  wire [1023:0]m07_sc2axi_M_AXI_ARUSER;
  wire m07_sc2axi_M_AXI_ARVALID;
  wire [12:0]m07_sc2axi_M_AXI_AWADDR;
  wire [3:0]m07_sc2axi_M_AXI_AWCACHE;
  wire [2:0]m07_sc2axi_M_AXI_AWID;
  wire [7:0]m07_sc2axi_M_AXI_AWLEN;
  wire [0:0]m07_sc2axi_M_AXI_AWLOCK;
  wire [2:0]m07_sc2axi_M_AXI_AWPROT;
  wire [3:0]m07_sc2axi_M_AXI_AWQOS;
  wire m07_sc2axi_M_AXI_AWREADY;
  wire [1023:0]m07_sc2axi_M_AXI_AWUSER;
  wire m07_sc2axi_M_AXI_AWVALID;
  wire [2:0]m07_sc2axi_M_AXI_BID;
  wire m07_sc2axi_M_AXI_BREADY;
  wire [1:0]m07_sc2axi_M_AXI_BRESP;
  wire [1023:0]m07_sc2axi_M_AXI_BUSER;
  wire m07_sc2axi_M_AXI_BVALID;
  wire [31:0]m07_sc2axi_M_AXI_RDATA;
  wire [2:0]m07_sc2axi_M_AXI_RID;
  wire m07_sc2axi_M_AXI_RLAST;
  wire m07_sc2axi_M_AXI_RREADY;
  wire [1:0]m07_sc2axi_M_AXI_RRESP;
  wire [1023:0]m07_sc2axi_M_AXI_RUSER;
  wire m07_sc2axi_M_AXI_RVALID;
  wire [31:0]m07_sc2axi_M_AXI_WDATA;
  wire m07_sc2axi_M_AXI_WLAST;
  wire m07_sc2axi_M_AXI_WREADY;
  wire [3:0]m07_sc2axi_M_AXI_WSTRB;
  wire [1023:0]m07_sc2axi_M_AXI_WUSER;
  wire m07_sc2axi_M_AXI_WVALID;
  wire [12:0]m08_exit_pipeline_m_axi_ARADDR;
  wire [1:0]m08_exit_pipeline_m_axi_ARBURST;
  wire [3:0]m08_exit_pipeline_m_axi_ARCACHE;
  wire [7:0]m08_exit_pipeline_m_axi_ARLEN;
  wire [0:0]m08_exit_pipeline_m_axi_ARLOCK;
  wire [2:0]m08_exit_pipeline_m_axi_ARPROT;
  wire [3:0]m08_exit_pipeline_m_axi_ARQOS;
  wire m08_exit_pipeline_m_axi_ARREADY;
  wire [2:0]m08_exit_pipeline_m_axi_ARSIZE;
  wire [15:0]m08_exit_pipeline_m_axi_ARUSER;
  wire m08_exit_pipeline_m_axi_ARVALID;
  wire [12:0]m08_exit_pipeline_m_axi_AWADDR;
  wire [1:0]m08_exit_pipeline_m_axi_AWBURST;
  wire [3:0]m08_exit_pipeline_m_axi_AWCACHE;
  wire [7:0]m08_exit_pipeline_m_axi_AWLEN;
  wire [0:0]m08_exit_pipeline_m_axi_AWLOCK;
  wire [2:0]m08_exit_pipeline_m_axi_AWPROT;
  wire [3:0]m08_exit_pipeline_m_axi_AWQOS;
  wire m08_exit_pipeline_m_axi_AWREADY;
  wire [2:0]m08_exit_pipeline_m_axi_AWSIZE;
  wire [15:0]m08_exit_pipeline_m_axi_AWUSER;
  wire m08_exit_pipeline_m_axi_AWVALID;
  wire m08_exit_pipeline_m_axi_BREADY;
  wire [1:0]m08_exit_pipeline_m_axi_BRESP;
  wire m08_exit_pipeline_m_axi_BVALID;
  wire [31:0]m08_exit_pipeline_m_axi_RDATA;
  wire m08_exit_pipeline_m_axi_RLAST;
  wire m08_exit_pipeline_m_axi_RREADY;
  wire [1:0]m08_exit_pipeline_m_axi_RRESP;
  wire m08_exit_pipeline_m_axi_RVALID;
  wire [31:0]m08_exit_pipeline_m_axi_WDATA;
  wire m08_exit_pipeline_m_axi_WLAST;
  wire m08_exit_pipeline_m_axi_WREADY;
  wire [3:0]m08_exit_pipeline_m_axi_WSTRB;
  wire m08_exit_pipeline_m_axi_WVALID;
  wire [0:0]m08_nodes_M_SC_AR_INFO;
  wire [181:0]m08_nodes_M_SC_AR_PAYLD;
  wire m08_nodes_M_SC_AR_RECV;
  wire [0:0]m08_nodes_M_SC_AR_REQ;
  wire [0:0]m08_nodes_M_SC_AR_SEND;
  wire [0:0]m08_nodes_M_SC_AW_INFO;
  wire [181:0]m08_nodes_M_SC_AW_PAYLD;
  wire m08_nodes_M_SC_AW_RECV;
  wire [0:0]m08_nodes_M_SC_AW_REQ;
  wire [0:0]m08_nodes_M_SC_AW_SEND;
  wire [0:0]m08_nodes_M_SC_B_INFO;
  wire [8:0]m08_nodes_M_SC_B_PAYLD;
  wire [0:0]m08_nodes_M_SC_B_RECV;
  wire [0:0]m08_nodes_M_SC_B_REQ;
  wire [0:0]m08_nodes_M_SC_B_SEND;
  wire [0:0]m08_nodes_M_SC_R_INFO;
  wire [54:0]m08_nodes_M_SC_R_PAYLD;
  wire [0:0]m08_nodes_M_SC_R_RECV;
  wire [0:0]m08_nodes_M_SC_R_REQ;
  wire [0:0]m08_nodes_M_SC_R_SEND;
  wire [0:0]m08_nodes_M_SC_W_INFO;
  wire [68:0]m08_nodes_M_SC_W_PAYLD;
  wire m08_nodes_M_SC_W_RECV;
  wire [0:0]m08_nodes_M_SC_W_REQ;
  wire [0:0]m08_nodes_M_SC_W_SEND;
  wire [12:0]m08_sc2axi_M_AXI_ARADDR;
  wire [3:0]m08_sc2axi_M_AXI_ARCACHE;
  wire [2:0]m08_sc2axi_M_AXI_ARID;
  wire [7:0]m08_sc2axi_M_AXI_ARLEN;
  wire [0:0]m08_sc2axi_M_AXI_ARLOCK;
  wire [2:0]m08_sc2axi_M_AXI_ARPROT;
  wire [3:0]m08_sc2axi_M_AXI_ARQOS;
  wire m08_sc2axi_M_AXI_ARREADY;
  wire [1023:0]m08_sc2axi_M_AXI_ARUSER;
  wire m08_sc2axi_M_AXI_ARVALID;
  wire [12:0]m08_sc2axi_M_AXI_AWADDR;
  wire [3:0]m08_sc2axi_M_AXI_AWCACHE;
  wire [2:0]m08_sc2axi_M_AXI_AWID;
  wire [7:0]m08_sc2axi_M_AXI_AWLEN;
  wire [0:0]m08_sc2axi_M_AXI_AWLOCK;
  wire [2:0]m08_sc2axi_M_AXI_AWPROT;
  wire [3:0]m08_sc2axi_M_AXI_AWQOS;
  wire m08_sc2axi_M_AXI_AWREADY;
  wire [1023:0]m08_sc2axi_M_AXI_AWUSER;
  wire m08_sc2axi_M_AXI_AWVALID;
  wire [2:0]m08_sc2axi_M_AXI_BID;
  wire m08_sc2axi_M_AXI_BREADY;
  wire [1:0]m08_sc2axi_M_AXI_BRESP;
  wire [1023:0]m08_sc2axi_M_AXI_BUSER;
  wire m08_sc2axi_M_AXI_BVALID;
  wire [31:0]m08_sc2axi_M_AXI_RDATA;
  wire [2:0]m08_sc2axi_M_AXI_RID;
  wire m08_sc2axi_M_AXI_RLAST;
  wire m08_sc2axi_M_AXI_RREADY;
  wire [1:0]m08_sc2axi_M_AXI_RRESP;
  wire [1023:0]m08_sc2axi_M_AXI_RUSER;
  wire m08_sc2axi_M_AXI_RVALID;
  wire [31:0]m08_sc2axi_M_AXI_WDATA;
  wire m08_sc2axi_M_AXI_WLAST;
  wire m08_sc2axi_M_AXI_WREADY;
  wire [3:0]m08_sc2axi_M_AXI_WSTRB;
  wire [1023:0]m08_sc2axi_M_AXI_WUSER;
  wire m08_sc2axi_M_AXI_WVALID;
  wire [12:0]m09_exit_pipeline_m_axi_ARADDR;
  wire [1:0]m09_exit_pipeline_m_axi_ARBURST;
  wire [3:0]m09_exit_pipeline_m_axi_ARCACHE;
  wire [7:0]m09_exit_pipeline_m_axi_ARLEN;
  wire [0:0]m09_exit_pipeline_m_axi_ARLOCK;
  wire [2:0]m09_exit_pipeline_m_axi_ARPROT;
  wire [3:0]m09_exit_pipeline_m_axi_ARQOS;
  wire m09_exit_pipeline_m_axi_ARREADY;
  wire [2:0]m09_exit_pipeline_m_axi_ARSIZE;
  wire [15:0]m09_exit_pipeline_m_axi_ARUSER;
  wire m09_exit_pipeline_m_axi_ARVALID;
  wire [12:0]m09_exit_pipeline_m_axi_AWADDR;
  wire [1:0]m09_exit_pipeline_m_axi_AWBURST;
  wire [3:0]m09_exit_pipeline_m_axi_AWCACHE;
  wire [7:0]m09_exit_pipeline_m_axi_AWLEN;
  wire [0:0]m09_exit_pipeline_m_axi_AWLOCK;
  wire [2:0]m09_exit_pipeline_m_axi_AWPROT;
  wire [3:0]m09_exit_pipeline_m_axi_AWQOS;
  wire m09_exit_pipeline_m_axi_AWREADY;
  wire [2:0]m09_exit_pipeline_m_axi_AWSIZE;
  wire [15:0]m09_exit_pipeline_m_axi_AWUSER;
  wire m09_exit_pipeline_m_axi_AWVALID;
  wire m09_exit_pipeline_m_axi_BREADY;
  wire [1:0]m09_exit_pipeline_m_axi_BRESP;
  wire m09_exit_pipeline_m_axi_BVALID;
  wire [31:0]m09_exit_pipeline_m_axi_RDATA;
  wire m09_exit_pipeline_m_axi_RLAST;
  wire m09_exit_pipeline_m_axi_RREADY;
  wire [1:0]m09_exit_pipeline_m_axi_RRESP;
  wire m09_exit_pipeline_m_axi_RVALID;
  wire [31:0]m09_exit_pipeline_m_axi_WDATA;
  wire m09_exit_pipeline_m_axi_WLAST;
  wire m09_exit_pipeline_m_axi_WREADY;
  wire [3:0]m09_exit_pipeline_m_axi_WSTRB;
  wire m09_exit_pipeline_m_axi_WVALID;
  wire [0:0]m09_nodes_M_SC_AR_INFO;
  wire [181:0]m09_nodes_M_SC_AR_PAYLD;
  wire m09_nodes_M_SC_AR_RECV;
  wire [0:0]m09_nodes_M_SC_AR_REQ;
  wire [0:0]m09_nodes_M_SC_AR_SEND;
  wire [0:0]m09_nodes_M_SC_AW_INFO;
  wire [181:0]m09_nodes_M_SC_AW_PAYLD;
  wire m09_nodes_M_SC_AW_RECV;
  wire [0:0]m09_nodes_M_SC_AW_REQ;
  wire [0:0]m09_nodes_M_SC_AW_SEND;
  wire [0:0]m09_nodes_M_SC_B_INFO;
  wire [8:0]m09_nodes_M_SC_B_PAYLD;
  wire [0:0]m09_nodes_M_SC_B_RECV;
  wire [0:0]m09_nodes_M_SC_B_REQ;
  wire [0:0]m09_nodes_M_SC_B_SEND;
  wire [0:0]m09_nodes_M_SC_R_INFO;
  wire [54:0]m09_nodes_M_SC_R_PAYLD;
  wire [0:0]m09_nodes_M_SC_R_RECV;
  wire [0:0]m09_nodes_M_SC_R_REQ;
  wire [0:0]m09_nodes_M_SC_R_SEND;
  wire [0:0]m09_nodes_M_SC_W_INFO;
  wire [68:0]m09_nodes_M_SC_W_PAYLD;
  wire m09_nodes_M_SC_W_RECV;
  wire [0:0]m09_nodes_M_SC_W_REQ;
  wire [0:0]m09_nodes_M_SC_W_SEND;
  wire [12:0]m09_sc2axi_M_AXI_ARADDR;
  wire [3:0]m09_sc2axi_M_AXI_ARCACHE;
  wire [2:0]m09_sc2axi_M_AXI_ARID;
  wire [7:0]m09_sc2axi_M_AXI_ARLEN;
  wire [0:0]m09_sc2axi_M_AXI_ARLOCK;
  wire [2:0]m09_sc2axi_M_AXI_ARPROT;
  wire [3:0]m09_sc2axi_M_AXI_ARQOS;
  wire m09_sc2axi_M_AXI_ARREADY;
  wire [1023:0]m09_sc2axi_M_AXI_ARUSER;
  wire m09_sc2axi_M_AXI_ARVALID;
  wire [12:0]m09_sc2axi_M_AXI_AWADDR;
  wire [3:0]m09_sc2axi_M_AXI_AWCACHE;
  wire [2:0]m09_sc2axi_M_AXI_AWID;
  wire [7:0]m09_sc2axi_M_AXI_AWLEN;
  wire [0:0]m09_sc2axi_M_AXI_AWLOCK;
  wire [2:0]m09_sc2axi_M_AXI_AWPROT;
  wire [3:0]m09_sc2axi_M_AXI_AWQOS;
  wire m09_sc2axi_M_AXI_AWREADY;
  wire [1023:0]m09_sc2axi_M_AXI_AWUSER;
  wire m09_sc2axi_M_AXI_AWVALID;
  wire [2:0]m09_sc2axi_M_AXI_BID;
  wire m09_sc2axi_M_AXI_BREADY;
  wire [1:0]m09_sc2axi_M_AXI_BRESP;
  wire [1023:0]m09_sc2axi_M_AXI_BUSER;
  wire m09_sc2axi_M_AXI_BVALID;
  wire [31:0]m09_sc2axi_M_AXI_RDATA;
  wire [2:0]m09_sc2axi_M_AXI_RID;
  wire m09_sc2axi_M_AXI_RLAST;
  wire m09_sc2axi_M_AXI_RREADY;
  wire [1:0]m09_sc2axi_M_AXI_RRESP;
  wire [1023:0]m09_sc2axi_M_AXI_RUSER;
  wire m09_sc2axi_M_AXI_RVALID;
  wire [31:0]m09_sc2axi_M_AXI_WDATA;
  wire m09_sc2axi_M_AXI_WLAST;
  wire m09_sc2axi_M_AXI_WREADY;
  wire [3:0]m09_sc2axi_M_AXI_WSTRB;
  wire [1023:0]m09_sc2axi_M_AXI_WUSER;
  wire m09_sc2axi_M_AXI_WVALID;
  wire [12:0]m10_exit_pipeline_m_axi_ARADDR;
  wire [1:0]m10_exit_pipeline_m_axi_ARBURST;
  wire [3:0]m10_exit_pipeline_m_axi_ARCACHE;
  wire [7:0]m10_exit_pipeline_m_axi_ARLEN;
  wire [0:0]m10_exit_pipeline_m_axi_ARLOCK;
  wire [2:0]m10_exit_pipeline_m_axi_ARPROT;
  wire [3:0]m10_exit_pipeline_m_axi_ARQOS;
  wire m10_exit_pipeline_m_axi_ARREADY;
  wire [2:0]m10_exit_pipeline_m_axi_ARSIZE;
  wire [15:0]m10_exit_pipeline_m_axi_ARUSER;
  wire m10_exit_pipeline_m_axi_ARVALID;
  wire [12:0]m10_exit_pipeline_m_axi_AWADDR;
  wire [1:0]m10_exit_pipeline_m_axi_AWBURST;
  wire [3:0]m10_exit_pipeline_m_axi_AWCACHE;
  wire [7:0]m10_exit_pipeline_m_axi_AWLEN;
  wire [0:0]m10_exit_pipeline_m_axi_AWLOCK;
  wire [2:0]m10_exit_pipeline_m_axi_AWPROT;
  wire [3:0]m10_exit_pipeline_m_axi_AWQOS;
  wire m10_exit_pipeline_m_axi_AWREADY;
  wire [2:0]m10_exit_pipeline_m_axi_AWSIZE;
  wire [15:0]m10_exit_pipeline_m_axi_AWUSER;
  wire m10_exit_pipeline_m_axi_AWVALID;
  wire m10_exit_pipeline_m_axi_BREADY;
  wire [1:0]m10_exit_pipeline_m_axi_BRESP;
  wire m10_exit_pipeline_m_axi_BVALID;
  wire [31:0]m10_exit_pipeline_m_axi_RDATA;
  wire m10_exit_pipeline_m_axi_RLAST;
  wire m10_exit_pipeline_m_axi_RREADY;
  wire [1:0]m10_exit_pipeline_m_axi_RRESP;
  wire m10_exit_pipeline_m_axi_RVALID;
  wire [31:0]m10_exit_pipeline_m_axi_WDATA;
  wire m10_exit_pipeline_m_axi_WLAST;
  wire m10_exit_pipeline_m_axi_WREADY;
  wire [3:0]m10_exit_pipeline_m_axi_WSTRB;
  wire m10_exit_pipeline_m_axi_WVALID;
  wire [0:0]m10_nodes_M_SC_AR_INFO;
  wire [181:0]m10_nodes_M_SC_AR_PAYLD;
  wire m10_nodes_M_SC_AR_RECV;
  wire [0:0]m10_nodes_M_SC_AR_REQ;
  wire [0:0]m10_nodes_M_SC_AR_SEND;
  wire [0:0]m10_nodes_M_SC_AW_INFO;
  wire [181:0]m10_nodes_M_SC_AW_PAYLD;
  wire m10_nodes_M_SC_AW_RECV;
  wire [0:0]m10_nodes_M_SC_AW_REQ;
  wire [0:0]m10_nodes_M_SC_AW_SEND;
  wire [0:0]m10_nodes_M_SC_B_INFO;
  wire [8:0]m10_nodes_M_SC_B_PAYLD;
  wire [0:0]m10_nodes_M_SC_B_RECV;
  wire [0:0]m10_nodes_M_SC_B_REQ;
  wire [0:0]m10_nodes_M_SC_B_SEND;
  wire [0:0]m10_nodes_M_SC_R_INFO;
  wire [54:0]m10_nodes_M_SC_R_PAYLD;
  wire [0:0]m10_nodes_M_SC_R_RECV;
  wire [0:0]m10_nodes_M_SC_R_REQ;
  wire [0:0]m10_nodes_M_SC_R_SEND;
  wire [0:0]m10_nodes_M_SC_W_INFO;
  wire [68:0]m10_nodes_M_SC_W_PAYLD;
  wire m10_nodes_M_SC_W_RECV;
  wire [0:0]m10_nodes_M_SC_W_REQ;
  wire [0:0]m10_nodes_M_SC_W_SEND;
  wire [12:0]m10_sc2axi_M_AXI_ARADDR;
  wire [3:0]m10_sc2axi_M_AXI_ARCACHE;
  wire [2:0]m10_sc2axi_M_AXI_ARID;
  wire [7:0]m10_sc2axi_M_AXI_ARLEN;
  wire [0:0]m10_sc2axi_M_AXI_ARLOCK;
  wire [2:0]m10_sc2axi_M_AXI_ARPROT;
  wire [3:0]m10_sc2axi_M_AXI_ARQOS;
  wire m10_sc2axi_M_AXI_ARREADY;
  wire [1023:0]m10_sc2axi_M_AXI_ARUSER;
  wire m10_sc2axi_M_AXI_ARVALID;
  wire [12:0]m10_sc2axi_M_AXI_AWADDR;
  wire [3:0]m10_sc2axi_M_AXI_AWCACHE;
  wire [2:0]m10_sc2axi_M_AXI_AWID;
  wire [7:0]m10_sc2axi_M_AXI_AWLEN;
  wire [0:0]m10_sc2axi_M_AXI_AWLOCK;
  wire [2:0]m10_sc2axi_M_AXI_AWPROT;
  wire [3:0]m10_sc2axi_M_AXI_AWQOS;
  wire m10_sc2axi_M_AXI_AWREADY;
  wire [1023:0]m10_sc2axi_M_AXI_AWUSER;
  wire m10_sc2axi_M_AXI_AWVALID;
  wire [2:0]m10_sc2axi_M_AXI_BID;
  wire m10_sc2axi_M_AXI_BREADY;
  wire [1:0]m10_sc2axi_M_AXI_BRESP;
  wire [1023:0]m10_sc2axi_M_AXI_BUSER;
  wire m10_sc2axi_M_AXI_BVALID;
  wire [31:0]m10_sc2axi_M_AXI_RDATA;
  wire [2:0]m10_sc2axi_M_AXI_RID;
  wire m10_sc2axi_M_AXI_RLAST;
  wire m10_sc2axi_M_AXI_RREADY;
  wire [1:0]m10_sc2axi_M_AXI_RRESP;
  wire [1023:0]m10_sc2axi_M_AXI_RUSER;
  wire m10_sc2axi_M_AXI_RVALID;
  wire [31:0]m10_sc2axi_M_AXI_WDATA;
  wire m10_sc2axi_M_AXI_WLAST;
  wire m10_sc2axi_M_AXI_WREADY;
  wire [3:0]m10_sc2axi_M_AXI_WSTRB;
  wire [1023:0]m10_sc2axi_M_AXI_WUSER;
  wire m10_sc2axi_M_AXI_WVALID;
  wire [12:0]m11_exit_pipeline_m_axi_ARADDR;
  wire [1:0]m11_exit_pipeline_m_axi_ARBURST;
  wire [3:0]m11_exit_pipeline_m_axi_ARCACHE;
  wire [7:0]m11_exit_pipeline_m_axi_ARLEN;
  wire [0:0]m11_exit_pipeline_m_axi_ARLOCK;
  wire [2:0]m11_exit_pipeline_m_axi_ARPROT;
  wire [3:0]m11_exit_pipeline_m_axi_ARQOS;
  wire m11_exit_pipeline_m_axi_ARREADY;
  wire [2:0]m11_exit_pipeline_m_axi_ARSIZE;
  wire [15:0]m11_exit_pipeline_m_axi_ARUSER;
  wire m11_exit_pipeline_m_axi_ARVALID;
  wire [12:0]m11_exit_pipeline_m_axi_AWADDR;
  wire [1:0]m11_exit_pipeline_m_axi_AWBURST;
  wire [3:0]m11_exit_pipeline_m_axi_AWCACHE;
  wire [7:0]m11_exit_pipeline_m_axi_AWLEN;
  wire [0:0]m11_exit_pipeline_m_axi_AWLOCK;
  wire [2:0]m11_exit_pipeline_m_axi_AWPROT;
  wire [3:0]m11_exit_pipeline_m_axi_AWQOS;
  wire m11_exit_pipeline_m_axi_AWREADY;
  wire [2:0]m11_exit_pipeline_m_axi_AWSIZE;
  wire [15:0]m11_exit_pipeline_m_axi_AWUSER;
  wire m11_exit_pipeline_m_axi_AWVALID;
  wire m11_exit_pipeline_m_axi_BREADY;
  wire [1:0]m11_exit_pipeline_m_axi_BRESP;
  wire m11_exit_pipeline_m_axi_BVALID;
  wire [31:0]m11_exit_pipeline_m_axi_RDATA;
  wire m11_exit_pipeline_m_axi_RLAST;
  wire m11_exit_pipeline_m_axi_RREADY;
  wire [1:0]m11_exit_pipeline_m_axi_RRESP;
  wire m11_exit_pipeline_m_axi_RVALID;
  wire [31:0]m11_exit_pipeline_m_axi_WDATA;
  wire m11_exit_pipeline_m_axi_WLAST;
  wire m11_exit_pipeline_m_axi_WREADY;
  wire [3:0]m11_exit_pipeline_m_axi_WSTRB;
  wire m11_exit_pipeline_m_axi_WVALID;
  wire [0:0]m11_nodes_M_SC_AR_INFO;
  wire [181:0]m11_nodes_M_SC_AR_PAYLD;
  wire m11_nodes_M_SC_AR_RECV;
  wire [0:0]m11_nodes_M_SC_AR_REQ;
  wire [0:0]m11_nodes_M_SC_AR_SEND;
  wire [0:0]m11_nodes_M_SC_AW_INFO;
  wire [181:0]m11_nodes_M_SC_AW_PAYLD;
  wire m11_nodes_M_SC_AW_RECV;
  wire [0:0]m11_nodes_M_SC_AW_REQ;
  wire [0:0]m11_nodes_M_SC_AW_SEND;
  wire [0:0]m11_nodes_M_SC_B_INFO;
  wire [8:0]m11_nodes_M_SC_B_PAYLD;
  wire [0:0]m11_nodes_M_SC_B_RECV;
  wire [0:0]m11_nodes_M_SC_B_REQ;
  wire [0:0]m11_nodes_M_SC_B_SEND;
  wire [0:0]m11_nodes_M_SC_R_INFO;
  wire [54:0]m11_nodes_M_SC_R_PAYLD;
  wire [0:0]m11_nodes_M_SC_R_RECV;
  wire [0:0]m11_nodes_M_SC_R_REQ;
  wire [0:0]m11_nodes_M_SC_R_SEND;
  wire [0:0]m11_nodes_M_SC_W_INFO;
  wire [68:0]m11_nodes_M_SC_W_PAYLD;
  wire m11_nodes_M_SC_W_RECV;
  wire [0:0]m11_nodes_M_SC_W_REQ;
  wire [0:0]m11_nodes_M_SC_W_SEND;
  wire [12:0]m11_sc2axi_M_AXI_ARADDR;
  wire [3:0]m11_sc2axi_M_AXI_ARCACHE;
  wire [2:0]m11_sc2axi_M_AXI_ARID;
  wire [7:0]m11_sc2axi_M_AXI_ARLEN;
  wire [0:0]m11_sc2axi_M_AXI_ARLOCK;
  wire [2:0]m11_sc2axi_M_AXI_ARPROT;
  wire [3:0]m11_sc2axi_M_AXI_ARQOS;
  wire m11_sc2axi_M_AXI_ARREADY;
  wire [1023:0]m11_sc2axi_M_AXI_ARUSER;
  wire m11_sc2axi_M_AXI_ARVALID;
  wire [12:0]m11_sc2axi_M_AXI_AWADDR;
  wire [3:0]m11_sc2axi_M_AXI_AWCACHE;
  wire [2:0]m11_sc2axi_M_AXI_AWID;
  wire [7:0]m11_sc2axi_M_AXI_AWLEN;
  wire [0:0]m11_sc2axi_M_AXI_AWLOCK;
  wire [2:0]m11_sc2axi_M_AXI_AWPROT;
  wire [3:0]m11_sc2axi_M_AXI_AWQOS;
  wire m11_sc2axi_M_AXI_AWREADY;
  wire [1023:0]m11_sc2axi_M_AXI_AWUSER;
  wire m11_sc2axi_M_AXI_AWVALID;
  wire [2:0]m11_sc2axi_M_AXI_BID;
  wire m11_sc2axi_M_AXI_BREADY;
  wire [1:0]m11_sc2axi_M_AXI_BRESP;
  wire [1023:0]m11_sc2axi_M_AXI_BUSER;
  wire m11_sc2axi_M_AXI_BVALID;
  wire [31:0]m11_sc2axi_M_AXI_RDATA;
  wire [2:0]m11_sc2axi_M_AXI_RID;
  wire m11_sc2axi_M_AXI_RLAST;
  wire m11_sc2axi_M_AXI_RREADY;
  wire [1:0]m11_sc2axi_M_AXI_RRESP;
  wire [1023:0]m11_sc2axi_M_AXI_RUSER;
  wire m11_sc2axi_M_AXI_RVALID;
  wire [31:0]m11_sc2axi_M_AXI_WDATA;
  wire m11_sc2axi_M_AXI_WLAST;
  wire m11_sc2axi_M_AXI_WREADY;
  wire [3:0]m11_sc2axi_M_AXI_WSTRB;
  wire [1023:0]m11_sc2axi_M_AXI_WUSER;
  wire m11_sc2axi_M_AXI_WVALID;
  wire [4:0]m12_exit_pipeline_m_axi_ARADDR;
  wire [2:0]m12_exit_pipeline_m_axi_ARPROT;
  wire m12_exit_pipeline_m_axi_ARREADY;
  wire m12_exit_pipeline_m_axi_ARVALID;
  wire [4:0]m12_exit_pipeline_m_axi_AWADDR;
  wire [2:0]m12_exit_pipeline_m_axi_AWPROT;
  wire m12_exit_pipeline_m_axi_AWREADY;
  wire m12_exit_pipeline_m_axi_AWVALID;
  wire m12_exit_pipeline_m_axi_BREADY;
  wire [1:0]m12_exit_pipeline_m_axi_BRESP;
  wire m12_exit_pipeline_m_axi_BVALID;
  wire [31:0]m12_exit_pipeline_m_axi_RDATA;
  wire m12_exit_pipeline_m_axi_RREADY;
  wire [1:0]m12_exit_pipeline_m_axi_RRESP;
  wire m12_exit_pipeline_m_axi_RVALID;
  wire [31:0]m12_exit_pipeline_m_axi_WDATA;
  wire m12_exit_pipeline_m_axi_WREADY;
  wire [3:0]m12_exit_pipeline_m_axi_WSTRB;
  wire m12_exit_pipeline_m_axi_WVALID;
  wire [0:0]m12_nodes_M_SC_AR_INFO;
  wire [181:0]m12_nodes_M_SC_AR_PAYLD;
  wire m12_nodes_M_SC_AR_RECV;
  wire [0:0]m12_nodes_M_SC_AR_REQ;
  wire [0:0]m12_nodes_M_SC_AR_SEND;
  wire [0:0]m12_nodes_M_SC_AW_INFO;
  wire [181:0]m12_nodes_M_SC_AW_PAYLD;
  wire m12_nodes_M_SC_AW_RECV;
  wire [0:0]m12_nodes_M_SC_AW_REQ;
  wire [0:0]m12_nodes_M_SC_AW_SEND;
  wire [0:0]m12_nodes_M_SC_B_INFO;
  wire [8:0]m12_nodes_M_SC_B_PAYLD;
  wire [0:0]m12_nodes_M_SC_B_RECV;
  wire [0:0]m12_nodes_M_SC_B_REQ;
  wire [0:0]m12_nodes_M_SC_B_SEND;
  wire [0:0]m12_nodes_M_SC_R_INFO;
  wire [54:0]m12_nodes_M_SC_R_PAYLD;
  wire [0:0]m12_nodes_M_SC_R_RECV;
  wire [0:0]m12_nodes_M_SC_R_REQ;
  wire [0:0]m12_nodes_M_SC_R_SEND;
  wire [0:0]m12_nodes_M_SC_W_INFO;
  wire [68:0]m12_nodes_M_SC_W_PAYLD;
  wire m12_nodes_M_SC_W_RECV;
  wire [0:0]m12_nodes_M_SC_W_REQ;
  wire [0:0]m12_nodes_M_SC_W_SEND;
  wire [4:0]m12_sc2axi_M_AXI_ARADDR;
  wire [3:0]m12_sc2axi_M_AXI_ARCACHE;
  wire [2:0]m12_sc2axi_M_AXI_ARID;
  wire [7:0]m12_sc2axi_M_AXI_ARLEN;
  wire [0:0]m12_sc2axi_M_AXI_ARLOCK;
  wire [2:0]m12_sc2axi_M_AXI_ARPROT;
  wire [3:0]m12_sc2axi_M_AXI_ARQOS;
  wire m12_sc2axi_M_AXI_ARREADY;
  wire [1023:0]m12_sc2axi_M_AXI_ARUSER;
  wire m12_sc2axi_M_AXI_ARVALID;
  wire [4:0]m12_sc2axi_M_AXI_AWADDR;
  wire [3:0]m12_sc2axi_M_AXI_AWCACHE;
  wire [2:0]m12_sc2axi_M_AXI_AWID;
  wire [7:0]m12_sc2axi_M_AXI_AWLEN;
  wire [0:0]m12_sc2axi_M_AXI_AWLOCK;
  wire [2:0]m12_sc2axi_M_AXI_AWPROT;
  wire [3:0]m12_sc2axi_M_AXI_AWQOS;
  wire m12_sc2axi_M_AXI_AWREADY;
  wire [1023:0]m12_sc2axi_M_AXI_AWUSER;
  wire m12_sc2axi_M_AXI_AWVALID;
  wire [2:0]m12_sc2axi_M_AXI_BID;
  wire m12_sc2axi_M_AXI_BREADY;
  wire [1:0]m12_sc2axi_M_AXI_BRESP;
  wire [1023:0]m12_sc2axi_M_AXI_BUSER;
  wire m12_sc2axi_M_AXI_BVALID;
  wire [31:0]m12_sc2axi_M_AXI_RDATA;
  wire [2:0]m12_sc2axi_M_AXI_RID;
  wire m12_sc2axi_M_AXI_RLAST;
  wire m12_sc2axi_M_AXI_RREADY;
  wire [1:0]m12_sc2axi_M_AXI_RRESP;
  wire [1023:0]m12_sc2axi_M_AXI_RUSER;
  wire m12_sc2axi_M_AXI_RVALID;
  wire [31:0]m12_sc2axi_M_AXI_WDATA;
  wire m12_sc2axi_M_AXI_WLAST;
  wire m12_sc2axi_M_AXI_WREADY;
  wire [3:0]m12_sc2axi_M_AXI_WSTRB;
  wire [1023:0]m12_sc2axi_M_AXI_WUSER;
  wire m12_sc2axi_M_AXI_WVALID;
  wire [4:0]m13_exit_pipeline_m_axi_ARADDR;
  wire [2:0]m13_exit_pipeline_m_axi_ARPROT;
  wire m13_exit_pipeline_m_axi_ARREADY;
  wire m13_exit_pipeline_m_axi_ARVALID;
  wire [4:0]m13_exit_pipeline_m_axi_AWADDR;
  wire [2:0]m13_exit_pipeline_m_axi_AWPROT;
  wire m13_exit_pipeline_m_axi_AWREADY;
  wire m13_exit_pipeline_m_axi_AWVALID;
  wire m13_exit_pipeline_m_axi_BREADY;
  wire [1:0]m13_exit_pipeline_m_axi_BRESP;
  wire m13_exit_pipeline_m_axi_BVALID;
  wire [31:0]m13_exit_pipeline_m_axi_RDATA;
  wire m13_exit_pipeline_m_axi_RREADY;
  wire [1:0]m13_exit_pipeline_m_axi_RRESP;
  wire m13_exit_pipeline_m_axi_RVALID;
  wire [31:0]m13_exit_pipeline_m_axi_WDATA;
  wire m13_exit_pipeline_m_axi_WREADY;
  wire [3:0]m13_exit_pipeline_m_axi_WSTRB;
  wire m13_exit_pipeline_m_axi_WVALID;
  wire [0:0]m13_nodes_M_SC_AR_INFO;
  wire [181:0]m13_nodes_M_SC_AR_PAYLD;
  wire m13_nodes_M_SC_AR_RECV;
  wire [0:0]m13_nodes_M_SC_AR_REQ;
  wire [0:0]m13_nodes_M_SC_AR_SEND;
  wire [0:0]m13_nodes_M_SC_AW_INFO;
  wire [181:0]m13_nodes_M_SC_AW_PAYLD;
  wire m13_nodes_M_SC_AW_RECV;
  wire [0:0]m13_nodes_M_SC_AW_REQ;
  wire [0:0]m13_nodes_M_SC_AW_SEND;
  wire [0:0]m13_nodes_M_SC_B_INFO;
  wire [8:0]m13_nodes_M_SC_B_PAYLD;
  wire [0:0]m13_nodes_M_SC_B_RECV;
  wire [0:0]m13_nodes_M_SC_B_REQ;
  wire [0:0]m13_nodes_M_SC_B_SEND;
  wire [0:0]m13_nodes_M_SC_R_INFO;
  wire [54:0]m13_nodes_M_SC_R_PAYLD;
  wire [0:0]m13_nodes_M_SC_R_RECV;
  wire [0:0]m13_nodes_M_SC_R_REQ;
  wire [0:0]m13_nodes_M_SC_R_SEND;
  wire [0:0]m13_nodes_M_SC_W_INFO;
  wire [68:0]m13_nodes_M_SC_W_PAYLD;
  wire m13_nodes_M_SC_W_RECV;
  wire [0:0]m13_nodes_M_SC_W_REQ;
  wire [0:0]m13_nodes_M_SC_W_SEND;
  wire [4:0]m13_sc2axi_M_AXI_ARADDR;
  wire [3:0]m13_sc2axi_M_AXI_ARCACHE;
  wire [2:0]m13_sc2axi_M_AXI_ARID;
  wire [7:0]m13_sc2axi_M_AXI_ARLEN;
  wire [0:0]m13_sc2axi_M_AXI_ARLOCK;
  wire [2:0]m13_sc2axi_M_AXI_ARPROT;
  wire [3:0]m13_sc2axi_M_AXI_ARQOS;
  wire m13_sc2axi_M_AXI_ARREADY;
  wire [1023:0]m13_sc2axi_M_AXI_ARUSER;
  wire m13_sc2axi_M_AXI_ARVALID;
  wire [4:0]m13_sc2axi_M_AXI_AWADDR;
  wire [3:0]m13_sc2axi_M_AXI_AWCACHE;
  wire [2:0]m13_sc2axi_M_AXI_AWID;
  wire [7:0]m13_sc2axi_M_AXI_AWLEN;
  wire [0:0]m13_sc2axi_M_AXI_AWLOCK;
  wire [2:0]m13_sc2axi_M_AXI_AWPROT;
  wire [3:0]m13_sc2axi_M_AXI_AWQOS;
  wire m13_sc2axi_M_AXI_AWREADY;
  wire [1023:0]m13_sc2axi_M_AXI_AWUSER;
  wire m13_sc2axi_M_AXI_AWVALID;
  wire [2:0]m13_sc2axi_M_AXI_BID;
  wire m13_sc2axi_M_AXI_BREADY;
  wire [1:0]m13_sc2axi_M_AXI_BRESP;
  wire [1023:0]m13_sc2axi_M_AXI_BUSER;
  wire m13_sc2axi_M_AXI_BVALID;
  wire [31:0]m13_sc2axi_M_AXI_RDATA;
  wire [2:0]m13_sc2axi_M_AXI_RID;
  wire m13_sc2axi_M_AXI_RLAST;
  wire m13_sc2axi_M_AXI_RREADY;
  wire [1:0]m13_sc2axi_M_AXI_RRESP;
  wire [1023:0]m13_sc2axi_M_AXI_RUSER;
  wire m13_sc2axi_M_AXI_RVALID;
  wire [31:0]m13_sc2axi_M_AXI_WDATA;
  wire m13_sc2axi_M_AXI_WLAST;
  wire m13_sc2axi_M_AXI_WREADY;
  wire [3:0]m13_sc2axi_M_AXI_WSTRB;
  wire [1023:0]m13_sc2axi_M_AXI_WUSER;
  wire m13_sc2axi_M_AXI_WVALID;
  wire [4:0]m14_exit_pipeline_m_axi_ARADDR;
  wire [2:0]m14_exit_pipeline_m_axi_ARPROT;
  wire m14_exit_pipeline_m_axi_ARREADY;
  wire m14_exit_pipeline_m_axi_ARVALID;
  wire [4:0]m14_exit_pipeline_m_axi_AWADDR;
  wire [2:0]m14_exit_pipeline_m_axi_AWPROT;
  wire m14_exit_pipeline_m_axi_AWREADY;
  wire m14_exit_pipeline_m_axi_AWVALID;
  wire m14_exit_pipeline_m_axi_BREADY;
  wire [1:0]m14_exit_pipeline_m_axi_BRESP;
  wire m14_exit_pipeline_m_axi_BVALID;
  wire [31:0]m14_exit_pipeline_m_axi_RDATA;
  wire m14_exit_pipeline_m_axi_RREADY;
  wire [1:0]m14_exit_pipeline_m_axi_RRESP;
  wire m14_exit_pipeline_m_axi_RVALID;
  wire [31:0]m14_exit_pipeline_m_axi_WDATA;
  wire m14_exit_pipeline_m_axi_WREADY;
  wire [3:0]m14_exit_pipeline_m_axi_WSTRB;
  wire m14_exit_pipeline_m_axi_WVALID;
  wire [0:0]m14_nodes_M_SC_AR_INFO;
  wire [181:0]m14_nodes_M_SC_AR_PAYLD;
  wire m14_nodes_M_SC_AR_RECV;
  wire [0:0]m14_nodes_M_SC_AR_REQ;
  wire [0:0]m14_nodes_M_SC_AR_SEND;
  wire [0:0]m14_nodes_M_SC_AW_INFO;
  wire [181:0]m14_nodes_M_SC_AW_PAYLD;
  wire m14_nodes_M_SC_AW_RECV;
  wire [0:0]m14_nodes_M_SC_AW_REQ;
  wire [0:0]m14_nodes_M_SC_AW_SEND;
  wire [0:0]m14_nodes_M_SC_B_INFO;
  wire [8:0]m14_nodes_M_SC_B_PAYLD;
  wire [0:0]m14_nodes_M_SC_B_RECV;
  wire [0:0]m14_nodes_M_SC_B_REQ;
  wire [0:0]m14_nodes_M_SC_B_SEND;
  wire [0:0]m14_nodes_M_SC_R_INFO;
  wire [54:0]m14_nodes_M_SC_R_PAYLD;
  wire [0:0]m14_nodes_M_SC_R_RECV;
  wire [0:0]m14_nodes_M_SC_R_REQ;
  wire [0:0]m14_nodes_M_SC_R_SEND;
  wire [0:0]m14_nodes_M_SC_W_INFO;
  wire [68:0]m14_nodes_M_SC_W_PAYLD;
  wire m14_nodes_M_SC_W_RECV;
  wire [0:0]m14_nodes_M_SC_W_REQ;
  wire [0:0]m14_nodes_M_SC_W_SEND;
  wire [4:0]m14_sc2axi_M_AXI_ARADDR;
  wire [3:0]m14_sc2axi_M_AXI_ARCACHE;
  wire [2:0]m14_sc2axi_M_AXI_ARID;
  wire [7:0]m14_sc2axi_M_AXI_ARLEN;
  wire [0:0]m14_sc2axi_M_AXI_ARLOCK;
  wire [2:0]m14_sc2axi_M_AXI_ARPROT;
  wire [3:0]m14_sc2axi_M_AXI_ARQOS;
  wire m14_sc2axi_M_AXI_ARREADY;
  wire [1023:0]m14_sc2axi_M_AXI_ARUSER;
  wire m14_sc2axi_M_AXI_ARVALID;
  wire [4:0]m14_sc2axi_M_AXI_AWADDR;
  wire [3:0]m14_sc2axi_M_AXI_AWCACHE;
  wire [2:0]m14_sc2axi_M_AXI_AWID;
  wire [7:0]m14_sc2axi_M_AXI_AWLEN;
  wire [0:0]m14_sc2axi_M_AXI_AWLOCK;
  wire [2:0]m14_sc2axi_M_AXI_AWPROT;
  wire [3:0]m14_sc2axi_M_AXI_AWQOS;
  wire m14_sc2axi_M_AXI_AWREADY;
  wire [1023:0]m14_sc2axi_M_AXI_AWUSER;
  wire m14_sc2axi_M_AXI_AWVALID;
  wire [2:0]m14_sc2axi_M_AXI_BID;
  wire m14_sc2axi_M_AXI_BREADY;
  wire [1:0]m14_sc2axi_M_AXI_BRESP;
  wire [1023:0]m14_sc2axi_M_AXI_BUSER;
  wire m14_sc2axi_M_AXI_BVALID;
  wire [31:0]m14_sc2axi_M_AXI_RDATA;
  wire [2:0]m14_sc2axi_M_AXI_RID;
  wire m14_sc2axi_M_AXI_RLAST;
  wire m14_sc2axi_M_AXI_RREADY;
  wire [1:0]m14_sc2axi_M_AXI_RRESP;
  wire [1023:0]m14_sc2axi_M_AXI_RUSER;
  wire m14_sc2axi_M_AXI_RVALID;
  wire [31:0]m14_sc2axi_M_AXI_WDATA;
  wire m14_sc2axi_M_AXI_WLAST;
  wire m14_sc2axi_M_AXI_WREADY;
  wire [3:0]m14_sc2axi_M_AXI_WSTRB;
  wire [1023:0]m14_sc2axi_M_AXI_WUSER;
  wire m14_sc2axi_M_AXI_WVALID;
  wire [4:0]m15_exit_pipeline_m_axi_ARADDR;
  wire [2:0]m15_exit_pipeline_m_axi_ARPROT;
  wire m15_exit_pipeline_m_axi_ARREADY;
  wire m15_exit_pipeline_m_axi_ARVALID;
  wire [4:0]m15_exit_pipeline_m_axi_AWADDR;
  wire [2:0]m15_exit_pipeline_m_axi_AWPROT;
  wire m15_exit_pipeline_m_axi_AWREADY;
  wire m15_exit_pipeline_m_axi_AWVALID;
  wire m15_exit_pipeline_m_axi_BREADY;
  wire [1:0]m15_exit_pipeline_m_axi_BRESP;
  wire m15_exit_pipeline_m_axi_BVALID;
  wire [31:0]m15_exit_pipeline_m_axi_RDATA;
  wire m15_exit_pipeline_m_axi_RREADY;
  wire [1:0]m15_exit_pipeline_m_axi_RRESP;
  wire m15_exit_pipeline_m_axi_RVALID;
  wire [31:0]m15_exit_pipeline_m_axi_WDATA;
  wire m15_exit_pipeline_m_axi_WREADY;
  wire [3:0]m15_exit_pipeline_m_axi_WSTRB;
  wire m15_exit_pipeline_m_axi_WVALID;
  wire [0:0]m15_nodes_M_SC_AR_INFO;
  wire [181:0]m15_nodes_M_SC_AR_PAYLD;
  wire m15_nodes_M_SC_AR_RECV;
  wire [0:0]m15_nodes_M_SC_AR_REQ;
  wire [0:0]m15_nodes_M_SC_AR_SEND;
  wire [0:0]m15_nodes_M_SC_AW_INFO;
  wire [181:0]m15_nodes_M_SC_AW_PAYLD;
  wire m15_nodes_M_SC_AW_RECV;
  wire [0:0]m15_nodes_M_SC_AW_REQ;
  wire [0:0]m15_nodes_M_SC_AW_SEND;
  wire [0:0]m15_nodes_M_SC_B_INFO;
  wire [8:0]m15_nodes_M_SC_B_PAYLD;
  wire [0:0]m15_nodes_M_SC_B_RECV;
  wire [0:0]m15_nodes_M_SC_B_REQ;
  wire [0:0]m15_nodes_M_SC_B_SEND;
  wire [0:0]m15_nodes_M_SC_R_INFO;
  wire [54:0]m15_nodes_M_SC_R_PAYLD;
  wire [0:0]m15_nodes_M_SC_R_RECV;
  wire [0:0]m15_nodes_M_SC_R_REQ;
  wire [0:0]m15_nodes_M_SC_R_SEND;
  wire [0:0]m15_nodes_M_SC_W_INFO;
  wire [68:0]m15_nodes_M_SC_W_PAYLD;
  wire m15_nodes_M_SC_W_RECV;
  wire [0:0]m15_nodes_M_SC_W_REQ;
  wire [0:0]m15_nodes_M_SC_W_SEND;
  wire [4:0]m15_sc2axi_M_AXI_ARADDR;
  wire [3:0]m15_sc2axi_M_AXI_ARCACHE;
  wire [2:0]m15_sc2axi_M_AXI_ARID;
  wire [7:0]m15_sc2axi_M_AXI_ARLEN;
  wire [0:0]m15_sc2axi_M_AXI_ARLOCK;
  wire [2:0]m15_sc2axi_M_AXI_ARPROT;
  wire [3:0]m15_sc2axi_M_AXI_ARQOS;
  wire m15_sc2axi_M_AXI_ARREADY;
  wire [1023:0]m15_sc2axi_M_AXI_ARUSER;
  wire m15_sc2axi_M_AXI_ARVALID;
  wire [4:0]m15_sc2axi_M_AXI_AWADDR;
  wire [3:0]m15_sc2axi_M_AXI_AWCACHE;
  wire [2:0]m15_sc2axi_M_AXI_AWID;
  wire [7:0]m15_sc2axi_M_AXI_AWLEN;
  wire [0:0]m15_sc2axi_M_AXI_AWLOCK;
  wire [2:0]m15_sc2axi_M_AXI_AWPROT;
  wire [3:0]m15_sc2axi_M_AXI_AWQOS;
  wire m15_sc2axi_M_AXI_AWREADY;
  wire [1023:0]m15_sc2axi_M_AXI_AWUSER;
  wire m15_sc2axi_M_AXI_AWVALID;
  wire [2:0]m15_sc2axi_M_AXI_BID;
  wire m15_sc2axi_M_AXI_BREADY;
  wire [1:0]m15_sc2axi_M_AXI_BRESP;
  wire [1023:0]m15_sc2axi_M_AXI_BUSER;
  wire m15_sc2axi_M_AXI_BVALID;
  wire [31:0]m15_sc2axi_M_AXI_RDATA;
  wire [2:0]m15_sc2axi_M_AXI_RID;
  wire m15_sc2axi_M_AXI_RLAST;
  wire m15_sc2axi_M_AXI_RREADY;
  wire [1:0]m15_sc2axi_M_AXI_RRESP;
  wire [1023:0]m15_sc2axi_M_AXI_RUSER;
  wire m15_sc2axi_M_AXI_RVALID;
  wire [31:0]m15_sc2axi_M_AXI_WDATA;
  wire m15_sc2axi_M_AXI_WLAST;
  wire m15_sc2axi_M_AXI_WREADY;
  wire [3:0]m15_sc2axi_M_AXI_WSTRB;
  wire [1023:0]m15_sc2axi_M_AXI_WUSER;
  wire m15_sc2axi_M_AXI_WVALID;
  wire [4:0]m16_exit_pipeline_m_axi_ARADDR;
  wire [2:0]m16_exit_pipeline_m_axi_ARPROT;
  wire m16_exit_pipeline_m_axi_ARREADY;
  wire m16_exit_pipeline_m_axi_ARVALID;
  wire [4:0]m16_exit_pipeline_m_axi_AWADDR;
  wire [2:0]m16_exit_pipeline_m_axi_AWPROT;
  wire m16_exit_pipeline_m_axi_AWREADY;
  wire m16_exit_pipeline_m_axi_AWVALID;
  wire m16_exit_pipeline_m_axi_BREADY;
  wire [1:0]m16_exit_pipeline_m_axi_BRESP;
  wire m16_exit_pipeline_m_axi_BVALID;
  wire [31:0]m16_exit_pipeline_m_axi_RDATA;
  wire m16_exit_pipeline_m_axi_RREADY;
  wire [1:0]m16_exit_pipeline_m_axi_RRESP;
  wire m16_exit_pipeline_m_axi_RVALID;
  wire [31:0]m16_exit_pipeline_m_axi_WDATA;
  wire m16_exit_pipeline_m_axi_WREADY;
  wire [3:0]m16_exit_pipeline_m_axi_WSTRB;
  wire m16_exit_pipeline_m_axi_WVALID;
  wire [0:0]m16_nodes_M_SC_AR_INFO;
  wire [181:0]m16_nodes_M_SC_AR_PAYLD;
  wire m16_nodes_M_SC_AR_RECV;
  wire [0:0]m16_nodes_M_SC_AR_REQ;
  wire [0:0]m16_nodes_M_SC_AR_SEND;
  wire [0:0]m16_nodes_M_SC_AW_INFO;
  wire [181:0]m16_nodes_M_SC_AW_PAYLD;
  wire m16_nodes_M_SC_AW_RECV;
  wire [0:0]m16_nodes_M_SC_AW_REQ;
  wire [0:0]m16_nodes_M_SC_AW_SEND;
  wire [0:0]m16_nodes_M_SC_B_INFO;
  wire [8:0]m16_nodes_M_SC_B_PAYLD;
  wire [0:0]m16_nodes_M_SC_B_RECV;
  wire [0:0]m16_nodes_M_SC_B_REQ;
  wire [0:0]m16_nodes_M_SC_B_SEND;
  wire [0:0]m16_nodes_M_SC_R_INFO;
  wire [54:0]m16_nodes_M_SC_R_PAYLD;
  wire [0:0]m16_nodes_M_SC_R_RECV;
  wire [0:0]m16_nodes_M_SC_R_REQ;
  wire [0:0]m16_nodes_M_SC_R_SEND;
  wire [0:0]m16_nodes_M_SC_W_INFO;
  wire [68:0]m16_nodes_M_SC_W_PAYLD;
  wire m16_nodes_M_SC_W_RECV;
  wire [0:0]m16_nodes_M_SC_W_REQ;
  wire [0:0]m16_nodes_M_SC_W_SEND;
  wire [4:0]m16_sc2axi_M_AXI_ARADDR;
  wire [3:0]m16_sc2axi_M_AXI_ARCACHE;
  wire [2:0]m16_sc2axi_M_AXI_ARID;
  wire [7:0]m16_sc2axi_M_AXI_ARLEN;
  wire [0:0]m16_sc2axi_M_AXI_ARLOCK;
  wire [2:0]m16_sc2axi_M_AXI_ARPROT;
  wire [3:0]m16_sc2axi_M_AXI_ARQOS;
  wire m16_sc2axi_M_AXI_ARREADY;
  wire [1023:0]m16_sc2axi_M_AXI_ARUSER;
  wire m16_sc2axi_M_AXI_ARVALID;
  wire [4:0]m16_sc2axi_M_AXI_AWADDR;
  wire [3:0]m16_sc2axi_M_AXI_AWCACHE;
  wire [2:0]m16_sc2axi_M_AXI_AWID;
  wire [7:0]m16_sc2axi_M_AXI_AWLEN;
  wire [0:0]m16_sc2axi_M_AXI_AWLOCK;
  wire [2:0]m16_sc2axi_M_AXI_AWPROT;
  wire [3:0]m16_sc2axi_M_AXI_AWQOS;
  wire m16_sc2axi_M_AXI_AWREADY;
  wire [1023:0]m16_sc2axi_M_AXI_AWUSER;
  wire m16_sc2axi_M_AXI_AWVALID;
  wire [2:0]m16_sc2axi_M_AXI_BID;
  wire m16_sc2axi_M_AXI_BREADY;
  wire [1:0]m16_sc2axi_M_AXI_BRESP;
  wire [1023:0]m16_sc2axi_M_AXI_BUSER;
  wire m16_sc2axi_M_AXI_BVALID;
  wire [31:0]m16_sc2axi_M_AXI_RDATA;
  wire [2:0]m16_sc2axi_M_AXI_RID;
  wire m16_sc2axi_M_AXI_RLAST;
  wire m16_sc2axi_M_AXI_RREADY;
  wire [1:0]m16_sc2axi_M_AXI_RRESP;
  wire [1023:0]m16_sc2axi_M_AXI_RUSER;
  wire m16_sc2axi_M_AXI_RVALID;
  wire [31:0]m16_sc2axi_M_AXI_WDATA;
  wire m16_sc2axi_M_AXI_WLAST;
  wire m16_sc2axi_M_AXI_WREADY;
  wire [3:0]m16_sc2axi_M_AXI_WSTRB;
  wire [1023:0]m16_sc2axi_M_AXI_WUSER;
  wire m16_sc2axi_M_AXI_WVALID;
  wire [4:0]m17_exit_pipeline_m_axi_ARADDR;
  wire [2:0]m17_exit_pipeline_m_axi_ARPROT;
  wire m17_exit_pipeline_m_axi_ARREADY;
  wire m17_exit_pipeline_m_axi_ARVALID;
  wire [4:0]m17_exit_pipeline_m_axi_AWADDR;
  wire [2:0]m17_exit_pipeline_m_axi_AWPROT;
  wire m17_exit_pipeline_m_axi_AWREADY;
  wire m17_exit_pipeline_m_axi_AWVALID;
  wire m17_exit_pipeline_m_axi_BREADY;
  wire [1:0]m17_exit_pipeline_m_axi_BRESP;
  wire m17_exit_pipeline_m_axi_BVALID;
  wire [31:0]m17_exit_pipeline_m_axi_RDATA;
  wire m17_exit_pipeline_m_axi_RREADY;
  wire [1:0]m17_exit_pipeline_m_axi_RRESP;
  wire m17_exit_pipeline_m_axi_RVALID;
  wire [31:0]m17_exit_pipeline_m_axi_WDATA;
  wire m17_exit_pipeline_m_axi_WREADY;
  wire [3:0]m17_exit_pipeline_m_axi_WSTRB;
  wire m17_exit_pipeline_m_axi_WVALID;
  wire [0:0]m17_nodes_M_SC_AR_INFO;
  wire [181:0]m17_nodes_M_SC_AR_PAYLD;
  wire m17_nodes_M_SC_AR_RECV;
  wire [0:0]m17_nodes_M_SC_AR_REQ;
  wire [0:0]m17_nodes_M_SC_AR_SEND;
  wire [0:0]m17_nodes_M_SC_AW_INFO;
  wire [181:0]m17_nodes_M_SC_AW_PAYLD;
  wire m17_nodes_M_SC_AW_RECV;
  wire [0:0]m17_nodes_M_SC_AW_REQ;
  wire [0:0]m17_nodes_M_SC_AW_SEND;
  wire [0:0]m17_nodes_M_SC_B_INFO;
  wire [8:0]m17_nodes_M_SC_B_PAYLD;
  wire [0:0]m17_nodes_M_SC_B_RECV;
  wire [0:0]m17_nodes_M_SC_B_REQ;
  wire [0:0]m17_nodes_M_SC_B_SEND;
  wire [0:0]m17_nodes_M_SC_R_INFO;
  wire [54:0]m17_nodes_M_SC_R_PAYLD;
  wire [0:0]m17_nodes_M_SC_R_RECV;
  wire [0:0]m17_nodes_M_SC_R_REQ;
  wire [0:0]m17_nodes_M_SC_R_SEND;
  wire [0:0]m17_nodes_M_SC_W_INFO;
  wire [68:0]m17_nodes_M_SC_W_PAYLD;
  wire m17_nodes_M_SC_W_RECV;
  wire [0:0]m17_nodes_M_SC_W_REQ;
  wire [0:0]m17_nodes_M_SC_W_SEND;
  wire [4:0]m17_sc2axi_M_AXI_ARADDR;
  wire [3:0]m17_sc2axi_M_AXI_ARCACHE;
  wire [2:0]m17_sc2axi_M_AXI_ARID;
  wire [7:0]m17_sc2axi_M_AXI_ARLEN;
  wire [0:0]m17_sc2axi_M_AXI_ARLOCK;
  wire [2:0]m17_sc2axi_M_AXI_ARPROT;
  wire [3:0]m17_sc2axi_M_AXI_ARQOS;
  wire m17_sc2axi_M_AXI_ARREADY;
  wire [1023:0]m17_sc2axi_M_AXI_ARUSER;
  wire m17_sc2axi_M_AXI_ARVALID;
  wire [4:0]m17_sc2axi_M_AXI_AWADDR;
  wire [3:0]m17_sc2axi_M_AXI_AWCACHE;
  wire [2:0]m17_sc2axi_M_AXI_AWID;
  wire [7:0]m17_sc2axi_M_AXI_AWLEN;
  wire [0:0]m17_sc2axi_M_AXI_AWLOCK;
  wire [2:0]m17_sc2axi_M_AXI_AWPROT;
  wire [3:0]m17_sc2axi_M_AXI_AWQOS;
  wire m17_sc2axi_M_AXI_AWREADY;
  wire [1023:0]m17_sc2axi_M_AXI_AWUSER;
  wire m17_sc2axi_M_AXI_AWVALID;
  wire [2:0]m17_sc2axi_M_AXI_BID;
  wire m17_sc2axi_M_AXI_BREADY;
  wire [1:0]m17_sc2axi_M_AXI_BRESP;
  wire [1023:0]m17_sc2axi_M_AXI_BUSER;
  wire m17_sc2axi_M_AXI_BVALID;
  wire [31:0]m17_sc2axi_M_AXI_RDATA;
  wire [2:0]m17_sc2axi_M_AXI_RID;
  wire m17_sc2axi_M_AXI_RLAST;
  wire m17_sc2axi_M_AXI_RREADY;
  wire [1:0]m17_sc2axi_M_AXI_RRESP;
  wire [1023:0]m17_sc2axi_M_AXI_RUSER;
  wire m17_sc2axi_M_AXI_RVALID;
  wire [31:0]m17_sc2axi_M_AXI_WDATA;
  wire m17_sc2axi_M_AXI_WLAST;
  wire m17_sc2axi_M_AXI_WREADY;
  wire [3:0]m17_sc2axi_M_AXI_WSTRB;
  wire [1023:0]m17_sc2axi_M_AXI_WUSER;
  wire m17_sc2axi_M_AXI_WVALID;
  wire [4:0]m18_exit_pipeline_m_axi_ARADDR;
  wire [2:0]m18_exit_pipeline_m_axi_ARPROT;
  wire m18_exit_pipeline_m_axi_ARREADY;
  wire m18_exit_pipeline_m_axi_ARVALID;
  wire [4:0]m18_exit_pipeline_m_axi_AWADDR;
  wire [2:0]m18_exit_pipeline_m_axi_AWPROT;
  wire m18_exit_pipeline_m_axi_AWREADY;
  wire m18_exit_pipeline_m_axi_AWVALID;
  wire m18_exit_pipeline_m_axi_BREADY;
  wire [1:0]m18_exit_pipeline_m_axi_BRESP;
  wire m18_exit_pipeline_m_axi_BVALID;
  wire [31:0]m18_exit_pipeline_m_axi_RDATA;
  wire m18_exit_pipeline_m_axi_RREADY;
  wire [1:0]m18_exit_pipeline_m_axi_RRESP;
  wire m18_exit_pipeline_m_axi_RVALID;
  wire [31:0]m18_exit_pipeline_m_axi_WDATA;
  wire m18_exit_pipeline_m_axi_WREADY;
  wire [3:0]m18_exit_pipeline_m_axi_WSTRB;
  wire m18_exit_pipeline_m_axi_WVALID;
  wire [0:0]m18_nodes_M_SC_AR_INFO;
  wire [181:0]m18_nodes_M_SC_AR_PAYLD;
  wire m18_nodes_M_SC_AR_RECV;
  wire [0:0]m18_nodes_M_SC_AR_REQ;
  wire [0:0]m18_nodes_M_SC_AR_SEND;
  wire [0:0]m18_nodes_M_SC_AW_INFO;
  wire [181:0]m18_nodes_M_SC_AW_PAYLD;
  wire m18_nodes_M_SC_AW_RECV;
  wire [0:0]m18_nodes_M_SC_AW_REQ;
  wire [0:0]m18_nodes_M_SC_AW_SEND;
  wire [0:0]m18_nodes_M_SC_B_INFO;
  wire [8:0]m18_nodes_M_SC_B_PAYLD;
  wire [0:0]m18_nodes_M_SC_B_RECV;
  wire [0:0]m18_nodes_M_SC_B_REQ;
  wire [0:0]m18_nodes_M_SC_B_SEND;
  wire [0:0]m18_nodes_M_SC_R_INFO;
  wire [54:0]m18_nodes_M_SC_R_PAYLD;
  wire [0:0]m18_nodes_M_SC_R_RECV;
  wire [0:0]m18_nodes_M_SC_R_REQ;
  wire [0:0]m18_nodes_M_SC_R_SEND;
  wire [0:0]m18_nodes_M_SC_W_INFO;
  wire [68:0]m18_nodes_M_SC_W_PAYLD;
  wire m18_nodes_M_SC_W_RECV;
  wire [0:0]m18_nodes_M_SC_W_REQ;
  wire [0:0]m18_nodes_M_SC_W_SEND;
  wire [4:0]m18_sc2axi_M_AXI_ARADDR;
  wire [3:0]m18_sc2axi_M_AXI_ARCACHE;
  wire [2:0]m18_sc2axi_M_AXI_ARID;
  wire [7:0]m18_sc2axi_M_AXI_ARLEN;
  wire [0:0]m18_sc2axi_M_AXI_ARLOCK;
  wire [2:0]m18_sc2axi_M_AXI_ARPROT;
  wire [3:0]m18_sc2axi_M_AXI_ARQOS;
  wire m18_sc2axi_M_AXI_ARREADY;
  wire [1023:0]m18_sc2axi_M_AXI_ARUSER;
  wire m18_sc2axi_M_AXI_ARVALID;
  wire [4:0]m18_sc2axi_M_AXI_AWADDR;
  wire [3:0]m18_sc2axi_M_AXI_AWCACHE;
  wire [2:0]m18_sc2axi_M_AXI_AWID;
  wire [7:0]m18_sc2axi_M_AXI_AWLEN;
  wire [0:0]m18_sc2axi_M_AXI_AWLOCK;
  wire [2:0]m18_sc2axi_M_AXI_AWPROT;
  wire [3:0]m18_sc2axi_M_AXI_AWQOS;
  wire m18_sc2axi_M_AXI_AWREADY;
  wire [1023:0]m18_sc2axi_M_AXI_AWUSER;
  wire m18_sc2axi_M_AXI_AWVALID;
  wire [2:0]m18_sc2axi_M_AXI_BID;
  wire m18_sc2axi_M_AXI_BREADY;
  wire [1:0]m18_sc2axi_M_AXI_BRESP;
  wire [1023:0]m18_sc2axi_M_AXI_BUSER;
  wire m18_sc2axi_M_AXI_BVALID;
  wire [31:0]m18_sc2axi_M_AXI_RDATA;
  wire [2:0]m18_sc2axi_M_AXI_RID;
  wire m18_sc2axi_M_AXI_RLAST;
  wire m18_sc2axi_M_AXI_RREADY;
  wire [1:0]m18_sc2axi_M_AXI_RRESP;
  wire [1023:0]m18_sc2axi_M_AXI_RUSER;
  wire m18_sc2axi_M_AXI_RVALID;
  wire [31:0]m18_sc2axi_M_AXI_WDATA;
  wire m18_sc2axi_M_AXI_WLAST;
  wire m18_sc2axi_M_AXI_WREADY;
  wire [3:0]m18_sc2axi_M_AXI_WSTRB;
  wire [1023:0]m18_sc2axi_M_AXI_WUSER;
  wire m18_sc2axi_M_AXI_WVALID;
  wire [4:0]m19_exit_pipeline_m_axi_ARADDR;
  wire [2:0]m19_exit_pipeline_m_axi_ARPROT;
  wire m19_exit_pipeline_m_axi_ARREADY;
  wire m19_exit_pipeline_m_axi_ARVALID;
  wire [4:0]m19_exit_pipeline_m_axi_AWADDR;
  wire [2:0]m19_exit_pipeline_m_axi_AWPROT;
  wire m19_exit_pipeline_m_axi_AWREADY;
  wire m19_exit_pipeline_m_axi_AWVALID;
  wire m19_exit_pipeline_m_axi_BREADY;
  wire [1:0]m19_exit_pipeline_m_axi_BRESP;
  wire m19_exit_pipeline_m_axi_BVALID;
  wire [31:0]m19_exit_pipeline_m_axi_RDATA;
  wire m19_exit_pipeline_m_axi_RREADY;
  wire [1:0]m19_exit_pipeline_m_axi_RRESP;
  wire m19_exit_pipeline_m_axi_RVALID;
  wire [31:0]m19_exit_pipeline_m_axi_WDATA;
  wire m19_exit_pipeline_m_axi_WREADY;
  wire [3:0]m19_exit_pipeline_m_axi_WSTRB;
  wire m19_exit_pipeline_m_axi_WVALID;
  wire [0:0]m19_nodes_M_SC_AR_INFO;
  wire [181:0]m19_nodes_M_SC_AR_PAYLD;
  wire m19_nodes_M_SC_AR_RECV;
  wire [0:0]m19_nodes_M_SC_AR_REQ;
  wire [0:0]m19_nodes_M_SC_AR_SEND;
  wire [0:0]m19_nodes_M_SC_AW_INFO;
  wire [181:0]m19_nodes_M_SC_AW_PAYLD;
  wire m19_nodes_M_SC_AW_RECV;
  wire [0:0]m19_nodes_M_SC_AW_REQ;
  wire [0:0]m19_nodes_M_SC_AW_SEND;
  wire [0:0]m19_nodes_M_SC_B_INFO;
  wire [8:0]m19_nodes_M_SC_B_PAYLD;
  wire [0:0]m19_nodes_M_SC_B_RECV;
  wire [0:0]m19_nodes_M_SC_B_REQ;
  wire [0:0]m19_nodes_M_SC_B_SEND;
  wire [0:0]m19_nodes_M_SC_R_INFO;
  wire [54:0]m19_nodes_M_SC_R_PAYLD;
  wire [0:0]m19_nodes_M_SC_R_RECV;
  wire [0:0]m19_nodes_M_SC_R_REQ;
  wire [0:0]m19_nodes_M_SC_R_SEND;
  wire [0:0]m19_nodes_M_SC_W_INFO;
  wire [68:0]m19_nodes_M_SC_W_PAYLD;
  wire m19_nodes_M_SC_W_RECV;
  wire [0:0]m19_nodes_M_SC_W_REQ;
  wire [0:0]m19_nodes_M_SC_W_SEND;
  wire [4:0]m19_sc2axi_M_AXI_ARADDR;
  wire [3:0]m19_sc2axi_M_AXI_ARCACHE;
  wire [2:0]m19_sc2axi_M_AXI_ARID;
  wire [7:0]m19_sc2axi_M_AXI_ARLEN;
  wire [0:0]m19_sc2axi_M_AXI_ARLOCK;
  wire [2:0]m19_sc2axi_M_AXI_ARPROT;
  wire [3:0]m19_sc2axi_M_AXI_ARQOS;
  wire m19_sc2axi_M_AXI_ARREADY;
  wire [1023:0]m19_sc2axi_M_AXI_ARUSER;
  wire m19_sc2axi_M_AXI_ARVALID;
  wire [4:0]m19_sc2axi_M_AXI_AWADDR;
  wire [3:0]m19_sc2axi_M_AXI_AWCACHE;
  wire [2:0]m19_sc2axi_M_AXI_AWID;
  wire [7:0]m19_sc2axi_M_AXI_AWLEN;
  wire [0:0]m19_sc2axi_M_AXI_AWLOCK;
  wire [2:0]m19_sc2axi_M_AXI_AWPROT;
  wire [3:0]m19_sc2axi_M_AXI_AWQOS;
  wire m19_sc2axi_M_AXI_AWREADY;
  wire [1023:0]m19_sc2axi_M_AXI_AWUSER;
  wire m19_sc2axi_M_AXI_AWVALID;
  wire [2:0]m19_sc2axi_M_AXI_BID;
  wire m19_sc2axi_M_AXI_BREADY;
  wire [1:0]m19_sc2axi_M_AXI_BRESP;
  wire [1023:0]m19_sc2axi_M_AXI_BUSER;
  wire m19_sc2axi_M_AXI_BVALID;
  wire [31:0]m19_sc2axi_M_AXI_RDATA;
  wire [2:0]m19_sc2axi_M_AXI_RID;
  wire m19_sc2axi_M_AXI_RLAST;
  wire m19_sc2axi_M_AXI_RREADY;
  wire [1:0]m19_sc2axi_M_AXI_RRESP;
  wire [1023:0]m19_sc2axi_M_AXI_RUSER;
  wire m19_sc2axi_M_AXI_RVALID;
  wire [31:0]m19_sc2axi_M_AXI_WDATA;
  wire m19_sc2axi_M_AXI_WLAST;
  wire m19_sc2axi_M_AXI_WREADY;
  wire [3:0]m19_sc2axi_M_AXI_WSTRB;
  wire [1023:0]m19_sc2axi_M_AXI_WUSER;
  wire m19_sc2axi_M_AXI_WVALID;
  wire [4:0]m20_exit_pipeline_m_axi_ARADDR;
  wire [2:0]m20_exit_pipeline_m_axi_ARPROT;
  wire m20_exit_pipeline_m_axi_ARREADY;
  wire m20_exit_pipeline_m_axi_ARVALID;
  wire [4:0]m20_exit_pipeline_m_axi_AWADDR;
  wire [2:0]m20_exit_pipeline_m_axi_AWPROT;
  wire m20_exit_pipeline_m_axi_AWREADY;
  wire m20_exit_pipeline_m_axi_AWVALID;
  wire m20_exit_pipeline_m_axi_BREADY;
  wire [1:0]m20_exit_pipeline_m_axi_BRESP;
  wire m20_exit_pipeline_m_axi_BVALID;
  wire [31:0]m20_exit_pipeline_m_axi_RDATA;
  wire m20_exit_pipeline_m_axi_RREADY;
  wire [1:0]m20_exit_pipeline_m_axi_RRESP;
  wire m20_exit_pipeline_m_axi_RVALID;
  wire [31:0]m20_exit_pipeline_m_axi_WDATA;
  wire m20_exit_pipeline_m_axi_WREADY;
  wire [3:0]m20_exit_pipeline_m_axi_WSTRB;
  wire m20_exit_pipeline_m_axi_WVALID;
  wire [0:0]m20_nodes_M_SC_AR_INFO;
  wire [181:0]m20_nodes_M_SC_AR_PAYLD;
  wire m20_nodes_M_SC_AR_RECV;
  wire [0:0]m20_nodes_M_SC_AR_REQ;
  wire [0:0]m20_nodes_M_SC_AR_SEND;
  wire [0:0]m20_nodes_M_SC_AW_INFO;
  wire [181:0]m20_nodes_M_SC_AW_PAYLD;
  wire m20_nodes_M_SC_AW_RECV;
  wire [0:0]m20_nodes_M_SC_AW_REQ;
  wire [0:0]m20_nodes_M_SC_AW_SEND;
  wire [0:0]m20_nodes_M_SC_B_INFO;
  wire [8:0]m20_nodes_M_SC_B_PAYLD;
  wire [0:0]m20_nodes_M_SC_B_RECV;
  wire [0:0]m20_nodes_M_SC_B_REQ;
  wire [0:0]m20_nodes_M_SC_B_SEND;
  wire [0:0]m20_nodes_M_SC_R_INFO;
  wire [54:0]m20_nodes_M_SC_R_PAYLD;
  wire [0:0]m20_nodes_M_SC_R_RECV;
  wire [0:0]m20_nodes_M_SC_R_REQ;
  wire [0:0]m20_nodes_M_SC_R_SEND;
  wire [0:0]m20_nodes_M_SC_W_INFO;
  wire [68:0]m20_nodes_M_SC_W_PAYLD;
  wire m20_nodes_M_SC_W_RECV;
  wire [0:0]m20_nodes_M_SC_W_REQ;
  wire [0:0]m20_nodes_M_SC_W_SEND;
  wire [4:0]m20_sc2axi_M_AXI_ARADDR;
  wire [3:0]m20_sc2axi_M_AXI_ARCACHE;
  wire [2:0]m20_sc2axi_M_AXI_ARID;
  wire [7:0]m20_sc2axi_M_AXI_ARLEN;
  wire [0:0]m20_sc2axi_M_AXI_ARLOCK;
  wire [2:0]m20_sc2axi_M_AXI_ARPROT;
  wire [3:0]m20_sc2axi_M_AXI_ARQOS;
  wire m20_sc2axi_M_AXI_ARREADY;
  wire [1023:0]m20_sc2axi_M_AXI_ARUSER;
  wire m20_sc2axi_M_AXI_ARVALID;
  wire [4:0]m20_sc2axi_M_AXI_AWADDR;
  wire [3:0]m20_sc2axi_M_AXI_AWCACHE;
  wire [2:0]m20_sc2axi_M_AXI_AWID;
  wire [7:0]m20_sc2axi_M_AXI_AWLEN;
  wire [0:0]m20_sc2axi_M_AXI_AWLOCK;
  wire [2:0]m20_sc2axi_M_AXI_AWPROT;
  wire [3:0]m20_sc2axi_M_AXI_AWQOS;
  wire m20_sc2axi_M_AXI_AWREADY;
  wire [1023:0]m20_sc2axi_M_AXI_AWUSER;
  wire m20_sc2axi_M_AXI_AWVALID;
  wire [2:0]m20_sc2axi_M_AXI_BID;
  wire m20_sc2axi_M_AXI_BREADY;
  wire [1:0]m20_sc2axi_M_AXI_BRESP;
  wire [1023:0]m20_sc2axi_M_AXI_BUSER;
  wire m20_sc2axi_M_AXI_BVALID;
  wire [31:0]m20_sc2axi_M_AXI_RDATA;
  wire [2:0]m20_sc2axi_M_AXI_RID;
  wire m20_sc2axi_M_AXI_RLAST;
  wire m20_sc2axi_M_AXI_RREADY;
  wire [1:0]m20_sc2axi_M_AXI_RRESP;
  wire [1023:0]m20_sc2axi_M_AXI_RUSER;
  wire m20_sc2axi_M_AXI_RVALID;
  wire [31:0]m20_sc2axi_M_AXI_WDATA;
  wire m20_sc2axi_M_AXI_WLAST;
  wire m20_sc2axi_M_AXI_WREADY;
  wire [3:0]m20_sc2axi_M_AXI_WSTRB;
  wire [1023:0]m20_sc2axi_M_AXI_WUSER;
  wire m20_sc2axi_M_AXI_WVALID;
  wire [4:0]m21_exit_pipeline_m_axi_ARADDR;
  wire [2:0]m21_exit_pipeline_m_axi_ARPROT;
  wire m21_exit_pipeline_m_axi_ARREADY;
  wire m21_exit_pipeline_m_axi_ARVALID;
  wire [4:0]m21_exit_pipeline_m_axi_AWADDR;
  wire [2:0]m21_exit_pipeline_m_axi_AWPROT;
  wire m21_exit_pipeline_m_axi_AWREADY;
  wire m21_exit_pipeline_m_axi_AWVALID;
  wire m21_exit_pipeline_m_axi_BREADY;
  wire [1:0]m21_exit_pipeline_m_axi_BRESP;
  wire m21_exit_pipeline_m_axi_BVALID;
  wire [31:0]m21_exit_pipeline_m_axi_RDATA;
  wire m21_exit_pipeline_m_axi_RREADY;
  wire [1:0]m21_exit_pipeline_m_axi_RRESP;
  wire m21_exit_pipeline_m_axi_RVALID;
  wire [31:0]m21_exit_pipeline_m_axi_WDATA;
  wire m21_exit_pipeline_m_axi_WREADY;
  wire [3:0]m21_exit_pipeline_m_axi_WSTRB;
  wire m21_exit_pipeline_m_axi_WVALID;
  wire [0:0]m21_nodes_M_SC_AR_INFO;
  wire [181:0]m21_nodes_M_SC_AR_PAYLD;
  wire m21_nodes_M_SC_AR_RECV;
  wire [0:0]m21_nodes_M_SC_AR_REQ;
  wire [0:0]m21_nodes_M_SC_AR_SEND;
  wire [0:0]m21_nodes_M_SC_AW_INFO;
  wire [181:0]m21_nodes_M_SC_AW_PAYLD;
  wire m21_nodes_M_SC_AW_RECV;
  wire [0:0]m21_nodes_M_SC_AW_REQ;
  wire [0:0]m21_nodes_M_SC_AW_SEND;
  wire [0:0]m21_nodes_M_SC_B_INFO;
  wire [8:0]m21_nodes_M_SC_B_PAYLD;
  wire [0:0]m21_nodes_M_SC_B_RECV;
  wire [0:0]m21_nodes_M_SC_B_REQ;
  wire [0:0]m21_nodes_M_SC_B_SEND;
  wire [0:0]m21_nodes_M_SC_R_INFO;
  wire [54:0]m21_nodes_M_SC_R_PAYLD;
  wire [0:0]m21_nodes_M_SC_R_RECV;
  wire [0:0]m21_nodes_M_SC_R_REQ;
  wire [0:0]m21_nodes_M_SC_R_SEND;
  wire [0:0]m21_nodes_M_SC_W_INFO;
  wire [68:0]m21_nodes_M_SC_W_PAYLD;
  wire m21_nodes_M_SC_W_RECV;
  wire [0:0]m21_nodes_M_SC_W_REQ;
  wire [0:0]m21_nodes_M_SC_W_SEND;
  wire [4:0]m21_sc2axi_M_AXI_ARADDR;
  wire [3:0]m21_sc2axi_M_AXI_ARCACHE;
  wire [2:0]m21_sc2axi_M_AXI_ARID;
  wire [7:0]m21_sc2axi_M_AXI_ARLEN;
  wire [0:0]m21_sc2axi_M_AXI_ARLOCK;
  wire [2:0]m21_sc2axi_M_AXI_ARPROT;
  wire [3:0]m21_sc2axi_M_AXI_ARQOS;
  wire m21_sc2axi_M_AXI_ARREADY;
  wire [1023:0]m21_sc2axi_M_AXI_ARUSER;
  wire m21_sc2axi_M_AXI_ARVALID;
  wire [4:0]m21_sc2axi_M_AXI_AWADDR;
  wire [3:0]m21_sc2axi_M_AXI_AWCACHE;
  wire [2:0]m21_sc2axi_M_AXI_AWID;
  wire [7:0]m21_sc2axi_M_AXI_AWLEN;
  wire [0:0]m21_sc2axi_M_AXI_AWLOCK;
  wire [2:0]m21_sc2axi_M_AXI_AWPROT;
  wire [3:0]m21_sc2axi_M_AXI_AWQOS;
  wire m21_sc2axi_M_AXI_AWREADY;
  wire [1023:0]m21_sc2axi_M_AXI_AWUSER;
  wire m21_sc2axi_M_AXI_AWVALID;
  wire [2:0]m21_sc2axi_M_AXI_BID;
  wire m21_sc2axi_M_AXI_BREADY;
  wire [1:0]m21_sc2axi_M_AXI_BRESP;
  wire [1023:0]m21_sc2axi_M_AXI_BUSER;
  wire m21_sc2axi_M_AXI_BVALID;
  wire [31:0]m21_sc2axi_M_AXI_RDATA;
  wire [2:0]m21_sc2axi_M_AXI_RID;
  wire m21_sc2axi_M_AXI_RLAST;
  wire m21_sc2axi_M_AXI_RREADY;
  wire [1:0]m21_sc2axi_M_AXI_RRESP;
  wire [1023:0]m21_sc2axi_M_AXI_RUSER;
  wire m21_sc2axi_M_AXI_RVALID;
  wire [31:0]m21_sc2axi_M_AXI_WDATA;
  wire m21_sc2axi_M_AXI_WLAST;
  wire m21_sc2axi_M_AXI_WREADY;
  wire [3:0]m21_sc2axi_M_AXI_WSTRB;
  wire [1023:0]m21_sc2axi_M_AXI_WUSER;
  wire m21_sc2axi_M_AXI_WVALID;
  wire [4:0]m22_exit_pipeline_m_axi_ARADDR;
  wire [2:0]m22_exit_pipeline_m_axi_ARPROT;
  wire m22_exit_pipeline_m_axi_ARREADY;
  wire m22_exit_pipeline_m_axi_ARVALID;
  wire [4:0]m22_exit_pipeline_m_axi_AWADDR;
  wire [2:0]m22_exit_pipeline_m_axi_AWPROT;
  wire m22_exit_pipeline_m_axi_AWREADY;
  wire m22_exit_pipeline_m_axi_AWVALID;
  wire m22_exit_pipeline_m_axi_BREADY;
  wire [1:0]m22_exit_pipeline_m_axi_BRESP;
  wire m22_exit_pipeline_m_axi_BVALID;
  wire [31:0]m22_exit_pipeline_m_axi_RDATA;
  wire m22_exit_pipeline_m_axi_RREADY;
  wire [1:0]m22_exit_pipeline_m_axi_RRESP;
  wire m22_exit_pipeline_m_axi_RVALID;
  wire [31:0]m22_exit_pipeline_m_axi_WDATA;
  wire m22_exit_pipeline_m_axi_WREADY;
  wire [3:0]m22_exit_pipeline_m_axi_WSTRB;
  wire m22_exit_pipeline_m_axi_WVALID;
  wire [0:0]m22_nodes_M_SC_AR_INFO;
  wire [181:0]m22_nodes_M_SC_AR_PAYLD;
  wire m22_nodes_M_SC_AR_RECV;
  wire [0:0]m22_nodes_M_SC_AR_REQ;
  wire [0:0]m22_nodes_M_SC_AR_SEND;
  wire [0:0]m22_nodes_M_SC_AW_INFO;
  wire [181:0]m22_nodes_M_SC_AW_PAYLD;
  wire m22_nodes_M_SC_AW_RECV;
  wire [0:0]m22_nodes_M_SC_AW_REQ;
  wire [0:0]m22_nodes_M_SC_AW_SEND;
  wire [0:0]m22_nodes_M_SC_B_INFO;
  wire [8:0]m22_nodes_M_SC_B_PAYLD;
  wire [0:0]m22_nodes_M_SC_B_RECV;
  wire [0:0]m22_nodes_M_SC_B_REQ;
  wire [0:0]m22_nodes_M_SC_B_SEND;
  wire [0:0]m22_nodes_M_SC_R_INFO;
  wire [54:0]m22_nodes_M_SC_R_PAYLD;
  wire [0:0]m22_nodes_M_SC_R_RECV;
  wire [0:0]m22_nodes_M_SC_R_REQ;
  wire [0:0]m22_nodes_M_SC_R_SEND;
  wire [0:0]m22_nodes_M_SC_W_INFO;
  wire [68:0]m22_nodes_M_SC_W_PAYLD;
  wire m22_nodes_M_SC_W_RECV;
  wire [0:0]m22_nodes_M_SC_W_REQ;
  wire [0:0]m22_nodes_M_SC_W_SEND;
  wire [4:0]m22_sc2axi_M_AXI_ARADDR;
  wire [3:0]m22_sc2axi_M_AXI_ARCACHE;
  wire [2:0]m22_sc2axi_M_AXI_ARID;
  wire [7:0]m22_sc2axi_M_AXI_ARLEN;
  wire [0:0]m22_sc2axi_M_AXI_ARLOCK;
  wire [2:0]m22_sc2axi_M_AXI_ARPROT;
  wire [3:0]m22_sc2axi_M_AXI_ARQOS;
  wire m22_sc2axi_M_AXI_ARREADY;
  wire [1023:0]m22_sc2axi_M_AXI_ARUSER;
  wire m22_sc2axi_M_AXI_ARVALID;
  wire [4:0]m22_sc2axi_M_AXI_AWADDR;
  wire [3:0]m22_sc2axi_M_AXI_AWCACHE;
  wire [2:0]m22_sc2axi_M_AXI_AWID;
  wire [7:0]m22_sc2axi_M_AXI_AWLEN;
  wire [0:0]m22_sc2axi_M_AXI_AWLOCK;
  wire [2:0]m22_sc2axi_M_AXI_AWPROT;
  wire [3:0]m22_sc2axi_M_AXI_AWQOS;
  wire m22_sc2axi_M_AXI_AWREADY;
  wire [1023:0]m22_sc2axi_M_AXI_AWUSER;
  wire m22_sc2axi_M_AXI_AWVALID;
  wire [2:0]m22_sc2axi_M_AXI_BID;
  wire m22_sc2axi_M_AXI_BREADY;
  wire [1:0]m22_sc2axi_M_AXI_BRESP;
  wire [1023:0]m22_sc2axi_M_AXI_BUSER;
  wire m22_sc2axi_M_AXI_BVALID;
  wire [31:0]m22_sc2axi_M_AXI_RDATA;
  wire [2:0]m22_sc2axi_M_AXI_RID;
  wire m22_sc2axi_M_AXI_RLAST;
  wire m22_sc2axi_M_AXI_RREADY;
  wire [1:0]m22_sc2axi_M_AXI_RRESP;
  wire [1023:0]m22_sc2axi_M_AXI_RUSER;
  wire m22_sc2axi_M_AXI_RVALID;
  wire [31:0]m22_sc2axi_M_AXI_WDATA;
  wire m22_sc2axi_M_AXI_WLAST;
  wire m22_sc2axi_M_AXI_WREADY;
  wire [3:0]m22_sc2axi_M_AXI_WSTRB;
  wire [1023:0]m22_sc2axi_M_AXI_WUSER;
  wire m22_sc2axi_M_AXI_WVALID;
  wire [4:0]m23_exit_pipeline_m_axi_ARADDR;
  wire [2:0]m23_exit_pipeline_m_axi_ARPROT;
  wire m23_exit_pipeline_m_axi_ARREADY;
  wire m23_exit_pipeline_m_axi_ARVALID;
  wire [4:0]m23_exit_pipeline_m_axi_AWADDR;
  wire [2:0]m23_exit_pipeline_m_axi_AWPROT;
  wire m23_exit_pipeline_m_axi_AWREADY;
  wire m23_exit_pipeline_m_axi_AWVALID;
  wire m23_exit_pipeline_m_axi_BREADY;
  wire [1:0]m23_exit_pipeline_m_axi_BRESP;
  wire m23_exit_pipeline_m_axi_BVALID;
  wire [31:0]m23_exit_pipeline_m_axi_RDATA;
  wire m23_exit_pipeline_m_axi_RREADY;
  wire [1:0]m23_exit_pipeline_m_axi_RRESP;
  wire m23_exit_pipeline_m_axi_RVALID;
  wire [31:0]m23_exit_pipeline_m_axi_WDATA;
  wire m23_exit_pipeline_m_axi_WREADY;
  wire [3:0]m23_exit_pipeline_m_axi_WSTRB;
  wire m23_exit_pipeline_m_axi_WVALID;
  wire [0:0]m23_nodes_M_SC_AR_INFO;
  wire [181:0]m23_nodes_M_SC_AR_PAYLD;
  wire m23_nodes_M_SC_AR_RECV;
  wire [0:0]m23_nodes_M_SC_AR_REQ;
  wire [0:0]m23_nodes_M_SC_AR_SEND;
  wire [0:0]m23_nodes_M_SC_AW_INFO;
  wire [181:0]m23_nodes_M_SC_AW_PAYLD;
  wire m23_nodes_M_SC_AW_RECV;
  wire [0:0]m23_nodes_M_SC_AW_REQ;
  wire [0:0]m23_nodes_M_SC_AW_SEND;
  wire [0:0]m23_nodes_M_SC_B_INFO;
  wire [8:0]m23_nodes_M_SC_B_PAYLD;
  wire [0:0]m23_nodes_M_SC_B_RECV;
  wire [0:0]m23_nodes_M_SC_B_REQ;
  wire [0:0]m23_nodes_M_SC_B_SEND;
  wire [0:0]m23_nodes_M_SC_R_INFO;
  wire [54:0]m23_nodes_M_SC_R_PAYLD;
  wire [0:0]m23_nodes_M_SC_R_RECV;
  wire [0:0]m23_nodes_M_SC_R_REQ;
  wire [0:0]m23_nodes_M_SC_R_SEND;
  wire [0:0]m23_nodes_M_SC_W_INFO;
  wire [68:0]m23_nodes_M_SC_W_PAYLD;
  wire m23_nodes_M_SC_W_RECV;
  wire [0:0]m23_nodes_M_SC_W_REQ;
  wire [0:0]m23_nodes_M_SC_W_SEND;
  wire [4:0]m23_sc2axi_M_AXI_ARADDR;
  wire [3:0]m23_sc2axi_M_AXI_ARCACHE;
  wire [2:0]m23_sc2axi_M_AXI_ARID;
  wire [7:0]m23_sc2axi_M_AXI_ARLEN;
  wire [0:0]m23_sc2axi_M_AXI_ARLOCK;
  wire [2:0]m23_sc2axi_M_AXI_ARPROT;
  wire [3:0]m23_sc2axi_M_AXI_ARQOS;
  wire m23_sc2axi_M_AXI_ARREADY;
  wire [1023:0]m23_sc2axi_M_AXI_ARUSER;
  wire m23_sc2axi_M_AXI_ARVALID;
  wire [4:0]m23_sc2axi_M_AXI_AWADDR;
  wire [3:0]m23_sc2axi_M_AXI_AWCACHE;
  wire [2:0]m23_sc2axi_M_AXI_AWID;
  wire [7:0]m23_sc2axi_M_AXI_AWLEN;
  wire [0:0]m23_sc2axi_M_AXI_AWLOCK;
  wire [2:0]m23_sc2axi_M_AXI_AWPROT;
  wire [3:0]m23_sc2axi_M_AXI_AWQOS;
  wire m23_sc2axi_M_AXI_AWREADY;
  wire [1023:0]m23_sc2axi_M_AXI_AWUSER;
  wire m23_sc2axi_M_AXI_AWVALID;
  wire [2:0]m23_sc2axi_M_AXI_BID;
  wire m23_sc2axi_M_AXI_BREADY;
  wire [1:0]m23_sc2axi_M_AXI_BRESP;
  wire [1023:0]m23_sc2axi_M_AXI_BUSER;
  wire m23_sc2axi_M_AXI_BVALID;
  wire [31:0]m23_sc2axi_M_AXI_RDATA;
  wire [2:0]m23_sc2axi_M_AXI_RID;
  wire m23_sc2axi_M_AXI_RLAST;
  wire m23_sc2axi_M_AXI_RREADY;
  wire [1:0]m23_sc2axi_M_AXI_RRESP;
  wire [1023:0]m23_sc2axi_M_AXI_RUSER;
  wire m23_sc2axi_M_AXI_RVALID;
  wire [31:0]m23_sc2axi_M_AXI_WDATA;
  wire m23_sc2axi_M_AXI_WLAST;
  wire m23_sc2axi_M_AXI_WREADY;
  wire [3:0]m23_sc2axi_M_AXI_WSTRB;
  wire [1023:0]m23_sc2axi_M_AXI_WUSER;
  wire m23_sc2axi_M_AXI_WVALID;
  wire [9:0]m24_exit_pipeline_m_axi_ARADDR;
  wire [2:0]m24_exit_pipeline_m_axi_ARPROT;
  wire m24_exit_pipeline_m_axi_ARREADY;
  wire m24_exit_pipeline_m_axi_ARVALID;
  wire [9:0]m24_exit_pipeline_m_axi_AWADDR;
  wire [2:0]m24_exit_pipeline_m_axi_AWPROT;
  wire m24_exit_pipeline_m_axi_AWREADY;
  wire m24_exit_pipeline_m_axi_AWVALID;
  wire m24_exit_pipeline_m_axi_BREADY;
  wire [1:0]m24_exit_pipeline_m_axi_BRESP;
  wire m24_exit_pipeline_m_axi_BVALID;
  wire [31:0]m24_exit_pipeline_m_axi_RDATA;
  wire m24_exit_pipeline_m_axi_RREADY;
  wire [1:0]m24_exit_pipeline_m_axi_RRESP;
  wire m24_exit_pipeline_m_axi_RVALID;
  wire [31:0]m24_exit_pipeline_m_axi_WDATA;
  wire m24_exit_pipeline_m_axi_WREADY;
  wire [3:0]m24_exit_pipeline_m_axi_WSTRB;
  wire m24_exit_pipeline_m_axi_WVALID;
  wire [0:0]m24_nodes_M_SC_AR_INFO;
  wire [181:0]m24_nodes_M_SC_AR_PAYLD;
  wire m24_nodes_M_SC_AR_RECV;
  wire [0:0]m24_nodes_M_SC_AR_REQ;
  wire [0:0]m24_nodes_M_SC_AR_SEND;
  wire [0:0]m24_nodes_M_SC_AW_INFO;
  wire [181:0]m24_nodes_M_SC_AW_PAYLD;
  wire m24_nodes_M_SC_AW_RECV;
  wire [0:0]m24_nodes_M_SC_AW_REQ;
  wire [0:0]m24_nodes_M_SC_AW_SEND;
  wire [0:0]m24_nodes_M_SC_B_INFO;
  wire [8:0]m24_nodes_M_SC_B_PAYLD;
  wire [0:0]m24_nodes_M_SC_B_RECV;
  wire [0:0]m24_nodes_M_SC_B_REQ;
  wire [0:0]m24_nodes_M_SC_B_SEND;
  wire [0:0]m24_nodes_M_SC_R_INFO;
  wire [54:0]m24_nodes_M_SC_R_PAYLD;
  wire [0:0]m24_nodes_M_SC_R_RECV;
  wire [0:0]m24_nodes_M_SC_R_REQ;
  wire [0:0]m24_nodes_M_SC_R_SEND;
  wire [0:0]m24_nodes_M_SC_W_INFO;
  wire [68:0]m24_nodes_M_SC_W_PAYLD;
  wire m24_nodes_M_SC_W_RECV;
  wire [0:0]m24_nodes_M_SC_W_REQ;
  wire [0:0]m24_nodes_M_SC_W_SEND;
  wire [9:0]m24_sc2axi_M_AXI_ARADDR;
  wire [3:0]m24_sc2axi_M_AXI_ARCACHE;
  wire [2:0]m24_sc2axi_M_AXI_ARID;
  wire [7:0]m24_sc2axi_M_AXI_ARLEN;
  wire [0:0]m24_sc2axi_M_AXI_ARLOCK;
  wire [2:0]m24_sc2axi_M_AXI_ARPROT;
  wire [3:0]m24_sc2axi_M_AXI_ARQOS;
  wire m24_sc2axi_M_AXI_ARREADY;
  wire [1023:0]m24_sc2axi_M_AXI_ARUSER;
  wire m24_sc2axi_M_AXI_ARVALID;
  wire [9:0]m24_sc2axi_M_AXI_AWADDR;
  wire [3:0]m24_sc2axi_M_AXI_AWCACHE;
  wire [2:0]m24_sc2axi_M_AXI_AWID;
  wire [7:0]m24_sc2axi_M_AXI_AWLEN;
  wire [0:0]m24_sc2axi_M_AXI_AWLOCK;
  wire [2:0]m24_sc2axi_M_AXI_AWPROT;
  wire [3:0]m24_sc2axi_M_AXI_AWQOS;
  wire m24_sc2axi_M_AXI_AWREADY;
  wire [1023:0]m24_sc2axi_M_AXI_AWUSER;
  wire m24_sc2axi_M_AXI_AWVALID;
  wire [2:0]m24_sc2axi_M_AXI_BID;
  wire m24_sc2axi_M_AXI_BREADY;
  wire [1:0]m24_sc2axi_M_AXI_BRESP;
  wire [1023:0]m24_sc2axi_M_AXI_BUSER;
  wire m24_sc2axi_M_AXI_BVALID;
  wire [31:0]m24_sc2axi_M_AXI_RDATA;
  wire [2:0]m24_sc2axi_M_AXI_RID;
  wire m24_sc2axi_M_AXI_RLAST;
  wire m24_sc2axi_M_AXI_RREADY;
  wire [1:0]m24_sc2axi_M_AXI_RRESP;
  wire [1023:0]m24_sc2axi_M_AXI_RUSER;
  wire m24_sc2axi_M_AXI_RVALID;
  wire [31:0]m24_sc2axi_M_AXI_WDATA;
  wire m24_sc2axi_M_AXI_WLAST;
  wire m24_sc2axi_M_AXI_WREADY;
  wire [3:0]m24_sc2axi_M_AXI_WSTRB;
  wire [1023:0]m24_sc2axi_M_AXI_WUSER;
  wire m24_sc2axi_M_AXI_WVALID;
  wire [9:0]m25_exit_pipeline_m_axi_ARADDR;
  wire [2:0]m25_exit_pipeline_m_axi_ARPROT;
  wire m25_exit_pipeline_m_axi_ARREADY;
  wire m25_exit_pipeline_m_axi_ARVALID;
  wire [9:0]m25_exit_pipeline_m_axi_AWADDR;
  wire [2:0]m25_exit_pipeline_m_axi_AWPROT;
  wire m25_exit_pipeline_m_axi_AWREADY;
  wire m25_exit_pipeline_m_axi_AWVALID;
  wire m25_exit_pipeline_m_axi_BREADY;
  wire [1:0]m25_exit_pipeline_m_axi_BRESP;
  wire m25_exit_pipeline_m_axi_BVALID;
  wire [31:0]m25_exit_pipeline_m_axi_RDATA;
  wire m25_exit_pipeline_m_axi_RREADY;
  wire [1:0]m25_exit_pipeline_m_axi_RRESP;
  wire m25_exit_pipeline_m_axi_RVALID;
  wire [31:0]m25_exit_pipeline_m_axi_WDATA;
  wire m25_exit_pipeline_m_axi_WREADY;
  wire [3:0]m25_exit_pipeline_m_axi_WSTRB;
  wire m25_exit_pipeline_m_axi_WVALID;
  wire [0:0]m25_nodes_M_SC_AR_INFO;
  wire [181:0]m25_nodes_M_SC_AR_PAYLD;
  wire m25_nodes_M_SC_AR_RECV;
  wire [0:0]m25_nodes_M_SC_AR_REQ;
  wire [0:0]m25_nodes_M_SC_AR_SEND;
  wire [0:0]m25_nodes_M_SC_AW_INFO;
  wire [181:0]m25_nodes_M_SC_AW_PAYLD;
  wire m25_nodes_M_SC_AW_RECV;
  wire [0:0]m25_nodes_M_SC_AW_REQ;
  wire [0:0]m25_nodes_M_SC_AW_SEND;
  wire [0:0]m25_nodes_M_SC_B_INFO;
  wire [8:0]m25_nodes_M_SC_B_PAYLD;
  wire [0:0]m25_nodes_M_SC_B_RECV;
  wire [0:0]m25_nodes_M_SC_B_REQ;
  wire [0:0]m25_nodes_M_SC_B_SEND;
  wire [0:0]m25_nodes_M_SC_R_INFO;
  wire [54:0]m25_nodes_M_SC_R_PAYLD;
  wire [0:0]m25_nodes_M_SC_R_RECV;
  wire [0:0]m25_nodes_M_SC_R_REQ;
  wire [0:0]m25_nodes_M_SC_R_SEND;
  wire [0:0]m25_nodes_M_SC_W_INFO;
  wire [68:0]m25_nodes_M_SC_W_PAYLD;
  wire m25_nodes_M_SC_W_RECV;
  wire [0:0]m25_nodes_M_SC_W_REQ;
  wire [0:0]m25_nodes_M_SC_W_SEND;
  wire [9:0]m25_sc2axi_M_AXI_ARADDR;
  wire [3:0]m25_sc2axi_M_AXI_ARCACHE;
  wire [2:0]m25_sc2axi_M_AXI_ARID;
  wire [7:0]m25_sc2axi_M_AXI_ARLEN;
  wire [0:0]m25_sc2axi_M_AXI_ARLOCK;
  wire [2:0]m25_sc2axi_M_AXI_ARPROT;
  wire [3:0]m25_sc2axi_M_AXI_ARQOS;
  wire m25_sc2axi_M_AXI_ARREADY;
  wire [1023:0]m25_sc2axi_M_AXI_ARUSER;
  wire m25_sc2axi_M_AXI_ARVALID;
  wire [9:0]m25_sc2axi_M_AXI_AWADDR;
  wire [3:0]m25_sc2axi_M_AXI_AWCACHE;
  wire [2:0]m25_sc2axi_M_AXI_AWID;
  wire [7:0]m25_sc2axi_M_AXI_AWLEN;
  wire [0:0]m25_sc2axi_M_AXI_AWLOCK;
  wire [2:0]m25_sc2axi_M_AXI_AWPROT;
  wire [3:0]m25_sc2axi_M_AXI_AWQOS;
  wire m25_sc2axi_M_AXI_AWREADY;
  wire [1023:0]m25_sc2axi_M_AXI_AWUSER;
  wire m25_sc2axi_M_AXI_AWVALID;
  wire [2:0]m25_sc2axi_M_AXI_BID;
  wire m25_sc2axi_M_AXI_BREADY;
  wire [1:0]m25_sc2axi_M_AXI_BRESP;
  wire [1023:0]m25_sc2axi_M_AXI_BUSER;
  wire m25_sc2axi_M_AXI_BVALID;
  wire [31:0]m25_sc2axi_M_AXI_RDATA;
  wire [2:0]m25_sc2axi_M_AXI_RID;
  wire m25_sc2axi_M_AXI_RLAST;
  wire m25_sc2axi_M_AXI_RREADY;
  wire [1:0]m25_sc2axi_M_AXI_RRESP;
  wire [1023:0]m25_sc2axi_M_AXI_RUSER;
  wire m25_sc2axi_M_AXI_RVALID;
  wire [31:0]m25_sc2axi_M_AXI_WDATA;
  wire m25_sc2axi_M_AXI_WLAST;
  wire m25_sc2axi_M_AXI_WREADY;
  wire [3:0]m25_sc2axi_M_AXI_WSTRB;
  wire [1023:0]m25_sc2axi_M_AXI_WUSER;
  wire m25_sc2axi_M_AXI_WVALID;
  wire [9:0]m26_exit_pipeline_m_axi_ARADDR;
  wire [2:0]m26_exit_pipeline_m_axi_ARPROT;
  wire m26_exit_pipeline_m_axi_ARREADY;
  wire m26_exit_pipeline_m_axi_ARVALID;
  wire [9:0]m26_exit_pipeline_m_axi_AWADDR;
  wire [2:0]m26_exit_pipeline_m_axi_AWPROT;
  wire m26_exit_pipeline_m_axi_AWREADY;
  wire m26_exit_pipeline_m_axi_AWVALID;
  wire m26_exit_pipeline_m_axi_BREADY;
  wire [1:0]m26_exit_pipeline_m_axi_BRESP;
  wire m26_exit_pipeline_m_axi_BVALID;
  wire [31:0]m26_exit_pipeline_m_axi_RDATA;
  wire m26_exit_pipeline_m_axi_RREADY;
  wire [1:0]m26_exit_pipeline_m_axi_RRESP;
  wire m26_exit_pipeline_m_axi_RVALID;
  wire [31:0]m26_exit_pipeline_m_axi_WDATA;
  wire m26_exit_pipeline_m_axi_WREADY;
  wire [3:0]m26_exit_pipeline_m_axi_WSTRB;
  wire m26_exit_pipeline_m_axi_WVALID;
  wire [0:0]m26_nodes_M_SC_AR_INFO;
  wire [181:0]m26_nodes_M_SC_AR_PAYLD;
  wire m26_nodes_M_SC_AR_RECV;
  wire [0:0]m26_nodes_M_SC_AR_REQ;
  wire [0:0]m26_nodes_M_SC_AR_SEND;
  wire [0:0]m26_nodes_M_SC_AW_INFO;
  wire [181:0]m26_nodes_M_SC_AW_PAYLD;
  wire m26_nodes_M_SC_AW_RECV;
  wire [0:0]m26_nodes_M_SC_AW_REQ;
  wire [0:0]m26_nodes_M_SC_AW_SEND;
  wire [0:0]m26_nodes_M_SC_B_INFO;
  wire [8:0]m26_nodes_M_SC_B_PAYLD;
  wire [0:0]m26_nodes_M_SC_B_RECV;
  wire [0:0]m26_nodes_M_SC_B_REQ;
  wire [0:0]m26_nodes_M_SC_B_SEND;
  wire [0:0]m26_nodes_M_SC_R_INFO;
  wire [54:0]m26_nodes_M_SC_R_PAYLD;
  wire [0:0]m26_nodes_M_SC_R_RECV;
  wire [0:0]m26_nodes_M_SC_R_REQ;
  wire [0:0]m26_nodes_M_SC_R_SEND;
  wire [0:0]m26_nodes_M_SC_W_INFO;
  wire [68:0]m26_nodes_M_SC_W_PAYLD;
  wire m26_nodes_M_SC_W_RECV;
  wire [0:0]m26_nodes_M_SC_W_REQ;
  wire [0:0]m26_nodes_M_SC_W_SEND;
  wire [9:0]m26_sc2axi_M_AXI_ARADDR;
  wire [3:0]m26_sc2axi_M_AXI_ARCACHE;
  wire [2:0]m26_sc2axi_M_AXI_ARID;
  wire [7:0]m26_sc2axi_M_AXI_ARLEN;
  wire [0:0]m26_sc2axi_M_AXI_ARLOCK;
  wire [2:0]m26_sc2axi_M_AXI_ARPROT;
  wire [3:0]m26_sc2axi_M_AXI_ARQOS;
  wire m26_sc2axi_M_AXI_ARREADY;
  wire [1023:0]m26_sc2axi_M_AXI_ARUSER;
  wire m26_sc2axi_M_AXI_ARVALID;
  wire [9:0]m26_sc2axi_M_AXI_AWADDR;
  wire [3:0]m26_sc2axi_M_AXI_AWCACHE;
  wire [2:0]m26_sc2axi_M_AXI_AWID;
  wire [7:0]m26_sc2axi_M_AXI_AWLEN;
  wire [0:0]m26_sc2axi_M_AXI_AWLOCK;
  wire [2:0]m26_sc2axi_M_AXI_AWPROT;
  wire [3:0]m26_sc2axi_M_AXI_AWQOS;
  wire m26_sc2axi_M_AXI_AWREADY;
  wire [1023:0]m26_sc2axi_M_AXI_AWUSER;
  wire m26_sc2axi_M_AXI_AWVALID;
  wire [2:0]m26_sc2axi_M_AXI_BID;
  wire m26_sc2axi_M_AXI_BREADY;
  wire [1:0]m26_sc2axi_M_AXI_BRESP;
  wire [1023:0]m26_sc2axi_M_AXI_BUSER;
  wire m26_sc2axi_M_AXI_BVALID;
  wire [31:0]m26_sc2axi_M_AXI_RDATA;
  wire [2:0]m26_sc2axi_M_AXI_RID;
  wire m26_sc2axi_M_AXI_RLAST;
  wire m26_sc2axi_M_AXI_RREADY;
  wire [1:0]m26_sc2axi_M_AXI_RRESP;
  wire [1023:0]m26_sc2axi_M_AXI_RUSER;
  wire m26_sc2axi_M_AXI_RVALID;
  wire [31:0]m26_sc2axi_M_AXI_WDATA;
  wire m26_sc2axi_M_AXI_WLAST;
  wire m26_sc2axi_M_AXI_WREADY;
  wire [3:0]m26_sc2axi_M_AXI_WSTRB;
  wire [1023:0]m26_sc2axi_M_AXI_WUSER;
  wire m26_sc2axi_M_AXI_WVALID;
  wire [9:0]m27_exit_pipeline_m_axi_ARADDR;
  wire [2:0]m27_exit_pipeline_m_axi_ARPROT;
  wire m27_exit_pipeline_m_axi_ARREADY;
  wire m27_exit_pipeline_m_axi_ARVALID;
  wire [9:0]m27_exit_pipeline_m_axi_AWADDR;
  wire [2:0]m27_exit_pipeline_m_axi_AWPROT;
  wire m27_exit_pipeline_m_axi_AWREADY;
  wire m27_exit_pipeline_m_axi_AWVALID;
  wire m27_exit_pipeline_m_axi_BREADY;
  wire [1:0]m27_exit_pipeline_m_axi_BRESP;
  wire m27_exit_pipeline_m_axi_BVALID;
  wire [31:0]m27_exit_pipeline_m_axi_RDATA;
  wire m27_exit_pipeline_m_axi_RREADY;
  wire [1:0]m27_exit_pipeline_m_axi_RRESP;
  wire m27_exit_pipeline_m_axi_RVALID;
  wire [31:0]m27_exit_pipeline_m_axi_WDATA;
  wire m27_exit_pipeline_m_axi_WREADY;
  wire [3:0]m27_exit_pipeline_m_axi_WSTRB;
  wire m27_exit_pipeline_m_axi_WVALID;
  wire [0:0]m27_nodes_M_SC_AR_INFO;
  wire [181:0]m27_nodes_M_SC_AR_PAYLD;
  wire m27_nodes_M_SC_AR_RECV;
  wire [0:0]m27_nodes_M_SC_AR_REQ;
  wire [0:0]m27_nodes_M_SC_AR_SEND;
  wire [0:0]m27_nodes_M_SC_AW_INFO;
  wire [181:0]m27_nodes_M_SC_AW_PAYLD;
  wire m27_nodes_M_SC_AW_RECV;
  wire [0:0]m27_nodes_M_SC_AW_REQ;
  wire [0:0]m27_nodes_M_SC_AW_SEND;
  wire [0:0]m27_nodes_M_SC_B_INFO;
  wire [8:0]m27_nodes_M_SC_B_PAYLD;
  wire [0:0]m27_nodes_M_SC_B_RECV;
  wire [0:0]m27_nodes_M_SC_B_REQ;
  wire [0:0]m27_nodes_M_SC_B_SEND;
  wire [0:0]m27_nodes_M_SC_R_INFO;
  wire [54:0]m27_nodes_M_SC_R_PAYLD;
  wire [0:0]m27_nodes_M_SC_R_RECV;
  wire [0:0]m27_nodes_M_SC_R_REQ;
  wire [0:0]m27_nodes_M_SC_R_SEND;
  wire [0:0]m27_nodes_M_SC_W_INFO;
  wire [68:0]m27_nodes_M_SC_W_PAYLD;
  wire m27_nodes_M_SC_W_RECV;
  wire [0:0]m27_nodes_M_SC_W_REQ;
  wire [0:0]m27_nodes_M_SC_W_SEND;
  wire [9:0]m27_sc2axi_M_AXI_ARADDR;
  wire [3:0]m27_sc2axi_M_AXI_ARCACHE;
  wire [2:0]m27_sc2axi_M_AXI_ARID;
  wire [7:0]m27_sc2axi_M_AXI_ARLEN;
  wire [0:0]m27_sc2axi_M_AXI_ARLOCK;
  wire [2:0]m27_sc2axi_M_AXI_ARPROT;
  wire [3:0]m27_sc2axi_M_AXI_ARQOS;
  wire m27_sc2axi_M_AXI_ARREADY;
  wire [1023:0]m27_sc2axi_M_AXI_ARUSER;
  wire m27_sc2axi_M_AXI_ARVALID;
  wire [9:0]m27_sc2axi_M_AXI_AWADDR;
  wire [3:0]m27_sc2axi_M_AXI_AWCACHE;
  wire [2:0]m27_sc2axi_M_AXI_AWID;
  wire [7:0]m27_sc2axi_M_AXI_AWLEN;
  wire [0:0]m27_sc2axi_M_AXI_AWLOCK;
  wire [2:0]m27_sc2axi_M_AXI_AWPROT;
  wire [3:0]m27_sc2axi_M_AXI_AWQOS;
  wire m27_sc2axi_M_AXI_AWREADY;
  wire [1023:0]m27_sc2axi_M_AXI_AWUSER;
  wire m27_sc2axi_M_AXI_AWVALID;
  wire [2:0]m27_sc2axi_M_AXI_BID;
  wire m27_sc2axi_M_AXI_BREADY;
  wire [1:0]m27_sc2axi_M_AXI_BRESP;
  wire [1023:0]m27_sc2axi_M_AXI_BUSER;
  wire m27_sc2axi_M_AXI_BVALID;
  wire [31:0]m27_sc2axi_M_AXI_RDATA;
  wire [2:0]m27_sc2axi_M_AXI_RID;
  wire m27_sc2axi_M_AXI_RLAST;
  wire m27_sc2axi_M_AXI_RREADY;
  wire [1:0]m27_sc2axi_M_AXI_RRESP;
  wire [1023:0]m27_sc2axi_M_AXI_RUSER;
  wire m27_sc2axi_M_AXI_RVALID;
  wire [31:0]m27_sc2axi_M_AXI_WDATA;
  wire m27_sc2axi_M_AXI_WLAST;
  wire m27_sc2axi_M_AXI_WREADY;
  wire [3:0]m27_sc2axi_M_AXI_WSTRB;
  wire [1023:0]m27_sc2axi_M_AXI_WUSER;
  wire m27_sc2axi_M_AXI_WVALID;
  wire [9:0]m28_exit_pipeline_m_axi_ARADDR;
  wire [2:0]m28_exit_pipeline_m_axi_ARPROT;
  wire m28_exit_pipeline_m_axi_ARREADY;
  wire m28_exit_pipeline_m_axi_ARVALID;
  wire [9:0]m28_exit_pipeline_m_axi_AWADDR;
  wire [2:0]m28_exit_pipeline_m_axi_AWPROT;
  wire m28_exit_pipeline_m_axi_AWREADY;
  wire m28_exit_pipeline_m_axi_AWVALID;
  wire m28_exit_pipeline_m_axi_BREADY;
  wire [1:0]m28_exit_pipeline_m_axi_BRESP;
  wire m28_exit_pipeline_m_axi_BVALID;
  wire [31:0]m28_exit_pipeline_m_axi_RDATA;
  wire m28_exit_pipeline_m_axi_RREADY;
  wire [1:0]m28_exit_pipeline_m_axi_RRESP;
  wire m28_exit_pipeline_m_axi_RVALID;
  wire [31:0]m28_exit_pipeline_m_axi_WDATA;
  wire m28_exit_pipeline_m_axi_WREADY;
  wire [3:0]m28_exit_pipeline_m_axi_WSTRB;
  wire m28_exit_pipeline_m_axi_WVALID;
  wire [0:0]m28_nodes_M_SC_AR_INFO;
  wire [181:0]m28_nodes_M_SC_AR_PAYLD;
  wire m28_nodes_M_SC_AR_RECV;
  wire [0:0]m28_nodes_M_SC_AR_REQ;
  wire [0:0]m28_nodes_M_SC_AR_SEND;
  wire [0:0]m28_nodes_M_SC_AW_INFO;
  wire [181:0]m28_nodes_M_SC_AW_PAYLD;
  wire m28_nodes_M_SC_AW_RECV;
  wire [0:0]m28_nodes_M_SC_AW_REQ;
  wire [0:0]m28_nodes_M_SC_AW_SEND;
  wire [0:0]m28_nodes_M_SC_B_INFO;
  wire [8:0]m28_nodes_M_SC_B_PAYLD;
  wire [0:0]m28_nodes_M_SC_B_RECV;
  wire [0:0]m28_nodes_M_SC_B_REQ;
  wire [0:0]m28_nodes_M_SC_B_SEND;
  wire [0:0]m28_nodes_M_SC_R_INFO;
  wire [54:0]m28_nodes_M_SC_R_PAYLD;
  wire [0:0]m28_nodes_M_SC_R_RECV;
  wire [0:0]m28_nodes_M_SC_R_REQ;
  wire [0:0]m28_nodes_M_SC_R_SEND;
  wire [0:0]m28_nodes_M_SC_W_INFO;
  wire [68:0]m28_nodes_M_SC_W_PAYLD;
  wire m28_nodes_M_SC_W_RECV;
  wire [0:0]m28_nodes_M_SC_W_REQ;
  wire [0:0]m28_nodes_M_SC_W_SEND;
  wire [9:0]m28_sc2axi_M_AXI_ARADDR;
  wire [3:0]m28_sc2axi_M_AXI_ARCACHE;
  wire [2:0]m28_sc2axi_M_AXI_ARID;
  wire [7:0]m28_sc2axi_M_AXI_ARLEN;
  wire [0:0]m28_sc2axi_M_AXI_ARLOCK;
  wire [2:0]m28_sc2axi_M_AXI_ARPROT;
  wire [3:0]m28_sc2axi_M_AXI_ARQOS;
  wire m28_sc2axi_M_AXI_ARREADY;
  wire [1023:0]m28_sc2axi_M_AXI_ARUSER;
  wire m28_sc2axi_M_AXI_ARVALID;
  wire [9:0]m28_sc2axi_M_AXI_AWADDR;
  wire [3:0]m28_sc2axi_M_AXI_AWCACHE;
  wire [2:0]m28_sc2axi_M_AXI_AWID;
  wire [7:0]m28_sc2axi_M_AXI_AWLEN;
  wire [0:0]m28_sc2axi_M_AXI_AWLOCK;
  wire [2:0]m28_sc2axi_M_AXI_AWPROT;
  wire [3:0]m28_sc2axi_M_AXI_AWQOS;
  wire m28_sc2axi_M_AXI_AWREADY;
  wire [1023:0]m28_sc2axi_M_AXI_AWUSER;
  wire m28_sc2axi_M_AXI_AWVALID;
  wire [2:0]m28_sc2axi_M_AXI_BID;
  wire m28_sc2axi_M_AXI_BREADY;
  wire [1:0]m28_sc2axi_M_AXI_BRESP;
  wire [1023:0]m28_sc2axi_M_AXI_BUSER;
  wire m28_sc2axi_M_AXI_BVALID;
  wire [31:0]m28_sc2axi_M_AXI_RDATA;
  wire [2:0]m28_sc2axi_M_AXI_RID;
  wire m28_sc2axi_M_AXI_RLAST;
  wire m28_sc2axi_M_AXI_RREADY;
  wire [1:0]m28_sc2axi_M_AXI_RRESP;
  wire [1023:0]m28_sc2axi_M_AXI_RUSER;
  wire m28_sc2axi_M_AXI_RVALID;
  wire [31:0]m28_sc2axi_M_AXI_WDATA;
  wire m28_sc2axi_M_AXI_WLAST;
  wire m28_sc2axi_M_AXI_WREADY;
  wire [3:0]m28_sc2axi_M_AXI_WSTRB;
  wire [1023:0]m28_sc2axi_M_AXI_WUSER;
  wire m28_sc2axi_M_AXI_WVALID;
  wire [9:0]m29_exit_pipeline_m_axi_ARADDR;
  wire [2:0]m29_exit_pipeline_m_axi_ARPROT;
  wire m29_exit_pipeline_m_axi_ARREADY;
  wire m29_exit_pipeline_m_axi_ARVALID;
  wire [9:0]m29_exit_pipeline_m_axi_AWADDR;
  wire [2:0]m29_exit_pipeline_m_axi_AWPROT;
  wire m29_exit_pipeline_m_axi_AWREADY;
  wire m29_exit_pipeline_m_axi_AWVALID;
  wire m29_exit_pipeline_m_axi_BREADY;
  wire [1:0]m29_exit_pipeline_m_axi_BRESP;
  wire m29_exit_pipeline_m_axi_BVALID;
  wire [31:0]m29_exit_pipeline_m_axi_RDATA;
  wire m29_exit_pipeline_m_axi_RREADY;
  wire [1:0]m29_exit_pipeline_m_axi_RRESP;
  wire m29_exit_pipeline_m_axi_RVALID;
  wire [31:0]m29_exit_pipeline_m_axi_WDATA;
  wire m29_exit_pipeline_m_axi_WREADY;
  wire [3:0]m29_exit_pipeline_m_axi_WSTRB;
  wire m29_exit_pipeline_m_axi_WVALID;
  wire [0:0]m29_nodes_M_SC_AR_INFO;
  wire [181:0]m29_nodes_M_SC_AR_PAYLD;
  wire m29_nodes_M_SC_AR_RECV;
  wire [0:0]m29_nodes_M_SC_AR_REQ;
  wire [0:0]m29_nodes_M_SC_AR_SEND;
  wire [0:0]m29_nodes_M_SC_AW_INFO;
  wire [181:0]m29_nodes_M_SC_AW_PAYLD;
  wire m29_nodes_M_SC_AW_RECV;
  wire [0:0]m29_nodes_M_SC_AW_REQ;
  wire [0:0]m29_nodes_M_SC_AW_SEND;
  wire [0:0]m29_nodes_M_SC_B_INFO;
  wire [8:0]m29_nodes_M_SC_B_PAYLD;
  wire [0:0]m29_nodes_M_SC_B_RECV;
  wire [0:0]m29_nodes_M_SC_B_REQ;
  wire [0:0]m29_nodes_M_SC_B_SEND;
  wire [0:0]m29_nodes_M_SC_R_INFO;
  wire [54:0]m29_nodes_M_SC_R_PAYLD;
  wire [0:0]m29_nodes_M_SC_R_RECV;
  wire [0:0]m29_nodes_M_SC_R_REQ;
  wire [0:0]m29_nodes_M_SC_R_SEND;
  wire [0:0]m29_nodes_M_SC_W_INFO;
  wire [68:0]m29_nodes_M_SC_W_PAYLD;
  wire m29_nodes_M_SC_W_RECV;
  wire [0:0]m29_nodes_M_SC_W_REQ;
  wire [0:0]m29_nodes_M_SC_W_SEND;
  wire [9:0]m29_sc2axi_M_AXI_ARADDR;
  wire [3:0]m29_sc2axi_M_AXI_ARCACHE;
  wire [2:0]m29_sc2axi_M_AXI_ARID;
  wire [7:0]m29_sc2axi_M_AXI_ARLEN;
  wire [0:0]m29_sc2axi_M_AXI_ARLOCK;
  wire [2:0]m29_sc2axi_M_AXI_ARPROT;
  wire [3:0]m29_sc2axi_M_AXI_ARQOS;
  wire m29_sc2axi_M_AXI_ARREADY;
  wire [1023:0]m29_sc2axi_M_AXI_ARUSER;
  wire m29_sc2axi_M_AXI_ARVALID;
  wire [9:0]m29_sc2axi_M_AXI_AWADDR;
  wire [3:0]m29_sc2axi_M_AXI_AWCACHE;
  wire [2:0]m29_sc2axi_M_AXI_AWID;
  wire [7:0]m29_sc2axi_M_AXI_AWLEN;
  wire [0:0]m29_sc2axi_M_AXI_AWLOCK;
  wire [2:0]m29_sc2axi_M_AXI_AWPROT;
  wire [3:0]m29_sc2axi_M_AXI_AWQOS;
  wire m29_sc2axi_M_AXI_AWREADY;
  wire [1023:0]m29_sc2axi_M_AXI_AWUSER;
  wire m29_sc2axi_M_AXI_AWVALID;
  wire [2:0]m29_sc2axi_M_AXI_BID;
  wire m29_sc2axi_M_AXI_BREADY;
  wire [1:0]m29_sc2axi_M_AXI_BRESP;
  wire [1023:0]m29_sc2axi_M_AXI_BUSER;
  wire m29_sc2axi_M_AXI_BVALID;
  wire [31:0]m29_sc2axi_M_AXI_RDATA;
  wire [2:0]m29_sc2axi_M_AXI_RID;
  wire m29_sc2axi_M_AXI_RLAST;
  wire m29_sc2axi_M_AXI_RREADY;
  wire [1:0]m29_sc2axi_M_AXI_RRESP;
  wire [1023:0]m29_sc2axi_M_AXI_RUSER;
  wire m29_sc2axi_M_AXI_RVALID;
  wire [31:0]m29_sc2axi_M_AXI_WDATA;
  wire m29_sc2axi_M_AXI_WLAST;
  wire m29_sc2axi_M_AXI_WREADY;
  wire [3:0]m29_sc2axi_M_AXI_WSTRB;
  wire [1023:0]m29_sc2axi_M_AXI_WUSER;
  wire m29_sc2axi_M_AXI_WVALID;
  wire [9:0]m30_exit_pipeline_m_axi_ARADDR;
  wire [2:0]m30_exit_pipeline_m_axi_ARPROT;
  wire m30_exit_pipeline_m_axi_ARREADY;
  wire m30_exit_pipeline_m_axi_ARVALID;
  wire [9:0]m30_exit_pipeline_m_axi_AWADDR;
  wire [2:0]m30_exit_pipeline_m_axi_AWPROT;
  wire m30_exit_pipeline_m_axi_AWREADY;
  wire m30_exit_pipeline_m_axi_AWVALID;
  wire m30_exit_pipeline_m_axi_BREADY;
  wire [1:0]m30_exit_pipeline_m_axi_BRESP;
  wire m30_exit_pipeline_m_axi_BVALID;
  wire [31:0]m30_exit_pipeline_m_axi_RDATA;
  wire m30_exit_pipeline_m_axi_RREADY;
  wire [1:0]m30_exit_pipeline_m_axi_RRESP;
  wire m30_exit_pipeline_m_axi_RVALID;
  wire [31:0]m30_exit_pipeline_m_axi_WDATA;
  wire m30_exit_pipeline_m_axi_WREADY;
  wire [3:0]m30_exit_pipeline_m_axi_WSTRB;
  wire m30_exit_pipeline_m_axi_WVALID;
  wire [0:0]m30_nodes_M_SC_AR_INFO;
  wire [181:0]m30_nodes_M_SC_AR_PAYLD;
  wire m30_nodes_M_SC_AR_RECV;
  wire [0:0]m30_nodes_M_SC_AR_REQ;
  wire [0:0]m30_nodes_M_SC_AR_SEND;
  wire [0:0]m30_nodes_M_SC_AW_INFO;
  wire [181:0]m30_nodes_M_SC_AW_PAYLD;
  wire m30_nodes_M_SC_AW_RECV;
  wire [0:0]m30_nodes_M_SC_AW_REQ;
  wire [0:0]m30_nodes_M_SC_AW_SEND;
  wire [0:0]m30_nodes_M_SC_B_INFO;
  wire [8:0]m30_nodes_M_SC_B_PAYLD;
  wire [0:0]m30_nodes_M_SC_B_RECV;
  wire [0:0]m30_nodes_M_SC_B_REQ;
  wire [0:0]m30_nodes_M_SC_B_SEND;
  wire [0:0]m30_nodes_M_SC_R_INFO;
  wire [54:0]m30_nodes_M_SC_R_PAYLD;
  wire [0:0]m30_nodes_M_SC_R_RECV;
  wire [0:0]m30_nodes_M_SC_R_REQ;
  wire [0:0]m30_nodes_M_SC_R_SEND;
  wire [0:0]m30_nodes_M_SC_W_INFO;
  wire [68:0]m30_nodes_M_SC_W_PAYLD;
  wire m30_nodes_M_SC_W_RECV;
  wire [0:0]m30_nodes_M_SC_W_REQ;
  wire [0:0]m30_nodes_M_SC_W_SEND;
  wire [9:0]m30_sc2axi_M_AXI_ARADDR;
  wire [3:0]m30_sc2axi_M_AXI_ARCACHE;
  wire [2:0]m30_sc2axi_M_AXI_ARID;
  wire [7:0]m30_sc2axi_M_AXI_ARLEN;
  wire [0:0]m30_sc2axi_M_AXI_ARLOCK;
  wire [2:0]m30_sc2axi_M_AXI_ARPROT;
  wire [3:0]m30_sc2axi_M_AXI_ARQOS;
  wire m30_sc2axi_M_AXI_ARREADY;
  wire [1023:0]m30_sc2axi_M_AXI_ARUSER;
  wire m30_sc2axi_M_AXI_ARVALID;
  wire [9:0]m30_sc2axi_M_AXI_AWADDR;
  wire [3:0]m30_sc2axi_M_AXI_AWCACHE;
  wire [2:0]m30_sc2axi_M_AXI_AWID;
  wire [7:0]m30_sc2axi_M_AXI_AWLEN;
  wire [0:0]m30_sc2axi_M_AXI_AWLOCK;
  wire [2:0]m30_sc2axi_M_AXI_AWPROT;
  wire [3:0]m30_sc2axi_M_AXI_AWQOS;
  wire m30_sc2axi_M_AXI_AWREADY;
  wire [1023:0]m30_sc2axi_M_AXI_AWUSER;
  wire m30_sc2axi_M_AXI_AWVALID;
  wire [2:0]m30_sc2axi_M_AXI_BID;
  wire m30_sc2axi_M_AXI_BREADY;
  wire [1:0]m30_sc2axi_M_AXI_BRESP;
  wire [1023:0]m30_sc2axi_M_AXI_BUSER;
  wire m30_sc2axi_M_AXI_BVALID;
  wire [31:0]m30_sc2axi_M_AXI_RDATA;
  wire [2:0]m30_sc2axi_M_AXI_RID;
  wire m30_sc2axi_M_AXI_RLAST;
  wire m30_sc2axi_M_AXI_RREADY;
  wire [1:0]m30_sc2axi_M_AXI_RRESP;
  wire [1023:0]m30_sc2axi_M_AXI_RUSER;
  wire m30_sc2axi_M_AXI_RVALID;
  wire [31:0]m30_sc2axi_M_AXI_WDATA;
  wire m30_sc2axi_M_AXI_WLAST;
  wire m30_sc2axi_M_AXI_WREADY;
  wire [3:0]m30_sc2axi_M_AXI_WSTRB;
  wire [1023:0]m30_sc2axi_M_AXI_WUSER;
  wire m30_sc2axi_M_AXI_WVALID;
  wire [9:0]m31_exit_pipeline_m_axi_ARADDR;
  wire [2:0]m31_exit_pipeline_m_axi_ARPROT;
  wire m31_exit_pipeline_m_axi_ARREADY;
  wire m31_exit_pipeline_m_axi_ARVALID;
  wire [9:0]m31_exit_pipeline_m_axi_AWADDR;
  wire [2:0]m31_exit_pipeline_m_axi_AWPROT;
  wire m31_exit_pipeline_m_axi_AWREADY;
  wire m31_exit_pipeline_m_axi_AWVALID;
  wire m31_exit_pipeline_m_axi_BREADY;
  wire [1:0]m31_exit_pipeline_m_axi_BRESP;
  wire m31_exit_pipeline_m_axi_BVALID;
  wire [31:0]m31_exit_pipeline_m_axi_RDATA;
  wire m31_exit_pipeline_m_axi_RREADY;
  wire [1:0]m31_exit_pipeline_m_axi_RRESP;
  wire m31_exit_pipeline_m_axi_RVALID;
  wire [31:0]m31_exit_pipeline_m_axi_WDATA;
  wire m31_exit_pipeline_m_axi_WREADY;
  wire [3:0]m31_exit_pipeline_m_axi_WSTRB;
  wire m31_exit_pipeline_m_axi_WVALID;
  wire [0:0]m31_nodes_M_SC_AR_INFO;
  wire [181:0]m31_nodes_M_SC_AR_PAYLD;
  wire m31_nodes_M_SC_AR_RECV;
  wire [0:0]m31_nodes_M_SC_AR_REQ;
  wire [0:0]m31_nodes_M_SC_AR_SEND;
  wire [0:0]m31_nodes_M_SC_AW_INFO;
  wire [181:0]m31_nodes_M_SC_AW_PAYLD;
  wire m31_nodes_M_SC_AW_RECV;
  wire [0:0]m31_nodes_M_SC_AW_REQ;
  wire [0:0]m31_nodes_M_SC_AW_SEND;
  wire [0:0]m31_nodes_M_SC_B_INFO;
  wire [8:0]m31_nodes_M_SC_B_PAYLD;
  wire [0:0]m31_nodes_M_SC_B_RECV;
  wire [0:0]m31_nodes_M_SC_B_REQ;
  wire [0:0]m31_nodes_M_SC_B_SEND;
  wire [0:0]m31_nodes_M_SC_R_INFO;
  wire [54:0]m31_nodes_M_SC_R_PAYLD;
  wire [0:0]m31_nodes_M_SC_R_RECV;
  wire [0:0]m31_nodes_M_SC_R_REQ;
  wire [0:0]m31_nodes_M_SC_R_SEND;
  wire [0:0]m31_nodes_M_SC_W_INFO;
  wire [68:0]m31_nodes_M_SC_W_PAYLD;
  wire m31_nodes_M_SC_W_RECV;
  wire [0:0]m31_nodes_M_SC_W_REQ;
  wire [0:0]m31_nodes_M_SC_W_SEND;
  wire [9:0]m31_sc2axi_M_AXI_ARADDR;
  wire [3:0]m31_sc2axi_M_AXI_ARCACHE;
  wire [2:0]m31_sc2axi_M_AXI_ARID;
  wire [7:0]m31_sc2axi_M_AXI_ARLEN;
  wire [0:0]m31_sc2axi_M_AXI_ARLOCK;
  wire [2:0]m31_sc2axi_M_AXI_ARPROT;
  wire [3:0]m31_sc2axi_M_AXI_ARQOS;
  wire m31_sc2axi_M_AXI_ARREADY;
  wire [1023:0]m31_sc2axi_M_AXI_ARUSER;
  wire m31_sc2axi_M_AXI_ARVALID;
  wire [9:0]m31_sc2axi_M_AXI_AWADDR;
  wire [3:0]m31_sc2axi_M_AXI_AWCACHE;
  wire [2:0]m31_sc2axi_M_AXI_AWID;
  wire [7:0]m31_sc2axi_M_AXI_AWLEN;
  wire [0:0]m31_sc2axi_M_AXI_AWLOCK;
  wire [2:0]m31_sc2axi_M_AXI_AWPROT;
  wire [3:0]m31_sc2axi_M_AXI_AWQOS;
  wire m31_sc2axi_M_AXI_AWREADY;
  wire [1023:0]m31_sc2axi_M_AXI_AWUSER;
  wire m31_sc2axi_M_AXI_AWVALID;
  wire [2:0]m31_sc2axi_M_AXI_BID;
  wire m31_sc2axi_M_AXI_BREADY;
  wire [1:0]m31_sc2axi_M_AXI_BRESP;
  wire [1023:0]m31_sc2axi_M_AXI_BUSER;
  wire m31_sc2axi_M_AXI_BVALID;
  wire [31:0]m31_sc2axi_M_AXI_RDATA;
  wire [2:0]m31_sc2axi_M_AXI_RID;
  wire m31_sc2axi_M_AXI_RLAST;
  wire m31_sc2axi_M_AXI_RREADY;
  wire [1:0]m31_sc2axi_M_AXI_RRESP;
  wire [1023:0]m31_sc2axi_M_AXI_RUSER;
  wire m31_sc2axi_M_AXI_RVALID;
  wire [31:0]m31_sc2axi_M_AXI_WDATA;
  wire m31_sc2axi_M_AXI_WLAST;
  wire m31_sc2axi_M_AXI_WREADY;
  wire [3:0]m31_sc2axi_M_AXI_WSTRB;
  wire [1023:0]m31_sc2axi_M_AXI_WUSER;
  wire m31_sc2axi_M_AXI_WVALID;
  wire [9:0]m32_exit_pipeline_m_axi_ARADDR;
  wire [2:0]m32_exit_pipeline_m_axi_ARPROT;
  wire m32_exit_pipeline_m_axi_ARREADY;
  wire m32_exit_pipeline_m_axi_ARVALID;
  wire [9:0]m32_exit_pipeline_m_axi_AWADDR;
  wire [2:0]m32_exit_pipeline_m_axi_AWPROT;
  wire m32_exit_pipeline_m_axi_AWREADY;
  wire m32_exit_pipeline_m_axi_AWVALID;
  wire m32_exit_pipeline_m_axi_BREADY;
  wire [1:0]m32_exit_pipeline_m_axi_BRESP;
  wire m32_exit_pipeline_m_axi_BVALID;
  wire [31:0]m32_exit_pipeline_m_axi_RDATA;
  wire m32_exit_pipeline_m_axi_RREADY;
  wire [1:0]m32_exit_pipeline_m_axi_RRESP;
  wire m32_exit_pipeline_m_axi_RVALID;
  wire [31:0]m32_exit_pipeline_m_axi_WDATA;
  wire m32_exit_pipeline_m_axi_WREADY;
  wire [3:0]m32_exit_pipeline_m_axi_WSTRB;
  wire m32_exit_pipeline_m_axi_WVALID;
  wire [0:0]m32_nodes_M_SC_AR_INFO;
  wire [181:0]m32_nodes_M_SC_AR_PAYLD;
  wire m32_nodes_M_SC_AR_RECV;
  wire [0:0]m32_nodes_M_SC_AR_REQ;
  wire [0:0]m32_nodes_M_SC_AR_SEND;
  wire [0:0]m32_nodes_M_SC_AW_INFO;
  wire [181:0]m32_nodes_M_SC_AW_PAYLD;
  wire m32_nodes_M_SC_AW_RECV;
  wire [0:0]m32_nodes_M_SC_AW_REQ;
  wire [0:0]m32_nodes_M_SC_AW_SEND;
  wire [0:0]m32_nodes_M_SC_B_INFO;
  wire [8:0]m32_nodes_M_SC_B_PAYLD;
  wire [0:0]m32_nodes_M_SC_B_RECV;
  wire [0:0]m32_nodes_M_SC_B_REQ;
  wire [0:0]m32_nodes_M_SC_B_SEND;
  wire [0:0]m32_nodes_M_SC_R_INFO;
  wire [54:0]m32_nodes_M_SC_R_PAYLD;
  wire [0:0]m32_nodes_M_SC_R_RECV;
  wire [0:0]m32_nodes_M_SC_R_REQ;
  wire [0:0]m32_nodes_M_SC_R_SEND;
  wire [0:0]m32_nodes_M_SC_W_INFO;
  wire [68:0]m32_nodes_M_SC_W_PAYLD;
  wire m32_nodes_M_SC_W_RECV;
  wire [0:0]m32_nodes_M_SC_W_REQ;
  wire [0:0]m32_nodes_M_SC_W_SEND;
  wire [9:0]m32_sc2axi_M_AXI_ARADDR;
  wire [3:0]m32_sc2axi_M_AXI_ARCACHE;
  wire [2:0]m32_sc2axi_M_AXI_ARID;
  wire [7:0]m32_sc2axi_M_AXI_ARLEN;
  wire [0:0]m32_sc2axi_M_AXI_ARLOCK;
  wire [2:0]m32_sc2axi_M_AXI_ARPROT;
  wire [3:0]m32_sc2axi_M_AXI_ARQOS;
  wire m32_sc2axi_M_AXI_ARREADY;
  wire [1023:0]m32_sc2axi_M_AXI_ARUSER;
  wire m32_sc2axi_M_AXI_ARVALID;
  wire [9:0]m32_sc2axi_M_AXI_AWADDR;
  wire [3:0]m32_sc2axi_M_AXI_AWCACHE;
  wire [2:0]m32_sc2axi_M_AXI_AWID;
  wire [7:0]m32_sc2axi_M_AXI_AWLEN;
  wire [0:0]m32_sc2axi_M_AXI_AWLOCK;
  wire [2:0]m32_sc2axi_M_AXI_AWPROT;
  wire [3:0]m32_sc2axi_M_AXI_AWQOS;
  wire m32_sc2axi_M_AXI_AWREADY;
  wire [1023:0]m32_sc2axi_M_AXI_AWUSER;
  wire m32_sc2axi_M_AXI_AWVALID;
  wire [2:0]m32_sc2axi_M_AXI_BID;
  wire m32_sc2axi_M_AXI_BREADY;
  wire [1:0]m32_sc2axi_M_AXI_BRESP;
  wire [1023:0]m32_sc2axi_M_AXI_BUSER;
  wire m32_sc2axi_M_AXI_BVALID;
  wire [31:0]m32_sc2axi_M_AXI_RDATA;
  wire [2:0]m32_sc2axi_M_AXI_RID;
  wire m32_sc2axi_M_AXI_RLAST;
  wire m32_sc2axi_M_AXI_RREADY;
  wire [1:0]m32_sc2axi_M_AXI_RRESP;
  wire [1023:0]m32_sc2axi_M_AXI_RUSER;
  wire m32_sc2axi_M_AXI_RVALID;
  wire [31:0]m32_sc2axi_M_AXI_WDATA;
  wire m32_sc2axi_M_AXI_WLAST;
  wire m32_sc2axi_M_AXI_WREADY;
  wire [3:0]m32_sc2axi_M_AXI_WSTRB;
  wire [1023:0]m32_sc2axi_M_AXI_WUSER;
  wire m32_sc2axi_M_AXI_WVALID;
  wire [9:0]m33_exit_pipeline_m_axi_ARADDR;
  wire [2:0]m33_exit_pipeline_m_axi_ARPROT;
  wire m33_exit_pipeline_m_axi_ARREADY;
  wire m33_exit_pipeline_m_axi_ARVALID;
  wire [9:0]m33_exit_pipeline_m_axi_AWADDR;
  wire [2:0]m33_exit_pipeline_m_axi_AWPROT;
  wire m33_exit_pipeline_m_axi_AWREADY;
  wire m33_exit_pipeline_m_axi_AWVALID;
  wire m33_exit_pipeline_m_axi_BREADY;
  wire [1:0]m33_exit_pipeline_m_axi_BRESP;
  wire m33_exit_pipeline_m_axi_BVALID;
  wire [31:0]m33_exit_pipeline_m_axi_RDATA;
  wire m33_exit_pipeline_m_axi_RREADY;
  wire [1:0]m33_exit_pipeline_m_axi_RRESP;
  wire m33_exit_pipeline_m_axi_RVALID;
  wire [31:0]m33_exit_pipeline_m_axi_WDATA;
  wire m33_exit_pipeline_m_axi_WREADY;
  wire [3:0]m33_exit_pipeline_m_axi_WSTRB;
  wire m33_exit_pipeline_m_axi_WVALID;
  wire [0:0]m33_nodes_M_SC_AR_INFO;
  wire [181:0]m33_nodes_M_SC_AR_PAYLD;
  wire m33_nodes_M_SC_AR_RECV;
  wire [0:0]m33_nodes_M_SC_AR_REQ;
  wire [0:0]m33_nodes_M_SC_AR_SEND;
  wire [0:0]m33_nodes_M_SC_AW_INFO;
  wire [181:0]m33_nodes_M_SC_AW_PAYLD;
  wire m33_nodes_M_SC_AW_RECV;
  wire [0:0]m33_nodes_M_SC_AW_REQ;
  wire [0:0]m33_nodes_M_SC_AW_SEND;
  wire [0:0]m33_nodes_M_SC_B_INFO;
  wire [8:0]m33_nodes_M_SC_B_PAYLD;
  wire [0:0]m33_nodes_M_SC_B_RECV;
  wire [0:0]m33_nodes_M_SC_B_REQ;
  wire [0:0]m33_nodes_M_SC_B_SEND;
  wire [0:0]m33_nodes_M_SC_R_INFO;
  wire [54:0]m33_nodes_M_SC_R_PAYLD;
  wire [0:0]m33_nodes_M_SC_R_RECV;
  wire [0:0]m33_nodes_M_SC_R_REQ;
  wire [0:0]m33_nodes_M_SC_R_SEND;
  wire [0:0]m33_nodes_M_SC_W_INFO;
  wire [68:0]m33_nodes_M_SC_W_PAYLD;
  wire m33_nodes_M_SC_W_RECV;
  wire [0:0]m33_nodes_M_SC_W_REQ;
  wire [0:0]m33_nodes_M_SC_W_SEND;
  wire [9:0]m33_sc2axi_M_AXI_ARADDR;
  wire [3:0]m33_sc2axi_M_AXI_ARCACHE;
  wire [2:0]m33_sc2axi_M_AXI_ARID;
  wire [7:0]m33_sc2axi_M_AXI_ARLEN;
  wire [0:0]m33_sc2axi_M_AXI_ARLOCK;
  wire [2:0]m33_sc2axi_M_AXI_ARPROT;
  wire [3:0]m33_sc2axi_M_AXI_ARQOS;
  wire m33_sc2axi_M_AXI_ARREADY;
  wire [1023:0]m33_sc2axi_M_AXI_ARUSER;
  wire m33_sc2axi_M_AXI_ARVALID;
  wire [9:0]m33_sc2axi_M_AXI_AWADDR;
  wire [3:0]m33_sc2axi_M_AXI_AWCACHE;
  wire [2:0]m33_sc2axi_M_AXI_AWID;
  wire [7:0]m33_sc2axi_M_AXI_AWLEN;
  wire [0:0]m33_sc2axi_M_AXI_AWLOCK;
  wire [2:0]m33_sc2axi_M_AXI_AWPROT;
  wire [3:0]m33_sc2axi_M_AXI_AWQOS;
  wire m33_sc2axi_M_AXI_AWREADY;
  wire [1023:0]m33_sc2axi_M_AXI_AWUSER;
  wire m33_sc2axi_M_AXI_AWVALID;
  wire [2:0]m33_sc2axi_M_AXI_BID;
  wire m33_sc2axi_M_AXI_BREADY;
  wire [1:0]m33_sc2axi_M_AXI_BRESP;
  wire [1023:0]m33_sc2axi_M_AXI_BUSER;
  wire m33_sc2axi_M_AXI_BVALID;
  wire [31:0]m33_sc2axi_M_AXI_RDATA;
  wire [2:0]m33_sc2axi_M_AXI_RID;
  wire m33_sc2axi_M_AXI_RLAST;
  wire m33_sc2axi_M_AXI_RREADY;
  wire [1:0]m33_sc2axi_M_AXI_RRESP;
  wire [1023:0]m33_sc2axi_M_AXI_RUSER;
  wire m33_sc2axi_M_AXI_RVALID;
  wire [31:0]m33_sc2axi_M_AXI_WDATA;
  wire m33_sc2axi_M_AXI_WLAST;
  wire m33_sc2axi_M_AXI_WREADY;
  wire [3:0]m33_sc2axi_M_AXI_WSTRB;
  wire [1023:0]m33_sc2axi_M_AXI_WUSER;
  wire m33_sc2axi_M_AXI_WVALID;
  wire [9:0]m34_exit_pipeline_m_axi_ARADDR;
  wire [2:0]m34_exit_pipeline_m_axi_ARPROT;
  wire m34_exit_pipeline_m_axi_ARREADY;
  wire m34_exit_pipeline_m_axi_ARVALID;
  wire [9:0]m34_exit_pipeline_m_axi_AWADDR;
  wire [2:0]m34_exit_pipeline_m_axi_AWPROT;
  wire m34_exit_pipeline_m_axi_AWREADY;
  wire m34_exit_pipeline_m_axi_AWVALID;
  wire m34_exit_pipeline_m_axi_BREADY;
  wire [1:0]m34_exit_pipeline_m_axi_BRESP;
  wire m34_exit_pipeline_m_axi_BVALID;
  wire [31:0]m34_exit_pipeline_m_axi_RDATA;
  wire m34_exit_pipeline_m_axi_RREADY;
  wire [1:0]m34_exit_pipeline_m_axi_RRESP;
  wire m34_exit_pipeline_m_axi_RVALID;
  wire [31:0]m34_exit_pipeline_m_axi_WDATA;
  wire m34_exit_pipeline_m_axi_WREADY;
  wire [3:0]m34_exit_pipeline_m_axi_WSTRB;
  wire m34_exit_pipeline_m_axi_WVALID;
  wire [0:0]m34_nodes_M_SC_AR_INFO;
  wire [181:0]m34_nodes_M_SC_AR_PAYLD;
  wire m34_nodes_M_SC_AR_RECV;
  wire [0:0]m34_nodes_M_SC_AR_REQ;
  wire [0:0]m34_nodes_M_SC_AR_SEND;
  wire [0:0]m34_nodes_M_SC_AW_INFO;
  wire [181:0]m34_nodes_M_SC_AW_PAYLD;
  wire m34_nodes_M_SC_AW_RECV;
  wire [0:0]m34_nodes_M_SC_AW_REQ;
  wire [0:0]m34_nodes_M_SC_AW_SEND;
  wire [0:0]m34_nodes_M_SC_B_INFO;
  wire [8:0]m34_nodes_M_SC_B_PAYLD;
  wire [0:0]m34_nodes_M_SC_B_RECV;
  wire [0:0]m34_nodes_M_SC_B_REQ;
  wire [0:0]m34_nodes_M_SC_B_SEND;
  wire [0:0]m34_nodes_M_SC_R_INFO;
  wire [54:0]m34_nodes_M_SC_R_PAYLD;
  wire [0:0]m34_nodes_M_SC_R_RECV;
  wire [0:0]m34_nodes_M_SC_R_REQ;
  wire [0:0]m34_nodes_M_SC_R_SEND;
  wire [0:0]m34_nodes_M_SC_W_INFO;
  wire [68:0]m34_nodes_M_SC_W_PAYLD;
  wire m34_nodes_M_SC_W_RECV;
  wire [0:0]m34_nodes_M_SC_W_REQ;
  wire [0:0]m34_nodes_M_SC_W_SEND;
  wire [9:0]m34_sc2axi_M_AXI_ARADDR;
  wire [3:0]m34_sc2axi_M_AXI_ARCACHE;
  wire [2:0]m34_sc2axi_M_AXI_ARID;
  wire [7:0]m34_sc2axi_M_AXI_ARLEN;
  wire [0:0]m34_sc2axi_M_AXI_ARLOCK;
  wire [2:0]m34_sc2axi_M_AXI_ARPROT;
  wire [3:0]m34_sc2axi_M_AXI_ARQOS;
  wire m34_sc2axi_M_AXI_ARREADY;
  wire [1023:0]m34_sc2axi_M_AXI_ARUSER;
  wire m34_sc2axi_M_AXI_ARVALID;
  wire [9:0]m34_sc2axi_M_AXI_AWADDR;
  wire [3:0]m34_sc2axi_M_AXI_AWCACHE;
  wire [2:0]m34_sc2axi_M_AXI_AWID;
  wire [7:0]m34_sc2axi_M_AXI_AWLEN;
  wire [0:0]m34_sc2axi_M_AXI_AWLOCK;
  wire [2:0]m34_sc2axi_M_AXI_AWPROT;
  wire [3:0]m34_sc2axi_M_AXI_AWQOS;
  wire m34_sc2axi_M_AXI_AWREADY;
  wire [1023:0]m34_sc2axi_M_AXI_AWUSER;
  wire m34_sc2axi_M_AXI_AWVALID;
  wire [2:0]m34_sc2axi_M_AXI_BID;
  wire m34_sc2axi_M_AXI_BREADY;
  wire [1:0]m34_sc2axi_M_AXI_BRESP;
  wire [1023:0]m34_sc2axi_M_AXI_BUSER;
  wire m34_sc2axi_M_AXI_BVALID;
  wire [31:0]m34_sc2axi_M_AXI_RDATA;
  wire [2:0]m34_sc2axi_M_AXI_RID;
  wire m34_sc2axi_M_AXI_RLAST;
  wire m34_sc2axi_M_AXI_RREADY;
  wire [1:0]m34_sc2axi_M_AXI_RRESP;
  wire [1023:0]m34_sc2axi_M_AXI_RUSER;
  wire m34_sc2axi_M_AXI_RVALID;
  wire [31:0]m34_sc2axi_M_AXI_WDATA;
  wire m34_sc2axi_M_AXI_WLAST;
  wire m34_sc2axi_M_AXI_WREADY;
  wire [3:0]m34_sc2axi_M_AXI_WSTRB;
  wire [1023:0]m34_sc2axi_M_AXI_WUSER;
  wire m34_sc2axi_M_AXI_WVALID;
  wire [9:0]m35_exit_pipeline_m_axi_ARADDR;
  wire [2:0]m35_exit_pipeline_m_axi_ARPROT;
  wire m35_exit_pipeline_m_axi_ARREADY;
  wire m35_exit_pipeline_m_axi_ARVALID;
  wire [9:0]m35_exit_pipeline_m_axi_AWADDR;
  wire [2:0]m35_exit_pipeline_m_axi_AWPROT;
  wire m35_exit_pipeline_m_axi_AWREADY;
  wire m35_exit_pipeline_m_axi_AWVALID;
  wire m35_exit_pipeline_m_axi_BREADY;
  wire [1:0]m35_exit_pipeline_m_axi_BRESP;
  wire m35_exit_pipeline_m_axi_BVALID;
  wire [31:0]m35_exit_pipeline_m_axi_RDATA;
  wire m35_exit_pipeline_m_axi_RREADY;
  wire [1:0]m35_exit_pipeline_m_axi_RRESP;
  wire m35_exit_pipeline_m_axi_RVALID;
  wire [31:0]m35_exit_pipeline_m_axi_WDATA;
  wire m35_exit_pipeline_m_axi_WREADY;
  wire [3:0]m35_exit_pipeline_m_axi_WSTRB;
  wire m35_exit_pipeline_m_axi_WVALID;
  wire [0:0]m35_nodes_M_SC_AR_INFO;
  wire [181:0]m35_nodes_M_SC_AR_PAYLD;
  wire m35_nodes_M_SC_AR_RECV;
  wire [0:0]m35_nodes_M_SC_AR_REQ;
  wire [0:0]m35_nodes_M_SC_AR_SEND;
  wire [0:0]m35_nodes_M_SC_AW_INFO;
  wire [181:0]m35_nodes_M_SC_AW_PAYLD;
  wire m35_nodes_M_SC_AW_RECV;
  wire [0:0]m35_nodes_M_SC_AW_REQ;
  wire [0:0]m35_nodes_M_SC_AW_SEND;
  wire [0:0]m35_nodes_M_SC_B_INFO;
  wire [8:0]m35_nodes_M_SC_B_PAYLD;
  wire [0:0]m35_nodes_M_SC_B_RECV;
  wire [0:0]m35_nodes_M_SC_B_REQ;
  wire [0:0]m35_nodes_M_SC_B_SEND;
  wire [0:0]m35_nodes_M_SC_R_INFO;
  wire [54:0]m35_nodes_M_SC_R_PAYLD;
  wire [0:0]m35_nodes_M_SC_R_RECV;
  wire [0:0]m35_nodes_M_SC_R_REQ;
  wire [0:0]m35_nodes_M_SC_R_SEND;
  wire [0:0]m35_nodes_M_SC_W_INFO;
  wire [68:0]m35_nodes_M_SC_W_PAYLD;
  wire m35_nodes_M_SC_W_RECV;
  wire [0:0]m35_nodes_M_SC_W_REQ;
  wire [0:0]m35_nodes_M_SC_W_SEND;
  wire [9:0]m35_sc2axi_M_AXI_ARADDR;
  wire [3:0]m35_sc2axi_M_AXI_ARCACHE;
  wire [2:0]m35_sc2axi_M_AXI_ARID;
  wire [7:0]m35_sc2axi_M_AXI_ARLEN;
  wire [0:0]m35_sc2axi_M_AXI_ARLOCK;
  wire [2:0]m35_sc2axi_M_AXI_ARPROT;
  wire [3:0]m35_sc2axi_M_AXI_ARQOS;
  wire m35_sc2axi_M_AXI_ARREADY;
  wire [1023:0]m35_sc2axi_M_AXI_ARUSER;
  wire m35_sc2axi_M_AXI_ARVALID;
  wire [9:0]m35_sc2axi_M_AXI_AWADDR;
  wire [3:0]m35_sc2axi_M_AXI_AWCACHE;
  wire [2:0]m35_sc2axi_M_AXI_AWID;
  wire [7:0]m35_sc2axi_M_AXI_AWLEN;
  wire [0:0]m35_sc2axi_M_AXI_AWLOCK;
  wire [2:0]m35_sc2axi_M_AXI_AWPROT;
  wire [3:0]m35_sc2axi_M_AXI_AWQOS;
  wire m35_sc2axi_M_AXI_AWREADY;
  wire [1023:0]m35_sc2axi_M_AXI_AWUSER;
  wire m35_sc2axi_M_AXI_AWVALID;
  wire [2:0]m35_sc2axi_M_AXI_BID;
  wire m35_sc2axi_M_AXI_BREADY;
  wire [1:0]m35_sc2axi_M_AXI_BRESP;
  wire [1023:0]m35_sc2axi_M_AXI_BUSER;
  wire m35_sc2axi_M_AXI_BVALID;
  wire [31:0]m35_sc2axi_M_AXI_RDATA;
  wire [2:0]m35_sc2axi_M_AXI_RID;
  wire m35_sc2axi_M_AXI_RLAST;
  wire m35_sc2axi_M_AXI_RREADY;
  wire [1:0]m35_sc2axi_M_AXI_RRESP;
  wire [1023:0]m35_sc2axi_M_AXI_RUSER;
  wire m35_sc2axi_M_AXI_RVALID;
  wire [31:0]m35_sc2axi_M_AXI_WDATA;
  wire m35_sc2axi_M_AXI_WLAST;
  wire m35_sc2axi_M_AXI_WREADY;
  wire [3:0]m35_sc2axi_M_AXI_WSTRB;
  wire [1023:0]m35_sc2axi_M_AXI_WUSER;
  wire m35_sc2axi_M_AXI_WVALID;
  wire [9:0]m36_exit_pipeline_m_axi_ARADDR;
  wire [2:0]m36_exit_pipeline_m_axi_ARPROT;
  wire m36_exit_pipeline_m_axi_ARREADY;
  wire m36_exit_pipeline_m_axi_ARVALID;
  wire [9:0]m36_exit_pipeline_m_axi_AWADDR;
  wire [2:0]m36_exit_pipeline_m_axi_AWPROT;
  wire m36_exit_pipeline_m_axi_AWREADY;
  wire m36_exit_pipeline_m_axi_AWVALID;
  wire m36_exit_pipeline_m_axi_BREADY;
  wire [1:0]m36_exit_pipeline_m_axi_BRESP;
  wire m36_exit_pipeline_m_axi_BVALID;
  wire [31:0]m36_exit_pipeline_m_axi_RDATA;
  wire m36_exit_pipeline_m_axi_RREADY;
  wire [1:0]m36_exit_pipeline_m_axi_RRESP;
  wire m36_exit_pipeline_m_axi_RVALID;
  wire [31:0]m36_exit_pipeline_m_axi_WDATA;
  wire m36_exit_pipeline_m_axi_WREADY;
  wire [3:0]m36_exit_pipeline_m_axi_WSTRB;
  wire m36_exit_pipeline_m_axi_WVALID;
  wire [0:0]m36_nodes_M_SC_AR_INFO;
  wire [181:0]m36_nodes_M_SC_AR_PAYLD;
  wire m36_nodes_M_SC_AR_RECV;
  wire [0:0]m36_nodes_M_SC_AR_REQ;
  wire [0:0]m36_nodes_M_SC_AR_SEND;
  wire [0:0]m36_nodes_M_SC_AW_INFO;
  wire [181:0]m36_nodes_M_SC_AW_PAYLD;
  wire m36_nodes_M_SC_AW_RECV;
  wire [0:0]m36_nodes_M_SC_AW_REQ;
  wire [0:0]m36_nodes_M_SC_AW_SEND;
  wire [0:0]m36_nodes_M_SC_B_INFO;
  wire [8:0]m36_nodes_M_SC_B_PAYLD;
  wire [0:0]m36_nodes_M_SC_B_RECV;
  wire [0:0]m36_nodes_M_SC_B_REQ;
  wire [0:0]m36_nodes_M_SC_B_SEND;
  wire [0:0]m36_nodes_M_SC_R_INFO;
  wire [54:0]m36_nodes_M_SC_R_PAYLD;
  wire [0:0]m36_nodes_M_SC_R_RECV;
  wire [0:0]m36_nodes_M_SC_R_REQ;
  wire [0:0]m36_nodes_M_SC_R_SEND;
  wire [0:0]m36_nodes_M_SC_W_INFO;
  wire [68:0]m36_nodes_M_SC_W_PAYLD;
  wire m36_nodes_M_SC_W_RECV;
  wire [0:0]m36_nodes_M_SC_W_REQ;
  wire [0:0]m36_nodes_M_SC_W_SEND;
  wire [9:0]m36_sc2axi_M_AXI_ARADDR;
  wire [3:0]m36_sc2axi_M_AXI_ARCACHE;
  wire [2:0]m36_sc2axi_M_AXI_ARID;
  wire [7:0]m36_sc2axi_M_AXI_ARLEN;
  wire [0:0]m36_sc2axi_M_AXI_ARLOCK;
  wire [2:0]m36_sc2axi_M_AXI_ARPROT;
  wire [3:0]m36_sc2axi_M_AXI_ARQOS;
  wire m36_sc2axi_M_AXI_ARREADY;
  wire [1023:0]m36_sc2axi_M_AXI_ARUSER;
  wire m36_sc2axi_M_AXI_ARVALID;
  wire [9:0]m36_sc2axi_M_AXI_AWADDR;
  wire [3:0]m36_sc2axi_M_AXI_AWCACHE;
  wire [2:0]m36_sc2axi_M_AXI_AWID;
  wire [7:0]m36_sc2axi_M_AXI_AWLEN;
  wire [0:0]m36_sc2axi_M_AXI_AWLOCK;
  wire [2:0]m36_sc2axi_M_AXI_AWPROT;
  wire [3:0]m36_sc2axi_M_AXI_AWQOS;
  wire m36_sc2axi_M_AXI_AWREADY;
  wire [1023:0]m36_sc2axi_M_AXI_AWUSER;
  wire m36_sc2axi_M_AXI_AWVALID;
  wire [2:0]m36_sc2axi_M_AXI_BID;
  wire m36_sc2axi_M_AXI_BREADY;
  wire [1:0]m36_sc2axi_M_AXI_BRESP;
  wire [1023:0]m36_sc2axi_M_AXI_BUSER;
  wire m36_sc2axi_M_AXI_BVALID;
  wire [31:0]m36_sc2axi_M_AXI_RDATA;
  wire [2:0]m36_sc2axi_M_AXI_RID;
  wire m36_sc2axi_M_AXI_RLAST;
  wire m36_sc2axi_M_AXI_RREADY;
  wire [1:0]m36_sc2axi_M_AXI_RRESP;
  wire [1023:0]m36_sc2axi_M_AXI_RUSER;
  wire m36_sc2axi_M_AXI_RVALID;
  wire [31:0]m36_sc2axi_M_AXI_WDATA;
  wire m36_sc2axi_M_AXI_WLAST;
  wire m36_sc2axi_M_AXI_WREADY;
  wire [3:0]m36_sc2axi_M_AXI_WSTRB;
  wire [1023:0]m36_sc2axi_M_AXI_WUSER;
  wire m36_sc2axi_M_AXI_WVALID;
  wire [9:0]m37_exit_pipeline_m_axi_ARADDR;
  wire [2:0]m37_exit_pipeline_m_axi_ARPROT;
  wire m37_exit_pipeline_m_axi_ARREADY;
  wire m37_exit_pipeline_m_axi_ARVALID;
  wire [9:0]m37_exit_pipeline_m_axi_AWADDR;
  wire [2:0]m37_exit_pipeline_m_axi_AWPROT;
  wire m37_exit_pipeline_m_axi_AWREADY;
  wire m37_exit_pipeline_m_axi_AWVALID;
  wire m37_exit_pipeline_m_axi_BREADY;
  wire [1:0]m37_exit_pipeline_m_axi_BRESP;
  wire m37_exit_pipeline_m_axi_BVALID;
  wire [31:0]m37_exit_pipeline_m_axi_RDATA;
  wire m37_exit_pipeline_m_axi_RREADY;
  wire [1:0]m37_exit_pipeline_m_axi_RRESP;
  wire m37_exit_pipeline_m_axi_RVALID;
  wire [31:0]m37_exit_pipeline_m_axi_WDATA;
  wire m37_exit_pipeline_m_axi_WREADY;
  wire [3:0]m37_exit_pipeline_m_axi_WSTRB;
  wire m37_exit_pipeline_m_axi_WVALID;
  wire [0:0]m37_nodes_M_SC_AR_INFO;
  wire [181:0]m37_nodes_M_SC_AR_PAYLD;
  wire m37_nodes_M_SC_AR_RECV;
  wire [0:0]m37_nodes_M_SC_AR_REQ;
  wire [0:0]m37_nodes_M_SC_AR_SEND;
  wire [0:0]m37_nodes_M_SC_AW_INFO;
  wire [181:0]m37_nodes_M_SC_AW_PAYLD;
  wire m37_nodes_M_SC_AW_RECV;
  wire [0:0]m37_nodes_M_SC_AW_REQ;
  wire [0:0]m37_nodes_M_SC_AW_SEND;
  wire [0:0]m37_nodes_M_SC_B_INFO;
  wire [8:0]m37_nodes_M_SC_B_PAYLD;
  wire [0:0]m37_nodes_M_SC_B_RECV;
  wire [0:0]m37_nodes_M_SC_B_REQ;
  wire [0:0]m37_nodes_M_SC_B_SEND;
  wire [0:0]m37_nodes_M_SC_R_INFO;
  wire [54:0]m37_nodes_M_SC_R_PAYLD;
  wire [0:0]m37_nodes_M_SC_R_RECV;
  wire [0:0]m37_nodes_M_SC_R_REQ;
  wire [0:0]m37_nodes_M_SC_R_SEND;
  wire [0:0]m37_nodes_M_SC_W_INFO;
  wire [68:0]m37_nodes_M_SC_W_PAYLD;
  wire m37_nodes_M_SC_W_RECV;
  wire [0:0]m37_nodes_M_SC_W_REQ;
  wire [0:0]m37_nodes_M_SC_W_SEND;
  wire [9:0]m37_sc2axi_M_AXI_ARADDR;
  wire [3:0]m37_sc2axi_M_AXI_ARCACHE;
  wire [2:0]m37_sc2axi_M_AXI_ARID;
  wire [7:0]m37_sc2axi_M_AXI_ARLEN;
  wire [0:0]m37_sc2axi_M_AXI_ARLOCK;
  wire [2:0]m37_sc2axi_M_AXI_ARPROT;
  wire [3:0]m37_sc2axi_M_AXI_ARQOS;
  wire m37_sc2axi_M_AXI_ARREADY;
  wire [1023:0]m37_sc2axi_M_AXI_ARUSER;
  wire m37_sc2axi_M_AXI_ARVALID;
  wire [9:0]m37_sc2axi_M_AXI_AWADDR;
  wire [3:0]m37_sc2axi_M_AXI_AWCACHE;
  wire [2:0]m37_sc2axi_M_AXI_AWID;
  wire [7:0]m37_sc2axi_M_AXI_AWLEN;
  wire [0:0]m37_sc2axi_M_AXI_AWLOCK;
  wire [2:0]m37_sc2axi_M_AXI_AWPROT;
  wire [3:0]m37_sc2axi_M_AXI_AWQOS;
  wire m37_sc2axi_M_AXI_AWREADY;
  wire [1023:0]m37_sc2axi_M_AXI_AWUSER;
  wire m37_sc2axi_M_AXI_AWVALID;
  wire [2:0]m37_sc2axi_M_AXI_BID;
  wire m37_sc2axi_M_AXI_BREADY;
  wire [1:0]m37_sc2axi_M_AXI_BRESP;
  wire [1023:0]m37_sc2axi_M_AXI_BUSER;
  wire m37_sc2axi_M_AXI_BVALID;
  wire [31:0]m37_sc2axi_M_AXI_RDATA;
  wire [2:0]m37_sc2axi_M_AXI_RID;
  wire m37_sc2axi_M_AXI_RLAST;
  wire m37_sc2axi_M_AXI_RREADY;
  wire [1:0]m37_sc2axi_M_AXI_RRESP;
  wire [1023:0]m37_sc2axi_M_AXI_RUSER;
  wire m37_sc2axi_M_AXI_RVALID;
  wire [31:0]m37_sc2axi_M_AXI_WDATA;
  wire m37_sc2axi_M_AXI_WLAST;
  wire m37_sc2axi_M_AXI_WREADY;
  wire [3:0]m37_sc2axi_M_AXI_WSTRB;
  wire [1023:0]m37_sc2axi_M_AXI_WUSER;
  wire m37_sc2axi_M_AXI_WVALID;
  wire [9:0]m38_exit_pipeline_m_axi_ARADDR;
  wire [2:0]m38_exit_pipeline_m_axi_ARPROT;
  wire m38_exit_pipeline_m_axi_ARREADY;
  wire m38_exit_pipeline_m_axi_ARVALID;
  wire [9:0]m38_exit_pipeline_m_axi_AWADDR;
  wire [2:0]m38_exit_pipeline_m_axi_AWPROT;
  wire m38_exit_pipeline_m_axi_AWREADY;
  wire m38_exit_pipeline_m_axi_AWVALID;
  wire m38_exit_pipeline_m_axi_BREADY;
  wire [1:0]m38_exit_pipeline_m_axi_BRESP;
  wire m38_exit_pipeline_m_axi_BVALID;
  wire [31:0]m38_exit_pipeline_m_axi_RDATA;
  wire m38_exit_pipeline_m_axi_RREADY;
  wire [1:0]m38_exit_pipeline_m_axi_RRESP;
  wire m38_exit_pipeline_m_axi_RVALID;
  wire [31:0]m38_exit_pipeline_m_axi_WDATA;
  wire m38_exit_pipeline_m_axi_WREADY;
  wire [3:0]m38_exit_pipeline_m_axi_WSTRB;
  wire m38_exit_pipeline_m_axi_WVALID;
  wire [0:0]m38_nodes_M_SC_AR_INFO;
  wire [181:0]m38_nodes_M_SC_AR_PAYLD;
  wire m38_nodes_M_SC_AR_RECV;
  wire [0:0]m38_nodes_M_SC_AR_REQ;
  wire [0:0]m38_nodes_M_SC_AR_SEND;
  wire [0:0]m38_nodes_M_SC_AW_INFO;
  wire [181:0]m38_nodes_M_SC_AW_PAYLD;
  wire m38_nodes_M_SC_AW_RECV;
  wire [0:0]m38_nodes_M_SC_AW_REQ;
  wire [0:0]m38_nodes_M_SC_AW_SEND;
  wire [0:0]m38_nodes_M_SC_B_INFO;
  wire [8:0]m38_nodes_M_SC_B_PAYLD;
  wire [0:0]m38_nodes_M_SC_B_RECV;
  wire [0:0]m38_nodes_M_SC_B_REQ;
  wire [0:0]m38_nodes_M_SC_B_SEND;
  wire [0:0]m38_nodes_M_SC_R_INFO;
  wire [54:0]m38_nodes_M_SC_R_PAYLD;
  wire [0:0]m38_nodes_M_SC_R_RECV;
  wire [0:0]m38_nodes_M_SC_R_REQ;
  wire [0:0]m38_nodes_M_SC_R_SEND;
  wire [0:0]m38_nodes_M_SC_W_INFO;
  wire [68:0]m38_nodes_M_SC_W_PAYLD;
  wire m38_nodes_M_SC_W_RECV;
  wire [0:0]m38_nodes_M_SC_W_REQ;
  wire [0:0]m38_nodes_M_SC_W_SEND;
  wire [9:0]m38_sc2axi_M_AXI_ARADDR;
  wire [3:0]m38_sc2axi_M_AXI_ARCACHE;
  wire [2:0]m38_sc2axi_M_AXI_ARID;
  wire [7:0]m38_sc2axi_M_AXI_ARLEN;
  wire [0:0]m38_sc2axi_M_AXI_ARLOCK;
  wire [2:0]m38_sc2axi_M_AXI_ARPROT;
  wire [3:0]m38_sc2axi_M_AXI_ARQOS;
  wire m38_sc2axi_M_AXI_ARREADY;
  wire [1023:0]m38_sc2axi_M_AXI_ARUSER;
  wire m38_sc2axi_M_AXI_ARVALID;
  wire [9:0]m38_sc2axi_M_AXI_AWADDR;
  wire [3:0]m38_sc2axi_M_AXI_AWCACHE;
  wire [2:0]m38_sc2axi_M_AXI_AWID;
  wire [7:0]m38_sc2axi_M_AXI_AWLEN;
  wire [0:0]m38_sc2axi_M_AXI_AWLOCK;
  wire [2:0]m38_sc2axi_M_AXI_AWPROT;
  wire [3:0]m38_sc2axi_M_AXI_AWQOS;
  wire m38_sc2axi_M_AXI_AWREADY;
  wire [1023:0]m38_sc2axi_M_AXI_AWUSER;
  wire m38_sc2axi_M_AXI_AWVALID;
  wire [2:0]m38_sc2axi_M_AXI_BID;
  wire m38_sc2axi_M_AXI_BREADY;
  wire [1:0]m38_sc2axi_M_AXI_BRESP;
  wire [1023:0]m38_sc2axi_M_AXI_BUSER;
  wire m38_sc2axi_M_AXI_BVALID;
  wire [31:0]m38_sc2axi_M_AXI_RDATA;
  wire [2:0]m38_sc2axi_M_AXI_RID;
  wire m38_sc2axi_M_AXI_RLAST;
  wire m38_sc2axi_M_AXI_RREADY;
  wire [1:0]m38_sc2axi_M_AXI_RRESP;
  wire [1023:0]m38_sc2axi_M_AXI_RUSER;
  wire m38_sc2axi_M_AXI_RVALID;
  wire [31:0]m38_sc2axi_M_AXI_WDATA;
  wire m38_sc2axi_M_AXI_WLAST;
  wire m38_sc2axi_M_AXI_WREADY;
  wire [3:0]m38_sc2axi_M_AXI_WSTRB;
  wire [1023:0]m38_sc2axi_M_AXI_WUSER;
  wire m38_sc2axi_M_AXI_WVALID;
  wire [9:0]m39_exit_pipeline_m_axi_ARADDR;
  wire [2:0]m39_exit_pipeline_m_axi_ARPROT;
  wire m39_exit_pipeline_m_axi_ARREADY;
  wire m39_exit_pipeline_m_axi_ARVALID;
  wire [9:0]m39_exit_pipeline_m_axi_AWADDR;
  wire [2:0]m39_exit_pipeline_m_axi_AWPROT;
  wire m39_exit_pipeline_m_axi_AWREADY;
  wire m39_exit_pipeline_m_axi_AWVALID;
  wire m39_exit_pipeline_m_axi_BREADY;
  wire [1:0]m39_exit_pipeline_m_axi_BRESP;
  wire m39_exit_pipeline_m_axi_BVALID;
  wire [31:0]m39_exit_pipeline_m_axi_RDATA;
  wire m39_exit_pipeline_m_axi_RREADY;
  wire [1:0]m39_exit_pipeline_m_axi_RRESP;
  wire m39_exit_pipeline_m_axi_RVALID;
  wire [31:0]m39_exit_pipeline_m_axi_WDATA;
  wire m39_exit_pipeline_m_axi_WREADY;
  wire [3:0]m39_exit_pipeline_m_axi_WSTRB;
  wire m39_exit_pipeline_m_axi_WVALID;
  wire [0:0]m39_nodes_M_SC_AR_INFO;
  wire [181:0]m39_nodes_M_SC_AR_PAYLD;
  wire m39_nodes_M_SC_AR_RECV;
  wire [0:0]m39_nodes_M_SC_AR_REQ;
  wire [0:0]m39_nodes_M_SC_AR_SEND;
  wire [0:0]m39_nodes_M_SC_AW_INFO;
  wire [181:0]m39_nodes_M_SC_AW_PAYLD;
  wire m39_nodes_M_SC_AW_RECV;
  wire [0:0]m39_nodes_M_SC_AW_REQ;
  wire [0:0]m39_nodes_M_SC_AW_SEND;
  wire [0:0]m39_nodes_M_SC_B_INFO;
  wire [8:0]m39_nodes_M_SC_B_PAYLD;
  wire [0:0]m39_nodes_M_SC_B_RECV;
  wire [0:0]m39_nodes_M_SC_B_REQ;
  wire [0:0]m39_nodes_M_SC_B_SEND;
  wire [0:0]m39_nodes_M_SC_R_INFO;
  wire [54:0]m39_nodes_M_SC_R_PAYLD;
  wire [0:0]m39_nodes_M_SC_R_RECV;
  wire [0:0]m39_nodes_M_SC_R_REQ;
  wire [0:0]m39_nodes_M_SC_R_SEND;
  wire [0:0]m39_nodes_M_SC_W_INFO;
  wire [68:0]m39_nodes_M_SC_W_PAYLD;
  wire m39_nodes_M_SC_W_RECV;
  wire [0:0]m39_nodes_M_SC_W_REQ;
  wire [0:0]m39_nodes_M_SC_W_SEND;
  wire [9:0]m39_sc2axi_M_AXI_ARADDR;
  wire [3:0]m39_sc2axi_M_AXI_ARCACHE;
  wire [2:0]m39_sc2axi_M_AXI_ARID;
  wire [7:0]m39_sc2axi_M_AXI_ARLEN;
  wire [0:0]m39_sc2axi_M_AXI_ARLOCK;
  wire [2:0]m39_sc2axi_M_AXI_ARPROT;
  wire [3:0]m39_sc2axi_M_AXI_ARQOS;
  wire m39_sc2axi_M_AXI_ARREADY;
  wire [1023:0]m39_sc2axi_M_AXI_ARUSER;
  wire m39_sc2axi_M_AXI_ARVALID;
  wire [9:0]m39_sc2axi_M_AXI_AWADDR;
  wire [3:0]m39_sc2axi_M_AXI_AWCACHE;
  wire [2:0]m39_sc2axi_M_AXI_AWID;
  wire [7:0]m39_sc2axi_M_AXI_AWLEN;
  wire [0:0]m39_sc2axi_M_AXI_AWLOCK;
  wire [2:0]m39_sc2axi_M_AXI_AWPROT;
  wire [3:0]m39_sc2axi_M_AXI_AWQOS;
  wire m39_sc2axi_M_AXI_AWREADY;
  wire [1023:0]m39_sc2axi_M_AXI_AWUSER;
  wire m39_sc2axi_M_AXI_AWVALID;
  wire [2:0]m39_sc2axi_M_AXI_BID;
  wire m39_sc2axi_M_AXI_BREADY;
  wire [1:0]m39_sc2axi_M_AXI_BRESP;
  wire [1023:0]m39_sc2axi_M_AXI_BUSER;
  wire m39_sc2axi_M_AXI_BVALID;
  wire [31:0]m39_sc2axi_M_AXI_RDATA;
  wire [2:0]m39_sc2axi_M_AXI_RID;
  wire m39_sc2axi_M_AXI_RLAST;
  wire m39_sc2axi_M_AXI_RREADY;
  wire [1:0]m39_sc2axi_M_AXI_RRESP;
  wire [1023:0]m39_sc2axi_M_AXI_RUSER;
  wire m39_sc2axi_M_AXI_RVALID;
  wire [31:0]m39_sc2axi_M_AXI_WDATA;
  wire m39_sc2axi_M_AXI_WLAST;
  wire m39_sc2axi_M_AXI_WREADY;
  wire [3:0]m39_sc2axi_M_AXI_WSTRB;
  wire [1023:0]m39_sc2axi_M_AXI_WUSER;
  wire m39_sc2axi_M_AXI_WVALID;
  wire [9:0]m40_exit_pipeline_m_axi_ARADDR;
  wire [2:0]m40_exit_pipeline_m_axi_ARPROT;
  wire m40_exit_pipeline_m_axi_ARREADY;
  wire m40_exit_pipeline_m_axi_ARVALID;
  wire [9:0]m40_exit_pipeline_m_axi_AWADDR;
  wire [2:0]m40_exit_pipeline_m_axi_AWPROT;
  wire m40_exit_pipeline_m_axi_AWREADY;
  wire m40_exit_pipeline_m_axi_AWVALID;
  wire m40_exit_pipeline_m_axi_BREADY;
  wire [1:0]m40_exit_pipeline_m_axi_BRESP;
  wire m40_exit_pipeline_m_axi_BVALID;
  wire [31:0]m40_exit_pipeline_m_axi_RDATA;
  wire m40_exit_pipeline_m_axi_RREADY;
  wire [1:0]m40_exit_pipeline_m_axi_RRESP;
  wire m40_exit_pipeline_m_axi_RVALID;
  wire [31:0]m40_exit_pipeline_m_axi_WDATA;
  wire m40_exit_pipeline_m_axi_WREADY;
  wire [3:0]m40_exit_pipeline_m_axi_WSTRB;
  wire m40_exit_pipeline_m_axi_WVALID;
  wire [0:0]m40_nodes_M_SC_AR_INFO;
  wire [181:0]m40_nodes_M_SC_AR_PAYLD;
  wire m40_nodes_M_SC_AR_RECV;
  wire [0:0]m40_nodes_M_SC_AR_REQ;
  wire [0:0]m40_nodes_M_SC_AR_SEND;
  wire [0:0]m40_nodes_M_SC_AW_INFO;
  wire [181:0]m40_nodes_M_SC_AW_PAYLD;
  wire m40_nodes_M_SC_AW_RECV;
  wire [0:0]m40_nodes_M_SC_AW_REQ;
  wire [0:0]m40_nodes_M_SC_AW_SEND;
  wire [0:0]m40_nodes_M_SC_B_INFO;
  wire [8:0]m40_nodes_M_SC_B_PAYLD;
  wire [0:0]m40_nodes_M_SC_B_RECV;
  wire [0:0]m40_nodes_M_SC_B_REQ;
  wire [0:0]m40_nodes_M_SC_B_SEND;
  wire [0:0]m40_nodes_M_SC_R_INFO;
  wire [54:0]m40_nodes_M_SC_R_PAYLD;
  wire [0:0]m40_nodes_M_SC_R_RECV;
  wire [0:0]m40_nodes_M_SC_R_REQ;
  wire [0:0]m40_nodes_M_SC_R_SEND;
  wire [0:0]m40_nodes_M_SC_W_INFO;
  wire [68:0]m40_nodes_M_SC_W_PAYLD;
  wire m40_nodes_M_SC_W_RECV;
  wire [0:0]m40_nodes_M_SC_W_REQ;
  wire [0:0]m40_nodes_M_SC_W_SEND;
  wire [9:0]m40_sc2axi_M_AXI_ARADDR;
  wire [3:0]m40_sc2axi_M_AXI_ARCACHE;
  wire [2:0]m40_sc2axi_M_AXI_ARID;
  wire [7:0]m40_sc2axi_M_AXI_ARLEN;
  wire [0:0]m40_sc2axi_M_AXI_ARLOCK;
  wire [2:0]m40_sc2axi_M_AXI_ARPROT;
  wire [3:0]m40_sc2axi_M_AXI_ARQOS;
  wire m40_sc2axi_M_AXI_ARREADY;
  wire [1023:0]m40_sc2axi_M_AXI_ARUSER;
  wire m40_sc2axi_M_AXI_ARVALID;
  wire [9:0]m40_sc2axi_M_AXI_AWADDR;
  wire [3:0]m40_sc2axi_M_AXI_AWCACHE;
  wire [2:0]m40_sc2axi_M_AXI_AWID;
  wire [7:0]m40_sc2axi_M_AXI_AWLEN;
  wire [0:0]m40_sc2axi_M_AXI_AWLOCK;
  wire [2:0]m40_sc2axi_M_AXI_AWPROT;
  wire [3:0]m40_sc2axi_M_AXI_AWQOS;
  wire m40_sc2axi_M_AXI_AWREADY;
  wire [1023:0]m40_sc2axi_M_AXI_AWUSER;
  wire m40_sc2axi_M_AXI_AWVALID;
  wire [2:0]m40_sc2axi_M_AXI_BID;
  wire m40_sc2axi_M_AXI_BREADY;
  wire [1:0]m40_sc2axi_M_AXI_BRESP;
  wire [1023:0]m40_sc2axi_M_AXI_BUSER;
  wire m40_sc2axi_M_AXI_BVALID;
  wire [31:0]m40_sc2axi_M_AXI_RDATA;
  wire [2:0]m40_sc2axi_M_AXI_RID;
  wire m40_sc2axi_M_AXI_RLAST;
  wire m40_sc2axi_M_AXI_RREADY;
  wire [1:0]m40_sc2axi_M_AXI_RRESP;
  wire [1023:0]m40_sc2axi_M_AXI_RUSER;
  wire m40_sc2axi_M_AXI_RVALID;
  wire [31:0]m40_sc2axi_M_AXI_WDATA;
  wire m40_sc2axi_M_AXI_WLAST;
  wire m40_sc2axi_M_AXI_WREADY;
  wire [3:0]m40_sc2axi_M_AXI_WSTRB;
  wire [1023:0]m40_sc2axi_M_AXI_WUSER;
  wire m40_sc2axi_M_AXI_WVALID;
  wire [9:0]m41_exit_pipeline_m_axi_ARADDR;
  wire [2:0]m41_exit_pipeline_m_axi_ARPROT;
  wire m41_exit_pipeline_m_axi_ARREADY;
  wire m41_exit_pipeline_m_axi_ARVALID;
  wire [9:0]m41_exit_pipeline_m_axi_AWADDR;
  wire [2:0]m41_exit_pipeline_m_axi_AWPROT;
  wire m41_exit_pipeline_m_axi_AWREADY;
  wire m41_exit_pipeline_m_axi_AWVALID;
  wire m41_exit_pipeline_m_axi_BREADY;
  wire [1:0]m41_exit_pipeline_m_axi_BRESP;
  wire m41_exit_pipeline_m_axi_BVALID;
  wire [31:0]m41_exit_pipeline_m_axi_RDATA;
  wire m41_exit_pipeline_m_axi_RREADY;
  wire [1:0]m41_exit_pipeline_m_axi_RRESP;
  wire m41_exit_pipeline_m_axi_RVALID;
  wire [31:0]m41_exit_pipeline_m_axi_WDATA;
  wire m41_exit_pipeline_m_axi_WREADY;
  wire [3:0]m41_exit_pipeline_m_axi_WSTRB;
  wire m41_exit_pipeline_m_axi_WVALID;
  wire [0:0]m41_nodes_M_SC_AR_INFO;
  wire [181:0]m41_nodes_M_SC_AR_PAYLD;
  wire m41_nodes_M_SC_AR_RECV;
  wire [0:0]m41_nodes_M_SC_AR_REQ;
  wire [0:0]m41_nodes_M_SC_AR_SEND;
  wire [0:0]m41_nodes_M_SC_AW_INFO;
  wire [181:0]m41_nodes_M_SC_AW_PAYLD;
  wire m41_nodes_M_SC_AW_RECV;
  wire [0:0]m41_nodes_M_SC_AW_REQ;
  wire [0:0]m41_nodes_M_SC_AW_SEND;
  wire [0:0]m41_nodes_M_SC_B_INFO;
  wire [8:0]m41_nodes_M_SC_B_PAYLD;
  wire [0:0]m41_nodes_M_SC_B_RECV;
  wire [0:0]m41_nodes_M_SC_B_REQ;
  wire [0:0]m41_nodes_M_SC_B_SEND;
  wire [0:0]m41_nodes_M_SC_R_INFO;
  wire [54:0]m41_nodes_M_SC_R_PAYLD;
  wire [0:0]m41_nodes_M_SC_R_RECV;
  wire [0:0]m41_nodes_M_SC_R_REQ;
  wire [0:0]m41_nodes_M_SC_R_SEND;
  wire [0:0]m41_nodes_M_SC_W_INFO;
  wire [68:0]m41_nodes_M_SC_W_PAYLD;
  wire m41_nodes_M_SC_W_RECV;
  wire [0:0]m41_nodes_M_SC_W_REQ;
  wire [0:0]m41_nodes_M_SC_W_SEND;
  wire [9:0]m41_sc2axi_M_AXI_ARADDR;
  wire [3:0]m41_sc2axi_M_AXI_ARCACHE;
  wire [2:0]m41_sc2axi_M_AXI_ARID;
  wire [7:0]m41_sc2axi_M_AXI_ARLEN;
  wire [0:0]m41_sc2axi_M_AXI_ARLOCK;
  wire [2:0]m41_sc2axi_M_AXI_ARPROT;
  wire [3:0]m41_sc2axi_M_AXI_ARQOS;
  wire m41_sc2axi_M_AXI_ARREADY;
  wire [1023:0]m41_sc2axi_M_AXI_ARUSER;
  wire m41_sc2axi_M_AXI_ARVALID;
  wire [9:0]m41_sc2axi_M_AXI_AWADDR;
  wire [3:0]m41_sc2axi_M_AXI_AWCACHE;
  wire [2:0]m41_sc2axi_M_AXI_AWID;
  wire [7:0]m41_sc2axi_M_AXI_AWLEN;
  wire [0:0]m41_sc2axi_M_AXI_AWLOCK;
  wire [2:0]m41_sc2axi_M_AXI_AWPROT;
  wire [3:0]m41_sc2axi_M_AXI_AWQOS;
  wire m41_sc2axi_M_AXI_AWREADY;
  wire [1023:0]m41_sc2axi_M_AXI_AWUSER;
  wire m41_sc2axi_M_AXI_AWVALID;
  wire [2:0]m41_sc2axi_M_AXI_BID;
  wire m41_sc2axi_M_AXI_BREADY;
  wire [1:0]m41_sc2axi_M_AXI_BRESP;
  wire [1023:0]m41_sc2axi_M_AXI_BUSER;
  wire m41_sc2axi_M_AXI_BVALID;
  wire [31:0]m41_sc2axi_M_AXI_RDATA;
  wire [2:0]m41_sc2axi_M_AXI_RID;
  wire m41_sc2axi_M_AXI_RLAST;
  wire m41_sc2axi_M_AXI_RREADY;
  wire [1:0]m41_sc2axi_M_AXI_RRESP;
  wire [1023:0]m41_sc2axi_M_AXI_RUSER;
  wire m41_sc2axi_M_AXI_RVALID;
  wire [31:0]m41_sc2axi_M_AXI_WDATA;
  wire m41_sc2axi_M_AXI_WLAST;
  wire m41_sc2axi_M_AXI_WREADY;
  wire [3:0]m41_sc2axi_M_AXI_WSTRB;
  wire [1023:0]m41_sc2axi_M_AXI_WUSER;
  wire m41_sc2axi_M_AXI_WVALID;
  wire [9:0]m42_exit_pipeline_m_axi_ARADDR;
  wire [2:0]m42_exit_pipeline_m_axi_ARPROT;
  wire m42_exit_pipeline_m_axi_ARREADY;
  wire m42_exit_pipeline_m_axi_ARVALID;
  wire [9:0]m42_exit_pipeline_m_axi_AWADDR;
  wire [2:0]m42_exit_pipeline_m_axi_AWPROT;
  wire m42_exit_pipeline_m_axi_AWREADY;
  wire m42_exit_pipeline_m_axi_AWVALID;
  wire m42_exit_pipeline_m_axi_BREADY;
  wire [1:0]m42_exit_pipeline_m_axi_BRESP;
  wire m42_exit_pipeline_m_axi_BVALID;
  wire [31:0]m42_exit_pipeline_m_axi_RDATA;
  wire m42_exit_pipeline_m_axi_RREADY;
  wire [1:0]m42_exit_pipeline_m_axi_RRESP;
  wire m42_exit_pipeline_m_axi_RVALID;
  wire [31:0]m42_exit_pipeline_m_axi_WDATA;
  wire m42_exit_pipeline_m_axi_WREADY;
  wire [3:0]m42_exit_pipeline_m_axi_WSTRB;
  wire m42_exit_pipeline_m_axi_WVALID;
  wire [0:0]m42_nodes_M_SC_AR_INFO;
  wire [181:0]m42_nodes_M_SC_AR_PAYLD;
  wire m42_nodes_M_SC_AR_RECV;
  wire [0:0]m42_nodes_M_SC_AR_REQ;
  wire [0:0]m42_nodes_M_SC_AR_SEND;
  wire [0:0]m42_nodes_M_SC_AW_INFO;
  wire [181:0]m42_nodes_M_SC_AW_PAYLD;
  wire m42_nodes_M_SC_AW_RECV;
  wire [0:0]m42_nodes_M_SC_AW_REQ;
  wire [0:0]m42_nodes_M_SC_AW_SEND;
  wire [0:0]m42_nodes_M_SC_B_INFO;
  wire [8:0]m42_nodes_M_SC_B_PAYLD;
  wire [0:0]m42_nodes_M_SC_B_RECV;
  wire [0:0]m42_nodes_M_SC_B_REQ;
  wire [0:0]m42_nodes_M_SC_B_SEND;
  wire [0:0]m42_nodes_M_SC_R_INFO;
  wire [54:0]m42_nodes_M_SC_R_PAYLD;
  wire [0:0]m42_nodes_M_SC_R_RECV;
  wire [0:0]m42_nodes_M_SC_R_REQ;
  wire [0:0]m42_nodes_M_SC_R_SEND;
  wire [0:0]m42_nodes_M_SC_W_INFO;
  wire [68:0]m42_nodes_M_SC_W_PAYLD;
  wire m42_nodes_M_SC_W_RECV;
  wire [0:0]m42_nodes_M_SC_W_REQ;
  wire [0:0]m42_nodes_M_SC_W_SEND;
  wire [9:0]m42_sc2axi_M_AXI_ARADDR;
  wire [3:0]m42_sc2axi_M_AXI_ARCACHE;
  wire [2:0]m42_sc2axi_M_AXI_ARID;
  wire [7:0]m42_sc2axi_M_AXI_ARLEN;
  wire [0:0]m42_sc2axi_M_AXI_ARLOCK;
  wire [2:0]m42_sc2axi_M_AXI_ARPROT;
  wire [3:0]m42_sc2axi_M_AXI_ARQOS;
  wire m42_sc2axi_M_AXI_ARREADY;
  wire [1023:0]m42_sc2axi_M_AXI_ARUSER;
  wire m42_sc2axi_M_AXI_ARVALID;
  wire [9:0]m42_sc2axi_M_AXI_AWADDR;
  wire [3:0]m42_sc2axi_M_AXI_AWCACHE;
  wire [2:0]m42_sc2axi_M_AXI_AWID;
  wire [7:0]m42_sc2axi_M_AXI_AWLEN;
  wire [0:0]m42_sc2axi_M_AXI_AWLOCK;
  wire [2:0]m42_sc2axi_M_AXI_AWPROT;
  wire [3:0]m42_sc2axi_M_AXI_AWQOS;
  wire m42_sc2axi_M_AXI_AWREADY;
  wire [1023:0]m42_sc2axi_M_AXI_AWUSER;
  wire m42_sc2axi_M_AXI_AWVALID;
  wire [2:0]m42_sc2axi_M_AXI_BID;
  wire m42_sc2axi_M_AXI_BREADY;
  wire [1:0]m42_sc2axi_M_AXI_BRESP;
  wire [1023:0]m42_sc2axi_M_AXI_BUSER;
  wire m42_sc2axi_M_AXI_BVALID;
  wire [31:0]m42_sc2axi_M_AXI_RDATA;
  wire [2:0]m42_sc2axi_M_AXI_RID;
  wire m42_sc2axi_M_AXI_RLAST;
  wire m42_sc2axi_M_AXI_RREADY;
  wire [1:0]m42_sc2axi_M_AXI_RRESP;
  wire [1023:0]m42_sc2axi_M_AXI_RUSER;
  wire m42_sc2axi_M_AXI_RVALID;
  wire [31:0]m42_sc2axi_M_AXI_WDATA;
  wire m42_sc2axi_M_AXI_WLAST;
  wire m42_sc2axi_M_AXI_WREADY;
  wire [3:0]m42_sc2axi_M_AXI_WSTRB;
  wire [1023:0]m42_sc2axi_M_AXI_WUSER;
  wire m42_sc2axi_M_AXI_WVALID;
  wire [9:0]m43_exit_pipeline_m_axi_ARADDR;
  wire [2:0]m43_exit_pipeline_m_axi_ARPROT;
  wire m43_exit_pipeline_m_axi_ARREADY;
  wire m43_exit_pipeline_m_axi_ARVALID;
  wire [9:0]m43_exit_pipeline_m_axi_AWADDR;
  wire [2:0]m43_exit_pipeline_m_axi_AWPROT;
  wire m43_exit_pipeline_m_axi_AWREADY;
  wire m43_exit_pipeline_m_axi_AWVALID;
  wire m43_exit_pipeline_m_axi_BREADY;
  wire [1:0]m43_exit_pipeline_m_axi_BRESP;
  wire m43_exit_pipeline_m_axi_BVALID;
  wire [31:0]m43_exit_pipeline_m_axi_RDATA;
  wire m43_exit_pipeline_m_axi_RREADY;
  wire [1:0]m43_exit_pipeline_m_axi_RRESP;
  wire m43_exit_pipeline_m_axi_RVALID;
  wire [31:0]m43_exit_pipeline_m_axi_WDATA;
  wire m43_exit_pipeline_m_axi_WREADY;
  wire [3:0]m43_exit_pipeline_m_axi_WSTRB;
  wire m43_exit_pipeline_m_axi_WVALID;
  wire [0:0]m43_nodes_M_SC_AR_INFO;
  wire [181:0]m43_nodes_M_SC_AR_PAYLD;
  wire m43_nodes_M_SC_AR_RECV;
  wire [0:0]m43_nodes_M_SC_AR_REQ;
  wire [0:0]m43_nodes_M_SC_AR_SEND;
  wire [0:0]m43_nodes_M_SC_AW_INFO;
  wire [181:0]m43_nodes_M_SC_AW_PAYLD;
  wire m43_nodes_M_SC_AW_RECV;
  wire [0:0]m43_nodes_M_SC_AW_REQ;
  wire [0:0]m43_nodes_M_SC_AW_SEND;
  wire [0:0]m43_nodes_M_SC_B_INFO;
  wire [8:0]m43_nodes_M_SC_B_PAYLD;
  wire [0:0]m43_nodes_M_SC_B_RECV;
  wire [0:0]m43_nodes_M_SC_B_REQ;
  wire [0:0]m43_nodes_M_SC_B_SEND;
  wire [0:0]m43_nodes_M_SC_R_INFO;
  wire [54:0]m43_nodes_M_SC_R_PAYLD;
  wire [0:0]m43_nodes_M_SC_R_RECV;
  wire [0:0]m43_nodes_M_SC_R_REQ;
  wire [0:0]m43_nodes_M_SC_R_SEND;
  wire [0:0]m43_nodes_M_SC_W_INFO;
  wire [68:0]m43_nodes_M_SC_W_PAYLD;
  wire m43_nodes_M_SC_W_RECV;
  wire [0:0]m43_nodes_M_SC_W_REQ;
  wire [0:0]m43_nodes_M_SC_W_SEND;
  wire [9:0]m43_sc2axi_M_AXI_ARADDR;
  wire [3:0]m43_sc2axi_M_AXI_ARCACHE;
  wire [2:0]m43_sc2axi_M_AXI_ARID;
  wire [7:0]m43_sc2axi_M_AXI_ARLEN;
  wire [0:0]m43_sc2axi_M_AXI_ARLOCK;
  wire [2:0]m43_sc2axi_M_AXI_ARPROT;
  wire [3:0]m43_sc2axi_M_AXI_ARQOS;
  wire m43_sc2axi_M_AXI_ARREADY;
  wire [1023:0]m43_sc2axi_M_AXI_ARUSER;
  wire m43_sc2axi_M_AXI_ARVALID;
  wire [9:0]m43_sc2axi_M_AXI_AWADDR;
  wire [3:0]m43_sc2axi_M_AXI_AWCACHE;
  wire [2:0]m43_sc2axi_M_AXI_AWID;
  wire [7:0]m43_sc2axi_M_AXI_AWLEN;
  wire [0:0]m43_sc2axi_M_AXI_AWLOCK;
  wire [2:0]m43_sc2axi_M_AXI_AWPROT;
  wire [3:0]m43_sc2axi_M_AXI_AWQOS;
  wire m43_sc2axi_M_AXI_AWREADY;
  wire [1023:0]m43_sc2axi_M_AXI_AWUSER;
  wire m43_sc2axi_M_AXI_AWVALID;
  wire [2:0]m43_sc2axi_M_AXI_BID;
  wire m43_sc2axi_M_AXI_BREADY;
  wire [1:0]m43_sc2axi_M_AXI_BRESP;
  wire [1023:0]m43_sc2axi_M_AXI_BUSER;
  wire m43_sc2axi_M_AXI_BVALID;
  wire [31:0]m43_sc2axi_M_AXI_RDATA;
  wire [2:0]m43_sc2axi_M_AXI_RID;
  wire m43_sc2axi_M_AXI_RLAST;
  wire m43_sc2axi_M_AXI_RREADY;
  wire [1:0]m43_sc2axi_M_AXI_RRESP;
  wire [1023:0]m43_sc2axi_M_AXI_RUSER;
  wire m43_sc2axi_M_AXI_RVALID;
  wire [31:0]m43_sc2axi_M_AXI_WDATA;
  wire m43_sc2axi_M_AXI_WLAST;
  wire m43_sc2axi_M_AXI_WREADY;
  wire [3:0]m43_sc2axi_M_AXI_WSTRB;
  wire [1023:0]m43_sc2axi_M_AXI_WUSER;
  wire m43_sc2axi_M_AXI_WVALID;
  wire [9:0]m44_exit_pipeline_m_axi_ARADDR;
  wire [2:0]m44_exit_pipeline_m_axi_ARPROT;
  wire m44_exit_pipeline_m_axi_ARREADY;
  wire m44_exit_pipeline_m_axi_ARVALID;
  wire [9:0]m44_exit_pipeline_m_axi_AWADDR;
  wire [2:0]m44_exit_pipeline_m_axi_AWPROT;
  wire m44_exit_pipeline_m_axi_AWREADY;
  wire m44_exit_pipeline_m_axi_AWVALID;
  wire m44_exit_pipeline_m_axi_BREADY;
  wire [1:0]m44_exit_pipeline_m_axi_BRESP;
  wire m44_exit_pipeline_m_axi_BVALID;
  wire [31:0]m44_exit_pipeline_m_axi_RDATA;
  wire m44_exit_pipeline_m_axi_RREADY;
  wire [1:0]m44_exit_pipeline_m_axi_RRESP;
  wire m44_exit_pipeline_m_axi_RVALID;
  wire [31:0]m44_exit_pipeline_m_axi_WDATA;
  wire m44_exit_pipeline_m_axi_WREADY;
  wire [3:0]m44_exit_pipeline_m_axi_WSTRB;
  wire m44_exit_pipeline_m_axi_WVALID;
  wire [0:0]m44_nodes_M_SC_AR_INFO;
  wire [181:0]m44_nodes_M_SC_AR_PAYLD;
  wire m44_nodes_M_SC_AR_RECV;
  wire [0:0]m44_nodes_M_SC_AR_REQ;
  wire [0:0]m44_nodes_M_SC_AR_SEND;
  wire [0:0]m44_nodes_M_SC_AW_INFO;
  wire [181:0]m44_nodes_M_SC_AW_PAYLD;
  wire m44_nodes_M_SC_AW_RECV;
  wire [0:0]m44_nodes_M_SC_AW_REQ;
  wire [0:0]m44_nodes_M_SC_AW_SEND;
  wire [0:0]m44_nodes_M_SC_B_INFO;
  wire [8:0]m44_nodes_M_SC_B_PAYLD;
  wire [0:0]m44_nodes_M_SC_B_RECV;
  wire [0:0]m44_nodes_M_SC_B_REQ;
  wire [0:0]m44_nodes_M_SC_B_SEND;
  wire [0:0]m44_nodes_M_SC_R_INFO;
  wire [54:0]m44_nodes_M_SC_R_PAYLD;
  wire [0:0]m44_nodes_M_SC_R_RECV;
  wire [0:0]m44_nodes_M_SC_R_REQ;
  wire [0:0]m44_nodes_M_SC_R_SEND;
  wire [0:0]m44_nodes_M_SC_W_INFO;
  wire [68:0]m44_nodes_M_SC_W_PAYLD;
  wire m44_nodes_M_SC_W_RECV;
  wire [0:0]m44_nodes_M_SC_W_REQ;
  wire [0:0]m44_nodes_M_SC_W_SEND;
  wire [9:0]m44_sc2axi_M_AXI_ARADDR;
  wire [3:0]m44_sc2axi_M_AXI_ARCACHE;
  wire [2:0]m44_sc2axi_M_AXI_ARID;
  wire [7:0]m44_sc2axi_M_AXI_ARLEN;
  wire [0:0]m44_sc2axi_M_AXI_ARLOCK;
  wire [2:0]m44_sc2axi_M_AXI_ARPROT;
  wire [3:0]m44_sc2axi_M_AXI_ARQOS;
  wire m44_sc2axi_M_AXI_ARREADY;
  wire [1023:0]m44_sc2axi_M_AXI_ARUSER;
  wire m44_sc2axi_M_AXI_ARVALID;
  wire [9:0]m44_sc2axi_M_AXI_AWADDR;
  wire [3:0]m44_sc2axi_M_AXI_AWCACHE;
  wire [2:0]m44_sc2axi_M_AXI_AWID;
  wire [7:0]m44_sc2axi_M_AXI_AWLEN;
  wire [0:0]m44_sc2axi_M_AXI_AWLOCK;
  wire [2:0]m44_sc2axi_M_AXI_AWPROT;
  wire [3:0]m44_sc2axi_M_AXI_AWQOS;
  wire m44_sc2axi_M_AXI_AWREADY;
  wire [1023:0]m44_sc2axi_M_AXI_AWUSER;
  wire m44_sc2axi_M_AXI_AWVALID;
  wire [2:0]m44_sc2axi_M_AXI_BID;
  wire m44_sc2axi_M_AXI_BREADY;
  wire [1:0]m44_sc2axi_M_AXI_BRESP;
  wire [1023:0]m44_sc2axi_M_AXI_BUSER;
  wire m44_sc2axi_M_AXI_BVALID;
  wire [31:0]m44_sc2axi_M_AXI_RDATA;
  wire [2:0]m44_sc2axi_M_AXI_RID;
  wire m44_sc2axi_M_AXI_RLAST;
  wire m44_sc2axi_M_AXI_RREADY;
  wire [1:0]m44_sc2axi_M_AXI_RRESP;
  wire [1023:0]m44_sc2axi_M_AXI_RUSER;
  wire m44_sc2axi_M_AXI_RVALID;
  wire [31:0]m44_sc2axi_M_AXI_WDATA;
  wire m44_sc2axi_M_AXI_WLAST;
  wire m44_sc2axi_M_AXI_WREADY;
  wire [3:0]m44_sc2axi_M_AXI_WSTRB;
  wire [1023:0]m44_sc2axi_M_AXI_WUSER;
  wire m44_sc2axi_M_AXI_WVALID;
  wire [9:0]m45_exit_pipeline_m_axi_ARADDR;
  wire [2:0]m45_exit_pipeline_m_axi_ARPROT;
  wire m45_exit_pipeline_m_axi_ARREADY;
  wire m45_exit_pipeline_m_axi_ARVALID;
  wire [9:0]m45_exit_pipeline_m_axi_AWADDR;
  wire [2:0]m45_exit_pipeline_m_axi_AWPROT;
  wire m45_exit_pipeline_m_axi_AWREADY;
  wire m45_exit_pipeline_m_axi_AWVALID;
  wire m45_exit_pipeline_m_axi_BREADY;
  wire [1:0]m45_exit_pipeline_m_axi_BRESP;
  wire m45_exit_pipeline_m_axi_BVALID;
  wire [31:0]m45_exit_pipeline_m_axi_RDATA;
  wire m45_exit_pipeline_m_axi_RREADY;
  wire [1:0]m45_exit_pipeline_m_axi_RRESP;
  wire m45_exit_pipeline_m_axi_RVALID;
  wire [31:0]m45_exit_pipeline_m_axi_WDATA;
  wire m45_exit_pipeline_m_axi_WREADY;
  wire [3:0]m45_exit_pipeline_m_axi_WSTRB;
  wire m45_exit_pipeline_m_axi_WVALID;
  wire [0:0]m45_nodes_M_SC_AR_INFO;
  wire [181:0]m45_nodes_M_SC_AR_PAYLD;
  wire m45_nodes_M_SC_AR_RECV;
  wire [0:0]m45_nodes_M_SC_AR_REQ;
  wire [0:0]m45_nodes_M_SC_AR_SEND;
  wire [0:0]m45_nodes_M_SC_AW_INFO;
  wire [181:0]m45_nodes_M_SC_AW_PAYLD;
  wire m45_nodes_M_SC_AW_RECV;
  wire [0:0]m45_nodes_M_SC_AW_REQ;
  wire [0:0]m45_nodes_M_SC_AW_SEND;
  wire [0:0]m45_nodes_M_SC_B_INFO;
  wire [8:0]m45_nodes_M_SC_B_PAYLD;
  wire [0:0]m45_nodes_M_SC_B_RECV;
  wire [0:0]m45_nodes_M_SC_B_REQ;
  wire [0:0]m45_nodes_M_SC_B_SEND;
  wire [0:0]m45_nodes_M_SC_R_INFO;
  wire [54:0]m45_nodes_M_SC_R_PAYLD;
  wire [0:0]m45_nodes_M_SC_R_RECV;
  wire [0:0]m45_nodes_M_SC_R_REQ;
  wire [0:0]m45_nodes_M_SC_R_SEND;
  wire [0:0]m45_nodes_M_SC_W_INFO;
  wire [68:0]m45_nodes_M_SC_W_PAYLD;
  wire m45_nodes_M_SC_W_RECV;
  wire [0:0]m45_nodes_M_SC_W_REQ;
  wire [0:0]m45_nodes_M_SC_W_SEND;
  wire [9:0]m45_sc2axi_M_AXI_ARADDR;
  wire [3:0]m45_sc2axi_M_AXI_ARCACHE;
  wire [2:0]m45_sc2axi_M_AXI_ARID;
  wire [7:0]m45_sc2axi_M_AXI_ARLEN;
  wire [0:0]m45_sc2axi_M_AXI_ARLOCK;
  wire [2:0]m45_sc2axi_M_AXI_ARPROT;
  wire [3:0]m45_sc2axi_M_AXI_ARQOS;
  wire m45_sc2axi_M_AXI_ARREADY;
  wire [1023:0]m45_sc2axi_M_AXI_ARUSER;
  wire m45_sc2axi_M_AXI_ARVALID;
  wire [9:0]m45_sc2axi_M_AXI_AWADDR;
  wire [3:0]m45_sc2axi_M_AXI_AWCACHE;
  wire [2:0]m45_sc2axi_M_AXI_AWID;
  wire [7:0]m45_sc2axi_M_AXI_AWLEN;
  wire [0:0]m45_sc2axi_M_AXI_AWLOCK;
  wire [2:0]m45_sc2axi_M_AXI_AWPROT;
  wire [3:0]m45_sc2axi_M_AXI_AWQOS;
  wire m45_sc2axi_M_AXI_AWREADY;
  wire [1023:0]m45_sc2axi_M_AXI_AWUSER;
  wire m45_sc2axi_M_AXI_AWVALID;
  wire [2:0]m45_sc2axi_M_AXI_BID;
  wire m45_sc2axi_M_AXI_BREADY;
  wire [1:0]m45_sc2axi_M_AXI_BRESP;
  wire [1023:0]m45_sc2axi_M_AXI_BUSER;
  wire m45_sc2axi_M_AXI_BVALID;
  wire [31:0]m45_sc2axi_M_AXI_RDATA;
  wire [2:0]m45_sc2axi_M_AXI_RID;
  wire m45_sc2axi_M_AXI_RLAST;
  wire m45_sc2axi_M_AXI_RREADY;
  wire [1:0]m45_sc2axi_M_AXI_RRESP;
  wire [1023:0]m45_sc2axi_M_AXI_RUSER;
  wire m45_sc2axi_M_AXI_RVALID;
  wire [31:0]m45_sc2axi_M_AXI_WDATA;
  wire m45_sc2axi_M_AXI_WLAST;
  wire m45_sc2axi_M_AXI_WREADY;
  wire [3:0]m45_sc2axi_M_AXI_WSTRB;
  wire [1023:0]m45_sc2axi_M_AXI_WUSER;
  wire m45_sc2axi_M_AXI_WVALID;
  wire [9:0]m46_exit_pipeline_m_axi_ARADDR;
  wire [2:0]m46_exit_pipeline_m_axi_ARPROT;
  wire m46_exit_pipeline_m_axi_ARREADY;
  wire m46_exit_pipeline_m_axi_ARVALID;
  wire [9:0]m46_exit_pipeline_m_axi_AWADDR;
  wire [2:0]m46_exit_pipeline_m_axi_AWPROT;
  wire m46_exit_pipeline_m_axi_AWREADY;
  wire m46_exit_pipeline_m_axi_AWVALID;
  wire m46_exit_pipeline_m_axi_BREADY;
  wire [1:0]m46_exit_pipeline_m_axi_BRESP;
  wire m46_exit_pipeline_m_axi_BVALID;
  wire [31:0]m46_exit_pipeline_m_axi_RDATA;
  wire m46_exit_pipeline_m_axi_RREADY;
  wire [1:0]m46_exit_pipeline_m_axi_RRESP;
  wire m46_exit_pipeline_m_axi_RVALID;
  wire [31:0]m46_exit_pipeline_m_axi_WDATA;
  wire m46_exit_pipeline_m_axi_WREADY;
  wire [3:0]m46_exit_pipeline_m_axi_WSTRB;
  wire m46_exit_pipeline_m_axi_WVALID;
  wire [0:0]m46_nodes_M_SC_AR_INFO;
  wire [181:0]m46_nodes_M_SC_AR_PAYLD;
  wire m46_nodes_M_SC_AR_RECV;
  wire [0:0]m46_nodes_M_SC_AR_REQ;
  wire [0:0]m46_nodes_M_SC_AR_SEND;
  wire [0:0]m46_nodes_M_SC_AW_INFO;
  wire [181:0]m46_nodes_M_SC_AW_PAYLD;
  wire m46_nodes_M_SC_AW_RECV;
  wire [0:0]m46_nodes_M_SC_AW_REQ;
  wire [0:0]m46_nodes_M_SC_AW_SEND;
  wire [0:0]m46_nodes_M_SC_B_INFO;
  wire [8:0]m46_nodes_M_SC_B_PAYLD;
  wire [0:0]m46_nodes_M_SC_B_RECV;
  wire [0:0]m46_nodes_M_SC_B_REQ;
  wire [0:0]m46_nodes_M_SC_B_SEND;
  wire [0:0]m46_nodes_M_SC_R_INFO;
  wire [54:0]m46_nodes_M_SC_R_PAYLD;
  wire [0:0]m46_nodes_M_SC_R_RECV;
  wire [0:0]m46_nodes_M_SC_R_REQ;
  wire [0:0]m46_nodes_M_SC_R_SEND;
  wire [0:0]m46_nodes_M_SC_W_INFO;
  wire [68:0]m46_nodes_M_SC_W_PAYLD;
  wire m46_nodes_M_SC_W_RECV;
  wire [0:0]m46_nodes_M_SC_W_REQ;
  wire [0:0]m46_nodes_M_SC_W_SEND;
  wire [9:0]m46_sc2axi_M_AXI_ARADDR;
  wire [3:0]m46_sc2axi_M_AXI_ARCACHE;
  wire [2:0]m46_sc2axi_M_AXI_ARID;
  wire [7:0]m46_sc2axi_M_AXI_ARLEN;
  wire [0:0]m46_sc2axi_M_AXI_ARLOCK;
  wire [2:0]m46_sc2axi_M_AXI_ARPROT;
  wire [3:0]m46_sc2axi_M_AXI_ARQOS;
  wire m46_sc2axi_M_AXI_ARREADY;
  wire [1023:0]m46_sc2axi_M_AXI_ARUSER;
  wire m46_sc2axi_M_AXI_ARVALID;
  wire [9:0]m46_sc2axi_M_AXI_AWADDR;
  wire [3:0]m46_sc2axi_M_AXI_AWCACHE;
  wire [2:0]m46_sc2axi_M_AXI_AWID;
  wire [7:0]m46_sc2axi_M_AXI_AWLEN;
  wire [0:0]m46_sc2axi_M_AXI_AWLOCK;
  wire [2:0]m46_sc2axi_M_AXI_AWPROT;
  wire [3:0]m46_sc2axi_M_AXI_AWQOS;
  wire m46_sc2axi_M_AXI_AWREADY;
  wire [1023:0]m46_sc2axi_M_AXI_AWUSER;
  wire m46_sc2axi_M_AXI_AWVALID;
  wire [2:0]m46_sc2axi_M_AXI_BID;
  wire m46_sc2axi_M_AXI_BREADY;
  wire [1:0]m46_sc2axi_M_AXI_BRESP;
  wire [1023:0]m46_sc2axi_M_AXI_BUSER;
  wire m46_sc2axi_M_AXI_BVALID;
  wire [31:0]m46_sc2axi_M_AXI_RDATA;
  wire [2:0]m46_sc2axi_M_AXI_RID;
  wire m46_sc2axi_M_AXI_RLAST;
  wire m46_sc2axi_M_AXI_RREADY;
  wire [1:0]m46_sc2axi_M_AXI_RRESP;
  wire [1023:0]m46_sc2axi_M_AXI_RUSER;
  wire m46_sc2axi_M_AXI_RVALID;
  wire [31:0]m46_sc2axi_M_AXI_WDATA;
  wire m46_sc2axi_M_AXI_WLAST;
  wire m46_sc2axi_M_AXI_WREADY;
  wire [3:0]m46_sc2axi_M_AXI_WSTRB;
  wire [1023:0]m46_sc2axi_M_AXI_WUSER;
  wire m46_sc2axi_M_AXI_WVALID;
  wire [9:0]m47_exit_pipeline_m_axi_ARADDR;
  wire [2:0]m47_exit_pipeline_m_axi_ARPROT;
  wire m47_exit_pipeline_m_axi_ARREADY;
  wire m47_exit_pipeline_m_axi_ARVALID;
  wire [9:0]m47_exit_pipeline_m_axi_AWADDR;
  wire [2:0]m47_exit_pipeline_m_axi_AWPROT;
  wire m47_exit_pipeline_m_axi_AWREADY;
  wire m47_exit_pipeline_m_axi_AWVALID;
  wire m47_exit_pipeline_m_axi_BREADY;
  wire [1:0]m47_exit_pipeline_m_axi_BRESP;
  wire m47_exit_pipeline_m_axi_BVALID;
  wire [31:0]m47_exit_pipeline_m_axi_RDATA;
  wire m47_exit_pipeline_m_axi_RREADY;
  wire [1:0]m47_exit_pipeline_m_axi_RRESP;
  wire m47_exit_pipeline_m_axi_RVALID;
  wire [31:0]m47_exit_pipeline_m_axi_WDATA;
  wire m47_exit_pipeline_m_axi_WREADY;
  wire [3:0]m47_exit_pipeline_m_axi_WSTRB;
  wire m47_exit_pipeline_m_axi_WVALID;
  wire [0:0]m47_nodes_M_SC_AR_INFO;
  wire [181:0]m47_nodes_M_SC_AR_PAYLD;
  wire m47_nodes_M_SC_AR_RECV;
  wire [0:0]m47_nodes_M_SC_AR_REQ;
  wire [0:0]m47_nodes_M_SC_AR_SEND;
  wire [0:0]m47_nodes_M_SC_AW_INFO;
  wire [181:0]m47_nodes_M_SC_AW_PAYLD;
  wire m47_nodes_M_SC_AW_RECV;
  wire [0:0]m47_nodes_M_SC_AW_REQ;
  wire [0:0]m47_nodes_M_SC_AW_SEND;
  wire [0:0]m47_nodes_M_SC_B_INFO;
  wire [8:0]m47_nodes_M_SC_B_PAYLD;
  wire [0:0]m47_nodes_M_SC_B_RECV;
  wire [0:0]m47_nodes_M_SC_B_REQ;
  wire [0:0]m47_nodes_M_SC_B_SEND;
  wire [0:0]m47_nodes_M_SC_R_INFO;
  wire [54:0]m47_nodes_M_SC_R_PAYLD;
  wire [0:0]m47_nodes_M_SC_R_RECV;
  wire [0:0]m47_nodes_M_SC_R_REQ;
  wire [0:0]m47_nodes_M_SC_R_SEND;
  wire [0:0]m47_nodes_M_SC_W_INFO;
  wire [68:0]m47_nodes_M_SC_W_PAYLD;
  wire m47_nodes_M_SC_W_RECV;
  wire [0:0]m47_nodes_M_SC_W_REQ;
  wire [0:0]m47_nodes_M_SC_W_SEND;
  wire [9:0]m47_sc2axi_M_AXI_ARADDR;
  wire [3:0]m47_sc2axi_M_AXI_ARCACHE;
  wire [2:0]m47_sc2axi_M_AXI_ARID;
  wire [7:0]m47_sc2axi_M_AXI_ARLEN;
  wire [0:0]m47_sc2axi_M_AXI_ARLOCK;
  wire [2:0]m47_sc2axi_M_AXI_ARPROT;
  wire [3:0]m47_sc2axi_M_AXI_ARQOS;
  wire m47_sc2axi_M_AXI_ARREADY;
  wire [1023:0]m47_sc2axi_M_AXI_ARUSER;
  wire m47_sc2axi_M_AXI_ARVALID;
  wire [9:0]m47_sc2axi_M_AXI_AWADDR;
  wire [3:0]m47_sc2axi_M_AXI_AWCACHE;
  wire [2:0]m47_sc2axi_M_AXI_AWID;
  wire [7:0]m47_sc2axi_M_AXI_AWLEN;
  wire [0:0]m47_sc2axi_M_AXI_AWLOCK;
  wire [2:0]m47_sc2axi_M_AXI_AWPROT;
  wire [3:0]m47_sc2axi_M_AXI_AWQOS;
  wire m47_sc2axi_M_AXI_AWREADY;
  wire [1023:0]m47_sc2axi_M_AXI_AWUSER;
  wire m47_sc2axi_M_AXI_AWVALID;
  wire [2:0]m47_sc2axi_M_AXI_BID;
  wire m47_sc2axi_M_AXI_BREADY;
  wire [1:0]m47_sc2axi_M_AXI_BRESP;
  wire [1023:0]m47_sc2axi_M_AXI_BUSER;
  wire m47_sc2axi_M_AXI_BVALID;
  wire [31:0]m47_sc2axi_M_AXI_RDATA;
  wire [2:0]m47_sc2axi_M_AXI_RID;
  wire m47_sc2axi_M_AXI_RLAST;
  wire m47_sc2axi_M_AXI_RREADY;
  wire [1:0]m47_sc2axi_M_AXI_RRESP;
  wire [1023:0]m47_sc2axi_M_AXI_RUSER;
  wire m47_sc2axi_M_AXI_RVALID;
  wire [31:0]m47_sc2axi_M_AXI_WDATA;
  wire m47_sc2axi_M_AXI_WLAST;
  wire m47_sc2axi_M_AXI_WREADY;
  wire [3:0]m47_sc2axi_M_AXI_WSTRB;
  wire [1023:0]m47_sc2axi_M_AXI_WUSER;
  wire m47_sc2axi_M_AXI_WVALID;
  wire [9:0]m48_exit_pipeline_m_axi_ARADDR;
  wire [2:0]m48_exit_pipeline_m_axi_ARPROT;
  wire m48_exit_pipeline_m_axi_ARREADY;
  wire m48_exit_pipeline_m_axi_ARVALID;
  wire [9:0]m48_exit_pipeline_m_axi_AWADDR;
  wire [2:0]m48_exit_pipeline_m_axi_AWPROT;
  wire m48_exit_pipeline_m_axi_AWREADY;
  wire m48_exit_pipeline_m_axi_AWVALID;
  wire m48_exit_pipeline_m_axi_BREADY;
  wire [1:0]m48_exit_pipeline_m_axi_BRESP;
  wire m48_exit_pipeline_m_axi_BVALID;
  wire [31:0]m48_exit_pipeline_m_axi_RDATA;
  wire m48_exit_pipeline_m_axi_RREADY;
  wire [1:0]m48_exit_pipeline_m_axi_RRESP;
  wire m48_exit_pipeline_m_axi_RVALID;
  wire [31:0]m48_exit_pipeline_m_axi_WDATA;
  wire m48_exit_pipeline_m_axi_WREADY;
  wire [3:0]m48_exit_pipeline_m_axi_WSTRB;
  wire m48_exit_pipeline_m_axi_WVALID;
  wire [0:0]m48_nodes_M_SC_AR_INFO;
  wire [181:0]m48_nodes_M_SC_AR_PAYLD;
  wire m48_nodes_M_SC_AR_RECV;
  wire [0:0]m48_nodes_M_SC_AR_REQ;
  wire [0:0]m48_nodes_M_SC_AR_SEND;
  wire [0:0]m48_nodes_M_SC_AW_INFO;
  wire [181:0]m48_nodes_M_SC_AW_PAYLD;
  wire m48_nodes_M_SC_AW_RECV;
  wire [0:0]m48_nodes_M_SC_AW_REQ;
  wire [0:0]m48_nodes_M_SC_AW_SEND;
  wire [0:0]m48_nodes_M_SC_B_INFO;
  wire [8:0]m48_nodes_M_SC_B_PAYLD;
  wire [0:0]m48_nodes_M_SC_B_RECV;
  wire [0:0]m48_nodes_M_SC_B_REQ;
  wire [0:0]m48_nodes_M_SC_B_SEND;
  wire [0:0]m48_nodes_M_SC_R_INFO;
  wire [54:0]m48_nodes_M_SC_R_PAYLD;
  wire [0:0]m48_nodes_M_SC_R_RECV;
  wire [0:0]m48_nodes_M_SC_R_REQ;
  wire [0:0]m48_nodes_M_SC_R_SEND;
  wire [0:0]m48_nodes_M_SC_W_INFO;
  wire [68:0]m48_nodes_M_SC_W_PAYLD;
  wire m48_nodes_M_SC_W_RECV;
  wire [0:0]m48_nodes_M_SC_W_REQ;
  wire [0:0]m48_nodes_M_SC_W_SEND;
  wire [9:0]m48_sc2axi_M_AXI_ARADDR;
  wire [3:0]m48_sc2axi_M_AXI_ARCACHE;
  wire [2:0]m48_sc2axi_M_AXI_ARID;
  wire [7:0]m48_sc2axi_M_AXI_ARLEN;
  wire [0:0]m48_sc2axi_M_AXI_ARLOCK;
  wire [2:0]m48_sc2axi_M_AXI_ARPROT;
  wire [3:0]m48_sc2axi_M_AXI_ARQOS;
  wire m48_sc2axi_M_AXI_ARREADY;
  wire [1023:0]m48_sc2axi_M_AXI_ARUSER;
  wire m48_sc2axi_M_AXI_ARVALID;
  wire [9:0]m48_sc2axi_M_AXI_AWADDR;
  wire [3:0]m48_sc2axi_M_AXI_AWCACHE;
  wire [2:0]m48_sc2axi_M_AXI_AWID;
  wire [7:0]m48_sc2axi_M_AXI_AWLEN;
  wire [0:0]m48_sc2axi_M_AXI_AWLOCK;
  wire [2:0]m48_sc2axi_M_AXI_AWPROT;
  wire [3:0]m48_sc2axi_M_AXI_AWQOS;
  wire m48_sc2axi_M_AXI_AWREADY;
  wire [1023:0]m48_sc2axi_M_AXI_AWUSER;
  wire m48_sc2axi_M_AXI_AWVALID;
  wire [2:0]m48_sc2axi_M_AXI_BID;
  wire m48_sc2axi_M_AXI_BREADY;
  wire [1:0]m48_sc2axi_M_AXI_BRESP;
  wire [1023:0]m48_sc2axi_M_AXI_BUSER;
  wire m48_sc2axi_M_AXI_BVALID;
  wire [31:0]m48_sc2axi_M_AXI_RDATA;
  wire [2:0]m48_sc2axi_M_AXI_RID;
  wire m48_sc2axi_M_AXI_RLAST;
  wire m48_sc2axi_M_AXI_RREADY;
  wire [1:0]m48_sc2axi_M_AXI_RRESP;
  wire [1023:0]m48_sc2axi_M_AXI_RUSER;
  wire m48_sc2axi_M_AXI_RVALID;
  wire [31:0]m48_sc2axi_M_AXI_WDATA;
  wire m48_sc2axi_M_AXI_WLAST;
  wire m48_sc2axi_M_AXI_WREADY;
  wire [3:0]m48_sc2axi_M_AXI_WSTRB;
  wire [1023:0]m48_sc2axi_M_AXI_WUSER;
  wire m48_sc2axi_M_AXI_WVALID;
  wire [9:0]m49_exit_pipeline_m_axi_ARADDR;
  wire [2:0]m49_exit_pipeline_m_axi_ARPROT;
  wire m49_exit_pipeline_m_axi_ARREADY;
  wire m49_exit_pipeline_m_axi_ARVALID;
  wire [9:0]m49_exit_pipeline_m_axi_AWADDR;
  wire [2:0]m49_exit_pipeline_m_axi_AWPROT;
  wire m49_exit_pipeline_m_axi_AWREADY;
  wire m49_exit_pipeline_m_axi_AWVALID;
  wire m49_exit_pipeline_m_axi_BREADY;
  wire [1:0]m49_exit_pipeline_m_axi_BRESP;
  wire m49_exit_pipeline_m_axi_BVALID;
  wire [31:0]m49_exit_pipeline_m_axi_RDATA;
  wire m49_exit_pipeline_m_axi_RREADY;
  wire [1:0]m49_exit_pipeline_m_axi_RRESP;
  wire m49_exit_pipeline_m_axi_RVALID;
  wire [31:0]m49_exit_pipeline_m_axi_WDATA;
  wire m49_exit_pipeline_m_axi_WREADY;
  wire [3:0]m49_exit_pipeline_m_axi_WSTRB;
  wire m49_exit_pipeline_m_axi_WVALID;
  wire [0:0]m49_nodes_M_SC_AR_INFO;
  wire [181:0]m49_nodes_M_SC_AR_PAYLD;
  wire m49_nodes_M_SC_AR_RECV;
  wire [0:0]m49_nodes_M_SC_AR_REQ;
  wire [0:0]m49_nodes_M_SC_AR_SEND;
  wire [0:0]m49_nodes_M_SC_AW_INFO;
  wire [181:0]m49_nodes_M_SC_AW_PAYLD;
  wire m49_nodes_M_SC_AW_RECV;
  wire [0:0]m49_nodes_M_SC_AW_REQ;
  wire [0:0]m49_nodes_M_SC_AW_SEND;
  wire [0:0]m49_nodes_M_SC_B_INFO;
  wire [8:0]m49_nodes_M_SC_B_PAYLD;
  wire [0:0]m49_nodes_M_SC_B_RECV;
  wire [0:0]m49_nodes_M_SC_B_REQ;
  wire [0:0]m49_nodes_M_SC_B_SEND;
  wire [0:0]m49_nodes_M_SC_R_INFO;
  wire [54:0]m49_nodes_M_SC_R_PAYLD;
  wire [0:0]m49_nodes_M_SC_R_RECV;
  wire [0:0]m49_nodes_M_SC_R_REQ;
  wire [0:0]m49_nodes_M_SC_R_SEND;
  wire [0:0]m49_nodes_M_SC_W_INFO;
  wire [68:0]m49_nodes_M_SC_W_PAYLD;
  wire m49_nodes_M_SC_W_RECV;
  wire [0:0]m49_nodes_M_SC_W_REQ;
  wire [0:0]m49_nodes_M_SC_W_SEND;
  wire [9:0]m49_sc2axi_M_AXI_ARADDR;
  wire [3:0]m49_sc2axi_M_AXI_ARCACHE;
  wire [2:0]m49_sc2axi_M_AXI_ARID;
  wire [7:0]m49_sc2axi_M_AXI_ARLEN;
  wire [0:0]m49_sc2axi_M_AXI_ARLOCK;
  wire [2:0]m49_sc2axi_M_AXI_ARPROT;
  wire [3:0]m49_sc2axi_M_AXI_ARQOS;
  wire m49_sc2axi_M_AXI_ARREADY;
  wire [1023:0]m49_sc2axi_M_AXI_ARUSER;
  wire m49_sc2axi_M_AXI_ARVALID;
  wire [9:0]m49_sc2axi_M_AXI_AWADDR;
  wire [3:0]m49_sc2axi_M_AXI_AWCACHE;
  wire [2:0]m49_sc2axi_M_AXI_AWID;
  wire [7:0]m49_sc2axi_M_AXI_AWLEN;
  wire [0:0]m49_sc2axi_M_AXI_AWLOCK;
  wire [2:0]m49_sc2axi_M_AXI_AWPROT;
  wire [3:0]m49_sc2axi_M_AXI_AWQOS;
  wire m49_sc2axi_M_AXI_AWREADY;
  wire [1023:0]m49_sc2axi_M_AXI_AWUSER;
  wire m49_sc2axi_M_AXI_AWVALID;
  wire [2:0]m49_sc2axi_M_AXI_BID;
  wire m49_sc2axi_M_AXI_BREADY;
  wire [1:0]m49_sc2axi_M_AXI_BRESP;
  wire [1023:0]m49_sc2axi_M_AXI_BUSER;
  wire m49_sc2axi_M_AXI_BVALID;
  wire [31:0]m49_sc2axi_M_AXI_RDATA;
  wire [2:0]m49_sc2axi_M_AXI_RID;
  wire m49_sc2axi_M_AXI_RLAST;
  wire m49_sc2axi_M_AXI_RREADY;
  wire [1:0]m49_sc2axi_M_AXI_RRESP;
  wire [1023:0]m49_sc2axi_M_AXI_RUSER;
  wire m49_sc2axi_M_AXI_RVALID;
  wire [31:0]m49_sc2axi_M_AXI_WDATA;
  wire m49_sc2axi_M_AXI_WLAST;
  wire m49_sc2axi_M_AXI_WREADY;
  wire [3:0]m49_sc2axi_M_AXI_WSTRB;
  wire [1023:0]m49_sc2axi_M_AXI_WUSER;
  wire m49_sc2axi_M_AXI_WVALID;
  wire [4:0]m50_exit_pipeline_m_axi_ARADDR;
  wire [2:0]m50_exit_pipeline_m_axi_ARPROT;
  wire m50_exit_pipeline_m_axi_ARREADY;
  wire m50_exit_pipeline_m_axi_ARVALID;
  wire [4:0]m50_exit_pipeline_m_axi_AWADDR;
  wire [2:0]m50_exit_pipeline_m_axi_AWPROT;
  wire m50_exit_pipeline_m_axi_AWREADY;
  wire m50_exit_pipeline_m_axi_AWVALID;
  wire m50_exit_pipeline_m_axi_BREADY;
  wire [1:0]m50_exit_pipeline_m_axi_BRESP;
  wire m50_exit_pipeline_m_axi_BVALID;
  wire [31:0]m50_exit_pipeline_m_axi_RDATA;
  wire m50_exit_pipeline_m_axi_RREADY;
  wire [1:0]m50_exit_pipeline_m_axi_RRESP;
  wire m50_exit_pipeline_m_axi_RVALID;
  wire [31:0]m50_exit_pipeline_m_axi_WDATA;
  wire m50_exit_pipeline_m_axi_WREADY;
  wire [3:0]m50_exit_pipeline_m_axi_WSTRB;
  wire m50_exit_pipeline_m_axi_WVALID;
  wire [0:0]m50_nodes_M_SC_AR_INFO;
  wire [181:0]m50_nodes_M_SC_AR_PAYLD;
  wire m50_nodes_M_SC_AR_RECV;
  wire [0:0]m50_nodes_M_SC_AR_REQ;
  wire [0:0]m50_nodes_M_SC_AR_SEND;
  wire [0:0]m50_nodes_M_SC_AW_INFO;
  wire [181:0]m50_nodes_M_SC_AW_PAYLD;
  wire m50_nodes_M_SC_AW_RECV;
  wire [0:0]m50_nodes_M_SC_AW_REQ;
  wire [0:0]m50_nodes_M_SC_AW_SEND;
  wire [0:0]m50_nodes_M_SC_B_INFO;
  wire [8:0]m50_nodes_M_SC_B_PAYLD;
  wire [0:0]m50_nodes_M_SC_B_RECV;
  wire [0:0]m50_nodes_M_SC_B_REQ;
  wire [0:0]m50_nodes_M_SC_B_SEND;
  wire [0:0]m50_nodes_M_SC_R_INFO;
  wire [54:0]m50_nodes_M_SC_R_PAYLD;
  wire [0:0]m50_nodes_M_SC_R_RECV;
  wire [0:0]m50_nodes_M_SC_R_REQ;
  wire [0:0]m50_nodes_M_SC_R_SEND;
  wire [0:0]m50_nodes_M_SC_W_INFO;
  wire [68:0]m50_nodes_M_SC_W_PAYLD;
  wire m50_nodes_M_SC_W_RECV;
  wire [0:0]m50_nodes_M_SC_W_REQ;
  wire [0:0]m50_nodes_M_SC_W_SEND;
  wire [4:0]m50_sc2axi_M_AXI_ARADDR;
  wire [3:0]m50_sc2axi_M_AXI_ARCACHE;
  wire [2:0]m50_sc2axi_M_AXI_ARID;
  wire [7:0]m50_sc2axi_M_AXI_ARLEN;
  wire [0:0]m50_sc2axi_M_AXI_ARLOCK;
  wire [2:0]m50_sc2axi_M_AXI_ARPROT;
  wire [3:0]m50_sc2axi_M_AXI_ARQOS;
  wire m50_sc2axi_M_AXI_ARREADY;
  wire [1023:0]m50_sc2axi_M_AXI_ARUSER;
  wire m50_sc2axi_M_AXI_ARVALID;
  wire [4:0]m50_sc2axi_M_AXI_AWADDR;
  wire [3:0]m50_sc2axi_M_AXI_AWCACHE;
  wire [2:0]m50_sc2axi_M_AXI_AWID;
  wire [7:0]m50_sc2axi_M_AXI_AWLEN;
  wire [0:0]m50_sc2axi_M_AXI_AWLOCK;
  wire [2:0]m50_sc2axi_M_AXI_AWPROT;
  wire [3:0]m50_sc2axi_M_AXI_AWQOS;
  wire m50_sc2axi_M_AXI_AWREADY;
  wire [1023:0]m50_sc2axi_M_AXI_AWUSER;
  wire m50_sc2axi_M_AXI_AWVALID;
  wire [2:0]m50_sc2axi_M_AXI_BID;
  wire m50_sc2axi_M_AXI_BREADY;
  wire [1:0]m50_sc2axi_M_AXI_BRESP;
  wire [1023:0]m50_sc2axi_M_AXI_BUSER;
  wire m50_sc2axi_M_AXI_BVALID;
  wire [31:0]m50_sc2axi_M_AXI_RDATA;
  wire [2:0]m50_sc2axi_M_AXI_RID;
  wire m50_sc2axi_M_AXI_RLAST;
  wire m50_sc2axi_M_AXI_RREADY;
  wire [1:0]m50_sc2axi_M_AXI_RRESP;
  wire [1023:0]m50_sc2axi_M_AXI_RUSER;
  wire m50_sc2axi_M_AXI_RVALID;
  wire [31:0]m50_sc2axi_M_AXI_WDATA;
  wire m50_sc2axi_M_AXI_WLAST;
  wire m50_sc2axi_M_AXI_WREADY;
  wire [3:0]m50_sc2axi_M_AXI_WSTRB;
  wire [1023:0]m50_sc2axi_M_AXI_WUSER;
  wire m50_sc2axi_M_AXI_WVALID;
  wire [0:0]m_axi_aresetn_1;
  wire [0:0]m_axi_aresetn_10;
  wire [0:0]m_axi_aresetn_11;
  wire [0:0]m_axi_aresetn_12;
  wire [0:0]m_axi_aresetn_13;
  wire [0:0]m_axi_aresetn_14;
  wire [0:0]m_axi_aresetn_15;
  wire [0:0]m_axi_aresetn_16;
  wire [0:0]m_axi_aresetn_17;
  wire [0:0]m_axi_aresetn_18;
  wire [0:0]m_axi_aresetn_19;
  wire [0:0]m_axi_aresetn_2;
  wire [0:0]m_axi_aresetn_20;
  wire [0:0]m_axi_aresetn_21;
  wire [0:0]m_axi_aresetn_22;
  wire [0:0]m_axi_aresetn_23;
  wire [0:0]m_axi_aresetn_24;
  wire [0:0]m_axi_aresetn_25;
  wire [0:0]m_axi_aresetn_26;
  wire [0:0]m_axi_aresetn_27;
  wire [0:0]m_axi_aresetn_28;
  wire [0:0]m_axi_aresetn_29;
  wire [0:0]m_axi_aresetn_3;
  wire [0:0]m_axi_aresetn_30;
  wire [0:0]m_axi_aresetn_31;
  wire [0:0]m_axi_aresetn_32;
  wire [0:0]m_axi_aresetn_33;
  wire [0:0]m_axi_aresetn_34;
  wire [0:0]m_axi_aresetn_35;
  wire [0:0]m_axi_aresetn_36;
  wire [0:0]m_axi_aresetn_37;
  wire [0:0]m_axi_aresetn_38;
  wire [0:0]m_axi_aresetn_39;
  wire [0:0]m_axi_aresetn_4;
  wire [0:0]m_axi_aresetn_40;
  wire [0:0]m_axi_aresetn_41;
  wire [0:0]m_axi_aresetn_42;
  wire [0:0]m_axi_aresetn_43;
  wire [0:0]m_axi_aresetn_44;
  wire [0:0]m_axi_aresetn_45;
  wire [0:0]m_axi_aresetn_46;
  wire [0:0]m_axi_aresetn_47;
  wire [0:0]m_axi_aresetn_48;
  wire [0:0]m_axi_aresetn_49;
  wire [0:0]m_axi_aresetn_5;
  wire [0:0]m_axi_aresetn_50;
  wire [0:0]m_axi_aresetn_6;
  wire [0:0]m_axi_aresetn_7;
  wire [0:0]m_axi_aresetn_8;
  wire [0:0]m_axi_aresetn_9;
  wire [39:0]s00_entry_pipeline_m_axi_ARADDR;
  wire [3:0]s00_entry_pipeline_m_axi_ARCACHE;
  wire [2:0]s00_entry_pipeline_m_axi_ARID;
  wire [7:0]s00_entry_pipeline_m_axi_ARLEN;
  wire [0:0]s00_entry_pipeline_m_axi_ARLOCK;
  wire [2:0]s00_entry_pipeline_m_axi_ARPROT;
  wire [3:0]s00_entry_pipeline_m_axi_ARQOS;
  wire s00_entry_pipeline_m_axi_ARREADY;
  wire [1023:0]s00_entry_pipeline_m_axi_ARUSER;
  wire s00_entry_pipeline_m_axi_ARVALID;
  wire [39:0]s00_entry_pipeline_m_axi_AWADDR;
  wire [3:0]s00_entry_pipeline_m_axi_AWCACHE;
  wire [2:0]s00_entry_pipeline_m_axi_AWID;
  wire [7:0]s00_entry_pipeline_m_axi_AWLEN;
  wire [0:0]s00_entry_pipeline_m_axi_AWLOCK;
  wire [2:0]s00_entry_pipeline_m_axi_AWPROT;
  wire [3:0]s00_entry_pipeline_m_axi_AWQOS;
  wire s00_entry_pipeline_m_axi_AWREADY;
  wire [1023:0]s00_entry_pipeline_m_axi_AWUSER;
  wire s00_entry_pipeline_m_axi_AWVALID;
  wire [2:0]s00_entry_pipeline_m_axi_BID;
  wire s00_entry_pipeline_m_axi_BREADY;
  wire [1:0]s00_entry_pipeline_m_axi_BRESP;
  wire [1023:0]s00_entry_pipeline_m_axi_BUSER;
  wire s00_entry_pipeline_m_axi_BVALID;
  wire [31:0]s00_entry_pipeline_m_axi_RDATA;
  wire [2:0]s00_entry_pipeline_m_axi_RID;
  wire s00_entry_pipeline_m_axi_RLAST;
  wire s00_entry_pipeline_m_axi_RREADY;
  wire [1:0]s00_entry_pipeline_m_axi_RRESP;
  wire [1023:0]s00_entry_pipeline_m_axi_RUSER;
  wire s00_entry_pipeline_m_axi_RVALID;
  wire [31:0]s00_entry_pipeline_m_axi_WDATA;
  wire s00_entry_pipeline_m_axi_WLAST;
  wire s00_entry_pipeline_m_axi_WREADY;
  wire [3:0]s00_entry_pipeline_m_axi_WSTRB;
  wire [1023:0]s00_entry_pipeline_m_axi_WUSER;
  wire s00_entry_pipeline_m_axi_WVALID;
  wire [7:0]s00_nodes_M_SC_AR_INFO;
  wire [181:0]s00_nodes_M_SC_AR_PAYLD;
  wire [7:0]s00_nodes_M_SC_AR_RECV;
  wire [7:0]s00_nodes_M_SC_AR_REQ;
  wire [7:0]s00_nodes_M_SC_AR_SEND;
  wire [7:0]s00_nodes_M_SC_AW_INFO;
  wire [181:0]s00_nodes_M_SC_AW_PAYLD;
  wire [7:0]s00_nodes_M_SC_AW_RECV;
  wire [7:0]s00_nodes_M_SC_AW_REQ;
  wire [7:0]s00_nodes_M_SC_AW_SEND;
  wire [0:0]s00_nodes_M_SC_B_INFO;
  wire [8:0]s00_nodes_M_SC_B_PAYLD;
  wire s00_nodes_M_SC_B_RECV;
  wire [0:0]s00_nodes_M_SC_B_REQ;
  wire [0:0]s00_nodes_M_SC_B_SEND;
  wire [0:0]s00_nodes_M_SC_R_INFO;
  wire [54:0]s00_nodes_M_SC_R_PAYLD;
  wire s00_nodes_M_SC_R_RECV;
  wire [0:0]s00_nodes_M_SC_R_REQ;
  wire [0:0]s00_nodes_M_SC_R_SEND;
  wire [7:0]s00_nodes_M_SC_W_INFO;
  wire [68:0]s00_nodes_M_SC_W_PAYLD;
  wire [7:0]s00_nodes_M_SC_W_RECV;
  wire [7:0]s00_nodes_M_SC_W_REQ;
  wire [7:0]s00_nodes_M_SC_W_SEND;
  wire swbd_aclk_net;
  wire [0:0]swbd_aresetn_net;

  assign M00_AXI_araddr[12:0] = m00_exit_pipeline_m_axi_ARADDR;
  assign M00_AXI_arburst[1:0] = m00_exit_pipeline_m_axi_ARBURST;
  assign M00_AXI_arcache[3:0] = m00_exit_pipeline_m_axi_ARCACHE;
  assign M00_AXI_arlen[7:0] = m00_exit_pipeline_m_axi_ARLEN;
  assign M00_AXI_arlock[0] = m00_exit_pipeline_m_axi_ARLOCK;
  assign M00_AXI_arprot[2:0] = m00_exit_pipeline_m_axi_ARPROT;
  assign M00_AXI_arqos[3:0] = m00_exit_pipeline_m_axi_ARQOS;
  assign M00_AXI_arsize[2:0] = m00_exit_pipeline_m_axi_ARSIZE;
  assign M00_AXI_aruser[15:0] = m00_exit_pipeline_m_axi_ARUSER;
  assign M00_AXI_arvalid = m00_exit_pipeline_m_axi_ARVALID;
  assign M00_AXI_awaddr[12:0] = m00_exit_pipeline_m_axi_AWADDR;
  assign M00_AXI_awburst[1:0] = m00_exit_pipeline_m_axi_AWBURST;
  assign M00_AXI_awcache[3:0] = m00_exit_pipeline_m_axi_AWCACHE;
  assign M00_AXI_awlen[7:0] = m00_exit_pipeline_m_axi_AWLEN;
  assign M00_AXI_awlock[0] = m00_exit_pipeline_m_axi_AWLOCK;
  assign M00_AXI_awprot[2:0] = m00_exit_pipeline_m_axi_AWPROT;
  assign M00_AXI_awqos[3:0] = m00_exit_pipeline_m_axi_AWQOS;
  assign M00_AXI_awsize[2:0] = m00_exit_pipeline_m_axi_AWSIZE;
  assign M00_AXI_awuser[15:0] = m00_exit_pipeline_m_axi_AWUSER;
  assign M00_AXI_awvalid = m00_exit_pipeline_m_axi_AWVALID;
  assign M00_AXI_bready = m00_exit_pipeline_m_axi_BREADY;
  assign M00_AXI_rready = m00_exit_pipeline_m_axi_RREADY;
  assign M00_AXI_wdata[31:0] = m00_exit_pipeline_m_axi_WDATA;
  assign M00_AXI_wlast = m00_exit_pipeline_m_axi_WLAST;
  assign M00_AXI_wstrb[3:0] = m00_exit_pipeline_m_axi_WSTRB;
  assign M00_AXI_wvalid = m00_exit_pipeline_m_axi_WVALID;
  assign M01_AXI_araddr[12:0] = m01_exit_pipeline_m_axi_ARADDR;
  assign M01_AXI_arburst[1:0] = m01_exit_pipeline_m_axi_ARBURST;
  assign M01_AXI_arcache[3:0] = m01_exit_pipeline_m_axi_ARCACHE;
  assign M01_AXI_arlen[7:0] = m01_exit_pipeline_m_axi_ARLEN;
  assign M01_AXI_arlock[0] = m01_exit_pipeline_m_axi_ARLOCK;
  assign M01_AXI_arprot[2:0] = m01_exit_pipeline_m_axi_ARPROT;
  assign M01_AXI_arqos[3:0] = m01_exit_pipeline_m_axi_ARQOS;
  assign M01_AXI_arsize[2:0] = m01_exit_pipeline_m_axi_ARSIZE;
  assign M01_AXI_aruser[15:0] = m01_exit_pipeline_m_axi_ARUSER;
  assign M01_AXI_arvalid = m01_exit_pipeline_m_axi_ARVALID;
  assign M01_AXI_awaddr[12:0] = m01_exit_pipeline_m_axi_AWADDR;
  assign M01_AXI_awburst[1:0] = m01_exit_pipeline_m_axi_AWBURST;
  assign M01_AXI_awcache[3:0] = m01_exit_pipeline_m_axi_AWCACHE;
  assign M01_AXI_awlen[7:0] = m01_exit_pipeline_m_axi_AWLEN;
  assign M01_AXI_awlock[0] = m01_exit_pipeline_m_axi_AWLOCK;
  assign M01_AXI_awprot[2:0] = m01_exit_pipeline_m_axi_AWPROT;
  assign M01_AXI_awqos[3:0] = m01_exit_pipeline_m_axi_AWQOS;
  assign M01_AXI_awsize[2:0] = m01_exit_pipeline_m_axi_AWSIZE;
  assign M01_AXI_awuser[15:0] = m01_exit_pipeline_m_axi_AWUSER;
  assign M01_AXI_awvalid = m01_exit_pipeline_m_axi_AWVALID;
  assign M01_AXI_bready = m01_exit_pipeline_m_axi_BREADY;
  assign M01_AXI_rready = m01_exit_pipeline_m_axi_RREADY;
  assign M01_AXI_wdata[31:0] = m01_exit_pipeline_m_axi_WDATA;
  assign M01_AXI_wlast = m01_exit_pipeline_m_axi_WLAST;
  assign M01_AXI_wstrb[3:0] = m01_exit_pipeline_m_axi_WSTRB;
  assign M01_AXI_wvalid = m01_exit_pipeline_m_axi_WVALID;
  assign M02_AXI_araddr[12:0] = m02_exit_pipeline_m_axi_ARADDR;
  assign M02_AXI_arburst[1:0] = m02_exit_pipeline_m_axi_ARBURST;
  assign M02_AXI_arcache[3:0] = m02_exit_pipeline_m_axi_ARCACHE;
  assign M02_AXI_arlen[7:0] = m02_exit_pipeline_m_axi_ARLEN;
  assign M02_AXI_arlock[0] = m02_exit_pipeline_m_axi_ARLOCK;
  assign M02_AXI_arprot[2:0] = m02_exit_pipeline_m_axi_ARPROT;
  assign M02_AXI_arqos[3:0] = m02_exit_pipeline_m_axi_ARQOS;
  assign M02_AXI_arsize[2:0] = m02_exit_pipeline_m_axi_ARSIZE;
  assign M02_AXI_aruser[15:0] = m02_exit_pipeline_m_axi_ARUSER;
  assign M02_AXI_arvalid = m02_exit_pipeline_m_axi_ARVALID;
  assign M02_AXI_awaddr[12:0] = m02_exit_pipeline_m_axi_AWADDR;
  assign M02_AXI_awburst[1:0] = m02_exit_pipeline_m_axi_AWBURST;
  assign M02_AXI_awcache[3:0] = m02_exit_pipeline_m_axi_AWCACHE;
  assign M02_AXI_awlen[7:0] = m02_exit_pipeline_m_axi_AWLEN;
  assign M02_AXI_awlock[0] = m02_exit_pipeline_m_axi_AWLOCK;
  assign M02_AXI_awprot[2:0] = m02_exit_pipeline_m_axi_AWPROT;
  assign M02_AXI_awqos[3:0] = m02_exit_pipeline_m_axi_AWQOS;
  assign M02_AXI_awsize[2:0] = m02_exit_pipeline_m_axi_AWSIZE;
  assign M02_AXI_awuser[15:0] = m02_exit_pipeline_m_axi_AWUSER;
  assign M02_AXI_awvalid = m02_exit_pipeline_m_axi_AWVALID;
  assign M02_AXI_bready = m02_exit_pipeline_m_axi_BREADY;
  assign M02_AXI_rready = m02_exit_pipeline_m_axi_RREADY;
  assign M02_AXI_wdata[31:0] = m02_exit_pipeline_m_axi_WDATA;
  assign M02_AXI_wlast = m02_exit_pipeline_m_axi_WLAST;
  assign M02_AXI_wstrb[3:0] = m02_exit_pipeline_m_axi_WSTRB;
  assign M02_AXI_wvalid = m02_exit_pipeline_m_axi_WVALID;
  assign M03_AXI_araddr[12:0] = m03_exit_pipeline_m_axi_ARADDR;
  assign M03_AXI_arburst[1:0] = m03_exit_pipeline_m_axi_ARBURST;
  assign M03_AXI_arcache[3:0] = m03_exit_pipeline_m_axi_ARCACHE;
  assign M03_AXI_arlen[7:0] = m03_exit_pipeline_m_axi_ARLEN;
  assign M03_AXI_arlock[0] = m03_exit_pipeline_m_axi_ARLOCK;
  assign M03_AXI_arprot[2:0] = m03_exit_pipeline_m_axi_ARPROT;
  assign M03_AXI_arqos[3:0] = m03_exit_pipeline_m_axi_ARQOS;
  assign M03_AXI_arsize[2:0] = m03_exit_pipeline_m_axi_ARSIZE;
  assign M03_AXI_aruser[15:0] = m03_exit_pipeline_m_axi_ARUSER;
  assign M03_AXI_arvalid = m03_exit_pipeline_m_axi_ARVALID;
  assign M03_AXI_awaddr[12:0] = m03_exit_pipeline_m_axi_AWADDR;
  assign M03_AXI_awburst[1:0] = m03_exit_pipeline_m_axi_AWBURST;
  assign M03_AXI_awcache[3:0] = m03_exit_pipeline_m_axi_AWCACHE;
  assign M03_AXI_awlen[7:0] = m03_exit_pipeline_m_axi_AWLEN;
  assign M03_AXI_awlock[0] = m03_exit_pipeline_m_axi_AWLOCK;
  assign M03_AXI_awprot[2:0] = m03_exit_pipeline_m_axi_AWPROT;
  assign M03_AXI_awqos[3:0] = m03_exit_pipeline_m_axi_AWQOS;
  assign M03_AXI_awsize[2:0] = m03_exit_pipeline_m_axi_AWSIZE;
  assign M03_AXI_awuser[15:0] = m03_exit_pipeline_m_axi_AWUSER;
  assign M03_AXI_awvalid = m03_exit_pipeline_m_axi_AWVALID;
  assign M03_AXI_bready = m03_exit_pipeline_m_axi_BREADY;
  assign M03_AXI_rready = m03_exit_pipeline_m_axi_RREADY;
  assign M03_AXI_wdata[31:0] = m03_exit_pipeline_m_axi_WDATA;
  assign M03_AXI_wlast = m03_exit_pipeline_m_axi_WLAST;
  assign M03_AXI_wstrb[3:0] = m03_exit_pipeline_m_axi_WSTRB;
  assign M03_AXI_wvalid = m03_exit_pipeline_m_axi_WVALID;
  assign M04_AXI_araddr[12:0] = m04_exit_pipeline_m_axi_ARADDR;
  assign M04_AXI_arburst[1:0] = m04_exit_pipeline_m_axi_ARBURST;
  assign M04_AXI_arcache[3:0] = m04_exit_pipeline_m_axi_ARCACHE;
  assign M04_AXI_arlen[7:0] = m04_exit_pipeline_m_axi_ARLEN;
  assign M04_AXI_arlock[0] = m04_exit_pipeline_m_axi_ARLOCK;
  assign M04_AXI_arprot[2:0] = m04_exit_pipeline_m_axi_ARPROT;
  assign M04_AXI_arqos[3:0] = m04_exit_pipeline_m_axi_ARQOS;
  assign M04_AXI_arsize[2:0] = m04_exit_pipeline_m_axi_ARSIZE;
  assign M04_AXI_aruser[15:0] = m04_exit_pipeline_m_axi_ARUSER;
  assign M04_AXI_arvalid = m04_exit_pipeline_m_axi_ARVALID;
  assign M04_AXI_awaddr[12:0] = m04_exit_pipeline_m_axi_AWADDR;
  assign M04_AXI_awburst[1:0] = m04_exit_pipeline_m_axi_AWBURST;
  assign M04_AXI_awcache[3:0] = m04_exit_pipeline_m_axi_AWCACHE;
  assign M04_AXI_awlen[7:0] = m04_exit_pipeline_m_axi_AWLEN;
  assign M04_AXI_awlock[0] = m04_exit_pipeline_m_axi_AWLOCK;
  assign M04_AXI_awprot[2:0] = m04_exit_pipeline_m_axi_AWPROT;
  assign M04_AXI_awqos[3:0] = m04_exit_pipeline_m_axi_AWQOS;
  assign M04_AXI_awsize[2:0] = m04_exit_pipeline_m_axi_AWSIZE;
  assign M04_AXI_awuser[15:0] = m04_exit_pipeline_m_axi_AWUSER;
  assign M04_AXI_awvalid = m04_exit_pipeline_m_axi_AWVALID;
  assign M04_AXI_bready = m04_exit_pipeline_m_axi_BREADY;
  assign M04_AXI_rready = m04_exit_pipeline_m_axi_RREADY;
  assign M04_AXI_wdata[31:0] = m04_exit_pipeline_m_axi_WDATA;
  assign M04_AXI_wlast = m04_exit_pipeline_m_axi_WLAST;
  assign M04_AXI_wstrb[3:0] = m04_exit_pipeline_m_axi_WSTRB;
  assign M04_AXI_wvalid = m04_exit_pipeline_m_axi_WVALID;
  assign M05_AXI_araddr[12:0] = m05_exit_pipeline_m_axi_ARADDR;
  assign M05_AXI_arburst[1:0] = m05_exit_pipeline_m_axi_ARBURST;
  assign M05_AXI_arcache[3:0] = m05_exit_pipeline_m_axi_ARCACHE;
  assign M05_AXI_arlen[7:0] = m05_exit_pipeline_m_axi_ARLEN;
  assign M05_AXI_arlock[0] = m05_exit_pipeline_m_axi_ARLOCK;
  assign M05_AXI_arprot[2:0] = m05_exit_pipeline_m_axi_ARPROT;
  assign M05_AXI_arqos[3:0] = m05_exit_pipeline_m_axi_ARQOS;
  assign M05_AXI_arsize[2:0] = m05_exit_pipeline_m_axi_ARSIZE;
  assign M05_AXI_aruser[15:0] = m05_exit_pipeline_m_axi_ARUSER;
  assign M05_AXI_arvalid = m05_exit_pipeline_m_axi_ARVALID;
  assign M05_AXI_awaddr[12:0] = m05_exit_pipeline_m_axi_AWADDR;
  assign M05_AXI_awburst[1:0] = m05_exit_pipeline_m_axi_AWBURST;
  assign M05_AXI_awcache[3:0] = m05_exit_pipeline_m_axi_AWCACHE;
  assign M05_AXI_awlen[7:0] = m05_exit_pipeline_m_axi_AWLEN;
  assign M05_AXI_awlock[0] = m05_exit_pipeline_m_axi_AWLOCK;
  assign M05_AXI_awprot[2:0] = m05_exit_pipeline_m_axi_AWPROT;
  assign M05_AXI_awqos[3:0] = m05_exit_pipeline_m_axi_AWQOS;
  assign M05_AXI_awsize[2:0] = m05_exit_pipeline_m_axi_AWSIZE;
  assign M05_AXI_awuser[15:0] = m05_exit_pipeline_m_axi_AWUSER;
  assign M05_AXI_awvalid = m05_exit_pipeline_m_axi_AWVALID;
  assign M05_AXI_bready = m05_exit_pipeline_m_axi_BREADY;
  assign M05_AXI_rready = m05_exit_pipeline_m_axi_RREADY;
  assign M05_AXI_wdata[31:0] = m05_exit_pipeline_m_axi_WDATA;
  assign M05_AXI_wlast = m05_exit_pipeline_m_axi_WLAST;
  assign M05_AXI_wstrb[3:0] = m05_exit_pipeline_m_axi_WSTRB;
  assign M05_AXI_wvalid = m05_exit_pipeline_m_axi_WVALID;
  assign M06_AXI_araddr[12:0] = m06_exit_pipeline_m_axi_ARADDR;
  assign M06_AXI_arburst[1:0] = m06_exit_pipeline_m_axi_ARBURST;
  assign M06_AXI_arcache[3:0] = m06_exit_pipeline_m_axi_ARCACHE;
  assign M06_AXI_arlen[7:0] = m06_exit_pipeline_m_axi_ARLEN;
  assign M06_AXI_arlock[0] = m06_exit_pipeline_m_axi_ARLOCK;
  assign M06_AXI_arprot[2:0] = m06_exit_pipeline_m_axi_ARPROT;
  assign M06_AXI_arqos[3:0] = m06_exit_pipeline_m_axi_ARQOS;
  assign M06_AXI_arsize[2:0] = m06_exit_pipeline_m_axi_ARSIZE;
  assign M06_AXI_aruser[15:0] = m06_exit_pipeline_m_axi_ARUSER;
  assign M06_AXI_arvalid = m06_exit_pipeline_m_axi_ARVALID;
  assign M06_AXI_awaddr[12:0] = m06_exit_pipeline_m_axi_AWADDR;
  assign M06_AXI_awburst[1:0] = m06_exit_pipeline_m_axi_AWBURST;
  assign M06_AXI_awcache[3:0] = m06_exit_pipeline_m_axi_AWCACHE;
  assign M06_AXI_awlen[7:0] = m06_exit_pipeline_m_axi_AWLEN;
  assign M06_AXI_awlock[0] = m06_exit_pipeline_m_axi_AWLOCK;
  assign M06_AXI_awprot[2:0] = m06_exit_pipeline_m_axi_AWPROT;
  assign M06_AXI_awqos[3:0] = m06_exit_pipeline_m_axi_AWQOS;
  assign M06_AXI_awsize[2:0] = m06_exit_pipeline_m_axi_AWSIZE;
  assign M06_AXI_awuser[15:0] = m06_exit_pipeline_m_axi_AWUSER;
  assign M06_AXI_awvalid = m06_exit_pipeline_m_axi_AWVALID;
  assign M06_AXI_bready = m06_exit_pipeline_m_axi_BREADY;
  assign M06_AXI_rready = m06_exit_pipeline_m_axi_RREADY;
  assign M06_AXI_wdata[31:0] = m06_exit_pipeline_m_axi_WDATA;
  assign M06_AXI_wlast = m06_exit_pipeline_m_axi_WLAST;
  assign M06_AXI_wstrb[3:0] = m06_exit_pipeline_m_axi_WSTRB;
  assign M06_AXI_wvalid = m06_exit_pipeline_m_axi_WVALID;
  assign M07_AXI_araddr[12:0] = m07_exit_pipeline_m_axi_ARADDR;
  assign M07_AXI_arburst[1:0] = m07_exit_pipeline_m_axi_ARBURST;
  assign M07_AXI_arcache[3:0] = m07_exit_pipeline_m_axi_ARCACHE;
  assign M07_AXI_arlen[7:0] = m07_exit_pipeline_m_axi_ARLEN;
  assign M07_AXI_arlock[0] = m07_exit_pipeline_m_axi_ARLOCK;
  assign M07_AXI_arprot[2:0] = m07_exit_pipeline_m_axi_ARPROT;
  assign M07_AXI_arqos[3:0] = m07_exit_pipeline_m_axi_ARQOS;
  assign M07_AXI_arsize[2:0] = m07_exit_pipeline_m_axi_ARSIZE;
  assign M07_AXI_aruser[15:0] = m07_exit_pipeline_m_axi_ARUSER;
  assign M07_AXI_arvalid = m07_exit_pipeline_m_axi_ARVALID;
  assign M07_AXI_awaddr[12:0] = m07_exit_pipeline_m_axi_AWADDR;
  assign M07_AXI_awburst[1:0] = m07_exit_pipeline_m_axi_AWBURST;
  assign M07_AXI_awcache[3:0] = m07_exit_pipeline_m_axi_AWCACHE;
  assign M07_AXI_awlen[7:0] = m07_exit_pipeline_m_axi_AWLEN;
  assign M07_AXI_awlock[0] = m07_exit_pipeline_m_axi_AWLOCK;
  assign M07_AXI_awprot[2:0] = m07_exit_pipeline_m_axi_AWPROT;
  assign M07_AXI_awqos[3:0] = m07_exit_pipeline_m_axi_AWQOS;
  assign M07_AXI_awsize[2:0] = m07_exit_pipeline_m_axi_AWSIZE;
  assign M07_AXI_awuser[15:0] = m07_exit_pipeline_m_axi_AWUSER;
  assign M07_AXI_awvalid = m07_exit_pipeline_m_axi_AWVALID;
  assign M07_AXI_bready = m07_exit_pipeline_m_axi_BREADY;
  assign M07_AXI_rready = m07_exit_pipeline_m_axi_RREADY;
  assign M07_AXI_wdata[31:0] = m07_exit_pipeline_m_axi_WDATA;
  assign M07_AXI_wlast = m07_exit_pipeline_m_axi_WLAST;
  assign M07_AXI_wstrb[3:0] = m07_exit_pipeline_m_axi_WSTRB;
  assign M07_AXI_wvalid = m07_exit_pipeline_m_axi_WVALID;
  assign M08_AXI_araddr[12:0] = m08_exit_pipeline_m_axi_ARADDR;
  assign M08_AXI_arburst[1:0] = m08_exit_pipeline_m_axi_ARBURST;
  assign M08_AXI_arcache[3:0] = m08_exit_pipeline_m_axi_ARCACHE;
  assign M08_AXI_arlen[7:0] = m08_exit_pipeline_m_axi_ARLEN;
  assign M08_AXI_arlock[0] = m08_exit_pipeline_m_axi_ARLOCK;
  assign M08_AXI_arprot[2:0] = m08_exit_pipeline_m_axi_ARPROT;
  assign M08_AXI_arqos[3:0] = m08_exit_pipeline_m_axi_ARQOS;
  assign M08_AXI_arsize[2:0] = m08_exit_pipeline_m_axi_ARSIZE;
  assign M08_AXI_aruser[15:0] = m08_exit_pipeline_m_axi_ARUSER;
  assign M08_AXI_arvalid = m08_exit_pipeline_m_axi_ARVALID;
  assign M08_AXI_awaddr[12:0] = m08_exit_pipeline_m_axi_AWADDR;
  assign M08_AXI_awburst[1:0] = m08_exit_pipeline_m_axi_AWBURST;
  assign M08_AXI_awcache[3:0] = m08_exit_pipeline_m_axi_AWCACHE;
  assign M08_AXI_awlen[7:0] = m08_exit_pipeline_m_axi_AWLEN;
  assign M08_AXI_awlock[0] = m08_exit_pipeline_m_axi_AWLOCK;
  assign M08_AXI_awprot[2:0] = m08_exit_pipeline_m_axi_AWPROT;
  assign M08_AXI_awqos[3:0] = m08_exit_pipeline_m_axi_AWQOS;
  assign M08_AXI_awsize[2:0] = m08_exit_pipeline_m_axi_AWSIZE;
  assign M08_AXI_awuser[15:0] = m08_exit_pipeline_m_axi_AWUSER;
  assign M08_AXI_awvalid = m08_exit_pipeline_m_axi_AWVALID;
  assign M08_AXI_bready = m08_exit_pipeline_m_axi_BREADY;
  assign M08_AXI_rready = m08_exit_pipeline_m_axi_RREADY;
  assign M08_AXI_wdata[31:0] = m08_exit_pipeline_m_axi_WDATA;
  assign M08_AXI_wlast = m08_exit_pipeline_m_axi_WLAST;
  assign M08_AXI_wstrb[3:0] = m08_exit_pipeline_m_axi_WSTRB;
  assign M08_AXI_wvalid = m08_exit_pipeline_m_axi_WVALID;
  assign M09_AXI_araddr[12:0] = m09_exit_pipeline_m_axi_ARADDR;
  assign M09_AXI_arburst[1:0] = m09_exit_pipeline_m_axi_ARBURST;
  assign M09_AXI_arcache[3:0] = m09_exit_pipeline_m_axi_ARCACHE;
  assign M09_AXI_arlen[7:0] = m09_exit_pipeline_m_axi_ARLEN;
  assign M09_AXI_arlock[0] = m09_exit_pipeline_m_axi_ARLOCK;
  assign M09_AXI_arprot[2:0] = m09_exit_pipeline_m_axi_ARPROT;
  assign M09_AXI_arqos[3:0] = m09_exit_pipeline_m_axi_ARQOS;
  assign M09_AXI_arsize[2:0] = m09_exit_pipeline_m_axi_ARSIZE;
  assign M09_AXI_aruser[15:0] = m09_exit_pipeline_m_axi_ARUSER;
  assign M09_AXI_arvalid = m09_exit_pipeline_m_axi_ARVALID;
  assign M09_AXI_awaddr[12:0] = m09_exit_pipeline_m_axi_AWADDR;
  assign M09_AXI_awburst[1:0] = m09_exit_pipeline_m_axi_AWBURST;
  assign M09_AXI_awcache[3:0] = m09_exit_pipeline_m_axi_AWCACHE;
  assign M09_AXI_awlen[7:0] = m09_exit_pipeline_m_axi_AWLEN;
  assign M09_AXI_awlock[0] = m09_exit_pipeline_m_axi_AWLOCK;
  assign M09_AXI_awprot[2:0] = m09_exit_pipeline_m_axi_AWPROT;
  assign M09_AXI_awqos[3:0] = m09_exit_pipeline_m_axi_AWQOS;
  assign M09_AXI_awsize[2:0] = m09_exit_pipeline_m_axi_AWSIZE;
  assign M09_AXI_awuser[15:0] = m09_exit_pipeline_m_axi_AWUSER;
  assign M09_AXI_awvalid = m09_exit_pipeline_m_axi_AWVALID;
  assign M09_AXI_bready = m09_exit_pipeline_m_axi_BREADY;
  assign M09_AXI_rready = m09_exit_pipeline_m_axi_RREADY;
  assign M09_AXI_wdata[31:0] = m09_exit_pipeline_m_axi_WDATA;
  assign M09_AXI_wlast = m09_exit_pipeline_m_axi_WLAST;
  assign M09_AXI_wstrb[3:0] = m09_exit_pipeline_m_axi_WSTRB;
  assign M09_AXI_wvalid = m09_exit_pipeline_m_axi_WVALID;
  assign M10_AXI_araddr[12:0] = m10_exit_pipeline_m_axi_ARADDR;
  assign M10_AXI_arburst[1:0] = m10_exit_pipeline_m_axi_ARBURST;
  assign M10_AXI_arcache[3:0] = m10_exit_pipeline_m_axi_ARCACHE;
  assign M10_AXI_arlen[7:0] = m10_exit_pipeline_m_axi_ARLEN;
  assign M10_AXI_arlock[0] = m10_exit_pipeline_m_axi_ARLOCK;
  assign M10_AXI_arprot[2:0] = m10_exit_pipeline_m_axi_ARPROT;
  assign M10_AXI_arqos[3:0] = m10_exit_pipeline_m_axi_ARQOS;
  assign M10_AXI_arsize[2:0] = m10_exit_pipeline_m_axi_ARSIZE;
  assign M10_AXI_aruser[15:0] = m10_exit_pipeline_m_axi_ARUSER;
  assign M10_AXI_arvalid = m10_exit_pipeline_m_axi_ARVALID;
  assign M10_AXI_awaddr[12:0] = m10_exit_pipeline_m_axi_AWADDR;
  assign M10_AXI_awburst[1:0] = m10_exit_pipeline_m_axi_AWBURST;
  assign M10_AXI_awcache[3:0] = m10_exit_pipeline_m_axi_AWCACHE;
  assign M10_AXI_awlen[7:0] = m10_exit_pipeline_m_axi_AWLEN;
  assign M10_AXI_awlock[0] = m10_exit_pipeline_m_axi_AWLOCK;
  assign M10_AXI_awprot[2:0] = m10_exit_pipeline_m_axi_AWPROT;
  assign M10_AXI_awqos[3:0] = m10_exit_pipeline_m_axi_AWQOS;
  assign M10_AXI_awsize[2:0] = m10_exit_pipeline_m_axi_AWSIZE;
  assign M10_AXI_awuser[15:0] = m10_exit_pipeline_m_axi_AWUSER;
  assign M10_AXI_awvalid = m10_exit_pipeline_m_axi_AWVALID;
  assign M10_AXI_bready = m10_exit_pipeline_m_axi_BREADY;
  assign M10_AXI_rready = m10_exit_pipeline_m_axi_RREADY;
  assign M10_AXI_wdata[31:0] = m10_exit_pipeline_m_axi_WDATA;
  assign M10_AXI_wlast = m10_exit_pipeline_m_axi_WLAST;
  assign M10_AXI_wstrb[3:0] = m10_exit_pipeline_m_axi_WSTRB;
  assign M10_AXI_wvalid = m10_exit_pipeline_m_axi_WVALID;
  assign M11_AXI_araddr[12:0] = m11_exit_pipeline_m_axi_ARADDR;
  assign M11_AXI_arburst[1:0] = m11_exit_pipeline_m_axi_ARBURST;
  assign M11_AXI_arcache[3:0] = m11_exit_pipeline_m_axi_ARCACHE;
  assign M11_AXI_arlen[7:0] = m11_exit_pipeline_m_axi_ARLEN;
  assign M11_AXI_arlock[0] = m11_exit_pipeline_m_axi_ARLOCK;
  assign M11_AXI_arprot[2:0] = m11_exit_pipeline_m_axi_ARPROT;
  assign M11_AXI_arqos[3:0] = m11_exit_pipeline_m_axi_ARQOS;
  assign M11_AXI_arsize[2:0] = m11_exit_pipeline_m_axi_ARSIZE;
  assign M11_AXI_aruser[15:0] = m11_exit_pipeline_m_axi_ARUSER;
  assign M11_AXI_arvalid = m11_exit_pipeline_m_axi_ARVALID;
  assign M11_AXI_awaddr[12:0] = m11_exit_pipeline_m_axi_AWADDR;
  assign M11_AXI_awburst[1:0] = m11_exit_pipeline_m_axi_AWBURST;
  assign M11_AXI_awcache[3:0] = m11_exit_pipeline_m_axi_AWCACHE;
  assign M11_AXI_awlen[7:0] = m11_exit_pipeline_m_axi_AWLEN;
  assign M11_AXI_awlock[0] = m11_exit_pipeline_m_axi_AWLOCK;
  assign M11_AXI_awprot[2:0] = m11_exit_pipeline_m_axi_AWPROT;
  assign M11_AXI_awqos[3:0] = m11_exit_pipeline_m_axi_AWQOS;
  assign M11_AXI_awsize[2:0] = m11_exit_pipeline_m_axi_AWSIZE;
  assign M11_AXI_awuser[15:0] = m11_exit_pipeline_m_axi_AWUSER;
  assign M11_AXI_awvalid = m11_exit_pipeline_m_axi_AWVALID;
  assign M11_AXI_bready = m11_exit_pipeline_m_axi_BREADY;
  assign M11_AXI_rready = m11_exit_pipeline_m_axi_RREADY;
  assign M11_AXI_wdata[31:0] = m11_exit_pipeline_m_axi_WDATA;
  assign M11_AXI_wlast = m11_exit_pipeline_m_axi_WLAST;
  assign M11_AXI_wstrb[3:0] = m11_exit_pipeline_m_axi_WSTRB;
  assign M11_AXI_wvalid = m11_exit_pipeline_m_axi_WVALID;
  assign M12_AXI_araddr[4:0] = m12_exit_pipeline_m_axi_ARADDR;
  assign M12_AXI_arprot[2:0] = m12_exit_pipeline_m_axi_ARPROT;
  assign M12_AXI_arvalid = m12_exit_pipeline_m_axi_ARVALID;
  assign M12_AXI_awaddr[4:0] = m12_exit_pipeline_m_axi_AWADDR;
  assign M12_AXI_awprot[2:0] = m12_exit_pipeline_m_axi_AWPROT;
  assign M12_AXI_awvalid = m12_exit_pipeline_m_axi_AWVALID;
  assign M12_AXI_bready = m12_exit_pipeline_m_axi_BREADY;
  assign M12_AXI_rready = m12_exit_pipeline_m_axi_RREADY;
  assign M12_AXI_wdata[31:0] = m12_exit_pipeline_m_axi_WDATA;
  assign M12_AXI_wstrb[3:0] = m12_exit_pipeline_m_axi_WSTRB;
  assign M12_AXI_wvalid = m12_exit_pipeline_m_axi_WVALID;
  assign M13_AXI_araddr[4:0] = m13_exit_pipeline_m_axi_ARADDR;
  assign M13_AXI_arprot[2:0] = m13_exit_pipeline_m_axi_ARPROT;
  assign M13_AXI_arvalid = m13_exit_pipeline_m_axi_ARVALID;
  assign M13_AXI_awaddr[4:0] = m13_exit_pipeline_m_axi_AWADDR;
  assign M13_AXI_awprot[2:0] = m13_exit_pipeline_m_axi_AWPROT;
  assign M13_AXI_awvalid = m13_exit_pipeline_m_axi_AWVALID;
  assign M13_AXI_bready = m13_exit_pipeline_m_axi_BREADY;
  assign M13_AXI_rready = m13_exit_pipeline_m_axi_RREADY;
  assign M13_AXI_wdata[31:0] = m13_exit_pipeline_m_axi_WDATA;
  assign M13_AXI_wstrb[3:0] = m13_exit_pipeline_m_axi_WSTRB;
  assign M13_AXI_wvalid = m13_exit_pipeline_m_axi_WVALID;
  assign M14_AXI_araddr[4:0] = m14_exit_pipeline_m_axi_ARADDR;
  assign M14_AXI_arprot[2:0] = m14_exit_pipeline_m_axi_ARPROT;
  assign M14_AXI_arvalid = m14_exit_pipeline_m_axi_ARVALID;
  assign M14_AXI_awaddr[4:0] = m14_exit_pipeline_m_axi_AWADDR;
  assign M14_AXI_awprot[2:0] = m14_exit_pipeline_m_axi_AWPROT;
  assign M14_AXI_awvalid = m14_exit_pipeline_m_axi_AWVALID;
  assign M14_AXI_bready = m14_exit_pipeline_m_axi_BREADY;
  assign M14_AXI_rready = m14_exit_pipeline_m_axi_RREADY;
  assign M14_AXI_wdata[31:0] = m14_exit_pipeline_m_axi_WDATA;
  assign M14_AXI_wstrb[3:0] = m14_exit_pipeline_m_axi_WSTRB;
  assign M14_AXI_wvalid = m14_exit_pipeline_m_axi_WVALID;
  assign M15_AXI_araddr[4:0] = m15_exit_pipeline_m_axi_ARADDR;
  assign M15_AXI_arprot[2:0] = m15_exit_pipeline_m_axi_ARPROT;
  assign M15_AXI_arvalid = m15_exit_pipeline_m_axi_ARVALID;
  assign M15_AXI_awaddr[4:0] = m15_exit_pipeline_m_axi_AWADDR;
  assign M15_AXI_awprot[2:0] = m15_exit_pipeline_m_axi_AWPROT;
  assign M15_AXI_awvalid = m15_exit_pipeline_m_axi_AWVALID;
  assign M15_AXI_bready = m15_exit_pipeline_m_axi_BREADY;
  assign M15_AXI_rready = m15_exit_pipeline_m_axi_RREADY;
  assign M15_AXI_wdata[31:0] = m15_exit_pipeline_m_axi_WDATA;
  assign M15_AXI_wstrb[3:0] = m15_exit_pipeline_m_axi_WSTRB;
  assign M15_AXI_wvalid = m15_exit_pipeline_m_axi_WVALID;
  assign M16_AXI_araddr[4:0] = m16_exit_pipeline_m_axi_ARADDR;
  assign M16_AXI_arprot[2:0] = m16_exit_pipeline_m_axi_ARPROT;
  assign M16_AXI_arvalid = m16_exit_pipeline_m_axi_ARVALID;
  assign M16_AXI_awaddr[4:0] = m16_exit_pipeline_m_axi_AWADDR;
  assign M16_AXI_awprot[2:0] = m16_exit_pipeline_m_axi_AWPROT;
  assign M16_AXI_awvalid = m16_exit_pipeline_m_axi_AWVALID;
  assign M16_AXI_bready = m16_exit_pipeline_m_axi_BREADY;
  assign M16_AXI_rready = m16_exit_pipeline_m_axi_RREADY;
  assign M16_AXI_wdata[31:0] = m16_exit_pipeline_m_axi_WDATA;
  assign M16_AXI_wstrb[3:0] = m16_exit_pipeline_m_axi_WSTRB;
  assign M16_AXI_wvalid = m16_exit_pipeline_m_axi_WVALID;
  assign M17_AXI_araddr[4:0] = m17_exit_pipeline_m_axi_ARADDR;
  assign M17_AXI_arprot[2:0] = m17_exit_pipeline_m_axi_ARPROT;
  assign M17_AXI_arvalid = m17_exit_pipeline_m_axi_ARVALID;
  assign M17_AXI_awaddr[4:0] = m17_exit_pipeline_m_axi_AWADDR;
  assign M17_AXI_awprot[2:0] = m17_exit_pipeline_m_axi_AWPROT;
  assign M17_AXI_awvalid = m17_exit_pipeline_m_axi_AWVALID;
  assign M17_AXI_bready = m17_exit_pipeline_m_axi_BREADY;
  assign M17_AXI_rready = m17_exit_pipeline_m_axi_RREADY;
  assign M17_AXI_wdata[31:0] = m17_exit_pipeline_m_axi_WDATA;
  assign M17_AXI_wstrb[3:0] = m17_exit_pipeline_m_axi_WSTRB;
  assign M17_AXI_wvalid = m17_exit_pipeline_m_axi_WVALID;
  assign M18_AXI_araddr[4:0] = m18_exit_pipeline_m_axi_ARADDR;
  assign M18_AXI_arprot[2:0] = m18_exit_pipeline_m_axi_ARPROT;
  assign M18_AXI_arvalid = m18_exit_pipeline_m_axi_ARVALID;
  assign M18_AXI_awaddr[4:0] = m18_exit_pipeline_m_axi_AWADDR;
  assign M18_AXI_awprot[2:0] = m18_exit_pipeline_m_axi_AWPROT;
  assign M18_AXI_awvalid = m18_exit_pipeline_m_axi_AWVALID;
  assign M18_AXI_bready = m18_exit_pipeline_m_axi_BREADY;
  assign M18_AXI_rready = m18_exit_pipeline_m_axi_RREADY;
  assign M18_AXI_wdata[31:0] = m18_exit_pipeline_m_axi_WDATA;
  assign M18_AXI_wstrb[3:0] = m18_exit_pipeline_m_axi_WSTRB;
  assign M18_AXI_wvalid = m18_exit_pipeline_m_axi_WVALID;
  assign M19_AXI_araddr[4:0] = m19_exit_pipeline_m_axi_ARADDR;
  assign M19_AXI_arprot[2:0] = m19_exit_pipeline_m_axi_ARPROT;
  assign M19_AXI_arvalid = m19_exit_pipeline_m_axi_ARVALID;
  assign M19_AXI_awaddr[4:0] = m19_exit_pipeline_m_axi_AWADDR;
  assign M19_AXI_awprot[2:0] = m19_exit_pipeline_m_axi_AWPROT;
  assign M19_AXI_awvalid = m19_exit_pipeline_m_axi_AWVALID;
  assign M19_AXI_bready = m19_exit_pipeline_m_axi_BREADY;
  assign M19_AXI_rready = m19_exit_pipeline_m_axi_RREADY;
  assign M19_AXI_wdata[31:0] = m19_exit_pipeline_m_axi_WDATA;
  assign M19_AXI_wstrb[3:0] = m19_exit_pipeline_m_axi_WSTRB;
  assign M19_AXI_wvalid = m19_exit_pipeline_m_axi_WVALID;
  assign M20_AXI_araddr[4:0] = m20_exit_pipeline_m_axi_ARADDR;
  assign M20_AXI_arprot[2:0] = m20_exit_pipeline_m_axi_ARPROT;
  assign M20_AXI_arvalid = m20_exit_pipeline_m_axi_ARVALID;
  assign M20_AXI_awaddr[4:0] = m20_exit_pipeline_m_axi_AWADDR;
  assign M20_AXI_awprot[2:0] = m20_exit_pipeline_m_axi_AWPROT;
  assign M20_AXI_awvalid = m20_exit_pipeline_m_axi_AWVALID;
  assign M20_AXI_bready = m20_exit_pipeline_m_axi_BREADY;
  assign M20_AXI_rready = m20_exit_pipeline_m_axi_RREADY;
  assign M20_AXI_wdata[31:0] = m20_exit_pipeline_m_axi_WDATA;
  assign M20_AXI_wstrb[3:0] = m20_exit_pipeline_m_axi_WSTRB;
  assign M20_AXI_wvalid = m20_exit_pipeline_m_axi_WVALID;
  assign M21_AXI_araddr[4:0] = m21_exit_pipeline_m_axi_ARADDR;
  assign M21_AXI_arprot[2:0] = m21_exit_pipeline_m_axi_ARPROT;
  assign M21_AXI_arvalid = m21_exit_pipeline_m_axi_ARVALID;
  assign M21_AXI_awaddr[4:0] = m21_exit_pipeline_m_axi_AWADDR;
  assign M21_AXI_awprot[2:0] = m21_exit_pipeline_m_axi_AWPROT;
  assign M21_AXI_awvalid = m21_exit_pipeline_m_axi_AWVALID;
  assign M21_AXI_bready = m21_exit_pipeline_m_axi_BREADY;
  assign M21_AXI_rready = m21_exit_pipeline_m_axi_RREADY;
  assign M21_AXI_wdata[31:0] = m21_exit_pipeline_m_axi_WDATA;
  assign M21_AXI_wstrb[3:0] = m21_exit_pipeline_m_axi_WSTRB;
  assign M21_AXI_wvalid = m21_exit_pipeline_m_axi_WVALID;
  assign M22_AXI_araddr[4:0] = m22_exit_pipeline_m_axi_ARADDR;
  assign M22_AXI_arprot[2:0] = m22_exit_pipeline_m_axi_ARPROT;
  assign M22_AXI_arvalid = m22_exit_pipeline_m_axi_ARVALID;
  assign M22_AXI_awaddr[4:0] = m22_exit_pipeline_m_axi_AWADDR;
  assign M22_AXI_awprot[2:0] = m22_exit_pipeline_m_axi_AWPROT;
  assign M22_AXI_awvalid = m22_exit_pipeline_m_axi_AWVALID;
  assign M22_AXI_bready = m22_exit_pipeline_m_axi_BREADY;
  assign M22_AXI_rready = m22_exit_pipeline_m_axi_RREADY;
  assign M22_AXI_wdata[31:0] = m22_exit_pipeline_m_axi_WDATA;
  assign M22_AXI_wstrb[3:0] = m22_exit_pipeline_m_axi_WSTRB;
  assign M22_AXI_wvalid = m22_exit_pipeline_m_axi_WVALID;
  assign M23_AXI_araddr[4:0] = m23_exit_pipeline_m_axi_ARADDR;
  assign M23_AXI_arprot[2:0] = m23_exit_pipeline_m_axi_ARPROT;
  assign M23_AXI_arvalid = m23_exit_pipeline_m_axi_ARVALID;
  assign M23_AXI_awaddr[4:0] = m23_exit_pipeline_m_axi_AWADDR;
  assign M23_AXI_awprot[2:0] = m23_exit_pipeline_m_axi_AWPROT;
  assign M23_AXI_awvalid = m23_exit_pipeline_m_axi_AWVALID;
  assign M23_AXI_bready = m23_exit_pipeline_m_axi_BREADY;
  assign M23_AXI_rready = m23_exit_pipeline_m_axi_RREADY;
  assign M23_AXI_wdata[31:0] = m23_exit_pipeline_m_axi_WDATA;
  assign M23_AXI_wstrb[3:0] = m23_exit_pipeline_m_axi_WSTRB;
  assign M23_AXI_wvalid = m23_exit_pipeline_m_axi_WVALID;
  assign M24_AXI_araddr[9:0] = m24_exit_pipeline_m_axi_ARADDR;
  assign M24_AXI_arprot[2:0] = m24_exit_pipeline_m_axi_ARPROT;
  assign M24_AXI_arvalid = m24_exit_pipeline_m_axi_ARVALID;
  assign M24_AXI_awaddr[9:0] = m24_exit_pipeline_m_axi_AWADDR;
  assign M24_AXI_awprot[2:0] = m24_exit_pipeline_m_axi_AWPROT;
  assign M24_AXI_awvalid = m24_exit_pipeline_m_axi_AWVALID;
  assign M24_AXI_bready = m24_exit_pipeline_m_axi_BREADY;
  assign M24_AXI_rready = m24_exit_pipeline_m_axi_RREADY;
  assign M24_AXI_wdata[31:0] = m24_exit_pipeline_m_axi_WDATA;
  assign M24_AXI_wstrb[3:0] = m24_exit_pipeline_m_axi_WSTRB;
  assign M24_AXI_wvalid = m24_exit_pipeline_m_axi_WVALID;
  assign M25_AXI_araddr[9:0] = m25_exit_pipeline_m_axi_ARADDR;
  assign M25_AXI_arprot[2:0] = m25_exit_pipeline_m_axi_ARPROT;
  assign M25_AXI_arvalid = m25_exit_pipeline_m_axi_ARVALID;
  assign M25_AXI_awaddr[9:0] = m25_exit_pipeline_m_axi_AWADDR;
  assign M25_AXI_awprot[2:0] = m25_exit_pipeline_m_axi_AWPROT;
  assign M25_AXI_awvalid = m25_exit_pipeline_m_axi_AWVALID;
  assign M25_AXI_bready = m25_exit_pipeline_m_axi_BREADY;
  assign M25_AXI_rready = m25_exit_pipeline_m_axi_RREADY;
  assign M25_AXI_wdata[31:0] = m25_exit_pipeline_m_axi_WDATA;
  assign M25_AXI_wstrb[3:0] = m25_exit_pipeline_m_axi_WSTRB;
  assign M25_AXI_wvalid = m25_exit_pipeline_m_axi_WVALID;
  assign M26_AXI_araddr[9:0] = m26_exit_pipeline_m_axi_ARADDR;
  assign M26_AXI_arprot[2:0] = m26_exit_pipeline_m_axi_ARPROT;
  assign M26_AXI_arvalid = m26_exit_pipeline_m_axi_ARVALID;
  assign M26_AXI_awaddr[9:0] = m26_exit_pipeline_m_axi_AWADDR;
  assign M26_AXI_awprot[2:0] = m26_exit_pipeline_m_axi_AWPROT;
  assign M26_AXI_awvalid = m26_exit_pipeline_m_axi_AWVALID;
  assign M26_AXI_bready = m26_exit_pipeline_m_axi_BREADY;
  assign M26_AXI_rready = m26_exit_pipeline_m_axi_RREADY;
  assign M26_AXI_wdata[31:0] = m26_exit_pipeline_m_axi_WDATA;
  assign M26_AXI_wstrb[3:0] = m26_exit_pipeline_m_axi_WSTRB;
  assign M26_AXI_wvalid = m26_exit_pipeline_m_axi_WVALID;
  assign M27_AXI_araddr[9:0] = m27_exit_pipeline_m_axi_ARADDR;
  assign M27_AXI_arprot[2:0] = m27_exit_pipeline_m_axi_ARPROT;
  assign M27_AXI_arvalid = m27_exit_pipeline_m_axi_ARVALID;
  assign M27_AXI_awaddr[9:0] = m27_exit_pipeline_m_axi_AWADDR;
  assign M27_AXI_awprot[2:0] = m27_exit_pipeline_m_axi_AWPROT;
  assign M27_AXI_awvalid = m27_exit_pipeline_m_axi_AWVALID;
  assign M27_AXI_bready = m27_exit_pipeline_m_axi_BREADY;
  assign M27_AXI_rready = m27_exit_pipeline_m_axi_RREADY;
  assign M27_AXI_wdata[31:0] = m27_exit_pipeline_m_axi_WDATA;
  assign M27_AXI_wstrb[3:0] = m27_exit_pipeline_m_axi_WSTRB;
  assign M27_AXI_wvalid = m27_exit_pipeline_m_axi_WVALID;
  assign M28_AXI_araddr[9:0] = m28_exit_pipeline_m_axi_ARADDR;
  assign M28_AXI_arprot[2:0] = m28_exit_pipeline_m_axi_ARPROT;
  assign M28_AXI_arvalid = m28_exit_pipeline_m_axi_ARVALID;
  assign M28_AXI_awaddr[9:0] = m28_exit_pipeline_m_axi_AWADDR;
  assign M28_AXI_awprot[2:0] = m28_exit_pipeline_m_axi_AWPROT;
  assign M28_AXI_awvalid = m28_exit_pipeline_m_axi_AWVALID;
  assign M28_AXI_bready = m28_exit_pipeline_m_axi_BREADY;
  assign M28_AXI_rready = m28_exit_pipeline_m_axi_RREADY;
  assign M28_AXI_wdata[31:0] = m28_exit_pipeline_m_axi_WDATA;
  assign M28_AXI_wstrb[3:0] = m28_exit_pipeline_m_axi_WSTRB;
  assign M28_AXI_wvalid = m28_exit_pipeline_m_axi_WVALID;
  assign M29_AXI_araddr[9:0] = m29_exit_pipeline_m_axi_ARADDR;
  assign M29_AXI_arprot[2:0] = m29_exit_pipeline_m_axi_ARPROT;
  assign M29_AXI_arvalid = m29_exit_pipeline_m_axi_ARVALID;
  assign M29_AXI_awaddr[9:0] = m29_exit_pipeline_m_axi_AWADDR;
  assign M29_AXI_awprot[2:0] = m29_exit_pipeline_m_axi_AWPROT;
  assign M29_AXI_awvalid = m29_exit_pipeline_m_axi_AWVALID;
  assign M29_AXI_bready = m29_exit_pipeline_m_axi_BREADY;
  assign M29_AXI_rready = m29_exit_pipeline_m_axi_RREADY;
  assign M29_AXI_wdata[31:0] = m29_exit_pipeline_m_axi_WDATA;
  assign M29_AXI_wstrb[3:0] = m29_exit_pipeline_m_axi_WSTRB;
  assign M29_AXI_wvalid = m29_exit_pipeline_m_axi_WVALID;
  assign M30_AXI_araddr[9:0] = m30_exit_pipeline_m_axi_ARADDR;
  assign M30_AXI_arprot[2:0] = m30_exit_pipeline_m_axi_ARPROT;
  assign M30_AXI_arvalid = m30_exit_pipeline_m_axi_ARVALID;
  assign M30_AXI_awaddr[9:0] = m30_exit_pipeline_m_axi_AWADDR;
  assign M30_AXI_awprot[2:0] = m30_exit_pipeline_m_axi_AWPROT;
  assign M30_AXI_awvalid = m30_exit_pipeline_m_axi_AWVALID;
  assign M30_AXI_bready = m30_exit_pipeline_m_axi_BREADY;
  assign M30_AXI_rready = m30_exit_pipeline_m_axi_RREADY;
  assign M30_AXI_wdata[31:0] = m30_exit_pipeline_m_axi_WDATA;
  assign M30_AXI_wstrb[3:0] = m30_exit_pipeline_m_axi_WSTRB;
  assign M30_AXI_wvalid = m30_exit_pipeline_m_axi_WVALID;
  assign M31_AXI_araddr[9:0] = m31_exit_pipeline_m_axi_ARADDR;
  assign M31_AXI_arprot[2:0] = m31_exit_pipeline_m_axi_ARPROT;
  assign M31_AXI_arvalid = m31_exit_pipeline_m_axi_ARVALID;
  assign M31_AXI_awaddr[9:0] = m31_exit_pipeline_m_axi_AWADDR;
  assign M31_AXI_awprot[2:0] = m31_exit_pipeline_m_axi_AWPROT;
  assign M31_AXI_awvalid = m31_exit_pipeline_m_axi_AWVALID;
  assign M31_AXI_bready = m31_exit_pipeline_m_axi_BREADY;
  assign M31_AXI_rready = m31_exit_pipeline_m_axi_RREADY;
  assign M31_AXI_wdata[31:0] = m31_exit_pipeline_m_axi_WDATA;
  assign M31_AXI_wstrb[3:0] = m31_exit_pipeline_m_axi_WSTRB;
  assign M31_AXI_wvalid = m31_exit_pipeline_m_axi_WVALID;
  assign M32_AXI_araddr[9:0] = m32_exit_pipeline_m_axi_ARADDR;
  assign M32_AXI_arprot[2:0] = m32_exit_pipeline_m_axi_ARPROT;
  assign M32_AXI_arvalid = m32_exit_pipeline_m_axi_ARVALID;
  assign M32_AXI_awaddr[9:0] = m32_exit_pipeline_m_axi_AWADDR;
  assign M32_AXI_awprot[2:0] = m32_exit_pipeline_m_axi_AWPROT;
  assign M32_AXI_awvalid = m32_exit_pipeline_m_axi_AWVALID;
  assign M32_AXI_bready = m32_exit_pipeline_m_axi_BREADY;
  assign M32_AXI_rready = m32_exit_pipeline_m_axi_RREADY;
  assign M32_AXI_wdata[31:0] = m32_exit_pipeline_m_axi_WDATA;
  assign M32_AXI_wstrb[3:0] = m32_exit_pipeline_m_axi_WSTRB;
  assign M32_AXI_wvalid = m32_exit_pipeline_m_axi_WVALID;
  assign M33_AXI_araddr[9:0] = m33_exit_pipeline_m_axi_ARADDR;
  assign M33_AXI_arprot[2:0] = m33_exit_pipeline_m_axi_ARPROT;
  assign M33_AXI_arvalid = m33_exit_pipeline_m_axi_ARVALID;
  assign M33_AXI_awaddr[9:0] = m33_exit_pipeline_m_axi_AWADDR;
  assign M33_AXI_awprot[2:0] = m33_exit_pipeline_m_axi_AWPROT;
  assign M33_AXI_awvalid = m33_exit_pipeline_m_axi_AWVALID;
  assign M33_AXI_bready = m33_exit_pipeline_m_axi_BREADY;
  assign M33_AXI_rready = m33_exit_pipeline_m_axi_RREADY;
  assign M33_AXI_wdata[31:0] = m33_exit_pipeline_m_axi_WDATA;
  assign M33_AXI_wstrb[3:0] = m33_exit_pipeline_m_axi_WSTRB;
  assign M33_AXI_wvalid = m33_exit_pipeline_m_axi_WVALID;
  assign M34_AXI_araddr[9:0] = m34_exit_pipeline_m_axi_ARADDR;
  assign M34_AXI_arprot[2:0] = m34_exit_pipeline_m_axi_ARPROT;
  assign M34_AXI_arvalid = m34_exit_pipeline_m_axi_ARVALID;
  assign M34_AXI_awaddr[9:0] = m34_exit_pipeline_m_axi_AWADDR;
  assign M34_AXI_awprot[2:0] = m34_exit_pipeline_m_axi_AWPROT;
  assign M34_AXI_awvalid = m34_exit_pipeline_m_axi_AWVALID;
  assign M34_AXI_bready = m34_exit_pipeline_m_axi_BREADY;
  assign M34_AXI_rready = m34_exit_pipeline_m_axi_RREADY;
  assign M34_AXI_wdata[31:0] = m34_exit_pipeline_m_axi_WDATA;
  assign M34_AXI_wstrb[3:0] = m34_exit_pipeline_m_axi_WSTRB;
  assign M34_AXI_wvalid = m34_exit_pipeline_m_axi_WVALID;
  assign M35_AXI_araddr[9:0] = m35_exit_pipeline_m_axi_ARADDR;
  assign M35_AXI_arprot[2:0] = m35_exit_pipeline_m_axi_ARPROT;
  assign M35_AXI_arvalid = m35_exit_pipeline_m_axi_ARVALID;
  assign M35_AXI_awaddr[9:0] = m35_exit_pipeline_m_axi_AWADDR;
  assign M35_AXI_awprot[2:0] = m35_exit_pipeline_m_axi_AWPROT;
  assign M35_AXI_awvalid = m35_exit_pipeline_m_axi_AWVALID;
  assign M35_AXI_bready = m35_exit_pipeline_m_axi_BREADY;
  assign M35_AXI_rready = m35_exit_pipeline_m_axi_RREADY;
  assign M35_AXI_wdata[31:0] = m35_exit_pipeline_m_axi_WDATA;
  assign M35_AXI_wstrb[3:0] = m35_exit_pipeline_m_axi_WSTRB;
  assign M35_AXI_wvalid = m35_exit_pipeline_m_axi_WVALID;
  assign M36_AXI_araddr[9:0] = m36_exit_pipeline_m_axi_ARADDR;
  assign M36_AXI_arprot[2:0] = m36_exit_pipeline_m_axi_ARPROT;
  assign M36_AXI_arvalid = m36_exit_pipeline_m_axi_ARVALID;
  assign M36_AXI_awaddr[9:0] = m36_exit_pipeline_m_axi_AWADDR;
  assign M36_AXI_awprot[2:0] = m36_exit_pipeline_m_axi_AWPROT;
  assign M36_AXI_awvalid = m36_exit_pipeline_m_axi_AWVALID;
  assign M36_AXI_bready = m36_exit_pipeline_m_axi_BREADY;
  assign M36_AXI_rready = m36_exit_pipeline_m_axi_RREADY;
  assign M36_AXI_wdata[31:0] = m36_exit_pipeline_m_axi_WDATA;
  assign M36_AXI_wstrb[3:0] = m36_exit_pipeline_m_axi_WSTRB;
  assign M36_AXI_wvalid = m36_exit_pipeline_m_axi_WVALID;
  assign M37_AXI_araddr[9:0] = m37_exit_pipeline_m_axi_ARADDR;
  assign M37_AXI_arprot[2:0] = m37_exit_pipeline_m_axi_ARPROT;
  assign M37_AXI_arvalid = m37_exit_pipeline_m_axi_ARVALID;
  assign M37_AXI_awaddr[9:0] = m37_exit_pipeline_m_axi_AWADDR;
  assign M37_AXI_awprot[2:0] = m37_exit_pipeline_m_axi_AWPROT;
  assign M37_AXI_awvalid = m37_exit_pipeline_m_axi_AWVALID;
  assign M37_AXI_bready = m37_exit_pipeline_m_axi_BREADY;
  assign M37_AXI_rready = m37_exit_pipeline_m_axi_RREADY;
  assign M37_AXI_wdata[31:0] = m37_exit_pipeline_m_axi_WDATA;
  assign M37_AXI_wstrb[3:0] = m37_exit_pipeline_m_axi_WSTRB;
  assign M37_AXI_wvalid = m37_exit_pipeline_m_axi_WVALID;
  assign M38_AXI_araddr[9:0] = m38_exit_pipeline_m_axi_ARADDR;
  assign M38_AXI_arprot[2:0] = m38_exit_pipeline_m_axi_ARPROT;
  assign M38_AXI_arvalid = m38_exit_pipeline_m_axi_ARVALID;
  assign M38_AXI_awaddr[9:0] = m38_exit_pipeline_m_axi_AWADDR;
  assign M38_AXI_awprot[2:0] = m38_exit_pipeline_m_axi_AWPROT;
  assign M38_AXI_awvalid = m38_exit_pipeline_m_axi_AWVALID;
  assign M38_AXI_bready = m38_exit_pipeline_m_axi_BREADY;
  assign M38_AXI_rready = m38_exit_pipeline_m_axi_RREADY;
  assign M38_AXI_wdata[31:0] = m38_exit_pipeline_m_axi_WDATA;
  assign M38_AXI_wstrb[3:0] = m38_exit_pipeline_m_axi_WSTRB;
  assign M38_AXI_wvalid = m38_exit_pipeline_m_axi_WVALID;
  assign M39_AXI_araddr[9:0] = m39_exit_pipeline_m_axi_ARADDR;
  assign M39_AXI_arprot[2:0] = m39_exit_pipeline_m_axi_ARPROT;
  assign M39_AXI_arvalid = m39_exit_pipeline_m_axi_ARVALID;
  assign M39_AXI_awaddr[9:0] = m39_exit_pipeline_m_axi_AWADDR;
  assign M39_AXI_awprot[2:0] = m39_exit_pipeline_m_axi_AWPROT;
  assign M39_AXI_awvalid = m39_exit_pipeline_m_axi_AWVALID;
  assign M39_AXI_bready = m39_exit_pipeline_m_axi_BREADY;
  assign M39_AXI_rready = m39_exit_pipeline_m_axi_RREADY;
  assign M39_AXI_wdata[31:0] = m39_exit_pipeline_m_axi_WDATA;
  assign M39_AXI_wstrb[3:0] = m39_exit_pipeline_m_axi_WSTRB;
  assign M39_AXI_wvalid = m39_exit_pipeline_m_axi_WVALID;
  assign M40_AXI_araddr[9:0] = m40_exit_pipeline_m_axi_ARADDR;
  assign M40_AXI_arprot[2:0] = m40_exit_pipeline_m_axi_ARPROT;
  assign M40_AXI_arvalid = m40_exit_pipeline_m_axi_ARVALID;
  assign M40_AXI_awaddr[9:0] = m40_exit_pipeline_m_axi_AWADDR;
  assign M40_AXI_awprot[2:0] = m40_exit_pipeline_m_axi_AWPROT;
  assign M40_AXI_awvalid = m40_exit_pipeline_m_axi_AWVALID;
  assign M40_AXI_bready = m40_exit_pipeline_m_axi_BREADY;
  assign M40_AXI_rready = m40_exit_pipeline_m_axi_RREADY;
  assign M40_AXI_wdata[31:0] = m40_exit_pipeline_m_axi_WDATA;
  assign M40_AXI_wstrb[3:0] = m40_exit_pipeline_m_axi_WSTRB;
  assign M40_AXI_wvalid = m40_exit_pipeline_m_axi_WVALID;
  assign M41_AXI_araddr[9:0] = m41_exit_pipeline_m_axi_ARADDR;
  assign M41_AXI_arprot[2:0] = m41_exit_pipeline_m_axi_ARPROT;
  assign M41_AXI_arvalid = m41_exit_pipeline_m_axi_ARVALID;
  assign M41_AXI_awaddr[9:0] = m41_exit_pipeline_m_axi_AWADDR;
  assign M41_AXI_awprot[2:0] = m41_exit_pipeline_m_axi_AWPROT;
  assign M41_AXI_awvalid = m41_exit_pipeline_m_axi_AWVALID;
  assign M41_AXI_bready = m41_exit_pipeline_m_axi_BREADY;
  assign M41_AXI_rready = m41_exit_pipeline_m_axi_RREADY;
  assign M41_AXI_wdata[31:0] = m41_exit_pipeline_m_axi_WDATA;
  assign M41_AXI_wstrb[3:0] = m41_exit_pipeline_m_axi_WSTRB;
  assign M41_AXI_wvalid = m41_exit_pipeline_m_axi_WVALID;
  assign M42_AXI_araddr[9:0] = m42_exit_pipeline_m_axi_ARADDR;
  assign M42_AXI_arprot[2:0] = m42_exit_pipeline_m_axi_ARPROT;
  assign M42_AXI_arvalid = m42_exit_pipeline_m_axi_ARVALID;
  assign M42_AXI_awaddr[9:0] = m42_exit_pipeline_m_axi_AWADDR;
  assign M42_AXI_awprot[2:0] = m42_exit_pipeline_m_axi_AWPROT;
  assign M42_AXI_awvalid = m42_exit_pipeline_m_axi_AWVALID;
  assign M42_AXI_bready = m42_exit_pipeline_m_axi_BREADY;
  assign M42_AXI_rready = m42_exit_pipeline_m_axi_RREADY;
  assign M42_AXI_wdata[31:0] = m42_exit_pipeline_m_axi_WDATA;
  assign M42_AXI_wstrb[3:0] = m42_exit_pipeline_m_axi_WSTRB;
  assign M42_AXI_wvalid = m42_exit_pipeline_m_axi_WVALID;
  assign M43_AXI_araddr[9:0] = m43_exit_pipeline_m_axi_ARADDR;
  assign M43_AXI_arprot[2:0] = m43_exit_pipeline_m_axi_ARPROT;
  assign M43_AXI_arvalid = m43_exit_pipeline_m_axi_ARVALID;
  assign M43_AXI_awaddr[9:0] = m43_exit_pipeline_m_axi_AWADDR;
  assign M43_AXI_awprot[2:0] = m43_exit_pipeline_m_axi_AWPROT;
  assign M43_AXI_awvalid = m43_exit_pipeline_m_axi_AWVALID;
  assign M43_AXI_bready = m43_exit_pipeline_m_axi_BREADY;
  assign M43_AXI_rready = m43_exit_pipeline_m_axi_RREADY;
  assign M43_AXI_wdata[31:0] = m43_exit_pipeline_m_axi_WDATA;
  assign M43_AXI_wstrb[3:0] = m43_exit_pipeline_m_axi_WSTRB;
  assign M43_AXI_wvalid = m43_exit_pipeline_m_axi_WVALID;
  assign M44_AXI_araddr[9:0] = m44_exit_pipeline_m_axi_ARADDR;
  assign M44_AXI_arprot[2:0] = m44_exit_pipeline_m_axi_ARPROT;
  assign M44_AXI_arvalid = m44_exit_pipeline_m_axi_ARVALID;
  assign M44_AXI_awaddr[9:0] = m44_exit_pipeline_m_axi_AWADDR;
  assign M44_AXI_awprot[2:0] = m44_exit_pipeline_m_axi_AWPROT;
  assign M44_AXI_awvalid = m44_exit_pipeline_m_axi_AWVALID;
  assign M44_AXI_bready = m44_exit_pipeline_m_axi_BREADY;
  assign M44_AXI_rready = m44_exit_pipeline_m_axi_RREADY;
  assign M44_AXI_wdata[31:0] = m44_exit_pipeline_m_axi_WDATA;
  assign M44_AXI_wstrb[3:0] = m44_exit_pipeline_m_axi_WSTRB;
  assign M44_AXI_wvalid = m44_exit_pipeline_m_axi_WVALID;
  assign M45_AXI_araddr[9:0] = m45_exit_pipeline_m_axi_ARADDR;
  assign M45_AXI_arprot[2:0] = m45_exit_pipeline_m_axi_ARPROT;
  assign M45_AXI_arvalid = m45_exit_pipeline_m_axi_ARVALID;
  assign M45_AXI_awaddr[9:0] = m45_exit_pipeline_m_axi_AWADDR;
  assign M45_AXI_awprot[2:0] = m45_exit_pipeline_m_axi_AWPROT;
  assign M45_AXI_awvalid = m45_exit_pipeline_m_axi_AWVALID;
  assign M45_AXI_bready = m45_exit_pipeline_m_axi_BREADY;
  assign M45_AXI_rready = m45_exit_pipeline_m_axi_RREADY;
  assign M45_AXI_wdata[31:0] = m45_exit_pipeline_m_axi_WDATA;
  assign M45_AXI_wstrb[3:0] = m45_exit_pipeline_m_axi_WSTRB;
  assign M45_AXI_wvalid = m45_exit_pipeline_m_axi_WVALID;
  assign M46_AXI_araddr[9:0] = m46_exit_pipeline_m_axi_ARADDR;
  assign M46_AXI_arprot[2:0] = m46_exit_pipeline_m_axi_ARPROT;
  assign M46_AXI_arvalid = m46_exit_pipeline_m_axi_ARVALID;
  assign M46_AXI_awaddr[9:0] = m46_exit_pipeline_m_axi_AWADDR;
  assign M46_AXI_awprot[2:0] = m46_exit_pipeline_m_axi_AWPROT;
  assign M46_AXI_awvalid = m46_exit_pipeline_m_axi_AWVALID;
  assign M46_AXI_bready = m46_exit_pipeline_m_axi_BREADY;
  assign M46_AXI_rready = m46_exit_pipeline_m_axi_RREADY;
  assign M46_AXI_wdata[31:0] = m46_exit_pipeline_m_axi_WDATA;
  assign M46_AXI_wstrb[3:0] = m46_exit_pipeline_m_axi_WSTRB;
  assign M46_AXI_wvalid = m46_exit_pipeline_m_axi_WVALID;
  assign M47_AXI_araddr[9:0] = m47_exit_pipeline_m_axi_ARADDR;
  assign M47_AXI_arprot[2:0] = m47_exit_pipeline_m_axi_ARPROT;
  assign M47_AXI_arvalid = m47_exit_pipeline_m_axi_ARVALID;
  assign M47_AXI_awaddr[9:0] = m47_exit_pipeline_m_axi_AWADDR;
  assign M47_AXI_awprot[2:0] = m47_exit_pipeline_m_axi_AWPROT;
  assign M47_AXI_awvalid = m47_exit_pipeline_m_axi_AWVALID;
  assign M47_AXI_bready = m47_exit_pipeline_m_axi_BREADY;
  assign M47_AXI_rready = m47_exit_pipeline_m_axi_RREADY;
  assign M47_AXI_wdata[31:0] = m47_exit_pipeline_m_axi_WDATA;
  assign M47_AXI_wstrb[3:0] = m47_exit_pipeline_m_axi_WSTRB;
  assign M47_AXI_wvalid = m47_exit_pipeline_m_axi_WVALID;
  assign M48_AXI_araddr[9:0] = m48_exit_pipeline_m_axi_ARADDR;
  assign M48_AXI_arprot[2:0] = m48_exit_pipeline_m_axi_ARPROT;
  assign M48_AXI_arvalid = m48_exit_pipeline_m_axi_ARVALID;
  assign M48_AXI_awaddr[9:0] = m48_exit_pipeline_m_axi_AWADDR;
  assign M48_AXI_awprot[2:0] = m48_exit_pipeline_m_axi_AWPROT;
  assign M48_AXI_awvalid = m48_exit_pipeline_m_axi_AWVALID;
  assign M48_AXI_bready = m48_exit_pipeline_m_axi_BREADY;
  assign M48_AXI_rready = m48_exit_pipeline_m_axi_RREADY;
  assign M48_AXI_wdata[31:0] = m48_exit_pipeline_m_axi_WDATA;
  assign M48_AXI_wstrb[3:0] = m48_exit_pipeline_m_axi_WSTRB;
  assign M48_AXI_wvalid = m48_exit_pipeline_m_axi_WVALID;
  assign M49_AXI_araddr[9:0] = m49_exit_pipeline_m_axi_ARADDR;
  assign M49_AXI_arprot[2:0] = m49_exit_pipeline_m_axi_ARPROT;
  assign M49_AXI_arvalid = m49_exit_pipeline_m_axi_ARVALID;
  assign M49_AXI_awaddr[9:0] = m49_exit_pipeline_m_axi_AWADDR;
  assign M49_AXI_awprot[2:0] = m49_exit_pipeline_m_axi_AWPROT;
  assign M49_AXI_awvalid = m49_exit_pipeline_m_axi_AWVALID;
  assign M49_AXI_bready = m49_exit_pipeline_m_axi_BREADY;
  assign M49_AXI_rready = m49_exit_pipeline_m_axi_RREADY;
  assign M49_AXI_wdata[31:0] = m49_exit_pipeline_m_axi_WDATA;
  assign M49_AXI_wstrb[3:0] = m49_exit_pipeline_m_axi_WSTRB;
  assign M49_AXI_wvalid = m49_exit_pipeline_m_axi_WVALID;
  assign M50_AXI_araddr[4:0] = m50_exit_pipeline_m_axi_ARADDR;
  assign M50_AXI_arprot[2:0] = m50_exit_pipeline_m_axi_ARPROT;
  assign M50_AXI_arvalid = m50_exit_pipeline_m_axi_ARVALID;
  assign M50_AXI_awaddr[4:0] = m50_exit_pipeline_m_axi_AWADDR;
  assign M50_AXI_awprot[2:0] = m50_exit_pipeline_m_axi_AWPROT;
  assign M50_AXI_awvalid = m50_exit_pipeline_m_axi_AWVALID;
  assign M50_AXI_bready = m50_exit_pipeline_m_axi_BREADY;
  assign M50_AXI_rready = m50_exit_pipeline_m_axi_RREADY;
  assign M50_AXI_wdata[31:0] = m50_exit_pipeline_m_axi_WDATA;
  assign M50_AXI_wstrb[3:0] = m50_exit_pipeline_m_axi_WSTRB;
  assign M50_AXI_wvalid = m50_exit_pipeline_m_axi_WVALID;
  assign S00_AXI_1_ARADDR = S00_AXI_araddr[39:0];
  assign S00_AXI_1_ARBURST = S00_AXI_arburst[1:0];
  assign S00_AXI_1_ARCACHE = S00_AXI_arcache[3:0];
  assign S00_AXI_1_ARID = S00_AXI_arid[15:0];
  assign S00_AXI_1_ARLEN = S00_AXI_arlen[7:0];
  assign S00_AXI_1_ARLOCK = S00_AXI_arlock[0];
  assign S00_AXI_1_ARPROT = S00_AXI_arprot[2:0];
  assign S00_AXI_1_ARQOS = S00_AXI_arqos[3:0];
  assign S00_AXI_1_ARSIZE = S00_AXI_arsize[2:0];
  assign S00_AXI_1_ARUSER = S00_AXI_aruser[15:0];
  assign S00_AXI_1_ARVALID = S00_AXI_arvalid;
  assign S00_AXI_1_AWADDR = S00_AXI_awaddr[39:0];
  assign S00_AXI_1_AWBURST = S00_AXI_awburst[1:0];
  assign S00_AXI_1_AWCACHE = S00_AXI_awcache[3:0];
  assign S00_AXI_1_AWID = S00_AXI_awid[15:0];
  assign S00_AXI_1_AWLEN = S00_AXI_awlen[7:0];
  assign S00_AXI_1_AWLOCK = S00_AXI_awlock[0];
  assign S00_AXI_1_AWPROT = S00_AXI_awprot[2:0];
  assign S00_AXI_1_AWQOS = S00_AXI_awqos[3:0];
  assign S00_AXI_1_AWSIZE = S00_AXI_awsize[2:0];
  assign S00_AXI_1_AWUSER = S00_AXI_awuser[15:0];
  assign S00_AXI_1_AWVALID = S00_AXI_awvalid;
  assign S00_AXI_1_BREADY = S00_AXI_bready;
  assign S00_AXI_1_RREADY = S00_AXI_rready;
  assign S00_AXI_1_WDATA = S00_AXI_wdata[31:0];
  assign S00_AXI_1_WLAST = S00_AXI_wlast;
  assign S00_AXI_1_WSTRB = S00_AXI_wstrb[3:0];
  assign S00_AXI_1_WVALID = S00_AXI_wvalid;
  assign S00_AXI_arready = S00_AXI_1_ARREADY;
  assign S00_AXI_awready = S00_AXI_1_AWREADY;
  assign S00_AXI_bid[15:0] = S00_AXI_1_BID;
  assign S00_AXI_bresp[1:0] = S00_AXI_1_BRESP;
  assign S00_AXI_bvalid = S00_AXI_1_BVALID;
  assign S00_AXI_rdata[31:0] = S00_AXI_1_RDATA;
  assign S00_AXI_rid[15:0] = S00_AXI_1_RID;
  assign S00_AXI_rlast = S00_AXI_1_RLAST;
  assign S00_AXI_rresp[1:0] = S00_AXI_1_RRESP;
  assign S00_AXI_rvalid = S00_AXI_1_RVALID;
  assign S00_AXI_wready = S00_AXI_1_WREADY;
  assign aclk_net = aclk;
  assign aresetn_1 = aresetn;
  assign m00_exit_pipeline_m_axi_ARREADY = M00_AXI_arready;
  assign m00_exit_pipeline_m_axi_AWREADY = M00_AXI_awready;
  assign m00_exit_pipeline_m_axi_BRESP = M00_AXI_bresp[1:0];
  assign m00_exit_pipeline_m_axi_BVALID = M00_AXI_bvalid;
  assign m00_exit_pipeline_m_axi_RDATA = M00_AXI_rdata[31:0];
  assign m00_exit_pipeline_m_axi_RLAST = M00_AXI_rlast;
  assign m00_exit_pipeline_m_axi_RRESP = M00_AXI_rresp[1:0];
  assign m00_exit_pipeline_m_axi_RVALID = M00_AXI_rvalid;
  assign m00_exit_pipeline_m_axi_WREADY = M00_AXI_wready;
  assign m01_exit_pipeline_m_axi_ARREADY = M01_AXI_arready;
  assign m01_exit_pipeline_m_axi_AWREADY = M01_AXI_awready;
  assign m01_exit_pipeline_m_axi_BRESP = M01_AXI_bresp[1:0];
  assign m01_exit_pipeline_m_axi_BVALID = M01_AXI_bvalid;
  assign m01_exit_pipeline_m_axi_RDATA = M01_AXI_rdata[31:0];
  assign m01_exit_pipeline_m_axi_RLAST = M01_AXI_rlast;
  assign m01_exit_pipeline_m_axi_RRESP = M01_AXI_rresp[1:0];
  assign m01_exit_pipeline_m_axi_RVALID = M01_AXI_rvalid;
  assign m01_exit_pipeline_m_axi_WREADY = M01_AXI_wready;
  assign m02_exit_pipeline_m_axi_ARREADY = M02_AXI_arready;
  assign m02_exit_pipeline_m_axi_AWREADY = M02_AXI_awready;
  assign m02_exit_pipeline_m_axi_BRESP = M02_AXI_bresp[1:0];
  assign m02_exit_pipeline_m_axi_BVALID = M02_AXI_bvalid;
  assign m02_exit_pipeline_m_axi_RDATA = M02_AXI_rdata[31:0];
  assign m02_exit_pipeline_m_axi_RLAST = M02_AXI_rlast;
  assign m02_exit_pipeline_m_axi_RRESP = M02_AXI_rresp[1:0];
  assign m02_exit_pipeline_m_axi_RVALID = M02_AXI_rvalid;
  assign m02_exit_pipeline_m_axi_WREADY = M02_AXI_wready;
  assign m03_exit_pipeline_m_axi_ARREADY = M03_AXI_arready;
  assign m03_exit_pipeline_m_axi_AWREADY = M03_AXI_awready;
  assign m03_exit_pipeline_m_axi_BRESP = M03_AXI_bresp[1:0];
  assign m03_exit_pipeline_m_axi_BVALID = M03_AXI_bvalid;
  assign m03_exit_pipeline_m_axi_RDATA = M03_AXI_rdata[31:0];
  assign m03_exit_pipeline_m_axi_RLAST = M03_AXI_rlast;
  assign m03_exit_pipeline_m_axi_RRESP = M03_AXI_rresp[1:0];
  assign m03_exit_pipeline_m_axi_RVALID = M03_AXI_rvalid;
  assign m03_exit_pipeline_m_axi_WREADY = M03_AXI_wready;
  assign m04_exit_pipeline_m_axi_ARREADY = M04_AXI_arready;
  assign m04_exit_pipeline_m_axi_AWREADY = M04_AXI_awready;
  assign m04_exit_pipeline_m_axi_BRESP = M04_AXI_bresp[1:0];
  assign m04_exit_pipeline_m_axi_BVALID = M04_AXI_bvalid;
  assign m04_exit_pipeline_m_axi_RDATA = M04_AXI_rdata[31:0];
  assign m04_exit_pipeline_m_axi_RLAST = M04_AXI_rlast;
  assign m04_exit_pipeline_m_axi_RRESP = M04_AXI_rresp[1:0];
  assign m04_exit_pipeline_m_axi_RVALID = M04_AXI_rvalid;
  assign m04_exit_pipeline_m_axi_WREADY = M04_AXI_wready;
  assign m05_exit_pipeline_m_axi_ARREADY = M05_AXI_arready;
  assign m05_exit_pipeline_m_axi_AWREADY = M05_AXI_awready;
  assign m05_exit_pipeline_m_axi_BRESP = M05_AXI_bresp[1:0];
  assign m05_exit_pipeline_m_axi_BVALID = M05_AXI_bvalid;
  assign m05_exit_pipeline_m_axi_RDATA = M05_AXI_rdata[31:0];
  assign m05_exit_pipeline_m_axi_RLAST = M05_AXI_rlast;
  assign m05_exit_pipeline_m_axi_RRESP = M05_AXI_rresp[1:0];
  assign m05_exit_pipeline_m_axi_RVALID = M05_AXI_rvalid;
  assign m05_exit_pipeline_m_axi_WREADY = M05_AXI_wready;
  assign m06_exit_pipeline_m_axi_ARREADY = M06_AXI_arready;
  assign m06_exit_pipeline_m_axi_AWREADY = M06_AXI_awready;
  assign m06_exit_pipeline_m_axi_BRESP = M06_AXI_bresp[1:0];
  assign m06_exit_pipeline_m_axi_BVALID = M06_AXI_bvalid;
  assign m06_exit_pipeline_m_axi_RDATA = M06_AXI_rdata[31:0];
  assign m06_exit_pipeline_m_axi_RLAST = M06_AXI_rlast;
  assign m06_exit_pipeline_m_axi_RRESP = M06_AXI_rresp[1:0];
  assign m06_exit_pipeline_m_axi_RVALID = M06_AXI_rvalid;
  assign m06_exit_pipeline_m_axi_WREADY = M06_AXI_wready;
  assign m07_exit_pipeline_m_axi_ARREADY = M07_AXI_arready;
  assign m07_exit_pipeline_m_axi_AWREADY = M07_AXI_awready;
  assign m07_exit_pipeline_m_axi_BRESP = M07_AXI_bresp[1:0];
  assign m07_exit_pipeline_m_axi_BVALID = M07_AXI_bvalid;
  assign m07_exit_pipeline_m_axi_RDATA = M07_AXI_rdata[31:0];
  assign m07_exit_pipeline_m_axi_RLAST = M07_AXI_rlast;
  assign m07_exit_pipeline_m_axi_RRESP = M07_AXI_rresp[1:0];
  assign m07_exit_pipeline_m_axi_RVALID = M07_AXI_rvalid;
  assign m07_exit_pipeline_m_axi_WREADY = M07_AXI_wready;
  assign m08_exit_pipeline_m_axi_ARREADY = M08_AXI_arready;
  assign m08_exit_pipeline_m_axi_AWREADY = M08_AXI_awready;
  assign m08_exit_pipeline_m_axi_BRESP = M08_AXI_bresp[1:0];
  assign m08_exit_pipeline_m_axi_BVALID = M08_AXI_bvalid;
  assign m08_exit_pipeline_m_axi_RDATA = M08_AXI_rdata[31:0];
  assign m08_exit_pipeline_m_axi_RLAST = M08_AXI_rlast;
  assign m08_exit_pipeline_m_axi_RRESP = M08_AXI_rresp[1:0];
  assign m08_exit_pipeline_m_axi_RVALID = M08_AXI_rvalid;
  assign m08_exit_pipeline_m_axi_WREADY = M08_AXI_wready;
  assign m09_exit_pipeline_m_axi_ARREADY = M09_AXI_arready;
  assign m09_exit_pipeline_m_axi_AWREADY = M09_AXI_awready;
  assign m09_exit_pipeline_m_axi_BRESP = M09_AXI_bresp[1:0];
  assign m09_exit_pipeline_m_axi_BVALID = M09_AXI_bvalid;
  assign m09_exit_pipeline_m_axi_RDATA = M09_AXI_rdata[31:0];
  assign m09_exit_pipeline_m_axi_RLAST = M09_AXI_rlast;
  assign m09_exit_pipeline_m_axi_RRESP = M09_AXI_rresp[1:0];
  assign m09_exit_pipeline_m_axi_RVALID = M09_AXI_rvalid;
  assign m09_exit_pipeline_m_axi_WREADY = M09_AXI_wready;
  assign m10_exit_pipeline_m_axi_ARREADY = M10_AXI_arready;
  assign m10_exit_pipeline_m_axi_AWREADY = M10_AXI_awready;
  assign m10_exit_pipeline_m_axi_BRESP = M10_AXI_bresp[1:0];
  assign m10_exit_pipeline_m_axi_BVALID = M10_AXI_bvalid;
  assign m10_exit_pipeline_m_axi_RDATA = M10_AXI_rdata[31:0];
  assign m10_exit_pipeline_m_axi_RLAST = M10_AXI_rlast;
  assign m10_exit_pipeline_m_axi_RRESP = M10_AXI_rresp[1:0];
  assign m10_exit_pipeline_m_axi_RVALID = M10_AXI_rvalid;
  assign m10_exit_pipeline_m_axi_WREADY = M10_AXI_wready;
  assign m11_exit_pipeline_m_axi_ARREADY = M11_AXI_arready;
  assign m11_exit_pipeline_m_axi_AWREADY = M11_AXI_awready;
  assign m11_exit_pipeline_m_axi_BRESP = M11_AXI_bresp[1:0];
  assign m11_exit_pipeline_m_axi_BVALID = M11_AXI_bvalid;
  assign m11_exit_pipeline_m_axi_RDATA = M11_AXI_rdata[31:0];
  assign m11_exit_pipeline_m_axi_RLAST = M11_AXI_rlast;
  assign m11_exit_pipeline_m_axi_RRESP = M11_AXI_rresp[1:0];
  assign m11_exit_pipeline_m_axi_RVALID = M11_AXI_rvalid;
  assign m11_exit_pipeline_m_axi_WREADY = M11_AXI_wready;
  assign m12_exit_pipeline_m_axi_ARREADY = M12_AXI_arready;
  assign m12_exit_pipeline_m_axi_AWREADY = M12_AXI_awready;
  assign m12_exit_pipeline_m_axi_BRESP = M12_AXI_bresp[1:0];
  assign m12_exit_pipeline_m_axi_BVALID = M12_AXI_bvalid;
  assign m12_exit_pipeline_m_axi_RDATA = M12_AXI_rdata[31:0];
  assign m12_exit_pipeline_m_axi_RRESP = M12_AXI_rresp[1:0];
  assign m12_exit_pipeline_m_axi_RVALID = M12_AXI_rvalid;
  assign m12_exit_pipeline_m_axi_WREADY = M12_AXI_wready;
  assign m13_exit_pipeline_m_axi_ARREADY = M13_AXI_arready;
  assign m13_exit_pipeline_m_axi_AWREADY = M13_AXI_awready;
  assign m13_exit_pipeline_m_axi_BRESP = M13_AXI_bresp[1:0];
  assign m13_exit_pipeline_m_axi_BVALID = M13_AXI_bvalid;
  assign m13_exit_pipeline_m_axi_RDATA = M13_AXI_rdata[31:0];
  assign m13_exit_pipeline_m_axi_RRESP = M13_AXI_rresp[1:0];
  assign m13_exit_pipeline_m_axi_RVALID = M13_AXI_rvalid;
  assign m13_exit_pipeline_m_axi_WREADY = M13_AXI_wready;
  assign m14_exit_pipeline_m_axi_ARREADY = M14_AXI_arready;
  assign m14_exit_pipeline_m_axi_AWREADY = M14_AXI_awready;
  assign m14_exit_pipeline_m_axi_BRESP = M14_AXI_bresp[1:0];
  assign m14_exit_pipeline_m_axi_BVALID = M14_AXI_bvalid;
  assign m14_exit_pipeline_m_axi_RDATA = M14_AXI_rdata[31:0];
  assign m14_exit_pipeline_m_axi_RRESP = M14_AXI_rresp[1:0];
  assign m14_exit_pipeline_m_axi_RVALID = M14_AXI_rvalid;
  assign m14_exit_pipeline_m_axi_WREADY = M14_AXI_wready;
  assign m15_exit_pipeline_m_axi_ARREADY = M15_AXI_arready;
  assign m15_exit_pipeline_m_axi_AWREADY = M15_AXI_awready;
  assign m15_exit_pipeline_m_axi_BRESP = M15_AXI_bresp[1:0];
  assign m15_exit_pipeline_m_axi_BVALID = M15_AXI_bvalid;
  assign m15_exit_pipeline_m_axi_RDATA = M15_AXI_rdata[31:0];
  assign m15_exit_pipeline_m_axi_RRESP = M15_AXI_rresp[1:0];
  assign m15_exit_pipeline_m_axi_RVALID = M15_AXI_rvalid;
  assign m15_exit_pipeline_m_axi_WREADY = M15_AXI_wready;
  assign m16_exit_pipeline_m_axi_ARREADY = M16_AXI_arready;
  assign m16_exit_pipeline_m_axi_AWREADY = M16_AXI_awready;
  assign m16_exit_pipeline_m_axi_BRESP = M16_AXI_bresp[1:0];
  assign m16_exit_pipeline_m_axi_BVALID = M16_AXI_bvalid;
  assign m16_exit_pipeline_m_axi_RDATA = M16_AXI_rdata[31:0];
  assign m16_exit_pipeline_m_axi_RRESP = M16_AXI_rresp[1:0];
  assign m16_exit_pipeline_m_axi_RVALID = M16_AXI_rvalid;
  assign m16_exit_pipeline_m_axi_WREADY = M16_AXI_wready;
  assign m17_exit_pipeline_m_axi_ARREADY = M17_AXI_arready;
  assign m17_exit_pipeline_m_axi_AWREADY = M17_AXI_awready;
  assign m17_exit_pipeline_m_axi_BRESP = M17_AXI_bresp[1:0];
  assign m17_exit_pipeline_m_axi_BVALID = M17_AXI_bvalid;
  assign m17_exit_pipeline_m_axi_RDATA = M17_AXI_rdata[31:0];
  assign m17_exit_pipeline_m_axi_RRESP = M17_AXI_rresp[1:0];
  assign m17_exit_pipeline_m_axi_RVALID = M17_AXI_rvalid;
  assign m17_exit_pipeline_m_axi_WREADY = M17_AXI_wready;
  assign m18_exit_pipeline_m_axi_ARREADY = M18_AXI_arready;
  assign m18_exit_pipeline_m_axi_AWREADY = M18_AXI_awready;
  assign m18_exit_pipeline_m_axi_BRESP = M18_AXI_bresp[1:0];
  assign m18_exit_pipeline_m_axi_BVALID = M18_AXI_bvalid;
  assign m18_exit_pipeline_m_axi_RDATA = M18_AXI_rdata[31:0];
  assign m18_exit_pipeline_m_axi_RRESP = M18_AXI_rresp[1:0];
  assign m18_exit_pipeline_m_axi_RVALID = M18_AXI_rvalid;
  assign m18_exit_pipeline_m_axi_WREADY = M18_AXI_wready;
  assign m19_exit_pipeline_m_axi_ARREADY = M19_AXI_arready;
  assign m19_exit_pipeline_m_axi_AWREADY = M19_AXI_awready;
  assign m19_exit_pipeline_m_axi_BRESP = M19_AXI_bresp[1:0];
  assign m19_exit_pipeline_m_axi_BVALID = M19_AXI_bvalid;
  assign m19_exit_pipeline_m_axi_RDATA = M19_AXI_rdata[31:0];
  assign m19_exit_pipeline_m_axi_RRESP = M19_AXI_rresp[1:0];
  assign m19_exit_pipeline_m_axi_RVALID = M19_AXI_rvalid;
  assign m19_exit_pipeline_m_axi_WREADY = M19_AXI_wready;
  assign m20_exit_pipeline_m_axi_ARREADY = M20_AXI_arready;
  assign m20_exit_pipeline_m_axi_AWREADY = M20_AXI_awready;
  assign m20_exit_pipeline_m_axi_BRESP = M20_AXI_bresp[1:0];
  assign m20_exit_pipeline_m_axi_BVALID = M20_AXI_bvalid;
  assign m20_exit_pipeline_m_axi_RDATA = M20_AXI_rdata[31:0];
  assign m20_exit_pipeline_m_axi_RRESP = M20_AXI_rresp[1:0];
  assign m20_exit_pipeline_m_axi_RVALID = M20_AXI_rvalid;
  assign m20_exit_pipeline_m_axi_WREADY = M20_AXI_wready;
  assign m21_exit_pipeline_m_axi_ARREADY = M21_AXI_arready;
  assign m21_exit_pipeline_m_axi_AWREADY = M21_AXI_awready;
  assign m21_exit_pipeline_m_axi_BRESP = M21_AXI_bresp[1:0];
  assign m21_exit_pipeline_m_axi_BVALID = M21_AXI_bvalid;
  assign m21_exit_pipeline_m_axi_RDATA = M21_AXI_rdata[31:0];
  assign m21_exit_pipeline_m_axi_RRESP = M21_AXI_rresp[1:0];
  assign m21_exit_pipeline_m_axi_RVALID = M21_AXI_rvalid;
  assign m21_exit_pipeline_m_axi_WREADY = M21_AXI_wready;
  assign m22_exit_pipeline_m_axi_ARREADY = M22_AXI_arready;
  assign m22_exit_pipeline_m_axi_AWREADY = M22_AXI_awready;
  assign m22_exit_pipeline_m_axi_BRESP = M22_AXI_bresp[1:0];
  assign m22_exit_pipeline_m_axi_BVALID = M22_AXI_bvalid;
  assign m22_exit_pipeline_m_axi_RDATA = M22_AXI_rdata[31:0];
  assign m22_exit_pipeline_m_axi_RRESP = M22_AXI_rresp[1:0];
  assign m22_exit_pipeline_m_axi_RVALID = M22_AXI_rvalid;
  assign m22_exit_pipeline_m_axi_WREADY = M22_AXI_wready;
  assign m23_exit_pipeline_m_axi_ARREADY = M23_AXI_arready;
  assign m23_exit_pipeline_m_axi_AWREADY = M23_AXI_awready;
  assign m23_exit_pipeline_m_axi_BRESP = M23_AXI_bresp[1:0];
  assign m23_exit_pipeline_m_axi_BVALID = M23_AXI_bvalid;
  assign m23_exit_pipeline_m_axi_RDATA = M23_AXI_rdata[31:0];
  assign m23_exit_pipeline_m_axi_RRESP = M23_AXI_rresp[1:0];
  assign m23_exit_pipeline_m_axi_RVALID = M23_AXI_rvalid;
  assign m23_exit_pipeline_m_axi_WREADY = M23_AXI_wready;
  assign m24_exit_pipeline_m_axi_ARREADY = M24_AXI_arready;
  assign m24_exit_pipeline_m_axi_AWREADY = M24_AXI_awready;
  assign m24_exit_pipeline_m_axi_BRESP = M24_AXI_bresp[1:0];
  assign m24_exit_pipeline_m_axi_BVALID = M24_AXI_bvalid;
  assign m24_exit_pipeline_m_axi_RDATA = M24_AXI_rdata[31:0];
  assign m24_exit_pipeline_m_axi_RRESP = M24_AXI_rresp[1:0];
  assign m24_exit_pipeline_m_axi_RVALID = M24_AXI_rvalid;
  assign m24_exit_pipeline_m_axi_WREADY = M24_AXI_wready;
  assign m25_exit_pipeline_m_axi_ARREADY = M25_AXI_arready;
  assign m25_exit_pipeline_m_axi_AWREADY = M25_AXI_awready;
  assign m25_exit_pipeline_m_axi_BRESP = M25_AXI_bresp[1:0];
  assign m25_exit_pipeline_m_axi_BVALID = M25_AXI_bvalid;
  assign m25_exit_pipeline_m_axi_RDATA = M25_AXI_rdata[31:0];
  assign m25_exit_pipeline_m_axi_RRESP = M25_AXI_rresp[1:0];
  assign m25_exit_pipeline_m_axi_RVALID = M25_AXI_rvalid;
  assign m25_exit_pipeline_m_axi_WREADY = M25_AXI_wready;
  assign m26_exit_pipeline_m_axi_ARREADY = M26_AXI_arready;
  assign m26_exit_pipeline_m_axi_AWREADY = M26_AXI_awready;
  assign m26_exit_pipeline_m_axi_BRESP = M26_AXI_bresp[1:0];
  assign m26_exit_pipeline_m_axi_BVALID = M26_AXI_bvalid;
  assign m26_exit_pipeline_m_axi_RDATA = M26_AXI_rdata[31:0];
  assign m26_exit_pipeline_m_axi_RRESP = M26_AXI_rresp[1:0];
  assign m26_exit_pipeline_m_axi_RVALID = M26_AXI_rvalid;
  assign m26_exit_pipeline_m_axi_WREADY = M26_AXI_wready;
  assign m27_exit_pipeline_m_axi_ARREADY = M27_AXI_arready;
  assign m27_exit_pipeline_m_axi_AWREADY = M27_AXI_awready;
  assign m27_exit_pipeline_m_axi_BRESP = M27_AXI_bresp[1:0];
  assign m27_exit_pipeline_m_axi_BVALID = M27_AXI_bvalid;
  assign m27_exit_pipeline_m_axi_RDATA = M27_AXI_rdata[31:0];
  assign m27_exit_pipeline_m_axi_RRESP = M27_AXI_rresp[1:0];
  assign m27_exit_pipeline_m_axi_RVALID = M27_AXI_rvalid;
  assign m27_exit_pipeline_m_axi_WREADY = M27_AXI_wready;
  assign m28_exit_pipeline_m_axi_ARREADY = M28_AXI_arready;
  assign m28_exit_pipeline_m_axi_AWREADY = M28_AXI_awready;
  assign m28_exit_pipeline_m_axi_BRESP = M28_AXI_bresp[1:0];
  assign m28_exit_pipeline_m_axi_BVALID = M28_AXI_bvalid;
  assign m28_exit_pipeline_m_axi_RDATA = M28_AXI_rdata[31:0];
  assign m28_exit_pipeline_m_axi_RRESP = M28_AXI_rresp[1:0];
  assign m28_exit_pipeline_m_axi_RVALID = M28_AXI_rvalid;
  assign m28_exit_pipeline_m_axi_WREADY = M28_AXI_wready;
  assign m29_exit_pipeline_m_axi_ARREADY = M29_AXI_arready;
  assign m29_exit_pipeline_m_axi_AWREADY = M29_AXI_awready;
  assign m29_exit_pipeline_m_axi_BRESP = M29_AXI_bresp[1:0];
  assign m29_exit_pipeline_m_axi_BVALID = M29_AXI_bvalid;
  assign m29_exit_pipeline_m_axi_RDATA = M29_AXI_rdata[31:0];
  assign m29_exit_pipeline_m_axi_RRESP = M29_AXI_rresp[1:0];
  assign m29_exit_pipeline_m_axi_RVALID = M29_AXI_rvalid;
  assign m29_exit_pipeline_m_axi_WREADY = M29_AXI_wready;
  assign m30_exit_pipeline_m_axi_ARREADY = M30_AXI_arready;
  assign m30_exit_pipeline_m_axi_AWREADY = M30_AXI_awready;
  assign m30_exit_pipeline_m_axi_BRESP = M30_AXI_bresp[1:0];
  assign m30_exit_pipeline_m_axi_BVALID = M30_AXI_bvalid;
  assign m30_exit_pipeline_m_axi_RDATA = M30_AXI_rdata[31:0];
  assign m30_exit_pipeline_m_axi_RRESP = M30_AXI_rresp[1:0];
  assign m30_exit_pipeline_m_axi_RVALID = M30_AXI_rvalid;
  assign m30_exit_pipeline_m_axi_WREADY = M30_AXI_wready;
  assign m31_exit_pipeline_m_axi_ARREADY = M31_AXI_arready;
  assign m31_exit_pipeline_m_axi_AWREADY = M31_AXI_awready;
  assign m31_exit_pipeline_m_axi_BRESP = M31_AXI_bresp[1:0];
  assign m31_exit_pipeline_m_axi_BVALID = M31_AXI_bvalid;
  assign m31_exit_pipeline_m_axi_RDATA = M31_AXI_rdata[31:0];
  assign m31_exit_pipeline_m_axi_RRESP = M31_AXI_rresp[1:0];
  assign m31_exit_pipeline_m_axi_RVALID = M31_AXI_rvalid;
  assign m31_exit_pipeline_m_axi_WREADY = M31_AXI_wready;
  assign m32_exit_pipeline_m_axi_ARREADY = M32_AXI_arready;
  assign m32_exit_pipeline_m_axi_AWREADY = M32_AXI_awready;
  assign m32_exit_pipeline_m_axi_BRESP = M32_AXI_bresp[1:0];
  assign m32_exit_pipeline_m_axi_BVALID = M32_AXI_bvalid;
  assign m32_exit_pipeline_m_axi_RDATA = M32_AXI_rdata[31:0];
  assign m32_exit_pipeline_m_axi_RRESP = M32_AXI_rresp[1:0];
  assign m32_exit_pipeline_m_axi_RVALID = M32_AXI_rvalid;
  assign m32_exit_pipeline_m_axi_WREADY = M32_AXI_wready;
  assign m33_exit_pipeline_m_axi_ARREADY = M33_AXI_arready;
  assign m33_exit_pipeline_m_axi_AWREADY = M33_AXI_awready;
  assign m33_exit_pipeline_m_axi_BRESP = M33_AXI_bresp[1:0];
  assign m33_exit_pipeline_m_axi_BVALID = M33_AXI_bvalid;
  assign m33_exit_pipeline_m_axi_RDATA = M33_AXI_rdata[31:0];
  assign m33_exit_pipeline_m_axi_RRESP = M33_AXI_rresp[1:0];
  assign m33_exit_pipeline_m_axi_RVALID = M33_AXI_rvalid;
  assign m33_exit_pipeline_m_axi_WREADY = M33_AXI_wready;
  assign m34_exit_pipeline_m_axi_ARREADY = M34_AXI_arready;
  assign m34_exit_pipeline_m_axi_AWREADY = M34_AXI_awready;
  assign m34_exit_pipeline_m_axi_BRESP = M34_AXI_bresp[1:0];
  assign m34_exit_pipeline_m_axi_BVALID = M34_AXI_bvalid;
  assign m34_exit_pipeline_m_axi_RDATA = M34_AXI_rdata[31:0];
  assign m34_exit_pipeline_m_axi_RRESP = M34_AXI_rresp[1:0];
  assign m34_exit_pipeline_m_axi_RVALID = M34_AXI_rvalid;
  assign m34_exit_pipeline_m_axi_WREADY = M34_AXI_wready;
  assign m35_exit_pipeline_m_axi_ARREADY = M35_AXI_arready;
  assign m35_exit_pipeline_m_axi_AWREADY = M35_AXI_awready;
  assign m35_exit_pipeline_m_axi_BRESP = M35_AXI_bresp[1:0];
  assign m35_exit_pipeline_m_axi_BVALID = M35_AXI_bvalid;
  assign m35_exit_pipeline_m_axi_RDATA = M35_AXI_rdata[31:0];
  assign m35_exit_pipeline_m_axi_RRESP = M35_AXI_rresp[1:0];
  assign m35_exit_pipeline_m_axi_RVALID = M35_AXI_rvalid;
  assign m35_exit_pipeline_m_axi_WREADY = M35_AXI_wready;
  assign m36_exit_pipeline_m_axi_ARREADY = M36_AXI_arready;
  assign m36_exit_pipeline_m_axi_AWREADY = M36_AXI_awready;
  assign m36_exit_pipeline_m_axi_BRESP = M36_AXI_bresp[1:0];
  assign m36_exit_pipeline_m_axi_BVALID = M36_AXI_bvalid;
  assign m36_exit_pipeline_m_axi_RDATA = M36_AXI_rdata[31:0];
  assign m36_exit_pipeline_m_axi_RRESP = M36_AXI_rresp[1:0];
  assign m36_exit_pipeline_m_axi_RVALID = M36_AXI_rvalid;
  assign m36_exit_pipeline_m_axi_WREADY = M36_AXI_wready;
  assign m37_exit_pipeline_m_axi_ARREADY = M37_AXI_arready;
  assign m37_exit_pipeline_m_axi_AWREADY = M37_AXI_awready;
  assign m37_exit_pipeline_m_axi_BRESP = M37_AXI_bresp[1:0];
  assign m37_exit_pipeline_m_axi_BVALID = M37_AXI_bvalid;
  assign m37_exit_pipeline_m_axi_RDATA = M37_AXI_rdata[31:0];
  assign m37_exit_pipeline_m_axi_RRESP = M37_AXI_rresp[1:0];
  assign m37_exit_pipeline_m_axi_RVALID = M37_AXI_rvalid;
  assign m37_exit_pipeline_m_axi_WREADY = M37_AXI_wready;
  assign m38_exit_pipeline_m_axi_ARREADY = M38_AXI_arready;
  assign m38_exit_pipeline_m_axi_AWREADY = M38_AXI_awready;
  assign m38_exit_pipeline_m_axi_BRESP = M38_AXI_bresp[1:0];
  assign m38_exit_pipeline_m_axi_BVALID = M38_AXI_bvalid;
  assign m38_exit_pipeline_m_axi_RDATA = M38_AXI_rdata[31:0];
  assign m38_exit_pipeline_m_axi_RRESP = M38_AXI_rresp[1:0];
  assign m38_exit_pipeline_m_axi_RVALID = M38_AXI_rvalid;
  assign m38_exit_pipeline_m_axi_WREADY = M38_AXI_wready;
  assign m39_exit_pipeline_m_axi_ARREADY = M39_AXI_arready;
  assign m39_exit_pipeline_m_axi_AWREADY = M39_AXI_awready;
  assign m39_exit_pipeline_m_axi_BRESP = M39_AXI_bresp[1:0];
  assign m39_exit_pipeline_m_axi_BVALID = M39_AXI_bvalid;
  assign m39_exit_pipeline_m_axi_RDATA = M39_AXI_rdata[31:0];
  assign m39_exit_pipeline_m_axi_RRESP = M39_AXI_rresp[1:0];
  assign m39_exit_pipeline_m_axi_RVALID = M39_AXI_rvalid;
  assign m39_exit_pipeline_m_axi_WREADY = M39_AXI_wready;
  assign m40_exit_pipeline_m_axi_ARREADY = M40_AXI_arready;
  assign m40_exit_pipeline_m_axi_AWREADY = M40_AXI_awready;
  assign m40_exit_pipeline_m_axi_BRESP = M40_AXI_bresp[1:0];
  assign m40_exit_pipeline_m_axi_BVALID = M40_AXI_bvalid;
  assign m40_exit_pipeline_m_axi_RDATA = M40_AXI_rdata[31:0];
  assign m40_exit_pipeline_m_axi_RRESP = M40_AXI_rresp[1:0];
  assign m40_exit_pipeline_m_axi_RVALID = M40_AXI_rvalid;
  assign m40_exit_pipeline_m_axi_WREADY = M40_AXI_wready;
  assign m41_exit_pipeline_m_axi_ARREADY = M41_AXI_arready;
  assign m41_exit_pipeline_m_axi_AWREADY = M41_AXI_awready;
  assign m41_exit_pipeline_m_axi_BRESP = M41_AXI_bresp[1:0];
  assign m41_exit_pipeline_m_axi_BVALID = M41_AXI_bvalid;
  assign m41_exit_pipeline_m_axi_RDATA = M41_AXI_rdata[31:0];
  assign m41_exit_pipeline_m_axi_RRESP = M41_AXI_rresp[1:0];
  assign m41_exit_pipeline_m_axi_RVALID = M41_AXI_rvalid;
  assign m41_exit_pipeline_m_axi_WREADY = M41_AXI_wready;
  assign m42_exit_pipeline_m_axi_ARREADY = M42_AXI_arready;
  assign m42_exit_pipeline_m_axi_AWREADY = M42_AXI_awready;
  assign m42_exit_pipeline_m_axi_BRESP = M42_AXI_bresp[1:0];
  assign m42_exit_pipeline_m_axi_BVALID = M42_AXI_bvalid;
  assign m42_exit_pipeline_m_axi_RDATA = M42_AXI_rdata[31:0];
  assign m42_exit_pipeline_m_axi_RRESP = M42_AXI_rresp[1:0];
  assign m42_exit_pipeline_m_axi_RVALID = M42_AXI_rvalid;
  assign m42_exit_pipeline_m_axi_WREADY = M42_AXI_wready;
  assign m43_exit_pipeline_m_axi_ARREADY = M43_AXI_arready;
  assign m43_exit_pipeline_m_axi_AWREADY = M43_AXI_awready;
  assign m43_exit_pipeline_m_axi_BRESP = M43_AXI_bresp[1:0];
  assign m43_exit_pipeline_m_axi_BVALID = M43_AXI_bvalid;
  assign m43_exit_pipeline_m_axi_RDATA = M43_AXI_rdata[31:0];
  assign m43_exit_pipeline_m_axi_RRESP = M43_AXI_rresp[1:0];
  assign m43_exit_pipeline_m_axi_RVALID = M43_AXI_rvalid;
  assign m43_exit_pipeline_m_axi_WREADY = M43_AXI_wready;
  assign m44_exit_pipeline_m_axi_ARREADY = M44_AXI_arready;
  assign m44_exit_pipeline_m_axi_AWREADY = M44_AXI_awready;
  assign m44_exit_pipeline_m_axi_BRESP = M44_AXI_bresp[1:0];
  assign m44_exit_pipeline_m_axi_BVALID = M44_AXI_bvalid;
  assign m44_exit_pipeline_m_axi_RDATA = M44_AXI_rdata[31:0];
  assign m44_exit_pipeline_m_axi_RRESP = M44_AXI_rresp[1:0];
  assign m44_exit_pipeline_m_axi_RVALID = M44_AXI_rvalid;
  assign m44_exit_pipeline_m_axi_WREADY = M44_AXI_wready;
  assign m45_exit_pipeline_m_axi_ARREADY = M45_AXI_arready;
  assign m45_exit_pipeline_m_axi_AWREADY = M45_AXI_awready;
  assign m45_exit_pipeline_m_axi_BRESP = M45_AXI_bresp[1:0];
  assign m45_exit_pipeline_m_axi_BVALID = M45_AXI_bvalid;
  assign m45_exit_pipeline_m_axi_RDATA = M45_AXI_rdata[31:0];
  assign m45_exit_pipeline_m_axi_RRESP = M45_AXI_rresp[1:0];
  assign m45_exit_pipeline_m_axi_RVALID = M45_AXI_rvalid;
  assign m45_exit_pipeline_m_axi_WREADY = M45_AXI_wready;
  assign m46_exit_pipeline_m_axi_ARREADY = M46_AXI_arready;
  assign m46_exit_pipeline_m_axi_AWREADY = M46_AXI_awready;
  assign m46_exit_pipeline_m_axi_BRESP = M46_AXI_bresp[1:0];
  assign m46_exit_pipeline_m_axi_BVALID = M46_AXI_bvalid;
  assign m46_exit_pipeline_m_axi_RDATA = M46_AXI_rdata[31:0];
  assign m46_exit_pipeline_m_axi_RRESP = M46_AXI_rresp[1:0];
  assign m46_exit_pipeline_m_axi_RVALID = M46_AXI_rvalid;
  assign m46_exit_pipeline_m_axi_WREADY = M46_AXI_wready;
  assign m47_exit_pipeline_m_axi_ARREADY = M47_AXI_arready;
  assign m47_exit_pipeline_m_axi_AWREADY = M47_AXI_awready;
  assign m47_exit_pipeline_m_axi_BRESP = M47_AXI_bresp[1:0];
  assign m47_exit_pipeline_m_axi_BVALID = M47_AXI_bvalid;
  assign m47_exit_pipeline_m_axi_RDATA = M47_AXI_rdata[31:0];
  assign m47_exit_pipeline_m_axi_RRESP = M47_AXI_rresp[1:0];
  assign m47_exit_pipeline_m_axi_RVALID = M47_AXI_rvalid;
  assign m47_exit_pipeline_m_axi_WREADY = M47_AXI_wready;
  assign m48_exit_pipeline_m_axi_ARREADY = M48_AXI_arready;
  assign m48_exit_pipeline_m_axi_AWREADY = M48_AXI_awready;
  assign m48_exit_pipeline_m_axi_BRESP = M48_AXI_bresp[1:0];
  assign m48_exit_pipeline_m_axi_BVALID = M48_AXI_bvalid;
  assign m48_exit_pipeline_m_axi_RDATA = M48_AXI_rdata[31:0];
  assign m48_exit_pipeline_m_axi_RRESP = M48_AXI_rresp[1:0];
  assign m48_exit_pipeline_m_axi_RVALID = M48_AXI_rvalid;
  assign m48_exit_pipeline_m_axi_WREADY = M48_AXI_wready;
  assign m49_exit_pipeline_m_axi_ARREADY = M49_AXI_arready;
  assign m49_exit_pipeline_m_axi_AWREADY = M49_AXI_awready;
  assign m49_exit_pipeline_m_axi_BRESP = M49_AXI_bresp[1:0];
  assign m49_exit_pipeline_m_axi_BVALID = M49_AXI_bvalid;
  assign m49_exit_pipeline_m_axi_RDATA = M49_AXI_rdata[31:0];
  assign m49_exit_pipeline_m_axi_RRESP = M49_AXI_rresp[1:0];
  assign m49_exit_pipeline_m_axi_RVALID = M49_AXI_rvalid;
  assign m49_exit_pipeline_m_axi_WREADY = M49_AXI_wready;
  assign m50_exit_pipeline_m_axi_ARREADY = M50_AXI_arready;
  assign m50_exit_pipeline_m_axi_AWREADY = M50_AXI_awready;
  assign m50_exit_pipeline_m_axi_BRESP = M50_AXI_bresp[1:0];
  assign m50_exit_pipeline_m_axi_BVALID = M50_AXI_bvalid;
  assign m50_exit_pipeline_m_axi_RDATA = M50_AXI_rdata[31:0];
  assign m50_exit_pipeline_m_axi_RRESP = M50_AXI_rresp[1:0];
  assign m50_exit_pipeline_m_axi_RVALID = M50_AXI_rvalid;
  assign m50_exit_pipeline_m_axi_WREADY = M50_AXI_wready;
  clk_map_imp_5Y9LOC clk_map
       (.M00_ACLK(clk_map_M00_ACLK),
        .M00_ARESETN(clk_map_M00_ARESETN),
        .M01_ACLK(clk_map_M01_ACLK),
        .M01_ARESETN(m_axi_aresetn_1),
        .M02_ACLK(clk_map_M02_ACLK),
        .M02_ARESETN(m_axi_aresetn_2),
        .M03_ACLK(clk_map_M03_ACLK),
        .M03_ARESETN(m_axi_aresetn_3),
        .M04_ACLK(clk_map_M04_ACLK),
        .M04_ARESETN(m_axi_aresetn_4),
        .M05_ACLK(clk_map_M05_ACLK),
        .M05_ARESETN(m_axi_aresetn_5),
        .M06_ACLK(clk_map_M06_ACLK),
        .M06_ARESETN(m_axi_aresetn_6),
        .M07_ACLK(clk_map_M07_ACLK),
        .M07_ARESETN(m_axi_aresetn_7),
        .M08_ACLK(clk_map_M08_ACLK),
        .M08_ARESETN(m_axi_aresetn_8),
        .M09_ACLK(clk_map_M09_ACLK),
        .M09_ARESETN(m_axi_aresetn_9),
        .M10_ACLK(clk_map_M10_ACLK),
        .M10_ARESETN(m_axi_aresetn_10),
        .M11_ACLK(clk_map_M11_ACLK),
        .M11_ARESETN(m_axi_aresetn_11),
        .M12_ACLK(clk_map_M12_ACLK),
        .M12_ARESETN(m_axi_aresetn_12),
        .M13_ACLK(clk_map_M13_ACLK),
        .M13_ARESETN(m_axi_aresetn_13),
        .M14_ACLK(clk_map_M14_ACLK),
        .M14_ARESETN(m_axi_aresetn_14),
        .M15_ACLK(clk_map_M15_ACLK),
        .M15_ARESETN(m_axi_aresetn_15),
        .M16_ACLK(clk_map_M16_ACLK),
        .M16_ARESETN(m_axi_aresetn_16),
        .M17_ACLK(clk_map_M17_ACLK),
        .M17_ARESETN(m_axi_aresetn_17),
        .M18_ACLK(clk_map_M18_ACLK),
        .M18_ARESETN(m_axi_aresetn_18),
        .M19_ACLK(clk_map_M19_ACLK),
        .M19_ARESETN(m_axi_aresetn_19),
        .M20_ACLK(clk_map_M20_ACLK),
        .M20_ARESETN(m_axi_aresetn_20),
        .M21_ACLK(clk_map_M21_ACLK),
        .M21_ARESETN(m_axi_aresetn_21),
        .M22_ACLK(clk_map_M22_ACLK),
        .M22_ARESETN(m_axi_aresetn_22),
        .M23_ACLK(clk_map_M23_ACLK),
        .M23_ARESETN(m_axi_aresetn_23),
        .M24_ACLK(clk_map_M24_ACLK),
        .M24_ARESETN(m_axi_aresetn_24),
        .M25_ACLK(clk_map_M25_ACLK),
        .M25_ARESETN(m_axi_aresetn_25),
        .M26_ACLK(clk_map_M26_ACLK),
        .M26_ARESETN(m_axi_aresetn_26),
        .M27_ACLK(clk_map_M27_ACLK),
        .M27_ARESETN(m_axi_aresetn_27),
        .M28_ACLK(clk_map_M28_ACLK),
        .M28_ARESETN(m_axi_aresetn_28),
        .M29_ACLK(clk_map_M29_ACLK),
        .M29_ARESETN(m_axi_aresetn_29),
        .M30_ACLK(clk_map_M30_ACLK),
        .M30_ARESETN(m_axi_aresetn_30),
        .M31_ACLK(clk_map_M31_ACLK),
        .M31_ARESETN(m_axi_aresetn_31),
        .M32_ACLK(clk_map_M32_ACLK),
        .M32_ARESETN(m_axi_aresetn_32),
        .M33_ACLK(clk_map_M33_ACLK),
        .M33_ARESETN(m_axi_aresetn_33),
        .M34_ACLK(clk_map_M34_ACLK),
        .M34_ARESETN(m_axi_aresetn_34),
        .M35_ACLK(clk_map_M35_ACLK),
        .M35_ARESETN(m_axi_aresetn_35),
        .M36_ACLK(clk_map_M36_ACLK),
        .M36_ARESETN(m_axi_aresetn_36),
        .M37_ACLK(clk_map_M37_ACLK),
        .M37_ARESETN(m_axi_aresetn_37),
        .M38_ACLK(clk_map_M38_ACLK),
        .M38_ARESETN(m_axi_aresetn_38),
        .M39_ACLK(clk_map_M39_ACLK),
        .M39_ARESETN(m_axi_aresetn_39),
        .M40_ACLK(clk_map_M40_ACLK),
        .M40_ARESETN(m_axi_aresetn_40),
        .M41_ACLK(clk_map_M41_ACLK),
        .M41_ARESETN(m_axi_aresetn_41),
        .M42_ACLK(clk_map_M42_ACLK),
        .M42_ARESETN(m_axi_aresetn_42),
        .M43_ACLK(clk_map_M43_ACLK),
        .M43_ARESETN(m_axi_aresetn_43),
        .M44_ACLK(clk_map_M44_ACLK),
        .M44_ARESETN(m_axi_aresetn_44),
        .M45_ACLK(clk_map_M45_ACLK),
        .M45_ARESETN(m_axi_aresetn_45),
        .M46_ACLK(clk_map_M46_ACLK),
        .M46_ARESETN(m_axi_aresetn_46),
        .M47_ACLK(clk_map_M47_ACLK),
        .M47_ARESETN(m_axi_aresetn_47),
        .M48_ACLK(clk_map_M48_ACLK),
        .M48_ARESETN(m_axi_aresetn_48),
        .M49_ACLK(clk_map_M49_ACLK),
        .M49_ARESETN(m_axi_aresetn_49),
        .M50_ACLK(clk_map_M50_ACLK),
        .M50_ARESETN(m_axi_aresetn_50),
        .S00_ACLK(aclk_1),
        .S00_ARESETN(aresetn_2),
        .aclk(aclk_net),
        .aresetn(aresetn_1),
        .aresetn_out(aresetn_net),
        .swbd_aclk(swbd_aclk_net),
        .swbd_aresetn(swbd_aresetn_net));
  m00_exit_pipeline_imp_1TZX5BB m00_exit_pipeline
       (.aclk(clk_map_M00_ACLK),
        .aresetn(clk_map_M00_ARESETN),
        .m_axi_araddr(m00_exit_pipeline_m_axi_ARADDR),
        .m_axi_arburst(m00_exit_pipeline_m_axi_ARBURST),
        .m_axi_arcache(m00_exit_pipeline_m_axi_ARCACHE),
        .m_axi_arlen(m00_exit_pipeline_m_axi_ARLEN),
        .m_axi_arlock(m00_exit_pipeline_m_axi_ARLOCK),
        .m_axi_arprot(m00_exit_pipeline_m_axi_ARPROT),
        .m_axi_arqos(m00_exit_pipeline_m_axi_ARQOS),
        .m_axi_arready(m00_exit_pipeline_m_axi_ARREADY),
        .m_axi_arsize(m00_exit_pipeline_m_axi_ARSIZE),
        .m_axi_aruser(m00_exit_pipeline_m_axi_ARUSER),
        .m_axi_arvalid(m00_exit_pipeline_m_axi_ARVALID),
        .m_axi_awaddr(m00_exit_pipeline_m_axi_AWADDR),
        .m_axi_awburst(m00_exit_pipeline_m_axi_AWBURST),
        .m_axi_awcache(m00_exit_pipeline_m_axi_AWCACHE),
        .m_axi_awlen(m00_exit_pipeline_m_axi_AWLEN),
        .m_axi_awlock(m00_exit_pipeline_m_axi_AWLOCK),
        .m_axi_awprot(m00_exit_pipeline_m_axi_AWPROT),
        .m_axi_awqos(m00_exit_pipeline_m_axi_AWQOS),
        .m_axi_awready(m00_exit_pipeline_m_axi_AWREADY),
        .m_axi_awsize(m00_exit_pipeline_m_axi_AWSIZE),
        .m_axi_awuser(m00_exit_pipeline_m_axi_AWUSER),
        .m_axi_awvalid(m00_exit_pipeline_m_axi_AWVALID),
        .m_axi_bready(m00_exit_pipeline_m_axi_BREADY),
        .m_axi_bresp(m00_exit_pipeline_m_axi_BRESP),
        .m_axi_bvalid(m00_exit_pipeline_m_axi_BVALID),
        .m_axi_rdata(m00_exit_pipeline_m_axi_RDATA),
        .m_axi_rlast(m00_exit_pipeline_m_axi_RLAST),
        .m_axi_rready(m00_exit_pipeline_m_axi_RREADY),
        .m_axi_rresp(m00_exit_pipeline_m_axi_RRESP),
        .m_axi_rvalid(m00_exit_pipeline_m_axi_RVALID),
        .m_axi_wdata(m00_exit_pipeline_m_axi_WDATA),
        .m_axi_wlast(m00_exit_pipeline_m_axi_WLAST),
        .m_axi_wready(m00_exit_pipeline_m_axi_WREADY),
        .m_axi_wstrb(m00_exit_pipeline_m_axi_WSTRB),
        .m_axi_wvalid(m00_exit_pipeline_m_axi_WVALID),
        .s_axi_araddr(m00_sc2axi_M_AXI_ARADDR),
        .s_axi_arcache(m00_sc2axi_M_AXI_ARCACHE),
        .s_axi_arid(m00_sc2axi_M_AXI_ARID),
        .s_axi_arlen(m00_sc2axi_M_AXI_ARLEN),
        .s_axi_arlock(m00_sc2axi_M_AXI_ARLOCK),
        .s_axi_arprot(m00_sc2axi_M_AXI_ARPROT),
        .s_axi_arqos(m00_sc2axi_M_AXI_ARQOS),
        .s_axi_arready(m00_sc2axi_M_AXI_ARREADY),
        .s_axi_aruser(m00_sc2axi_M_AXI_ARUSER),
        .s_axi_arvalid(m00_sc2axi_M_AXI_ARVALID),
        .s_axi_awaddr(m00_sc2axi_M_AXI_AWADDR),
        .s_axi_awcache(m00_sc2axi_M_AXI_AWCACHE),
        .s_axi_awid(m00_sc2axi_M_AXI_AWID),
        .s_axi_awlen(m00_sc2axi_M_AXI_AWLEN),
        .s_axi_awlock(m00_sc2axi_M_AXI_AWLOCK),
        .s_axi_awprot(m00_sc2axi_M_AXI_AWPROT),
        .s_axi_awqos(m00_sc2axi_M_AXI_AWQOS),
        .s_axi_awready(m00_sc2axi_M_AXI_AWREADY),
        .s_axi_awuser(m00_sc2axi_M_AXI_AWUSER),
        .s_axi_awvalid(m00_sc2axi_M_AXI_AWVALID),
        .s_axi_bid(m00_sc2axi_M_AXI_BID),
        .s_axi_bready(m00_sc2axi_M_AXI_BREADY),
        .s_axi_bresp(m00_sc2axi_M_AXI_BRESP),
        .s_axi_buser(m00_sc2axi_M_AXI_BUSER),
        .s_axi_bvalid(m00_sc2axi_M_AXI_BVALID),
        .s_axi_rdata(m00_sc2axi_M_AXI_RDATA),
        .s_axi_rid(m00_sc2axi_M_AXI_RID),
        .s_axi_rlast(m00_sc2axi_M_AXI_RLAST),
        .s_axi_rready(m00_sc2axi_M_AXI_RREADY),
        .s_axi_rresp(m00_sc2axi_M_AXI_RRESP),
        .s_axi_ruser(m00_sc2axi_M_AXI_RUSER),
        .s_axi_rvalid(m00_sc2axi_M_AXI_RVALID),
        .s_axi_wdata(m00_sc2axi_M_AXI_WDATA),
        .s_axi_wlast(m00_sc2axi_M_AXI_WLAST),
        .s_axi_wready(m00_sc2axi_M_AXI_WREADY),
        .s_axi_wstrb(m00_sc2axi_M_AXI_WSTRB),
        .s_axi_wuser(m00_sc2axi_M_AXI_WUSER),
        .s_axi_wvalid(m00_sc2axi_M_AXI_WVALID));
  m00_nodes_imp_1GOYQYZ m00_nodes
       (.M_SC_AR_info(m00_nodes_M_SC_AR_INFO),
        .M_SC_AR_payld(m00_nodes_M_SC_AR_PAYLD),
        .M_SC_AR_recv(m00_nodes_M_SC_AR_RECV),
        .M_SC_AR_req(m00_nodes_M_SC_AR_REQ),
        .M_SC_AR_send(m00_nodes_M_SC_AR_SEND),
        .M_SC_AW_info(m00_nodes_M_SC_AW_INFO),
        .M_SC_AW_payld(m00_nodes_M_SC_AW_PAYLD),
        .M_SC_AW_recv(m00_nodes_M_SC_AW_RECV),
        .M_SC_AW_req(m00_nodes_M_SC_AW_REQ),
        .M_SC_AW_send(m00_nodes_M_SC_AW_SEND),
        .M_SC_B_info(m00_nodes_M_SC_B_INFO),
        .M_SC_B_payld(m00_nodes_M_SC_B_PAYLD),
        .M_SC_B_recv(m00_nodes_M_SC_B_RECV),
        .M_SC_B_req(m00_nodes_M_SC_B_REQ),
        .M_SC_B_send(m00_nodes_M_SC_B_SEND),
        .M_SC_R_info(m00_nodes_M_SC_R_INFO),
        .M_SC_R_payld(m00_nodes_M_SC_R_PAYLD),
        .M_SC_R_recv(m00_nodes_M_SC_R_RECV),
        .M_SC_R_req(m00_nodes_M_SC_R_REQ),
        .M_SC_R_send(m00_nodes_M_SC_R_SEND),
        .M_SC_W_info(m00_nodes_M_SC_W_INFO),
        .M_SC_W_payld(m00_nodes_M_SC_W_PAYLD),
        .M_SC_W_recv(m00_nodes_M_SC_W_RECV),
        .M_SC_W_req(m00_nodes_M_SC_W_REQ),
        .M_SC_W_send(m00_nodes_M_SC_W_SEND),
        .S_SC_AR_info(S_SC_AR_2_INFO),
        .S_SC_AR_payld(S_SC_AR_2_PAYLD),
        .S_SC_AR_recv(S_SC_AR_2_RECV),
        .S_SC_AR_req(S_SC_AR_2_REQ),
        .S_SC_AR_send(S_SC_AR_2_SEND),
        .S_SC_AW_info(S_SC_AW_2_INFO),
        .S_SC_AW_payld(S_SC_AW_2_PAYLD),
        .S_SC_AW_recv(S_SC_AW_2_RECV),
        .S_SC_AW_req(S_SC_AW_2_REQ),
        .S_SC_AW_send(S_SC_AW_2_SEND),
        .S_SC_B_info(S_SC_B_2_INFO),
        .S_SC_B_payld(S_SC_B_2_PAYLD),
        .S_SC_B_recv(S_SC_B_2_RECV),
        .S_SC_B_req(S_SC_B_2_REQ),
        .S_SC_B_send(S_SC_B_2_SEND),
        .S_SC_R_info(S_SC_R_2_INFO),
        .S_SC_R_payld(S_SC_R_2_PAYLD),
        .S_SC_R_recv(S_SC_R_2_RECV),
        .S_SC_R_req(S_SC_R_2_REQ),
        .S_SC_R_send(S_SC_R_2_SEND),
        .S_SC_W_info(S_SC_W_2_INFO),
        .S_SC_W_payld(S_SC_W_2_PAYLD),
        .S_SC_W_recv(S_SC_W_2_RECV),
        .S_SC_W_req(S_SC_W_2_REQ),
        .S_SC_W_send(S_SC_W_2_SEND),
        .m_axi_aclk(clk_map_M00_ACLK),
        .m_axi_aresetn(clk_map_M00_ARESETN),
        .s_axi_aclk(clk_map_M00_ACLK),
        .s_axi_aresetn(clk_map_M00_ARESETN));
  bd_afc3_m00s2a_0 m00_sc2axi
       (.aclk(clk_map_M00_ACLK),
        .m_axi_araddr(m00_sc2axi_M_AXI_ARADDR),
        .m_axi_arcache(m00_sc2axi_M_AXI_ARCACHE),
        .m_axi_arid(m00_sc2axi_M_AXI_ARID),
        .m_axi_arlen(m00_sc2axi_M_AXI_ARLEN),
        .m_axi_arlock(m00_sc2axi_M_AXI_ARLOCK),
        .m_axi_arprot(m00_sc2axi_M_AXI_ARPROT),
        .m_axi_arqos(m00_sc2axi_M_AXI_ARQOS),
        .m_axi_arready(m00_sc2axi_M_AXI_ARREADY),
        .m_axi_aruser(m00_sc2axi_M_AXI_ARUSER),
        .m_axi_arvalid(m00_sc2axi_M_AXI_ARVALID),
        .m_axi_awaddr(m00_sc2axi_M_AXI_AWADDR),
        .m_axi_awcache(m00_sc2axi_M_AXI_AWCACHE),
        .m_axi_awid(m00_sc2axi_M_AXI_AWID),
        .m_axi_awlen(m00_sc2axi_M_AXI_AWLEN),
        .m_axi_awlock(m00_sc2axi_M_AXI_AWLOCK),
        .m_axi_awprot(m00_sc2axi_M_AXI_AWPROT),
        .m_axi_awqos(m00_sc2axi_M_AXI_AWQOS),
        .m_axi_awready(m00_sc2axi_M_AXI_AWREADY),
        .m_axi_awuser(m00_sc2axi_M_AXI_AWUSER),
        .m_axi_awvalid(m00_sc2axi_M_AXI_AWVALID),
        .m_axi_bid(m00_sc2axi_M_AXI_BID),
        .m_axi_bready(m00_sc2axi_M_AXI_BREADY),
        .m_axi_bresp(m00_sc2axi_M_AXI_BRESP),
        .m_axi_buser(m00_sc2axi_M_AXI_BUSER),
        .m_axi_bvalid(m00_sc2axi_M_AXI_BVALID),
        .m_axi_rdata(m00_sc2axi_M_AXI_RDATA),
        .m_axi_rid(m00_sc2axi_M_AXI_RID),
        .m_axi_rlast(m00_sc2axi_M_AXI_RLAST),
        .m_axi_rready(m00_sc2axi_M_AXI_RREADY),
        .m_axi_rresp(m00_sc2axi_M_AXI_RRESP),
        .m_axi_ruser(m00_sc2axi_M_AXI_RUSER),
        .m_axi_rvalid(m00_sc2axi_M_AXI_RVALID),
        .m_axi_wdata(m00_sc2axi_M_AXI_WDATA),
        .m_axi_wlast(m00_sc2axi_M_AXI_WLAST),
        .m_axi_wready(m00_sc2axi_M_AXI_WREADY),
        .m_axi_wstrb(m00_sc2axi_M_AXI_WSTRB),
        .m_axi_wuser(m00_sc2axi_M_AXI_WUSER),
        .m_axi_wvalid(m00_sc2axi_M_AXI_WVALID),
        .m_sc_b_info(S_SC_B_2_INFO),
        .m_sc_b_payld(S_SC_B_2_PAYLD),
        .m_sc_b_recv(S_SC_B_2_RECV),
        .m_sc_b_req(S_SC_B_2_REQ),
        .m_sc_b_send(S_SC_B_2_SEND),
        .m_sc_r_info(S_SC_R_2_INFO),
        .m_sc_r_payld(S_SC_R_2_PAYLD),
        .m_sc_r_recv(S_SC_R_2_RECV),
        .m_sc_r_req(S_SC_R_2_REQ),
        .m_sc_r_send(S_SC_R_2_SEND),
        .s_sc_ar_info(m00_nodes_M_SC_AR_INFO),
        .s_sc_ar_payld(m00_nodes_M_SC_AR_PAYLD[179:0]),
        .s_sc_ar_recv(m00_nodes_M_SC_AR_RECV),
        .s_sc_ar_req(m00_nodes_M_SC_AR_REQ),
        .s_sc_ar_send(m00_nodes_M_SC_AR_SEND),
        .s_sc_aw_info(m00_nodes_M_SC_AW_INFO),
        .s_sc_aw_payld(m00_nodes_M_SC_AW_PAYLD[179:0]),
        .s_sc_aw_recv(m00_nodes_M_SC_AW_RECV),
        .s_sc_aw_req(m00_nodes_M_SC_AW_REQ),
        .s_sc_aw_send(m00_nodes_M_SC_AW_SEND),
        .s_sc_w_info(m00_nodes_M_SC_W_INFO),
        .s_sc_w_payld(m00_nodes_M_SC_W_PAYLD[66:0]),
        .s_sc_w_recv(m00_nodes_M_SC_W_RECV),
        .s_sc_w_req(m00_nodes_M_SC_W_REQ),
        .s_sc_w_send(m00_nodes_M_SC_W_SEND));
  m01_exit_pipeline_imp_1XMPFJB m01_exit_pipeline
       (.aclk(clk_map_M01_ACLK),
        .aresetn(m_axi_aresetn_1),
        .m_axi_araddr(m01_exit_pipeline_m_axi_ARADDR),
        .m_axi_arburst(m01_exit_pipeline_m_axi_ARBURST),
        .m_axi_arcache(m01_exit_pipeline_m_axi_ARCACHE),
        .m_axi_arlen(m01_exit_pipeline_m_axi_ARLEN),
        .m_axi_arlock(m01_exit_pipeline_m_axi_ARLOCK),
        .m_axi_arprot(m01_exit_pipeline_m_axi_ARPROT),
        .m_axi_arqos(m01_exit_pipeline_m_axi_ARQOS),
        .m_axi_arready(m01_exit_pipeline_m_axi_ARREADY),
        .m_axi_arsize(m01_exit_pipeline_m_axi_ARSIZE),
        .m_axi_aruser(m01_exit_pipeline_m_axi_ARUSER),
        .m_axi_arvalid(m01_exit_pipeline_m_axi_ARVALID),
        .m_axi_awaddr(m01_exit_pipeline_m_axi_AWADDR),
        .m_axi_awburst(m01_exit_pipeline_m_axi_AWBURST),
        .m_axi_awcache(m01_exit_pipeline_m_axi_AWCACHE),
        .m_axi_awlen(m01_exit_pipeline_m_axi_AWLEN),
        .m_axi_awlock(m01_exit_pipeline_m_axi_AWLOCK),
        .m_axi_awprot(m01_exit_pipeline_m_axi_AWPROT),
        .m_axi_awqos(m01_exit_pipeline_m_axi_AWQOS),
        .m_axi_awready(m01_exit_pipeline_m_axi_AWREADY),
        .m_axi_awsize(m01_exit_pipeline_m_axi_AWSIZE),
        .m_axi_awuser(m01_exit_pipeline_m_axi_AWUSER),
        .m_axi_awvalid(m01_exit_pipeline_m_axi_AWVALID),
        .m_axi_bready(m01_exit_pipeline_m_axi_BREADY),
        .m_axi_bresp(m01_exit_pipeline_m_axi_BRESP),
        .m_axi_bvalid(m01_exit_pipeline_m_axi_BVALID),
        .m_axi_rdata(m01_exit_pipeline_m_axi_RDATA),
        .m_axi_rlast(m01_exit_pipeline_m_axi_RLAST),
        .m_axi_rready(m01_exit_pipeline_m_axi_RREADY),
        .m_axi_rresp(m01_exit_pipeline_m_axi_RRESP),
        .m_axi_rvalid(m01_exit_pipeline_m_axi_RVALID),
        .m_axi_wdata(m01_exit_pipeline_m_axi_WDATA),
        .m_axi_wlast(m01_exit_pipeline_m_axi_WLAST),
        .m_axi_wready(m01_exit_pipeline_m_axi_WREADY),
        .m_axi_wstrb(m01_exit_pipeline_m_axi_WSTRB),
        .m_axi_wvalid(m01_exit_pipeline_m_axi_WVALID),
        .s_axi_araddr(m01_sc2axi_M_AXI_ARADDR),
        .s_axi_arcache(m01_sc2axi_M_AXI_ARCACHE),
        .s_axi_arid(m01_sc2axi_M_AXI_ARID),
        .s_axi_arlen(m01_sc2axi_M_AXI_ARLEN),
        .s_axi_arlock(m01_sc2axi_M_AXI_ARLOCK),
        .s_axi_arprot(m01_sc2axi_M_AXI_ARPROT),
        .s_axi_arqos(m01_sc2axi_M_AXI_ARQOS),
        .s_axi_arready(m01_sc2axi_M_AXI_ARREADY),
        .s_axi_aruser(m01_sc2axi_M_AXI_ARUSER),
        .s_axi_arvalid(m01_sc2axi_M_AXI_ARVALID),
        .s_axi_awaddr(m01_sc2axi_M_AXI_AWADDR),
        .s_axi_awcache(m01_sc2axi_M_AXI_AWCACHE),
        .s_axi_awid(m01_sc2axi_M_AXI_AWID),
        .s_axi_awlen(m01_sc2axi_M_AXI_AWLEN),
        .s_axi_awlock(m01_sc2axi_M_AXI_AWLOCK),
        .s_axi_awprot(m01_sc2axi_M_AXI_AWPROT),
        .s_axi_awqos(m01_sc2axi_M_AXI_AWQOS),
        .s_axi_awready(m01_sc2axi_M_AXI_AWREADY),
        .s_axi_awuser(m01_sc2axi_M_AXI_AWUSER),
        .s_axi_awvalid(m01_sc2axi_M_AXI_AWVALID),
        .s_axi_bid(m01_sc2axi_M_AXI_BID),
        .s_axi_bready(m01_sc2axi_M_AXI_BREADY),
        .s_axi_bresp(m01_sc2axi_M_AXI_BRESP),
        .s_axi_buser(m01_sc2axi_M_AXI_BUSER),
        .s_axi_bvalid(m01_sc2axi_M_AXI_BVALID),
        .s_axi_rdata(m01_sc2axi_M_AXI_RDATA),
        .s_axi_rid(m01_sc2axi_M_AXI_RID),
        .s_axi_rlast(m01_sc2axi_M_AXI_RLAST),
        .s_axi_rready(m01_sc2axi_M_AXI_RREADY),
        .s_axi_rresp(m01_sc2axi_M_AXI_RRESP),
        .s_axi_ruser(m01_sc2axi_M_AXI_RUSER),
        .s_axi_rvalid(m01_sc2axi_M_AXI_RVALID),
        .s_axi_wdata(m01_sc2axi_M_AXI_WDATA),
        .s_axi_wlast(m01_sc2axi_M_AXI_WLAST),
        .s_axi_wready(m01_sc2axi_M_AXI_WREADY),
        .s_axi_wstrb(m01_sc2axi_M_AXI_WSTRB),
        .s_axi_wuser(m01_sc2axi_M_AXI_WUSER),
        .s_axi_wvalid(m01_sc2axi_M_AXI_WVALID));
  m01_nodes_imp_94N5OD m01_nodes
       (.M_SC_AR_info(m01_nodes_M_SC_AR_INFO),
        .M_SC_AR_payld(m01_nodes_M_SC_AR_PAYLD),
        .M_SC_AR_recv(m01_nodes_M_SC_AR_RECV),
        .M_SC_AR_req(m01_nodes_M_SC_AR_REQ),
        .M_SC_AR_send(m01_nodes_M_SC_AR_SEND),
        .M_SC_AW_info(m01_nodes_M_SC_AW_INFO),
        .M_SC_AW_payld(m01_nodes_M_SC_AW_PAYLD),
        .M_SC_AW_recv(m01_nodes_M_SC_AW_RECV),
        .M_SC_AW_req(m01_nodes_M_SC_AW_REQ),
        .M_SC_AW_send(m01_nodes_M_SC_AW_SEND),
        .M_SC_B_info(m01_nodes_M_SC_B_INFO),
        .M_SC_B_payld(m01_nodes_M_SC_B_PAYLD),
        .M_SC_B_recv(m01_nodes_M_SC_B_RECV),
        .M_SC_B_req(m01_nodes_M_SC_B_REQ),
        .M_SC_B_send(m01_nodes_M_SC_B_SEND),
        .M_SC_R_info(m01_nodes_M_SC_R_INFO),
        .M_SC_R_payld(m01_nodes_M_SC_R_PAYLD),
        .M_SC_R_recv(m01_nodes_M_SC_R_RECV),
        .M_SC_R_req(m01_nodes_M_SC_R_REQ),
        .M_SC_R_send(m01_nodes_M_SC_R_SEND),
        .M_SC_W_info(m01_nodes_M_SC_W_INFO),
        .M_SC_W_payld(m01_nodes_M_SC_W_PAYLD),
        .M_SC_W_recv(m01_nodes_M_SC_W_RECV),
        .M_SC_W_req(m01_nodes_M_SC_W_REQ),
        .M_SC_W_send(m01_nodes_M_SC_W_SEND),
        .S_SC_AR_info(S_SC_AR_3_INFO),
        .S_SC_AR_payld(S_SC_AR_3_PAYLD),
        .S_SC_AR_recv(S_SC_AR_3_RECV),
        .S_SC_AR_req(S_SC_AR_3_REQ),
        .S_SC_AR_send(S_SC_AR_3_SEND),
        .S_SC_AW_info(S_SC_AW_3_INFO),
        .S_SC_AW_payld(S_SC_AW_3_PAYLD),
        .S_SC_AW_recv(S_SC_AW_3_RECV),
        .S_SC_AW_req(S_SC_AW_3_REQ),
        .S_SC_AW_send(S_SC_AW_3_SEND),
        .S_SC_B_info(S_SC_B_3_INFO),
        .S_SC_B_payld(S_SC_B_3_PAYLD),
        .S_SC_B_recv(S_SC_B_3_RECV),
        .S_SC_B_req(S_SC_B_3_REQ),
        .S_SC_B_send(S_SC_B_3_SEND),
        .S_SC_R_info(S_SC_R_3_INFO),
        .S_SC_R_payld(S_SC_R_3_PAYLD),
        .S_SC_R_recv(S_SC_R_3_RECV),
        .S_SC_R_req(S_SC_R_3_REQ),
        .S_SC_R_send(S_SC_R_3_SEND),
        .S_SC_W_info(S_SC_W_3_INFO),
        .S_SC_W_payld(S_SC_W_3_PAYLD),
        .S_SC_W_recv(S_SC_W_3_RECV),
        .S_SC_W_req(S_SC_W_3_REQ),
        .S_SC_W_send(S_SC_W_3_SEND),
        .m_axi_aclk(clk_map_M01_ACLK),
        .m_axi_aresetn(m_axi_aresetn_1),
        .s_axi_aclk(clk_map_M00_ACLK),
        .s_axi_aresetn(clk_map_M00_ARESETN));
  bd_afc3_m01s2a_0 m01_sc2axi
       (.aclk(clk_map_M01_ACLK),
        .m_axi_araddr(m01_sc2axi_M_AXI_ARADDR),
        .m_axi_arcache(m01_sc2axi_M_AXI_ARCACHE),
        .m_axi_arid(m01_sc2axi_M_AXI_ARID),
        .m_axi_arlen(m01_sc2axi_M_AXI_ARLEN),
        .m_axi_arlock(m01_sc2axi_M_AXI_ARLOCK),
        .m_axi_arprot(m01_sc2axi_M_AXI_ARPROT),
        .m_axi_arqos(m01_sc2axi_M_AXI_ARQOS),
        .m_axi_arready(m01_sc2axi_M_AXI_ARREADY),
        .m_axi_aruser(m01_sc2axi_M_AXI_ARUSER),
        .m_axi_arvalid(m01_sc2axi_M_AXI_ARVALID),
        .m_axi_awaddr(m01_sc2axi_M_AXI_AWADDR),
        .m_axi_awcache(m01_sc2axi_M_AXI_AWCACHE),
        .m_axi_awid(m01_sc2axi_M_AXI_AWID),
        .m_axi_awlen(m01_sc2axi_M_AXI_AWLEN),
        .m_axi_awlock(m01_sc2axi_M_AXI_AWLOCK),
        .m_axi_awprot(m01_sc2axi_M_AXI_AWPROT),
        .m_axi_awqos(m01_sc2axi_M_AXI_AWQOS),
        .m_axi_awready(m01_sc2axi_M_AXI_AWREADY),
        .m_axi_awuser(m01_sc2axi_M_AXI_AWUSER),
        .m_axi_awvalid(m01_sc2axi_M_AXI_AWVALID),
        .m_axi_bid(m01_sc2axi_M_AXI_BID),
        .m_axi_bready(m01_sc2axi_M_AXI_BREADY),
        .m_axi_bresp(m01_sc2axi_M_AXI_BRESP),
        .m_axi_buser(m01_sc2axi_M_AXI_BUSER),
        .m_axi_bvalid(m01_sc2axi_M_AXI_BVALID),
        .m_axi_rdata(m01_sc2axi_M_AXI_RDATA),
        .m_axi_rid(m01_sc2axi_M_AXI_RID),
        .m_axi_rlast(m01_sc2axi_M_AXI_RLAST),
        .m_axi_rready(m01_sc2axi_M_AXI_RREADY),
        .m_axi_rresp(m01_sc2axi_M_AXI_RRESP),
        .m_axi_ruser(m01_sc2axi_M_AXI_RUSER),
        .m_axi_rvalid(m01_sc2axi_M_AXI_RVALID),
        .m_axi_wdata(m01_sc2axi_M_AXI_WDATA),
        .m_axi_wlast(m01_sc2axi_M_AXI_WLAST),
        .m_axi_wready(m01_sc2axi_M_AXI_WREADY),
        .m_axi_wstrb(m01_sc2axi_M_AXI_WSTRB),
        .m_axi_wuser(m01_sc2axi_M_AXI_WUSER),
        .m_axi_wvalid(m01_sc2axi_M_AXI_WVALID),
        .m_sc_b_info(S_SC_B_3_INFO),
        .m_sc_b_payld(S_SC_B_3_PAYLD),
        .m_sc_b_recv(S_SC_B_3_RECV),
        .m_sc_b_req(S_SC_B_3_REQ),
        .m_sc_b_send(S_SC_B_3_SEND),
        .m_sc_r_info(S_SC_R_3_INFO),
        .m_sc_r_payld(S_SC_R_3_PAYLD),
        .m_sc_r_recv(S_SC_R_3_RECV),
        .m_sc_r_req(S_SC_R_3_REQ),
        .m_sc_r_send(S_SC_R_3_SEND),
        .s_sc_ar_info(m01_nodes_M_SC_AR_INFO),
        .s_sc_ar_payld(m01_nodes_M_SC_AR_PAYLD[179:0]),
        .s_sc_ar_recv(m01_nodes_M_SC_AR_RECV),
        .s_sc_ar_req(m01_nodes_M_SC_AR_REQ),
        .s_sc_ar_send(m01_nodes_M_SC_AR_SEND),
        .s_sc_aw_info(m01_nodes_M_SC_AW_INFO),
        .s_sc_aw_payld(m01_nodes_M_SC_AW_PAYLD[179:0]),
        .s_sc_aw_recv(m01_nodes_M_SC_AW_RECV),
        .s_sc_aw_req(m01_nodes_M_SC_AW_REQ),
        .s_sc_aw_send(m01_nodes_M_SC_AW_SEND),
        .s_sc_w_info(m01_nodes_M_SC_W_INFO),
        .s_sc_w_payld(m01_nodes_M_SC_W_PAYLD[66:0]),
        .s_sc_w_recv(m01_nodes_M_SC_W_RECV),
        .s_sc_w_req(m01_nodes_M_SC_W_REQ),
        .s_sc_w_send(m01_nodes_M_SC_W_SEND));
  m02_exit_pipeline_imp_1I9A8BR m02_exit_pipeline
       (.aclk(clk_map_M02_ACLK),
        .aresetn(m_axi_aresetn_2),
        .m_axi_araddr(m02_exit_pipeline_m_axi_ARADDR),
        .m_axi_arburst(m02_exit_pipeline_m_axi_ARBURST),
        .m_axi_arcache(m02_exit_pipeline_m_axi_ARCACHE),
        .m_axi_arlen(m02_exit_pipeline_m_axi_ARLEN),
        .m_axi_arlock(m02_exit_pipeline_m_axi_ARLOCK),
        .m_axi_arprot(m02_exit_pipeline_m_axi_ARPROT),
        .m_axi_arqos(m02_exit_pipeline_m_axi_ARQOS),
        .m_axi_arready(m02_exit_pipeline_m_axi_ARREADY),
        .m_axi_arsize(m02_exit_pipeline_m_axi_ARSIZE),
        .m_axi_aruser(m02_exit_pipeline_m_axi_ARUSER),
        .m_axi_arvalid(m02_exit_pipeline_m_axi_ARVALID),
        .m_axi_awaddr(m02_exit_pipeline_m_axi_AWADDR),
        .m_axi_awburst(m02_exit_pipeline_m_axi_AWBURST),
        .m_axi_awcache(m02_exit_pipeline_m_axi_AWCACHE),
        .m_axi_awlen(m02_exit_pipeline_m_axi_AWLEN),
        .m_axi_awlock(m02_exit_pipeline_m_axi_AWLOCK),
        .m_axi_awprot(m02_exit_pipeline_m_axi_AWPROT),
        .m_axi_awqos(m02_exit_pipeline_m_axi_AWQOS),
        .m_axi_awready(m02_exit_pipeline_m_axi_AWREADY),
        .m_axi_awsize(m02_exit_pipeline_m_axi_AWSIZE),
        .m_axi_awuser(m02_exit_pipeline_m_axi_AWUSER),
        .m_axi_awvalid(m02_exit_pipeline_m_axi_AWVALID),
        .m_axi_bready(m02_exit_pipeline_m_axi_BREADY),
        .m_axi_bresp(m02_exit_pipeline_m_axi_BRESP),
        .m_axi_bvalid(m02_exit_pipeline_m_axi_BVALID),
        .m_axi_rdata(m02_exit_pipeline_m_axi_RDATA),
        .m_axi_rlast(m02_exit_pipeline_m_axi_RLAST),
        .m_axi_rready(m02_exit_pipeline_m_axi_RREADY),
        .m_axi_rresp(m02_exit_pipeline_m_axi_RRESP),
        .m_axi_rvalid(m02_exit_pipeline_m_axi_RVALID),
        .m_axi_wdata(m02_exit_pipeline_m_axi_WDATA),
        .m_axi_wlast(m02_exit_pipeline_m_axi_WLAST),
        .m_axi_wready(m02_exit_pipeline_m_axi_WREADY),
        .m_axi_wstrb(m02_exit_pipeline_m_axi_WSTRB),
        .m_axi_wvalid(m02_exit_pipeline_m_axi_WVALID),
        .s_axi_araddr(m02_sc2axi_M_AXI_ARADDR),
        .s_axi_arcache(m02_sc2axi_M_AXI_ARCACHE),
        .s_axi_arid(m02_sc2axi_M_AXI_ARID),
        .s_axi_arlen(m02_sc2axi_M_AXI_ARLEN),
        .s_axi_arlock(m02_sc2axi_M_AXI_ARLOCK),
        .s_axi_arprot(m02_sc2axi_M_AXI_ARPROT),
        .s_axi_arqos(m02_sc2axi_M_AXI_ARQOS),
        .s_axi_arready(m02_sc2axi_M_AXI_ARREADY),
        .s_axi_aruser(m02_sc2axi_M_AXI_ARUSER),
        .s_axi_arvalid(m02_sc2axi_M_AXI_ARVALID),
        .s_axi_awaddr(m02_sc2axi_M_AXI_AWADDR),
        .s_axi_awcache(m02_sc2axi_M_AXI_AWCACHE),
        .s_axi_awid(m02_sc2axi_M_AXI_AWID),
        .s_axi_awlen(m02_sc2axi_M_AXI_AWLEN),
        .s_axi_awlock(m02_sc2axi_M_AXI_AWLOCK),
        .s_axi_awprot(m02_sc2axi_M_AXI_AWPROT),
        .s_axi_awqos(m02_sc2axi_M_AXI_AWQOS),
        .s_axi_awready(m02_sc2axi_M_AXI_AWREADY),
        .s_axi_awuser(m02_sc2axi_M_AXI_AWUSER),
        .s_axi_awvalid(m02_sc2axi_M_AXI_AWVALID),
        .s_axi_bid(m02_sc2axi_M_AXI_BID),
        .s_axi_bready(m02_sc2axi_M_AXI_BREADY),
        .s_axi_bresp(m02_sc2axi_M_AXI_BRESP),
        .s_axi_buser(m02_sc2axi_M_AXI_BUSER),
        .s_axi_bvalid(m02_sc2axi_M_AXI_BVALID),
        .s_axi_rdata(m02_sc2axi_M_AXI_RDATA),
        .s_axi_rid(m02_sc2axi_M_AXI_RID),
        .s_axi_rlast(m02_sc2axi_M_AXI_RLAST),
        .s_axi_rready(m02_sc2axi_M_AXI_RREADY),
        .s_axi_rresp(m02_sc2axi_M_AXI_RRESP),
        .s_axi_ruser(m02_sc2axi_M_AXI_RUSER),
        .s_axi_rvalid(m02_sc2axi_M_AXI_RVALID),
        .s_axi_wdata(m02_sc2axi_M_AXI_WDATA),
        .s_axi_wlast(m02_sc2axi_M_AXI_WLAST),
        .s_axi_wready(m02_sc2axi_M_AXI_WREADY),
        .s_axi_wstrb(m02_sc2axi_M_AXI_WSTRB),
        .s_axi_wuser(m02_sc2axi_M_AXI_WUSER),
        .s_axi_wvalid(m02_sc2axi_M_AXI_WVALID));
  m02_nodes_imp_PO9IG6 m02_nodes
       (.M_SC_AR_info(m02_nodes_M_SC_AR_INFO),
        .M_SC_AR_payld(m02_nodes_M_SC_AR_PAYLD),
        .M_SC_AR_recv(m02_nodes_M_SC_AR_RECV),
        .M_SC_AR_req(m02_nodes_M_SC_AR_REQ),
        .M_SC_AR_send(m02_nodes_M_SC_AR_SEND),
        .M_SC_AW_info(m02_nodes_M_SC_AW_INFO),
        .M_SC_AW_payld(m02_nodes_M_SC_AW_PAYLD),
        .M_SC_AW_recv(m02_nodes_M_SC_AW_RECV),
        .M_SC_AW_req(m02_nodes_M_SC_AW_REQ),
        .M_SC_AW_send(m02_nodes_M_SC_AW_SEND),
        .M_SC_B_info(m02_nodes_M_SC_B_INFO),
        .M_SC_B_payld(m02_nodes_M_SC_B_PAYLD),
        .M_SC_B_recv(m02_nodes_M_SC_B_RECV),
        .M_SC_B_req(m02_nodes_M_SC_B_REQ),
        .M_SC_B_send(m02_nodes_M_SC_B_SEND),
        .M_SC_R_info(m02_nodes_M_SC_R_INFO),
        .M_SC_R_payld(m02_nodes_M_SC_R_PAYLD),
        .M_SC_R_recv(m02_nodes_M_SC_R_RECV),
        .M_SC_R_req(m02_nodes_M_SC_R_REQ),
        .M_SC_R_send(m02_nodes_M_SC_R_SEND),
        .M_SC_W_info(m02_nodes_M_SC_W_INFO),
        .M_SC_W_payld(m02_nodes_M_SC_W_PAYLD),
        .M_SC_W_recv(m02_nodes_M_SC_W_RECV),
        .M_SC_W_req(m02_nodes_M_SC_W_REQ),
        .M_SC_W_send(m02_nodes_M_SC_W_SEND),
        .S_SC_AR_info(S_SC_AR_4_INFO),
        .S_SC_AR_payld(S_SC_AR_4_PAYLD),
        .S_SC_AR_recv(S_SC_AR_4_RECV),
        .S_SC_AR_req(S_SC_AR_4_REQ),
        .S_SC_AR_send(S_SC_AR_4_SEND),
        .S_SC_AW_info(S_SC_AW_4_INFO),
        .S_SC_AW_payld(S_SC_AW_4_PAYLD),
        .S_SC_AW_recv(S_SC_AW_4_RECV),
        .S_SC_AW_req(S_SC_AW_4_REQ),
        .S_SC_AW_send(S_SC_AW_4_SEND),
        .S_SC_B_info(S_SC_B_4_INFO),
        .S_SC_B_payld(S_SC_B_4_PAYLD),
        .S_SC_B_recv(S_SC_B_4_RECV),
        .S_SC_B_req(S_SC_B_4_REQ),
        .S_SC_B_send(S_SC_B_4_SEND),
        .S_SC_R_info(S_SC_R_4_INFO),
        .S_SC_R_payld(S_SC_R_4_PAYLD),
        .S_SC_R_recv(S_SC_R_4_RECV),
        .S_SC_R_req(S_SC_R_4_REQ),
        .S_SC_R_send(S_SC_R_4_SEND),
        .S_SC_W_info(S_SC_W_4_INFO),
        .S_SC_W_payld(S_SC_W_4_PAYLD),
        .S_SC_W_recv(S_SC_W_4_RECV),
        .S_SC_W_req(S_SC_W_4_REQ),
        .S_SC_W_send(S_SC_W_4_SEND),
        .m_axi_aclk(clk_map_M02_ACLK),
        .m_axi_aresetn(m_axi_aresetn_2),
        .s_axi_aclk(clk_map_M00_ACLK),
        .s_axi_aresetn(clk_map_M00_ARESETN));
  bd_afc3_m02s2a_0 m02_sc2axi
       (.aclk(clk_map_M02_ACLK),
        .m_axi_araddr(m02_sc2axi_M_AXI_ARADDR),
        .m_axi_arcache(m02_sc2axi_M_AXI_ARCACHE),
        .m_axi_arid(m02_sc2axi_M_AXI_ARID),
        .m_axi_arlen(m02_sc2axi_M_AXI_ARLEN),
        .m_axi_arlock(m02_sc2axi_M_AXI_ARLOCK),
        .m_axi_arprot(m02_sc2axi_M_AXI_ARPROT),
        .m_axi_arqos(m02_sc2axi_M_AXI_ARQOS),
        .m_axi_arready(m02_sc2axi_M_AXI_ARREADY),
        .m_axi_aruser(m02_sc2axi_M_AXI_ARUSER),
        .m_axi_arvalid(m02_sc2axi_M_AXI_ARVALID),
        .m_axi_awaddr(m02_sc2axi_M_AXI_AWADDR),
        .m_axi_awcache(m02_sc2axi_M_AXI_AWCACHE),
        .m_axi_awid(m02_sc2axi_M_AXI_AWID),
        .m_axi_awlen(m02_sc2axi_M_AXI_AWLEN),
        .m_axi_awlock(m02_sc2axi_M_AXI_AWLOCK),
        .m_axi_awprot(m02_sc2axi_M_AXI_AWPROT),
        .m_axi_awqos(m02_sc2axi_M_AXI_AWQOS),
        .m_axi_awready(m02_sc2axi_M_AXI_AWREADY),
        .m_axi_awuser(m02_sc2axi_M_AXI_AWUSER),
        .m_axi_awvalid(m02_sc2axi_M_AXI_AWVALID),
        .m_axi_bid(m02_sc2axi_M_AXI_BID),
        .m_axi_bready(m02_sc2axi_M_AXI_BREADY),
        .m_axi_bresp(m02_sc2axi_M_AXI_BRESP),
        .m_axi_buser(m02_sc2axi_M_AXI_BUSER),
        .m_axi_bvalid(m02_sc2axi_M_AXI_BVALID),
        .m_axi_rdata(m02_sc2axi_M_AXI_RDATA),
        .m_axi_rid(m02_sc2axi_M_AXI_RID),
        .m_axi_rlast(m02_sc2axi_M_AXI_RLAST),
        .m_axi_rready(m02_sc2axi_M_AXI_RREADY),
        .m_axi_rresp(m02_sc2axi_M_AXI_RRESP),
        .m_axi_ruser(m02_sc2axi_M_AXI_RUSER),
        .m_axi_rvalid(m02_sc2axi_M_AXI_RVALID),
        .m_axi_wdata(m02_sc2axi_M_AXI_WDATA),
        .m_axi_wlast(m02_sc2axi_M_AXI_WLAST),
        .m_axi_wready(m02_sc2axi_M_AXI_WREADY),
        .m_axi_wstrb(m02_sc2axi_M_AXI_WSTRB),
        .m_axi_wuser(m02_sc2axi_M_AXI_WUSER),
        .m_axi_wvalid(m02_sc2axi_M_AXI_WVALID),
        .m_sc_b_info(S_SC_B_4_INFO),
        .m_sc_b_payld(S_SC_B_4_PAYLD),
        .m_sc_b_recv(S_SC_B_4_RECV),
        .m_sc_b_req(S_SC_B_4_REQ),
        .m_sc_b_send(S_SC_B_4_SEND),
        .m_sc_r_info(S_SC_R_4_INFO),
        .m_sc_r_payld(S_SC_R_4_PAYLD),
        .m_sc_r_recv(S_SC_R_4_RECV),
        .m_sc_r_req(S_SC_R_4_REQ),
        .m_sc_r_send(S_SC_R_4_SEND),
        .s_sc_ar_info(m02_nodes_M_SC_AR_INFO),
        .s_sc_ar_payld(m02_nodes_M_SC_AR_PAYLD[179:0]),
        .s_sc_ar_recv(m02_nodes_M_SC_AR_RECV),
        .s_sc_ar_req(m02_nodes_M_SC_AR_REQ),
        .s_sc_ar_send(m02_nodes_M_SC_AR_SEND),
        .s_sc_aw_info(m02_nodes_M_SC_AW_INFO),
        .s_sc_aw_payld(m02_nodes_M_SC_AW_PAYLD[179:0]),
        .s_sc_aw_recv(m02_nodes_M_SC_AW_RECV),
        .s_sc_aw_req(m02_nodes_M_SC_AW_REQ),
        .s_sc_aw_send(m02_nodes_M_SC_AW_SEND),
        .s_sc_w_info(m02_nodes_M_SC_W_INFO),
        .s_sc_w_payld(m02_nodes_M_SC_W_PAYLD[66:0]),
        .s_sc_w_recv(m02_nodes_M_SC_W_RECV),
        .s_sc_w_req(m02_nodes_M_SC_W_REQ),
        .s_sc_w_send(m02_nodes_M_SC_W_SEND));
  m03_exit_pipeline_imp_1N01L5Z m03_exit_pipeline
       (.aclk(clk_map_M03_ACLK),
        .aresetn(m_axi_aresetn_3),
        .m_axi_araddr(m03_exit_pipeline_m_axi_ARADDR),
        .m_axi_arburst(m03_exit_pipeline_m_axi_ARBURST),
        .m_axi_arcache(m03_exit_pipeline_m_axi_ARCACHE),
        .m_axi_arlen(m03_exit_pipeline_m_axi_ARLEN),
        .m_axi_arlock(m03_exit_pipeline_m_axi_ARLOCK),
        .m_axi_arprot(m03_exit_pipeline_m_axi_ARPROT),
        .m_axi_arqos(m03_exit_pipeline_m_axi_ARQOS),
        .m_axi_arready(m03_exit_pipeline_m_axi_ARREADY),
        .m_axi_arsize(m03_exit_pipeline_m_axi_ARSIZE),
        .m_axi_aruser(m03_exit_pipeline_m_axi_ARUSER),
        .m_axi_arvalid(m03_exit_pipeline_m_axi_ARVALID),
        .m_axi_awaddr(m03_exit_pipeline_m_axi_AWADDR),
        .m_axi_awburst(m03_exit_pipeline_m_axi_AWBURST),
        .m_axi_awcache(m03_exit_pipeline_m_axi_AWCACHE),
        .m_axi_awlen(m03_exit_pipeline_m_axi_AWLEN),
        .m_axi_awlock(m03_exit_pipeline_m_axi_AWLOCK),
        .m_axi_awprot(m03_exit_pipeline_m_axi_AWPROT),
        .m_axi_awqos(m03_exit_pipeline_m_axi_AWQOS),
        .m_axi_awready(m03_exit_pipeline_m_axi_AWREADY),
        .m_axi_awsize(m03_exit_pipeline_m_axi_AWSIZE),
        .m_axi_awuser(m03_exit_pipeline_m_axi_AWUSER),
        .m_axi_awvalid(m03_exit_pipeline_m_axi_AWVALID),
        .m_axi_bready(m03_exit_pipeline_m_axi_BREADY),
        .m_axi_bresp(m03_exit_pipeline_m_axi_BRESP),
        .m_axi_bvalid(m03_exit_pipeline_m_axi_BVALID),
        .m_axi_rdata(m03_exit_pipeline_m_axi_RDATA),
        .m_axi_rlast(m03_exit_pipeline_m_axi_RLAST),
        .m_axi_rready(m03_exit_pipeline_m_axi_RREADY),
        .m_axi_rresp(m03_exit_pipeline_m_axi_RRESP),
        .m_axi_rvalid(m03_exit_pipeline_m_axi_RVALID),
        .m_axi_wdata(m03_exit_pipeline_m_axi_WDATA),
        .m_axi_wlast(m03_exit_pipeline_m_axi_WLAST),
        .m_axi_wready(m03_exit_pipeline_m_axi_WREADY),
        .m_axi_wstrb(m03_exit_pipeline_m_axi_WSTRB),
        .m_axi_wvalid(m03_exit_pipeline_m_axi_WVALID),
        .s_axi_araddr(m03_sc2axi_M_AXI_ARADDR),
        .s_axi_arcache(m03_sc2axi_M_AXI_ARCACHE),
        .s_axi_arid(m03_sc2axi_M_AXI_ARID),
        .s_axi_arlen(m03_sc2axi_M_AXI_ARLEN),
        .s_axi_arlock(m03_sc2axi_M_AXI_ARLOCK),
        .s_axi_arprot(m03_sc2axi_M_AXI_ARPROT),
        .s_axi_arqos(m03_sc2axi_M_AXI_ARQOS),
        .s_axi_arready(m03_sc2axi_M_AXI_ARREADY),
        .s_axi_aruser(m03_sc2axi_M_AXI_ARUSER),
        .s_axi_arvalid(m03_sc2axi_M_AXI_ARVALID),
        .s_axi_awaddr(m03_sc2axi_M_AXI_AWADDR),
        .s_axi_awcache(m03_sc2axi_M_AXI_AWCACHE),
        .s_axi_awid(m03_sc2axi_M_AXI_AWID),
        .s_axi_awlen(m03_sc2axi_M_AXI_AWLEN),
        .s_axi_awlock(m03_sc2axi_M_AXI_AWLOCK),
        .s_axi_awprot(m03_sc2axi_M_AXI_AWPROT),
        .s_axi_awqos(m03_sc2axi_M_AXI_AWQOS),
        .s_axi_awready(m03_sc2axi_M_AXI_AWREADY),
        .s_axi_awuser(m03_sc2axi_M_AXI_AWUSER),
        .s_axi_awvalid(m03_sc2axi_M_AXI_AWVALID),
        .s_axi_bid(m03_sc2axi_M_AXI_BID),
        .s_axi_bready(m03_sc2axi_M_AXI_BREADY),
        .s_axi_bresp(m03_sc2axi_M_AXI_BRESP),
        .s_axi_buser(m03_sc2axi_M_AXI_BUSER),
        .s_axi_bvalid(m03_sc2axi_M_AXI_BVALID),
        .s_axi_rdata(m03_sc2axi_M_AXI_RDATA),
        .s_axi_rid(m03_sc2axi_M_AXI_RID),
        .s_axi_rlast(m03_sc2axi_M_AXI_RLAST),
        .s_axi_rready(m03_sc2axi_M_AXI_RREADY),
        .s_axi_rresp(m03_sc2axi_M_AXI_RRESP),
        .s_axi_ruser(m03_sc2axi_M_AXI_RUSER),
        .s_axi_rvalid(m03_sc2axi_M_AXI_RVALID),
        .s_axi_wdata(m03_sc2axi_M_AXI_WDATA),
        .s_axi_wlast(m03_sc2axi_M_AXI_WLAST),
        .s_axi_wready(m03_sc2axi_M_AXI_WREADY),
        .s_axi_wstrb(m03_sc2axi_M_AXI_WSTRB),
        .s_axi_wuser(m03_sc2axi_M_AXI_WUSER),
        .s_axi_wvalid(m03_sc2axi_M_AXI_WVALID));
  m03_nodes_imp_1HP4O9C m03_nodes
       (.M_SC_AR_info(m03_nodes_M_SC_AR_INFO),
        .M_SC_AR_payld(m03_nodes_M_SC_AR_PAYLD),
        .M_SC_AR_recv(m03_nodes_M_SC_AR_RECV),
        .M_SC_AR_req(m03_nodes_M_SC_AR_REQ),
        .M_SC_AR_send(m03_nodes_M_SC_AR_SEND),
        .M_SC_AW_info(m03_nodes_M_SC_AW_INFO),
        .M_SC_AW_payld(m03_nodes_M_SC_AW_PAYLD),
        .M_SC_AW_recv(m03_nodes_M_SC_AW_RECV),
        .M_SC_AW_req(m03_nodes_M_SC_AW_REQ),
        .M_SC_AW_send(m03_nodes_M_SC_AW_SEND),
        .M_SC_B_info(m03_nodes_M_SC_B_INFO),
        .M_SC_B_payld(m03_nodes_M_SC_B_PAYLD),
        .M_SC_B_recv(m03_nodes_M_SC_B_RECV),
        .M_SC_B_req(m03_nodes_M_SC_B_REQ),
        .M_SC_B_send(m03_nodes_M_SC_B_SEND),
        .M_SC_R_info(m03_nodes_M_SC_R_INFO),
        .M_SC_R_payld(m03_nodes_M_SC_R_PAYLD),
        .M_SC_R_recv(m03_nodes_M_SC_R_RECV),
        .M_SC_R_req(m03_nodes_M_SC_R_REQ),
        .M_SC_R_send(m03_nodes_M_SC_R_SEND),
        .M_SC_W_info(m03_nodes_M_SC_W_INFO),
        .M_SC_W_payld(m03_nodes_M_SC_W_PAYLD),
        .M_SC_W_recv(m03_nodes_M_SC_W_RECV),
        .M_SC_W_req(m03_nodes_M_SC_W_REQ),
        .M_SC_W_send(m03_nodes_M_SC_W_SEND),
        .S_SC_AR_info(S_SC_AR_5_INFO),
        .S_SC_AR_payld(S_SC_AR_5_PAYLD),
        .S_SC_AR_recv(S_SC_AR_5_RECV),
        .S_SC_AR_req(S_SC_AR_5_REQ),
        .S_SC_AR_send(S_SC_AR_5_SEND),
        .S_SC_AW_info(S_SC_AW_5_INFO),
        .S_SC_AW_payld(S_SC_AW_5_PAYLD),
        .S_SC_AW_recv(S_SC_AW_5_RECV),
        .S_SC_AW_req(S_SC_AW_5_REQ),
        .S_SC_AW_send(S_SC_AW_5_SEND),
        .S_SC_B_info(S_SC_B_5_INFO),
        .S_SC_B_payld(S_SC_B_5_PAYLD),
        .S_SC_B_recv(S_SC_B_5_RECV),
        .S_SC_B_req(S_SC_B_5_REQ),
        .S_SC_B_send(S_SC_B_5_SEND),
        .S_SC_R_info(S_SC_R_5_INFO),
        .S_SC_R_payld(S_SC_R_5_PAYLD),
        .S_SC_R_recv(S_SC_R_5_RECV),
        .S_SC_R_req(S_SC_R_5_REQ),
        .S_SC_R_send(S_SC_R_5_SEND),
        .S_SC_W_info(S_SC_W_5_INFO),
        .S_SC_W_payld(S_SC_W_5_PAYLD),
        .S_SC_W_recv(S_SC_W_5_RECV),
        .S_SC_W_req(S_SC_W_5_REQ),
        .S_SC_W_send(S_SC_W_5_SEND),
        .m_axi_aclk(clk_map_M03_ACLK),
        .m_axi_aresetn(m_axi_aresetn_3),
        .s_axi_aclk(clk_map_M00_ACLK),
        .s_axi_aresetn(clk_map_M00_ARESETN));
  bd_afc3_m03s2a_0 m03_sc2axi
       (.aclk(clk_map_M03_ACLK),
        .m_axi_araddr(m03_sc2axi_M_AXI_ARADDR),
        .m_axi_arcache(m03_sc2axi_M_AXI_ARCACHE),
        .m_axi_arid(m03_sc2axi_M_AXI_ARID),
        .m_axi_arlen(m03_sc2axi_M_AXI_ARLEN),
        .m_axi_arlock(m03_sc2axi_M_AXI_ARLOCK),
        .m_axi_arprot(m03_sc2axi_M_AXI_ARPROT),
        .m_axi_arqos(m03_sc2axi_M_AXI_ARQOS),
        .m_axi_arready(m03_sc2axi_M_AXI_ARREADY),
        .m_axi_aruser(m03_sc2axi_M_AXI_ARUSER),
        .m_axi_arvalid(m03_sc2axi_M_AXI_ARVALID),
        .m_axi_awaddr(m03_sc2axi_M_AXI_AWADDR),
        .m_axi_awcache(m03_sc2axi_M_AXI_AWCACHE),
        .m_axi_awid(m03_sc2axi_M_AXI_AWID),
        .m_axi_awlen(m03_sc2axi_M_AXI_AWLEN),
        .m_axi_awlock(m03_sc2axi_M_AXI_AWLOCK),
        .m_axi_awprot(m03_sc2axi_M_AXI_AWPROT),
        .m_axi_awqos(m03_sc2axi_M_AXI_AWQOS),
        .m_axi_awready(m03_sc2axi_M_AXI_AWREADY),
        .m_axi_awuser(m03_sc2axi_M_AXI_AWUSER),
        .m_axi_awvalid(m03_sc2axi_M_AXI_AWVALID),
        .m_axi_bid(m03_sc2axi_M_AXI_BID),
        .m_axi_bready(m03_sc2axi_M_AXI_BREADY),
        .m_axi_bresp(m03_sc2axi_M_AXI_BRESP),
        .m_axi_buser(m03_sc2axi_M_AXI_BUSER),
        .m_axi_bvalid(m03_sc2axi_M_AXI_BVALID),
        .m_axi_rdata(m03_sc2axi_M_AXI_RDATA),
        .m_axi_rid(m03_sc2axi_M_AXI_RID),
        .m_axi_rlast(m03_sc2axi_M_AXI_RLAST),
        .m_axi_rready(m03_sc2axi_M_AXI_RREADY),
        .m_axi_rresp(m03_sc2axi_M_AXI_RRESP),
        .m_axi_ruser(m03_sc2axi_M_AXI_RUSER),
        .m_axi_rvalid(m03_sc2axi_M_AXI_RVALID),
        .m_axi_wdata(m03_sc2axi_M_AXI_WDATA),
        .m_axi_wlast(m03_sc2axi_M_AXI_WLAST),
        .m_axi_wready(m03_sc2axi_M_AXI_WREADY),
        .m_axi_wstrb(m03_sc2axi_M_AXI_WSTRB),
        .m_axi_wuser(m03_sc2axi_M_AXI_WUSER),
        .m_axi_wvalid(m03_sc2axi_M_AXI_WVALID),
        .m_sc_b_info(S_SC_B_5_INFO),
        .m_sc_b_payld(S_SC_B_5_PAYLD),
        .m_sc_b_recv(S_SC_B_5_RECV),
        .m_sc_b_req(S_SC_B_5_REQ),
        .m_sc_b_send(S_SC_B_5_SEND),
        .m_sc_r_info(S_SC_R_5_INFO),
        .m_sc_r_payld(S_SC_R_5_PAYLD),
        .m_sc_r_recv(S_SC_R_5_RECV),
        .m_sc_r_req(S_SC_R_5_REQ),
        .m_sc_r_send(S_SC_R_5_SEND),
        .s_sc_ar_info(m03_nodes_M_SC_AR_INFO),
        .s_sc_ar_payld(m03_nodes_M_SC_AR_PAYLD[179:0]),
        .s_sc_ar_recv(m03_nodes_M_SC_AR_RECV),
        .s_sc_ar_req(m03_nodes_M_SC_AR_REQ),
        .s_sc_ar_send(m03_nodes_M_SC_AR_SEND),
        .s_sc_aw_info(m03_nodes_M_SC_AW_INFO),
        .s_sc_aw_payld(m03_nodes_M_SC_AW_PAYLD[179:0]),
        .s_sc_aw_recv(m03_nodes_M_SC_AW_RECV),
        .s_sc_aw_req(m03_nodes_M_SC_AW_REQ),
        .s_sc_aw_send(m03_nodes_M_SC_AW_SEND),
        .s_sc_w_info(m03_nodes_M_SC_W_INFO),
        .s_sc_w_payld(m03_nodes_M_SC_W_PAYLD[66:0]),
        .s_sc_w_recv(m03_nodes_M_SC_W_RECV),
        .s_sc_w_req(m03_nodes_M_SC_W_REQ),
        .s_sc_w_send(m03_nodes_M_SC_W_SEND));
  m04_exit_pipeline_imp_1D8WVFR m04_exit_pipeline
       (.aclk(clk_map_M04_ACLK),
        .aresetn(m_axi_aresetn_4),
        .m_axi_araddr(m04_exit_pipeline_m_axi_ARADDR),
        .m_axi_arburst(m04_exit_pipeline_m_axi_ARBURST),
        .m_axi_arcache(m04_exit_pipeline_m_axi_ARCACHE),
        .m_axi_arlen(m04_exit_pipeline_m_axi_ARLEN),
        .m_axi_arlock(m04_exit_pipeline_m_axi_ARLOCK),
        .m_axi_arprot(m04_exit_pipeline_m_axi_ARPROT),
        .m_axi_arqos(m04_exit_pipeline_m_axi_ARQOS),
        .m_axi_arready(m04_exit_pipeline_m_axi_ARREADY),
        .m_axi_arsize(m04_exit_pipeline_m_axi_ARSIZE),
        .m_axi_aruser(m04_exit_pipeline_m_axi_ARUSER),
        .m_axi_arvalid(m04_exit_pipeline_m_axi_ARVALID),
        .m_axi_awaddr(m04_exit_pipeline_m_axi_AWADDR),
        .m_axi_awburst(m04_exit_pipeline_m_axi_AWBURST),
        .m_axi_awcache(m04_exit_pipeline_m_axi_AWCACHE),
        .m_axi_awlen(m04_exit_pipeline_m_axi_AWLEN),
        .m_axi_awlock(m04_exit_pipeline_m_axi_AWLOCK),
        .m_axi_awprot(m04_exit_pipeline_m_axi_AWPROT),
        .m_axi_awqos(m04_exit_pipeline_m_axi_AWQOS),
        .m_axi_awready(m04_exit_pipeline_m_axi_AWREADY),
        .m_axi_awsize(m04_exit_pipeline_m_axi_AWSIZE),
        .m_axi_awuser(m04_exit_pipeline_m_axi_AWUSER),
        .m_axi_awvalid(m04_exit_pipeline_m_axi_AWVALID),
        .m_axi_bready(m04_exit_pipeline_m_axi_BREADY),
        .m_axi_bresp(m04_exit_pipeline_m_axi_BRESP),
        .m_axi_bvalid(m04_exit_pipeline_m_axi_BVALID),
        .m_axi_rdata(m04_exit_pipeline_m_axi_RDATA),
        .m_axi_rlast(m04_exit_pipeline_m_axi_RLAST),
        .m_axi_rready(m04_exit_pipeline_m_axi_RREADY),
        .m_axi_rresp(m04_exit_pipeline_m_axi_RRESP),
        .m_axi_rvalid(m04_exit_pipeline_m_axi_RVALID),
        .m_axi_wdata(m04_exit_pipeline_m_axi_WDATA),
        .m_axi_wlast(m04_exit_pipeline_m_axi_WLAST),
        .m_axi_wready(m04_exit_pipeline_m_axi_WREADY),
        .m_axi_wstrb(m04_exit_pipeline_m_axi_WSTRB),
        .m_axi_wvalid(m04_exit_pipeline_m_axi_WVALID),
        .s_axi_araddr(m04_sc2axi_M_AXI_ARADDR),
        .s_axi_arcache(m04_sc2axi_M_AXI_ARCACHE),
        .s_axi_arid(m04_sc2axi_M_AXI_ARID),
        .s_axi_arlen(m04_sc2axi_M_AXI_ARLEN),
        .s_axi_arlock(m04_sc2axi_M_AXI_ARLOCK),
        .s_axi_arprot(m04_sc2axi_M_AXI_ARPROT),
        .s_axi_arqos(m04_sc2axi_M_AXI_ARQOS),
        .s_axi_arready(m04_sc2axi_M_AXI_ARREADY),
        .s_axi_aruser(m04_sc2axi_M_AXI_ARUSER),
        .s_axi_arvalid(m04_sc2axi_M_AXI_ARVALID),
        .s_axi_awaddr(m04_sc2axi_M_AXI_AWADDR),
        .s_axi_awcache(m04_sc2axi_M_AXI_AWCACHE),
        .s_axi_awid(m04_sc2axi_M_AXI_AWID),
        .s_axi_awlen(m04_sc2axi_M_AXI_AWLEN),
        .s_axi_awlock(m04_sc2axi_M_AXI_AWLOCK),
        .s_axi_awprot(m04_sc2axi_M_AXI_AWPROT),
        .s_axi_awqos(m04_sc2axi_M_AXI_AWQOS),
        .s_axi_awready(m04_sc2axi_M_AXI_AWREADY),
        .s_axi_awuser(m04_sc2axi_M_AXI_AWUSER),
        .s_axi_awvalid(m04_sc2axi_M_AXI_AWVALID),
        .s_axi_bid(m04_sc2axi_M_AXI_BID),
        .s_axi_bready(m04_sc2axi_M_AXI_BREADY),
        .s_axi_bresp(m04_sc2axi_M_AXI_BRESP),
        .s_axi_buser(m04_sc2axi_M_AXI_BUSER),
        .s_axi_bvalid(m04_sc2axi_M_AXI_BVALID),
        .s_axi_rdata(m04_sc2axi_M_AXI_RDATA),
        .s_axi_rid(m04_sc2axi_M_AXI_RID),
        .s_axi_rlast(m04_sc2axi_M_AXI_RLAST),
        .s_axi_rready(m04_sc2axi_M_AXI_RREADY),
        .s_axi_rresp(m04_sc2axi_M_AXI_RRESP),
        .s_axi_ruser(m04_sc2axi_M_AXI_RUSER),
        .s_axi_rvalid(m04_sc2axi_M_AXI_RVALID),
        .s_axi_wdata(m04_sc2axi_M_AXI_WDATA),
        .s_axi_wlast(m04_sc2axi_M_AXI_WLAST),
        .s_axi_wready(m04_sc2axi_M_AXI_WREADY),
        .s_axi_wstrb(m04_sc2axi_M_AXI_WSTRB),
        .s_axi_wuser(m04_sc2axi_M_AXI_WUSER),
        .s_axi_wvalid(m04_sc2axi_M_AXI_WVALID));
  m04_nodes_imp_19KV9JK m04_nodes
       (.M_SC_AR_info(m04_nodes_M_SC_AR_INFO),
        .M_SC_AR_payld(m04_nodes_M_SC_AR_PAYLD),
        .M_SC_AR_recv(m04_nodes_M_SC_AR_RECV),
        .M_SC_AR_req(m04_nodes_M_SC_AR_REQ),
        .M_SC_AR_send(m04_nodes_M_SC_AR_SEND),
        .M_SC_AW_info(m04_nodes_M_SC_AW_INFO),
        .M_SC_AW_payld(m04_nodes_M_SC_AW_PAYLD),
        .M_SC_AW_recv(m04_nodes_M_SC_AW_RECV),
        .M_SC_AW_req(m04_nodes_M_SC_AW_REQ),
        .M_SC_AW_send(m04_nodes_M_SC_AW_SEND),
        .M_SC_B_info(m04_nodes_M_SC_B_INFO),
        .M_SC_B_payld(m04_nodes_M_SC_B_PAYLD),
        .M_SC_B_recv(m04_nodes_M_SC_B_RECV),
        .M_SC_B_req(m04_nodes_M_SC_B_REQ),
        .M_SC_B_send(m04_nodes_M_SC_B_SEND),
        .M_SC_R_info(m04_nodes_M_SC_R_INFO),
        .M_SC_R_payld(m04_nodes_M_SC_R_PAYLD),
        .M_SC_R_recv(m04_nodes_M_SC_R_RECV),
        .M_SC_R_req(m04_nodes_M_SC_R_REQ),
        .M_SC_R_send(m04_nodes_M_SC_R_SEND),
        .M_SC_W_info(m04_nodes_M_SC_W_INFO),
        .M_SC_W_payld(m04_nodes_M_SC_W_PAYLD),
        .M_SC_W_recv(m04_nodes_M_SC_W_RECV),
        .M_SC_W_req(m04_nodes_M_SC_W_REQ),
        .M_SC_W_send(m04_nodes_M_SC_W_SEND),
        .S_SC_AR_info(S_SC_AR_6_INFO),
        .S_SC_AR_payld(S_SC_AR_6_PAYLD),
        .S_SC_AR_recv(S_SC_AR_6_RECV),
        .S_SC_AR_req(S_SC_AR_6_REQ),
        .S_SC_AR_send(S_SC_AR_6_SEND),
        .S_SC_AW_info(S_SC_AW_6_INFO),
        .S_SC_AW_payld(S_SC_AW_6_PAYLD),
        .S_SC_AW_recv(S_SC_AW_6_RECV),
        .S_SC_AW_req(S_SC_AW_6_REQ),
        .S_SC_AW_send(S_SC_AW_6_SEND),
        .S_SC_B_info(S_SC_B_6_INFO),
        .S_SC_B_payld(S_SC_B_6_PAYLD),
        .S_SC_B_recv(S_SC_B_6_RECV),
        .S_SC_B_req(S_SC_B_6_REQ),
        .S_SC_B_send(S_SC_B_6_SEND),
        .S_SC_R_info(S_SC_R_6_INFO),
        .S_SC_R_payld(S_SC_R_6_PAYLD),
        .S_SC_R_recv(S_SC_R_6_RECV),
        .S_SC_R_req(S_SC_R_6_REQ),
        .S_SC_R_send(S_SC_R_6_SEND),
        .S_SC_W_info(S_SC_W_6_INFO),
        .S_SC_W_payld(S_SC_W_6_PAYLD),
        .S_SC_W_recv(S_SC_W_6_RECV),
        .S_SC_W_req(S_SC_W_6_REQ),
        .S_SC_W_send(S_SC_W_6_SEND),
        .m_axi_aclk(clk_map_M04_ACLK),
        .m_axi_aresetn(m_axi_aresetn_4),
        .s_axi_aclk(clk_map_M00_ACLK),
        .s_axi_aresetn(clk_map_M00_ARESETN));
  bd_afc3_m04s2a_0 m04_sc2axi
       (.aclk(clk_map_M04_ACLK),
        .m_axi_araddr(m04_sc2axi_M_AXI_ARADDR),
        .m_axi_arcache(m04_sc2axi_M_AXI_ARCACHE),
        .m_axi_arid(m04_sc2axi_M_AXI_ARID),
        .m_axi_arlen(m04_sc2axi_M_AXI_ARLEN),
        .m_axi_arlock(m04_sc2axi_M_AXI_ARLOCK),
        .m_axi_arprot(m04_sc2axi_M_AXI_ARPROT),
        .m_axi_arqos(m04_sc2axi_M_AXI_ARQOS),
        .m_axi_arready(m04_sc2axi_M_AXI_ARREADY),
        .m_axi_aruser(m04_sc2axi_M_AXI_ARUSER),
        .m_axi_arvalid(m04_sc2axi_M_AXI_ARVALID),
        .m_axi_awaddr(m04_sc2axi_M_AXI_AWADDR),
        .m_axi_awcache(m04_sc2axi_M_AXI_AWCACHE),
        .m_axi_awid(m04_sc2axi_M_AXI_AWID),
        .m_axi_awlen(m04_sc2axi_M_AXI_AWLEN),
        .m_axi_awlock(m04_sc2axi_M_AXI_AWLOCK),
        .m_axi_awprot(m04_sc2axi_M_AXI_AWPROT),
        .m_axi_awqos(m04_sc2axi_M_AXI_AWQOS),
        .m_axi_awready(m04_sc2axi_M_AXI_AWREADY),
        .m_axi_awuser(m04_sc2axi_M_AXI_AWUSER),
        .m_axi_awvalid(m04_sc2axi_M_AXI_AWVALID),
        .m_axi_bid(m04_sc2axi_M_AXI_BID),
        .m_axi_bready(m04_sc2axi_M_AXI_BREADY),
        .m_axi_bresp(m04_sc2axi_M_AXI_BRESP),
        .m_axi_buser(m04_sc2axi_M_AXI_BUSER),
        .m_axi_bvalid(m04_sc2axi_M_AXI_BVALID),
        .m_axi_rdata(m04_sc2axi_M_AXI_RDATA),
        .m_axi_rid(m04_sc2axi_M_AXI_RID),
        .m_axi_rlast(m04_sc2axi_M_AXI_RLAST),
        .m_axi_rready(m04_sc2axi_M_AXI_RREADY),
        .m_axi_rresp(m04_sc2axi_M_AXI_RRESP),
        .m_axi_ruser(m04_sc2axi_M_AXI_RUSER),
        .m_axi_rvalid(m04_sc2axi_M_AXI_RVALID),
        .m_axi_wdata(m04_sc2axi_M_AXI_WDATA),
        .m_axi_wlast(m04_sc2axi_M_AXI_WLAST),
        .m_axi_wready(m04_sc2axi_M_AXI_WREADY),
        .m_axi_wstrb(m04_sc2axi_M_AXI_WSTRB),
        .m_axi_wuser(m04_sc2axi_M_AXI_WUSER),
        .m_axi_wvalid(m04_sc2axi_M_AXI_WVALID),
        .m_sc_b_info(S_SC_B_6_INFO),
        .m_sc_b_payld(S_SC_B_6_PAYLD),
        .m_sc_b_recv(S_SC_B_6_RECV),
        .m_sc_b_req(S_SC_B_6_REQ),
        .m_sc_b_send(S_SC_B_6_SEND),
        .m_sc_r_info(S_SC_R_6_INFO),
        .m_sc_r_payld(S_SC_R_6_PAYLD),
        .m_sc_r_recv(S_SC_R_6_RECV),
        .m_sc_r_req(S_SC_R_6_REQ),
        .m_sc_r_send(S_SC_R_6_SEND),
        .s_sc_ar_info(m04_nodes_M_SC_AR_INFO),
        .s_sc_ar_payld(m04_nodes_M_SC_AR_PAYLD[179:0]),
        .s_sc_ar_recv(m04_nodes_M_SC_AR_RECV),
        .s_sc_ar_req(m04_nodes_M_SC_AR_REQ),
        .s_sc_ar_send(m04_nodes_M_SC_AR_SEND),
        .s_sc_aw_info(m04_nodes_M_SC_AW_INFO),
        .s_sc_aw_payld(m04_nodes_M_SC_AW_PAYLD[179:0]),
        .s_sc_aw_recv(m04_nodes_M_SC_AW_RECV),
        .s_sc_aw_req(m04_nodes_M_SC_AW_REQ),
        .s_sc_aw_send(m04_nodes_M_SC_AW_SEND),
        .s_sc_w_info(m04_nodes_M_SC_W_INFO),
        .s_sc_w_payld(m04_nodes_M_SC_W_PAYLD[66:0]),
        .s_sc_w_recv(m04_nodes_M_SC_W_RECV),
        .s_sc_w_req(m04_nodes_M_SC_W_REQ),
        .s_sc_w_send(m04_nodes_M_SC_W_SEND));
  m05_exit_pipeline_imp_1A5H04N m05_exit_pipeline
       (.aclk(clk_map_M05_ACLK),
        .aresetn(m_axi_aresetn_5),
        .m_axi_araddr(m05_exit_pipeline_m_axi_ARADDR),
        .m_axi_arburst(m05_exit_pipeline_m_axi_ARBURST),
        .m_axi_arcache(m05_exit_pipeline_m_axi_ARCACHE),
        .m_axi_arlen(m05_exit_pipeline_m_axi_ARLEN),
        .m_axi_arlock(m05_exit_pipeline_m_axi_ARLOCK),
        .m_axi_arprot(m05_exit_pipeline_m_axi_ARPROT),
        .m_axi_arqos(m05_exit_pipeline_m_axi_ARQOS),
        .m_axi_arready(m05_exit_pipeline_m_axi_ARREADY),
        .m_axi_arsize(m05_exit_pipeline_m_axi_ARSIZE),
        .m_axi_aruser(m05_exit_pipeline_m_axi_ARUSER),
        .m_axi_arvalid(m05_exit_pipeline_m_axi_ARVALID),
        .m_axi_awaddr(m05_exit_pipeline_m_axi_AWADDR),
        .m_axi_awburst(m05_exit_pipeline_m_axi_AWBURST),
        .m_axi_awcache(m05_exit_pipeline_m_axi_AWCACHE),
        .m_axi_awlen(m05_exit_pipeline_m_axi_AWLEN),
        .m_axi_awlock(m05_exit_pipeline_m_axi_AWLOCK),
        .m_axi_awprot(m05_exit_pipeline_m_axi_AWPROT),
        .m_axi_awqos(m05_exit_pipeline_m_axi_AWQOS),
        .m_axi_awready(m05_exit_pipeline_m_axi_AWREADY),
        .m_axi_awsize(m05_exit_pipeline_m_axi_AWSIZE),
        .m_axi_awuser(m05_exit_pipeline_m_axi_AWUSER),
        .m_axi_awvalid(m05_exit_pipeline_m_axi_AWVALID),
        .m_axi_bready(m05_exit_pipeline_m_axi_BREADY),
        .m_axi_bresp(m05_exit_pipeline_m_axi_BRESP),
        .m_axi_bvalid(m05_exit_pipeline_m_axi_BVALID),
        .m_axi_rdata(m05_exit_pipeline_m_axi_RDATA),
        .m_axi_rlast(m05_exit_pipeline_m_axi_RLAST),
        .m_axi_rready(m05_exit_pipeline_m_axi_RREADY),
        .m_axi_rresp(m05_exit_pipeline_m_axi_RRESP),
        .m_axi_rvalid(m05_exit_pipeline_m_axi_RVALID),
        .m_axi_wdata(m05_exit_pipeline_m_axi_WDATA),
        .m_axi_wlast(m05_exit_pipeline_m_axi_WLAST),
        .m_axi_wready(m05_exit_pipeline_m_axi_WREADY),
        .m_axi_wstrb(m05_exit_pipeline_m_axi_WSTRB),
        .m_axi_wvalid(m05_exit_pipeline_m_axi_WVALID),
        .s_axi_araddr(m05_sc2axi_M_AXI_ARADDR),
        .s_axi_arcache(m05_sc2axi_M_AXI_ARCACHE),
        .s_axi_arid(m05_sc2axi_M_AXI_ARID),
        .s_axi_arlen(m05_sc2axi_M_AXI_ARLEN),
        .s_axi_arlock(m05_sc2axi_M_AXI_ARLOCK),
        .s_axi_arprot(m05_sc2axi_M_AXI_ARPROT),
        .s_axi_arqos(m05_sc2axi_M_AXI_ARQOS),
        .s_axi_arready(m05_sc2axi_M_AXI_ARREADY),
        .s_axi_aruser(m05_sc2axi_M_AXI_ARUSER),
        .s_axi_arvalid(m05_sc2axi_M_AXI_ARVALID),
        .s_axi_awaddr(m05_sc2axi_M_AXI_AWADDR),
        .s_axi_awcache(m05_sc2axi_M_AXI_AWCACHE),
        .s_axi_awid(m05_sc2axi_M_AXI_AWID),
        .s_axi_awlen(m05_sc2axi_M_AXI_AWLEN),
        .s_axi_awlock(m05_sc2axi_M_AXI_AWLOCK),
        .s_axi_awprot(m05_sc2axi_M_AXI_AWPROT),
        .s_axi_awqos(m05_sc2axi_M_AXI_AWQOS),
        .s_axi_awready(m05_sc2axi_M_AXI_AWREADY),
        .s_axi_awuser(m05_sc2axi_M_AXI_AWUSER),
        .s_axi_awvalid(m05_sc2axi_M_AXI_AWVALID),
        .s_axi_bid(m05_sc2axi_M_AXI_BID),
        .s_axi_bready(m05_sc2axi_M_AXI_BREADY),
        .s_axi_bresp(m05_sc2axi_M_AXI_BRESP),
        .s_axi_buser(m05_sc2axi_M_AXI_BUSER),
        .s_axi_bvalid(m05_sc2axi_M_AXI_BVALID),
        .s_axi_rdata(m05_sc2axi_M_AXI_RDATA),
        .s_axi_rid(m05_sc2axi_M_AXI_RID),
        .s_axi_rlast(m05_sc2axi_M_AXI_RLAST),
        .s_axi_rready(m05_sc2axi_M_AXI_RREADY),
        .s_axi_rresp(m05_sc2axi_M_AXI_RRESP),
        .s_axi_ruser(m05_sc2axi_M_AXI_RUSER),
        .s_axi_rvalid(m05_sc2axi_M_AXI_RVALID),
        .s_axi_wdata(m05_sc2axi_M_AXI_WDATA),
        .s_axi_wlast(m05_sc2axi_M_AXI_WLAST),
        .s_axi_wready(m05_sc2axi_M_AXI_WREADY),
        .s_axi_wstrb(m05_sc2axi_M_AXI_WSTRB),
        .s_axi_wuser(m05_sc2axi_M_AXI_WUSER),
        .s_axi_wvalid(m05_sc2axi_M_AXI_WVALID));
  m05_nodes_imp_FW97QE m05_nodes
       (.M_SC_AR_info(m05_nodes_M_SC_AR_INFO),
        .M_SC_AR_payld(m05_nodes_M_SC_AR_PAYLD),
        .M_SC_AR_recv(m05_nodes_M_SC_AR_RECV),
        .M_SC_AR_req(m05_nodes_M_SC_AR_REQ),
        .M_SC_AR_send(m05_nodes_M_SC_AR_SEND),
        .M_SC_AW_info(m05_nodes_M_SC_AW_INFO),
        .M_SC_AW_payld(m05_nodes_M_SC_AW_PAYLD),
        .M_SC_AW_recv(m05_nodes_M_SC_AW_RECV),
        .M_SC_AW_req(m05_nodes_M_SC_AW_REQ),
        .M_SC_AW_send(m05_nodes_M_SC_AW_SEND),
        .M_SC_B_info(m05_nodes_M_SC_B_INFO),
        .M_SC_B_payld(m05_nodes_M_SC_B_PAYLD),
        .M_SC_B_recv(m05_nodes_M_SC_B_RECV),
        .M_SC_B_req(m05_nodes_M_SC_B_REQ),
        .M_SC_B_send(m05_nodes_M_SC_B_SEND),
        .M_SC_R_info(m05_nodes_M_SC_R_INFO),
        .M_SC_R_payld(m05_nodes_M_SC_R_PAYLD),
        .M_SC_R_recv(m05_nodes_M_SC_R_RECV),
        .M_SC_R_req(m05_nodes_M_SC_R_REQ),
        .M_SC_R_send(m05_nodes_M_SC_R_SEND),
        .M_SC_W_info(m05_nodes_M_SC_W_INFO),
        .M_SC_W_payld(m05_nodes_M_SC_W_PAYLD),
        .M_SC_W_recv(m05_nodes_M_SC_W_RECV),
        .M_SC_W_req(m05_nodes_M_SC_W_REQ),
        .M_SC_W_send(m05_nodes_M_SC_W_SEND),
        .S_SC_AR_info(S_SC_AR_7_INFO),
        .S_SC_AR_payld(S_SC_AR_7_PAYLD),
        .S_SC_AR_recv(S_SC_AR_7_RECV),
        .S_SC_AR_req(S_SC_AR_7_REQ),
        .S_SC_AR_send(S_SC_AR_7_SEND),
        .S_SC_AW_info(S_SC_AW_7_INFO),
        .S_SC_AW_payld(S_SC_AW_7_PAYLD),
        .S_SC_AW_recv(S_SC_AW_7_RECV),
        .S_SC_AW_req(S_SC_AW_7_REQ),
        .S_SC_AW_send(S_SC_AW_7_SEND),
        .S_SC_B_info(S_SC_B_7_INFO),
        .S_SC_B_payld(S_SC_B_7_PAYLD),
        .S_SC_B_recv(S_SC_B_7_RECV),
        .S_SC_B_req(S_SC_B_7_REQ),
        .S_SC_B_send(S_SC_B_7_SEND),
        .S_SC_R_info(S_SC_R_7_INFO),
        .S_SC_R_payld(S_SC_R_7_PAYLD),
        .S_SC_R_recv(S_SC_R_7_RECV),
        .S_SC_R_req(S_SC_R_7_REQ),
        .S_SC_R_send(S_SC_R_7_SEND),
        .S_SC_W_info(S_SC_W_7_INFO),
        .S_SC_W_payld(S_SC_W_7_PAYLD),
        .S_SC_W_recv(S_SC_W_7_RECV),
        .S_SC_W_req(S_SC_W_7_REQ),
        .S_SC_W_send(S_SC_W_7_SEND),
        .m_axi_aclk(clk_map_M05_ACLK),
        .m_axi_aresetn(m_axi_aresetn_5),
        .s_axi_aclk(clk_map_M00_ACLK),
        .s_axi_aresetn(clk_map_M00_ARESETN));
  bd_afc3_m05s2a_0 m05_sc2axi
       (.aclk(clk_map_M05_ACLK),
        .m_axi_araddr(m05_sc2axi_M_AXI_ARADDR),
        .m_axi_arcache(m05_sc2axi_M_AXI_ARCACHE),
        .m_axi_arid(m05_sc2axi_M_AXI_ARID),
        .m_axi_arlen(m05_sc2axi_M_AXI_ARLEN),
        .m_axi_arlock(m05_sc2axi_M_AXI_ARLOCK),
        .m_axi_arprot(m05_sc2axi_M_AXI_ARPROT),
        .m_axi_arqos(m05_sc2axi_M_AXI_ARQOS),
        .m_axi_arready(m05_sc2axi_M_AXI_ARREADY),
        .m_axi_aruser(m05_sc2axi_M_AXI_ARUSER),
        .m_axi_arvalid(m05_sc2axi_M_AXI_ARVALID),
        .m_axi_awaddr(m05_sc2axi_M_AXI_AWADDR),
        .m_axi_awcache(m05_sc2axi_M_AXI_AWCACHE),
        .m_axi_awid(m05_sc2axi_M_AXI_AWID),
        .m_axi_awlen(m05_sc2axi_M_AXI_AWLEN),
        .m_axi_awlock(m05_sc2axi_M_AXI_AWLOCK),
        .m_axi_awprot(m05_sc2axi_M_AXI_AWPROT),
        .m_axi_awqos(m05_sc2axi_M_AXI_AWQOS),
        .m_axi_awready(m05_sc2axi_M_AXI_AWREADY),
        .m_axi_awuser(m05_sc2axi_M_AXI_AWUSER),
        .m_axi_awvalid(m05_sc2axi_M_AXI_AWVALID),
        .m_axi_bid(m05_sc2axi_M_AXI_BID),
        .m_axi_bready(m05_sc2axi_M_AXI_BREADY),
        .m_axi_bresp(m05_sc2axi_M_AXI_BRESP),
        .m_axi_buser(m05_sc2axi_M_AXI_BUSER),
        .m_axi_bvalid(m05_sc2axi_M_AXI_BVALID),
        .m_axi_rdata(m05_sc2axi_M_AXI_RDATA),
        .m_axi_rid(m05_sc2axi_M_AXI_RID),
        .m_axi_rlast(m05_sc2axi_M_AXI_RLAST),
        .m_axi_rready(m05_sc2axi_M_AXI_RREADY),
        .m_axi_rresp(m05_sc2axi_M_AXI_RRESP),
        .m_axi_ruser(m05_sc2axi_M_AXI_RUSER),
        .m_axi_rvalid(m05_sc2axi_M_AXI_RVALID),
        .m_axi_wdata(m05_sc2axi_M_AXI_WDATA),
        .m_axi_wlast(m05_sc2axi_M_AXI_WLAST),
        .m_axi_wready(m05_sc2axi_M_AXI_WREADY),
        .m_axi_wstrb(m05_sc2axi_M_AXI_WSTRB),
        .m_axi_wuser(m05_sc2axi_M_AXI_WUSER),
        .m_axi_wvalid(m05_sc2axi_M_AXI_WVALID),
        .m_sc_b_info(S_SC_B_7_INFO),
        .m_sc_b_payld(S_SC_B_7_PAYLD),
        .m_sc_b_recv(S_SC_B_7_RECV),
        .m_sc_b_req(S_SC_B_7_REQ),
        .m_sc_b_send(S_SC_B_7_SEND),
        .m_sc_r_info(S_SC_R_7_INFO),
        .m_sc_r_payld(S_SC_R_7_PAYLD),
        .m_sc_r_recv(S_SC_R_7_RECV),
        .m_sc_r_req(S_SC_R_7_REQ),
        .m_sc_r_send(S_SC_R_7_SEND),
        .s_sc_ar_info(m05_nodes_M_SC_AR_INFO),
        .s_sc_ar_payld(m05_nodes_M_SC_AR_PAYLD[179:0]),
        .s_sc_ar_recv(m05_nodes_M_SC_AR_RECV),
        .s_sc_ar_req(m05_nodes_M_SC_AR_REQ),
        .s_sc_ar_send(m05_nodes_M_SC_AR_SEND),
        .s_sc_aw_info(m05_nodes_M_SC_AW_INFO),
        .s_sc_aw_payld(m05_nodes_M_SC_AW_PAYLD[179:0]),
        .s_sc_aw_recv(m05_nodes_M_SC_AW_RECV),
        .s_sc_aw_req(m05_nodes_M_SC_AW_REQ),
        .s_sc_aw_send(m05_nodes_M_SC_AW_SEND),
        .s_sc_w_info(m05_nodes_M_SC_W_INFO),
        .s_sc_w_payld(m05_nodes_M_SC_W_PAYLD[66:0]),
        .s_sc_w_recv(m05_nodes_M_SC_W_RECV),
        .s_sc_w_req(m05_nodes_M_SC_W_REQ),
        .s_sc_w_send(m05_nodes_M_SC_W_SEND));
  m06_exit_pipeline_imp_185YSO7 m06_exit_pipeline
       (.aclk(clk_map_M06_ACLK),
        .aresetn(m_axi_aresetn_6),
        .m_axi_araddr(m06_exit_pipeline_m_axi_ARADDR),
        .m_axi_arburst(m06_exit_pipeline_m_axi_ARBURST),
        .m_axi_arcache(m06_exit_pipeline_m_axi_ARCACHE),
        .m_axi_arlen(m06_exit_pipeline_m_axi_ARLEN),
        .m_axi_arlock(m06_exit_pipeline_m_axi_ARLOCK),
        .m_axi_arprot(m06_exit_pipeline_m_axi_ARPROT),
        .m_axi_arqos(m06_exit_pipeline_m_axi_ARQOS),
        .m_axi_arready(m06_exit_pipeline_m_axi_ARREADY),
        .m_axi_arsize(m06_exit_pipeline_m_axi_ARSIZE),
        .m_axi_aruser(m06_exit_pipeline_m_axi_ARUSER),
        .m_axi_arvalid(m06_exit_pipeline_m_axi_ARVALID),
        .m_axi_awaddr(m06_exit_pipeline_m_axi_AWADDR),
        .m_axi_awburst(m06_exit_pipeline_m_axi_AWBURST),
        .m_axi_awcache(m06_exit_pipeline_m_axi_AWCACHE),
        .m_axi_awlen(m06_exit_pipeline_m_axi_AWLEN),
        .m_axi_awlock(m06_exit_pipeline_m_axi_AWLOCK),
        .m_axi_awprot(m06_exit_pipeline_m_axi_AWPROT),
        .m_axi_awqos(m06_exit_pipeline_m_axi_AWQOS),
        .m_axi_awready(m06_exit_pipeline_m_axi_AWREADY),
        .m_axi_awsize(m06_exit_pipeline_m_axi_AWSIZE),
        .m_axi_awuser(m06_exit_pipeline_m_axi_AWUSER),
        .m_axi_awvalid(m06_exit_pipeline_m_axi_AWVALID),
        .m_axi_bready(m06_exit_pipeline_m_axi_BREADY),
        .m_axi_bresp(m06_exit_pipeline_m_axi_BRESP),
        .m_axi_bvalid(m06_exit_pipeline_m_axi_BVALID),
        .m_axi_rdata(m06_exit_pipeline_m_axi_RDATA),
        .m_axi_rlast(m06_exit_pipeline_m_axi_RLAST),
        .m_axi_rready(m06_exit_pipeline_m_axi_RREADY),
        .m_axi_rresp(m06_exit_pipeline_m_axi_RRESP),
        .m_axi_rvalid(m06_exit_pipeline_m_axi_RVALID),
        .m_axi_wdata(m06_exit_pipeline_m_axi_WDATA),
        .m_axi_wlast(m06_exit_pipeline_m_axi_WLAST),
        .m_axi_wready(m06_exit_pipeline_m_axi_WREADY),
        .m_axi_wstrb(m06_exit_pipeline_m_axi_WSTRB),
        .m_axi_wvalid(m06_exit_pipeline_m_axi_WVALID),
        .s_axi_araddr(m06_sc2axi_M_AXI_ARADDR),
        .s_axi_arcache(m06_sc2axi_M_AXI_ARCACHE),
        .s_axi_arid(m06_sc2axi_M_AXI_ARID),
        .s_axi_arlen(m06_sc2axi_M_AXI_ARLEN),
        .s_axi_arlock(m06_sc2axi_M_AXI_ARLOCK),
        .s_axi_arprot(m06_sc2axi_M_AXI_ARPROT),
        .s_axi_arqos(m06_sc2axi_M_AXI_ARQOS),
        .s_axi_arready(m06_sc2axi_M_AXI_ARREADY),
        .s_axi_aruser(m06_sc2axi_M_AXI_ARUSER),
        .s_axi_arvalid(m06_sc2axi_M_AXI_ARVALID),
        .s_axi_awaddr(m06_sc2axi_M_AXI_AWADDR),
        .s_axi_awcache(m06_sc2axi_M_AXI_AWCACHE),
        .s_axi_awid(m06_sc2axi_M_AXI_AWID),
        .s_axi_awlen(m06_sc2axi_M_AXI_AWLEN),
        .s_axi_awlock(m06_sc2axi_M_AXI_AWLOCK),
        .s_axi_awprot(m06_sc2axi_M_AXI_AWPROT),
        .s_axi_awqos(m06_sc2axi_M_AXI_AWQOS),
        .s_axi_awready(m06_sc2axi_M_AXI_AWREADY),
        .s_axi_awuser(m06_sc2axi_M_AXI_AWUSER),
        .s_axi_awvalid(m06_sc2axi_M_AXI_AWVALID),
        .s_axi_bid(m06_sc2axi_M_AXI_BID),
        .s_axi_bready(m06_sc2axi_M_AXI_BREADY),
        .s_axi_bresp(m06_sc2axi_M_AXI_BRESP),
        .s_axi_buser(m06_sc2axi_M_AXI_BUSER),
        .s_axi_bvalid(m06_sc2axi_M_AXI_BVALID),
        .s_axi_rdata(m06_sc2axi_M_AXI_RDATA),
        .s_axi_rid(m06_sc2axi_M_AXI_RID),
        .s_axi_rlast(m06_sc2axi_M_AXI_RLAST),
        .s_axi_rready(m06_sc2axi_M_AXI_RREADY),
        .s_axi_rresp(m06_sc2axi_M_AXI_RRESP),
        .s_axi_ruser(m06_sc2axi_M_AXI_RUSER),
        .s_axi_rvalid(m06_sc2axi_M_AXI_RVALID),
        .s_axi_wdata(m06_sc2axi_M_AXI_WDATA),
        .s_axi_wlast(m06_sc2axi_M_AXI_WLAST),
        .s_axi_wready(m06_sc2axi_M_AXI_WREADY),
        .s_axi_wstrb(m06_sc2axi_M_AXI_WSTRB),
        .s_axi_wuser(m06_sc2axi_M_AXI_WUSER),
        .s_axi_wvalid(m06_sc2axi_M_AXI_WVALID));
  m06_nodes_imp_J6WZP9 m06_nodes
       (.M_SC_AR_info(m06_nodes_M_SC_AR_INFO),
        .M_SC_AR_payld(m06_nodes_M_SC_AR_PAYLD),
        .M_SC_AR_recv(m06_nodes_M_SC_AR_RECV),
        .M_SC_AR_req(m06_nodes_M_SC_AR_REQ),
        .M_SC_AR_send(m06_nodes_M_SC_AR_SEND),
        .M_SC_AW_info(m06_nodes_M_SC_AW_INFO),
        .M_SC_AW_payld(m06_nodes_M_SC_AW_PAYLD),
        .M_SC_AW_recv(m06_nodes_M_SC_AW_RECV),
        .M_SC_AW_req(m06_nodes_M_SC_AW_REQ),
        .M_SC_AW_send(m06_nodes_M_SC_AW_SEND),
        .M_SC_B_info(m06_nodes_M_SC_B_INFO),
        .M_SC_B_payld(m06_nodes_M_SC_B_PAYLD),
        .M_SC_B_recv(m06_nodes_M_SC_B_RECV),
        .M_SC_B_req(m06_nodes_M_SC_B_REQ),
        .M_SC_B_send(m06_nodes_M_SC_B_SEND),
        .M_SC_R_info(m06_nodes_M_SC_R_INFO),
        .M_SC_R_payld(m06_nodes_M_SC_R_PAYLD),
        .M_SC_R_recv(m06_nodes_M_SC_R_RECV),
        .M_SC_R_req(m06_nodes_M_SC_R_REQ),
        .M_SC_R_send(m06_nodes_M_SC_R_SEND),
        .M_SC_W_info(m06_nodes_M_SC_W_INFO),
        .M_SC_W_payld(m06_nodes_M_SC_W_PAYLD),
        .M_SC_W_recv(m06_nodes_M_SC_W_RECV),
        .M_SC_W_req(m06_nodes_M_SC_W_REQ),
        .M_SC_W_send(m06_nodes_M_SC_W_SEND),
        .S_SC_AR_info(S_SC_AR_8_INFO),
        .S_SC_AR_payld(S_SC_AR_8_PAYLD),
        .S_SC_AR_recv(S_SC_AR_8_RECV),
        .S_SC_AR_req(S_SC_AR_8_REQ),
        .S_SC_AR_send(S_SC_AR_8_SEND),
        .S_SC_AW_info(S_SC_AW_8_INFO),
        .S_SC_AW_payld(S_SC_AW_8_PAYLD),
        .S_SC_AW_recv(S_SC_AW_8_RECV),
        .S_SC_AW_req(S_SC_AW_8_REQ),
        .S_SC_AW_send(S_SC_AW_8_SEND),
        .S_SC_B_info(S_SC_B_8_INFO),
        .S_SC_B_payld(S_SC_B_8_PAYLD),
        .S_SC_B_recv(S_SC_B_8_RECV),
        .S_SC_B_req(S_SC_B_8_REQ),
        .S_SC_B_send(S_SC_B_8_SEND),
        .S_SC_R_info(S_SC_R_8_INFO),
        .S_SC_R_payld(S_SC_R_8_PAYLD),
        .S_SC_R_recv(S_SC_R_8_RECV),
        .S_SC_R_req(S_SC_R_8_REQ),
        .S_SC_R_send(S_SC_R_8_SEND),
        .S_SC_W_info(S_SC_W_8_INFO),
        .S_SC_W_payld(S_SC_W_8_PAYLD),
        .S_SC_W_recv(S_SC_W_8_RECV),
        .S_SC_W_req(S_SC_W_8_REQ),
        .S_SC_W_send(S_SC_W_8_SEND),
        .m_axi_aclk(clk_map_M06_ACLK),
        .m_axi_aresetn(m_axi_aresetn_6),
        .s_axi_aclk(clk_map_M00_ACLK),
        .s_axi_aresetn(clk_map_M00_ARESETN));
  bd_afc3_m06s2a_0 m06_sc2axi
       (.aclk(clk_map_M06_ACLK),
        .m_axi_araddr(m06_sc2axi_M_AXI_ARADDR),
        .m_axi_arcache(m06_sc2axi_M_AXI_ARCACHE),
        .m_axi_arid(m06_sc2axi_M_AXI_ARID),
        .m_axi_arlen(m06_sc2axi_M_AXI_ARLEN),
        .m_axi_arlock(m06_sc2axi_M_AXI_ARLOCK),
        .m_axi_arprot(m06_sc2axi_M_AXI_ARPROT),
        .m_axi_arqos(m06_sc2axi_M_AXI_ARQOS),
        .m_axi_arready(m06_sc2axi_M_AXI_ARREADY),
        .m_axi_aruser(m06_sc2axi_M_AXI_ARUSER),
        .m_axi_arvalid(m06_sc2axi_M_AXI_ARVALID),
        .m_axi_awaddr(m06_sc2axi_M_AXI_AWADDR),
        .m_axi_awcache(m06_sc2axi_M_AXI_AWCACHE),
        .m_axi_awid(m06_sc2axi_M_AXI_AWID),
        .m_axi_awlen(m06_sc2axi_M_AXI_AWLEN),
        .m_axi_awlock(m06_sc2axi_M_AXI_AWLOCK),
        .m_axi_awprot(m06_sc2axi_M_AXI_AWPROT),
        .m_axi_awqos(m06_sc2axi_M_AXI_AWQOS),
        .m_axi_awready(m06_sc2axi_M_AXI_AWREADY),
        .m_axi_awuser(m06_sc2axi_M_AXI_AWUSER),
        .m_axi_awvalid(m06_sc2axi_M_AXI_AWVALID),
        .m_axi_bid(m06_sc2axi_M_AXI_BID),
        .m_axi_bready(m06_sc2axi_M_AXI_BREADY),
        .m_axi_bresp(m06_sc2axi_M_AXI_BRESP),
        .m_axi_buser(m06_sc2axi_M_AXI_BUSER),
        .m_axi_bvalid(m06_sc2axi_M_AXI_BVALID),
        .m_axi_rdata(m06_sc2axi_M_AXI_RDATA),
        .m_axi_rid(m06_sc2axi_M_AXI_RID),
        .m_axi_rlast(m06_sc2axi_M_AXI_RLAST),
        .m_axi_rready(m06_sc2axi_M_AXI_RREADY),
        .m_axi_rresp(m06_sc2axi_M_AXI_RRESP),
        .m_axi_ruser(m06_sc2axi_M_AXI_RUSER),
        .m_axi_rvalid(m06_sc2axi_M_AXI_RVALID),
        .m_axi_wdata(m06_sc2axi_M_AXI_WDATA),
        .m_axi_wlast(m06_sc2axi_M_AXI_WLAST),
        .m_axi_wready(m06_sc2axi_M_AXI_WREADY),
        .m_axi_wstrb(m06_sc2axi_M_AXI_WSTRB),
        .m_axi_wuser(m06_sc2axi_M_AXI_WUSER),
        .m_axi_wvalid(m06_sc2axi_M_AXI_WVALID),
        .m_sc_b_info(S_SC_B_8_INFO),
        .m_sc_b_payld(S_SC_B_8_PAYLD),
        .m_sc_b_recv(S_SC_B_8_RECV),
        .m_sc_b_req(S_SC_B_8_REQ),
        .m_sc_b_send(S_SC_B_8_SEND),
        .m_sc_r_info(S_SC_R_8_INFO),
        .m_sc_r_payld(S_SC_R_8_PAYLD),
        .m_sc_r_recv(S_SC_R_8_RECV),
        .m_sc_r_req(S_SC_R_8_REQ),
        .m_sc_r_send(S_SC_R_8_SEND),
        .s_sc_ar_info(m06_nodes_M_SC_AR_INFO),
        .s_sc_ar_payld(m06_nodes_M_SC_AR_PAYLD[179:0]),
        .s_sc_ar_recv(m06_nodes_M_SC_AR_RECV),
        .s_sc_ar_req(m06_nodes_M_SC_AR_REQ),
        .s_sc_ar_send(m06_nodes_M_SC_AR_SEND),
        .s_sc_aw_info(m06_nodes_M_SC_AW_INFO),
        .s_sc_aw_payld(m06_nodes_M_SC_AW_PAYLD[179:0]),
        .s_sc_aw_recv(m06_nodes_M_SC_AW_RECV),
        .s_sc_aw_req(m06_nodes_M_SC_AW_REQ),
        .s_sc_aw_send(m06_nodes_M_SC_AW_SEND),
        .s_sc_w_info(m06_nodes_M_SC_W_INFO),
        .s_sc_w_payld(m06_nodes_M_SC_W_PAYLD[66:0]),
        .s_sc_w_recv(m06_nodes_M_SC_W_RECV),
        .s_sc_w_req(m06_nodes_M_SC_W_REQ),
        .s_sc_w_send(m06_nodes_M_SC_W_SEND));
  m07_exit_pipeline_imp_11QOHUV m07_exit_pipeline
       (.aclk(clk_map_M07_ACLK),
        .aresetn(m_axi_aresetn_7),
        .m_axi_araddr(m07_exit_pipeline_m_axi_ARADDR),
        .m_axi_arburst(m07_exit_pipeline_m_axi_ARBURST),
        .m_axi_arcache(m07_exit_pipeline_m_axi_ARCACHE),
        .m_axi_arlen(m07_exit_pipeline_m_axi_ARLEN),
        .m_axi_arlock(m07_exit_pipeline_m_axi_ARLOCK),
        .m_axi_arprot(m07_exit_pipeline_m_axi_ARPROT),
        .m_axi_arqos(m07_exit_pipeline_m_axi_ARQOS),
        .m_axi_arready(m07_exit_pipeline_m_axi_ARREADY),
        .m_axi_arsize(m07_exit_pipeline_m_axi_ARSIZE),
        .m_axi_aruser(m07_exit_pipeline_m_axi_ARUSER),
        .m_axi_arvalid(m07_exit_pipeline_m_axi_ARVALID),
        .m_axi_awaddr(m07_exit_pipeline_m_axi_AWADDR),
        .m_axi_awburst(m07_exit_pipeline_m_axi_AWBURST),
        .m_axi_awcache(m07_exit_pipeline_m_axi_AWCACHE),
        .m_axi_awlen(m07_exit_pipeline_m_axi_AWLEN),
        .m_axi_awlock(m07_exit_pipeline_m_axi_AWLOCK),
        .m_axi_awprot(m07_exit_pipeline_m_axi_AWPROT),
        .m_axi_awqos(m07_exit_pipeline_m_axi_AWQOS),
        .m_axi_awready(m07_exit_pipeline_m_axi_AWREADY),
        .m_axi_awsize(m07_exit_pipeline_m_axi_AWSIZE),
        .m_axi_awuser(m07_exit_pipeline_m_axi_AWUSER),
        .m_axi_awvalid(m07_exit_pipeline_m_axi_AWVALID),
        .m_axi_bready(m07_exit_pipeline_m_axi_BREADY),
        .m_axi_bresp(m07_exit_pipeline_m_axi_BRESP),
        .m_axi_bvalid(m07_exit_pipeline_m_axi_BVALID),
        .m_axi_rdata(m07_exit_pipeline_m_axi_RDATA),
        .m_axi_rlast(m07_exit_pipeline_m_axi_RLAST),
        .m_axi_rready(m07_exit_pipeline_m_axi_RREADY),
        .m_axi_rresp(m07_exit_pipeline_m_axi_RRESP),
        .m_axi_rvalid(m07_exit_pipeline_m_axi_RVALID),
        .m_axi_wdata(m07_exit_pipeline_m_axi_WDATA),
        .m_axi_wlast(m07_exit_pipeline_m_axi_WLAST),
        .m_axi_wready(m07_exit_pipeline_m_axi_WREADY),
        .m_axi_wstrb(m07_exit_pipeline_m_axi_WSTRB),
        .m_axi_wvalid(m07_exit_pipeline_m_axi_WVALID),
        .s_axi_araddr(m07_sc2axi_M_AXI_ARADDR),
        .s_axi_arcache(m07_sc2axi_M_AXI_ARCACHE),
        .s_axi_arid(m07_sc2axi_M_AXI_ARID),
        .s_axi_arlen(m07_sc2axi_M_AXI_ARLEN),
        .s_axi_arlock(m07_sc2axi_M_AXI_ARLOCK),
        .s_axi_arprot(m07_sc2axi_M_AXI_ARPROT),
        .s_axi_arqos(m07_sc2axi_M_AXI_ARQOS),
        .s_axi_arready(m07_sc2axi_M_AXI_ARREADY),
        .s_axi_aruser(m07_sc2axi_M_AXI_ARUSER),
        .s_axi_arvalid(m07_sc2axi_M_AXI_ARVALID),
        .s_axi_awaddr(m07_sc2axi_M_AXI_AWADDR),
        .s_axi_awcache(m07_sc2axi_M_AXI_AWCACHE),
        .s_axi_awid(m07_sc2axi_M_AXI_AWID),
        .s_axi_awlen(m07_sc2axi_M_AXI_AWLEN),
        .s_axi_awlock(m07_sc2axi_M_AXI_AWLOCK),
        .s_axi_awprot(m07_sc2axi_M_AXI_AWPROT),
        .s_axi_awqos(m07_sc2axi_M_AXI_AWQOS),
        .s_axi_awready(m07_sc2axi_M_AXI_AWREADY),
        .s_axi_awuser(m07_sc2axi_M_AXI_AWUSER),
        .s_axi_awvalid(m07_sc2axi_M_AXI_AWVALID),
        .s_axi_bid(m07_sc2axi_M_AXI_BID),
        .s_axi_bready(m07_sc2axi_M_AXI_BREADY),
        .s_axi_bresp(m07_sc2axi_M_AXI_BRESP),
        .s_axi_buser(m07_sc2axi_M_AXI_BUSER),
        .s_axi_bvalid(m07_sc2axi_M_AXI_BVALID),
        .s_axi_rdata(m07_sc2axi_M_AXI_RDATA),
        .s_axi_rid(m07_sc2axi_M_AXI_RID),
        .s_axi_rlast(m07_sc2axi_M_AXI_RLAST),
        .s_axi_rready(m07_sc2axi_M_AXI_RREADY),
        .s_axi_rresp(m07_sc2axi_M_AXI_RRESP),
        .s_axi_ruser(m07_sc2axi_M_AXI_RUSER),
        .s_axi_rvalid(m07_sc2axi_M_AXI_RVALID),
        .s_axi_wdata(m07_sc2axi_M_AXI_WDATA),
        .s_axi_wlast(m07_sc2axi_M_AXI_WLAST),
        .s_axi_wready(m07_sc2axi_M_AXI_WREADY),
        .s_axi_wstrb(m07_sc2axi_M_AXI_WSTRB),
        .s_axi_wuser(m07_sc2axi_M_AXI_WUSER),
        .s_axi_wvalid(m07_sc2axi_M_AXI_WVALID));
  m07_nodes_imp_1NYZNIJ m07_nodes
       (.M_SC_AR_info(m07_nodes_M_SC_AR_INFO),
        .M_SC_AR_payld(m07_nodes_M_SC_AR_PAYLD),
        .M_SC_AR_recv(m07_nodes_M_SC_AR_RECV),
        .M_SC_AR_req(m07_nodes_M_SC_AR_REQ),
        .M_SC_AR_send(m07_nodes_M_SC_AR_SEND),
        .M_SC_AW_info(m07_nodes_M_SC_AW_INFO),
        .M_SC_AW_payld(m07_nodes_M_SC_AW_PAYLD),
        .M_SC_AW_recv(m07_nodes_M_SC_AW_RECV),
        .M_SC_AW_req(m07_nodes_M_SC_AW_REQ),
        .M_SC_AW_send(m07_nodes_M_SC_AW_SEND),
        .M_SC_B_info(m07_nodes_M_SC_B_INFO),
        .M_SC_B_payld(m07_nodes_M_SC_B_PAYLD),
        .M_SC_B_recv(m07_nodes_M_SC_B_RECV),
        .M_SC_B_req(m07_nodes_M_SC_B_REQ),
        .M_SC_B_send(m07_nodes_M_SC_B_SEND),
        .M_SC_R_info(m07_nodes_M_SC_R_INFO),
        .M_SC_R_payld(m07_nodes_M_SC_R_PAYLD),
        .M_SC_R_recv(m07_nodes_M_SC_R_RECV),
        .M_SC_R_req(m07_nodes_M_SC_R_REQ),
        .M_SC_R_send(m07_nodes_M_SC_R_SEND),
        .M_SC_W_info(m07_nodes_M_SC_W_INFO),
        .M_SC_W_payld(m07_nodes_M_SC_W_PAYLD),
        .M_SC_W_recv(m07_nodes_M_SC_W_RECV),
        .M_SC_W_req(m07_nodes_M_SC_W_REQ),
        .M_SC_W_send(m07_nodes_M_SC_W_SEND),
        .S_SC_AR_info(S_SC_AR_9_INFO),
        .S_SC_AR_payld(S_SC_AR_9_PAYLD),
        .S_SC_AR_recv(S_SC_AR_9_RECV),
        .S_SC_AR_req(S_SC_AR_9_REQ),
        .S_SC_AR_send(S_SC_AR_9_SEND),
        .S_SC_AW_info(S_SC_AW_9_INFO),
        .S_SC_AW_payld(S_SC_AW_9_PAYLD),
        .S_SC_AW_recv(S_SC_AW_9_RECV),
        .S_SC_AW_req(S_SC_AW_9_REQ),
        .S_SC_AW_send(S_SC_AW_9_SEND),
        .S_SC_B_info(S_SC_B_9_INFO),
        .S_SC_B_payld(S_SC_B_9_PAYLD),
        .S_SC_B_recv(S_SC_B_9_RECV),
        .S_SC_B_req(S_SC_B_9_REQ),
        .S_SC_B_send(S_SC_B_9_SEND),
        .S_SC_R_info(S_SC_R_9_INFO),
        .S_SC_R_payld(S_SC_R_9_PAYLD),
        .S_SC_R_recv(S_SC_R_9_RECV),
        .S_SC_R_req(S_SC_R_9_REQ),
        .S_SC_R_send(S_SC_R_9_SEND),
        .S_SC_W_info(S_SC_W_9_INFO),
        .S_SC_W_payld(S_SC_W_9_PAYLD),
        .S_SC_W_recv(S_SC_W_9_RECV),
        .S_SC_W_req(S_SC_W_9_REQ),
        .S_SC_W_send(S_SC_W_9_SEND),
        .m_axi_aclk(clk_map_M07_ACLK),
        .m_axi_aresetn(m_axi_aresetn_7),
        .s_axi_aclk(clk_map_M00_ACLK),
        .s_axi_aresetn(clk_map_M00_ARESETN));
  bd_afc3_m07s2a_0 m07_sc2axi
       (.aclk(clk_map_M07_ACLK),
        .m_axi_araddr(m07_sc2axi_M_AXI_ARADDR),
        .m_axi_arcache(m07_sc2axi_M_AXI_ARCACHE),
        .m_axi_arid(m07_sc2axi_M_AXI_ARID),
        .m_axi_arlen(m07_sc2axi_M_AXI_ARLEN),
        .m_axi_arlock(m07_sc2axi_M_AXI_ARLOCK),
        .m_axi_arprot(m07_sc2axi_M_AXI_ARPROT),
        .m_axi_arqos(m07_sc2axi_M_AXI_ARQOS),
        .m_axi_arready(m07_sc2axi_M_AXI_ARREADY),
        .m_axi_aruser(m07_sc2axi_M_AXI_ARUSER),
        .m_axi_arvalid(m07_sc2axi_M_AXI_ARVALID),
        .m_axi_awaddr(m07_sc2axi_M_AXI_AWADDR),
        .m_axi_awcache(m07_sc2axi_M_AXI_AWCACHE),
        .m_axi_awid(m07_sc2axi_M_AXI_AWID),
        .m_axi_awlen(m07_sc2axi_M_AXI_AWLEN),
        .m_axi_awlock(m07_sc2axi_M_AXI_AWLOCK),
        .m_axi_awprot(m07_sc2axi_M_AXI_AWPROT),
        .m_axi_awqos(m07_sc2axi_M_AXI_AWQOS),
        .m_axi_awready(m07_sc2axi_M_AXI_AWREADY),
        .m_axi_awuser(m07_sc2axi_M_AXI_AWUSER),
        .m_axi_awvalid(m07_sc2axi_M_AXI_AWVALID),
        .m_axi_bid(m07_sc2axi_M_AXI_BID),
        .m_axi_bready(m07_sc2axi_M_AXI_BREADY),
        .m_axi_bresp(m07_sc2axi_M_AXI_BRESP),
        .m_axi_buser(m07_sc2axi_M_AXI_BUSER),
        .m_axi_bvalid(m07_sc2axi_M_AXI_BVALID),
        .m_axi_rdata(m07_sc2axi_M_AXI_RDATA),
        .m_axi_rid(m07_sc2axi_M_AXI_RID),
        .m_axi_rlast(m07_sc2axi_M_AXI_RLAST),
        .m_axi_rready(m07_sc2axi_M_AXI_RREADY),
        .m_axi_rresp(m07_sc2axi_M_AXI_RRESP),
        .m_axi_ruser(m07_sc2axi_M_AXI_RUSER),
        .m_axi_rvalid(m07_sc2axi_M_AXI_RVALID),
        .m_axi_wdata(m07_sc2axi_M_AXI_WDATA),
        .m_axi_wlast(m07_sc2axi_M_AXI_WLAST),
        .m_axi_wready(m07_sc2axi_M_AXI_WREADY),
        .m_axi_wstrb(m07_sc2axi_M_AXI_WSTRB),
        .m_axi_wuser(m07_sc2axi_M_AXI_WUSER),
        .m_axi_wvalid(m07_sc2axi_M_AXI_WVALID),
        .m_sc_b_info(S_SC_B_9_INFO),
        .m_sc_b_payld(S_SC_B_9_PAYLD),
        .m_sc_b_recv(S_SC_B_9_RECV),
        .m_sc_b_req(S_SC_B_9_REQ),
        .m_sc_b_send(S_SC_B_9_SEND),
        .m_sc_r_info(S_SC_R_9_INFO),
        .m_sc_r_payld(S_SC_R_9_PAYLD),
        .m_sc_r_recv(S_SC_R_9_RECV),
        .m_sc_r_req(S_SC_R_9_REQ),
        .m_sc_r_send(S_SC_R_9_SEND),
        .s_sc_ar_info(m07_nodes_M_SC_AR_INFO),
        .s_sc_ar_payld(m07_nodes_M_SC_AR_PAYLD[179:0]),
        .s_sc_ar_recv(m07_nodes_M_SC_AR_RECV),
        .s_sc_ar_req(m07_nodes_M_SC_AR_REQ),
        .s_sc_ar_send(m07_nodes_M_SC_AR_SEND),
        .s_sc_aw_info(m07_nodes_M_SC_AW_INFO),
        .s_sc_aw_payld(m07_nodes_M_SC_AW_PAYLD[179:0]),
        .s_sc_aw_recv(m07_nodes_M_SC_AW_RECV),
        .s_sc_aw_req(m07_nodes_M_SC_AW_REQ),
        .s_sc_aw_send(m07_nodes_M_SC_AW_SEND),
        .s_sc_w_info(m07_nodes_M_SC_W_INFO),
        .s_sc_w_payld(m07_nodes_M_SC_W_PAYLD[66:0]),
        .s_sc_w_recv(m07_nodes_M_SC_W_RECV),
        .s_sc_w_req(m07_nodes_M_SC_W_REQ),
        .s_sc_w_send(m07_nodes_M_SC_W_SEND));
  m08_exit_pipeline_imp_NH9SMF m08_exit_pipeline
       (.aclk(clk_map_M08_ACLK),
        .aresetn(m_axi_aresetn_8),
        .m_axi_araddr(m08_exit_pipeline_m_axi_ARADDR),
        .m_axi_arburst(m08_exit_pipeline_m_axi_ARBURST),
        .m_axi_arcache(m08_exit_pipeline_m_axi_ARCACHE),
        .m_axi_arlen(m08_exit_pipeline_m_axi_ARLEN),
        .m_axi_arlock(m08_exit_pipeline_m_axi_ARLOCK),
        .m_axi_arprot(m08_exit_pipeline_m_axi_ARPROT),
        .m_axi_arqos(m08_exit_pipeline_m_axi_ARQOS),
        .m_axi_arready(m08_exit_pipeline_m_axi_ARREADY),
        .m_axi_arsize(m08_exit_pipeline_m_axi_ARSIZE),
        .m_axi_aruser(m08_exit_pipeline_m_axi_ARUSER),
        .m_axi_arvalid(m08_exit_pipeline_m_axi_ARVALID),
        .m_axi_awaddr(m08_exit_pipeline_m_axi_AWADDR),
        .m_axi_awburst(m08_exit_pipeline_m_axi_AWBURST),
        .m_axi_awcache(m08_exit_pipeline_m_axi_AWCACHE),
        .m_axi_awlen(m08_exit_pipeline_m_axi_AWLEN),
        .m_axi_awlock(m08_exit_pipeline_m_axi_AWLOCK),
        .m_axi_awprot(m08_exit_pipeline_m_axi_AWPROT),
        .m_axi_awqos(m08_exit_pipeline_m_axi_AWQOS),
        .m_axi_awready(m08_exit_pipeline_m_axi_AWREADY),
        .m_axi_awsize(m08_exit_pipeline_m_axi_AWSIZE),
        .m_axi_awuser(m08_exit_pipeline_m_axi_AWUSER),
        .m_axi_awvalid(m08_exit_pipeline_m_axi_AWVALID),
        .m_axi_bready(m08_exit_pipeline_m_axi_BREADY),
        .m_axi_bresp(m08_exit_pipeline_m_axi_BRESP),
        .m_axi_bvalid(m08_exit_pipeline_m_axi_BVALID),
        .m_axi_rdata(m08_exit_pipeline_m_axi_RDATA),
        .m_axi_rlast(m08_exit_pipeline_m_axi_RLAST),
        .m_axi_rready(m08_exit_pipeline_m_axi_RREADY),
        .m_axi_rresp(m08_exit_pipeline_m_axi_RRESP),
        .m_axi_rvalid(m08_exit_pipeline_m_axi_RVALID),
        .m_axi_wdata(m08_exit_pipeline_m_axi_WDATA),
        .m_axi_wlast(m08_exit_pipeline_m_axi_WLAST),
        .m_axi_wready(m08_exit_pipeline_m_axi_WREADY),
        .m_axi_wstrb(m08_exit_pipeline_m_axi_WSTRB),
        .m_axi_wvalid(m08_exit_pipeline_m_axi_WVALID),
        .s_axi_araddr(m08_sc2axi_M_AXI_ARADDR),
        .s_axi_arcache(m08_sc2axi_M_AXI_ARCACHE),
        .s_axi_arid(m08_sc2axi_M_AXI_ARID),
        .s_axi_arlen(m08_sc2axi_M_AXI_ARLEN),
        .s_axi_arlock(m08_sc2axi_M_AXI_ARLOCK),
        .s_axi_arprot(m08_sc2axi_M_AXI_ARPROT),
        .s_axi_arqos(m08_sc2axi_M_AXI_ARQOS),
        .s_axi_arready(m08_sc2axi_M_AXI_ARREADY),
        .s_axi_aruser(m08_sc2axi_M_AXI_ARUSER),
        .s_axi_arvalid(m08_sc2axi_M_AXI_ARVALID),
        .s_axi_awaddr(m08_sc2axi_M_AXI_AWADDR),
        .s_axi_awcache(m08_sc2axi_M_AXI_AWCACHE),
        .s_axi_awid(m08_sc2axi_M_AXI_AWID),
        .s_axi_awlen(m08_sc2axi_M_AXI_AWLEN),
        .s_axi_awlock(m08_sc2axi_M_AXI_AWLOCK),
        .s_axi_awprot(m08_sc2axi_M_AXI_AWPROT),
        .s_axi_awqos(m08_sc2axi_M_AXI_AWQOS),
        .s_axi_awready(m08_sc2axi_M_AXI_AWREADY),
        .s_axi_awuser(m08_sc2axi_M_AXI_AWUSER),
        .s_axi_awvalid(m08_sc2axi_M_AXI_AWVALID),
        .s_axi_bid(m08_sc2axi_M_AXI_BID),
        .s_axi_bready(m08_sc2axi_M_AXI_BREADY),
        .s_axi_bresp(m08_sc2axi_M_AXI_BRESP),
        .s_axi_buser(m08_sc2axi_M_AXI_BUSER),
        .s_axi_bvalid(m08_sc2axi_M_AXI_BVALID),
        .s_axi_rdata(m08_sc2axi_M_AXI_RDATA),
        .s_axi_rid(m08_sc2axi_M_AXI_RID),
        .s_axi_rlast(m08_sc2axi_M_AXI_RLAST),
        .s_axi_rready(m08_sc2axi_M_AXI_RREADY),
        .s_axi_rresp(m08_sc2axi_M_AXI_RRESP),
        .s_axi_ruser(m08_sc2axi_M_AXI_RUSER),
        .s_axi_rvalid(m08_sc2axi_M_AXI_RVALID),
        .s_axi_wdata(m08_sc2axi_M_AXI_WDATA),
        .s_axi_wlast(m08_sc2axi_M_AXI_WLAST),
        .s_axi_wready(m08_sc2axi_M_AXI_WREADY),
        .s_axi_wstrb(m08_sc2axi_M_AXI_WSTRB),
        .s_axi_wuser(m08_sc2axi_M_AXI_WUSER),
        .s_axi_wvalid(m08_sc2axi_M_AXI_WVALID));
  m08_nodes_imp_13L9VZX m08_nodes
       (.M_SC_AR_info(m08_nodes_M_SC_AR_INFO),
        .M_SC_AR_payld(m08_nodes_M_SC_AR_PAYLD),
        .M_SC_AR_recv(m08_nodes_M_SC_AR_RECV),
        .M_SC_AR_req(m08_nodes_M_SC_AR_REQ),
        .M_SC_AR_send(m08_nodes_M_SC_AR_SEND),
        .M_SC_AW_info(m08_nodes_M_SC_AW_INFO),
        .M_SC_AW_payld(m08_nodes_M_SC_AW_PAYLD),
        .M_SC_AW_recv(m08_nodes_M_SC_AW_RECV),
        .M_SC_AW_req(m08_nodes_M_SC_AW_REQ),
        .M_SC_AW_send(m08_nodes_M_SC_AW_SEND),
        .M_SC_B_info(m08_nodes_M_SC_B_INFO),
        .M_SC_B_payld(m08_nodes_M_SC_B_PAYLD),
        .M_SC_B_recv(m08_nodes_M_SC_B_RECV),
        .M_SC_B_req(m08_nodes_M_SC_B_REQ),
        .M_SC_B_send(m08_nodes_M_SC_B_SEND),
        .M_SC_R_info(m08_nodes_M_SC_R_INFO),
        .M_SC_R_payld(m08_nodes_M_SC_R_PAYLD),
        .M_SC_R_recv(m08_nodes_M_SC_R_RECV),
        .M_SC_R_req(m08_nodes_M_SC_R_REQ),
        .M_SC_R_send(m08_nodes_M_SC_R_SEND),
        .M_SC_W_info(m08_nodes_M_SC_W_INFO),
        .M_SC_W_payld(m08_nodes_M_SC_W_PAYLD),
        .M_SC_W_recv(m08_nodes_M_SC_W_RECV),
        .M_SC_W_req(m08_nodes_M_SC_W_REQ),
        .M_SC_W_send(m08_nodes_M_SC_W_SEND),
        .S_SC_AR_info(S_SC_AR_10_INFO),
        .S_SC_AR_payld(S_SC_AR_10_PAYLD),
        .S_SC_AR_recv(S_SC_AR_10_RECV),
        .S_SC_AR_req(S_SC_AR_10_REQ),
        .S_SC_AR_send(S_SC_AR_10_SEND),
        .S_SC_AW_info(S_SC_AW_10_INFO),
        .S_SC_AW_payld(S_SC_AW_10_PAYLD),
        .S_SC_AW_recv(S_SC_AW_10_RECV),
        .S_SC_AW_req(S_SC_AW_10_REQ),
        .S_SC_AW_send(S_SC_AW_10_SEND),
        .S_SC_B_info(S_SC_B_10_INFO),
        .S_SC_B_payld(S_SC_B_10_PAYLD),
        .S_SC_B_recv(S_SC_B_10_RECV),
        .S_SC_B_req(S_SC_B_10_REQ),
        .S_SC_B_send(S_SC_B_10_SEND),
        .S_SC_R_info(S_SC_R_10_INFO),
        .S_SC_R_payld(S_SC_R_10_PAYLD),
        .S_SC_R_recv(S_SC_R_10_RECV),
        .S_SC_R_req(S_SC_R_10_REQ),
        .S_SC_R_send(S_SC_R_10_SEND),
        .S_SC_W_info(S_SC_W_10_INFO),
        .S_SC_W_payld(S_SC_W_10_PAYLD),
        .S_SC_W_recv(S_SC_W_10_RECV),
        .S_SC_W_req(S_SC_W_10_REQ),
        .S_SC_W_send(S_SC_W_10_SEND),
        .m_axi_aclk(clk_map_M08_ACLK),
        .m_axi_aresetn(m_axi_aresetn_8),
        .s_axi_aclk(clk_map_M00_ACLK),
        .s_axi_aresetn(clk_map_M00_ARESETN));
  bd_afc3_m08s2a_0 m08_sc2axi
       (.aclk(clk_map_M08_ACLK),
        .m_axi_araddr(m08_sc2axi_M_AXI_ARADDR),
        .m_axi_arcache(m08_sc2axi_M_AXI_ARCACHE),
        .m_axi_arid(m08_sc2axi_M_AXI_ARID),
        .m_axi_arlen(m08_sc2axi_M_AXI_ARLEN),
        .m_axi_arlock(m08_sc2axi_M_AXI_ARLOCK),
        .m_axi_arprot(m08_sc2axi_M_AXI_ARPROT),
        .m_axi_arqos(m08_sc2axi_M_AXI_ARQOS),
        .m_axi_arready(m08_sc2axi_M_AXI_ARREADY),
        .m_axi_aruser(m08_sc2axi_M_AXI_ARUSER),
        .m_axi_arvalid(m08_sc2axi_M_AXI_ARVALID),
        .m_axi_awaddr(m08_sc2axi_M_AXI_AWADDR),
        .m_axi_awcache(m08_sc2axi_M_AXI_AWCACHE),
        .m_axi_awid(m08_sc2axi_M_AXI_AWID),
        .m_axi_awlen(m08_sc2axi_M_AXI_AWLEN),
        .m_axi_awlock(m08_sc2axi_M_AXI_AWLOCK),
        .m_axi_awprot(m08_sc2axi_M_AXI_AWPROT),
        .m_axi_awqos(m08_sc2axi_M_AXI_AWQOS),
        .m_axi_awready(m08_sc2axi_M_AXI_AWREADY),
        .m_axi_awuser(m08_sc2axi_M_AXI_AWUSER),
        .m_axi_awvalid(m08_sc2axi_M_AXI_AWVALID),
        .m_axi_bid(m08_sc2axi_M_AXI_BID),
        .m_axi_bready(m08_sc2axi_M_AXI_BREADY),
        .m_axi_bresp(m08_sc2axi_M_AXI_BRESP),
        .m_axi_buser(m08_sc2axi_M_AXI_BUSER),
        .m_axi_bvalid(m08_sc2axi_M_AXI_BVALID),
        .m_axi_rdata(m08_sc2axi_M_AXI_RDATA),
        .m_axi_rid(m08_sc2axi_M_AXI_RID),
        .m_axi_rlast(m08_sc2axi_M_AXI_RLAST),
        .m_axi_rready(m08_sc2axi_M_AXI_RREADY),
        .m_axi_rresp(m08_sc2axi_M_AXI_RRESP),
        .m_axi_ruser(m08_sc2axi_M_AXI_RUSER),
        .m_axi_rvalid(m08_sc2axi_M_AXI_RVALID),
        .m_axi_wdata(m08_sc2axi_M_AXI_WDATA),
        .m_axi_wlast(m08_sc2axi_M_AXI_WLAST),
        .m_axi_wready(m08_sc2axi_M_AXI_WREADY),
        .m_axi_wstrb(m08_sc2axi_M_AXI_WSTRB),
        .m_axi_wuser(m08_sc2axi_M_AXI_WUSER),
        .m_axi_wvalid(m08_sc2axi_M_AXI_WVALID),
        .m_sc_b_info(S_SC_B_10_INFO),
        .m_sc_b_payld(S_SC_B_10_PAYLD),
        .m_sc_b_recv(S_SC_B_10_RECV),
        .m_sc_b_req(S_SC_B_10_REQ),
        .m_sc_b_send(S_SC_B_10_SEND),
        .m_sc_r_info(S_SC_R_10_INFO),
        .m_sc_r_payld(S_SC_R_10_PAYLD),
        .m_sc_r_recv(S_SC_R_10_RECV),
        .m_sc_r_req(S_SC_R_10_REQ),
        .m_sc_r_send(S_SC_R_10_SEND),
        .s_sc_ar_info(m08_nodes_M_SC_AR_INFO),
        .s_sc_ar_payld(m08_nodes_M_SC_AR_PAYLD[179:0]),
        .s_sc_ar_recv(m08_nodes_M_SC_AR_RECV),
        .s_sc_ar_req(m08_nodes_M_SC_AR_REQ),
        .s_sc_ar_send(m08_nodes_M_SC_AR_SEND),
        .s_sc_aw_info(m08_nodes_M_SC_AW_INFO),
        .s_sc_aw_payld(m08_nodes_M_SC_AW_PAYLD[179:0]),
        .s_sc_aw_recv(m08_nodes_M_SC_AW_RECV),
        .s_sc_aw_req(m08_nodes_M_SC_AW_REQ),
        .s_sc_aw_send(m08_nodes_M_SC_AW_SEND),
        .s_sc_w_info(m08_nodes_M_SC_W_INFO),
        .s_sc_w_payld(m08_nodes_M_SC_W_PAYLD[66:0]),
        .s_sc_w_recv(m08_nodes_M_SC_W_RECV),
        .s_sc_w_req(m08_nodes_M_SC_W_REQ),
        .s_sc_w_send(m08_nodes_M_SC_W_SEND));
  m09_exit_pipeline_imp_ISDV53 m09_exit_pipeline
       (.aclk(clk_map_M09_ACLK),
        .aresetn(m_axi_aresetn_9),
        .m_axi_araddr(m09_exit_pipeline_m_axi_ARADDR),
        .m_axi_arburst(m09_exit_pipeline_m_axi_ARBURST),
        .m_axi_arcache(m09_exit_pipeline_m_axi_ARCACHE),
        .m_axi_arlen(m09_exit_pipeline_m_axi_ARLEN),
        .m_axi_arlock(m09_exit_pipeline_m_axi_ARLOCK),
        .m_axi_arprot(m09_exit_pipeline_m_axi_ARPROT),
        .m_axi_arqos(m09_exit_pipeline_m_axi_ARQOS),
        .m_axi_arready(m09_exit_pipeline_m_axi_ARREADY),
        .m_axi_arsize(m09_exit_pipeline_m_axi_ARSIZE),
        .m_axi_aruser(m09_exit_pipeline_m_axi_ARUSER),
        .m_axi_arvalid(m09_exit_pipeline_m_axi_ARVALID),
        .m_axi_awaddr(m09_exit_pipeline_m_axi_AWADDR),
        .m_axi_awburst(m09_exit_pipeline_m_axi_AWBURST),
        .m_axi_awcache(m09_exit_pipeline_m_axi_AWCACHE),
        .m_axi_awlen(m09_exit_pipeline_m_axi_AWLEN),
        .m_axi_awlock(m09_exit_pipeline_m_axi_AWLOCK),
        .m_axi_awprot(m09_exit_pipeline_m_axi_AWPROT),
        .m_axi_awqos(m09_exit_pipeline_m_axi_AWQOS),
        .m_axi_awready(m09_exit_pipeline_m_axi_AWREADY),
        .m_axi_awsize(m09_exit_pipeline_m_axi_AWSIZE),
        .m_axi_awuser(m09_exit_pipeline_m_axi_AWUSER),
        .m_axi_awvalid(m09_exit_pipeline_m_axi_AWVALID),
        .m_axi_bready(m09_exit_pipeline_m_axi_BREADY),
        .m_axi_bresp(m09_exit_pipeline_m_axi_BRESP),
        .m_axi_bvalid(m09_exit_pipeline_m_axi_BVALID),
        .m_axi_rdata(m09_exit_pipeline_m_axi_RDATA),
        .m_axi_rlast(m09_exit_pipeline_m_axi_RLAST),
        .m_axi_rready(m09_exit_pipeline_m_axi_RREADY),
        .m_axi_rresp(m09_exit_pipeline_m_axi_RRESP),
        .m_axi_rvalid(m09_exit_pipeline_m_axi_RVALID),
        .m_axi_wdata(m09_exit_pipeline_m_axi_WDATA),
        .m_axi_wlast(m09_exit_pipeline_m_axi_WLAST),
        .m_axi_wready(m09_exit_pipeline_m_axi_WREADY),
        .m_axi_wstrb(m09_exit_pipeline_m_axi_WSTRB),
        .m_axi_wvalid(m09_exit_pipeline_m_axi_WVALID),
        .s_axi_araddr(m09_sc2axi_M_AXI_ARADDR),
        .s_axi_arcache(m09_sc2axi_M_AXI_ARCACHE),
        .s_axi_arid(m09_sc2axi_M_AXI_ARID),
        .s_axi_arlen(m09_sc2axi_M_AXI_ARLEN),
        .s_axi_arlock(m09_sc2axi_M_AXI_ARLOCK),
        .s_axi_arprot(m09_sc2axi_M_AXI_ARPROT),
        .s_axi_arqos(m09_sc2axi_M_AXI_ARQOS),
        .s_axi_arready(m09_sc2axi_M_AXI_ARREADY),
        .s_axi_aruser(m09_sc2axi_M_AXI_ARUSER),
        .s_axi_arvalid(m09_sc2axi_M_AXI_ARVALID),
        .s_axi_awaddr(m09_sc2axi_M_AXI_AWADDR),
        .s_axi_awcache(m09_sc2axi_M_AXI_AWCACHE),
        .s_axi_awid(m09_sc2axi_M_AXI_AWID),
        .s_axi_awlen(m09_sc2axi_M_AXI_AWLEN),
        .s_axi_awlock(m09_sc2axi_M_AXI_AWLOCK),
        .s_axi_awprot(m09_sc2axi_M_AXI_AWPROT),
        .s_axi_awqos(m09_sc2axi_M_AXI_AWQOS),
        .s_axi_awready(m09_sc2axi_M_AXI_AWREADY),
        .s_axi_awuser(m09_sc2axi_M_AXI_AWUSER),
        .s_axi_awvalid(m09_sc2axi_M_AXI_AWVALID),
        .s_axi_bid(m09_sc2axi_M_AXI_BID),
        .s_axi_bready(m09_sc2axi_M_AXI_BREADY),
        .s_axi_bresp(m09_sc2axi_M_AXI_BRESP),
        .s_axi_buser(m09_sc2axi_M_AXI_BUSER),
        .s_axi_bvalid(m09_sc2axi_M_AXI_BVALID),
        .s_axi_rdata(m09_sc2axi_M_AXI_RDATA),
        .s_axi_rid(m09_sc2axi_M_AXI_RID),
        .s_axi_rlast(m09_sc2axi_M_AXI_RLAST),
        .s_axi_rready(m09_sc2axi_M_AXI_RREADY),
        .s_axi_rresp(m09_sc2axi_M_AXI_RRESP),
        .s_axi_ruser(m09_sc2axi_M_AXI_RUSER),
        .s_axi_rvalid(m09_sc2axi_M_AXI_RVALID),
        .s_axi_wdata(m09_sc2axi_M_AXI_WDATA),
        .s_axi_wlast(m09_sc2axi_M_AXI_WLAST),
        .s_axi_wready(m09_sc2axi_M_AXI_WREADY),
        .s_axi_wstrb(m09_sc2axi_M_AXI_WSTRB),
        .s_axi_wuser(m09_sc2axi_M_AXI_WUSER),
        .s_axi_wvalid(m09_sc2axi_M_AXI_WVALID));
  m09_nodes_imp_5H9RUZ m09_nodes
       (.M_SC_AR_info(m09_nodes_M_SC_AR_INFO),
        .M_SC_AR_payld(m09_nodes_M_SC_AR_PAYLD),
        .M_SC_AR_recv(m09_nodes_M_SC_AR_RECV),
        .M_SC_AR_req(m09_nodes_M_SC_AR_REQ),
        .M_SC_AR_send(m09_nodes_M_SC_AR_SEND),
        .M_SC_AW_info(m09_nodes_M_SC_AW_INFO),
        .M_SC_AW_payld(m09_nodes_M_SC_AW_PAYLD),
        .M_SC_AW_recv(m09_nodes_M_SC_AW_RECV),
        .M_SC_AW_req(m09_nodes_M_SC_AW_REQ),
        .M_SC_AW_send(m09_nodes_M_SC_AW_SEND),
        .M_SC_B_info(m09_nodes_M_SC_B_INFO),
        .M_SC_B_payld(m09_nodes_M_SC_B_PAYLD),
        .M_SC_B_recv(m09_nodes_M_SC_B_RECV),
        .M_SC_B_req(m09_nodes_M_SC_B_REQ),
        .M_SC_B_send(m09_nodes_M_SC_B_SEND),
        .M_SC_R_info(m09_nodes_M_SC_R_INFO),
        .M_SC_R_payld(m09_nodes_M_SC_R_PAYLD),
        .M_SC_R_recv(m09_nodes_M_SC_R_RECV),
        .M_SC_R_req(m09_nodes_M_SC_R_REQ),
        .M_SC_R_send(m09_nodes_M_SC_R_SEND),
        .M_SC_W_info(m09_nodes_M_SC_W_INFO),
        .M_SC_W_payld(m09_nodes_M_SC_W_PAYLD),
        .M_SC_W_recv(m09_nodes_M_SC_W_RECV),
        .M_SC_W_req(m09_nodes_M_SC_W_REQ),
        .M_SC_W_send(m09_nodes_M_SC_W_SEND),
        .S_SC_AR_info(S_SC_AR_11_INFO),
        .S_SC_AR_payld(S_SC_AR_11_PAYLD),
        .S_SC_AR_recv(S_SC_AR_11_RECV),
        .S_SC_AR_req(S_SC_AR_11_REQ),
        .S_SC_AR_send(S_SC_AR_11_SEND),
        .S_SC_AW_info(S_SC_AW_11_INFO),
        .S_SC_AW_payld(S_SC_AW_11_PAYLD),
        .S_SC_AW_recv(S_SC_AW_11_RECV),
        .S_SC_AW_req(S_SC_AW_11_REQ),
        .S_SC_AW_send(S_SC_AW_11_SEND),
        .S_SC_B_info(S_SC_B_11_INFO),
        .S_SC_B_payld(S_SC_B_11_PAYLD),
        .S_SC_B_recv(S_SC_B_11_RECV),
        .S_SC_B_req(S_SC_B_11_REQ),
        .S_SC_B_send(S_SC_B_11_SEND),
        .S_SC_R_info(S_SC_R_11_INFO),
        .S_SC_R_payld(S_SC_R_11_PAYLD),
        .S_SC_R_recv(S_SC_R_11_RECV),
        .S_SC_R_req(S_SC_R_11_REQ),
        .S_SC_R_send(S_SC_R_11_SEND),
        .S_SC_W_info(S_SC_W_11_INFO),
        .S_SC_W_payld(S_SC_W_11_PAYLD),
        .S_SC_W_recv(S_SC_W_11_RECV),
        .S_SC_W_req(S_SC_W_11_REQ),
        .S_SC_W_send(S_SC_W_11_SEND),
        .m_axi_aclk(clk_map_M09_ACLK),
        .m_axi_aresetn(m_axi_aresetn_9),
        .s_axi_aclk(clk_map_M00_ACLK),
        .s_axi_aresetn(clk_map_M00_ARESETN));
  bd_afc3_m09s2a_0 m09_sc2axi
       (.aclk(clk_map_M09_ACLK),
        .m_axi_araddr(m09_sc2axi_M_AXI_ARADDR),
        .m_axi_arcache(m09_sc2axi_M_AXI_ARCACHE),
        .m_axi_arid(m09_sc2axi_M_AXI_ARID),
        .m_axi_arlen(m09_sc2axi_M_AXI_ARLEN),
        .m_axi_arlock(m09_sc2axi_M_AXI_ARLOCK),
        .m_axi_arprot(m09_sc2axi_M_AXI_ARPROT),
        .m_axi_arqos(m09_sc2axi_M_AXI_ARQOS),
        .m_axi_arready(m09_sc2axi_M_AXI_ARREADY),
        .m_axi_aruser(m09_sc2axi_M_AXI_ARUSER),
        .m_axi_arvalid(m09_sc2axi_M_AXI_ARVALID),
        .m_axi_awaddr(m09_sc2axi_M_AXI_AWADDR),
        .m_axi_awcache(m09_sc2axi_M_AXI_AWCACHE),
        .m_axi_awid(m09_sc2axi_M_AXI_AWID),
        .m_axi_awlen(m09_sc2axi_M_AXI_AWLEN),
        .m_axi_awlock(m09_sc2axi_M_AXI_AWLOCK),
        .m_axi_awprot(m09_sc2axi_M_AXI_AWPROT),
        .m_axi_awqos(m09_sc2axi_M_AXI_AWQOS),
        .m_axi_awready(m09_sc2axi_M_AXI_AWREADY),
        .m_axi_awuser(m09_sc2axi_M_AXI_AWUSER),
        .m_axi_awvalid(m09_sc2axi_M_AXI_AWVALID),
        .m_axi_bid(m09_sc2axi_M_AXI_BID),
        .m_axi_bready(m09_sc2axi_M_AXI_BREADY),
        .m_axi_bresp(m09_sc2axi_M_AXI_BRESP),
        .m_axi_buser(m09_sc2axi_M_AXI_BUSER),
        .m_axi_bvalid(m09_sc2axi_M_AXI_BVALID),
        .m_axi_rdata(m09_sc2axi_M_AXI_RDATA),
        .m_axi_rid(m09_sc2axi_M_AXI_RID),
        .m_axi_rlast(m09_sc2axi_M_AXI_RLAST),
        .m_axi_rready(m09_sc2axi_M_AXI_RREADY),
        .m_axi_rresp(m09_sc2axi_M_AXI_RRESP),
        .m_axi_ruser(m09_sc2axi_M_AXI_RUSER),
        .m_axi_rvalid(m09_sc2axi_M_AXI_RVALID),
        .m_axi_wdata(m09_sc2axi_M_AXI_WDATA),
        .m_axi_wlast(m09_sc2axi_M_AXI_WLAST),
        .m_axi_wready(m09_sc2axi_M_AXI_WREADY),
        .m_axi_wstrb(m09_sc2axi_M_AXI_WSTRB),
        .m_axi_wuser(m09_sc2axi_M_AXI_WUSER),
        .m_axi_wvalid(m09_sc2axi_M_AXI_WVALID),
        .m_sc_b_info(S_SC_B_11_INFO),
        .m_sc_b_payld(S_SC_B_11_PAYLD),
        .m_sc_b_recv(S_SC_B_11_RECV),
        .m_sc_b_req(S_SC_B_11_REQ),
        .m_sc_b_send(S_SC_B_11_SEND),
        .m_sc_r_info(S_SC_R_11_INFO),
        .m_sc_r_payld(S_SC_R_11_PAYLD),
        .m_sc_r_recv(S_SC_R_11_RECV),
        .m_sc_r_req(S_SC_R_11_REQ),
        .m_sc_r_send(S_SC_R_11_SEND),
        .s_sc_ar_info(m09_nodes_M_SC_AR_INFO),
        .s_sc_ar_payld(m09_nodes_M_SC_AR_PAYLD[179:0]),
        .s_sc_ar_recv(m09_nodes_M_SC_AR_RECV),
        .s_sc_ar_req(m09_nodes_M_SC_AR_REQ),
        .s_sc_ar_send(m09_nodes_M_SC_AR_SEND),
        .s_sc_aw_info(m09_nodes_M_SC_AW_INFO),
        .s_sc_aw_payld(m09_nodes_M_SC_AW_PAYLD[179:0]),
        .s_sc_aw_recv(m09_nodes_M_SC_AW_RECV),
        .s_sc_aw_req(m09_nodes_M_SC_AW_REQ),
        .s_sc_aw_send(m09_nodes_M_SC_AW_SEND),
        .s_sc_w_info(m09_nodes_M_SC_W_INFO),
        .s_sc_w_payld(m09_nodes_M_SC_W_PAYLD[66:0]),
        .s_sc_w_recv(m09_nodes_M_SC_W_RECV),
        .s_sc_w_req(m09_nodes_M_SC_W_REQ),
        .s_sc_w_send(m09_nodes_M_SC_W_SEND));
  m10_exit_pipeline_imp_WXIUB7 m10_exit_pipeline
       (.aclk(clk_map_M10_ACLK),
        .aresetn(m_axi_aresetn_10),
        .m_axi_araddr(m10_exit_pipeline_m_axi_ARADDR),
        .m_axi_arburst(m10_exit_pipeline_m_axi_ARBURST),
        .m_axi_arcache(m10_exit_pipeline_m_axi_ARCACHE),
        .m_axi_arlen(m10_exit_pipeline_m_axi_ARLEN),
        .m_axi_arlock(m10_exit_pipeline_m_axi_ARLOCK),
        .m_axi_arprot(m10_exit_pipeline_m_axi_ARPROT),
        .m_axi_arqos(m10_exit_pipeline_m_axi_ARQOS),
        .m_axi_arready(m10_exit_pipeline_m_axi_ARREADY),
        .m_axi_arsize(m10_exit_pipeline_m_axi_ARSIZE),
        .m_axi_aruser(m10_exit_pipeline_m_axi_ARUSER),
        .m_axi_arvalid(m10_exit_pipeline_m_axi_ARVALID),
        .m_axi_awaddr(m10_exit_pipeline_m_axi_AWADDR),
        .m_axi_awburst(m10_exit_pipeline_m_axi_AWBURST),
        .m_axi_awcache(m10_exit_pipeline_m_axi_AWCACHE),
        .m_axi_awlen(m10_exit_pipeline_m_axi_AWLEN),
        .m_axi_awlock(m10_exit_pipeline_m_axi_AWLOCK),
        .m_axi_awprot(m10_exit_pipeline_m_axi_AWPROT),
        .m_axi_awqos(m10_exit_pipeline_m_axi_AWQOS),
        .m_axi_awready(m10_exit_pipeline_m_axi_AWREADY),
        .m_axi_awsize(m10_exit_pipeline_m_axi_AWSIZE),
        .m_axi_awuser(m10_exit_pipeline_m_axi_AWUSER),
        .m_axi_awvalid(m10_exit_pipeline_m_axi_AWVALID),
        .m_axi_bready(m10_exit_pipeline_m_axi_BREADY),
        .m_axi_bresp(m10_exit_pipeline_m_axi_BRESP),
        .m_axi_bvalid(m10_exit_pipeline_m_axi_BVALID),
        .m_axi_rdata(m10_exit_pipeline_m_axi_RDATA),
        .m_axi_rlast(m10_exit_pipeline_m_axi_RLAST),
        .m_axi_rready(m10_exit_pipeline_m_axi_RREADY),
        .m_axi_rresp(m10_exit_pipeline_m_axi_RRESP),
        .m_axi_rvalid(m10_exit_pipeline_m_axi_RVALID),
        .m_axi_wdata(m10_exit_pipeline_m_axi_WDATA),
        .m_axi_wlast(m10_exit_pipeline_m_axi_WLAST),
        .m_axi_wready(m10_exit_pipeline_m_axi_WREADY),
        .m_axi_wstrb(m10_exit_pipeline_m_axi_WSTRB),
        .m_axi_wvalid(m10_exit_pipeline_m_axi_WVALID),
        .s_axi_araddr(m10_sc2axi_M_AXI_ARADDR),
        .s_axi_arcache(m10_sc2axi_M_AXI_ARCACHE),
        .s_axi_arid(m10_sc2axi_M_AXI_ARID),
        .s_axi_arlen(m10_sc2axi_M_AXI_ARLEN),
        .s_axi_arlock(m10_sc2axi_M_AXI_ARLOCK),
        .s_axi_arprot(m10_sc2axi_M_AXI_ARPROT),
        .s_axi_arqos(m10_sc2axi_M_AXI_ARQOS),
        .s_axi_arready(m10_sc2axi_M_AXI_ARREADY),
        .s_axi_aruser(m10_sc2axi_M_AXI_ARUSER),
        .s_axi_arvalid(m10_sc2axi_M_AXI_ARVALID),
        .s_axi_awaddr(m10_sc2axi_M_AXI_AWADDR),
        .s_axi_awcache(m10_sc2axi_M_AXI_AWCACHE),
        .s_axi_awid(m10_sc2axi_M_AXI_AWID),
        .s_axi_awlen(m10_sc2axi_M_AXI_AWLEN),
        .s_axi_awlock(m10_sc2axi_M_AXI_AWLOCK),
        .s_axi_awprot(m10_sc2axi_M_AXI_AWPROT),
        .s_axi_awqos(m10_sc2axi_M_AXI_AWQOS),
        .s_axi_awready(m10_sc2axi_M_AXI_AWREADY),
        .s_axi_awuser(m10_sc2axi_M_AXI_AWUSER),
        .s_axi_awvalid(m10_sc2axi_M_AXI_AWVALID),
        .s_axi_bid(m10_sc2axi_M_AXI_BID),
        .s_axi_bready(m10_sc2axi_M_AXI_BREADY),
        .s_axi_bresp(m10_sc2axi_M_AXI_BRESP),
        .s_axi_buser(m10_sc2axi_M_AXI_BUSER),
        .s_axi_bvalid(m10_sc2axi_M_AXI_BVALID),
        .s_axi_rdata(m10_sc2axi_M_AXI_RDATA),
        .s_axi_rid(m10_sc2axi_M_AXI_RID),
        .s_axi_rlast(m10_sc2axi_M_AXI_RLAST),
        .s_axi_rready(m10_sc2axi_M_AXI_RREADY),
        .s_axi_rresp(m10_sc2axi_M_AXI_RRESP),
        .s_axi_ruser(m10_sc2axi_M_AXI_RUSER),
        .s_axi_rvalid(m10_sc2axi_M_AXI_RVALID),
        .s_axi_wdata(m10_sc2axi_M_AXI_WDATA),
        .s_axi_wlast(m10_sc2axi_M_AXI_WLAST),
        .s_axi_wready(m10_sc2axi_M_AXI_WREADY),
        .s_axi_wstrb(m10_sc2axi_M_AXI_WSTRB),
        .s_axi_wuser(m10_sc2axi_M_AXI_WUSER),
        .s_axi_wvalid(m10_sc2axi_M_AXI_WVALID));
  m10_nodes_imp_14P23N m10_nodes
       (.M_SC_AR_info(m10_nodes_M_SC_AR_INFO),
        .M_SC_AR_payld(m10_nodes_M_SC_AR_PAYLD),
        .M_SC_AR_recv(m10_nodes_M_SC_AR_RECV),
        .M_SC_AR_req(m10_nodes_M_SC_AR_REQ),
        .M_SC_AR_send(m10_nodes_M_SC_AR_SEND),
        .M_SC_AW_info(m10_nodes_M_SC_AW_INFO),
        .M_SC_AW_payld(m10_nodes_M_SC_AW_PAYLD),
        .M_SC_AW_recv(m10_nodes_M_SC_AW_RECV),
        .M_SC_AW_req(m10_nodes_M_SC_AW_REQ),
        .M_SC_AW_send(m10_nodes_M_SC_AW_SEND),
        .M_SC_B_info(m10_nodes_M_SC_B_INFO),
        .M_SC_B_payld(m10_nodes_M_SC_B_PAYLD),
        .M_SC_B_recv(m10_nodes_M_SC_B_RECV),
        .M_SC_B_req(m10_nodes_M_SC_B_REQ),
        .M_SC_B_send(m10_nodes_M_SC_B_SEND),
        .M_SC_R_info(m10_nodes_M_SC_R_INFO),
        .M_SC_R_payld(m10_nodes_M_SC_R_PAYLD),
        .M_SC_R_recv(m10_nodes_M_SC_R_RECV),
        .M_SC_R_req(m10_nodes_M_SC_R_REQ),
        .M_SC_R_send(m10_nodes_M_SC_R_SEND),
        .M_SC_W_info(m10_nodes_M_SC_W_INFO),
        .M_SC_W_payld(m10_nodes_M_SC_W_PAYLD),
        .M_SC_W_recv(m10_nodes_M_SC_W_RECV),
        .M_SC_W_req(m10_nodes_M_SC_W_REQ),
        .M_SC_W_send(m10_nodes_M_SC_W_SEND),
        .S_SC_AR_info(S_SC_AR_12_INFO),
        .S_SC_AR_payld(S_SC_AR_12_PAYLD),
        .S_SC_AR_recv(S_SC_AR_12_RECV),
        .S_SC_AR_req(S_SC_AR_12_REQ),
        .S_SC_AR_send(S_SC_AR_12_SEND),
        .S_SC_AW_info(S_SC_AW_12_INFO),
        .S_SC_AW_payld(S_SC_AW_12_PAYLD),
        .S_SC_AW_recv(S_SC_AW_12_RECV),
        .S_SC_AW_req(S_SC_AW_12_REQ),
        .S_SC_AW_send(S_SC_AW_12_SEND),
        .S_SC_B_info(S_SC_B_12_INFO),
        .S_SC_B_payld(S_SC_B_12_PAYLD),
        .S_SC_B_recv(S_SC_B_12_RECV),
        .S_SC_B_req(S_SC_B_12_REQ),
        .S_SC_B_send(S_SC_B_12_SEND),
        .S_SC_R_info(S_SC_R_12_INFO),
        .S_SC_R_payld(S_SC_R_12_PAYLD),
        .S_SC_R_recv(S_SC_R_12_RECV),
        .S_SC_R_req(S_SC_R_12_REQ),
        .S_SC_R_send(S_SC_R_12_SEND),
        .S_SC_W_info(S_SC_W_12_INFO),
        .S_SC_W_payld(S_SC_W_12_PAYLD),
        .S_SC_W_recv(S_SC_W_12_RECV),
        .S_SC_W_req(S_SC_W_12_REQ),
        .S_SC_W_send(S_SC_W_12_SEND),
        .m_axi_aclk(clk_map_M10_ACLK),
        .m_axi_aresetn(m_axi_aresetn_10),
        .s_axi_aclk(clk_map_M00_ACLK),
        .s_axi_aresetn(clk_map_M00_ARESETN));
  bd_afc3_m10s2a_0 m10_sc2axi
       (.aclk(clk_map_M10_ACLK),
        .m_axi_araddr(m10_sc2axi_M_AXI_ARADDR),
        .m_axi_arcache(m10_sc2axi_M_AXI_ARCACHE),
        .m_axi_arid(m10_sc2axi_M_AXI_ARID),
        .m_axi_arlen(m10_sc2axi_M_AXI_ARLEN),
        .m_axi_arlock(m10_sc2axi_M_AXI_ARLOCK),
        .m_axi_arprot(m10_sc2axi_M_AXI_ARPROT),
        .m_axi_arqos(m10_sc2axi_M_AXI_ARQOS),
        .m_axi_arready(m10_sc2axi_M_AXI_ARREADY),
        .m_axi_aruser(m10_sc2axi_M_AXI_ARUSER),
        .m_axi_arvalid(m10_sc2axi_M_AXI_ARVALID),
        .m_axi_awaddr(m10_sc2axi_M_AXI_AWADDR),
        .m_axi_awcache(m10_sc2axi_M_AXI_AWCACHE),
        .m_axi_awid(m10_sc2axi_M_AXI_AWID),
        .m_axi_awlen(m10_sc2axi_M_AXI_AWLEN),
        .m_axi_awlock(m10_sc2axi_M_AXI_AWLOCK),
        .m_axi_awprot(m10_sc2axi_M_AXI_AWPROT),
        .m_axi_awqos(m10_sc2axi_M_AXI_AWQOS),
        .m_axi_awready(m10_sc2axi_M_AXI_AWREADY),
        .m_axi_awuser(m10_sc2axi_M_AXI_AWUSER),
        .m_axi_awvalid(m10_sc2axi_M_AXI_AWVALID),
        .m_axi_bid(m10_sc2axi_M_AXI_BID),
        .m_axi_bready(m10_sc2axi_M_AXI_BREADY),
        .m_axi_bresp(m10_sc2axi_M_AXI_BRESP),
        .m_axi_buser(m10_sc2axi_M_AXI_BUSER),
        .m_axi_bvalid(m10_sc2axi_M_AXI_BVALID),
        .m_axi_rdata(m10_sc2axi_M_AXI_RDATA),
        .m_axi_rid(m10_sc2axi_M_AXI_RID),
        .m_axi_rlast(m10_sc2axi_M_AXI_RLAST),
        .m_axi_rready(m10_sc2axi_M_AXI_RREADY),
        .m_axi_rresp(m10_sc2axi_M_AXI_RRESP),
        .m_axi_ruser(m10_sc2axi_M_AXI_RUSER),
        .m_axi_rvalid(m10_sc2axi_M_AXI_RVALID),
        .m_axi_wdata(m10_sc2axi_M_AXI_WDATA),
        .m_axi_wlast(m10_sc2axi_M_AXI_WLAST),
        .m_axi_wready(m10_sc2axi_M_AXI_WREADY),
        .m_axi_wstrb(m10_sc2axi_M_AXI_WSTRB),
        .m_axi_wuser(m10_sc2axi_M_AXI_WUSER),
        .m_axi_wvalid(m10_sc2axi_M_AXI_WVALID),
        .m_sc_b_info(S_SC_B_12_INFO),
        .m_sc_b_payld(S_SC_B_12_PAYLD),
        .m_sc_b_recv(S_SC_B_12_RECV),
        .m_sc_b_req(S_SC_B_12_REQ),
        .m_sc_b_send(S_SC_B_12_SEND),
        .m_sc_r_info(S_SC_R_12_INFO),
        .m_sc_r_payld(S_SC_R_12_PAYLD),
        .m_sc_r_recv(S_SC_R_12_RECV),
        .m_sc_r_req(S_SC_R_12_REQ),
        .m_sc_r_send(S_SC_R_12_SEND),
        .s_sc_ar_info(m10_nodes_M_SC_AR_INFO),
        .s_sc_ar_payld(m10_nodes_M_SC_AR_PAYLD[179:0]),
        .s_sc_ar_recv(m10_nodes_M_SC_AR_RECV),
        .s_sc_ar_req(m10_nodes_M_SC_AR_REQ),
        .s_sc_ar_send(m10_nodes_M_SC_AR_SEND),
        .s_sc_aw_info(m10_nodes_M_SC_AW_INFO),
        .s_sc_aw_payld(m10_nodes_M_SC_AW_PAYLD[179:0]),
        .s_sc_aw_recv(m10_nodes_M_SC_AW_RECV),
        .s_sc_aw_req(m10_nodes_M_SC_AW_REQ),
        .s_sc_aw_send(m10_nodes_M_SC_AW_SEND),
        .s_sc_w_info(m10_nodes_M_SC_W_INFO),
        .s_sc_w_payld(m10_nodes_M_SC_W_PAYLD[66:0]),
        .s_sc_w_recv(m10_nodes_M_SC_W_RECV),
        .s_sc_w_req(m10_nodes_M_SC_W_REQ),
        .s_sc_w_send(m10_nodes_M_SC_W_SEND));
  m11_exit_pipeline_imp_R27DIR m11_exit_pipeline
       (.aclk(clk_map_M11_ACLK),
        .aresetn(m_axi_aresetn_11),
        .m_axi_araddr(m11_exit_pipeline_m_axi_ARADDR),
        .m_axi_arburst(m11_exit_pipeline_m_axi_ARBURST),
        .m_axi_arcache(m11_exit_pipeline_m_axi_ARCACHE),
        .m_axi_arlen(m11_exit_pipeline_m_axi_ARLEN),
        .m_axi_arlock(m11_exit_pipeline_m_axi_ARLOCK),
        .m_axi_arprot(m11_exit_pipeline_m_axi_ARPROT),
        .m_axi_arqos(m11_exit_pipeline_m_axi_ARQOS),
        .m_axi_arready(m11_exit_pipeline_m_axi_ARREADY),
        .m_axi_arsize(m11_exit_pipeline_m_axi_ARSIZE),
        .m_axi_aruser(m11_exit_pipeline_m_axi_ARUSER),
        .m_axi_arvalid(m11_exit_pipeline_m_axi_ARVALID),
        .m_axi_awaddr(m11_exit_pipeline_m_axi_AWADDR),
        .m_axi_awburst(m11_exit_pipeline_m_axi_AWBURST),
        .m_axi_awcache(m11_exit_pipeline_m_axi_AWCACHE),
        .m_axi_awlen(m11_exit_pipeline_m_axi_AWLEN),
        .m_axi_awlock(m11_exit_pipeline_m_axi_AWLOCK),
        .m_axi_awprot(m11_exit_pipeline_m_axi_AWPROT),
        .m_axi_awqos(m11_exit_pipeline_m_axi_AWQOS),
        .m_axi_awready(m11_exit_pipeline_m_axi_AWREADY),
        .m_axi_awsize(m11_exit_pipeline_m_axi_AWSIZE),
        .m_axi_awuser(m11_exit_pipeline_m_axi_AWUSER),
        .m_axi_awvalid(m11_exit_pipeline_m_axi_AWVALID),
        .m_axi_bready(m11_exit_pipeline_m_axi_BREADY),
        .m_axi_bresp(m11_exit_pipeline_m_axi_BRESP),
        .m_axi_bvalid(m11_exit_pipeline_m_axi_BVALID),
        .m_axi_rdata(m11_exit_pipeline_m_axi_RDATA),
        .m_axi_rlast(m11_exit_pipeline_m_axi_RLAST),
        .m_axi_rready(m11_exit_pipeline_m_axi_RREADY),
        .m_axi_rresp(m11_exit_pipeline_m_axi_RRESP),
        .m_axi_rvalid(m11_exit_pipeline_m_axi_RVALID),
        .m_axi_wdata(m11_exit_pipeline_m_axi_WDATA),
        .m_axi_wlast(m11_exit_pipeline_m_axi_WLAST),
        .m_axi_wready(m11_exit_pipeline_m_axi_WREADY),
        .m_axi_wstrb(m11_exit_pipeline_m_axi_WSTRB),
        .m_axi_wvalid(m11_exit_pipeline_m_axi_WVALID),
        .s_axi_araddr(m11_sc2axi_M_AXI_ARADDR),
        .s_axi_arcache(m11_sc2axi_M_AXI_ARCACHE),
        .s_axi_arid(m11_sc2axi_M_AXI_ARID),
        .s_axi_arlen(m11_sc2axi_M_AXI_ARLEN),
        .s_axi_arlock(m11_sc2axi_M_AXI_ARLOCK),
        .s_axi_arprot(m11_sc2axi_M_AXI_ARPROT),
        .s_axi_arqos(m11_sc2axi_M_AXI_ARQOS),
        .s_axi_arready(m11_sc2axi_M_AXI_ARREADY),
        .s_axi_aruser(m11_sc2axi_M_AXI_ARUSER),
        .s_axi_arvalid(m11_sc2axi_M_AXI_ARVALID),
        .s_axi_awaddr(m11_sc2axi_M_AXI_AWADDR),
        .s_axi_awcache(m11_sc2axi_M_AXI_AWCACHE),
        .s_axi_awid(m11_sc2axi_M_AXI_AWID),
        .s_axi_awlen(m11_sc2axi_M_AXI_AWLEN),
        .s_axi_awlock(m11_sc2axi_M_AXI_AWLOCK),
        .s_axi_awprot(m11_sc2axi_M_AXI_AWPROT),
        .s_axi_awqos(m11_sc2axi_M_AXI_AWQOS),
        .s_axi_awready(m11_sc2axi_M_AXI_AWREADY),
        .s_axi_awuser(m11_sc2axi_M_AXI_AWUSER),
        .s_axi_awvalid(m11_sc2axi_M_AXI_AWVALID),
        .s_axi_bid(m11_sc2axi_M_AXI_BID),
        .s_axi_bready(m11_sc2axi_M_AXI_BREADY),
        .s_axi_bresp(m11_sc2axi_M_AXI_BRESP),
        .s_axi_buser(m11_sc2axi_M_AXI_BUSER),
        .s_axi_bvalid(m11_sc2axi_M_AXI_BVALID),
        .s_axi_rdata(m11_sc2axi_M_AXI_RDATA),
        .s_axi_rid(m11_sc2axi_M_AXI_RID),
        .s_axi_rlast(m11_sc2axi_M_AXI_RLAST),
        .s_axi_rready(m11_sc2axi_M_AXI_RREADY),
        .s_axi_rresp(m11_sc2axi_M_AXI_RRESP),
        .s_axi_ruser(m11_sc2axi_M_AXI_RUSER),
        .s_axi_rvalid(m11_sc2axi_M_AXI_RVALID),
        .s_axi_wdata(m11_sc2axi_M_AXI_WDATA),
        .s_axi_wlast(m11_sc2axi_M_AXI_WLAST),
        .s_axi_wready(m11_sc2axi_M_AXI_WREADY),
        .s_axi_wstrb(m11_sc2axi_M_AXI_WSTRB),
        .s_axi_wuser(m11_sc2axi_M_AXI_WUSER),
        .s_axi_wvalid(m11_sc2axi_M_AXI_WVALID));
  m11_nodes_imp_16HES9H m11_nodes
       (.M_SC_AR_info(m11_nodes_M_SC_AR_INFO),
        .M_SC_AR_payld(m11_nodes_M_SC_AR_PAYLD),
        .M_SC_AR_recv(m11_nodes_M_SC_AR_RECV),
        .M_SC_AR_req(m11_nodes_M_SC_AR_REQ),
        .M_SC_AR_send(m11_nodes_M_SC_AR_SEND),
        .M_SC_AW_info(m11_nodes_M_SC_AW_INFO),
        .M_SC_AW_payld(m11_nodes_M_SC_AW_PAYLD),
        .M_SC_AW_recv(m11_nodes_M_SC_AW_RECV),
        .M_SC_AW_req(m11_nodes_M_SC_AW_REQ),
        .M_SC_AW_send(m11_nodes_M_SC_AW_SEND),
        .M_SC_B_info(m11_nodes_M_SC_B_INFO),
        .M_SC_B_payld(m11_nodes_M_SC_B_PAYLD),
        .M_SC_B_recv(m11_nodes_M_SC_B_RECV),
        .M_SC_B_req(m11_nodes_M_SC_B_REQ),
        .M_SC_B_send(m11_nodes_M_SC_B_SEND),
        .M_SC_R_info(m11_nodes_M_SC_R_INFO),
        .M_SC_R_payld(m11_nodes_M_SC_R_PAYLD),
        .M_SC_R_recv(m11_nodes_M_SC_R_RECV),
        .M_SC_R_req(m11_nodes_M_SC_R_REQ),
        .M_SC_R_send(m11_nodes_M_SC_R_SEND),
        .M_SC_W_info(m11_nodes_M_SC_W_INFO),
        .M_SC_W_payld(m11_nodes_M_SC_W_PAYLD),
        .M_SC_W_recv(m11_nodes_M_SC_W_RECV),
        .M_SC_W_req(m11_nodes_M_SC_W_REQ),
        .M_SC_W_send(m11_nodes_M_SC_W_SEND),
        .S_SC_AR_info(S_SC_AR_13_INFO),
        .S_SC_AR_payld(S_SC_AR_13_PAYLD),
        .S_SC_AR_recv(S_SC_AR_13_RECV),
        .S_SC_AR_req(S_SC_AR_13_REQ),
        .S_SC_AR_send(S_SC_AR_13_SEND),
        .S_SC_AW_info(S_SC_AW_13_INFO),
        .S_SC_AW_payld(S_SC_AW_13_PAYLD),
        .S_SC_AW_recv(S_SC_AW_13_RECV),
        .S_SC_AW_req(S_SC_AW_13_REQ),
        .S_SC_AW_send(S_SC_AW_13_SEND),
        .S_SC_B_info(S_SC_B_13_INFO),
        .S_SC_B_payld(S_SC_B_13_PAYLD),
        .S_SC_B_recv(S_SC_B_13_RECV),
        .S_SC_B_req(S_SC_B_13_REQ),
        .S_SC_B_send(S_SC_B_13_SEND),
        .S_SC_R_info(S_SC_R_13_INFO),
        .S_SC_R_payld(S_SC_R_13_PAYLD),
        .S_SC_R_recv(S_SC_R_13_RECV),
        .S_SC_R_req(S_SC_R_13_REQ),
        .S_SC_R_send(S_SC_R_13_SEND),
        .S_SC_W_info(S_SC_W_13_INFO),
        .S_SC_W_payld(S_SC_W_13_PAYLD),
        .S_SC_W_recv(S_SC_W_13_RECV),
        .S_SC_W_req(S_SC_W_13_REQ),
        .S_SC_W_send(S_SC_W_13_SEND),
        .m_axi_aclk(clk_map_M11_ACLK),
        .m_axi_aresetn(m_axi_aresetn_11),
        .s_axi_aclk(clk_map_M00_ACLK),
        .s_axi_aresetn(clk_map_M00_ARESETN));
  bd_afc3_m11s2a_0 m11_sc2axi
       (.aclk(clk_map_M11_ACLK),
        .m_axi_araddr(m11_sc2axi_M_AXI_ARADDR),
        .m_axi_arcache(m11_sc2axi_M_AXI_ARCACHE),
        .m_axi_arid(m11_sc2axi_M_AXI_ARID),
        .m_axi_arlen(m11_sc2axi_M_AXI_ARLEN),
        .m_axi_arlock(m11_sc2axi_M_AXI_ARLOCK),
        .m_axi_arprot(m11_sc2axi_M_AXI_ARPROT),
        .m_axi_arqos(m11_sc2axi_M_AXI_ARQOS),
        .m_axi_arready(m11_sc2axi_M_AXI_ARREADY),
        .m_axi_aruser(m11_sc2axi_M_AXI_ARUSER),
        .m_axi_arvalid(m11_sc2axi_M_AXI_ARVALID),
        .m_axi_awaddr(m11_sc2axi_M_AXI_AWADDR),
        .m_axi_awcache(m11_sc2axi_M_AXI_AWCACHE),
        .m_axi_awid(m11_sc2axi_M_AXI_AWID),
        .m_axi_awlen(m11_sc2axi_M_AXI_AWLEN),
        .m_axi_awlock(m11_sc2axi_M_AXI_AWLOCK),
        .m_axi_awprot(m11_sc2axi_M_AXI_AWPROT),
        .m_axi_awqos(m11_sc2axi_M_AXI_AWQOS),
        .m_axi_awready(m11_sc2axi_M_AXI_AWREADY),
        .m_axi_awuser(m11_sc2axi_M_AXI_AWUSER),
        .m_axi_awvalid(m11_sc2axi_M_AXI_AWVALID),
        .m_axi_bid(m11_sc2axi_M_AXI_BID),
        .m_axi_bready(m11_sc2axi_M_AXI_BREADY),
        .m_axi_bresp(m11_sc2axi_M_AXI_BRESP),
        .m_axi_buser(m11_sc2axi_M_AXI_BUSER),
        .m_axi_bvalid(m11_sc2axi_M_AXI_BVALID),
        .m_axi_rdata(m11_sc2axi_M_AXI_RDATA),
        .m_axi_rid(m11_sc2axi_M_AXI_RID),
        .m_axi_rlast(m11_sc2axi_M_AXI_RLAST),
        .m_axi_rready(m11_sc2axi_M_AXI_RREADY),
        .m_axi_rresp(m11_sc2axi_M_AXI_RRESP),
        .m_axi_ruser(m11_sc2axi_M_AXI_RUSER),
        .m_axi_rvalid(m11_sc2axi_M_AXI_RVALID),
        .m_axi_wdata(m11_sc2axi_M_AXI_WDATA),
        .m_axi_wlast(m11_sc2axi_M_AXI_WLAST),
        .m_axi_wready(m11_sc2axi_M_AXI_WREADY),
        .m_axi_wstrb(m11_sc2axi_M_AXI_WSTRB),
        .m_axi_wuser(m11_sc2axi_M_AXI_WUSER),
        .m_axi_wvalid(m11_sc2axi_M_AXI_WVALID),
        .m_sc_b_info(S_SC_B_13_INFO),
        .m_sc_b_payld(S_SC_B_13_PAYLD),
        .m_sc_b_recv(S_SC_B_13_RECV),
        .m_sc_b_req(S_SC_B_13_REQ),
        .m_sc_b_send(S_SC_B_13_SEND),
        .m_sc_r_info(S_SC_R_13_INFO),
        .m_sc_r_payld(S_SC_R_13_PAYLD),
        .m_sc_r_recv(S_SC_R_13_RECV),
        .m_sc_r_req(S_SC_R_13_REQ),
        .m_sc_r_send(S_SC_R_13_SEND),
        .s_sc_ar_info(m11_nodes_M_SC_AR_INFO),
        .s_sc_ar_payld(m11_nodes_M_SC_AR_PAYLD[179:0]),
        .s_sc_ar_recv(m11_nodes_M_SC_AR_RECV),
        .s_sc_ar_req(m11_nodes_M_SC_AR_REQ),
        .s_sc_ar_send(m11_nodes_M_SC_AR_SEND),
        .s_sc_aw_info(m11_nodes_M_SC_AW_INFO),
        .s_sc_aw_payld(m11_nodes_M_SC_AW_PAYLD[179:0]),
        .s_sc_aw_recv(m11_nodes_M_SC_AW_RECV),
        .s_sc_aw_req(m11_nodes_M_SC_AW_REQ),
        .s_sc_aw_send(m11_nodes_M_SC_AW_SEND),
        .s_sc_w_info(m11_nodes_M_SC_W_INFO),
        .s_sc_w_payld(m11_nodes_M_SC_W_PAYLD[66:0]),
        .s_sc_w_recv(m11_nodes_M_SC_W_RECV),
        .s_sc_w_req(m11_nodes_M_SC_W_REQ),
        .s_sc_w_send(m11_nodes_M_SC_W_SEND));
  m12_exit_pipeline_imp_OOZ04Z m12_exit_pipeline
       (.aclk(clk_map_M12_ACLK),
        .aresetn(m_axi_aresetn_12),
        .m_axi_araddr(m12_exit_pipeline_m_axi_ARADDR),
        .m_axi_arprot(m12_exit_pipeline_m_axi_ARPROT),
        .m_axi_arready(m12_exit_pipeline_m_axi_ARREADY),
        .m_axi_arvalid(m12_exit_pipeline_m_axi_ARVALID),
        .m_axi_awaddr(m12_exit_pipeline_m_axi_AWADDR),
        .m_axi_awprot(m12_exit_pipeline_m_axi_AWPROT),
        .m_axi_awready(m12_exit_pipeline_m_axi_AWREADY),
        .m_axi_awvalid(m12_exit_pipeline_m_axi_AWVALID),
        .m_axi_bready(m12_exit_pipeline_m_axi_BREADY),
        .m_axi_bresp(m12_exit_pipeline_m_axi_BRESP),
        .m_axi_bvalid(m12_exit_pipeline_m_axi_BVALID),
        .m_axi_rdata(m12_exit_pipeline_m_axi_RDATA),
        .m_axi_rready(m12_exit_pipeline_m_axi_RREADY),
        .m_axi_rresp(m12_exit_pipeline_m_axi_RRESP),
        .m_axi_rvalid(m12_exit_pipeline_m_axi_RVALID),
        .m_axi_wdata(m12_exit_pipeline_m_axi_WDATA),
        .m_axi_wready(m12_exit_pipeline_m_axi_WREADY),
        .m_axi_wstrb(m12_exit_pipeline_m_axi_WSTRB),
        .m_axi_wvalid(m12_exit_pipeline_m_axi_WVALID),
        .s_axi_araddr(m12_sc2axi_M_AXI_ARADDR),
        .s_axi_arcache(m12_sc2axi_M_AXI_ARCACHE),
        .s_axi_arid(m12_sc2axi_M_AXI_ARID),
        .s_axi_arlen(m12_sc2axi_M_AXI_ARLEN),
        .s_axi_arlock(m12_sc2axi_M_AXI_ARLOCK),
        .s_axi_arprot(m12_sc2axi_M_AXI_ARPROT),
        .s_axi_arqos(m12_sc2axi_M_AXI_ARQOS),
        .s_axi_arready(m12_sc2axi_M_AXI_ARREADY),
        .s_axi_aruser(m12_sc2axi_M_AXI_ARUSER),
        .s_axi_arvalid(m12_sc2axi_M_AXI_ARVALID),
        .s_axi_awaddr(m12_sc2axi_M_AXI_AWADDR),
        .s_axi_awcache(m12_sc2axi_M_AXI_AWCACHE),
        .s_axi_awid(m12_sc2axi_M_AXI_AWID),
        .s_axi_awlen(m12_sc2axi_M_AXI_AWLEN),
        .s_axi_awlock(m12_sc2axi_M_AXI_AWLOCK),
        .s_axi_awprot(m12_sc2axi_M_AXI_AWPROT),
        .s_axi_awqos(m12_sc2axi_M_AXI_AWQOS),
        .s_axi_awready(m12_sc2axi_M_AXI_AWREADY),
        .s_axi_awuser(m12_sc2axi_M_AXI_AWUSER),
        .s_axi_awvalid(m12_sc2axi_M_AXI_AWVALID),
        .s_axi_bid(m12_sc2axi_M_AXI_BID),
        .s_axi_bready(m12_sc2axi_M_AXI_BREADY),
        .s_axi_bresp(m12_sc2axi_M_AXI_BRESP),
        .s_axi_buser(m12_sc2axi_M_AXI_BUSER),
        .s_axi_bvalid(m12_sc2axi_M_AXI_BVALID),
        .s_axi_rdata(m12_sc2axi_M_AXI_RDATA),
        .s_axi_rid(m12_sc2axi_M_AXI_RID),
        .s_axi_rlast(m12_sc2axi_M_AXI_RLAST),
        .s_axi_rready(m12_sc2axi_M_AXI_RREADY),
        .s_axi_rresp(m12_sc2axi_M_AXI_RRESP),
        .s_axi_ruser(m12_sc2axi_M_AXI_RUSER),
        .s_axi_rvalid(m12_sc2axi_M_AXI_RVALID),
        .s_axi_wdata(m12_sc2axi_M_AXI_WDATA),
        .s_axi_wlast(m12_sc2axi_M_AXI_WLAST),
        .s_axi_wready(m12_sc2axi_M_AXI_WREADY),
        .s_axi_wstrb(m12_sc2axi_M_AXI_WSTRB),
        .s_axi_wuser(m12_sc2axi_M_AXI_WUSER),
        .s_axi_wvalid(m12_sc2axi_M_AXI_WVALID));
  m12_nodes_imp_1RO9IKU m12_nodes
       (.M_SC_AR_info(m12_nodes_M_SC_AR_INFO),
        .M_SC_AR_payld(m12_nodes_M_SC_AR_PAYLD),
        .M_SC_AR_recv(m12_nodes_M_SC_AR_RECV),
        .M_SC_AR_req(m12_nodes_M_SC_AR_REQ),
        .M_SC_AR_send(m12_nodes_M_SC_AR_SEND),
        .M_SC_AW_info(m12_nodes_M_SC_AW_INFO),
        .M_SC_AW_payld(m12_nodes_M_SC_AW_PAYLD),
        .M_SC_AW_recv(m12_nodes_M_SC_AW_RECV),
        .M_SC_AW_req(m12_nodes_M_SC_AW_REQ),
        .M_SC_AW_send(m12_nodes_M_SC_AW_SEND),
        .M_SC_B_info(m12_nodes_M_SC_B_INFO),
        .M_SC_B_payld(m12_nodes_M_SC_B_PAYLD),
        .M_SC_B_recv(m12_nodes_M_SC_B_RECV),
        .M_SC_B_req(m12_nodes_M_SC_B_REQ),
        .M_SC_B_send(m12_nodes_M_SC_B_SEND),
        .M_SC_R_info(m12_nodes_M_SC_R_INFO),
        .M_SC_R_payld(m12_nodes_M_SC_R_PAYLD),
        .M_SC_R_recv(m12_nodes_M_SC_R_RECV),
        .M_SC_R_req(m12_nodes_M_SC_R_REQ),
        .M_SC_R_send(m12_nodes_M_SC_R_SEND),
        .M_SC_W_info(m12_nodes_M_SC_W_INFO),
        .M_SC_W_payld(m12_nodes_M_SC_W_PAYLD),
        .M_SC_W_recv(m12_nodes_M_SC_W_RECV),
        .M_SC_W_req(m12_nodes_M_SC_W_REQ),
        .M_SC_W_send(m12_nodes_M_SC_W_SEND),
        .S_SC_AR_info(S_SC_AR_14_INFO),
        .S_SC_AR_payld(S_SC_AR_14_PAYLD),
        .S_SC_AR_recv(S_SC_AR_14_RECV),
        .S_SC_AR_req(S_SC_AR_14_REQ),
        .S_SC_AR_send(S_SC_AR_14_SEND),
        .S_SC_AW_info(S_SC_AW_14_INFO),
        .S_SC_AW_payld(S_SC_AW_14_PAYLD),
        .S_SC_AW_recv(S_SC_AW_14_RECV),
        .S_SC_AW_req(S_SC_AW_14_REQ),
        .S_SC_AW_send(S_SC_AW_14_SEND),
        .S_SC_B_info(S_SC_B_14_INFO),
        .S_SC_B_payld(S_SC_B_14_PAYLD),
        .S_SC_B_recv(S_SC_B_14_RECV),
        .S_SC_B_req(S_SC_B_14_REQ),
        .S_SC_B_send(S_SC_B_14_SEND),
        .S_SC_R_info(S_SC_R_14_INFO),
        .S_SC_R_payld(S_SC_R_14_PAYLD),
        .S_SC_R_recv(S_SC_R_14_RECV),
        .S_SC_R_req(S_SC_R_14_REQ),
        .S_SC_R_send(S_SC_R_14_SEND),
        .S_SC_W_info(S_SC_W_14_INFO),
        .S_SC_W_payld(S_SC_W_14_PAYLD),
        .S_SC_W_recv(S_SC_W_14_RECV),
        .S_SC_W_req(S_SC_W_14_REQ),
        .S_SC_W_send(S_SC_W_14_SEND),
        .m_axi_aclk(clk_map_M12_ACLK),
        .m_axi_aresetn(m_axi_aresetn_12),
        .s_axi_aclk(clk_map_M00_ACLK),
        .s_axi_aresetn(clk_map_M00_ARESETN));
  bd_afc3_m12s2a_0 m12_sc2axi
       (.aclk(clk_map_M12_ACLK),
        .m_axi_araddr(m12_sc2axi_M_AXI_ARADDR),
        .m_axi_arcache(m12_sc2axi_M_AXI_ARCACHE),
        .m_axi_arid(m12_sc2axi_M_AXI_ARID),
        .m_axi_arlen(m12_sc2axi_M_AXI_ARLEN),
        .m_axi_arlock(m12_sc2axi_M_AXI_ARLOCK),
        .m_axi_arprot(m12_sc2axi_M_AXI_ARPROT),
        .m_axi_arqos(m12_sc2axi_M_AXI_ARQOS),
        .m_axi_arready(m12_sc2axi_M_AXI_ARREADY),
        .m_axi_aruser(m12_sc2axi_M_AXI_ARUSER),
        .m_axi_arvalid(m12_sc2axi_M_AXI_ARVALID),
        .m_axi_awaddr(m12_sc2axi_M_AXI_AWADDR),
        .m_axi_awcache(m12_sc2axi_M_AXI_AWCACHE),
        .m_axi_awid(m12_sc2axi_M_AXI_AWID),
        .m_axi_awlen(m12_sc2axi_M_AXI_AWLEN),
        .m_axi_awlock(m12_sc2axi_M_AXI_AWLOCK),
        .m_axi_awprot(m12_sc2axi_M_AXI_AWPROT),
        .m_axi_awqos(m12_sc2axi_M_AXI_AWQOS),
        .m_axi_awready(m12_sc2axi_M_AXI_AWREADY),
        .m_axi_awuser(m12_sc2axi_M_AXI_AWUSER),
        .m_axi_awvalid(m12_sc2axi_M_AXI_AWVALID),
        .m_axi_bid(m12_sc2axi_M_AXI_BID),
        .m_axi_bready(m12_sc2axi_M_AXI_BREADY),
        .m_axi_bresp(m12_sc2axi_M_AXI_BRESP),
        .m_axi_buser(m12_sc2axi_M_AXI_BUSER),
        .m_axi_bvalid(m12_sc2axi_M_AXI_BVALID),
        .m_axi_rdata(m12_sc2axi_M_AXI_RDATA),
        .m_axi_rid(m12_sc2axi_M_AXI_RID),
        .m_axi_rlast(m12_sc2axi_M_AXI_RLAST),
        .m_axi_rready(m12_sc2axi_M_AXI_RREADY),
        .m_axi_rresp(m12_sc2axi_M_AXI_RRESP),
        .m_axi_ruser(m12_sc2axi_M_AXI_RUSER),
        .m_axi_rvalid(m12_sc2axi_M_AXI_RVALID),
        .m_axi_wdata(m12_sc2axi_M_AXI_WDATA),
        .m_axi_wlast(m12_sc2axi_M_AXI_WLAST),
        .m_axi_wready(m12_sc2axi_M_AXI_WREADY),
        .m_axi_wstrb(m12_sc2axi_M_AXI_WSTRB),
        .m_axi_wuser(m12_sc2axi_M_AXI_WUSER),
        .m_axi_wvalid(m12_sc2axi_M_AXI_WVALID),
        .m_sc_b_info(S_SC_B_14_INFO),
        .m_sc_b_payld(S_SC_B_14_PAYLD),
        .m_sc_b_recv(S_SC_B_14_RECV),
        .m_sc_b_req(S_SC_B_14_REQ),
        .m_sc_b_send(S_SC_B_14_SEND),
        .m_sc_r_info(S_SC_R_14_INFO),
        .m_sc_r_payld(S_SC_R_14_PAYLD),
        .m_sc_r_recv(S_SC_R_14_RECV),
        .m_sc_r_req(S_SC_R_14_REQ),
        .m_sc_r_send(S_SC_R_14_SEND),
        .s_sc_ar_info(m12_nodes_M_SC_AR_INFO),
        .s_sc_ar_payld(m12_nodes_M_SC_AR_PAYLD[179:0]),
        .s_sc_ar_recv(m12_nodes_M_SC_AR_RECV),
        .s_sc_ar_req(m12_nodes_M_SC_AR_REQ),
        .s_sc_ar_send(m12_nodes_M_SC_AR_SEND),
        .s_sc_aw_info(m12_nodes_M_SC_AW_INFO),
        .s_sc_aw_payld(m12_nodes_M_SC_AW_PAYLD[179:0]),
        .s_sc_aw_recv(m12_nodes_M_SC_AW_RECV),
        .s_sc_aw_req(m12_nodes_M_SC_AW_REQ),
        .s_sc_aw_send(m12_nodes_M_SC_AW_SEND),
        .s_sc_w_info(m12_nodes_M_SC_W_INFO),
        .s_sc_w_payld(m12_nodes_M_SC_W_PAYLD[66:0]),
        .s_sc_w_recv(m12_nodes_M_SC_W_RECV),
        .s_sc_w_req(m12_nodes_M_SC_W_REQ),
        .s_sc_w_send(m12_nodes_M_SC_W_SEND));
  m13_exit_pipeline_imp_M5HYUR m13_exit_pipeline
       (.aclk(clk_map_M13_ACLK),
        .aresetn(m_axi_aresetn_13),
        .m_axi_araddr(m13_exit_pipeline_m_axi_ARADDR),
        .m_axi_arprot(m13_exit_pipeline_m_axi_ARPROT),
        .m_axi_arready(m13_exit_pipeline_m_axi_ARREADY),
        .m_axi_arvalid(m13_exit_pipeline_m_axi_ARVALID),
        .m_axi_awaddr(m13_exit_pipeline_m_axi_AWADDR),
        .m_axi_awprot(m13_exit_pipeline_m_axi_AWPROT),
        .m_axi_awready(m13_exit_pipeline_m_axi_AWREADY),
        .m_axi_awvalid(m13_exit_pipeline_m_axi_AWVALID),
        .m_axi_bready(m13_exit_pipeline_m_axi_BREADY),
        .m_axi_bresp(m13_exit_pipeline_m_axi_BRESP),
        .m_axi_bvalid(m13_exit_pipeline_m_axi_BVALID),
        .m_axi_rdata(m13_exit_pipeline_m_axi_RDATA),
        .m_axi_rready(m13_exit_pipeline_m_axi_RREADY),
        .m_axi_rresp(m13_exit_pipeline_m_axi_RRESP),
        .m_axi_rvalid(m13_exit_pipeline_m_axi_RVALID),
        .m_axi_wdata(m13_exit_pipeline_m_axi_WDATA),
        .m_axi_wready(m13_exit_pipeline_m_axi_WREADY),
        .m_axi_wstrb(m13_exit_pipeline_m_axi_WSTRB),
        .m_axi_wvalid(m13_exit_pipeline_m_axi_WVALID),
        .s_axi_araddr(m13_sc2axi_M_AXI_ARADDR),
        .s_axi_arcache(m13_sc2axi_M_AXI_ARCACHE),
        .s_axi_arid(m13_sc2axi_M_AXI_ARID),
        .s_axi_arlen(m13_sc2axi_M_AXI_ARLEN),
        .s_axi_arlock(m13_sc2axi_M_AXI_ARLOCK),
        .s_axi_arprot(m13_sc2axi_M_AXI_ARPROT),
        .s_axi_arqos(m13_sc2axi_M_AXI_ARQOS),
        .s_axi_arready(m13_sc2axi_M_AXI_ARREADY),
        .s_axi_aruser(m13_sc2axi_M_AXI_ARUSER),
        .s_axi_arvalid(m13_sc2axi_M_AXI_ARVALID),
        .s_axi_awaddr(m13_sc2axi_M_AXI_AWADDR),
        .s_axi_awcache(m13_sc2axi_M_AXI_AWCACHE),
        .s_axi_awid(m13_sc2axi_M_AXI_AWID),
        .s_axi_awlen(m13_sc2axi_M_AXI_AWLEN),
        .s_axi_awlock(m13_sc2axi_M_AXI_AWLOCK),
        .s_axi_awprot(m13_sc2axi_M_AXI_AWPROT),
        .s_axi_awqos(m13_sc2axi_M_AXI_AWQOS),
        .s_axi_awready(m13_sc2axi_M_AXI_AWREADY),
        .s_axi_awuser(m13_sc2axi_M_AXI_AWUSER),
        .s_axi_awvalid(m13_sc2axi_M_AXI_AWVALID),
        .s_axi_bid(m13_sc2axi_M_AXI_BID),
        .s_axi_bready(m13_sc2axi_M_AXI_BREADY),
        .s_axi_bresp(m13_sc2axi_M_AXI_BRESP),
        .s_axi_buser(m13_sc2axi_M_AXI_BUSER),
        .s_axi_bvalid(m13_sc2axi_M_AXI_BVALID),
        .s_axi_rdata(m13_sc2axi_M_AXI_RDATA),
        .s_axi_rid(m13_sc2axi_M_AXI_RID),
        .s_axi_rlast(m13_sc2axi_M_AXI_RLAST),
        .s_axi_rready(m13_sc2axi_M_AXI_RREADY),
        .s_axi_rresp(m13_sc2axi_M_AXI_RRESP),
        .s_axi_ruser(m13_sc2axi_M_AXI_RUSER),
        .s_axi_rvalid(m13_sc2axi_M_AXI_RVALID),
        .s_axi_wdata(m13_sc2axi_M_AXI_WDATA),
        .s_axi_wlast(m13_sc2axi_M_AXI_WLAST),
        .s_axi_wready(m13_sc2axi_M_AXI_WREADY),
        .s_axi_wstrb(m13_sc2axi_M_AXI_WSTRB),
        .s_axi_wuser(m13_sc2axi_M_AXI_WUSER),
        .s_axi_wvalid(m13_sc2axi_M_AXI_WVALID));
  m13_nodes_imp_XF60JC m13_nodes
       (.M_SC_AR_info(m13_nodes_M_SC_AR_INFO),
        .M_SC_AR_payld(m13_nodes_M_SC_AR_PAYLD),
        .M_SC_AR_recv(m13_nodes_M_SC_AR_RECV),
        .M_SC_AR_req(m13_nodes_M_SC_AR_REQ),
        .M_SC_AR_send(m13_nodes_M_SC_AR_SEND),
        .M_SC_AW_info(m13_nodes_M_SC_AW_INFO),
        .M_SC_AW_payld(m13_nodes_M_SC_AW_PAYLD),
        .M_SC_AW_recv(m13_nodes_M_SC_AW_RECV),
        .M_SC_AW_req(m13_nodes_M_SC_AW_REQ),
        .M_SC_AW_send(m13_nodes_M_SC_AW_SEND),
        .M_SC_B_info(m13_nodes_M_SC_B_INFO),
        .M_SC_B_payld(m13_nodes_M_SC_B_PAYLD),
        .M_SC_B_recv(m13_nodes_M_SC_B_RECV),
        .M_SC_B_req(m13_nodes_M_SC_B_REQ),
        .M_SC_B_send(m13_nodes_M_SC_B_SEND),
        .M_SC_R_info(m13_nodes_M_SC_R_INFO),
        .M_SC_R_payld(m13_nodes_M_SC_R_PAYLD),
        .M_SC_R_recv(m13_nodes_M_SC_R_RECV),
        .M_SC_R_req(m13_nodes_M_SC_R_REQ),
        .M_SC_R_send(m13_nodes_M_SC_R_SEND),
        .M_SC_W_info(m13_nodes_M_SC_W_INFO),
        .M_SC_W_payld(m13_nodes_M_SC_W_PAYLD),
        .M_SC_W_recv(m13_nodes_M_SC_W_RECV),
        .M_SC_W_req(m13_nodes_M_SC_W_REQ),
        .M_SC_W_send(m13_nodes_M_SC_W_SEND),
        .S_SC_AR_info(S_SC_AR_15_INFO),
        .S_SC_AR_payld(S_SC_AR_15_PAYLD),
        .S_SC_AR_recv(S_SC_AR_15_RECV),
        .S_SC_AR_req(S_SC_AR_15_REQ),
        .S_SC_AR_send(S_SC_AR_15_SEND),
        .S_SC_AW_info(S_SC_AW_15_INFO),
        .S_SC_AW_payld(S_SC_AW_15_PAYLD),
        .S_SC_AW_recv(S_SC_AW_15_RECV),
        .S_SC_AW_req(S_SC_AW_15_REQ),
        .S_SC_AW_send(S_SC_AW_15_SEND),
        .S_SC_B_info(S_SC_B_15_INFO),
        .S_SC_B_payld(S_SC_B_15_PAYLD),
        .S_SC_B_recv(S_SC_B_15_RECV),
        .S_SC_B_req(S_SC_B_15_REQ),
        .S_SC_B_send(S_SC_B_15_SEND),
        .S_SC_R_info(S_SC_R_15_INFO),
        .S_SC_R_payld(S_SC_R_15_PAYLD),
        .S_SC_R_recv(S_SC_R_15_RECV),
        .S_SC_R_req(S_SC_R_15_REQ),
        .S_SC_R_send(S_SC_R_15_SEND),
        .S_SC_W_info(S_SC_W_15_INFO),
        .S_SC_W_payld(S_SC_W_15_PAYLD),
        .S_SC_W_recv(S_SC_W_15_RECV),
        .S_SC_W_req(S_SC_W_15_REQ),
        .S_SC_W_send(S_SC_W_15_SEND),
        .m_axi_aclk(clk_map_M13_ACLK),
        .m_axi_aresetn(m_axi_aresetn_13),
        .s_axi_aclk(clk_map_M00_ACLK),
        .s_axi_aresetn(clk_map_M00_ARESETN));
  bd_afc3_m13s2a_0 m13_sc2axi
       (.aclk(clk_map_M13_ACLK),
        .m_axi_araddr(m13_sc2axi_M_AXI_ARADDR),
        .m_axi_arcache(m13_sc2axi_M_AXI_ARCACHE),
        .m_axi_arid(m13_sc2axi_M_AXI_ARID),
        .m_axi_arlen(m13_sc2axi_M_AXI_ARLEN),
        .m_axi_arlock(m13_sc2axi_M_AXI_ARLOCK),
        .m_axi_arprot(m13_sc2axi_M_AXI_ARPROT),
        .m_axi_arqos(m13_sc2axi_M_AXI_ARQOS),
        .m_axi_arready(m13_sc2axi_M_AXI_ARREADY),
        .m_axi_aruser(m13_sc2axi_M_AXI_ARUSER),
        .m_axi_arvalid(m13_sc2axi_M_AXI_ARVALID),
        .m_axi_awaddr(m13_sc2axi_M_AXI_AWADDR),
        .m_axi_awcache(m13_sc2axi_M_AXI_AWCACHE),
        .m_axi_awid(m13_sc2axi_M_AXI_AWID),
        .m_axi_awlen(m13_sc2axi_M_AXI_AWLEN),
        .m_axi_awlock(m13_sc2axi_M_AXI_AWLOCK),
        .m_axi_awprot(m13_sc2axi_M_AXI_AWPROT),
        .m_axi_awqos(m13_sc2axi_M_AXI_AWQOS),
        .m_axi_awready(m13_sc2axi_M_AXI_AWREADY),
        .m_axi_awuser(m13_sc2axi_M_AXI_AWUSER),
        .m_axi_awvalid(m13_sc2axi_M_AXI_AWVALID),
        .m_axi_bid(m13_sc2axi_M_AXI_BID),
        .m_axi_bready(m13_sc2axi_M_AXI_BREADY),
        .m_axi_bresp(m13_sc2axi_M_AXI_BRESP),
        .m_axi_buser(m13_sc2axi_M_AXI_BUSER),
        .m_axi_bvalid(m13_sc2axi_M_AXI_BVALID),
        .m_axi_rdata(m13_sc2axi_M_AXI_RDATA),
        .m_axi_rid(m13_sc2axi_M_AXI_RID),
        .m_axi_rlast(m13_sc2axi_M_AXI_RLAST),
        .m_axi_rready(m13_sc2axi_M_AXI_RREADY),
        .m_axi_rresp(m13_sc2axi_M_AXI_RRESP),
        .m_axi_ruser(m13_sc2axi_M_AXI_RUSER),
        .m_axi_rvalid(m13_sc2axi_M_AXI_RVALID),
        .m_axi_wdata(m13_sc2axi_M_AXI_WDATA),
        .m_axi_wlast(m13_sc2axi_M_AXI_WLAST),
        .m_axi_wready(m13_sc2axi_M_AXI_WREADY),
        .m_axi_wstrb(m13_sc2axi_M_AXI_WSTRB),
        .m_axi_wuser(m13_sc2axi_M_AXI_WUSER),
        .m_axi_wvalid(m13_sc2axi_M_AXI_WVALID),
        .m_sc_b_info(S_SC_B_15_INFO),
        .m_sc_b_payld(S_SC_B_15_PAYLD),
        .m_sc_b_recv(S_SC_B_15_RECV),
        .m_sc_b_req(S_SC_B_15_REQ),
        .m_sc_b_send(S_SC_B_15_SEND),
        .m_sc_r_info(S_SC_R_15_INFO),
        .m_sc_r_payld(S_SC_R_15_PAYLD),
        .m_sc_r_recv(S_SC_R_15_RECV),
        .m_sc_r_req(S_SC_R_15_REQ),
        .m_sc_r_send(S_SC_R_15_SEND),
        .s_sc_ar_info(m13_nodes_M_SC_AR_INFO),
        .s_sc_ar_payld(m13_nodes_M_SC_AR_PAYLD[179:0]),
        .s_sc_ar_recv(m13_nodes_M_SC_AR_RECV),
        .s_sc_ar_req(m13_nodes_M_SC_AR_REQ),
        .s_sc_ar_send(m13_nodes_M_SC_AR_SEND),
        .s_sc_aw_info(m13_nodes_M_SC_AW_INFO),
        .s_sc_aw_payld(m13_nodes_M_SC_AW_PAYLD[179:0]),
        .s_sc_aw_recv(m13_nodes_M_SC_AW_RECV),
        .s_sc_aw_req(m13_nodes_M_SC_AW_REQ),
        .s_sc_aw_send(m13_nodes_M_SC_AW_SEND),
        .s_sc_w_info(m13_nodes_M_SC_W_INFO),
        .s_sc_w_payld(m13_nodes_M_SC_W_PAYLD[66:0]),
        .s_sc_w_recv(m13_nodes_M_SC_W_RECV),
        .s_sc_w_req(m13_nodes_M_SC_W_REQ),
        .s_sc_w_send(m13_nodes_M_SC_W_SEND));
  m14_exit_pipeline_imp_BO2XGZ m14_exit_pipeline
       (.aclk(clk_map_M14_ACLK),
        .aresetn(m_axi_aresetn_14),
        .m_axi_araddr(m14_exit_pipeline_m_axi_ARADDR),
        .m_axi_arprot(m14_exit_pipeline_m_axi_ARPROT),
        .m_axi_arready(m14_exit_pipeline_m_axi_ARREADY),
        .m_axi_arvalid(m14_exit_pipeline_m_axi_ARVALID),
        .m_axi_awaddr(m14_exit_pipeline_m_axi_AWADDR),
        .m_axi_awprot(m14_exit_pipeline_m_axi_AWPROT),
        .m_axi_awready(m14_exit_pipeline_m_axi_AWREADY),
        .m_axi_awvalid(m14_exit_pipeline_m_axi_AWVALID),
        .m_axi_bready(m14_exit_pipeline_m_axi_BREADY),
        .m_axi_bresp(m14_exit_pipeline_m_axi_BRESP),
        .m_axi_bvalid(m14_exit_pipeline_m_axi_BVALID),
        .m_axi_rdata(m14_exit_pipeline_m_axi_RDATA),
        .m_axi_rready(m14_exit_pipeline_m_axi_RREADY),
        .m_axi_rresp(m14_exit_pipeline_m_axi_RRESP),
        .m_axi_rvalid(m14_exit_pipeline_m_axi_RVALID),
        .m_axi_wdata(m14_exit_pipeline_m_axi_WDATA),
        .m_axi_wready(m14_exit_pipeline_m_axi_WREADY),
        .m_axi_wstrb(m14_exit_pipeline_m_axi_WSTRB),
        .m_axi_wvalid(m14_exit_pipeline_m_axi_WVALID),
        .s_axi_araddr(m14_sc2axi_M_AXI_ARADDR),
        .s_axi_arcache(m14_sc2axi_M_AXI_ARCACHE),
        .s_axi_arid(m14_sc2axi_M_AXI_ARID),
        .s_axi_arlen(m14_sc2axi_M_AXI_ARLEN),
        .s_axi_arlock(m14_sc2axi_M_AXI_ARLOCK),
        .s_axi_arprot(m14_sc2axi_M_AXI_ARPROT),
        .s_axi_arqos(m14_sc2axi_M_AXI_ARQOS),
        .s_axi_arready(m14_sc2axi_M_AXI_ARREADY),
        .s_axi_aruser(m14_sc2axi_M_AXI_ARUSER),
        .s_axi_arvalid(m14_sc2axi_M_AXI_ARVALID),
        .s_axi_awaddr(m14_sc2axi_M_AXI_AWADDR),
        .s_axi_awcache(m14_sc2axi_M_AXI_AWCACHE),
        .s_axi_awid(m14_sc2axi_M_AXI_AWID),
        .s_axi_awlen(m14_sc2axi_M_AXI_AWLEN),
        .s_axi_awlock(m14_sc2axi_M_AXI_AWLOCK),
        .s_axi_awprot(m14_sc2axi_M_AXI_AWPROT),
        .s_axi_awqos(m14_sc2axi_M_AXI_AWQOS),
        .s_axi_awready(m14_sc2axi_M_AXI_AWREADY),
        .s_axi_awuser(m14_sc2axi_M_AXI_AWUSER),
        .s_axi_awvalid(m14_sc2axi_M_AXI_AWVALID),
        .s_axi_bid(m14_sc2axi_M_AXI_BID),
        .s_axi_bready(m14_sc2axi_M_AXI_BREADY),
        .s_axi_bresp(m14_sc2axi_M_AXI_BRESP),
        .s_axi_buser(m14_sc2axi_M_AXI_BUSER),
        .s_axi_bvalid(m14_sc2axi_M_AXI_BVALID),
        .s_axi_rdata(m14_sc2axi_M_AXI_RDATA),
        .s_axi_rid(m14_sc2axi_M_AXI_RID),
        .s_axi_rlast(m14_sc2axi_M_AXI_RLAST),
        .s_axi_rready(m14_sc2axi_M_AXI_RREADY),
        .s_axi_rresp(m14_sc2axi_M_AXI_RRESP),
        .s_axi_ruser(m14_sc2axi_M_AXI_RUSER),
        .s_axi_rvalid(m14_sc2axi_M_AXI_RVALID),
        .s_axi_wdata(m14_sc2axi_M_AXI_WDATA),
        .s_axi_wlast(m14_sc2axi_M_AXI_WLAST),
        .s_axi_wready(m14_sc2axi_M_AXI_WREADY),
        .s_axi_wstrb(m14_sc2axi_M_AXI_WSTRB),
        .s_axi_wuser(m14_sc2axi_M_AXI_WUSER),
        .s_axi_wvalid(m14_sc2axi_M_AXI_WVALID));
  m14_nodes_imp_893QIG m14_nodes
       (.M_SC_AR_info(m14_nodes_M_SC_AR_INFO),
        .M_SC_AR_payld(m14_nodes_M_SC_AR_PAYLD),
        .M_SC_AR_recv(m14_nodes_M_SC_AR_RECV),
        .M_SC_AR_req(m14_nodes_M_SC_AR_REQ),
        .M_SC_AR_send(m14_nodes_M_SC_AR_SEND),
        .M_SC_AW_info(m14_nodes_M_SC_AW_INFO),
        .M_SC_AW_payld(m14_nodes_M_SC_AW_PAYLD),
        .M_SC_AW_recv(m14_nodes_M_SC_AW_RECV),
        .M_SC_AW_req(m14_nodes_M_SC_AW_REQ),
        .M_SC_AW_send(m14_nodes_M_SC_AW_SEND),
        .M_SC_B_info(m14_nodes_M_SC_B_INFO),
        .M_SC_B_payld(m14_nodes_M_SC_B_PAYLD),
        .M_SC_B_recv(m14_nodes_M_SC_B_RECV),
        .M_SC_B_req(m14_nodes_M_SC_B_REQ),
        .M_SC_B_send(m14_nodes_M_SC_B_SEND),
        .M_SC_R_info(m14_nodes_M_SC_R_INFO),
        .M_SC_R_payld(m14_nodes_M_SC_R_PAYLD),
        .M_SC_R_recv(m14_nodes_M_SC_R_RECV),
        .M_SC_R_req(m14_nodes_M_SC_R_REQ),
        .M_SC_R_send(m14_nodes_M_SC_R_SEND),
        .M_SC_W_info(m14_nodes_M_SC_W_INFO),
        .M_SC_W_payld(m14_nodes_M_SC_W_PAYLD),
        .M_SC_W_recv(m14_nodes_M_SC_W_RECV),
        .M_SC_W_req(m14_nodes_M_SC_W_REQ),
        .M_SC_W_send(m14_nodes_M_SC_W_SEND),
        .S_SC_AR_info(S_SC_AR_16_INFO),
        .S_SC_AR_payld(S_SC_AR_16_PAYLD),
        .S_SC_AR_recv(S_SC_AR_16_RECV),
        .S_SC_AR_req(S_SC_AR_16_REQ),
        .S_SC_AR_send(S_SC_AR_16_SEND),
        .S_SC_AW_info(S_SC_AW_16_INFO),
        .S_SC_AW_payld(S_SC_AW_16_PAYLD),
        .S_SC_AW_recv(S_SC_AW_16_RECV),
        .S_SC_AW_req(S_SC_AW_16_REQ),
        .S_SC_AW_send(S_SC_AW_16_SEND),
        .S_SC_B_info(S_SC_B_16_INFO),
        .S_SC_B_payld(S_SC_B_16_PAYLD),
        .S_SC_B_recv(S_SC_B_16_RECV),
        .S_SC_B_req(S_SC_B_16_REQ),
        .S_SC_B_send(S_SC_B_16_SEND),
        .S_SC_R_info(S_SC_R_16_INFO),
        .S_SC_R_payld(S_SC_R_16_PAYLD),
        .S_SC_R_recv(S_SC_R_16_RECV),
        .S_SC_R_req(S_SC_R_16_REQ),
        .S_SC_R_send(S_SC_R_16_SEND),
        .S_SC_W_info(S_SC_W_16_INFO),
        .S_SC_W_payld(S_SC_W_16_PAYLD),
        .S_SC_W_recv(S_SC_W_16_RECV),
        .S_SC_W_req(S_SC_W_16_REQ),
        .S_SC_W_send(S_SC_W_16_SEND),
        .m_axi_aclk(clk_map_M14_ACLK),
        .m_axi_aresetn(m_axi_aresetn_14),
        .s_axi_aclk(clk_map_M00_ACLK),
        .s_axi_aresetn(clk_map_M00_ARESETN));
  bd_afc3_m14s2a_0 m14_sc2axi
       (.aclk(clk_map_M14_ACLK),
        .m_axi_araddr(m14_sc2axi_M_AXI_ARADDR),
        .m_axi_arcache(m14_sc2axi_M_AXI_ARCACHE),
        .m_axi_arid(m14_sc2axi_M_AXI_ARID),
        .m_axi_arlen(m14_sc2axi_M_AXI_ARLEN),
        .m_axi_arlock(m14_sc2axi_M_AXI_ARLOCK),
        .m_axi_arprot(m14_sc2axi_M_AXI_ARPROT),
        .m_axi_arqos(m14_sc2axi_M_AXI_ARQOS),
        .m_axi_arready(m14_sc2axi_M_AXI_ARREADY),
        .m_axi_aruser(m14_sc2axi_M_AXI_ARUSER),
        .m_axi_arvalid(m14_sc2axi_M_AXI_ARVALID),
        .m_axi_awaddr(m14_sc2axi_M_AXI_AWADDR),
        .m_axi_awcache(m14_sc2axi_M_AXI_AWCACHE),
        .m_axi_awid(m14_sc2axi_M_AXI_AWID),
        .m_axi_awlen(m14_sc2axi_M_AXI_AWLEN),
        .m_axi_awlock(m14_sc2axi_M_AXI_AWLOCK),
        .m_axi_awprot(m14_sc2axi_M_AXI_AWPROT),
        .m_axi_awqos(m14_sc2axi_M_AXI_AWQOS),
        .m_axi_awready(m14_sc2axi_M_AXI_AWREADY),
        .m_axi_awuser(m14_sc2axi_M_AXI_AWUSER),
        .m_axi_awvalid(m14_sc2axi_M_AXI_AWVALID),
        .m_axi_bid(m14_sc2axi_M_AXI_BID),
        .m_axi_bready(m14_sc2axi_M_AXI_BREADY),
        .m_axi_bresp(m14_sc2axi_M_AXI_BRESP),
        .m_axi_buser(m14_sc2axi_M_AXI_BUSER),
        .m_axi_bvalid(m14_sc2axi_M_AXI_BVALID),
        .m_axi_rdata(m14_sc2axi_M_AXI_RDATA),
        .m_axi_rid(m14_sc2axi_M_AXI_RID),
        .m_axi_rlast(m14_sc2axi_M_AXI_RLAST),
        .m_axi_rready(m14_sc2axi_M_AXI_RREADY),
        .m_axi_rresp(m14_sc2axi_M_AXI_RRESP),
        .m_axi_ruser(m14_sc2axi_M_AXI_RUSER),
        .m_axi_rvalid(m14_sc2axi_M_AXI_RVALID),
        .m_axi_wdata(m14_sc2axi_M_AXI_WDATA),
        .m_axi_wlast(m14_sc2axi_M_AXI_WLAST),
        .m_axi_wready(m14_sc2axi_M_AXI_WREADY),
        .m_axi_wstrb(m14_sc2axi_M_AXI_WSTRB),
        .m_axi_wuser(m14_sc2axi_M_AXI_WUSER),
        .m_axi_wvalid(m14_sc2axi_M_AXI_WVALID),
        .m_sc_b_info(S_SC_B_16_INFO),
        .m_sc_b_payld(S_SC_B_16_PAYLD),
        .m_sc_b_recv(S_SC_B_16_RECV),
        .m_sc_b_req(S_SC_B_16_REQ),
        .m_sc_b_send(S_SC_B_16_SEND),
        .m_sc_r_info(S_SC_R_16_INFO),
        .m_sc_r_payld(S_SC_R_16_PAYLD),
        .m_sc_r_recv(S_SC_R_16_RECV),
        .m_sc_r_req(S_SC_R_16_REQ),
        .m_sc_r_send(S_SC_R_16_SEND),
        .s_sc_ar_info(m14_nodes_M_SC_AR_INFO),
        .s_sc_ar_payld(m14_nodes_M_SC_AR_PAYLD[179:0]),
        .s_sc_ar_recv(m14_nodes_M_SC_AR_RECV),
        .s_sc_ar_req(m14_nodes_M_SC_AR_REQ),
        .s_sc_ar_send(m14_nodes_M_SC_AR_SEND),
        .s_sc_aw_info(m14_nodes_M_SC_AW_INFO),
        .s_sc_aw_payld(m14_nodes_M_SC_AW_PAYLD[179:0]),
        .s_sc_aw_recv(m14_nodes_M_SC_AW_RECV),
        .s_sc_aw_req(m14_nodes_M_SC_AW_REQ),
        .s_sc_aw_send(m14_nodes_M_SC_AW_SEND),
        .s_sc_w_info(m14_nodes_M_SC_W_INFO),
        .s_sc_w_payld(m14_nodes_M_SC_W_PAYLD[66:0]),
        .s_sc_w_recv(m14_nodes_M_SC_W_RECV),
        .s_sc_w_req(m14_nodes_M_SC_W_REQ),
        .s_sc_w_send(m14_nodes_M_SC_W_SEND));
  m15_exit_pipeline_imp_GYT4C3 m15_exit_pipeline
       (.aclk(clk_map_M15_ACLK),
        .aresetn(m_axi_aresetn_15),
        .m_axi_araddr(m15_exit_pipeline_m_axi_ARADDR),
        .m_axi_arprot(m15_exit_pipeline_m_axi_ARPROT),
        .m_axi_arready(m15_exit_pipeline_m_axi_ARREADY),
        .m_axi_arvalid(m15_exit_pipeline_m_axi_ARVALID),
        .m_axi_awaddr(m15_exit_pipeline_m_axi_AWADDR),
        .m_axi_awprot(m15_exit_pipeline_m_axi_AWPROT),
        .m_axi_awready(m15_exit_pipeline_m_axi_AWREADY),
        .m_axi_awvalid(m15_exit_pipeline_m_axi_AWVALID),
        .m_axi_bready(m15_exit_pipeline_m_axi_BREADY),
        .m_axi_bresp(m15_exit_pipeline_m_axi_BRESP),
        .m_axi_bvalid(m15_exit_pipeline_m_axi_BVALID),
        .m_axi_rdata(m15_exit_pipeline_m_axi_RDATA),
        .m_axi_rready(m15_exit_pipeline_m_axi_RREADY),
        .m_axi_rresp(m15_exit_pipeline_m_axi_RRESP),
        .m_axi_rvalid(m15_exit_pipeline_m_axi_RVALID),
        .m_axi_wdata(m15_exit_pipeline_m_axi_WDATA),
        .m_axi_wready(m15_exit_pipeline_m_axi_WREADY),
        .m_axi_wstrb(m15_exit_pipeline_m_axi_WSTRB),
        .m_axi_wvalid(m15_exit_pipeline_m_axi_WVALID),
        .s_axi_araddr(m15_sc2axi_M_AXI_ARADDR),
        .s_axi_arcache(m15_sc2axi_M_AXI_ARCACHE),
        .s_axi_arid(m15_sc2axi_M_AXI_ARID),
        .s_axi_arlen(m15_sc2axi_M_AXI_ARLEN),
        .s_axi_arlock(m15_sc2axi_M_AXI_ARLOCK),
        .s_axi_arprot(m15_sc2axi_M_AXI_ARPROT),
        .s_axi_arqos(m15_sc2axi_M_AXI_ARQOS),
        .s_axi_arready(m15_sc2axi_M_AXI_ARREADY),
        .s_axi_aruser(m15_sc2axi_M_AXI_ARUSER),
        .s_axi_arvalid(m15_sc2axi_M_AXI_ARVALID),
        .s_axi_awaddr(m15_sc2axi_M_AXI_AWADDR),
        .s_axi_awcache(m15_sc2axi_M_AXI_AWCACHE),
        .s_axi_awid(m15_sc2axi_M_AXI_AWID),
        .s_axi_awlen(m15_sc2axi_M_AXI_AWLEN),
        .s_axi_awlock(m15_sc2axi_M_AXI_AWLOCK),
        .s_axi_awprot(m15_sc2axi_M_AXI_AWPROT),
        .s_axi_awqos(m15_sc2axi_M_AXI_AWQOS),
        .s_axi_awready(m15_sc2axi_M_AXI_AWREADY),
        .s_axi_awuser(m15_sc2axi_M_AXI_AWUSER),
        .s_axi_awvalid(m15_sc2axi_M_AXI_AWVALID),
        .s_axi_bid(m15_sc2axi_M_AXI_BID),
        .s_axi_bready(m15_sc2axi_M_AXI_BREADY),
        .s_axi_bresp(m15_sc2axi_M_AXI_BRESP),
        .s_axi_buser(m15_sc2axi_M_AXI_BUSER),
        .s_axi_bvalid(m15_sc2axi_M_AXI_BVALID),
        .s_axi_rdata(m15_sc2axi_M_AXI_RDATA),
        .s_axi_rid(m15_sc2axi_M_AXI_RID),
        .s_axi_rlast(m15_sc2axi_M_AXI_RLAST),
        .s_axi_rready(m15_sc2axi_M_AXI_RREADY),
        .s_axi_rresp(m15_sc2axi_M_AXI_RRESP),
        .s_axi_ruser(m15_sc2axi_M_AXI_RUSER),
        .s_axi_rvalid(m15_sc2axi_M_AXI_RVALID),
        .s_axi_wdata(m15_sc2axi_M_AXI_WDATA),
        .s_axi_wlast(m15_sc2axi_M_AXI_WLAST),
        .s_axi_wready(m15_sc2axi_M_AXI_WREADY),
        .s_axi_wstrb(m15_sc2axi_M_AXI_WSTRB),
        .s_axi_wuser(m15_sc2axi_M_AXI_WUSER),
        .s_axi_wvalid(m15_sc2axi_M_AXI_WVALID));
  m15_nodes_imp_ZPHG26 m15_nodes
       (.M_SC_AR_info(m15_nodes_M_SC_AR_INFO),
        .M_SC_AR_payld(m15_nodes_M_SC_AR_PAYLD),
        .M_SC_AR_recv(m15_nodes_M_SC_AR_RECV),
        .M_SC_AR_req(m15_nodes_M_SC_AR_REQ),
        .M_SC_AR_send(m15_nodes_M_SC_AR_SEND),
        .M_SC_AW_info(m15_nodes_M_SC_AW_INFO),
        .M_SC_AW_payld(m15_nodes_M_SC_AW_PAYLD),
        .M_SC_AW_recv(m15_nodes_M_SC_AW_RECV),
        .M_SC_AW_req(m15_nodes_M_SC_AW_REQ),
        .M_SC_AW_send(m15_nodes_M_SC_AW_SEND),
        .M_SC_B_info(m15_nodes_M_SC_B_INFO),
        .M_SC_B_payld(m15_nodes_M_SC_B_PAYLD),
        .M_SC_B_recv(m15_nodes_M_SC_B_RECV),
        .M_SC_B_req(m15_nodes_M_SC_B_REQ),
        .M_SC_B_send(m15_nodes_M_SC_B_SEND),
        .M_SC_R_info(m15_nodes_M_SC_R_INFO),
        .M_SC_R_payld(m15_nodes_M_SC_R_PAYLD),
        .M_SC_R_recv(m15_nodes_M_SC_R_RECV),
        .M_SC_R_req(m15_nodes_M_SC_R_REQ),
        .M_SC_R_send(m15_nodes_M_SC_R_SEND),
        .M_SC_W_info(m15_nodes_M_SC_W_INFO),
        .M_SC_W_payld(m15_nodes_M_SC_W_PAYLD),
        .M_SC_W_recv(m15_nodes_M_SC_W_RECV),
        .M_SC_W_req(m15_nodes_M_SC_W_REQ),
        .M_SC_W_send(m15_nodes_M_SC_W_SEND),
        .S_SC_AR_info(S_SC_AR_17_INFO),
        .S_SC_AR_payld(S_SC_AR_17_PAYLD),
        .S_SC_AR_recv(S_SC_AR_17_RECV),
        .S_SC_AR_req(S_SC_AR_17_REQ),
        .S_SC_AR_send(S_SC_AR_17_SEND),
        .S_SC_AW_info(S_SC_AW_17_INFO),
        .S_SC_AW_payld(S_SC_AW_17_PAYLD),
        .S_SC_AW_recv(S_SC_AW_17_RECV),
        .S_SC_AW_req(S_SC_AW_17_REQ),
        .S_SC_AW_send(S_SC_AW_17_SEND),
        .S_SC_B_info(S_SC_B_17_INFO),
        .S_SC_B_payld(S_SC_B_17_PAYLD),
        .S_SC_B_recv(S_SC_B_17_RECV),
        .S_SC_B_req(S_SC_B_17_REQ),
        .S_SC_B_send(S_SC_B_17_SEND),
        .S_SC_R_info(S_SC_R_17_INFO),
        .S_SC_R_payld(S_SC_R_17_PAYLD),
        .S_SC_R_recv(S_SC_R_17_RECV),
        .S_SC_R_req(S_SC_R_17_REQ),
        .S_SC_R_send(S_SC_R_17_SEND),
        .S_SC_W_info(S_SC_W_17_INFO),
        .S_SC_W_payld(S_SC_W_17_PAYLD),
        .S_SC_W_recv(S_SC_W_17_RECV),
        .S_SC_W_req(S_SC_W_17_REQ),
        .S_SC_W_send(S_SC_W_17_SEND),
        .m_axi_aclk(clk_map_M15_ACLK),
        .m_axi_aresetn(m_axi_aresetn_15),
        .s_axi_aclk(clk_map_M00_ACLK),
        .s_axi_aresetn(clk_map_M00_ARESETN));
  bd_afc3_m15s2a_0 m15_sc2axi
       (.aclk(clk_map_M15_ACLK),
        .m_axi_araddr(m15_sc2axi_M_AXI_ARADDR),
        .m_axi_arcache(m15_sc2axi_M_AXI_ARCACHE),
        .m_axi_arid(m15_sc2axi_M_AXI_ARID),
        .m_axi_arlen(m15_sc2axi_M_AXI_ARLEN),
        .m_axi_arlock(m15_sc2axi_M_AXI_ARLOCK),
        .m_axi_arprot(m15_sc2axi_M_AXI_ARPROT),
        .m_axi_arqos(m15_sc2axi_M_AXI_ARQOS),
        .m_axi_arready(m15_sc2axi_M_AXI_ARREADY),
        .m_axi_aruser(m15_sc2axi_M_AXI_ARUSER),
        .m_axi_arvalid(m15_sc2axi_M_AXI_ARVALID),
        .m_axi_awaddr(m15_sc2axi_M_AXI_AWADDR),
        .m_axi_awcache(m15_sc2axi_M_AXI_AWCACHE),
        .m_axi_awid(m15_sc2axi_M_AXI_AWID),
        .m_axi_awlen(m15_sc2axi_M_AXI_AWLEN),
        .m_axi_awlock(m15_sc2axi_M_AXI_AWLOCK),
        .m_axi_awprot(m15_sc2axi_M_AXI_AWPROT),
        .m_axi_awqos(m15_sc2axi_M_AXI_AWQOS),
        .m_axi_awready(m15_sc2axi_M_AXI_AWREADY),
        .m_axi_awuser(m15_sc2axi_M_AXI_AWUSER),
        .m_axi_awvalid(m15_sc2axi_M_AXI_AWVALID),
        .m_axi_bid(m15_sc2axi_M_AXI_BID),
        .m_axi_bready(m15_sc2axi_M_AXI_BREADY),
        .m_axi_bresp(m15_sc2axi_M_AXI_BRESP),
        .m_axi_buser(m15_sc2axi_M_AXI_BUSER),
        .m_axi_bvalid(m15_sc2axi_M_AXI_BVALID),
        .m_axi_rdata(m15_sc2axi_M_AXI_RDATA),
        .m_axi_rid(m15_sc2axi_M_AXI_RID),
        .m_axi_rlast(m15_sc2axi_M_AXI_RLAST),
        .m_axi_rready(m15_sc2axi_M_AXI_RREADY),
        .m_axi_rresp(m15_sc2axi_M_AXI_RRESP),
        .m_axi_ruser(m15_sc2axi_M_AXI_RUSER),
        .m_axi_rvalid(m15_sc2axi_M_AXI_RVALID),
        .m_axi_wdata(m15_sc2axi_M_AXI_WDATA),
        .m_axi_wlast(m15_sc2axi_M_AXI_WLAST),
        .m_axi_wready(m15_sc2axi_M_AXI_WREADY),
        .m_axi_wstrb(m15_sc2axi_M_AXI_WSTRB),
        .m_axi_wuser(m15_sc2axi_M_AXI_WUSER),
        .m_axi_wvalid(m15_sc2axi_M_AXI_WVALID),
        .m_sc_b_info(S_SC_B_17_INFO),
        .m_sc_b_payld(S_SC_B_17_PAYLD),
        .m_sc_b_recv(S_SC_B_17_RECV),
        .m_sc_b_req(S_SC_B_17_REQ),
        .m_sc_b_send(S_SC_B_17_SEND),
        .m_sc_r_info(S_SC_R_17_INFO),
        .m_sc_r_payld(S_SC_R_17_PAYLD),
        .m_sc_r_recv(S_SC_R_17_RECV),
        .m_sc_r_req(S_SC_R_17_REQ),
        .m_sc_r_send(S_SC_R_17_SEND),
        .s_sc_ar_info(m15_nodes_M_SC_AR_INFO),
        .s_sc_ar_payld(m15_nodes_M_SC_AR_PAYLD[179:0]),
        .s_sc_ar_recv(m15_nodes_M_SC_AR_RECV),
        .s_sc_ar_req(m15_nodes_M_SC_AR_REQ),
        .s_sc_ar_send(m15_nodes_M_SC_AR_SEND),
        .s_sc_aw_info(m15_nodes_M_SC_AW_INFO),
        .s_sc_aw_payld(m15_nodes_M_SC_AW_PAYLD[179:0]),
        .s_sc_aw_recv(m15_nodes_M_SC_AW_RECV),
        .s_sc_aw_req(m15_nodes_M_SC_AW_REQ),
        .s_sc_aw_send(m15_nodes_M_SC_AW_SEND),
        .s_sc_w_info(m15_nodes_M_SC_W_INFO),
        .s_sc_w_payld(m15_nodes_M_SC_W_PAYLD[66:0]),
        .s_sc_w_recv(m15_nodes_M_SC_W_RECV),
        .s_sc_w_req(m15_nodes_M_SC_W_REQ),
        .s_sc_w_send(m15_nodes_M_SC_W_SEND));
  m16_exit_pipeline_imp_17NQER m16_exit_pipeline
       (.aclk(clk_map_M16_ACLK),
        .aresetn(m_axi_aresetn_16),
        .m_axi_araddr(m16_exit_pipeline_m_axi_ARADDR),
        .m_axi_arprot(m16_exit_pipeline_m_axi_ARPROT),
        .m_axi_arready(m16_exit_pipeline_m_axi_ARREADY),
        .m_axi_arvalid(m16_exit_pipeline_m_axi_ARVALID),
        .m_axi_awaddr(m16_exit_pipeline_m_axi_AWADDR),
        .m_axi_awprot(m16_exit_pipeline_m_axi_AWPROT),
        .m_axi_awready(m16_exit_pipeline_m_axi_AWREADY),
        .m_axi_awvalid(m16_exit_pipeline_m_axi_AWVALID),
        .m_axi_bready(m16_exit_pipeline_m_axi_BREADY),
        .m_axi_bresp(m16_exit_pipeline_m_axi_BRESP),
        .m_axi_bvalid(m16_exit_pipeline_m_axi_BVALID),
        .m_axi_rdata(m16_exit_pipeline_m_axi_RDATA),
        .m_axi_rready(m16_exit_pipeline_m_axi_RREADY),
        .m_axi_rresp(m16_exit_pipeline_m_axi_RRESP),
        .m_axi_rvalid(m16_exit_pipeline_m_axi_RVALID),
        .m_axi_wdata(m16_exit_pipeline_m_axi_WDATA),
        .m_axi_wready(m16_exit_pipeline_m_axi_WREADY),
        .m_axi_wstrb(m16_exit_pipeline_m_axi_WSTRB),
        .m_axi_wvalid(m16_exit_pipeline_m_axi_WVALID),
        .s_axi_araddr(m16_sc2axi_M_AXI_ARADDR),
        .s_axi_arcache(m16_sc2axi_M_AXI_ARCACHE),
        .s_axi_arid(m16_sc2axi_M_AXI_ARID),
        .s_axi_arlen(m16_sc2axi_M_AXI_ARLEN),
        .s_axi_arlock(m16_sc2axi_M_AXI_ARLOCK),
        .s_axi_arprot(m16_sc2axi_M_AXI_ARPROT),
        .s_axi_arqos(m16_sc2axi_M_AXI_ARQOS),
        .s_axi_arready(m16_sc2axi_M_AXI_ARREADY),
        .s_axi_aruser(m16_sc2axi_M_AXI_ARUSER),
        .s_axi_arvalid(m16_sc2axi_M_AXI_ARVALID),
        .s_axi_awaddr(m16_sc2axi_M_AXI_AWADDR),
        .s_axi_awcache(m16_sc2axi_M_AXI_AWCACHE),
        .s_axi_awid(m16_sc2axi_M_AXI_AWID),
        .s_axi_awlen(m16_sc2axi_M_AXI_AWLEN),
        .s_axi_awlock(m16_sc2axi_M_AXI_AWLOCK),
        .s_axi_awprot(m16_sc2axi_M_AXI_AWPROT),
        .s_axi_awqos(m16_sc2axi_M_AXI_AWQOS),
        .s_axi_awready(m16_sc2axi_M_AXI_AWREADY),
        .s_axi_awuser(m16_sc2axi_M_AXI_AWUSER),
        .s_axi_awvalid(m16_sc2axi_M_AXI_AWVALID),
        .s_axi_bid(m16_sc2axi_M_AXI_BID),
        .s_axi_bready(m16_sc2axi_M_AXI_BREADY),
        .s_axi_bresp(m16_sc2axi_M_AXI_BRESP),
        .s_axi_buser(m16_sc2axi_M_AXI_BUSER),
        .s_axi_bvalid(m16_sc2axi_M_AXI_BVALID),
        .s_axi_rdata(m16_sc2axi_M_AXI_RDATA),
        .s_axi_rid(m16_sc2axi_M_AXI_RID),
        .s_axi_rlast(m16_sc2axi_M_AXI_RLAST),
        .s_axi_rready(m16_sc2axi_M_AXI_RREADY),
        .s_axi_rresp(m16_sc2axi_M_AXI_RRESP),
        .s_axi_ruser(m16_sc2axi_M_AXI_RUSER),
        .s_axi_rvalid(m16_sc2axi_M_AXI_RVALID),
        .s_axi_wdata(m16_sc2axi_M_AXI_WDATA),
        .s_axi_wlast(m16_sc2axi_M_AXI_WLAST),
        .s_axi_wready(m16_sc2axi_M_AXI_WREADY),
        .s_axi_wstrb(m16_sc2axi_M_AXI_WSTRB),
        .s_axi_wuser(m16_sc2axi_M_AXI_WUSER),
        .s_axi_wvalid(m16_sc2axi_M_AXI_WVALID));
  m16_nodes_imp_1Y5AUDX m16_nodes
       (.M_SC_AR_info(m16_nodes_M_SC_AR_INFO),
        .M_SC_AR_payld(m16_nodes_M_SC_AR_PAYLD),
        .M_SC_AR_recv(m16_nodes_M_SC_AR_RECV),
        .M_SC_AR_req(m16_nodes_M_SC_AR_REQ),
        .M_SC_AR_send(m16_nodes_M_SC_AR_SEND),
        .M_SC_AW_info(m16_nodes_M_SC_AW_INFO),
        .M_SC_AW_payld(m16_nodes_M_SC_AW_PAYLD),
        .M_SC_AW_recv(m16_nodes_M_SC_AW_RECV),
        .M_SC_AW_req(m16_nodes_M_SC_AW_REQ),
        .M_SC_AW_send(m16_nodes_M_SC_AW_SEND),
        .M_SC_B_info(m16_nodes_M_SC_B_INFO),
        .M_SC_B_payld(m16_nodes_M_SC_B_PAYLD),
        .M_SC_B_recv(m16_nodes_M_SC_B_RECV),
        .M_SC_B_req(m16_nodes_M_SC_B_REQ),
        .M_SC_B_send(m16_nodes_M_SC_B_SEND),
        .M_SC_R_info(m16_nodes_M_SC_R_INFO),
        .M_SC_R_payld(m16_nodes_M_SC_R_PAYLD),
        .M_SC_R_recv(m16_nodes_M_SC_R_RECV),
        .M_SC_R_req(m16_nodes_M_SC_R_REQ),
        .M_SC_R_send(m16_nodes_M_SC_R_SEND),
        .M_SC_W_info(m16_nodes_M_SC_W_INFO),
        .M_SC_W_payld(m16_nodes_M_SC_W_PAYLD),
        .M_SC_W_recv(m16_nodes_M_SC_W_RECV),
        .M_SC_W_req(m16_nodes_M_SC_W_REQ),
        .M_SC_W_send(m16_nodes_M_SC_W_SEND),
        .S_SC_AR_info(S_SC_AR_18_INFO),
        .S_SC_AR_payld(S_SC_AR_18_PAYLD),
        .S_SC_AR_recv(S_SC_AR_18_RECV),
        .S_SC_AR_req(S_SC_AR_18_REQ),
        .S_SC_AR_send(S_SC_AR_18_SEND),
        .S_SC_AW_info(S_SC_AW_18_INFO),
        .S_SC_AW_payld(S_SC_AW_18_PAYLD),
        .S_SC_AW_recv(S_SC_AW_18_RECV),
        .S_SC_AW_req(S_SC_AW_18_REQ),
        .S_SC_AW_send(S_SC_AW_18_SEND),
        .S_SC_B_info(S_SC_B_18_INFO),
        .S_SC_B_payld(S_SC_B_18_PAYLD),
        .S_SC_B_recv(S_SC_B_18_RECV),
        .S_SC_B_req(S_SC_B_18_REQ),
        .S_SC_B_send(S_SC_B_18_SEND),
        .S_SC_R_info(S_SC_R_18_INFO),
        .S_SC_R_payld(S_SC_R_18_PAYLD),
        .S_SC_R_recv(S_SC_R_18_RECV),
        .S_SC_R_req(S_SC_R_18_REQ),
        .S_SC_R_send(S_SC_R_18_SEND),
        .S_SC_W_info(S_SC_W_18_INFO),
        .S_SC_W_payld(S_SC_W_18_PAYLD),
        .S_SC_W_recv(S_SC_W_18_RECV),
        .S_SC_W_req(S_SC_W_18_REQ),
        .S_SC_W_send(S_SC_W_18_SEND),
        .m_axi_aclk(clk_map_M16_ACLK),
        .m_axi_aresetn(m_axi_aresetn_16),
        .s_axi_aclk(clk_map_M00_ACLK),
        .s_axi_aresetn(clk_map_M00_ARESETN));
  bd_afc3_m16s2a_0 m16_sc2axi
       (.aclk(clk_map_M16_ACLK),
        .m_axi_araddr(m16_sc2axi_M_AXI_ARADDR),
        .m_axi_arcache(m16_sc2axi_M_AXI_ARCACHE),
        .m_axi_arid(m16_sc2axi_M_AXI_ARID),
        .m_axi_arlen(m16_sc2axi_M_AXI_ARLEN),
        .m_axi_arlock(m16_sc2axi_M_AXI_ARLOCK),
        .m_axi_arprot(m16_sc2axi_M_AXI_ARPROT),
        .m_axi_arqos(m16_sc2axi_M_AXI_ARQOS),
        .m_axi_arready(m16_sc2axi_M_AXI_ARREADY),
        .m_axi_aruser(m16_sc2axi_M_AXI_ARUSER),
        .m_axi_arvalid(m16_sc2axi_M_AXI_ARVALID),
        .m_axi_awaddr(m16_sc2axi_M_AXI_AWADDR),
        .m_axi_awcache(m16_sc2axi_M_AXI_AWCACHE),
        .m_axi_awid(m16_sc2axi_M_AXI_AWID),
        .m_axi_awlen(m16_sc2axi_M_AXI_AWLEN),
        .m_axi_awlock(m16_sc2axi_M_AXI_AWLOCK),
        .m_axi_awprot(m16_sc2axi_M_AXI_AWPROT),
        .m_axi_awqos(m16_sc2axi_M_AXI_AWQOS),
        .m_axi_awready(m16_sc2axi_M_AXI_AWREADY),
        .m_axi_awuser(m16_sc2axi_M_AXI_AWUSER),
        .m_axi_awvalid(m16_sc2axi_M_AXI_AWVALID),
        .m_axi_bid(m16_sc2axi_M_AXI_BID),
        .m_axi_bready(m16_sc2axi_M_AXI_BREADY),
        .m_axi_bresp(m16_sc2axi_M_AXI_BRESP),
        .m_axi_buser(m16_sc2axi_M_AXI_BUSER),
        .m_axi_bvalid(m16_sc2axi_M_AXI_BVALID),
        .m_axi_rdata(m16_sc2axi_M_AXI_RDATA),
        .m_axi_rid(m16_sc2axi_M_AXI_RID),
        .m_axi_rlast(m16_sc2axi_M_AXI_RLAST),
        .m_axi_rready(m16_sc2axi_M_AXI_RREADY),
        .m_axi_rresp(m16_sc2axi_M_AXI_RRESP),
        .m_axi_ruser(m16_sc2axi_M_AXI_RUSER),
        .m_axi_rvalid(m16_sc2axi_M_AXI_RVALID),
        .m_axi_wdata(m16_sc2axi_M_AXI_WDATA),
        .m_axi_wlast(m16_sc2axi_M_AXI_WLAST),
        .m_axi_wready(m16_sc2axi_M_AXI_WREADY),
        .m_axi_wstrb(m16_sc2axi_M_AXI_WSTRB),
        .m_axi_wuser(m16_sc2axi_M_AXI_WUSER),
        .m_axi_wvalid(m16_sc2axi_M_AXI_WVALID),
        .m_sc_b_info(S_SC_B_18_INFO),
        .m_sc_b_payld(S_SC_B_18_PAYLD),
        .m_sc_b_recv(S_SC_B_18_RECV),
        .m_sc_b_req(S_SC_B_18_REQ),
        .m_sc_b_send(S_SC_B_18_SEND),
        .m_sc_r_info(S_SC_R_18_INFO),
        .m_sc_r_payld(S_SC_R_18_PAYLD),
        .m_sc_r_recv(S_SC_R_18_RECV),
        .m_sc_r_req(S_SC_R_18_REQ),
        .m_sc_r_send(S_SC_R_18_SEND),
        .s_sc_ar_info(m16_nodes_M_SC_AR_INFO),
        .s_sc_ar_payld(m16_nodes_M_SC_AR_PAYLD[179:0]),
        .s_sc_ar_recv(m16_nodes_M_SC_AR_RECV),
        .s_sc_ar_req(m16_nodes_M_SC_AR_REQ),
        .s_sc_ar_send(m16_nodes_M_SC_AR_SEND),
        .s_sc_aw_info(m16_nodes_M_SC_AW_INFO),
        .s_sc_aw_payld(m16_nodes_M_SC_AW_PAYLD[179:0]),
        .s_sc_aw_recv(m16_nodes_M_SC_AW_RECV),
        .s_sc_aw_req(m16_nodes_M_SC_AW_REQ),
        .s_sc_aw_send(m16_nodes_M_SC_AW_SEND),
        .s_sc_w_info(m16_nodes_M_SC_W_INFO),
        .s_sc_w_payld(m16_nodes_M_SC_W_PAYLD[66:0]),
        .s_sc_w_recv(m16_nodes_M_SC_W_RECV),
        .s_sc_w_req(m16_nodes_M_SC_W_REQ),
        .s_sc_w_send(m16_nodes_M_SC_W_SEND));
  m17_exit_pipeline_imp_5EEUNN m17_exit_pipeline
       (.aclk(clk_map_M17_ACLK),
        .aresetn(m_axi_aresetn_17),
        .m_axi_araddr(m17_exit_pipeline_m_axi_ARADDR),
        .m_axi_arprot(m17_exit_pipeline_m_axi_ARPROT),
        .m_axi_arready(m17_exit_pipeline_m_axi_ARREADY),
        .m_axi_arvalid(m17_exit_pipeline_m_axi_ARVALID),
        .m_axi_awaddr(m17_exit_pipeline_m_axi_AWADDR),
        .m_axi_awprot(m17_exit_pipeline_m_axi_AWPROT),
        .m_axi_awready(m17_exit_pipeline_m_axi_AWREADY),
        .m_axi_awvalid(m17_exit_pipeline_m_axi_AWVALID),
        .m_axi_bready(m17_exit_pipeline_m_axi_BREADY),
        .m_axi_bresp(m17_exit_pipeline_m_axi_BRESP),
        .m_axi_bvalid(m17_exit_pipeline_m_axi_BVALID),
        .m_axi_rdata(m17_exit_pipeline_m_axi_RDATA),
        .m_axi_rready(m17_exit_pipeline_m_axi_RREADY),
        .m_axi_rresp(m17_exit_pipeline_m_axi_RRESP),
        .m_axi_rvalid(m17_exit_pipeline_m_axi_RVALID),
        .m_axi_wdata(m17_exit_pipeline_m_axi_WDATA),
        .m_axi_wready(m17_exit_pipeline_m_axi_WREADY),
        .m_axi_wstrb(m17_exit_pipeline_m_axi_WSTRB),
        .m_axi_wvalid(m17_exit_pipeline_m_axi_WVALID),
        .s_axi_araddr(m17_sc2axi_M_AXI_ARADDR),
        .s_axi_arcache(m17_sc2axi_M_AXI_ARCACHE),
        .s_axi_arid(m17_sc2axi_M_AXI_ARID),
        .s_axi_arlen(m17_sc2axi_M_AXI_ARLEN),
        .s_axi_arlock(m17_sc2axi_M_AXI_ARLOCK),
        .s_axi_arprot(m17_sc2axi_M_AXI_ARPROT),
        .s_axi_arqos(m17_sc2axi_M_AXI_ARQOS),
        .s_axi_arready(m17_sc2axi_M_AXI_ARREADY),
        .s_axi_aruser(m17_sc2axi_M_AXI_ARUSER),
        .s_axi_arvalid(m17_sc2axi_M_AXI_ARVALID),
        .s_axi_awaddr(m17_sc2axi_M_AXI_AWADDR),
        .s_axi_awcache(m17_sc2axi_M_AXI_AWCACHE),
        .s_axi_awid(m17_sc2axi_M_AXI_AWID),
        .s_axi_awlen(m17_sc2axi_M_AXI_AWLEN),
        .s_axi_awlock(m17_sc2axi_M_AXI_AWLOCK),
        .s_axi_awprot(m17_sc2axi_M_AXI_AWPROT),
        .s_axi_awqos(m17_sc2axi_M_AXI_AWQOS),
        .s_axi_awready(m17_sc2axi_M_AXI_AWREADY),
        .s_axi_awuser(m17_sc2axi_M_AXI_AWUSER),
        .s_axi_awvalid(m17_sc2axi_M_AXI_AWVALID),
        .s_axi_bid(m17_sc2axi_M_AXI_BID),
        .s_axi_bready(m17_sc2axi_M_AXI_BREADY),
        .s_axi_bresp(m17_sc2axi_M_AXI_BRESP),
        .s_axi_buser(m17_sc2axi_M_AXI_BUSER),
        .s_axi_bvalid(m17_sc2axi_M_AXI_BVALID),
        .s_axi_rdata(m17_sc2axi_M_AXI_RDATA),
        .s_axi_rid(m17_sc2axi_M_AXI_RID),
        .s_axi_rlast(m17_sc2axi_M_AXI_RLAST),
        .s_axi_rready(m17_sc2axi_M_AXI_RREADY),
        .s_axi_rresp(m17_sc2axi_M_AXI_RRESP),
        .s_axi_ruser(m17_sc2axi_M_AXI_RUSER),
        .s_axi_rvalid(m17_sc2axi_M_AXI_RVALID),
        .s_axi_wdata(m17_sc2axi_M_AXI_WDATA),
        .s_axi_wlast(m17_sc2axi_M_AXI_WLAST),
        .s_axi_wready(m17_sc2axi_M_AXI_WREADY),
        .s_axi_wstrb(m17_sc2axi_M_AXI_WSTRB),
        .s_axi_wuser(m17_sc2axi_M_AXI_WUSER),
        .s_axi_wvalid(m17_sc2axi_M_AXI_WVALID));
  m17_nodes_imp_R5MBDV m17_nodes
       (.M_SC_AR_info(m17_nodes_M_SC_AR_INFO),
        .M_SC_AR_payld(m17_nodes_M_SC_AR_PAYLD),
        .M_SC_AR_recv(m17_nodes_M_SC_AR_RECV),
        .M_SC_AR_req(m17_nodes_M_SC_AR_REQ),
        .M_SC_AR_send(m17_nodes_M_SC_AR_SEND),
        .M_SC_AW_info(m17_nodes_M_SC_AW_INFO),
        .M_SC_AW_payld(m17_nodes_M_SC_AW_PAYLD),
        .M_SC_AW_recv(m17_nodes_M_SC_AW_RECV),
        .M_SC_AW_req(m17_nodes_M_SC_AW_REQ),
        .M_SC_AW_send(m17_nodes_M_SC_AW_SEND),
        .M_SC_B_info(m17_nodes_M_SC_B_INFO),
        .M_SC_B_payld(m17_nodes_M_SC_B_PAYLD),
        .M_SC_B_recv(m17_nodes_M_SC_B_RECV),
        .M_SC_B_req(m17_nodes_M_SC_B_REQ),
        .M_SC_B_send(m17_nodes_M_SC_B_SEND),
        .M_SC_R_info(m17_nodes_M_SC_R_INFO),
        .M_SC_R_payld(m17_nodes_M_SC_R_PAYLD),
        .M_SC_R_recv(m17_nodes_M_SC_R_RECV),
        .M_SC_R_req(m17_nodes_M_SC_R_REQ),
        .M_SC_R_send(m17_nodes_M_SC_R_SEND),
        .M_SC_W_info(m17_nodes_M_SC_W_INFO),
        .M_SC_W_payld(m17_nodes_M_SC_W_PAYLD),
        .M_SC_W_recv(m17_nodes_M_SC_W_RECV),
        .M_SC_W_req(m17_nodes_M_SC_W_REQ),
        .M_SC_W_send(m17_nodes_M_SC_W_SEND),
        .S_SC_AR_info(S_SC_AR_19_INFO),
        .S_SC_AR_payld(S_SC_AR_19_PAYLD),
        .S_SC_AR_recv(S_SC_AR_19_RECV),
        .S_SC_AR_req(S_SC_AR_19_REQ),
        .S_SC_AR_send(S_SC_AR_19_SEND),
        .S_SC_AW_info(S_SC_AW_19_INFO),
        .S_SC_AW_payld(S_SC_AW_19_PAYLD),
        .S_SC_AW_recv(S_SC_AW_19_RECV),
        .S_SC_AW_req(S_SC_AW_19_REQ),
        .S_SC_AW_send(S_SC_AW_19_SEND),
        .S_SC_B_info(S_SC_B_19_INFO),
        .S_SC_B_payld(S_SC_B_19_PAYLD),
        .S_SC_B_recv(S_SC_B_19_RECV),
        .S_SC_B_req(S_SC_B_19_REQ),
        .S_SC_B_send(S_SC_B_19_SEND),
        .S_SC_R_info(S_SC_R_19_INFO),
        .S_SC_R_payld(S_SC_R_19_PAYLD),
        .S_SC_R_recv(S_SC_R_19_RECV),
        .S_SC_R_req(S_SC_R_19_REQ),
        .S_SC_R_send(S_SC_R_19_SEND),
        .S_SC_W_info(S_SC_W_19_INFO),
        .S_SC_W_payld(S_SC_W_19_PAYLD),
        .S_SC_W_recv(S_SC_W_19_RECV),
        .S_SC_W_req(S_SC_W_19_REQ),
        .S_SC_W_send(S_SC_W_19_SEND),
        .m_axi_aclk(clk_map_M17_ACLK),
        .m_axi_aresetn(m_axi_aresetn_17),
        .s_axi_aclk(clk_map_M00_ACLK),
        .s_axi_aresetn(clk_map_M00_ARESETN));
  bd_afc3_m17s2a_0 m17_sc2axi
       (.aclk(clk_map_M17_ACLK),
        .m_axi_araddr(m17_sc2axi_M_AXI_ARADDR),
        .m_axi_arcache(m17_sc2axi_M_AXI_ARCACHE),
        .m_axi_arid(m17_sc2axi_M_AXI_ARID),
        .m_axi_arlen(m17_sc2axi_M_AXI_ARLEN),
        .m_axi_arlock(m17_sc2axi_M_AXI_ARLOCK),
        .m_axi_arprot(m17_sc2axi_M_AXI_ARPROT),
        .m_axi_arqos(m17_sc2axi_M_AXI_ARQOS),
        .m_axi_arready(m17_sc2axi_M_AXI_ARREADY),
        .m_axi_aruser(m17_sc2axi_M_AXI_ARUSER),
        .m_axi_arvalid(m17_sc2axi_M_AXI_ARVALID),
        .m_axi_awaddr(m17_sc2axi_M_AXI_AWADDR),
        .m_axi_awcache(m17_sc2axi_M_AXI_AWCACHE),
        .m_axi_awid(m17_sc2axi_M_AXI_AWID),
        .m_axi_awlen(m17_sc2axi_M_AXI_AWLEN),
        .m_axi_awlock(m17_sc2axi_M_AXI_AWLOCK),
        .m_axi_awprot(m17_sc2axi_M_AXI_AWPROT),
        .m_axi_awqos(m17_sc2axi_M_AXI_AWQOS),
        .m_axi_awready(m17_sc2axi_M_AXI_AWREADY),
        .m_axi_awuser(m17_sc2axi_M_AXI_AWUSER),
        .m_axi_awvalid(m17_sc2axi_M_AXI_AWVALID),
        .m_axi_bid(m17_sc2axi_M_AXI_BID),
        .m_axi_bready(m17_sc2axi_M_AXI_BREADY),
        .m_axi_bresp(m17_sc2axi_M_AXI_BRESP),
        .m_axi_buser(m17_sc2axi_M_AXI_BUSER),
        .m_axi_bvalid(m17_sc2axi_M_AXI_BVALID),
        .m_axi_rdata(m17_sc2axi_M_AXI_RDATA),
        .m_axi_rid(m17_sc2axi_M_AXI_RID),
        .m_axi_rlast(m17_sc2axi_M_AXI_RLAST),
        .m_axi_rready(m17_sc2axi_M_AXI_RREADY),
        .m_axi_rresp(m17_sc2axi_M_AXI_RRESP),
        .m_axi_ruser(m17_sc2axi_M_AXI_RUSER),
        .m_axi_rvalid(m17_sc2axi_M_AXI_RVALID),
        .m_axi_wdata(m17_sc2axi_M_AXI_WDATA),
        .m_axi_wlast(m17_sc2axi_M_AXI_WLAST),
        .m_axi_wready(m17_sc2axi_M_AXI_WREADY),
        .m_axi_wstrb(m17_sc2axi_M_AXI_WSTRB),
        .m_axi_wuser(m17_sc2axi_M_AXI_WUSER),
        .m_axi_wvalid(m17_sc2axi_M_AXI_WVALID),
        .m_sc_b_info(S_SC_B_19_INFO),
        .m_sc_b_payld(S_SC_B_19_PAYLD),
        .m_sc_b_recv(S_SC_B_19_RECV),
        .m_sc_b_req(S_SC_B_19_REQ),
        .m_sc_b_send(S_SC_B_19_SEND),
        .m_sc_r_info(S_SC_R_19_INFO),
        .m_sc_r_payld(S_SC_R_19_PAYLD),
        .m_sc_r_recv(S_SC_R_19_RECV),
        .m_sc_r_req(S_SC_R_19_REQ),
        .m_sc_r_send(S_SC_R_19_SEND),
        .s_sc_ar_info(m17_nodes_M_SC_AR_INFO),
        .s_sc_ar_payld(m17_nodes_M_SC_AR_PAYLD[179:0]),
        .s_sc_ar_recv(m17_nodes_M_SC_AR_RECV),
        .s_sc_ar_req(m17_nodes_M_SC_AR_REQ),
        .s_sc_ar_send(m17_nodes_M_SC_AR_SEND),
        .s_sc_aw_info(m17_nodes_M_SC_AW_INFO),
        .s_sc_aw_payld(m17_nodes_M_SC_AW_PAYLD[179:0]),
        .s_sc_aw_recv(m17_nodes_M_SC_AW_RECV),
        .s_sc_aw_req(m17_nodes_M_SC_AW_REQ),
        .s_sc_aw_send(m17_nodes_M_SC_AW_SEND),
        .s_sc_w_info(m17_nodes_M_SC_W_INFO),
        .s_sc_w_payld(m17_nodes_M_SC_W_PAYLD[66:0]),
        .s_sc_w_recv(m17_nodes_M_SC_W_RECV),
        .s_sc_w_req(m17_nodes_M_SC_W_REQ),
        .s_sc_w_send(m17_nodes_M_SC_W_SEND));
  m18_exit_pipeline_imp_1LOW837 m18_exit_pipeline
       (.aclk(clk_map_M18_ACLK),
        .aresetn(m_axi_aresetn_18),
        .m_axi_araddr(m18_exit_pipeline_m_axi_ARADDR),
        .m_axi_arprot(m18_exit_pipeline_m_axi_ARPROT),
        .m_axi_arready(m18_exit_pipeline_m_axi_ARREADY),
        .m_axi_arvalid(m18_exit_pipeline_m_axi_ARVALID),
        .m_axi_awaddr(m18_exit_pipeline_m_axi_AWADDR),
        .m_axi_awprot(m18_exit_pipeline_m_axi_AWPROT),
        .m_axi_awready(m18_exit_pipeline_m_axi_AWREADY),
        .m_axi_awvalid(m18_exit_pipeline_m_axi_AWVALID),
        .m_axi_bready(m18_exit_pipeline_m_axi_BREADY),
        .m_axi_bresp(m18_exit_pipeline_m_axi_BRESP),
        .m_axi_bvalid(m18_exit_pipeline_m_axi_BVALID),
        .m_axi_rdata(m18_exit_pipeline_m_axi_RDATA),
        .m_axi_rready(m18_exit_pipeline_m_axi_RREADY),
        .m_axi_rresp(m18_exit_pipeline_m_axi_RRESP),
        .m_axi_rvalid(m18_exit_pipeline_m_axi_RVALID),
        .m_axi_wdata(m18_exit_pipeline_m_axi_WDATA),
        .m_axi_wready(m18_exit_pipeline_m_axi_WREADY),
        .m_axi_wstrb(m18_exit_pipeline_m_axi_WSTRB),
        .m_axi_wvalid(m18_exit_pipeline_m_axi_WVALID),
        .s_axi_araddr(m18_sc2axi_M_AXI_ARADDR),
        .s_axi_arcache(m18_sc2axi_M_AXI_ARCACHE),
        .s_axi_arid(m18_sc2axi_M_AXI_ARID),
        .s_axi_arlen(m18_sc2axi_M_AXI_ARLEN),
        .s_axi_arlock(m18_sc2axi_M_AXI_ARLOCK),
        .s_axi_arprot(m18_sc2axi_M_AXI_ARPROT),
        .s_axi_arqos(m18_sc2axi_M_AXI_ARQOS),
        .s_axi_arready(m18_sc2axi_M_AXI_ARREADY),
        .s_axi_aruser(m18_sc2axi_M_AXI_ARUSER),
        .s_axi_arvalid(m18_sc2axi_M_AXI_ARVALID),
        .s_axi_awaddr(m18_sc2axi_M_AXI_AWADDR),
        .s_axi_awcache(m18_sc2axi_M_AXI_AWCACHE),
        .s_axi_awid(m18_sc2axi_M_AXI_AWID),
        .s_axi_awlen(m18_sc2axi_M_AXI_AWLEN),
        .s_axi_awlock(m18_sc2axi_M_AXI_AWLOCK),
        .s_axi_awprot(m18_sc2axi_M_AXI_AWPROT),
        .s_axi_awqos(m18_sc2axi_M_AXI_AWQOS),
        .s_axi_awready(m18_sc2axi_M_AXI_AWREADY),
        .s_axi_awuser(m18_sc2axi_M_AXI_AWUSER),
        .s_axi_awvalid(m18_sc2axi_M_AXI_AWVALID),
        .s_axi_bid(m18_sc2axi_M_AXI_BID),
        .s_axi_bready(m18_sc2axi_M_AXI_BREADY),
        .s_axi_bresp(m18_sc2axi_M_AXI_BRESP),
        .s_axi_buser(m18_sc2axi_M_AXI_BUSER),
        .s_axi_bvalid(m18_sc2axi_M_AXI_BVALID),
        .s_axi_rdata(m18_sc2axi_M_AXI_RDATA),
        .s_axi_rid(m18_sc2axi_M_AXI_RID),
        .s_axi_rlast(m18_sc2axi_M_AXI_RLAST),
        .s_axi_rready(m18_sc2axi_M_AXI_RREADY),
        .s_axi_rresp(m18_sc2axi_M_AXI_RRESP),
        .s_axi_ruser(m18_sc2axi_M_AXI_RUSER),
        .s_axi_rvalid(m18_sc2axi_M_AXI_RVALID),
        .s_axi_wdata(m18_sc2axi_M_AXI_WDATA),
        .s_axi_wlast(m18_sc2axi_M_AXI_WLAST),
        .s_axi_wready(m18_sc2axi_M_AXI_WREADY),
        .s_axi_wstrb(m18_sc2axi_M_AXI_WSTRB),
        .s_axi_wuser(m18_sc2axi_M_AXI_WUSER),
        .s_axi_wvalid(m18_sc2axi_M_AXI_WVALID));
  m18_nodes_imp_FCC91X m18_nodes
       (.M_SC_AR_info(m18_nodes_M_SC_AR_INFO),
        .M_SC_AR_payld(m18_nodes_M_SC_AR_PAYLD),
        .M_SC_AR_recv(m18_nodes_M_SC_AR_RECV),
        .M_SC_AR_req(m18_nodes_M_SC_AR_REQ),
        .M_SC_AR_send(m18_nodes_M_SC_AR_SEND),
        .M_SC_AW_info(m18_nodes_M_SC_AW_INFO),
        .M_SC_AW_payld(m18_nodes_M_SC_AW_PAYLD),
        .M_SC_AW_recv(m18_nodes_M_SC_AW_RECV),
        .M_SC_AW_req(m18_nodes_M_SC_AW_REQ),
        .M_SC_AW_send(m18_nodes_M_SC_AW_SEND),
        .M_SC_B_info(m18_nodes_M_SC_B_INFO),
        .M_SC_B_payld(m18_nodes_M_SC_B_PAYLD),
        .M_SC_B_recv(m18_nodes_M_SC_B_RECV),
        .M_SC_B_req(m18_nodes_M_SC_B_REQ),
        .M_SC_B_send(m18_nodes_M_SC_B_SEND),
        .M_SC_R_info(m18_nodes_M_SC_R_INFO),
        .M_SC_R_payld(m18_nodes_M_SC_R_PAYLD),
        .M_SC_R_recv(m18_nodes_M_SC_R_RECV),
        .M_SC_R_req(m18_nodes_M_SC_R_REQ),
        .M_SC_R_send(m18_nodes_M_SC_R_SEND),
        .M_SC_W_info(m18_nodes_M_SC_W_INFO),
        .M_SC_W_payld(m18_nodes_M_SC_W_PAYLD),
        .M_SC_W_recv(m18_nodes_M_SC_W_RECV),
        .M_SC_W_req(m18_nodes_M_SC_W_REQ),
        .M_SC_W_send(m18_nodes_M_SC_W_SEND),
        .S_SC_AR_info(S_SC_AR_20_INFO),
        .S_SC_AR_payld(S_SC_AR_20_PAYLD),
        .S_SC_AR_recv(S_SC_AR_20_RECV),
        .S_SC_AR_req(S_SC_AR_20_REQ),
        .S_SC_AR_send(S_SC_AR_20_SEND),
        .S_SC_AW_info(S_SC_AW_20_INFO),
        .S_SC_AW_payld(S_SC_AW_20_PAYLD),
        .S_SC_AW_recv(S_SC_AW_20_RECV),
        .S_SC_AW_req(S_SC_AW_20_REQ),
        .S_SC_AW_send(S_SC_AW_20_SEND),
        .S_SC_B_info(S_SC_B_20_INFO),
        .S_SC_B_payld(S_SC_B_20_PAYLD),
        .S_SC_B_recv(S_SC_B_20_RECV),
        .S_SC_B_req(S_SC_B_20_REQ),
        .S_SC_B_send(S_SC_B_20_SEND),
        .S_SC_R_info(S_SC_R_20_INFO),
        .S_SC_R_payld(S_SC_R_20_PAYLD),
        .S_SC_R_recv(S_SC_R_20_RECV),
        .S_SC_R_req(S_SC_R_20_REQ),
        .S_SC_R_send(S_SC_R_20_SEND),
        .S_SC_W_info(S_SC_W_20_INFO),
        .S_SC_W_payld(S_SC_W_20_PAYLD),
        .S_SC_W_recv(S_SC_W_20_RECV),
        .S_SC_W_req(S_SC_W_20_REQ),
        .S_SC_W_send(S_SC_W_20_SEND),
        .m_axi_aclk(clk_map_M18_ACLK),
        .m_axi_aresetn(m_axi_aresetn_18),
        .s_axi_aclk(clk_map_M00_ACLK),
        .s_axi_aresetn(clk_map_M00_ARESETN));
  bd_afc3_m18s2a_0 m18_sc2axi
       (.aclk(clk_map_M18_ACLK),
        .m_axi_araddr(m18_sc2axi_M_AXI_ARADDR),
        .m_axi_arcache(m18_sc2axi_M_AXI_ARCACHE),
        .m_axi_arid(m18_sc2axi_M_AXI_ARID),
        .m_axi_arlen(m18_sc2axi_M_AXI_ARLEN),
        .m_axi_arlock(m18_sc2axi_M_AXI_ARLOCK),
        .m_axi_arprot(m18_sc2axi_M_AXI_ARPROT),
        .m_axi_arqos(m18_sc2axi_M_AXI_ARQOS),
        .m_axi_arready(m18_sc2axi_M_AXI_ARREADY),
        .m_axi_aruser(m18_sc2axi_M_AXI_ARUSER),
        .m_axi_arvalid(m18_sc2axi_M_AXI_ARVALID),
        .m_axi_awaddr(m18_sc2axi_M_AXI_AWADDR),
        .m_axi_awcache(m18_sc2axi_M_AXI_AWCACHE),
        .m_axi_awid(m18_sc2axi_M_AXI_AWID),
        .m_axi_awlen(m18_sc2axi_M_AXI_AWLEN),
        .m_axi_awlock(m18_sc2axi_M_AXI_AWLOCK),
        .m_axi_awprot(m18_sc2axi_M_AXI_AWPROT),
        .m_axi_awqos(m18_sc2axi_M_AXI_AWQOS),
        .m_axi_awready(m18_sc2axi_M_AXI_AWREADY),
        .m_axi_awuser(m18_sc2axi_M_AXI_AWUSER),
        .m_axi_awvalid(m18_sc2axi_M_AXI_AWVALID),
        .m_axi_bid(m18_sc2axi_M_AXI_BID),
        .m_axi_bready(m18_sc2axi_M_AXI_BREADY),
        .m_axi_bresp(m18_sc2axi_M_AXI_BRESP),
        .m_axi_buser(m18_sc2axi_M_AXI_BUSER),
        .m_axi_bvalid(m18_sc2axi_M_AXI_BVALID),
        .m_axi_rdata(m18_sc2axi_M_AXI_RDATA),
        .m_axi_rid(m18_sc2axi_M_AXI_RID),
        .m_axi_rlast(m18_sc2axi_M_AXI_RLAST),
        .m_axi_rready(m18_sc2axi_M_AXI_RREADY),
        .m_axi_rresp(m18_sc2axi_M_AXI_RRESP),
        .m_axi_ruser(m18_sc2axi_M_AXI_RUSER),
        .m_axi_rvalid(m18_sc2axi_M_AXI_RVALID),
        .m_axi_wdata(m18_sc2axi_M_AXI_WDATA),
        .m_axi_wlast(m18_sc2axi_M_AXI_WLAST),
        .m_axi_wready(m18_sc2axi_M_AXI_WREADY),
        .m_axi_wstrb(m18_sc2axi_M_AXI_WSTRB),
        .m_axi_wuser(m18_sc2axi_M_AXI_WUSER),
        .m_axi_wvalid(m18_sc2axi_M_AXI_WVALID),
        .m_sc_b_info(S_SC_B_20_INFO),
        .m_sc_b_payld(S_SC_B_20_PAYLD),
        .m_sc_b_recv(S_SC_B_20_RECV),
        .m_sc_b_req(S_SC_B_20_REQ),
        .m_sc_b_send(S_SC_B_20_SEND),
        .m_sc_r_info(S_SC_R_20_INFO),
        .m_sc_r_payld(S_SC_R_20_PAYLD),
        .m_sc_r_recv(S_SC_R_20_RECV),
        .m_sc_r_req(S_SC_R_20_REQ),
        .m_sc_r_send(S_SC_R_20_SEND),
        .s_sc_ar_info(m18_nodes_M_SC_AR_INFO),
        .s_sc_ar_payld(m18_nodes_M_SC_AR_PAYLD[179:0]),
        .s_sc_ar_recv(m18_nodes_M_SC_AR_RECV),
        .s_sc_ar_req(m18_nodes_M_SC_AR_REQ),
        .s_sc_ar_send(m18_nodes_M_SC_AR_SEND),
        .s_sc_aw_info(m18_nodes_M_SC_AW_INFO),
        .s_sc_aw_payld(m18_nodes_M_SC_AW_PAYLD[179:0]),
        .s_sc_aw_recv(m18_nodes_M_SC_AW_RECV),
        .s_sc_aw_req(m18_nodes_M_SC_AW_REQ),
        .s_sc_aw_send(m18_nodes_M_SC_AW_SEND),
        .s_sc_w_info(m18_nodes_M_SC_W_INFO),
        .s_sc_w_payld(m18_nodes_M_SC_W_PAYLD[66:0]),
        .s_sc_w_recv(m18_nodes_M_SC_W_RECV),
        .s_sc_w_req(m18_nodes_M_SC_W_REQ),
        .s_sc_w_send(m18_nodes_M_SC_W_SEND));
  m19_exit_pipeline_imp_1O58VUB m19_exit_pipeline
       (.aclk(clk_map_M19_ACLK),
        .aresetn(m_axi_aresetn_19),
        .m_axi_araddr(m19_exit_pipeline_m_axi_ARADDR),
        .m_axi_arprot(m19_exit_pipeline_m_axi_ARPROT),
        .m_axi_arready(m19_exit_pipeline_m_axi_ARREADY),
        .m_axi_arvalid(m19_exit_pipeline_m_axi_ARVALID),
        .m_axi_awaddr(m19_exit_pipeline_m_axi_AWADDR),
        .m_axi_awprot(m19_exit_pipeline_m_axi_AWPROT),
        .m_axi_awready(m19_exit_pipeline_m_axi_AWREADY),
        .m_axi_awvalid(m19_exit_pipeline_m_axi_AWVALID),
        .m_axi_bready(m19_exit_pipeline_m_axi_BREADY),
        .m_axi_bresp(m19_exit_pipeline_m_axi_BRESP),
        .m_axi_bvalid(m19_exit_pipeline_m_axi_BVALID),
        .m_axi_rdata(m19_exit_pipeline_m_axi_RDATA),
        .m_axi_rready(m19_exit_pipeline_m_axi_RREADY),
        .m_axi_rresp(m19_exit_pipeline_m_axi_RRESP),
        .m_axi_rvalid(m19_exit_pipeline_m_axi_RVALID),
        .m_axi_wdata(m19_exit_pipeline_m_axi_WDATA),
        .m_axi_wready(m19_exit_pipeline_m_axi_WREADY),
        .m_axi_wstrb(m19_exit_pipeline_m_axi_WSTRB),
        .m_axi_wvalid(m19_exit_pipeline_m_axi_WVALID),
        .s_axi_araddr(m19_sc2axi_M_AXI_ARADDR),
        .s_axi_arcache(m19_sc2axi_M_AXI_ARCACHE),
        .s_axi_arid(m19_sc2axi_M_AXI_ARID),
        .s_axi_arlen(m19_sc2axi_M_AXI_ARLEN),
        .s_axi_arlock(m19_sc2axi_M_AXI_ARLOCK),
        .s_axi_arprot(m19_sc2axi_M_AXI_ARPROT),
        .s_axi_arqos(m19_sc2axi_M_AXI_ARQOS),
        .s_axi_arready(m19_sc2axi_M_AXI_ARREADY),
        .s_axi_aruser(m19_sc2axi_M_AXI_ARUSER),
        .s_axi_arvalid(m19_sc2axi_M_AXI_ARVALID),
        .s_axi_awaddr(m19_sc2axi_M_AXI_AWADDR),
        .s_axi_awcache(m19_sc2axi_M_AXI_AWCACHE),
        .s_axi_awid(m19_sc2axi_M_AXI_AWID),
        .s_axi_awlen(m19_sc2axi_M_AXI_AWLEN),
        .s_axi_awlock(m19_sc2axi_M_AXI_AWLOCK),
        .s_axi_awprot(m19_sc2axi_M_AXI_AWPROT),
        .s_axi_awqos(m19_sc2axi_M_AXI_AWQOS),
        .s_axi_awready(m19_sc2axi_M_AXI_AWREADY),
        .s_axi_awuser(m19_sc2axi_M_AXI_AWUSER),
        .s_axi_awvalid(m19_sc2axi_M_AXI_AWVALID),
        .s_axi_bid(m19_sc2axi_M_AXI_BID),
        .s_axi_bready(m19_sc2axi_M_AXI_BREADY),
        .s_axi_bresp(m19_sc2axi_M_AXI_BRESP),
        .s_axi_buser(m19_sc2axi_M_AXI_BUSER),
        .s_axi_bvalid(m19_sc2axi_M_AXI_BVALID),
        .s_axi_rdata(m19_sc2axi_M_AXI_RDATA),
        .s_axi_rid(m19_sc2axi_M_AXI_RID),
        .s_axi_rlast(m19_sc2axi_M_AXI_RLAST),
        .s_axi_rready(m19_sc2axi_M_AXI_RREADY),
        .s_axi_rresp(m19_sc2axi_M_AXI_RRESP),
        .s_axi_ruser(m19_sc2axi_M_AXI_RUSER),
        .s_axi_rvalid(m19_sc2axi_M_AXI_RVALID),
        .s_axi_wdata(m19_sc2axi_M_AXI_WDATA),
        .s_axi_wlast(m19_sc2axi_M_AXI_WLAST),
        .s_axi_wready(m19_sc2axi_M_AXI_WREADY),
        .s_axi_wstrb(m19_sc2axi_M_AXI_WSTRB),
        .s_axi_wuser(m19_sc2axi_M_AXI_WUSER),
        .s_axi_wvalid(m19_sc2axi_M_AXI_WVALID));
  m19_nodes_imp_1B8QI03 m19_nodes
       (.M_SC_AR_info(m19_nodes_M_SC_AR_INFO),
        .M_SC_AR_payld(m19_nodes_M_SC_AR_PAYLD),
        .M_SC_AR_recv(m19_nodes_M_SC_AR_RECV),
        .M_SC_AR_req(m19_nodes_M_SC_AR_REQ),
        .M_SC_AR_send(m19_nodes_M_SC_AR_SEND),
        .M_SC_AW_info(m19_nodes_M_SC_AW_INFO),
        .M_SC_AW_payld(m19_nodes_M_SC_AW_PAYLD),
        .M_SC_AW_recv(m19_nodes_M_SC_AW_RECV),
        .M_SC_AW_req(m19_nodes_M_SC_AW_REQ),
        .M_SC_AW_send(m19_nodes_M_SC_AW_SEND),
        .M_SC_B_info(m19_nodes_M_SC_B_INFO),
        .M_SC_B_payld(m19_nodes_M_SC_B_PAYLD),
        .M_SC_B_recv(m19_nodes_M_SC_B_RECV),
        .M_SC_B_req(m19_nodes_M_SC_B_REQ),
        .M_SC_B_send(m19_nodes_M_SC_B_SEND),
        .M_SC_R_info(m19_nodes_M_SC_R_INFO),
        .M_SC_R_payld(m19_nodes_M_SC_R_PAYLD),
        .M_SC_R_recv(m19_nodes_M_SC_R_RECV),
        .M_SC_R_req(m19_nodes_M_SC_R_REQ),
        .M_SC_R_send(m19_nodes_M_SC_R_SEND),
        .M_SC_W_info(m19_nodes_M_SC_W_INFO),
        .M_SC_W_payld(m19_nodes_M_SC_W_PAYLD),
        .M_SC_W_recv(m19_nodes_M_SC_W_RECV),
        .M_SC_W_req(m19_nodes_M_SC_W_REQ),
        .M_SC_W_send(m19_nodes_M_SC_W_SEND),
        .S_SC_AR_info(S_SC_AR_21_INFO),
        .S_SC_AR_payld(S_SC_AR_21_PAYLD),
        .S_SC_AR_recv(S_SC_AR_21_RECV),
        .S_SC_AR_req(S_SC_AR_21_REQ),
        .S_SC_AR_send(S_SC_AR_21_SEND),
        .S_SC_AW_info(S_SC_AW_21_INFO),
        .S_SC_AW_payld(S_SC_AW_21_PAYLD),
        .S_SC_AW_recv(S_SC_AW_21_RECV),
        .S_SC_AW_req(S_SC_AW_21_REQ),
        .S_SC_AW_send(S_SC_AW_21_SEND),
        .S_SC_B_info(S_SC_B_21_INFO),
        .S_SC_B_payld(S_SC_B_21_PAYLD),
        .S_SC_B_recv(S_SC_B_21_RECV),
        .S_SC_B_req(S_SC_B_21_REQ),
        .S_SC_B_send(S_SC_B_21_SEND),
        .S_SC_R_info(S_SC_R_21_INFO),
        .S_SC_R_payld(S_SC_R_21_PAYLD),
        .S_SC_R_recv(S_SC_R_21_RECV),
        .S_SC_R_req(S_SC_R_21_REQ),
        .S_SC_R_send(S_SC_R_21_SEND),
        .S_SC_W_info(S_SC_W_21_INFO),
        .S_SC_W_payld(S_SC_W_21_PAYLD),
        .S_SC_W_recv(S_SC_W_21_RECV),
        .S_SC_W_req(S_SC_W_21_REQ),
        .S_SC_W_send(S_SC_W_21_SEND),
        .m_axi_aclk(clk_map_M19_ACLK),
        .m_axi_aresetn(m_axi_aresetn_19),
        .s_axi_aclk(clk_map_M00_ACLK),
        .s_axi_aresetn(clk_map_M00_ARESETN));
  bd_afc3_m19s2a_0 m19_sc2axi
       (.aclk(clk_map_M19_ACLK),
        .m_axi_araddr(m19_sc2axi_M_AXI_ARADDR),
        .m_axi_arcache(m19_sc2axi_M_AXI_ARCACHE),
        .m_axi_arid(m19_sc2axi_M_AXI_ARID),
        .m_axi_arlen(m19_sc2axi_M_AXI_ARLEN),
        .m_axi_arlock(m19_sc2axi_M_AXI_ARLOCK),
        .m_axi_arprot(m19_sc2axi_M_AXI_ARPROT),
        .m_axi_arqos(m19_sc2axi_M_AXI_ARQOS),
        .m_axi_arready(m19_sc2axi_M_AXI_ARREADY),
        .m_axi_aruser(m19_sc2axi_M_AXI_ARUSER),
        .m_axi_arvalid(m19_sc2axi_M_AXI_ARVALID),
        .m_axi_awaddr(m19_sc2axi_M_AXI_AWADDR),
        .m_axi_awcache(m19_sc2axi_M_AXI_AWCACHE),
        .m_axi_awid(m19_sc2axi_M_AXI_AWID),
        .m_axi_awlen(m19_sc2axi_M_AXI_AWLEN),
        .m_axi_awlock(m19_sc2axi_M_AXI_AWLOCK),
        .m_axi_awprot(m19_sc2axi_M_AXI_AWPROT),
        .m_axi_awqos(m19_sc2axi_M_AXI_AWQOS),
        .m_axi_awready(m19_sc2axi_M_AXI_AWREADY),
        .m_axi_awuser(m19_sc2axi_M_AXI_AWUSER),
        .m_axi_awvalid(m19_sc2axi_M_AXI_AWVALID),
        .m_axi_bid(m19_sc2axi_M_AXI_BID),
        .m_axi_bready(m19_sc2axi_M_AXI_BREADY),
        .m_axi_bresp(m19_sc2axi_M_AXI_BRESP),
        .m_axi_buser(m19_sc2axi_M_AXI_BUSER),
        .m_axi_bvalid(m19_sc2axi_M_AXI_BVALID),
        .m_axi_rdata(m19_sc2axi_M_AXI_RDATA),
        .m_axi_rid(m19_sc2axi_M_AXI_RID),
        .m_axi_rlast(m19_sc2axi_M_AXI_RLAST),
        .m_axi_rready(m19_sc2axi_M_AXI_RREADY),
        .m_axi_rresp(m19_sc2axi_M_AXI_RRESP),
        .m_axi_ruser(m19_sc2axi_M_AXI_RUSER),
        .m_axi_rvalid(m19_sc2axi_M_AXI_RVALID),
        .m_axi_wdata(m19_sc2axi_M_AXI_WDATA),
        .m_axi_wlast(m19_sc2axi_M_AXI_WLAST),
        .m_axi_wready(m19_sc2axi_M_AXI_WREADY),
        .m_axi_wstrb(m19_sc2axi_M_AXI_WSTRB),
        .m_axi_wuser(m19_sc2axi_M_AXI_WUSER),
        .m_axi_wvalid(m19_sc2axi_M_AXI_WVALID),
        .m_sc_b_info(S_SC_B_21_INFO),
        .m_sc_b_payld(S_SC_B_21_PAYLD),
        .m_sc_b_recv(S_SC_B_21_RECV),
        .m_sc_b_req(S_SC_B_21_REQ),
        .m_sc_b_send(S_SC_B_21_SEND),
        .m_sc_r_info(S_SC_R_21_INFO),
        .m_sc_r_payld(S_SC_R_21_PAYLD),
        .m_sc_r_recv(S_SC_R_21_RECV),
        .m_sc_r_req(S_SC_R_21_REQ),
        .m_sc_r_send(S_SC_R_21_SEND),
        .s_sc_ar_info(m19_nodes_M_SC_AR_INFO),
        .s_sc_ar_payld(m19_nodes_M_SC_AR_PAYLD[179:0]),
        .s_sc_ar_recv(m19_nodes_M_SC_AR_RECV),
        .s_sc_ar_req(m19_nodes_M_SC_AR_REQ),
        .s_sc_ar_send(m19_nodes_M_SC_AR_SEND),
        .s_sc_aw_info(m19_nodes_M_SC_AW_INFO),
        .s_sc_aw_payld(m19_nodes_M_SC_AW_PAYLD[179:0]),
        .s_sc_aw_recv(m19_nodes_M_SC_AW_RECV),
        .s_sc_aw_req(m19_nodes_M_SC_AW_REQ),
        .s_sc_aw_send(m19_nodes_M_SC_AW_SEND),
        .s_sc_w_info(m19_nodes_M_SC_W_INFO),
        .s_sc_w_payld(m19_nodes_M_SC_W_PAYLD[66:0]),
        .s_sc_w_recv(m19_nodes_M_SC_W_RECV),
        .s_sc_w_req(m19_nodes_M_SC_W_REQ),
        .s_sc_w_send(m19_nodes_M_SC_W_SEND));
  m20_exit_pipeline_imp_2WR7Y m20_exit_pipeline
       (.aclk(clk_map_M20_ACLK),
        .aresetn(m_axi_aresetn_20),
        .m_axi_araddr(m20_exit_pipeline_m_axi_ARADDR),
        .m_axi_arprot(m20_exit_pipeline_m_axi_ARPROT),
        .m_axi_arready(m20_exit_pipeline_m_axi_ARREADY),
        .m_axi_arvalid(m20_exit_pipeline_m_axi_ARVALID),
        .m_axi_awaddr(m20_exit_pipeline_m_axi_AWADDR),
        .m_axi_awprot(m20_exit_pipeline_m_axi_AWPROT),
        .m_axi_awready(m20_exit_pipeline_m_axi_AWREADY),
        .m_axi_awvalid(m20_exit_pipeline_m_axi_AWVALID),
        .m_axi_bready(m20_exit_pipeline_m_axi_BREADY),
        .m_axi_bresp(m20_exit_pipeline_m_axi_BRESP),
        .m_axi_bvalid(m20_exit_pipeline_m_axi_BVALID),
        .m_axi_rdata(m20_exit_pipeline_m_axi_RDATA),
        .m_axi_rready(m20_exit_pipeline_m_axi_RREADY),
        .m_axi_rresp(m20_exit_pipeline_m_axi_RRESP),
        .m_axi_rvalid(m20_exit_pipeline_m_axi_RVALID),
        .m_axi_wdata(m20_exit_pipeline_m_axi_WDATA),
        .m_axi_wready(m20_exit_pipeline_m_axi_WREADY),
        .m_axi_wstrb(m20_exit_pipeline_m_axi_WSTRB),
        .m_axi_wvalid(m20_exit_pipeline_m_axi_WVALID),
        .s_axi_araddr(m20_sc2axi_M_AXI_ARADDR),
        .s_axi_arcache(m20_sc2axi_M_AXI_ARCACHE),
        .s_axi_arid(m20_sc2axi_M_AXI_ARID),
        .s_axi_arlen(m20_sc2axi_M_AXI_ARLEN),
        .s_axi_arlock(m20_sc2axi_M_AXI_ARLOCK),
        .s_axi_arprot(m20_sc2axi_M_AXI_ARPROT),
        .s_axi_arqos(m20_sc2axi_M_AXI_ARQOS),
        .s_axi_arready(m20_sc2axi_M_AXI_ARREADY),
        .s_axi_aruser(m20_sc2axi_M_AXI_ARUSER),
        .s_axi_arvalid(m20_sc2axi_M_AXI_ARVALID),
        .s_axi_awaddr(m20_sc2axi_M_AXI_AWADDR),
        .s_axi_awcache(m20_sc2axi_M_AXI_AWCACHE),
        .s_axi_awid(m20_sc2axi_M_AXI_AWID),
        .s_axi_awlen(m20_sc2axi_M_AXI_AWLEN),
        .s_axi_awlock(m20_sc2axi_M_AXI_AWLOCK),
        .s_axi_awprot(m20_sc2axi_M_AXI_AWPROT),
        .s_axi_awqos(m20_sc2axi_M_AXI_AWQOS),
        .s_axi_awready(m20_sc2axi_M_AXI_AWREADY),
        .s_axi_awuser(m20_sc2axi_M_AXI_AWUSER),
        .s_axi_awvalid(m20_sc2axi_M_AXI_AWVALID),
        .s_axi_bid(m20_sc2axi_M_AXI_BID),
        .s_axi_bready(m20_sc2axi_M_AXI_BREADY),
        .s_axi_bresp(m20_sc2axi_M_AXI_BRESP),
        .s_axi_buser(m20_sc2axi_M_AXI_BUSER),
        .s_axi_bvalid(m20_sc2axi_M_AXI_BVALID),
        .s_axi_rdata(m20_sc2axi_M_AXI_RDATA),
        .s_axi_rid(m20_sc2axi_M_AXI_RID),
        .s_axi_rlast(m20_sc2axi_M_AXI_RLAST),
        .s_axi_rready(m20_sc2axi_M_AXI_RREADY),
        .s_axi_rresp(m20_sc2axi_M_AXI_RRESP),
        .s_axi_ruser(m20_sc2axi_M_AXI_RUSER),
        .s_axi_rvalid(m20_sc2axi_M_AXI_RVALID),
        .s_axi_wdata(m20_sc2axi_M_AXI_WDATA),
        .s_axi_wlast(m20_sc2axi_M_AXI_WLAST),
        .s_axi_wready(m20_sc2axi_M_AXI_WREADY),
        .s_axi_wstrb(m20_sc2axi_M_AXI_WSTRB),
        .s_axi_wuser(m20_sc2axi_M_AXI_WUSER),
        .s_axi_wvalid(m20_sc2axi_M_AXI_WVALID));
  m20_nodes_imp_5Y47FE m20_nodes
       (.M_SC_AR_info(m20_nodes_M_SC_AR_INFO),
        .M_SC_AR_payld(m20_nodes_M_SC_AR_PAYLD),
        .M_SC_AR_recv(m20_nodes_M_SC_AR_RECV),
        .M_SC_AR_req(m20_nodes_M_SC_AR_REQ),
        .M_SC_AR_send(m20_nodes_M_SC_AR_SEND),
        .M_SC_AW_info(m20_nodes_M_SC_AW_INFO),
        .M_SC_AW_payld(m20_nodes_M_SC_AW_PAYLD),
        .M_SC_AW_recv(m20_nodes_M_SC_AW_RECV),
        .M_SC_AW_req(m20_nodes_M_SC_AW_REQ),
        .M_SC_AW_send(m20_nodes_M_SC_AW_SEND),
        .M_SC_B_info(m20_nodes_M_SC_B_INFO),
        .M_SC_B_payld(m20_nodes_M_SC_B_PAYLD),
        .M_SC_B_recv(m20_nodes_M_SC_B_RECV),
        .M_SC_B_req(m20_nodes_M_SC_B_REQ),
        .M_SC_B_send(m20_nodes_M_SC_B_SEND),
        .M_SC_R_info(m20_nodes_M_SC_R_INFO),
        .M_SC_R_payld(m20_nodes_M_SC_R_PAYLD),
        .M_SC_R_recv(m20_nodes_M_SC_R_RECV),
        .M_SC_R_req(m20_nodes_M_SC_R_REQ),
        .M_SC_R_send(m20_nodes_M_SC_R_SEND),
        .M_SC_W_info(m20_nodes_M_SC_W_INFO),
        .M_SC_W_payld(m20_nodes_M_SC_W_PAYLD),
        .M_SC_W_recv(m20_nodes_M_SC_W_RECV),
        .M_SC_W_req(m20_nodes_M_SC_W_REQ),
        .M_SC_W_send(m20_nodes_M_SC_W_SEND),
        .S_SC_AR_info(S_SC_AR_22_INFO),
        .S_SC_AR_payld(S_SC_AR_22_PAYLD),
        .S_SC_AR_recv(S_SC_AR_22_RECV),
        .S_SC_AR_req(S_SC_AR_22_REQ),
        .S_SC_AR_send(S_SC_AR_22_SEND),
        .S_SC_AW_info(S_SC_AW_22_INFO),
        .S_SC_AW_payld(S_SC_AW_22_PAYLD),
        .S_SC_AW_recv(S_SC_AW_22_RECV),
        .S_SC_AW_req(S_SC_AW_22_REQ),
        .S_SC_AW_send(S_SC_AW_22_SEND),
        .S_SC_B_info(S_SC_B_22_INFO),
        .S_SC_B_payld(S_SC_B_22_PAYLD),
        .S_SC_B_recv(S_SC_B_22_RECV),
        .S_SC_B_req(S_SC_B_22_REQ),
        .S_SC_B_send(S_SC_B_22_SEND),
        .S_SC_R_info(S_SC_R_22_INFO),
        .S_SC_R_payld(S_SC_R_22_PAYLD),
        .S_SC_R_recv(S_SC_R_22_RECV),
        .S_SC_R_req(S_SC_R_22_REQ),
        .S_SC_R_send(S_SC_R_22_SEND),
        .S_SC_W_info(S_SC_W_22_INFO),
        .S_SC_W_payld(S_SC_W_22_PAYLD),
        .S_SC_W_recv(S_SC_W_22_RECV),
        .S_SC_W_req(S_SC_W_22_REQ),
        .S_SC_W_send(S_SC_W_22_SEND),
        .m_axi_aclk(clk_map_M20_ACLK),
        .m_axi_aresetn(m_axi_aresetn_20),
        .s_axi_aclk(clk_map_M00_ACLK),
        .s_axi_aresetn(clk_map_M00_ARESETN));
  bd_afc3_m20s2a_0 m20_sc2axi
       (.aclk(clk_map_M20_ACLK),
        .m_axi_araddr(m20_sc2axi_M_AXI_ARADDR),
        .m_axi_arcache(m20_sc2axi_M_AXI_ARCACHE),
        .m_axi_arid(m20_sc2axi_M_AXI_ARID),
        .m_axi_arlen(m20_sc2axi_M_AXI_ARLEN),
        .m_axi_arlock(m20_sc2axi_M_AXI_ARLOCK),
        .m_axi_arprot(m20_sc2axi_M_AXI_ARPROT),
        .m_axi_arqos(m20_sc2axi_M_AXI_ARQOS),
        .m_axi_arready(m20_sc2axi_M_AXI_ARREADY),
        .m_axi_aruser(m20_sc2axi_M_AXI_ARUSER),
        .m_axi_arvalid(m20_sc2axi_M_AXI_ARVALID),
        .m_axi_awaddr(m20_sc2axi_M_AXI_AWADDR),
        .m_axi_awcache(m20_sc2axi_M_AXI_AWCACHE),
        .m_axi_awid(m20_sc2axi_M_AXI_AWID),
        .m_axi_awlen(m20_sc2axi_M_AXI_AWLEN),
        .m_axi_awlock(m20_sc2axi_M_AXI_AWLOCK),
        .m_axi_awprot(m20_sc2axi_M_AXI_AWPROT),
        .m_axi_awqos(m20_sc2axi_M_AXI_AWQOS),
        .m_axi_awready(m20_sc2axi_M_AXI_AWREADY),
        .m_axi_awuser(m20_sc2axi_M_AXI_AWUSER),
        .m_axi_awvalid(m20_sc2axi_M_AXI_AWVALID),
        .m_axi_bid(m20_sc2axi_M_AXI_BID),
        .m_axi_bready(m20_sc2axi_M_AXI_BREADY),
        .m_axi_bresp(m20_sc2axi_M_AXI_BRESP),
        .m_axi_buser(m20_sc2axi_M_AXI_BUSER),
        .m_axi_bvalid(m20_sc2axi_M_AXI_BVALID),
        .m_axi_rdata(m20_sc2axi_M_AXI_RDATA),
        .m_axi_rid(m20_sc2axi_M_AXI_RID),
        .m_axi_rlast(m20_sc2axi_M_AXI_RLAST),
        .m_axi_rready(m20_sc2axi_M_AXI_RREADY),
        .m_axi_rresp(m20_sc2axi_M_AXI_RRESP),
        .m_axi_ruser(m20_sc2axi_M_AXI_RUSER),
        .m_axi_rvalid(m20_sc2axi_M_AXI_RVALID),
        .m_axi_wdata(m20_sc2axi_M_AXI_WDATA),
        .m_axi_wlast(m20_sc2axi_M_AXI_WLAST),
        .m_axi_wready(m20_sc2axi_M_AXI_WREADY),
        .m_axi_wstrb(m20_sc2axi_M_AXI_WSTRB),
        .m_axi_wuser(m20_sc2axi_M_AXI_WUSER),
        .m_axi_wvalid(m20_sc2axi_M_AXI_WVALID),
        .m_sc_b_info(S_SC_B_22_INFO),
        .m_sc_b_payld(S_SC_B_22_PAYLD),
        .m_sc_b_recv(S_SC_B_22_RECV),
        .m_sc_b_req(S_SC_B_22_REQ),
        .m_sc_b_send(S_SC_B_22_SEND),
        .m_sc_r_info(S_SC_R_22_INFO),
        .m_sc_r_payld(S_SC_R_22_PAYLD),
        .m_sc_r_recv(S_SC_R_22_RECV),
        .m_sc_r_req(S_SC_R_22_REQ),
        .m_sc_r_send(S_SC_R_22_SEND),
        .s_sc_ar_info(m20_nodes_M_SC_AR_INFO),
        .s_sc_ar_payld(m20_nodes_M_SC_AR_PAYLD[179:0]),
        .s_sc_ar_recv(m20_nodes_M_SC_AR_RECV),
        .s_sc_ar_req(m20_nodes_M_SC_AR_REQ),
        .s_sc_ar_send(m20_nodes_M_SC_AR_SEND),
        .s_sc_aw_info(m20_nodes_M_SC_AW_INFO),
        .s_sc_aw_payld(m20_nodes_M_SC_AW_PAYLD[179:0]),
        .s_sc_aw_recv(m20_nodes_M_SC_AW_RECV),
        .s_sc_aw_req(m20_nodes_M_SC_AW_REQ),
        .s_sc_aw_send(m20_nodes_M_SC_AW_SEND),
        .s_sc_w_info(m20_nodes_M_SC_W_INFO),
        .s_sc_w_payld(m20_nodes_M_SC_W_PAYLD[66:0]),
        .s_sc_w_recv(m20_nodes_M_SC_W_RECV),
        .s_sc_w_req(m20_nodes_M_SC_W_REQ),
        .s_sc_w_send(m20_nodes_M_SC_W_SEND));
  m21_exit_pipeline_imp_6HLO9A m21_exit_pipeline
       (.aclk(clk_map_M21_ACLK),
        .aresetn(m_axi_aresetn_21),
        .m_axi_araddr(m21_exit_pipeline_m_axi_ARADDR),
        .m_axi_arprot(m21_exit_pipeline_m_axi_ARPROT),
        .m_axi_arready(m21_exit_pipeline_m_axi_ARREADY),
        .m_axi_arvalid(m21_exit_pipeline_m_axi_ARVALID),
        .m_axi_awaddr(m21_exit_pipeline_m_axi_AWADDR),
        .m_axi_awprot(m21_exit_pipeline_m_axi_AWPROT),
        .m_axi_awready(m21_exit_pipeline_m_axi_AWREADY),
        .m_axi_awvalid(m21_exit_pipeline_m_axi_AWVALID),
        .m_axi_bready(m21_exit_pipeline_m_axi_BREADY),
        .m_axi_bresp(m21_exit_pipeline_m_axi_BRESP),
        .m_axi_bvalid(m21_exit_pipeline_m_axi_BVALID),
        .m_axi_rdata(m21_exit_pipeline_m_axi_RDATA),
        .m_axi_rready(m21_exit_pipeline_m_axi_RREADY),
        .m_axi_rresp(m21_exit_pipeline_m_axi_RRESP),
        .m_axi_rvalid(m21_exit_pipeline_m_axi_RVALID),
        .m_axi_wdata(m21_exit_pipeline_m_axi_WDATA),
        .m_axi_wready(m21_exit_pipeline_m_axi_WREADY),
        .m_axi_wstrb(m21_exit_pipeline_m_axi_WSTRB),
        .m_axi_wvalid(m21_exit_pipeline_m_axi_WVALID),
        .s_axi_araddr(m21_sc2axi_M_AXI_ARADDR),
        .s_axi_arcache(m21_sc2axi_M_AXI_ARCACHE),
        .s_axi_arid(m21_sc2axi_M_AXI_ARID),
        .s_axi_arlen(m21_sc2axi_M_AXI_ARLEN),
        .s_axi_arlock(m21_sc2axi_M_AXI_ARLOCK),
        .s_axi_arprot(m21_sc2axi_M_AXI_ARPROT),
        .s_axi_arqos(m21_sc2axi_M_AXI_ARQOS),
        .s_axi_arready(m21_sc2axi_M_AXI_ARREADY),
        .s_axi_aruser(m21_sc2axi_M_AXI_ARUSER),
        .s_axi_arvalid(m21_sc2axi_M_AXI_ARVALID),
        .s_axi_awaddr(m21_sc2axi_M_AXI_AWADDR),
        .s_axi_awcache(m21_sc2axi_M_AXI_AWCACHE),
        .s_axi_awid(m21_sc2axi_M_AXI_AWID),
        .s_axi_awlen(m21_sc2axi_M_AXI_AWLEN),
        .s_axi_awlock(m21_sc2axi_M_AXI_AWLOCK),
        .s_axi_awprot(m21_sc2axi_M_AXI_AWPROT),
        .s_axi_awqos(m21_sc2axi_M_AXI_AWQOS),
        .s_axi_awready(m21_sc2axi_M_AXI_AWREADY),
        .s_axi_awuser(m21_sc2axi_M_AXI_AWUSER),
        .s_axi_awvalid(m21_sc2axi_M_AXI_AWVALID),
        .s_axi_bid(m21_sc2axi_M_AXI_BID),
        .s_axi_bready(m21_sc2axi_M_AXI_BREADY),
        .s_axi_bresp(m21_sc2axi_M_AXI_BRESP),
        .s_axi_buser(m21_sc2axi_M_AXI_BUSER),
        .s_axi_bvalid(m21_sc2axi_M_AXI_BVALID),
        .s_axi_rdata(m21_sc2axi_M_AXI_RDATA),
        .s_axi_rid(m21_sc2axi_M_AXI_RID),
        .s_axi_rlast(m21_sc2axi_M_AXI_RLAST),
        .s_axi_rready(m21_sc2axi_M_AXI_RREADY),
        .s_axi_rresp(m21_sc2axi_M_AXI_RRESP),
        .s_axi_ruser(m21_sc2axi_M_AXI_RUSER),
        .s_axi_rvalid(m21_sc2axi_M_AXI_RVALID),
        .s_axi_wdata(m21_sc2axi_M_AXI_WDATA),
        .s_axi_wlast(m21_sc2axi_M_AXI_WLAST),
        .s_axi_wready(m21_sc2axi_M_AXI_WREADY),
        .s_axi_wstrb(m21_sc2axi_M_AXI_WSTRB),
        .s_axi_wuser(m21_sc2axi_M_AXI_WUSER),
        .s_axi_wvalid(m21_sc2axi_M_AXI_WVALID));
  m21_nodes_imp_11U89V0 m21_nodes
       (.M_SC_AR_info(m21_nodes_M_SC_AR_INFO),
        .M_SC_AR_payld(m21_nodes_M_SC_AR_PAYLD),
        .M_SC_AR_recv(m21_nodes_M_SC_AR_RECV),
        .M_SC_AR_req(m21_nodes_M_SC_AR_REQ),
        .M_SC_AR_send(m21_nodes_M_SC_AR_SEND),
        .M_SC_AW_info(m21_nodes_M_SC_AW_INFO),
        .M_SC_AW_payld(m21_nodes_M_SC_AW_PAYLD),
        .M_SC_AW_recv(m21_nodes_M_SC_AW_RECV),
        .M_SC_AW_req(m21_nodes_M_SC_AW_REQ),
        .M_SC_AW_send(m21_nodes_M_SC_AW_SEND),
        .M_SC_B_info(m21_nodes_M_SC_B_INFO),
        .M_SC_B_payld(m21_nodes_M_SC_B_PAYLD),
        .M_SC_B_recv(m21_nodes_M_SC_B_RECV),
        .M_SC_B_req(m21_nodes_M_SC_B_REQ),
        .M_SC_B_send(m21_nodes_M_SC_B_SEND),
        .M_SC_R_info(m21_nodes_M_SC_R_INFO),
        .M_SC_R_payld(m21_nodes_M_SC_R_PAYLD),
        .M_SC_R_recv(m21_nodes_M_SC_R_RECV),
        .M_SC_R_req(m21_nodes_M_SC_R_REQ),
        .M_SC_R_send(m21_nodes_M_SC_R_SEND),
        .M_SC_W_info(m21_nodes_M_SC_W_INFO),
        .M_SC_W_payld(m21_nodes_M_SC_W_PAYLD),
        .M_SC_W_recv(m21_nodes_M_SC_W_RECV),
        .M_SC_W_req(m21_nodes_M_SC_W_REQ),
        .M_SC_W_send(m21_nodes_M_SC_W_SEND),
        .S_SC_AR_info(S_SC_AR_23_INFO),
        .S_SC_AR_payld(S_SC_AR_23_PAYLD),
        .S_SC_AR_recv(S_SC_AR_23_RECV),
        .S_SC_AR_req(S_SC_AR_23_REQ),
        .S_SC_AR_send(S_SC_AR_23_SEND),
        .S_SC_AW_info(S_SC_AW_23_INFO),
        .S_SC_AW_payld(S_SC_AW_23_PAYLD),
        .S_SC_AW_recv(S_SC_AW_23_RECV),
        .S_SC_AW_req(S_SC_AW_23_REQ),
        .S_SC_AW_send(S_SC_AW_23_SEND),
        .S_SC_B_info(S_SC_B_23_INFO),
        .S_SC_B_payld(S_SC_B_23_PAYLD),
        .S_SC_B_recv(S_SC_B_23_RECV),
        .S_SC_B_req(S_SC_B_23_REQ),
        .S_SC_B_send(S_SC_B_23_SEND),
        .S_SC_R_info(S_SC_R_23_INFO),
        .S_SC_R_payld(S_SC_R_23_PAYLD),
        .S_SC_R_recv(S_SC_R_23_RECV),
        .S_SC_R_req(S_SC_R_23_REQ),
        .S_SC_R_send(S_SC_R_23_SEND),
        .S_SC_W_info(S_SC_W_23_INFO),
        .S_SC_W_payld(S_SC_W_23_PAYLD),
        .S_SC_W_recv(S_SC_W_23_RECV),
        .S_SC_W_req(S_SC_W_23_REQ),
        .S_SC_W_send(S_SC_W_23_SEND),
        .m_axi_aclk(clk_map_M21_ACLK),
        .m_axi_aresetn(m_axi_aresetn_21),
        .s_axi_aclk(clk_map_M00_ACLK),
        .s_axi_aresetn(clk_map_M00_ARESETN));
  bd_afc3_m21s2a_0 m21_sc2axi
       (.aclk(clk_map_M21_ACLK),
        .m_axi_araddr(m21_sc2axi_M_AXI_ARADDR),
        .m_axi_arcache(m21_sc2axi_M_AXI_ARCACHE),
        .m_axi_arid(m21_sc2axi_M_AXI_ARID),
        .m_axi_arlen(m21_sc2axi_M_AXI_ARLEN),
        .m_axi_arlock(m21_sc2axi_M_AXI_ARLOCK),
        .m_axi_arprot(m21_sc2axi_M_AXI_ARPROT),
        .m_axi_arqos(m21_sc2axi_M_AXI_ARQOS),
        .m_axi_arready(m21_sc2axi_M_AXI_ARREADY),
        .m_axi_aruser(m21_sc2axi_M_AXI_ARUSER),
        .m_axi_arvalid(m21_sc2axi_M_AXI_ARVALID),
        .m_axi_awaddr(m21_sc2axi_M_AXI_AWADDR),
        .m_axi_awcache(m21_sc2axi_M_AXI_AWCACHE),
        .m_axi_awid(m21_sc2axi_M_AXI_AWID),
        .m_axi_awlen(m21_sc2axi_M_AXI_AWLEN),
        .m_axi_awlock(m21_sc2axi_M_AXI_AWLOCK),
        .m_axi_awprot(m21_sc2axi_M_AXI_AWPROT),
        .m_axi_awqos(m21_sc2axi_M_AXI_AWQOS),
        .m_axi_awready(m21_sc2axi_M_AXI_AWREADY),
        .m_axi_awuser(m21_sc2axi_M_AXI_AWUSER),
        .m_axi_awvalid(m21_sc2axi_M_AXI_AWVALID),
        .m_axi_bid(m21_sc2axi_M_AXI_BID),
        .m_axi_bready(m21_sc2axi_M_AXI_BREADY),
        .m_axi_bresp(m21_sc2axi_M_AXI_BRESP),
        .m_axi_buser(m21_sc2axi_M_AXI_BUSER),
        .m_axi_bvalid(m21_sc2axi_M_AXI_BVALID),
        .m_axi_rdata(m21_sc2axi_M_AXI_RDATA),
        .m_axi_rid(m21_sc2axi_M_AXI_RID),
        .m_axi_rlast(m21_sc2axi_M_AXI_RLAST),
        .m_axi_rready(m21_sc2axi_M_AXI_RREADY),
        .m_axi_rresp(m21_sc2axi_M_AXI_RRESP),
        .m_axi_ruser(m21_sc2axi_M_AXI_RUSER),
        .m_axi_rvalid(m21_sc2axi_M_AXI_RVALID),
        .m_axi_wdata(m21_sc2axi_M_AXI_WDATA),
        .m_axi_wlast(m21_sc2axi_M_AXI_WLAST),
        .m_axi_wready(m21_sc2axi_M_AXI_WREADY),
        .m_axi_wstrb(m21_sc2axi_M_AXI_WSTRB),
        .m_axi_wuser(m21_sc2axi_M_AXI_WUSER),
        .m_axi_wvalid(m21_sc2axi_M_AXI_WVALID),
        .m_sc_b_info(S_SC_B_23_INFO),
        .m_sc_b_payld(S_SC_B_23_PAYLD),
        .m_sc_b_recv(S_SC_B_23_RECV),
        .m_sc_b_req(S_SC_B_23_REQ),
        .m_sc_b_send(S_SC_B_23_SEND),
        .m_sc_r_info(S_SC_R_23_INFO),
        .m_sc_r_payld(S_SC_R_23_PAYLD),
        .m_sc_r_recv(S_SC_R_23_RECV),
        .m_sc_r_req(S_SC_R_23_REQ),
        .m_sc_r_send(S_SC_R_23_SEND),
        .s_sc_ar_info(m21_nodes_M_SC_AR_INFO),
        .s_sc_ar_payld(m21_nodes_M_SC_AR_PAYLD[179:0]),
        .s_sc_ar_recv(m21_nodes_M_SC_AR_RECV),
        .s_sc_ar_req(m21_nodes_M_SC_AR_REQ),
        .s_sc_ar_send(m21_nodes_M_SC_AR_SEND),
        .s_sc_aw_info(m21_nodes_M_SC_AW_INFO),
        .s_sc_aw_payld(m21_nodes_M_SC_AW_PAYLD[179:0]),
        .s_sc_aw_recv(m21_nodes_M_SC_AW_RECV),
        .s_sc_aw_req(m21_nodes_M_SC_AW_REQ),
        .s_sc_aw_send(m21_nodes_M_SC_AW_SEND),
        .s_sc_w_info(m21_nodes_M_SC_W_INFO),
        .s_sc_w_payld(m21_nodes_M_SC_W_PAYLD[66:0]),
        .s_sc_w_recv(m21_nodes_M_SC_W_RECV),
        .s_sc_w_req(m21_nodes_M_SC_W_REQ),
        .s_sc_w_send(m21_nodes_M_SC_W_SEND));
  m22_exit_pipeline_imp_CSIC7I m22_exit_pipeline
       (.aclk(clk_map_M22_ACLK),
        .aresetn(m_axi_aresetn_22),
        .m_axi_araddr(m22_exit_pipeline_m_axi_ARADDR),
        .m_axi_arprot(m22_exit_pipeline_m_axi_ARPROT),
        .m_axi_arready(m22_exit_pipeline_m_axi_ARREADY),
        .m_axi_arvalid(m22_exit_pipeline_m_axi_ARVALID),
        .m_axi_awaddr(m22_exit_pipeline_m_axi_AWADDR),
        .m_axi_awprot(m22_exit_pipeline_m_axi_AWPROT),
        .m_axi_awready(m22_exit_pipeline_m_axi_AWREADY),
        .m_axi_awvalid(m22_exit_pipeline_m_axi_AWVALID),
        .m_axi_bready(m22_exit_pipeline_m_axi_BREADY),
        .m_axi_bresp(m22_exit_pipeline_m_axi_BRESP),
        .m_axi_bvalid(m22_exit_pipeline_m_axi_BVALID),
        .m_axi_rdata(m22_exit_pipeline_m_axi_RDATA),
        .m_axi_rready(m22_exit_pipeline_m_axi_RREADY),
        .m_axi_rresp(m22_exit_pipeline_m_axi_RRESP),
        .m_axi_rvalid(m22_exit_pipeline_m_axi_RVALID),
        .m_axi_wdata(m22_exit_pipeline_m_axi_WDATA),
        .m_axi_wready(m22_exit_pipeline_m_axi_WREADY),
        .m_axi_wstrb(m22_exit_pipeline_m_axi_WSTRB),
        .m_axi_wvalid(m22_exit_pipeline_m_axi_WVALID),
        .s_axi_araddr(m22_sc2axi_M_AXI_ARADDR),
        .s_axi_arcache(m22_sc2axi_M_AXI_ARCACHE),
        .s_axi_arid(m22_sc2axi_M_AXI_ARID),
        .s_axi_arlen(m22_sc2axi_M_AXI_ARLEN),
        .s_axi_arlock(m22_sc2axi_M_AXI_ARLOCK),
        .s_axi_arprot(m22_sc2axi_M_AXI_ARPROT),
        .s_axi_arqos(m22_sc2axi_M_AXI_ARQOS),
        .s_axi_arready(m22_sc2axi_M_AXI_ARREADY),
        .s_axi_aruser(m22_sc2axi_M_AXI_ARUSER),
        .s_axi_arvalid(m22_sc2axi_M_AXI_ARVALID),
        .s_axi_awaddr(m22_sc2axi_M_AXI_AWADDR),
        .s_axi_awcache(m22_sc2axi_M_AXI_AWCACHE),
        .s_axi_awid(m22_sc2axi_M_AXI_AWID),
        .s_axi_awlen(m22_sc2axi_M_AXI_AWLEN),
        .s_axi_awlock(m22_sc2axi_M_AXI_AWLOCK),
        .s_axi_awprot(m22_sc2axi_M_AXI_AWPROT),
        .s_axi_awqos(m22_sc2axi_M_AXI_AWQOS),
        .s_axi_awready(m22_sc2axi_M_AXI_AWREADY),
        .s_axi_awuser(m22_sc2axi_M_AXI_AWUSER),
        .s_axi_awvalid(m22_sc2axi_M_AXI_AWVALID),
        .s_axi_bid(m22_sc2axi_M_AXI_BID),
        .s_axi_bready(m22_sc2axi_M_AXI_BREADY),
        .s_axi_bresp(m22_sc2axi_M_AXI_BRESP),
        .s_axi_buser(m22_sc2axi_M_AXI_BUSER),
        .s_axi_bvalid(m22_sc2axi_M_AXI_BVALID),
        .s_axi_rdata(m22_sc2axi_M_AXI_RDATA),
        .s_axi_rid(m22_sc2axi_M_AXI_RID),
        .s_axi_rlast(m22_sc2axi_M_AXI_RLAST),
        .s_axi_rready(m22_sc2axi_M_AXI_RREADY),
        .s_axi_rresp(m22_sc2axi_M_AXI_RRESP),
        .s_axi_ruser(m22_sc2axi_M_AXI_RUSER),
        .s_axi_rvalid(m22_sc2axi_M_AXI_RVALID),
        .s_axi_wdata(m22_sc2axi_M_AXI_WDATA),
        .s_axi_wlast(m22_sc2axi_M_AXI_WLAST),
        .s_axi_wready(m22_sc2axi_M_AXI_WREADY),
        .s_axi_wstrb(m22_sc2axi_M_AXI_WSTRB),
        .s_axi_wuser(m22_sc2axi_M_AXI_WUSER),
        .s_axi_wvalid(m22_sc2axi_M_AXI_WVALID));
  m22_nodes_imp_1VPARSN m22_nodes
       (.M_SC_AR_info(m22_nodes_M_SC_AR_INFO),
        .M_SC_AR_payld(m22_nodes_M_SC_AR_PAYLD),
        .M_SC_AR_recv(m22_nodes_M_SC_AR_RECV),
        .M_SC_AR_req(m22_nodes_M_SC_AR_REQ),
        .M_SC_AR_send(m22_nodes_M_SC_AR_SEND),
        .M_SC_AW_info(m22_nodes_M_SC_AW_INFO),
        .M_SC_AW_payld(m22_nodes_M_SC_AW_PAYLD),
        .M_SC_AW_recv(m22_nodes_M_SC_AW_RECV),
        .M_SC_AW_req(m22_nodes_M_SC_AW_REQ),
        .M_SC_AW_send(m22_nodes_M_SC_AW_SEND),
        .M_SC_B_info(m22_nodes_M_SC_B_INFO),
        .M_SC_B_payld(m22_nodes_M_SC_B_PAYLD),
        .M_SC_B_recv(m22_nodes_M_SC_B_RECV),
        .M_SC_B_req(m22_nodes_M_SC_B_REQ),
        .M_SC_B_send(m22_nodes_M_SC_B_SEND),
        .M_SC_R_info(m22_nodes_M_SC_R_INFO),
        .M_SC_R_payld(m22_nodes_M_SC_R_PAYLD),
        .M_SC_R_recv(m22_nodes_M_SC_R_RECV),
        .M_SC_R_req(m22_nodes_M_SC_R_REQ),
        .M_SC_R_send(m22_nodes_M_SC_R_SEND),
        .M_SC_W_info(m22_nodes_M_SC_W_INFO),
        .M_SC_W_payld(m22_nodes_M_SC_W_PAYLD),
        .M_SC_W_recv(m22_nodes_M_SC_W_RECV),
        .M_SC_W_req(m22_nodes_M_SC_W_REQ),
        .M_SC_W_send(m22_nodes_M_SC_W_SEND),
        .S_SC_AR_info(S_SC_AR_24_INFO),
        .S_SC_AR_payld(S_SC_AR_24_PAYLD),
        .S_SC_AR_recv(S_SC_AR_24_RECV),
        .S_SC_AR_req(S_SC_AR_24_REQ),
        .S_SC_AR_send(S_SC_AR_24_SEND),
        .S_SC_AW_info(S_SC_AW_24_INFO),
        .S_SC_AW_payld(S_SC_AW_24_PAYLD),
        .S_SC_AW_recv(S_SC_AW_24_RECV),
        .S_SC_AW_req(S_SC_AW_24_REQ),
        .S_SC_AW_send(S_SC_AW_24_SEND),
        .S_SC_B_info(S_SC_B_24_INFO),
        .S_SC_B_payld(S_SC_B_24_PAYLD),
        .S_SC_B_recv(S_SC_B_24_RECV),
        .S_SC_B_req(S_SC_B_24_REQ),
        .S_SC_B_send(S_SC_B_24_SEND),
        .S_SC_R_info(S_SC_R_24_INFO),
        .S_SC_R_payld(S_SC_R_24_PAYLD),
        .S_SC_R_recv(S_SC_R_24_RECV),
        .S_SC_R_req(S_SC_R_24_REQ),
        .S_SC_R_send(S_SC_R_24_SEND),
        .S_SC_W_info(S_SC_W_24_INFO),
        .S_SC_W_payld(S_SC_W_24_PAYLD),
        .S_SC_W_recv(S_SC_W_24_RECV),
        .S_SC_W_req(S_SC_W_24_REQ),
        .S_SC_W_send(S_SC_W_24_SEND),
        .m_axi_aclk(clk_map_M22_ACLK),
        .m_axi_aresetn(m_axi_aresetn_22),
        .s_axi_aclk(clk_map_M00_ACLK),
        .s_axi_aresetn(clk_map_M00_ARESETN));
  bd_afc3_m22s2a_0 m22_sc2axi
       (.aclk(clk_map_M22_ACLK),
        .m_axi_araddr(m22_sc2axi_M_AXI_ARADDR),
        .m_axi_arcache(m22_sc2axi_M_AXI_ARCACHE),
        .m_axi_arid(m22_sc2axi_M_AXI_ARID),
        .m_axi_arlen(m22_sc2axi_M_AXI_ARLEN),
        .m_axi_arlock(m22_sc2axi_M_AXI_ARLOCK),
        .m_axi_arprot(m22_sc2axi_M_AXI_ARPROT),
        .m_axi_arqos(m22_sc2axi_M_AXI_ARQOS),
        .m_axi_arready(m22_sc2axi_M_AXI_ARREADY),
        .m_axi_aruser(m22_sc2axi_M_AXI_ARUSER),
        .m_axi_arvalid(m22_sc2axi_M_AXI_ARVALID),
        .m_axi_awaddr(m22_sc2axi_M_AXI_AWADDR),
        .m_axi_awcache(m22_sc2axi_M_AXI_AWCACHE),
        .m_axi_awid(m22_sc2axi_M_AXI_AWID),
        .m_axi_awlen(m22_sc2axi_M_AXI_AWLEN),
        .m_axi_awlock(m22_sc2axi_M_AXI_AWLOCK),
        .m_axi_awprot(m22_sc2axi_M_AXI_AWPROT),
        .m_axi_awqos(m22_sc2axi_M_AXI_AWQOS),
        .m_axi_awready(m22_sc2axi_M_AXI_AWREADY),
        .m_axi_awuser(m22_sc2axi_M_AXI_AWUSER),
        .m_axi_awvalid(m22_sc2axi_M_AXI_AWVALID),
        .m_axi_bid(m22_sc2axi_M_AXI_BID),
        .m_axi_bready(m22_sc2axi_M_AXI_BREADY),
        .m_axi_bresp(m22_sc2axi_M_AXI_BRESP),
        .m_axi_buser(m22_sc2axi_M_AXI_BUSER),
        .m_axi_bvalid(m22_sc2axi_M_AXI_BVALID),
        .m_axi_rdata(m22_sc2axi_M_AXI_RDATA),
        .m_axi_rid(m22_sc2axi_M_AXI_RID),
        .m_axi_rlast(m22_sc2axi_M_AXI_RLAST),
        .m_axi_rready(m22_sc2axi_M_AXI_RREADY),
        .m_axi_rresp(m22_sc2axi_M_AXI_RRESP),
        .m_axi_ruser(m22_sc2axi_M_AXI_RUSER),
        .m_axi_rvalid(m22_sc2axi_M_AXI_RVALID),
        .m_axi_wdata(m22_sc2axi_M_AXI_WDATA),
        .m_axi_wlast(m22_sc2axi_M_AXI_WLAST),
        .m_axi_wready(m22_sc2axi_M_AXI_WREADY),
        .m_axi_wstrb(m22_sc2axi_M_AXI_WSTRB),
        .m_axi_wuser(m22_sc2axi_M_AXI_WUSER),
        .m_axi_wvalid(m22_sc2axi_M_AXI_WVALID),
        .m_sc_b_info(S_SC_B_24_INFO),
        .m_sc_b_payld(S_SC_B_24_PAYLD),
        .m_sc_b_recv(S_SC_B_24_RECV),
        .m_sc_b_req(S_SC_B_24_REQ),
        .m_sc_b_send(S_SC_B_24_SEND),
        .m_sc_r_info(S_SC_R_24_INFO),
        .m_sc_r_payld(S_SC_R_24_PAYLD),
        .m_sc_r_recv(S_SC_R_24_RECV),
        .m_sc_r_req(S_SC_R_24_REQ),
        .m_sc_r_send(S_SC_R_24_SEND),
        .s_sc_ar_info(m22_nodes_M_SC_AR_INFO),
        .s_sc_ar_payld(m22_nodes_M_SC_AR_PAYLD[179:0]),
        .s_sc_ar_recv(m22_nodes_M_SC_AR_RECV),
        .s_sc_ar_req(m22_nodes_M_SC_AR_REQ),
        .s_sc_ar_send(m22_nodes_M_SC_AR_SEND),
        .s_sc_aw_info(m22_nodes_M_SC_AW_INFO),
        .s_sc_aw_payld(m22_nodes_M_SC_AW_PAYLD[179:0]),
        .s_sc_aw_recv(m22_nodes_M_SC_AW_RECV),
        .s_sc_aw_req(m22_nodes_M_SC_AW_REQ),
        .s_sc_aw_send(m22_nodes_M_SC_AW_SEND),
        .s_sc_w_info(m22_nodes_M_SC_W_INFO),
        .s_sc_w_payld(m22_nodes_M_SC_W_PAYLD[66:0]),
        .s_sc_w_recv(m22_nodes_M_SC_W_RECV),
        .s_sc_w_req(m22_nodes_M_SC_W_REQ),
        .s_sc_w_send(m22_nodes_M_SC_W_SEND));
  m23_exit_pipeline_imp_FVBFKE m23_exit_pipeline
       (.aclk(clk_map_M23_ACLK),
        .aresetn(m_axi_aresetn_23),
        .m_axi_araddr(m23_exit_pipeline_m_axi_ARADDR),
        .m_axi_arprot(m23_exit_pipeline_m_axi_ARPROT),
        .m_axi_arready(m23_exit_pipeline_m_axi_ARREADY),
        .m_axi_arvalid(m23_exit_pipeline_m_axi_ARVALID),
        .m_axi_awaddr(m23_exit_pipeline_m_axi_AWADDR),
        .m_axi_awprot(m23_exit_pipeline_m_axi_AWPROT),
        .m_axi_awready(m23_exit_pipeline_m_axi_AWREADY),
        .m_axi_awvalid(m23_exit_pipeline_m_axi_AWVALID),
        .m_axi_bready(m23_exit_pipeline_m_axi_BREADY),
        .m_axi_bresp(m23_exit_pipeline_m_axi_BRESP),
        .m_axi_bvalid(m23_exit_pipeline_m_axi_BVALID),
        .m_axi_rdata(m23_exit_pipeline_m_axi_RDATA),
        .m_axi_rready(m23_exit_pipeline_m_axi_RREADY),
        .m_axi_rresp(m23_exit_pipeline_m_axi_RRESP),
        .m_axi_rvalid(m23_exit_pipeline_m_axi_RVALID),
        .m_axi_wdata(m23_exit_pipeline_m_axi_WDATA),
        .m_axi_wready(m23_exit_pipeline_m_axi_WREADY),
        .m_axi_wstrb(m23_exit_pipeline_m_axi_WSTRB),
        .m_axi_wvalid(m23_exit_pipeline_m_axi_WVALID),
        .s_axi_araddr(m23_sc2axi_M_AXI_ARADDR),
        .s_axi_arcache(m23_sc2axi_M_AXI_ARCACHE),
        .s_axi_arid(m23_sc2axi_M_AXI_ARID),
        .s_axi_arlen(m23_sc2axi_M_AXI_ARLEN),
        .s_axi_arlock(m23_sc2axi_M_AXI_ARLOCK),
        .s_axi_arprot(m23_sc2axi_M_AXI_ARPROT),
        .s_axi_arqos(m23_sc2axi_M_AXI_ARQOS),
        .s_axi_arready(m23_sc2axi_M_AXI_ARREADY),
        .s_axi_aruser(m23_sc2axi_M_AXI_ARUSER),
        .s_axi_arvalid(m23_sc2axi_M_AXI_ARVALID),
        .s_axi_awaddr(m23_sc2axi_M_AXI_AWADDR),
        .s_axi_awcache(m23_sc2axi_M_AXI_AWCACHE),
        .s_axi_awid(m23_sc2axi_M_AXI_AWID),
        .s_axi_awlen(m23_sc2axi_M_AXI_AWLEN),
        .s_axi_awlock(m23_sc2axi_M_AXI_AWLOCK),
        .s_axi_awprot(m23_sc2axi_M_AXI_AWPROT),
        .s_axi_awqos(m23_sc2axi_M_AXI_AWQOS),
        .s_axi_awready(m23_sc2axi_M_AXI_AWREADY),
        .s_axi_awuser(m23_sc2axi_M_AXI_AWUSER),
        .s_axi_awvalid(m23_sc2axi_M_AXI_AWVALID),
        .s_axi_bid(m23_sc2axi_M_AXI_BID),
        .s_axi_bready(m23_sc2axi_M_AXI_BREADY),
        .s_axi_bresp(m23_sc2axi_M_AXI_BRESP),
        .s_axi_buser(m23_sc2axi_M_AXI_BUSER),
        .s_axi_bvalid(m23_sc2axi_M_AXI_BVALID),
        .s_axi_rdata(m23_sc2axi_M_AXI_RDATA),
        .s_axi_rid(m23_sc2axi_M_AXI_RID),
        .s_axi_rlast(m23_sc2axi_M_AXI_RLAST),
        .s_axi_rready(m23_sc2axi_M_AXI_RREADY),
        .s_axi_rresp(m23_sc2axi_M_AXI_RRESP),
        .s_axi_ruser(m23_sc2axi_M_AXI_RUSER),
        .s_axi_rvalid(m23_sc2axi_M_AXI_RVALID),
        .s_axi_wdata(m23_sc2axi_M_AXI_WDATA),
        .s_axi_wlast(m23_sc2axi_M_AXI_WLAST),
        .s_axi_wready(m23_sc2axi_M_AXI_WREADY),
        .s_axi_wstrb(m23_sc2axi_M_AXI_WSTRB),
        .s_axi_wuser(m23_sc2axi_M_AXI_WUSER),
        .s_axi_wvalid(m23_sc2axi_M_AXI_WVALID));
  m23_nodes_imp_T5E05D m23_nodes
       (.M_SC_AR_info(m23_nodes_M_SC_AR_INFO),
        .M_SC_AR_payld(m23_nodes_M_SC_AR_PAYLD),
        .M_SC_AR_recv(m23_nodes_M_SC_AR_RECV),
        .M_SC_AR_req(m23_nodes_M_SC_AR_REQ),
        .M_SC_AR_send(m23_nodes_M_SC_AR_SEND),
        .M_SC_AW_info(m23_nodes_M_SC_AW_INFO),
        .M_SC_AW_payld(m23_nodes_M_SC_AW_PAYLD),
        .M_SC_AW_recv(m23_nodes_M_SC_AW_RECV),
        .M_SC_AW_req(m23_nodes_M_SC_AW_REQ),
        .M_SC_AW_send(m23_nodes_M_SC_AW_SEND),
        .M_SC_B_info(m23_nodes_M_SC_B_INFO),
        .M_SC_B_payld(m23_nodes_M_SC_B_PAYLD),
        .M_SC_B_recv(m23_nodes_M_SC_B_RECV),
        .M_SC_B_req(m23_nodes_M_SC_B_REQ),
        .M_SC_B_send(m23_nodes_M_SC_B_SEND),
        .M_SC_R_info(m23_nodes_M_SC_R_INFO),
        .M_SC_R_payld(m23_nodes_M_SC_R_PAYLD),
        .M_SC_R_recv(m23_nodes_M_SC_R_RECV),
        .M_SC_R_req(m23_nodes_M_SC_R_REQ),
        .M_SC_R_send(m23_nodes_M_SC_R_SEND),
        .M_SC_W_info(m23_nodes_M_SC_W_INFO),
        .M_SC_W_payld(m23_nodes_M_SC_W_PAYLD),
        .M_SC_W_recv(m23_nodes_M_SC_W_RECV),
        .M_SC_W_req(m23_nodes_M_SC_W_REQ),
        .M_SC_W_send(m23_nodes_M_SC_W_SEND),
        .S_SC_AR_info(S_SC_AR_25_INFO),
        .S_SC_AR_payld(S_SC_AR_25_PAYLD),
        .S_SC_AR_recv(S_SC_AR_25_RECV),
        .S_SC_AR_req(S_SC_AR_25_REQ),
        .S_SC_AR_send(S_SC_AR_25_SEND),
        .S_SC_AW_info(S_SC_AW_25_INFO),
        .S_SC_AW_payld(S_SC_AW_25_PAYLD),
        .S_SC_AW_recv(S_SC_AW_25_RECV),
        .S_SC_AW_req(S_SC_AW_25_REQ),
        .S_SC_AW_send(S_SC_AW_25_SEND),
        .S_SC_B_info(S_SC_B_25_INFO),
        .S_SC_B_payld(S_SC_B_25_PAYLD),
        .S_SC_B_recv(S_SC_B_25_RECV),
        .S_SC_B_req(S_SC_B_25_REQ),
        .S_SC_B_send(S_SC_B_25_SEND),
        .S_SC_R_info(S_SC_R_25_INFO),
        .S_SC_R_payld(S_SC_R_25_PAYLD),
        .S_SC_R_recv(S_SC_R_25_RECV),
        .S_SC_R_req(S_SC_R_25_REQ),
        .S_SC_R_send(S_SC_R_25_SEND),
        .S_SC_W_info(S_SC_W_25_INFO),
        .S_SC_W_payld(S_SC_W_25_PAYLD),
        .S_SC_W_recv(S_SC_W_25_RECV),
        .S_SC_W_req(S_SC_W_25_REQ),
        .S_SC_W_send(S_SC_W_25_SEND),
        .m_axi_aclk(clk_map_M23_ACLK),
        .m_axi_aresetn(m_axi_aresetn_23),
        .s_axi_aclk(clk_map_M00_ACLK),
        .s_axi_aresetn(clk_map_M00_ARESETN));
  bd_afc3_m23s2a_0 m23_sc2axi
       (.aclk(clk_map_M23_ACLK),
        .m_axi_araddr(m23_sc2axi_M_AXI_ARADDR),
        .m_axi_arcache(m23_sc2axi_M_AXI_ARCACHE),
        .m_axi_arid(m23_sc2axi_M_AXI_ARID),
        .m_axi_arlen(m23_sc2axi_M_AXI_ARLEN),
        .m_axi_arlock(m23_sc2axi_M_AXI_ARLOCK),
        .m_axi_arprot(m23_sc2axi_M_AXI_ARPROT),
        .m_axi_arqos(m23_sc2axi_M_AXI_ARQOS),
        .m_axi_arready(m23_sc2axi_M_AXI_ARREADY),
        .m_axi_aruser(m23_sc2axi_M_AXI_ARUSER),
        .m_axi_arvalid(m23_sc2axi_M_AXI_ARVALID),
        .m_axi_awaddr(m23_sc2axi_M_AXI_AWADDR),
        .m_axi_awcache(m23_sc2axi_M_AXI_AWCACHE),
        .m_axi_awid(m23_sc2axi_M_AXI_AWID),
        .m_axi_awlen(m23_sc2axi_M_AXI_AWLEN),
        .m_axi_awlock(m23_sc2axi_M_AXI_AWLOCK),
        .m_axi_awprot(m23_sc2axi_M_AXI_AWPROT),
        .m_axi_awqos(m23_sc2axi_M_AXI_AWQOS),
        .m_axi_awready(m23_sc2axi_M_AXI_AWREADY),
        .m_axi_awuser(m23_sc2axi_M_AXI_AWUSER),
        .m_axi_awvalid(m23_sc2axi_M_AXI_AWVALID),
        .m_axi_bid(m23_sc2axi_M_AXI_BID),
        .m_axi_bready(m23_sc2axi_M_AXI_BREADY),
        .m_axi_bresp(m23_sc2axi_M_AXI_BRESP),
        .m_axi_buser(m23_sc2axi_M_AXI_BUSER),
        .m_axi_bvalid(m23_sc2axi_M_AXI_BVALID),
        .m_axi_rdata(m23_sc2axi_M_AXI_RDATA),
        .m_axi_rid(m23_sc2axi_M_AXI_RID),
        .m_axi_rlast(m23_sc2axi_M_AXI_RLAST),
        .m_axi_rready(m23_sc2axi_M_AXI_RREADY),
        .m_axi_rresp(m23_sc2axi_M_AXI_RRESP),
        .m_axi_ruser(m23_sc2axi_M_AXI_RUSER),
        .m_axi_rvalid(m23_sc2axi_M_AXI_RVALID),
        .m_axi_wdata(m23_sc2axi_M_AXI_WDATA),
        .m_axi_wlast(m23_sc2axi_M_AXI_WLAST),
        .m_axi_wready(m23_sc2axi_M_AXI_WREADY),
        .m_axi_wstrb(m23_sc2axi_M_AXI_WSTRB),
        .m_axi_wuser(m23_sc2axi_M_AXI_WUSER),
        .m_axi_wvalid(m23_sc2axi_M_AXI_WVALID),
        .m_sc_b_info(S_SC_B_25_INFO),
        .m_sc_b_payld(S_SC_B_25_PAYLD),
        .m_sc_b_recv(S_SC_B_25_RECV),
        .m_sc_b_req(S_SC_B_25_REQ),
        .m_sc_b_send(S_SC_B_25_SEND),
        .m_sc_r_info(S_SC_R_25_INFO),
        .m_sc_r_payld(S_SC_R_25_PAYLD),
        .m_sc_r_recv(S_SC_R_25_RECV),
        .m_sc_r_req(S_SC_R_25_REQ),
        .m_sc_r_send(S_SC_R_25_SEND),
        .s_sc_ar_info(m23_nodes_M_SC_AR_INFO),
        .s_sc_ar_payld(m23_nodes_M_SC_AR_PAYLD[179:0]),
        .s_sc_ar_recv(m23_nodes_M_SC_AR_RECV),
        .s_sc_ar_req(m23_nodes_M_SC_AR_REQ),
        .s_sc_ar_send(m23_nodes_M_SC_AR_SEND),
        .s_sc_aw_info(m23_nodes_M_SC_AW_INFO),
        .s_sc_aw_payld(m23_nodes_M_SC_AW_PAYLD[179:0]),
        .s_sc_aw_recv(m23_nodes_M_SC_AW_RECV),
        .s_sc_aw_req(m23_nodes_M_SC_AW_REQ),
        .s_sc_aw_send(m23_nodes_M_SC_AW_SEND),
        .s_sc_w_info(m23_nodes_M_SC_W_INFO),
        .s_sc_w_payld(m23_nodes_M_SC_W_PAYLD[66:0]),
        .s_sc_w_recv(m23_nodes_M_SC_W_RECV),
        .s_sc_w_req(m23_nodes_M_SC_W_REQ),
        .s_sc_w_send(m23_nodes_M_SC_W_SEND));
  m24_exit_pipeline_imp_PS4QTQ m24_exit_pipeline
       (.aclk(clk_map_M24_ACLK),
        .aresetn(m_axi_aresetn_24),
        .m_axi_araddr(m24_exit_pipeline_m_axi_ARADDR),
        .m_axi_arprot(m24_exit_pipeline_m_axi_ARPROT),
        .m_axi_arready(m24_exit_pipeline_m_axi_ARREADY),
        .m_axi_arvalid(m24_exit_pipeline_m_axi_ARVALID),
        .m_axi_awaddr(m24_exit_pipeline_m_axi_AWADDR),
        .m_axi_awprot(m24_exit_pipeline_m_axi_AWPROT),
        .m_axi_awready(m24_exit_pipeline_m_axi_AWREADY),
        .m_axi_awvalid(m24_exit_pipeline_m_axi_AWVALID),
        .m_axi_bready(m24_exit_pipeline_m_axi_BREADY),
        .m_axi_bresp(m24_exit_pipeline_m_axi_BRESP),
        .m_axi_bvalid(m24_exit_pipeline_m_axi_BVALID),
        .m_axi_rdata(m24_exit_pipeline_m_axi_RDATA),
        .m_axi_rready(m24_exit_pipeline_m_axi_RREADY),
        .m_axi_rresp(m24_exit_pipeline_m_axi_RRESP),
        .m_axi_rvalid(m24_exit_pipeline_m_axi_RVALID),
        .m_axi_wdata(m24_exit_pipeline_m_axi_WDATA),
        .m_axi_wready(m24_exit_pipeline_m_axi_WREADY),
        .m_axi_wstrb(m24_exit_pipeline_m_axi_WSTRB),
        .m_axi_wvalid(m24_exit_pipeline_m_axi_WVALID),
        .s_axi_araddr(m24_sc2axi_M_AXI_ARADDR),
        .s_axi_arcache(m24_sc2axi_M_AXI_ARCACHE),
        .s_axi_arid(m24_sc2axi_M_AXI_ARID),
        .s_axi_arlen(m24_sc2axi_M_AXI_ARLEN),
        .s_axi_arlock(m24_sc2axi_M_AXI_ARLOCK),
        .s_axi_arprot(m24_sc2axi_M_AXI_ARPROT),
        .s_axi_arqos(m24_sc2axi_M_AXI_ARQOS),
        .s_axi_arready(m24_sc2axi_M_AXI_ARREADY),
        .s_axi_aruser(m24_sc2axi_M_AXI_ARUSER),
        .s_axi_arvalid(m24_sc2axi_M_AXI_ARVALID),
        .s_axi_awaddr(m24_sc2axi_M_AXI_AWADDR),
        .s_axi_awcache(m24_sc2axi_M_AXI_AWCACHE),
        .s_axi_awid(m24_sc2axi_M_AXI_AWID),
        .s_axi_awlen(m24_sc2axi_M_AXI_AWLEN),
        .s_axi_awlock(m24_sc2axi_M_AXI_AWLOCK),
        .s_axi_awprot(m24_sc2axi_M_AXI_AWPROT),
        .s_axi_awqos(m24_sc2axi_M_AXI_AWQOS),
        .s_axi_awready(m24_sc2axi_M_AXI_AWREADY),
        .s_axi_awuser(m24_sc2axi_M_AXI_AWUSER),
        .s_axi_awvalid(m24_sc2axi_M_AXI_AWVALID),
        .s_axi_bid(m24_sc2axi_M_AXI_BID),
        .s_axi_bready(m24_sc2axi_M_AXI_BREADY),
        .s_axi_bresp(m24_sc2axi_M_AXI_BRESP),
        .s_axi_buser(m24_sc2axi_M_AXI_BUSER),
        .s_axi_bvalid(m24_sc2axi_M_AXI_BVALID),
        .s_axi_rdata(m24_sc2axi_M_AXI_RDATA),
        .s_axi_rid(m24_sc2axi_M_AXI_RID),
        .s_axi_rlast(m24_sc2axi_M_AXI_RLAST),
        .s_axi_rready(m24_sc2axi_M_AXI_RREADY),
        .s_axi_rresp(m24_sc2axi_M_AXI_RRESP),
        .s_axi_ruser(m24_sc2axi_M_AXI_RUSER),
        .s_axi_rvalid(m24_sc2axi_M_AXI_RVALID),
        .s_axi_wdata(m24_sc2axi_M_AXI_WDATA),
        .s_axi_wlast(m24_sc2axi_M_AXI_WLAST),
        .s_axi_wready(m24_sc2axi_M_AXI_WREADY),
        .s_axi_wstrb(m24_sc2axi_M_AXI_WSTRB),
        .s_axi_wuser(m24_sc2axi_M_AXI_WUSER),
        .s_axi_wvalid(m24_sc2axi_M_AXI_WVALID));
  m24_nodes_imp_3JH6RL m24_nodes
       (.M_SC_AR_info(m24_nodes_M_SC_AR_INFO),
        .M_SC_AR_payld(m24_nodes_M_SC_AR_PAYLD),
        .M_SC_AR_recv(m24_nodes_M_SC_AR_RECV),
        .M_SC_AR_req(m24_nodes_M_SC_AR_REQ),
        .M_SC_AR_send(m24_nodes_M_SC_AR_SEND),
        .M_SC_AW_info(m24_nodes_M_SC_AW_INFO),
        .M_SC_AW_payld(m24_nodes_M_SC_AW_PAYLD),
        .M_SC_AW_recv(m24_nodes_M_SC_AW_RECV),
        .M_SC_AW_req(m24_nodes_M_SC_AW_REQ),
        .M_SC_AW_send(m24_nodes_M_SC_AW_SEND),
        .M_SC_B_info(m24_nodes_M_SC_B_INFO),
        .M_SC_B_payld(m24_nodes_M_SC_B_PAYLD),
        .M_SC_B_recv(m24_nodes_M_SC_B_RECV),
        .M_SC_B_req(m24_nodes_M_SC_B_REQ),
        .M_SC_B_send(m24_nodes_M_SC_B_SEND),
        .M_SC_R_info(m24_nodes_M_SC_R_INFO),
        .M_SC_R_payld(m24_nodes_M_SC_R_PAYLD),
        .M_SC_R_recv(m24_nodes_M_SC_R_RECV),
        .M_SC_R_req(m24_nodes_M_SC_R_REQ),
        .M_SC_R_send(m24_nodes_M_SC_R_SEND),
        .M_SC_W_info(m24_nodes_M_SC_W_INFO),
        .M_SC_W_payld(m24_nodes_M_SC_W_PAYLD),
        .M_SC_W_recv(m24_nodes_M_SC_W_RECV),
        .M_SC_W_req(m24_nodes_M_SC_W_REQ),
        .M_SC_W_send(m24_nodes_M_SC_W_SEND),
        .S_SC_AR_info(S_SC_AR_26_INFO),
        .S_SC_AR_payld(S_SC_AR_26_PAYLD),
        .S_SC_AR_recv(S_SC_AR_26_RECV),
        .S_SC_AR_req(S_SC_AR_26_REQ),
        .S_SC_AR_send(S_SC_AR_26_SEND),
        .S_SC_AW_info(S_SC_AW_26_INFO),
        .S_SC_AW_payld(S_SC_AW_26_PAYLD),
        .S_SC_AW_recv(S_SC_AW_26_RECV),
        .S_SC_AW_req(S_SC_AW_26_REQ),
        .S_SC_AW_send(S_SC_AW_26_SEND),
        .S_SC_B_info(S_SC_B_26_INFO),
        .S_SC_B_payld(S_SC_B_26_PAYLD),
        .S_SC_B_recv(S_SC_B_26_RECV),
        .S_SC_B_req(S_SC_B_26_REQ),
        .S_SC_B_send(S_SC_B_26_SEND),
        .S_SC_R_info(S_SC_R_26_INFO),
        .S_SC_R_payld(S_SC_R_26_PAYLD),
        .S_SC_R_recv(S_SC_R_26_RECV),
        .S_SC_R_req(S_SC_R_26_REQ),
        .S_SC_R_send(S_SC_R_26_SEND),
        .S_SC_W_info(S_SC_W_26_INFO),
        .S_SC_W_payld(S_SC_W_26_PAYLD),
        .S_SC_W_recv(S_SC_W_26_RECV),
        .S_SC_W_req(S_SC_W_26_REQ),
        .S_SC_W_send(S_SC_W_26_SEND),
        .m_axi_aclk(clk_map_M24_ACLK),
        .m_axi_aresetn(m_axi_aresetn_24),
        .s_axi_aclk(clk_map_M00_ACLK),
        .s_axi_aresetn(clk_map_M00_ARESETN));
  bd_afc3_m24s2a_0 m24_sc2axi
       (.aclk(clk_map_M24_ACLK),
        .m_axi_araddr(m24_sc2axi_M_AXI_ARADDR),
        .m_axi_arcache(m24_sc2axi_M_AXI_ARCACHE),
        .m_axi_arid(m24_sc2axi_M_AXI_ARID),
        .m_axi_arlen(m24_sc2axi_M_AXI_ARLEN),
        .m_axi_arlock(m24_sc2axi_M_AXI_ARLOCK),
        .m_axi_arprot(m24_sc2axi_M_AXI_ARPROT),
        .m_axi_arqos(m24_sc2axi_M_AXI_ARQOS),
        .m_axi_arready(m24_sc2axi_M_AXI_ARREADY),
        .m_axi_aruser(m24_sc2axi_M_AXI_ARUSER),
        .m_axi_arvalid(m24_sc2axi_M_AXI_ARVALID),
        .m_axi_awaddr(m24_sc2axi_M_AXI_AWADDR),
        .m_axi_awcache(m24_sc2axi_M_AXI_AWCACHE),
        .m_axi_awid(m24_sc2axi_M_AXI_AWID),
        .m_axi_awlen(m24_sc2axi_M_AXI_AWLEN),
        .m_axi_awlock(m24_sc2axi_M_AXI_AWLOCK),
        .m_axi_awprot(m24_sc2axi_M_AXI_AWPROT),
        .m_axi_awqos(m24_sc2axi_M_AXI_AWQOS),
        .m_axi_awready(m24_sc2axi_M_AXI_AWREADY),
        .m_axi_awuser(m24_sc2axi_M_AXI_AWUSER),
        .m_axi_awvalid(m24_sc2axi_M_AXI_AWVALID),
        .m_axi_bid(m24_sc2axi_M_AXI_BID),
        .m_axi_bready(m24_sc2axi_M_AXI_BREADY),
        .m_axi_bresp(m24_sc2axi_M_AXI_BRESP),
        .m_axi_buser(m24_sc2axi_M_AXI_BUSER),
        .m_axi_bvalid(m24_sc2axi_M_AXI_BVALID),
        .m_axi_rdata(m24_sc2axi_M_AXI_RDATA),
        .m_axi_rid(m24_sc2axi_M_AXI_RID),
        .m_axi_rlast(m24_sc2axi_M_AXI_RLAST),
        .m_axi_rready(m24_sc2axi_M_AXI_RREADY),
        .m_axi_rresp(m24_sc2axi_M_AXI_RRESP),
        .m_axi_ruser(m24_sc2axi_M_AXI_RUSER),
        .m_axi_rvalid(m24_sc2axi_M_AXI_RVALID),
        .m_axi_wdata(m24_sc2axi_M_AXI_WDATA),
        .m_axi_wlast(m24_sc2axi_M_AXI_WLAST),
        .m_axi_wready(m24_sc2axi_M_AXI_WREADY),
        .m_axi_wstrb(m24_sc2axi_M_AXI_WSTRB),
        .m_axi_wuser(m24_sc2axi_M_AXI_WUSER),
        .m_axi_wvalid(m24_sc2axi_M_AXI_WVALID),
        .m_sc_b_info(S_SC_B_26_INFO),
        .m_sc_b_payld(S_SC_B_26_PAYLD),
        .m_sc_b_recv(S_SC_B_26_RECV),
        .m_sc_b_req(S_SC_B_26_REQ),
        .m_sc_b_send(S_SC_B_26_SEND),
        .m_sc_r_info(S_SC_R_26_INFO),
        .m_sc_r_payld(S_SC_R_26_PAYLD),
        .m_sc_r_recv(S_SC_R_26_RECV),
        .m_sc_r_req(S_SC_R_26_REQ),
        .m_sc_r_send(S_SC_R_26_SEND),
        .s_sc_ar_info(m24_nodes_M_SC_AR_INFO),
        .s_sc_ar_payld(m24_nodes_M_SC_AR_PAYLD[179:0]),
        .s_sc_ar_recv(m24_nodes_M_SC_AR_RECV),
        .s_sc_ar_req(m24_nodes_M_SC_AR_REQ),
        .s_sc_ar_send(m24_nodes_M_SC_AR_SEND),
        .s_sc_aw_info(m24_nodes_M_SC_AW_INFO),
        .s_sc_aw_payld(m24_nodes_M_SC_AW_PAYLD[179:0]),
        .s_sc_aw_recv(m24_nodes_M_SC_AW_RECV),
        .s_sc_aw_req(m24_nodes_M_SC_AW_REQ),
        .s_sc_aw_send(m24_nodes_M_SC_AW_SEND),
        .s_sc_w_info(m24_nodes_M_SC_W_INFO),
        .s_sc_w_payld(m24_nodes_M_SC_W_PAYLD[66:0]),
        .s_sc_w_recv(m24_nodes_M_SC_W_RECV),
        .s_sc_w_req(m24_nodes_M_SC_W_REQ),
        .s_sc_w_send(m24_nodes_M_SC_W_SEND));
  m25_exit_pipeline_imp_L0S07I m25_exit_pipeline
       (.aclk(clk_map_M25_ACLK),
        .aresetn(m_axi_aresetn_25),
        .m_axi_araddr(m25_exit_pipeline_m_axi_ARADDR),
        .m_axi_arprot(m25_exit_pipeline_m_axi_ARPROT),
        .m_axi_arready(m25_exit_pipeline_m_axi_ARREADY),
        .m_axi_arvalid(m25_exit_pipeline_m_axi_ARVALID),
        .m_axi_awaddr(m25_exit_pipeline_m_axi_AWADDR),
        .m_axi_awprot(m25_exit_pipeline_m_axi_AWPROT),
        .m_axi_awready(m25_exit_pipeline_m_axi_AWREADY),
        .m_axi_awvalid(m25_exit_pipeline_m_axi_AWVALID),
        .m_axi_bready(m25_exit_pipeline_m_axi_BREADY),
        .m_axi_bresp(m25_exit_pipeline_m_axi_BRESP),
        .m_axi_bvalid(m25_exit_pipeline_m_axi_BVALID),
        .m_axi_rdata(m25_exit_pipeline_m_axi_RDATA),
        .m_axi_rready(m25_exit_pipeline_m_axi_RREADY),
        .m_axi_rresp(m25_exit_pipeline_m_axi_RRESP),
        .m_axi_rvalid(m25_exit_pipeline_m_axi_RVALID),
        .m_axi_wdata(m25_exit_pipeline_m_axi_WDATA),
        .m_axi_wready(m25_exit_pipeline_m_axi_WREADY),
        .m_axi_wstrb(m25_exit_pipeline_m_axi_WSTRB),
        .m_axi_wvalid(m25_exit_pipeline_m_axi_WVALID),
        .s_axi_araddr(m25_sc2axi_M_AXI_ARADDR),
        .s_axi_arcache(m25_sc2axi_M_AXI_ARCACHE),
        .s_axi_arid(m25_sc2axi_M_AXI_ARID),
        .s_axi_arlen(m25_sc2axi_M_AXI_ARLEN),
        .s_axi_arlock(m25_sc2axi_M_AXI_ARLOCK),
        .s_axi_arprot(m25_sc2axi_M_AXI_ARPROT),
        .s_axi_arqos(m25_sc2axi_M_AXI_ARQOS),
        .s_axi_arready(m25_sc2axi_M_AXI_ARREADY),
        .s_axi_aruser(m25_sc2axi_M_AXI_ARUSER),
        .s_axi_arvalid(m25_sc2axi_M_AXI_ARVALID),
        .s_axi_awaddr(m25_sc2axi_M_AXI_AWADDR),
        .s_axi_awcache(m25_sc2axi_M_AXI_AWCACHE),
        .s_axi_awid(m25_sc2axi_M_AXI_AWID),
        .s_axi_awlen(m25_sc2axi_M_AXI_AWLEN),
        .s_axi_awlock(m25_sc2axi_M_AXI_AWLOCK),
        .s_axi_awprot(m25_sc2axi_M_AXI_AWPROT),
        .s_axi_awqos(m25_sc2axi_M_AXI_AWQOS),
        .s_axi_awready(m25_sc2axi_M_AXI_AWREADY),
        .s_axi_awuser(m25_sc2axi_M_AXI_AWUSER),
        .s_axi_awvalid(m25_sc2axi_M_AXI_AWVALID),
        .s_axi_bid(m25_sc2axi_M_AXI_BID),
        .s_axi_bready(m25_sc2axi_M_AXI_BREADY),
        .s_axi_bresp(m25_sc2axi_M_AXI_BRESP),
        .s_axi_buser(m25_sc2axi_M_AXI_BUSER),
        .s_axi_bvalid(m25_sc2axi_M_AXI_BVALID),
        .s_axi_rdata(m25_sc2axi_M_AXI_RDATA),
        .s_axi_rid(m25_sc2axi_M_AXI_RID),
        .s_axi_rlast(m25_sc2axi_M_AXI_RLAST),
        .s_axi_rready(m25_sc2axi_M_AXI_RREADY),
        .s_axi_rresp(m25_sc2axi_M_AXI_RRESP),
        .s_axi_ruser(m25_sc2axi_M_AXI_RUSER),
        .s_axi_rvalid(m25_sc2axi_M_AXI_RVALID),
        .s_axi_wdata(m25_sc2axi_M_AXI_WDATA),
        .s_axi_wlast(m25_sc2axi_M_AXI_WLAST),
        .s_axi_wready(m25_sc2axi_M_AXI_WREADY),
        .s_axi_wstrb(m25_sc2axi_M_AXI_WSTRB),
        .s_axi_wuser(m25_sc2axi_M_AXI_WUSER),
        .s_axi_wvalid(m25_sc2axi_M_AXI_WVALID));
  m25_nodes_imp_14GD1X3 m25_nodes
       (.M_SC_AR_info(m25_nodes_M_SC_AR_INFO),
        .M_SC_AR_payld(m25_nodes_M_SC_AR_PAYLD),
        .M_SC_AR_recv(m25_nodes_M_SC_AR_RECV),
        .M_SC_AR_req(m25_nodes_M_SC_AR_REQ),
        .M_SC_AR_send(m25_nodes_M_SC_AR_SEND),
        .M_SC_AW_info(m25_nodes_M_SC_AW_INFO),
        .M_SC_AW_payld(m25_nodes_M_SC_AW_PAYLD),
        .M_SC_AW_recv(m25_nodes_M_SC_AW_RECV),
        .M_SC_AW_req(m25_nodes_M_SC_AW_REQ),
        .M_SC_AW_send(m25_nodes_M_SC_AW_SEND),
        .M_SC_B_info(m25_nodes_M_SC_B_INFO),
        .M_SC_B_payld(m25_nodes_M_SC_B_PAYLD),
        .M_SC_B_recv(m25_nodes_M_SC_B_RECV),
        .M_SC_B_req(m25_nodes_M_SC_B_REQ),
        .M_SC_B_send(m25_nodes_M_SC_B_SEND),
        .M_SC_R_info(m25_nodes_M_SC_R_INFO),
        .M_SC_R_payld(m25_nodes_M_SC_R_PAYLD),
        .M_SC_R_recv(m25_nodes_M_SC_R_RECV),
        .M_SC_R_req(m25_nodes_M_SC_R_REQ),
        .M_SC_R_send(m25_nodes_M_SC_R_SEND),
        .M_SC_W_info(m25_nodes_M_SC_W_INFO),
        .M_SC_W_payld(m25_nodes_M_SC_W_PAYLD),
        .M_SC_W_recv(m25_nodes_M_SC_W_RECV),
        .M_SC_W_req(m25_nodes_M_SC_W_REQ),
        .M_SC_W_send(m25_nodes_M_SC_W_SEND),
        .S_SC_AR_info(S_SC_AR_27_INFO),
        .S_SC_AR_payld(S_SC_AR_27_PAYLD),
        .S_SC_AR_recv(S_SC_AR_27_RECV),
        .S_SC_AR_req(S_SC_AR_27_REQ),
        .S_SC_AR_send(S_SC_AR_27_SEND),
        .S_SC_AW_info(S_SC_AW_27_INFO),
        .S_SC_AW_payld(S_SC_AW_27_PAYLD),
        .S_SC_AW_recv(S_SC_AW_27_RECV),
        .S_SC_AW_req(S_SC_AW_27_REQ),
        .S_SC_AW_send(S_SC_AW_27_SEND),
        .S_SC_B_info(S_SC_B_27_INFO),
        .S_SC_B_payld(S_SC_B_27_PAYLD),
        .S_SC_B_recv(S_SC_B_27_RECV),
        .S_SC_B_req(S_SC_B_27_REQ),
        .S_SC_B_send(S_SC_B_27_SEND),
        .S_SC_R_info(S_SC_R_27_INFO),
        .S_SC_R_payld(S_SC_R_27_PAYLD),
        .S_SC_R_recv(S_SC_R_27_RECV),
        .S_SC_R_req(S_SC_R_27_REQ),
        .S_SC_R_send(S_SC_R_27_SEND),
        .S_SC_W_info(S_SC_W_27_INFO),
        .S_SC_W_payld(S_SC_W_27_PAYLD),
        .S_SC_W_recv(S_SC_W_27_RECV),
        .S_SC_W_req(S_SC_W_27_REQ),
        .S_SC_W_send(S_SC_W_27_SEND),
        .m_axi_aclk(clk_map_M25_ACLK),
        .m_axi_aresetn(m_axi_aresetn_25),
        .s_axi_aclk(clk_map_M00_ACLK),
        .s_axi_aresetn(clk_map_M00_ARESETN));
  bd_afc3_m25s2a_0 m25_sc2axi
       (.aclk(clk_map_M25_ACLK),
        .m_axi_araddr(m25_sc2axi_M_AXI_ARADDR),
        .m_axi_arcache(m25_sc2axi_M_AXI_ARCACHE),
        .m_axi_arid(m25_sc2axi_M_AXI_ARID),
        .m_axi_arlen(m25_sc2axi_M_AXI_ARLEN),
        .m_axi_arlock(m25_sc2axi_M_AXI_ARLOCK),
        .m_axi_arprot(m25_sc2axi_M_AXI_ARPROT),
        .m_axi_arqos(m25_sc2axi_M_AXI_ARQOS),
        .m_axi_arready(m25_sc2axi_M_AXI_ARREADY),
        .m_axi_aruser(m25_sc2axi_M_AXI_ARUSER),
        .m_axi_arvalid(m25_sc2axi_M_AXI_ARVALID),
        .m_axi_awaddr(m25_sc2axi_M_AXI_AWADDR),
        .m_axi_awcache(m25_sc2axi_M_AXI_AWCACHE),
        .m_axi_awid(m25_sc2axi_M_AXI_AWID),
        .m_axi_awlen(m25_sc2axi_M_AXI_AWLEN),
        .m_axi_awlock(m25_sc2axi_M_AXI_AWLOCK),
        .m_axi_awprot(m25_sc2axi_M_AXI_AWPROT),
        .m_axi_awqos(m25_sc2axi_M_AXI_AWQOS),
        .m_axi_awready(m25_sc2axi_M_AXI_AWREADY),
        .m_axi_awuser(m25_sc2axi_M_AXI_AWUSER),
        .m_axi_awvalid(m25_sc2axi_M_AXI_AWVALID),
        .m_axi_bid(m25_sc2axi_M_AXI_BID),
        .m_axi_bready(m25_sc2axi_M_AXI_BREADY),
        .m_axi_bresp(m25_sc2axi_M_AXI_BRESP),
        .m_axi_buser(m25_sc2axi_M_AXI_BUSER),
        .m_axi_bvalid(m25_sc2axi_M_AXI_BVALID),
        .m_axi_rdata(m25_sc2axi_M_AXI_RDATA),
        .m_axi_rid(m25_sc2axi_M_AXI_RID),
        .m_axi_rlast(m25_sc2axi_M_AXI_RLAST),
        .m_axi_rready(m25_sc2axi_M_AXI_RREADY),
        .m_axi_rresp(m25_sc2axi_M_AXI_RRESP),
        .m_axi_ruser(m25_sc2axi_M_AXI_RUSER),
        .m_axi_rvalid(m25_sc2axi_M_AXI_RVALID),
        .m_axi_wdata(m25_sc2axi_M_AXI_WDATA),
        .m_axi_wlast(m25_sc2axi_M_AXI_WLAST),
        .m_axi_wready(m25_sc2axi_M_AXI_WREADY),
        .m_axi_wstrb(m25_sc2axi_M_AXI_WSTRB),
        .m_axi_wuser(m25_sc2axi_M_AXI_WUSER),
        .m_axi_wvalid(m25_sc2axi_M_AXI_WVALID),
        .m_sc_b_info(S_SC_B_27_INFO),
        .m_sc_b_payld(S_SC_B_27_PAYLD),
        .m_sc_b_recv(S_SC_B_27_RECV),
        .m_sc_b_req(S_SC_B_27_REQ),
        .m_sc_b_send(S_SC_B_27_SEND),
        .m_sc_r_info(S_SC_R_27_INFO),
        .m_sc_r_payld(S_SC_R_27_PAYLD),
        .m_sc_r_recv(S_SC_R_27_RECV),
        .m_sc_r_req(S_SC_R_27_REQ),
        .m_sc_r_send(S_SC_R_27_SEND),
        .s_sc_ar_info(m25_nodes_M_SC_AR_INFO),
        .s_sc_ar_payld(m25_nodes_M_SC_AR_PAYLD[179:0]),
        .s_sc_ar_recv(m25_nodes_M_SC_AR_RECV),
        .s_sc_ar_req(m25_nodes_M_SC_AR_REQ),
        .s_sc_ar_send(m25_nodes_M_SC_AR_SEND),
        .s_sc_aw_info(m25_nodes_M_SC_AW_INFO),
        .s_sc_aw_payld(m25_nodes_M_SC_AW_PAYLD[179:0]),
        .s_sc_aw_recv(m25_nodes_M_SC_AW_RECV),
        .s_sc_aw_req(m25_nodes_M_SC_AW_REQ),
        .s_sc_aw_send(m25_nodes_M_SC_AW_SEND),
        .s_sc_w_info(m25_nodes_M_SC_W_INFO),
        .s_sc_w_payld(m25_nodes_M_SC_W_PAYLD[66:0]),
        .s_sc_w_recv(m25_nodes_M_SC_W_RECV),
        .s_sc_w_req(m25_nodes_M_SC_W_REQ),
        .s_sc_w_send(m25_nodes_M_SC_W_SEND));
  m26_exit_pipeline_imp_VU1HLA m26_exit_pipeline
       (.aclk(clk_map_M26_ACLK),
        .aresetn(m_axi_aresetn_26),
        .m_axi_araddr(m26_exit_pipeline_m_axi_ARADDR),
        .m_axi_arprot(m26_exit_pipeline_m_axi_ARPROT),
        .m_axi_arready(m26_exit_pipeline_m_axi_ARREADY),
        .m_axi_arvalid(m26_exit_pipeline_m_axi_ARVALID),
        .m_axi_awaddr(m26_exit_pipeline_m_axi_AWADDR),
        .m_axi_awprot(m26_exit_pipeline_m_axi_AWPROT),
        .m_axi_awready(m26_exit_pipeline_m_axi_AWREADY),
        .m_axi_awvalid(m26_exit_pipeline_m_axi_AWVALID),
        .m_axi_bready(m26_exit_pipeline_m_axi_BREADY),
        .m_axi_bresp(m26_exit_pipeline_m_axi_BRESP),
        .m_axi_bvalid(m26_exit_pipeline_m_axi_BVALID),
        .m_axi_rdata(m26_exit_pipeline_m_axi_RDATA),
        .m_axi_rready(m26_exit_pipeline_m_axi_RREADY),
        .m_axi_rresp(m26_exit_pipeline_m_axi_RRESP),
        .m_axi_rvalid(m26_exit_pipeline_m_axi_RVALID),
        .m_axi_wdata(m26_exit_pipeline_m_axi_WDATA),
        .m_axi_wready(m26_exit_pipeline_m_axi_WREADY),
        .m_axi_wstrb(m26_exit_pipeline_m_axi_WSTRB),
        .m_axi_wvalid(m26_exit_pipeline_m_axi_WVALID),
        .s_axi_araddr(m26_sc2axi_M_AXI_ARADDR),
        .s_axi_arcache(m26_sc2axi_M_AXI_ARCACHE),
        .s_axi_arid(m26_sc2axi_M_AXI_ARID),
        .s_axi_arlen(m26_sc2axi_M_AXI_ARLEN),
        .s_axi_arlock(m26_sc2axi_M_AXI_ARLOCK),
        .s_axi_arprot(m26_sc2axi_M_AXI_ARPROT),
        .s_axi_arqos(m26_sc2axi_M_AXI_ARQOS),
        .s_axi_arready(m26_sc2axi_M_AXI_ARREADY),
        .s_axi_aruser(m26_sc2axi_M_AXI_ARUSER),
        .s_axi_arvalid(m26_sc2axi_M_AXI_ARVALID),
        .s_axi_awaddr(m26_sc2axi_M_AXI_AWADDR),
        .s_axi_awcache(m26_sc2axi_M_AXI_AWCACHE),
        .s_axi_awid(m26_sc2axi_M_AXI_AWID),
        .s_axi_awlen(m26_sc2axi_M_AXI_AWLEN),
        .s_axi_awlock(m26_sc2axi_M_AXI_AWLOCK),
        .s_axi_awprot(m26_sc2axi_M_AXI_AWPROT),
        .s_axi_awqos(m26_sc2axi_M_AXI_AWQOS),
        .s_axi_awready(m26_sc2axi_M_AXI_AWREADY),
        .s_axi_awuser(m26_sc2axi_M_AXI_AWUSER),
        .s_axi_awvalid(m26_sc2axi_M_AXI_AWVALID),
        .s_axi_bid(m26_sc2axi_M_AXI_BID),
        .s_axi_bready(m26_sc2axi_M_AXI_BREADY),
        .s_axi_bresp(m26_sc2axi_M_AXI_BRESP),
        .s_axi_buser(m26_sc2axi_M_AXI_BUSER),
        .s_axi_bvalid(m26_sc2axi_M_AXI_BVALID),
        .s_axi_rdata(m26_sc2axi_M_AXI_RDATA),
        .s_axi_rid(m26_sc2axi_M_AXI_RID),
        .s_axi_rlast(m26_sc2axi_M_AXI_RLAST),
        .s_axi_rready(m26_sc2axi_M_AXI_RREADY),
        .s_axi_rresp(m26_sc2axi_M_AXI_RRESP),
        .s_axi_ruser(m26_sc2axi_M_AXI_RUSER),
        .s_axi_rvalid(m26_sc2axi_M_AXI_RVALID),
        .s_axi_wdata(m26_sc2axi_M_AXI_WDATA),
        .s_axi_wlast(m26_sc2axi_M_AXI_WLAST),
        .s_axi_wready(m26_sc2axi_M_AXI_WREADY),
        .s_axi_wstrb(m26_sc2axi_M_AXI_WSTRB),
        .s_axi_wuser(m26_sc2axi_M_AXI_WUSER),
        .s_axi_wvalid(m26_sc2axi_M_AXI_WVALID));
  m26_nodes_imp_1TY4018 m26_nodes
       (.M_SC_AR_info(m26_nodes_M_SC_AR_INFO),
        .M_SC_AR_payld(m26_nodes_M_SC_AR_PAYLD),
        .M_SC_AR_recv(m26_nodes_M_SC_AR_RECV),
        .M_SC_AR_req(m26_nodes_M_SC_AR_REQ),
        .M_SC_AR_send(m26_nodes_M_SC_AR_SEND),
        .M_SC_AW_info(m26_nodes_M_SC_AW_INFO),
        .M_SC_AW_payld(m26_nodes_M_SC_AW_PAYLD),
        .M_SC_AW_recv(m26_nodes_M_SC_AW_RECV),
        .M_SC_AW_req(m26_nodes_M_SC_AW_REQ),
        .M_SC_AW_send(m26_nodes_M_SC_AW_SEND),
        .M_SC_B_info(m26_nodes_M_SC_B_INFO),
        .M_SC_B_payld(m26_nodes_M_SC_B_PAYLD),
        .M_SC_B_recv(m26_nodes_M_SC_B_RECV),
        .M_SC_B_req(m26_nodes_M_SC_B_REQ),
        .M_SC_B_send(m26_nodes_M_SC_B_SEND),
        .M_SC_R_info(m26_nodes_M_SC_R_INFO),
        .M_SC_R_payld(m26_nodes_M_SC_R_PAYLD),
        .M_SC_R_recv(m26_nodes_M_SC_R_RECV),
        .M_SC_R_req(m26_nodes_M_SC_R_REQ),
        .M_SC_R_send(m26_nodes_M_SC_R_SEND),
        .M_SC_W_info(m26_nodes_M_SC_W_INFO),
        .M_SC_W_payld(m26_nodes_M_SC_W_PAYLD),
        .M_SC_W_recv(m26_nodes_M_SC_W_RECV),
        .M_SC_W_req(m26_nodes_M_SC_W_REQ),
        .M_SC_W_send(m26_nodes_M_SC_W_SEND),
        .S_SC_AR_info(S_SC_AR_28_INFO),
        .S_SC_AR_payld(S_SC_AR_28_PAYLD),
        .S_SC_AR_recv(S_SC_AR_28_RECV),
        .S_SC_AR_req(S_SC_AR_28_REQ),
        .S_SC_AR_send(S_SC_AR_28_SEND),
        .S_SC_AW_info(S_SC_AW_28_INFO),
        .S_SC_AW_payld(S_SC_AW_28_PAYLD),
        .S_SC_AW_recv(S_SC_AW_28_RECV),
        .S_SC_AW_req(S_SC_AW_28_REQ),
        .S_SC_AW_send(S_SC_AW_28_SEND),
        .S_SC_B_info(S_SC_B_28_INFO),
        .S_SC_B_payld(S_SC_B_28_PAYLD),
        .S_SC_B_recv(S_SC_B_28_RECV),
        .S_SC_B_req(S_SC_B_28_REQ),
        .S_SC_B_send(S_SC_B_28_SEND),
        .S_SC_R_info(S_SC_R_28_INFO),
        .S_SC_R_payld(S_SC_R_28_PAYLD),
        .S_SC_R_recv(S_SC_R_28_RECV),
        .S_SC_R_req(S_SC_R_28_REQ),
        .S_SC_R_send(S_SC_R_28_SEND),
        .S_SC_W_info(S_SC_W_28_INFO),
        .S_SC_W_payld(S_SC_W_28_PAYLD),
        .S_SC_W_recv(S_SC_W_28_RECV),
        .S_SC_W_req(S_SC_W_28_REQ),
        .S_SC_W_send(S_SC_W_28_SEND),
        .m_axi_aclk(clk_map_M26_ACLK),
        .m_axi_aresetn(m_axi_aresetn_26),
        .s_axi_aclk(clk_map_M00_ACLK),
        .s_axi_aresetn(clk_map_M00_ARESETN));
  bd_afc3_m26s2a_0 m26_sc2axi
       (.aclk(clk_map_M26_ACLK),
        .m_axi_araddr(m26_sc2axi_M_AXI_ARADDR),
        .m_axi_arcache(m26_sc2axi_M_AXI_ARCACHE),
        .m_axi_arid(m26_sc2axi_M_AXI_ARID),
        .m_axi_arlen(m26_sc2axi_M_AXI_ARLEN),
        .m_axi_arlock(m26_sc2axi_M_AXI_ARLOCK),
        .m_axi_arprot(m26_sc2axi_M_AXI_ARPROT),
        .m_axi_arqos(m26_sc2axi_M_AXI_ARQOS),
        .m_axi_arready(m26_sc2axi_M_AXI_ARREADY),
        .m_axi_aruser(m26_sc2axi_M_AXI_ARUSER),
        .m_axi_arvalid(m26_sc2axi_M_AXI_ARVALID),
        .m_axi_awaddr(m26_sc2axi_M_AXI_AWADDR),
        .m_axi_awcache(m26_sc2axi_M_AXI_AWCACHE),
        .m_axi_awid(m26_sc2axi_M_AXI_AWID),
        .m_axi_awlen(m26_sc2axi_M_AXI_AWLEN),
        .m_axi_awlock(m26_sc2axi_M_AXI_AWLOCK),
        .m_axi_awprot(m26_sc2axi_M_AXI_AWPROT),
        .m_axi_awqos(m26_sc2axi_M_AXI_AWQOS),
        .m_axi_awready(m26_sc2axi_M_AXI_AWREADY),
        .m_axi_awuser(m26_sc2axi_M_AXI_AWUSER),
        .m_axi_awvalid(m26_sc2axi_M_AXI_AWVALID),
        .m_axi_bid(m26_sc2axi_M_AXI_BID),
        .m_axi_bready(m26_sc2axi_M_AXI_BREADY),
        .m_axi_bresp(m26_sc2axi_M_AXI_BRESP),
        .m_axi_buser(m26_sc2axi_M_AXI_BUSER),
        .m_axi_bvalid(m26_sc2axi_M_AXI_BVALID),
        .m_axi_rdata(m26_sc2axi_M_AXI_RDATA),
        .m_axi_rid(m26_sc2axi_M_AXI_RID),
        .m_axi_rlast(m26_sc2axi_M_AXI_RLAST),
        .m_axi_rready(m26_sc2axi_M_AXI_RREADY),
        .m_axi_rresp(m26_sc2axi_M_AXI_RRESP),
        .m_axi_ruser(m26_sc2axi_M_AXI_RUSER),
        .m_axi_rvalid(m26_sc2axi_M_AXI_RVALID),
        .m_axi_wdata(m26_sc2axi_M_AXI_WDATA),
        .m_axi_wlast(m26_sc2axi_M_AXI_WLAST),
        .m_axi_wready(m26_sc2axi_M_AXI_WREADY),
        .m_axi_wstrb(m26_sc2axi_M_AXI_WSTRB),
        .m_axi_wuser(m26_sc2axi_M_AXI_WUSER),
        .m_axi_wvalid(m26_sc2axi_M_AXI_WVALID),
        .m_sc_b_info(S_SC_B_28_INFO),
        .m_sc_b_payld(S_SC_B_28_PAYLD),
        .m_sc_b_recv(S_SC_B_28_RECV),
        .m_sc_b_req(S_SC_B_28_REQ),
        .m_sc_b_send(S_SC_B_28_SEND),
        .m_sc_r_info(S_SC_R_28_INFO),
        .m_sc_r_payld(S_SC_R_28_PAYLD),
        .m_sc_r_recv(S_SC_R_28_RECV),
        .m_sc_r_req(S_SC_R_28_REQ),
        .m_sc_r_send(S_SC_R_28_SEND),
        .s_sc_ar_info(m26_nodes_M_SC_AR_INFO),
        .s_sc_ar_payld(m26_nodes_M_SC_AR_PAYLD[179:0]),
        .s_sc_ar_recv(m26_nodes_M_SC_AR_RECV),
        .s_sc_ar_req(m26_nodes_M_SC_AR_REQ),
        .s_sc_ar_send(m26_nodes_M_SC_AR_SEND),
        .s_sc_aw_info(m26_nodes_M_SC_AW_INFO),
        .s_sc_aw_payld(m26_nodes_M_SC_AW_PAYLD[179:0]),
        .s_sc_aw_recv(m26_nodes_M_SC_AW_RECV),
        .s_sc_aw_req(m26_nodes_M_SC_AW_REQ),
        .s_sc_aw_send(m26_nodes_M_SC_AW_SEND),
        .s_sc_w_info(m26_nodes_M_SC_W_INFO),
        .s_sc_w_payld(m26_nodes_M_SC_W_PAYLD[66:0]),
        .s_sc_w_recv(m26_nodes_M_SC_W_RECV),
        .s_sc_w_req(m26_nodes_M_SC_W_REQ),
        .s_sc_w_send(m26_nodes_M_SC_W_SEND));
  m27_exit_pipeline_imp_S6MFF2 m27_exit_pipeline
       (.aclk(clk_map_M27_ACLK),
        .aresetn(m_axi_aresetn_27),
        .m_axi_araddr(m27_exit_pipeline_m_axi_ARADDR),
        .m_axi_arprot(m27_exit_pipeline_m_axi_ARPROT),
        .m_axi_arready(m27_exit_pipeline_m_axi_ARREADY),
        .m_axi_arvalid(m27_exit_pipeline_m_axi_ARVALID),
        .m_axi_awaddr(m27_exit_pipeline_m_axi_AWADDR),
        .m_axi_awprot(m27_exit_pipeline_m_axi_AWPROT),
        .m_axi_awready(m27_exit_pipeline_m_axi_AWREADY),
        .m_axi_awvalid(m27_exit_pipeline_m_axi_AWVALID),
        .m_axi_bready(m27_exit_pipeline_m_axi_BREADY),
        .m_axi_bresp(m27_exit_pipeline_m_axi_BRESP),
        .m_axi_bvalid(m27_exit_pipeline_m_axi_BVALID),
        .m_axi_rdata(m27_exit_pipeline_m_axi_RDATA),
        .m_axi_rready(m27_exit_pipeline_m_axi_RREADY),
        .m_axi_rresp(m27_exit_pipeline_m_axi_RRESP),
        .m_axi_rvalid(m27_exit_pipeline_m_axi_RVALID),
        .m_axi_wdata(m27_exit_pipeline_m_axi_WDATA),
        .m_axi_wready(m27_exit_pipeline_m_axi_WREADY),
        .m_axi_wstrb(m27_exit_pipeline_m_axi_WSTRB),
        .m_axi_wvalid(m27_exit_pipeline_m_axi_WVALID),
        .s_axi_araddr(m27_sc2axi_M_AXI_ARADDR),
        .s_axi_arcache(m27_sc2axi_M_AXI_ARCACHE),
        .s_axi_arid(m27_sc2axi_M_AXI_ARID),
        .s_axi_arlen(m27_sc2axi_M_AXI_ARLEN),
        .s_axi_arlock(m27_sc2axi_M_AXI_ARLOCK),
        .s_axi_arprot(m27_sc2axi_M_AXI_ARPROT),
        .s_axi_arqos(m27_sc2axi_M_AXI_ARQOS),
        .s_axi_arready(m27_sc2axi_M_AXI_ARREADY),
        .s_axi_aruser(m27_sc2axi_M_AXI_ARUSER),
        .s_axi_arvalid(m27_sc2axi_M_AXI_ARVALID),
        .s_axi_awaddr(m27_sc2axi_M_AXI_AWADDR),
        .s_axi_awcache(m27_sc2axi_M_AXI_AWCACHE),
        .s_axi_awid(m27_sc2axi_M_AXI_AWID),
        .s_axi_awlen(m27_sc2axi_M_AXI_AWLEN),
        .s_axi_awlock(m27_sc2axi_M_AXI_AWLOCK),
        .s_axi_awprot(m27_sc2axi_M_AXI_AWPROT),
        .s_axi_awqos(m27_sc2axi_M_AXI_AWQOS),
        .s_axi_awready(m27_sc2axi_M_AXI_AWREADY),
        .s_axi_awuser(m27_sc2axi_M_AXI_AWUSER),
        .s_axi_awvalid(m27_sc2axi_M_AXI_AWVALID),
        .s_axi_bid(m27_sc2axi_M_AXI_BID),
        .s_axi_bready(m27_sc2axi_M_AXI_BREADY),
        .s_axi_bresp(m27_sc2axi_M_AXI_BRESP),
        .s_axi_buser(m27_sc2axi_M_AXI_BUSER),
        .s_axi_bvalid(m27_sc2axi_M_AXI_BVALID),
        .s_axi_rdata(m27_sc2axi_M_AXI_RDATA),
        .s_axi_rid(m27_sc2axi_M_AXI_RID),
        .s_axi_rlast(m27_sc2axi_M_AXI_RLAST),
        .s_axi_rready(m27_sc2axi_M_AXI_RREADY),
        .s_axi_rresp(m27_sc2axi_M_AXI_RRESP),
        .s_axi_ruser(m27_sc2axi_M_AXI_RUSER),
        .s_axi_rvalid(m27_sc2axi_M_AXI_RVALID),
        .s_axi_wdata(m27_sc2axi_M_AXI_WDATA),
        .s_axi_wlast(m27_sc2axi_M_AXI_WLAST),
        .s_axi_wready(m27_sc2axi_M_AXI_WREADY),
        .s_axi_wstrb(m27_sc2axi_M_AXI_WSTRB),
        .s_axi_wuser(m27_sc2axi_M_AXI_WUSER),
        .s_axi_wvalid(m27_sc2axi_M_AXI_WVALID));
  m27_nodes_imp_V92F6I m27_nodes
       (.M_SC_AR_info(m27_nodes_M_SC_AR_INFO),
        .M_SC_AR_payld(m27_nodes_M_SC_AR_PAYLD),
        .M_SC_AR_recv(m27_nodes_M_SC_AR_RECV),
        .M_SC_AR_req(m27_nodes_M_SC_AR_REQ),
        .M_SC_AR_send(m27_nodes_M_SC_AR_SEND),
        .M_SC_AW_info(m27_nodes_M_SC_AW_INFO),
        .M_SC_AW_payld(m27_nodes_M_SC_AW_PAYLD),
        .M_SC_AW_recv(m27_nodes_M_SC_AW_RECV),
        .M_SC_AW_req(m27_nodes_M_SC_AW_REQ),
        .M_SC_AW_send(m27_nodes_M_SC_AW_SEND),
        .M_SC_B_info(m27_nodes_M_SC_B_INFO),
        .M_SC_B_payld(m27_nodes_M_SC_B_PAYLD),
        .M_SC_B_recv(m27_nodes_M_SC_B_RECV),
        .M_SC_B_req(m27_nodes_M_SC_B_REQ),
        .M_SC_B_send(m27_nodes_M_SC_B_SEND),
        .M_SC_R_info(m27_nodes_M_SC_R_INFO),
        .M_SC_R_payld(m27_nodes_M_SC_R_PAYLD),
        .M_SC_R_recv(m27_nodes_M_SC_R_RECV),
        .M_SC_R_req(m27_nodes_M_SC_R_REQ),
        .M_SC_R_send(m27_nodes_M_SC_R_SEND),
        .M_SC_W_info(m27_nodes_M_SC_W_INFO),
        .M_SC_W_payld(m27_nodes_M_SC_W_PAYLD),
        .M_SC_W_recv(m27_nodes_M_SC_W_RECV),
        .M_SC_W_req(m27_nodes_M_SC_W_REQ),
        .M_SC_W_send(m27_nodes_M_SC_W_SEND),
        .S_SC_AR_info(S_SC_AR_29_INFO),
        .S_SC_AR_payld(S_SC_AR_29_PAYLD),
        .S_SC_AR_recv(S_SC_AR_29_RECV),
        .S_SC_AR_req(S_SC_AR_29_REQ),
        .S_SC_AR_send(S_SC_AR_29_SEND),
        .S_SC_AW_info(S_SC_AW_29_INFO),
        .S_SC_AW_payld(S_SC_AW_29_PAYLD),
        .S_SC_AW_recv(S_SC_AW_29_RECV),
        .S_SC_AW_req(S_SC_AW_29_REQ),
        .S_SC_AW_send(S_SC_AW_29_SEND),
        .S_SC_B_info(S_SC_B_29_INFO),
        .S_SC_B_payld(S_SC_B_29_PAYLD),
        .S_SC_B_recv(S_SC_B_29_RECV),
        .S_SC_B_req(S_SC_B_29_REQ),
        .S_SC_B_send(S_SC_B_29_SEND),
        .S_SC_R_info(S_SC_R_29_INFO),
        .S_SC_R_payld(S_SC_R_29_PAYLD),
        .S_SC_R_recv(S_SC_R_29_RECV),
        .S_SC_R_req(S_SC_R_29_REQ),
        .S_SC_R_send(S_SC_R_29_SEND),
        .S_SC_W_info(S_SC_W_29_INFO),
        .S_SC_W_payld(S_SC_W_29_PAYLD),
        .S_SC_W_recv(S_SC_W_29_RECV),
        .S_SC_W_req(S_SC_W_29_REQ),
        .S_SC_W_send(S_SC_W_29_SEND),
        .m_axi_aclk(clk_map_M27_ACLK),
        .m_axi_aresetn(m_axi_aresetn_27),
        .s_axi_aclk(clk_map_M00_ACLK),
        .s_axi_aresetn(clk_map_M00_ARESETN));
  bd_afc3_m27s2a_0 m27_sc2axi
       (.aclk(clk_map_M27_ACLK),
        .m_axi_araddr(m27_sc2axi_M_AXI_ARADDR),
        .m_axi_arcache(m27_sc2axi_M_AXI_ARCACHE),
        .m_axi_arid(m27_sc2axi_M_AXI_ARID),
        .m_axi_arlen(m27_sc2axi_M_AXI_ARLEN),
        .m_axi_arlock(m27_sc2axi_M_AXI_ARLOCK),
        .m_axi_arprot(m27_sc2axi_M_AXI_ARPROT),
        .m_axi_arqos(m27_sc2axi_M_AXI_ARQOS),
        .m_axi_arready(m27_sc2axi_M_AXI_ARREADY),
        .m_axi_aruser(m27_sc2axi_M_AXI_ARUSER),
        .m_axi_arvalid(m27_sc2axi_M_AXI_ARVALID),
        .m_axi_awaddr(m27_sc2axi_M_AXI_AWADDR),
        .m_axi_awcache(m27_sc2axi_M_AXI_AWCACHE),
        .m_axi_awid(m27_sc2axi_M_AXI_AWID),
        .m_axi_awlen(m27_sc2axi_M_AXI_AWLEN),
        .m_axi_awlock(m27_sc2axi_M_AXI_AWLOCK),
        .m_axi_awprot(m27_sc2axi_M_AXI_AWPROT),
        .m_axi_awqos(m27_sc2axi_M_AXI_AWQOS),
        .m_axi_awready(m27_sc2axi_M_AXI_AWREADY),
        .m_axi_awuser(m27_sc2axi_M_AXI_AWUSER),
        .m_axi_awvalid(m27_sc2axi_M_AXI_AWVALID),
        .m_axi_bid(m27_sc2axi_M_AXI_BID),
        .m_axi_bready(m27_sc2axi_M_AXI_BREADY),
        .m_axi_bresp(m27_sc2axi_M_AXI_BRESP),
        .m_axi_buser(m27_sc2axi_M_AXI_BUSER),
        .m_axi_bvalid(m27_sc2axi_M_AXI_BVALID),
        .m_axi_rdata(m27_sc2axi_M_AXI_RDATA),
        .m_axi_rid(m27_sc2axi_M_AXI_RID),
        .m_axi_rlast(m27_sc2axi_M_AXI_RLAST),
        .m_axi_rready(m27_sc2axi_M_AXI_RREADY),
        .m_axi_rresp(m27_sc2axi_M_AXI_RRESP),
        .m_axi_ruser(m27_sc2axi_M_AXI_RUSER),
        .m_axi_rvalid(m27_sc2axi_M_AXI_RVALID),
        .m_axi_wdata(m27_sc2axi_M_AXI_WDATA),
        .m_axi_wlast(m27_sc2axi_M_AXI_WLAST),
        .m_axi_wready(m27_sc2axi_M_AXI_WREADY),
        .m_axi_wstrb(m27_sc2axi_M_AXI_WSTRB),
        .m_axi_wuser(m27_sc2axi_M_AXI_WUSER),
        .m_axi_wvalid(m27_sc2axi_M_AXI_WVALID),
        .m_sc_b_info(S_SC_B_29_INFO),
        .m_sc_b_payld(S_SC_B_29_PAYLD),
        .m_sc_b_recv(S_SC_B_29_RECV),
        .m_sc_b_req(S_SC_B_29_REQ),
        .m_sc_b_send(S_SC_B_29_SEND),
        .m_sc_r_info(S_SC_R_29_INFO),
        .m_sc_r_payld(S_SC_R_29_PAYLD),
        .m_sc_r_recv(S_SC_R_29_RECV),
        .m_sc_r_req(S_SC_R_29_REQ),
        .m_sc_r_send(S_SC_R_29_SEND),
        .s_sc_ar_info(m27_nodes_M_SC_AR_INFO),
        .s_sc_ar_payld(m27_nodes_M_SC_AR_PAYLD[179:0]),
        .s_sc_ar_recv(m27_nodes_M_SC_AR_RECV),
        .s_sc_ar_req(m27_nodes_M_SC_AR_REQ),
        .s_sc_ar_send(m27_nodes_M_SC_AR_SEND),
        .s_sc_aw_info(m27_nodes_M_SC_AW_INFO),
        .s_sc_aw_payld(m27_nodes_M_SC_AW_PAYLD[179:0]),
        .s_sc_aw_recv(m27_nodes_M_SC_AW_RECV),
        .s_sc_aw_req(m27_nodes_M_SC_AW_REQ),
        .s_sc_aw_send(m27_nodes_M_SC_AW_SEND),
        .s_sc_w_info(m27_nodes_M_SC_W_INFO),
        .s_sc_w_payld(m27_nodes_M_SC_W_PAYLD[66:0]),
        .s_sc_w_recv(m27_nodes_M_SC_W_RECV),
        .s_sc_w_req(m27_nodes_M_SC_W_REQ),
        .s_sc_w_send(m27_nodes_M_SC_W_SEND));
  m28_exit_pipeline_imp_1FCAITQ m28_exit_pipeline
       (.aclk(clk_map_M28_ACLK),
        .aresetn(m_axi_aresetn_28),
        .m_axi_araddr(m28_exit_pipeline_m_axi_ARADDR),
        .m_axi_arprot(m28_exit_pipeline_m_axi_ARPROT),
        .m_axi_arready(m28_exit_pipeline_m_axi_ARREADY),
        .m_axi_arvalid(m28_exit_pipeline_m_axi_ARVALID),
        .m_axi_awaddr(m28_exit_pipeline_m_axi_AWADDR),
        .m_axi_awprot(m28_exit_pipeline_m_axi_AWPROT),
        .m_axi_awready(m28_exit_pipeline_m_axi_AWREADY),
        .m_axi_awvalid(m28_exit_pipeline_m_axi_AWVALID),
        .m_axi_bready(m28_exit_pipeline_m_axi_BREADY),
        .m_axi_bresp(m28_exit_pipeline_m_axi_BRESP),
        .m_axi_bvalid(m28_exit_pipeline_m_axi_BVALID),
        .m_axi_rdata(m28_exit_pipeline_m_axi_RDATA),
        .m_axi_rready(m28_exit_pipeline_m_axi_RREADY),
        .m_axi_rresp(m28_exit_pipeline_m_axi_RRESP),
        .m_axi_rvalid(m28_exit_pipeline_m_axi_RVALID),
        .m_axi_wdata(m28_exit_pipeline_m_axi_WDATA),
        .m_axi_wready(m28_exit_pipeline_m_axi_WREADY),
        .m_axi_wstrb(m28_exit_pipeline_m_axi_WSTRB),
        .m_axi_wvalid(m28_exit_pipeline_m_axi_WVALID),
        .s_axi_araddr(m28_sc2axi_M_AXI_ARADDR),
        .s_axi_arcache(m28_sc2axi_M_AXI_ARCACHE),
        .s_axi_arid(m28_sc2axi_M_AXI_ARID),
        .s_axi_arlen(m28_sc2axi_M_AXI_ARLEN),
        .s_axi_arlock(m28_sc2axi_M_AXI_ARLOCK),
        .s_axi_arprot(m28_sc2axi_M_AXI_ARPROT),
        .s_axi_arqos(m28_sc2axi_M_AXI_ARQOS),
        .s_axi_arready(m28_sc2axi_M_AXI_ARREADY),
        .s_axi_aruser(m28_sc2axi_M_AXI_ARUSER),
        .s_axi_arvalid(m28_sc2axi_M_AXI_ARVALID),
        .s_axi_awaddr(m28_sc2axi_M_AXI_AWADDR),
        .s_axi_awcache(m28_sc2axi_M_AXI_AWCACHE),
        .s_axi_awid(m28_sc2axi_M_AXI_AWID),
        .s_axi_awlen(m28_sc2axi_M_AXI_AWLEN),
        .s_axi_awlock(m28_sc2axi_M_AXI_AWLOCK),
        .s_axi_awprot(m28_sc2axi_M_AXI_AWPROT),
        .s_axi_awqos(m28_sc2axi_M_AXI_AWQOS),
        .s_axi_awready(m28_sc2axi_M_AXI_AWREADY),
        .s_axi_awuser(m28_sc2axi_M_AXI_AWUSER),
        .s_axi_awvalid(m28_sc2axi_M_AXI_AWVALID),
        .s_axi_bid(m28_sc2axi_M_AXI_BID),
        .s_axi_bready(m28_sc2axi_M_AXI_BREADY),
        .s_axi_bresp(m28_sc2axi_M_AXI_BRESP),
        .s_axi_buser(m28_sc2axi_M_AXI_BUSER),
        .s_axi_bvalid(m28_sc2axi_M_AXI_BVALID),
        .s_axi_rdata(m28_sc2axi_M_AXI_RDATA),
        .s_axi_rid(m28_sc2axi_M_AXI_RID),
        .s_axi_rlast(m28_sc2axi_M_AXI_RLAST),
        .s_axi_rready(m28_sc2axi_M_AXI_RREADY),
        .s_axi_rresp(m28_sc2axi_M_AXI_RRESP),
        .s_axi_ruser(m28_sc2axi_M_AXI_RUSER),
        .s_axi_rvalid(m28_sc2axi_M_AXI_RVALID),
        .s_axi_wdata(m28_sc2axi_M_AXI_WDATA),
        .s_axi_wlast(m28_sc2axi_M_AXI_WLAST),
        .s_axi_wready(m28_sc2axi_M_AXI_WREADY),
        .s_axi_wstrb(m28_sc2axi_M_AXI_WSTRB),
        .s_axi_wuser(m28_sc2axi_M_AXI_WUSER),
        .s_axi_wvalid(m28_sc2axi_M_AXI_WVALID));
  m28_nodes_imp_ALP6LO m28_nodes
       (.M_SC_AR_info(m28_nodes_M_SC_AR_INFO),
        .M_SC_AR_payld(m28_nodes_M_SC_AR_PAYLD),
        .M_SC_AR_recv(m28_nodes_M_SC_AR_RECV),
        .M_SC_AR_req(m28_nodes_M_SC_AR_REQ),
        .M_SC_AR_send(m28_nodes_M_SC_AR_SEND),
        .M_SC_AW_info(m28_nodes_M_SC_AW_INFO),
        .M_SC_AW_payld(m28_nodes_M_SC_AW_PAYLD),
        .M_SC_AW_recv(m28_nodes_M_SC_AW_RECV),
        .M_SC_AW_req(m28_nodes_M_SC_AW_REQ),
        .M_SC_AW_send(m28_nodes_M_SC_AW_SEND),
        .M_SC_B_info(m28_nodes_M_SC_B_INFO),
        .M_SC_B_payld(m28_nodes_M_SC_B_PAYLD),
        .M_SC_B_recv(m28_nodes_M_SC_B_RECV),
        .M_SC_B_req(m28_nodes_M_SC_B_REQ),
        .M_SC_B_send(m28_nodes_M_SC_B_SEND),
        .M_SC_R_info(m28_nodes_M_SC_R_INFO),
        .M_SC_R_payld(m28_nodes_M_SC_R_PAYLD),
        .M_SC_R_recv(m28_nodes_M_SC_R_RECV),
        .M_SC_R_req(m28_nodes_M_SC_R_REQ),
        .M_SC_R_send(m28_nodes_M_SC_R_SEND),
        .M_SC_W_info(m28_nodes_M_SC_W_INFO),
        .M_SC_W_payld(m28_nodes_M_SC_W_PAYLD),
        .M_SC_W_recv(m28_nodes_M_SC_W_RECV),
        .M_SC_W_req(m28_nodes_M_SC_W_REQ),
        .M_SC_W_send(m28_nodes_M_SC_W_SEND),
        .S_SC_AR_info(S_SC_AR_30_INFO),
        .S_SC_AR_payld(S_SC_AR_30_PAYLD),
        .S_SC_AR_recv(S_SC_AR_30_RECV),
        .S_SC_AR_req(S_SC_AR_30_REQ),
        .S_SC_AR_send(S_SC_AR_30_SEND),
        .S_SC_AW_info(S_SC_AW_30_INFO),
        .S_SC_AW_payld(S_SC_AW_30_PAYLD),
        .S_SC_AW_recv(S_SC_AW_30_RECV),
        .S_SC_AW_req(S_SC_AW_30_REQ),
        .S_SC_AW_send(S_SC_AW_30_SEND),
        .S_SC_B_info(S_SC_B_30_INFO),
        .S_SC_B_payld(S_SC_B_30_PAYLD),
        .S_SC_B_recv(S_SC_B_30_RECV),
        .S_SC_B_req(S_SC_B_30_REQ),
        .S_SC_B_send(S_SC_B_30_SEND),
        .S_SC_R_info(S_SC_R_30_INFO),
        .S_SC_R_payld(S_SC_R_30_PAYLD),
        .S_SC_R_recv(S_SC_R_30_RECV),
        .S_SC_R_req(S_SC_R_30_REQ),
        .S_SC_R_send(S_SC_R_30_SEND),
        .S_SC_W_info(S_SC_W_30_INFO),
        .S_SC_W_payld(S_SC_W_30_PAYLD),
        .S_SC_W_recv(S_SC_W_30_RECV),
        .S_SC_W_req(S_SC_W_30_REQ),
        .S_SC_W_send(S_SC_W_30_SEND),
        .m_axi_aclk(clk_map_M28_ACLK),
        .m_axi_aresetn(m_axi_aresetn_28),
        .s_axi_aclk(clk_map_M00_ACLK),
        .s_axi_aresetn(clk_map_M00_ARESETN));
  bd_afc3_m28s2a_0 m28_sc2axi
       (.aclk(clk_map_M28_ACLK),
        .m_axi_araddr(m28_sc2axi_M_AXI_ARADDR),
        .m_axi_arcache(m28_sc2axi_M_AXI_ARCACHE),
        .m_axi_arid(m28_sc2axi_M_AXI_ARID),
        .m_axi_arlen(m28_sc2axi_M_AXI_ARLEN),
        .m_axi_arlock(m28_sc2axi_M_AXI_ARLOCK),
        .m_axi_arprot(m28_sc2axi_M_AXI_ARPROT),
        .m_axi_arqos(m28_sc2axi_M_AXI_ARQOS),
        .m_axi_arready(m28_sc2axi_M_AXI_ARREADY),
        .m_axi_aruser(m28_sc2axi_M_AXI_ARUSER),
        .m_axi_arvalid(m28_sc2axi_M_AXI_ARVALID),
        .m_axi_awaddr(m28_sc2axi_M_AXI_AWADDR),
        .m_axi_awcache(m28_sc2axi_M_AXI_AWCACHE),
        .m_axi_awid(m28_sc2axi_M_AXI_AWID),
        .m_axi_awlen(m28_sc2axi_M_AXI_AWLEN),
        .m_axi_awlock(m28_sc2axi_M_AXI_AWLOCK),
        .m_axi_awprot(m28_sc2axi_M_AXI_AWPROT),
        .m_axi_awqos(m28_sc2axi_M_AXI_AWQOS),
        .m_axi_awready(m28_sc2axi_M_AXI_AWREADY),
        .m_axi_awuser(m28_sc2axi_M_AXI_AWUSER),
        .m_axi_awvalid(m28_sc2axi_M_AXI_AWVALID),
        .m_axi_bid(m28_sc2axi_M_AXI_BID),
        .m_axi_bready(m28_sc2axi_M_AXI_BREADY),
        .m_axi_bresp(m28_sc2axi_M_AXI_BRESP),
        .m_axi_buser(m28_sc2axi_M_AXI_BUSER),
        .m_axi_bvalid(m28_sc2axi_M_AXI_BVALID),
        .m_axi_rdata(m28_sc2axi_M_AXI_RDATA),
        .m_axi_rid(m28_sc2axi_M_AXI_RID),
        .m_axi_rlast(m28_sc2axi_M_AXI_RLAST),
        .m_axi_rready(m28_sc2axi_M_AXI_RREADY),
        .m_axi_rresp(m28_sc2axi_M_AXI_RRESP),
        .m_axi_ruser(m28_sc2axi_M_AXI_RUSER),
        .m_axi_rvalid(m28_sc2axi_M_AXI_RVALID),
        .m_axi_wdata(m28_sc2axi_M_AXI_WDATA),
        .m_axi_wlast(m28_sc2axi_M_AXI_WLAST),
        .m_axi_wready(m28_sc2axi_M_AXI_WREADY),
        .m_axi_wstrb(m28_sc2axi_M_AXI_WSTRB),
        .m_axi_wuser(m28_sc2axi_M_AXI_WUSER),
        .m_axi_wvalid(m28_sc2axi_M_AXI_WVALID),
        .m_sc_b_info(S_SC_B_30_INFO),
        .m_sc_b_payld(S_SC_B_30_PAYLD),
        .m_sc_b_recv(S_SC_B_30_RECV),
        .m_sc_b_req(S_SC_B_30_REQ),
        .m_sc_b_send(S_SC_B_30_SEND),
        .m_sc_r_info(S_SC_R_30_INFO),
        .m_sc_r_payld(S_SC_R_30_PAYLD),
        .m_sc_r_recv(S_SC_R_30_RECV),
        .m_sc_r_req(S_SC_R_30_REQ),
        .m_sc_r_send(S_SC_R_30_SEND),
        .s_sc_ar_info(m28_nodes_M_SC_AR_INFO),
        .s_sc_ar_payld(m28_nodes_M_SC_AR_PAYLD[179:0]),
        .s_sc_ar_recv(m28_nodes_M_SC_AR_RECV),
        .s_sc_ar_req(m28_nodes_M_SC_AR_REQ),
        .s_sc_ar_send(m28_nodes_M_SC_AR_SEND),
        .s_sc_aw_info(m28_nodes_M_SC_AW_INFO),
        .s_sc_aw_payld(m28_nodes_M_SC_AW_PAYLD[179:0]),
        .s_sc_aw_recv(m28_nodes_M_SC_AW_RECV),
        .s_sc_aw_req(m28_nodes_M_SC_AW_REQ),
        .s_sc_aw_send(m28_nodes_M_SC_AW_SEND),
        .s_sc_w_info(m28_nodes_M_SC_W_INFO),
        .s_sc_w_payld(m28_nodes_M_SC_W_PAYLD[66:0]),
        .s_sc_w_recv(m28_nodes_M_SC_W_RECV),
        .s_sc_w_req(m28_nodes_M_SC_W_REQ),
        .s_sc_w_send(m28_nodes_M_SC_W_SEND));
  m29_exit_pipeline_imp_1CBCUMM m29_exit_pipeline
       (.aclk(clk_map_M29_ACLK),
        .aresetn(m_axi_aresetn_29),
        .m_axi_araddr(m29_exit_pipeline_m_axi_ARADDR),
        .m_axi_arprot(m29_exit_pipeline_m_axi_ARPROT),
        .m_axi_arready(m29_exit_pipeline_m_axi_ARREADY),
        .m_axi_arvalid(m29_exit_pipeline_m_axi_ARVALID),
        .m_axi_awaddr(m29_exit_pipeline_m_axi_AWADDR),
        .m_axi_awprot(m29_exit_pipeline_m_axi_AWPROT),
        .m_axi_awready(m29_exit_pipeline_m_axi_AWREADY),
        .m_axi_awvalid(m29_exit_pipeline_m_axi_AWVALID),
        .m_axi_bready(m29_exit_pipeline_m_axi_BREADY),
        .m_axi_bresp(m29_exit_pipeline_m_axi_BRESP),
        .m_axi_bvalid(m29_exit_pipeline_m_axi_BVALID),
        .m_axi_rdata(m29_exit_pipeline_m_axi_RDATA),
        .m_axi_rready(m29_exit_pipeline_m_axi_RREADY),
        .m_axi_rresp(m29_exit_pipeline_m_axi_RRESP),
        .m_axi_rvalid(m29_exit_pipeline_m_axi_RVALID),
        .m_axi_wdata(m29_exit_pipeline_m_axi_WDATA),
        .m_axi_wready(m29_exit_pipeline_m_axi_WREADY),
        .m_axi_wstrb(m29_exit_pipeline_m_axi_WSTRB),
        .m_axi_wvalid(m29_exit_pipeline_m_axi_WVALID),
        .s_axi_araddr(m29_sc2axi_M_AXI_ARADDR),
        .s_axi_arcache(m29_sc2axi_M_AXI_ARCACHE),
        .s_axi_arid(m29_sc2axi_M_AXI_ARID),
        .s_axi_arlen(m29_sc2axi_M_AXI_ARLEN),
        .s_axi_arlock(m29_sc2axi_M_AXI_ARLOCK),
        .s_axi_arprot(m29_sc2axi_M_AXI_ARPROT),
        .s_axi_arqos(m29_sc2axi_M_AXI_ARQOS),
        .s_axi_arready(m29_sc2axi_M_AXI_ARREADY),
        .s_axi_aruser(m29_sc2axi_M_AXI_ARUSER),
        .s_axi_arvalid(m29_sc2axi_M_AXI_ARVALID),
        .s_axi_awaddr(m29_sc2axi_M_AXI_AWADDR),
        .s_axi_awcache(m29_sc2axi_M_AXI_AWCACHE),
        .s_axi_awid(m29_sc2axi_M_AXI_AWID),
        .s_axi_awlen(m29_sc2axi_M_AXI_AWLEN),
        .s_axi_awlock(m29_sc2axi_M_AXI_AWLOCK),
        .s_axi_awprot(m29_sc2axi_M_AXI_AWPROT),
        .s_axi_awqos(m29_sc2axi_M_AXI_AWQOS),
        .s_axi_awready(m29_sc2axi_M_AXI_AWREADY),
        .s_axi_awuser(m29_sc2axi_M_AXI_AWUSER),
        .s_axi_awvalid(m29_sc2axi_M_AXI_AWVALID),
        .s_axi_bid(m29_sc2axi_M_AXI_BID),
        .s_axi_bready(m29_sc2axi_M_AXI_BREADY),
        .s_axi_bresp(m29_sc2axi_M_AXI_BRESP),
        .s_axi_buser(m29_sc2axi_M_AXI_BUSER),
        .s_axi_bvalid(m29_sc2axi_M_AXI_BVALID),
        .s_axi_rdata(m29_sc2axi_M_AXI_RDATA),
        .s_axi_rid(m29_sc2axi_M_AXI_RID),
        .s_axi_rlast(m29_sc2axi_M_AXI_RLAST),
        .s_axi_rready(m29_sc2axi_M_AXI_RREADY),
        .s_axi_rresp(m29_sc2axi_M_AXI_RRESP),
        .s_axi_ruser(m29_sc2axi_M_AXI_RUSER),
        .s_axi_rvalid(m29_sc2axi_M_AXI_RVALID),
        .s_axi_wdata(m29_sc2axi_M_AXI_WDATA),
        .s_axi_wlast(m29_sc2axi_M_AXI_WLAST),
        .s_axi_wready(m29_sc2axi_M_AXI_WREADY),
        .s_axi_wstrb(m29_sc2axi_M_AXI_WSTRB),
        .s_axi_wuser(m29_sc2axi_M_AXI_WUSER),
        .s_axi_wvalid(m29_sc2axi_M_AXI_WVALID));
  m29_nodes_imp_1FY4Q8Q m29_nodes
       (.M_SC_AR_info(m29_nodes_M_SC_AR_INFO),
        .M_SC_AR_payld(m29_nodes_M_SC_AR_PAYLD),
        .M_SC_AR_recv(m29_nodes_M_SC_AR_RECV),
        .M_SC_AR_req(m29_nodes_M_SC_AR_REQ),
        .M_SC_AR_send(m29_nodes_M_SC_AR_SEND),
        .M_SC_AW_info(m29_nodes_M_SC_AW_INFO),
        .M_SC_AW_payld(m29_nodes_M_SC_AW_PAYLD),
        .M_SC_AW_recv(m29_nodes_M_SC_AW_RECV),
        .M_SC_AW_req(m29_nodes_M_SC_AW_REQ),
        .M_SC_AW_send(m29_nodes_M_SC_AW_SEND),
        .M_SC_B_info(m29_nodes_M_SC_B_INFO),
        .M_SC_B_payld(m29_nodes_M_SC_B_PAYLD),
        .M_SC_B_recv(m29_nodes_M_SC_B_RECV),
        .M_SC_B_req(m29_nodes_M_SC_B_REQ),
        .M_SC_B_send(m29_nodes_M_SC_B_SEND),
        .M_SC_R_info(m29_nodes_M_SC_R_INFO),
        .M_SC_R_payld(m29_nodes_M_SC_R_PAYLD),
        .M_SC_R_recv(m29_nodes_M_SC_R_RECV),
        .M_SC_R_req(m29_nodes_M_SC_R_REQ),
        .M_SC_R_send(m29_nodes_M_SC_R_SEND),
        .M_SC_W_info(m29_nodes_M_SC_W_INFO),
        .M_SC_W_payld(m29_nodes_M_SC_W_PAYLD),
        .M_SC_W_recv(m29_nodes_M_SC_W_RECV),
        .M_SC_W_req(m29_nodes_M_SC_W_REQ),
        .M_SC_W_send(m29_nodes_M_SC_W_SEND),
        .S_SC_AR_info(S_SC_AR_31_INFO),
        .S_SC_AR_payld(S_SC_AR_31_PAYLD),
        .S_SC_AR_recv(S_SC_AR_31_RECV),
        .S_SC_AR_req(S_SC_AR_31_REQ),
        .S_SC_AR_send(S_SC_AR_31_SEND),
        .S_SC_AW_info(S_SC_AW_31_INFO),
        .S_SC_AW_payld(S_SC_AW_31_PAYLD),
        .S_SC_AW_recv(S_SC_AW_31_RECV),
        .S_SC_AW_req(S_SC_AW_31_REQ),
        .S_SC_AW_send(S_SC_AW_31_SEND),
        .S_SC_B_info(S_SC_B_31_INFO),
        .S_SC_B_payld(S_SC_B_31_PAYLD),
        .S_SC_B_recv(S_SC_B_31_RECV),
        .S_SC_B_req(S_SC_B_31_REQ),
        .S_SC_B_send(S_SC_B_31_SEND),
        .S_SC_R_info(S_SC_R_31_INFO),
        .S_SC_R_payld(S_SC_R_31_PAYLD),
        .S_SC_R_recv(S_SC_R_31_RECV),
        .S_SC_R_req(S_SC_R_31_REQ),
        .S_SC_R_send(S_SC_R_31_SEND),
        .S_SC_W_info(S_SC_W_31_INFO),
        .S_SC_W_payld(S_SC_W_31_PAYLD),
        .S_SC_W_recv(S_SC_W_31_RECV),
        .S_SC_W_req(S_SC_W_31_REQ),
        .S_SC_W_send(S_SC_W_31_SEND),
        .m_axi_aclk(clk_map_M29_ACLK),
        .m_axi_aresetn(m_axi_aresetn_29),
        .s_axi_aclk(clk_map_M00_ACLK),
        .s_axi_aresetn(clk_map_M00_ARESETN));
  bd_afc3_m29s2a_0 m29_sc2axi
       (.aclk(clk_map_M29_ACLK),
        .m_axi_araddr(m29_sc2axi_M_AXI_ARADDR),
        .m_axi_arcache(m29_sc2axi_M_AXI_ARCACHE),
        .m_axi_arid(m29_sc2axi_M_AXI_ARID),
        .m_axi_arlen(m29_sc2axi_M_AXI_ARLEN),
        .m_axi_arlock(m29_sc2axi_M_AXI_ARLOCK),
        .m_axi_arprot(m29_sc2axi_M_AXI_ARPROT),
        .m_axi_arqos(m29_sc2axi_M_AXI_ARQOS),
        .m_axi_arready(m29_sc2axi_M_AXI_ARREADY),
        .m_axi_aruser(m29_sc2axi_M_AXI_ARUSER),
        .m_axi_arvalid(m29_sc2axi_M_AXI_ARVALID),
        .m_axi_awaddr(m29_sc2axi_M_AXI_AWADDR),
        .m_axi_awcache(m29_sc2axi_M_AXI_AWCACHE),
        .m_axi_awid(m29_sc2axi_M_AXI_AWID),
        .m_axi_awlen(m29_sc2axi_M_AXI_AWLEN),
        .m_axi_awlock(m29_sc2axi_M_AXI_AWLOCK),
        .m_axi_awprot(m29_sc2axi_M_AXI_AWPROT),
        .m_axi_awqos(m29_sc2axi_M_AXI_AWQOS),
        .m_axi_awready(m29_sc2axi_M_AXI_AWREADY),
        .m_axi_awuser(m29_sc2axi_M_AXI_AWUSER),
        .m_axi_awvalid(m29_sc2axi_M_AXI_AWVALID),
        .m_axi_bid(m29_sc2axi_M_AXI_BID),
        .m_axi_bready(m29_sc2axi_M_AXI_BREADY),
        .m_axi_bresp(m29_sc2axi_M_AXI_BRESP),
        .m_axi_buser(m29_sc2axi_M_AXI_BUSER),
        .m_axi_bvalid(m29_sc2axi_M_AXI_BVALID),
        .m_axi_rdata(m29_sc2axi_M_AXI_RDATA),
        .m_axi_rid(m29_sc2axi_M_AXI_RID),
        .m_axi_rlast(m29_sc2axi_M_AXI_RLAST),
        .m_axi_rready(m29_sc2axi_M_AXI_RREADY),
        .m_axi_rresp(m29_sc2axi_M_AXI_RRESP),
        .m_axi_ruser(m29_sc2axi_M_AXI_RUSER),
        .m_axi_rvalid(m29_sc2axi_M_AXI_RVALID),
        .m_axi_wdata(m29_sc2axi_M_AXI_WDATA),
        .m_axi_wlast(m29_sc2axi_M_AXI_WLAST),
        .m_axi_wready(m29_sc2axi_M_AXI_WREADY),
        .m_axi_wstrb(m29_sc2axi_M_AXI_WSTRB),
        .m_axi_wuser(m29_sc2axi_M_AXI_WUSER),
        .m_axi_wvalid(m29_sc2axi_M_AXI_WVALID),
        .m_sc_b_info(S_SC_B_31_INFO),
        .m_sc_b_payld(S_SC_B_31_PAYLD),
        .m_sc_b_recv(S_SC_B_31_RECV),
        .m_sc_b_req(S_SC_B_31_REQ),
        .m_sc_b_send(S_SC_B_31_SEND),
        .m_sc_r_info(S_SC_R_31_INFO),
        .m_sc_r_payld(S_SC_R_31_PAYLD),
        .m_sc_r_recv(S_SC_R_31_RECV),
        .m_sc_r_req(S_SC_R_31_REQ),
        .m_sc_r_send(S_SC_R_31_SEND),
        .s_sc_ar_info(m29_nodes_M_SC_AR_INFO),
        .s_sc_ar_payld(m29_nodes_M_SC_AR_PAYLD[179:0]),
        .s_sc_ar_recv(m29_nodes_M_SC_AR_RECV),
        .s_sc_ar_req(m29_nodes_M_SC_AR_REQ),
        .s_sc_ar_send(m29_nodes_M_SC_AR_SEND),
        .s_sc_aw_info(m29_nodes_M_SC_AW_INFO),
        .s_sc_aw_payld(m29_nodes_M_SC_AW_PAYLD[179:0]),
        .s_sc_aw_recv(m29_nodes_M_SC_AW_RECV),
        .s_sc_aw_req(m29_nodes_M_SC_AW_REQ),
        .s_sc_aw_send(m29_nodes_M_SC_AW_SEND),
        .s_sc_w_info(m29_nodes_M_SC_W_INFO),
        .s_sc_w_payld(m29_nodes_M_SC_W_PAYLD[66:0]),
        .s_sc_w_recv(m29_nodes_M_SC_W_RECV),
        .s_sc_w_req(m29_nodes_M_SC_W_REQ),
        .s_sc_w_send(m29_nodes_M_SC_W_SEND));
  m30_exit_pipeline_imp_172HSM2 m30_exit_pipeline
       (.aclk(clk_map_M30_ACLK),
        .aresetn(m_axi_aresetn_30),
        .m_axi_araddr(m30_exit_pipeline_m_axi_ARADDR),
        .m_axi_arprot(m30_exit_pipeline_m_axi_ARPROT),
        .m_axi_arready(m30_exit_pipeline_m_axi_ARREADY),
        .m_axi_arvalid(m30_exit_pipeline_m_axi_ARVALID),
        .m_axi_awaddr(m30_exit_pipeline_m_axi_AWADDR),
        .m_axi_awprot(m30_exit_pipeline_m_axi_AWPROT),
        .m_axi_awready(m30_exit_pipeline_m_axi_AWREADY),
        .m_axi_awvalid(m30_exit_pipeline_m_axi_AWVALID),
        .m_axi_bready(m30_exit_pipeline_m_axi_BREADY),
        .m_axi_bresp(m30_exit_pipeline_m_axi_BRESP),
        .m_axi_bvalid(m30_exit_pipeline_m_axi_BVALID),
        .m_axi_rdata(m30_exit_pipeline_m_axi_RDATA),
        .m_axi_rready(m30_exit_pipeline_m_axi_RREADY),
        .m_axi_rresp(m30_exit_pipeline_m_axi_RRESP),
        .m_axi_rvalid(m30_exit_pipeline_m_axi_RVALID),
        .m_axi_wdata(m30_exit_pipeline_m_axi_WDATA),
        .m_axi_wready(m30_exit_pipeline_m_axi_WREADY),
        .m_axi_wstrb(m30_exit_pipeline_m_axi_WSTRB),
        .m_axi_wvalid(m30_exit_pipeline_m_axi_WVALID),
        .s_axi_araddr(m30_sc2axi_M_AXI_ARADDR),
        .s_axi_arcache(m30_sc2axi_M_AXI_ARCACHE),
        .s_axi_arid(m30_sc2axi_M_AXI_ARID),
        .s_axi_arlen(m30_sc2axi_M_AXI_ARLEN),
        .s_axi_arlock(m30_sc2axi_M_AXI_ARLOCK),
        .s_axi_arprot(m30_sc2axi_M_AXI_ARPROT),
        .s_axi_arqos(m30_sc2axi_M_AXI_ARQOS),
        .s_axi_arready(m30_sc2axi_M_AXI_ARREADY),
        .s_axi_aruser(m30_sc2axi_M_AXI_ARUSER),
        .s_axi_arvalid(m30_sc2axi_M_AXI_ARVALID),
        .s_axi_awaddr(m30_sc2axi_M_AXI_AWADDR),
        .s_axi_awcache(m30_sc2axi_M_AXI_AWCACHE),
        .s_axi_awid(m30_sc2axi_M_AXI_AWID),
        .s_axi_awlen(m30_sc2axi_M_AXI_AWLEN),
        .s_axi_awlock(m30_sc2axi_M_AXI_AWLOCK),
        .s_axi_awprot(m30_sc2axi_M_AXI_AWPROT),
        .s_axi_awqos(m30_sc2axi_M_AXI_AWQOS),
        .s_axi_awready(m30_sc2axi_M_AXI_AWREADY),
        .s_axi_awuser(m30_sc2axi_M_AXI_AWUSER),
        .s_axi_awvalid(m30_sc2axi_M_AXI_AWVALID),
        .s_axi_bid(m30_sc2axi_M_AXI_BID),
        .s_axi_bready(m30_sc2axi_M_AXI_BREADY),
        .s_axi_bresp(m30_sc2axi_M_AXI_BRESP),
        .s_axi_buser(m30_sc2axi_M_AXI_BUSER),
        .s_axi_bvalid(m30_sc2axi_M_AXI_BVALID),
        .s_axi_rdata(m30_sc2axi_M_AXI_RDATA),
        .s_axi_rid(m30_sc2axi_M_AXI_RID),
        .s_axi_rlast(m30_sc2axi_M_AXI_RLAST),
        .s_axi_rready(m30_sc2axi_M_AXI_RREADY),
        .s_axi_rresp(m30_sc2axi_M_AXI_RRESP),
        .s_axi_ruser(m30_sc2axi_M_AXI_RUSER),
        .s_axi_rvalid(m30_sc2axi_M_AXI_RVALID),
        .s_axi_wdata(m30_sc2axi_M_AXI_WDATA),
        .s_axi_wlast(m30_sc2axi_M_AXI_WLAST),
        .s_axi_wready(m30_sc2axi_M_AXI_WREADY),
        .s_axi_wstrb(m30_sc2axi_M_AXI_WSTRB),
        .s_axi_wuser(m30_sc2axi_M_AXI_WUSER),
        .s_axi_wvalid(m30_sc2axi_M_AXI_WVALID));
  m30_nodes_imp_1BVUHKI m30_nodes
       (.M_SC_AR_info(m30_nodes_M_SC_AR_INFO),
        .M_SC_AR_payld(m30_nodes_M_SC_AR_PAYLD),
        .M_SC_AR_recv(m30_nodes_M_SC_AR_RECV),
        .M_SC_AR_req(m30_nodes_M_SC_AR_REQ),
        .M_SC_AR_send(m30_nodes_M_SC_AR_SEND),
        .M_SC_AW_info(m30_nodes_M_SC_AW_INFO),
        .M_SC_AW_payld(m30_nodes_M_SC_AW_PAYLD),
        .M_SC_AW_recv(m30_nodes_M_SC_AW_RECV),
        .M_SC_AW_req(m30_nodes_M_SC_AW_REQ),
        .M_SC_AW_send(m30_nodes_M_SC_AW_SEND),
        .M_SC_B_info(m30_nodes_M_SC_B_INFO),
        .M_SC_B_payld(m30_nodes_M_SC_B_PAYLD),
        .M_SC_B_recv(m30_nodes_M_SC_B_RECV),
        .M_SC_B_req(m30_nodes_M_SC_B_REQ),
        .M_SC_B_send(m30_nodes_M_SC_B_SEND),
        .M_SC_R_info(m30_nodes_M_SC_R_INFO),
        .M_SC_R_payld(m30_nodes_M_SC_R_PAYLD),
        .M_SC_R_recv(m30_nodes_M_SC_R_RECV),
        .M_SC_R_req(m30_nodes_M_SC_R_REQ),
        .M_SC_R_send(m30_nodes_M_SC_R_SEND),
        .M_SC_W_info(m30_nodes_M_SC_W_INFO),
        .M_SC_W_payld(m30_nodes_M_SC_W_PAYLD),
        .M_SC_W_recv(m30_nodes_M_SC_W_RECV),
        .M_SC_W_req(m30_nodes_M_SC_W_REQ),
        .M_SC_W_send(m30_nodes_M_SC_W_SEND),
        .S_SC_AR_info(S_SC_AR_32_INFO),
        .S_SC_AR_payld(S_SC_AR_32_PAYLD),
        .S_SC_AR_recv(S_SC_AR_32_RECV),
        .S_SC_AR_req(S_SC_AR_32_REQ),
        .S_SC_AR_send(S_SC_AR_32_SEND),
        .S_SC_AW_info(S_SC_AW_32_INFO),
        .S_SC_AW_payld(S_SC_AW_32_PAYLD),
        .S_SC_AW_recv(S_SC_AW_32_RECV),
        .S_SC_AW_req(S_SC_AW_32_REQ),
        .S_SC_AW_send(S_SC_AW_32_SEND),
        .S_SC_B_info(S_SC_B_32_INFO),
        .S_SC_B_payld(S_SC_B_32_PAYLD),
        .S_SC_B_recv(S_SC_B_32_RECV),
        .S_SC_B_req(S_SC_B_32_REQ),
        .S_SC_B_send(S_SC_B_32_SEND),
        .S_SC_R_info(S_SC_R_32_INFO),
        .S_SC_R_payld(S_SC_R_32_PAYLD),
        .S_SC_R_recv(S_SC_R_32_RECV),
        .S_SC_R_req(S_SC_R_32_REQ),
        .S_SC_R_send(S_SC_R_32_SEND),
        .S_SC_W_info(S_SC_W_32_INFO),
        .S_SC_W_payld(S_SC_W_32_PAYLD),
        .S_SC_W_recv(S_SC_W_32_RECV),
        .S_SC_W_req(S_SC_W_32_REQ),
        .S_SC_W_send(S_SC_W_32_SEND),
        .m_axi_aclk(clk_map_M30_ACLK),
        .m_axi_aresetn(m_axi_aresetn_30),
        .s_axi_aclk(clk_map_M00_ACLK),
        .s_axi_aresetn(clk_map_M00_ARESETN));
  bd_afc3_m30s2a_0 m30_sc2axi
       (.aclk(clk_map_M30_ACLK),
        .m_axi_araddr(m30_sc2axi_M_AXI_ARADDR),
        .m_axi_arcache(m30_sc2axi_M_AXI_ARCACHE),
        .m_axi_arid(m30_sc2axi_M_AXI_ARID),
        .m_axi_arlen(m30_sc2axi_M_AXI_ARLEN),
        .m_axi_arlock(m30_sc2axi_M_AXI_ARLOCK),
        .m_axi_arprot(m30_sc2axi_M_AXI_ARPROT),
        .m_axi_arqos(m30_sc2axi_M_AXI_ARQOS),
        .m_axi_arready(m30_sc2axi_M_AXI_ARREADY),
        .m_axi_aruser(m30_sc2axi_M_AXI_ARUSER),
        .m_axi_arvalid(m30_sc2axi_M_AXI_ARVALID),
        .m_axi_awaddr(m30_sc2axi_M_AXI_AWADDR),
        .m_axi_awcache(m30_sc2axi_M_AXI_AWCACHE),
        .m_axi_awid(m30_sc2axi_M_AXI_AWID),
        .m_axi_awlen(m30_sc2axi_M_AXI_AWLEN),
        .m_axi_awlock(m30_sc2axi_M_AXI_AWLOCK),
        .m_axi_awprot(m30_sc2axi_M_AXI_AWPROT),
        .m_axi_awqos(m30_sc2axi_M_AXI_AWQOS),
        .m_axi_awready(m30_sc2axi_M_AXI_AWREADY),
        .m_axi_awuser(m30_sc2axi_M_AXI_AWUSER),
        .m_axi_awvalid(m30_sc2axi_M_AXI_AWVALID),
        .m_axi_bid(m30_sc2axi_M_AXI_BID),
        .m_axi_bready(m30_sc2axi_M_AXI_BREADY),
        .m_axi_bresp(m30_sc2axi_M_AXI_BRESP),
        .m_axi_buser(m30_sc2axi_M_AXI_BUSER),
        .m_axi_bvalid(m30_sc2axi_M_AXI_BVALID),
        .m_axi_rdata(m30_sc2axi_M_AXI_RDATA),
        .m_axi_rid(m30_sc2axi_M_AXI_RID),
        .m_axi_rlast(m30_sc2axi_M_AXI_RLAST),
        .m_axi_rready(m30_sc2axi_M_AXI_RREADY),
        .m_axi_rresp(m30_sc2axi_M_AXI_RRESP),
        .m_axi_ruser(m30_sc2axi_M_AXI_RUSER),
        .m_axi_rvalid(m30_sc2axi_M_AXI_RVALID),
        .m_axi_wdata(m30_sc2axi_M_AXI_WDATA),
        .m_axi_wlast(m30_sc2axi_M_AXI_WLAST),
        .m_axi_wready(m30_sc2axi_M_AXI_WREADY),
        .m_axi_wstrb(m30_sc2axi_M_AXI_WSTRB),
        .m_axi_wuser(m30_sc2axi_M_AXI_WUSER),
        .m_axi_wvalid(m30_sc2axi_M_AXI_WVALID),
        .m_sc_b_info(S_SC_B_32_INFO),
        .m_sc_b_payld(S_SC_B_32_PAYLD),
        .m_sc_b_recv(S_SC_B_32_RECV),
        .m_sc_b_req(S_SC_B_32_REQ),
        .m_sc_b_send(S_SC_B_32_SEND),
        .m_sc_r_info(S_SC_R_32_INFO),
        .m_sc_r_payld(S_SC_R_32_PAYLD),
        .m_sc_r_recv(S_SC_R_32_RECV),
        .m_sc_r_req(S_SC_R_32_REQ),
        .m_sc_r_send(S_SC_R_32_SEND),
        .s_sc_ar_info(m30_nodes_M_SC_AR_INFO),
        .s_sc_ar_payld(m30_nodes_M_SC_AR_PAYLD[179:0]),
        .s_sc_ar_recv(m30_nodes_M_SC_AR_RECV),
        .s_sc_ar_req(m30_nodes_M_SC_AR_REQ),
        .s_sc_ar_send(m30_nodes_M_SC_AR_SEND),
        .s_sc_aw_info(m30_nodes_M_SC_AW_INFO),
        .s_sc_aw_payld(m30_nodes_M_SC_AW_PAYLD[179:0]),
        .s_sc_aw_recv(m30_nodes_M_SC_AW_RECV),
        .s_sc_aw_req(m30_nodes_M_SC_AW_REQ),
        .s_sc_aw_send(m30_nodes_M_SC_AW_SEND),
        .s_sc_w_info(m30_nodes_M_SC_W_INFO),
        .s_sc_w_payld(m30_nodes_M_SC_W_PAYLD[66:0]),
        .s_sc_w_recv(m30_nodes_M_SC_W_RECV),
        .s_sc_w_req(m30_nodes_M_SC_W_REQ),
        .s_sc_w_send(m30_nodes_M_SC_W_SEND));
  m31_exit_pipeline_imp_12V374Q m31_exit_pipeline
       (.aclk(clk_map_M31_ACLK),
        .aresetn(m_axi_aresetn_31),
        .m_axi_araddr(m31_exit_pipeline_m_axi_ARADDR),
        .m_axi_arprot(m31_exit_pipeline_m_axi_ARPROT),
        .m_axi_arready(m31_exit_pipeline_m_axi_ARREADY),
        .m_axi_arvalid(m31_exit_pipeline_m_axi_ARVALID),
        .m_axi_awaddr(m31_exit_pipeline_m_axi_AWADDR),
        .m_axi_awprot(m31_exit_pipeline_m_axi_AWPROT),
        .m_axi_awready(m31_exit_pipeline_m_axi_AWREADY),
        .m_axi_awvalid(m31_exit_pipeline_m_axi_AWVALID),
        .m_axi_bready(m31_exit_pipeline_m_axi_BREADY),
        .m_axi_bresp(m31_exit_pipeline_m_axi_BRESP),
        .m_axi_bvalid(m31_exit_pipeline_m_axi_BVALID),
        .m_axi_rdata(m31_exit_pipeline_m_axi_RDATA),
        .m_axi_rready(m31_exit_pipeline_m_axi_RREADY),
        .m_axi_rresp(m31_exit_pipeline_m_axi_RRESP),
        .m_axi_rvalid(m31_exit_pipeline_m_axi_RVALID),
        .m_axi_wdata(m31_exit_pipeline_m_axi_WDATA),
        .m_axi_wready(m31_exit_pipeline_m_axi_WREADY),
        .m_axi_wstrb(m31_exit_pipeline_m_axi_WSTRB),
        .m_axi_wvalid(m31_exit_pipeline_m_axi_WVALID),
        .s_axi_araddr(m31_sc2axi_M_AXI_ARADDR),
        .s_axi_arcache(m31_sc2axi_M_AXI_ARCACHE),
        .s_axi_arid(m31_sc2axi_M_AXI_ARID),
        .s_axi_arlen(m31_sc2axi_M_AXI_ARLEN),
        .s_axi_arlock(m31_sc2axi_M_AXI_ARLOCK),
        .s_axi_arprot(m31_sc2axi_M_AXI_ARPROT),
        .s_axi_arqos(m31_sc2axi_M_AXI_ARQOS),
        .s_axi_arready(m31_sc2axi_M_AXI_ARREADY),
        .s_axi_aruser(m31_sc2axi_M_AXI_ARUSER),
        .s_axi_arvalid(m31_sc2axi_M_AXI_ARVALID),
        .s_axi_awaddr(m31_sc2axi_M_AXI_AWADDR),
        .s_axi_awcache(m31_sc2axi_M_AXI_AWCACHE),
        .s_axi_awid(m31_sc2axi_M_AXI_AWID),
        .s_axi_awlen(m31_sc2axi_M_AXI_AWLEN),
        .s_axi_awlock(m31_sc2axi_M_AXI_AWLOCK),
        .s_axi_awprot(m31_sc2axi_M_AXI_AWPROT),
        .s_axi_awqos(m31_sc2axi_M_AXI_AWQOS),
        .s_axi_awready(m31_sc2axi_M_AXI_AWREADY),
        .s_axi_awuser(m31_sc2axi_M_AXI_AWUSER),
        .s_axi_awvalid(m31_sc2axi_M_AXI_AWVALID),
        .s_axi_bid(m31_sc2axi_M_AXI_BID),
        .s_axi_bready(m31_sc2axi_M_AXI_BREADY),
        .s_axi_bresp(m31_sc2axi_M_AXI_BRESP),
        .s_axi_buser(m31_sc2axi_M_AXI_BUSER),
        .s_axi_bvalid(m31_sc2axi_M_AXI_BVALID),
        .s_axi_rdata(m31_sc2axi_M_AXI_RDATA),
        .s_axi_rid(m31_sc2axi_M_AXI_RID),
        .s_axi_rlast(m31_sc2axi_M_AXI_RLAST),
        .s_axi_rready(m31_sc2axi_M_AXI_RREADY),
        .s_axi_rresp(m31_sc2axi_M_AXI_RRESP),
        .s_axi_ruser(m31_sc2axi_M_AXI_RUSER),
        .s_axi_rvalid(m31_sc2axi_M_AXI_RVALID),
        .s_axi_wdata(m31_sc2axi_M_AXI_WDATA),
        .s_axi_wlast(m31_sc2axi_M_AXI_WLAST),
        .s_axi_wready(m31_sc2axi_M_AXI_WREADY),
        .s_axi_wstrb(m31_sc2axi_M_AXI_WSTRB),
        .s_axi_wuser(m31_sc2axi_M_AXI_WUSER),
        .s_axi_wvalid(m31_sc2axi_M_AXI_WVALID));
  m31_nodes_imp_DRIS5G m31_nodes
       (.M_SC_AR_info(m31_nodes_M_SC_AR_INFO),
        .M_SC_AR_payld(m31_nodes_M_SC_AR_PAYLD),
        .M_SC_AR_recv(m31_nodes_M_SC_AR_RECV),
        .M_SC_AR_req(m31_nodes_M_SC_AR_REQ),
        .M_SC_AR_send(m31_nodes_M_SC_AR_SEND),
        .M_SC_AW_info(m31_nodes_M_SC_AW_INFO),
        .M_SC_AW_payld(m31_nodes_M_SC_AW_PAYLD),
        .M_SC_AW_recv(m31_nodes_M_SC_AW_RECV),
        .M_SC_AW_req(m31_nodes_M_SC_AW_REQ),
        .M_SC_AW_send(m31_nodes_M_SC_AW_SEND),
        .M_SC_B_info(m31_nodes_M_SC_B_INFO),
        .M_SC_B_payld(m31_nodes_M_SC_B_PAYLD),
        .M_SC_B_recv(m31_nodes_M_SC_B_RECV),
        .M_SC_B_req(m31_nodes_M_SC_B_REQ),
        .M_SC_B_send(m31_nodes_M_SC_B_SEND),
        .M_SC_R_info(m31_nodes_M_SC_R_INFO),
        .M_SC_R_payld(m31_nodes_M_SC_R_PAYLD),
        .M_SC_R_recv(m31_nodes_M_SC_R_RECV),
        .M_SC_R_req(m31_nodes_M_SC_R_REQ),
        .M_SC_R_send(m31_nodes_M_SC_R_SEND),
        .M_SC_W_info(m31_nodes_M_SC_W_INFO),
        .M_SC_W_payld(m31_nodes_M_SC_W_PAYLD),
        .M_SC_W_recv(m31_nodes_M_SC_W_RECV),
        .M_SC_W_req(m31_nodes_M_SC_W_REQ),
        .M_SC_W_send(m31_nodes_M_SC_W_SEND),
        .S_SC_AR_info(S_SC_AR_33_INFO),
        .S_SC_AR_payld(S_SC_AR_33_PAYLD),
        .S_SC_AR_recv(S_SC_AR_33_RECV),
        .S_SC_AR_req(S_SC_AR_33_REQ),
        .S_SC_AR_send(S_SC_AR_33_SEND),
        .S_SC_AW_info(S_SC_AW_33_INFO),
        .S_SC_AW_payld(S_SC_AW_33_PAYLD),
        .S_SC_AW_recv(S_SC_AW_33_RECV),
        .S_SC_AW_req(S_SC_AW_33_REQ),
        .S_SC_AW_send(S_SC_AW_33_SEND),
        .S_SC_B_info(S_SC_B_33_INFO),
        .S_SC_B_payld(S_SC_B_33_PAYLD),
        .S_SC_B_recv(S_SC_B_33_RECV),
        .S_SC_B_req(S_SC_B_33_REQ),
        .S_SC_B_send(S_SC_B_33_SEND),
        .S_SC_R_info(S_SC_R_33_INFO),
        .S_SC_R_payld(S_SC_R_33_PAYLD),
        .S_SC_R_recv(S_SC_R_33_RECV),
        .S_SC_R_req(S_SC_R_33_REQ),
        .S_SC_R_send(S_SC_R_33_SEND),
        .S_SC_W_info(S_SC_W_33_INFO),
        .S_SC_W_payld(S_SC_W_33_PAYLD),
        .S_SC_W_recv(S_SC_W_33_RECV),
        .S_SC_W_req(S_SC_W_33_REQ),
        .S_SC_W_send(S_SC_W_33_SEND),
        .m_axi_aclk(clk_map_M31_ACLK),
        .m_axi_aresetn(m_axi_aresetn_31),
        .s_axi_aclk(clk_map_M00_ACLK),
        .s_axi_aresetn(clk_map_M00_ARESETN));
  bd_afc3_m31s2a_0 m31_sc2axi
       (.aclk(clk_map_M31_ACLK),
        .m_axi_araddr(m31_sc2axi_M_AXI_ARADDR),
        .m_axi_arcache(m31_sc2axi_M_AXI_ARCACHE),
        .m_axi_arid(m31_sc2axi_M_AXI_ARID),
        .m_axi_arlen(m31_sc2axi_M_AXI_ARLEN),
        .m_axi_arlock(m31_sc2axi_M_AXI_ARLOCK),
        .m_axi_arprot(m31_sc2axi_M_AXI_ARPROT),
        .m_axi_arqos(m31_sc2axi_M_AXI_ARQOS),
        .m_axi_arready(m31_sc2axi_M_AXI_ARREADY),
        .m_axi_aruser(m31_sc2axi_M_AXI_ARUSER),
        .m_axi_arvalid(m31_sc2axi_M_AXI_ARVALID),
        .m_axi_awaddr(m31_sc2axi_M_AXI_AWADDR),
        .m_axi_awcache(m31_sc2axi_M_AXI_AWCACHE),
        .m_axi_awid(m31_sc2axi_M_AXI_AWID),
        .m_axi_awlen(m31_sc2axi_M_AXI_AWLEN),
        .m_axi_awlock(m31_sc2axi_M_AXI_AWLOCK),
        .m_axi_awprot(m31_sc2axi_M_AXI_AWPROT),
        .m_axi_awqos(m31_sc2axi_M_AXI_AWQOS),
        .m_axi_awready(m31_sc2axi_M_AXI_AWREADY),
        .m_axi_awuser(m31_sc2axi_M_AXI_AWUSER),
        .m_axi_awvalid(m31_sc2axi_M_AXI_AWVALID),
        .m_axi_bid(m31_sc2axi_M_AXI_BID),
        .m_axi_bready(m31_sc2axi_M_AXI_BREADY),
        .m_axi_bresp(m31_sc2axi_M_AXI_BRESP),
        .m_axi_buser(m31_sc2axi_M_AXI_BUSER),
        .m_axi_bvalid(m31_sc2axi_M_AXI_BVALID),
        .m_axi_rdata(m31_sc2axi_M_AXI_RDATA),
        .m_axi_rid(m31_sc2axi_M_AXI_RID),
        .m_axi_rlast(m31_sc2axi_M_AXI_RLAST),
        .m_axi_rready(m31_sc2axi_M_AXI_RREADY),
        .m_axi_rresp(m31_sc2axi_M_AXI_RRESP),
        .m_axi_ruser(m31_sc2axi_M_AXI_RUSER),
        .m_axi_rvalid(m31_sc2axi_M_AXI_RVALID),
        .m_axi_wdata(m31_sc2axi_M_AXI_WDATA),
        .m_axi_wlast(m31_sc2axi_M_AXI_WLAST),
        .m_axi_wready(m31_sc2axi_M_AXI_WREADY),
        .m_axi_wstrb(m31_sc2axi_M_AXI_WSTRB),
        .m_axi_wuser(m31_sc2axi_M_AXI_WUSER),
        .m_axi_wvalid(m31_sc2axi_M_AXI_WVALID),
        .m_sc_b_info(S_SC_B_33_INFO),
        .m_sc_b_payld(S_SC_B_33_PAYLD),
        .m_sc_b_recv(S_SC_B_33_RECV),
        .m_sc_b_req(S_SC_B_33_REQ),
        .m_sc_b_send(S_SC_B_33_SEND),
        .m_sc_r_info(S_SC_R_33_INFO),
        .m_sc_r_payld(S_SC_R_33_PAYLD),
        .m_sc_r_recv(S_SC_R_33_RECV),
        .m_sc_r_req(S_SC_R_33_REQ),
        .m_sc_r_send(S_SC_R_33_SEND),
        .s_sc_ar_info(m31_nodes_M_SC_AR_INFO),
        .s_sc_ar_payld(m31_nodes_M_SC_AR_PAYLD[179:0]),
        .s_sc_ar_recv(m31_nodes_M_SC_AR_RECV),
        .s_sc_ar_req(m31_nodes_M_SC_AR_REQ),
        .s_sc_ar_send(m31_nodes_M_SC_AR_SEND),
        .s_sc_aw_info(m31_nodes_M_SC_AW_INFO),
        .s_sc_aw_payld(m31_nodes_M_SC_AW_PAYLD[179:0]),
        .s_sc_aw_recv(m31_nodes_M_SC_AW_RECV),
        .s_sc_aw_req(m31_nodes_M_SC_AW_REQ),
        .s_sc_aw_send(m31_nodes_M_SC_AW_SEND),
        .s_sc_w_info(m31_nodes_M_SC_W_INFO),
        .s_sc_w_payld(m31_nodes_M_SC_W_PAYLD[66:0]),
        .s_sc_w_recv(m31_nodes_M_SC_W_RECV),
        .s_sc_w_req(m31_nodes_M_SC_W_REQ),
        .s_sc_w_send(m31_nodes_M_SC_W_SEND));
  m32_exit_pipeline_imp_1EC2YSA m32_exit_pipeline
       (.aclk(clk_map_M32_ACLK),
        .aresetn(m_axi_aresetn_32),
        .m_axi_araddr(m32_exit_pipeline_m_axi_ARADDR),
        .m_axi_arprot(m32_exit_pipeline_m_axi_ARPROT),
        .m_axi_arready(m32_exit_pipeline_m_axi_ARREADY),
        .m_axi_arvalid(m32_exit_pipeline_m_axi_ARVALID),
        .m_axi_awaddr(m32_exit_pipeline_m_axi_AWADDR),
        .m_axi_awprot(m32_exit_pipeline_m_axi_AWPROT),
        .m_axi_awready(m32_exit_pipeline_m_axi_AWREADY),
        .m_axi_awvalid(m32_exit_pipeline_m_axi_AWVALID),
        .m_axi_bready(m32_exit_pipeline_m_axi_BREADY),
        .m_axi_bresp(m32_exit_pipeline_m_axi_BRESP),
        .m_axi_bvalid(m32_exit_pipeline_m_axi_BVALID),
        .m_axi_rdata(m32_exit_pipeline_m_axi_RDATA),
        .m_axi_rready(m32_exit_pipeline_m_axi_RREADY),
        .m_axi_rresp(m32_exit_pipeline_m_axi_RRESP),
        .m_axi_rvalid(m32_exit_pipeline_m_axi_RVALID),
        .m_axi_wdata(m32_exit_pipeline_m_axi_WDATA),
        .m_axi_wready(m32_exit_pipeline_m_axi_WREADY),
        .m_axi_wstrb(m32_exit_pipeline_m_axi_WSTRB),
        .m_axi_wvalid(m32_exit_pipeline_m_axi_WVALID),
        .s_axi_araddr(m32_sc2axi_M_AXI_ARADDR),
        .s_axi_arcache(m32_sc2axi_M_AXI_ARCACHE),
        .s_axi_arid(m32_sc2axi_M_AXI_ARID),
        .s_axi_arlen(m32_sc2axi_M_AXI_ARLEN),
        .s_axi_arlock(m32_sc2axi_M_AXI_ARLOCK),
        .s_axi_arprot(m32_sc2axi_M_AXI_ARPROT),
        .s_axi_arqos(m32_sc2axi_M_AXI_ARQOS),
        .s_axi_arready(m32_sc2axi_M_AXI_ARREADY),
        .s_axi_aruser(m32_sc2axi_M_AXI_ARUSER),
        .s_axi_arvalid(m32_sc2axi_M_AXI_ARVALID),
        .s_axi_awaddr(m32_sc2axi_M_AXI_AWADDR),
        .s_axi_awcache(m32_sc2axi_M_AXI_AWCACHE),
        .s_axi_awid(m32_sc2axi_M_AXI_AWID),
        .s_axi_awlen(m32_sc2axi_M_AXI_AWLEN),
        .s_axi_awlock(m32_sc2axi_M_AXI_AWLOCK),
        .s_axi_awprot(m32_sc2axi_M_AXI_AWPROT),
        .s_axi_awqos(m32_sc2axi_M_AXI_AWQOS),
        .s_axi_awready(m32_sc2axi_M_AXI_AWREADY),
        .s_axi_awuser(m32_sc2axi_M_AXI_AWUSER),
        .s_axi_awvalid(m32_sc2axi_M_AXI_AWVALID),
        .s_axi_bid(m32_sc2axi_M_AXI_BID),
        .s_axi_bready(m32_sc2axi_M_AXI_BREADY),
        .s_axi_bresp(m32_sc2axi_M_AXI_BRESP),
        .s_axi_buser(m32_sc2axi_M_AXI_BUSER),
        .s_axi_bvalid(m32_sc2axi_M_AXI_BVALID),
        .s_axi_rdata(m32_sc2axi_M_AXI_RDATA),
        .s_axi_rid(m32_sc2axi_M_AXI_RID),
        .s_axi_rlast(m32_sc2axi_M_AXI_RLAST),
        .s_axi_rready(m32_sc2axi_M_AXI_RREADY),
        .s_axi_rresp(m32_sc2axi_M_AXI_RRESP),
        .s_axi_ruser(m32_sc2axi_M_AXI_RUSER),
        .s_axi_rvalid(m32_sc2axi_M_AXI_RVALID),
        .s_axi_wdata(m32_sc2axi_M_AXI_WDATA),
        .s_axi_wlast(m32_sc2axi_M_AXI_WLAST),
        .s_axi_wready(m32_sc2axi_M_AXI_WREADY),
        .s_axi_wstrb(m32_sc2axi_M_AXI_WSTRB),
        .s_axi_wuser(m32_sc2axi_M_AXI_WUSER),
        .s_axi_wvalid(m32_sc2axi_M_AXI_WVALID));
  m32_nodes_imp_LMWO2N m32_nodes
       (.M_SC_AR_info(m32_nodes_M_SC_AR_INFO),
        .M_SC_AR_payld(m32_nodes_M_SC_AR_PAYLD),
        .M_SC_AR_recv(m32_nodes_M_SC_AR_RECV),
        .M_SC_AR_req(m32_nodes_M_SC_AR_REQ),
        .M_SC_AR_send(m32_nodes_M_SC_AR_SEND),
        .M_SC_AW_info(m32_nodes_M_SC_AW_INFO),
        .M_SC_AW_payld(m32_nodes_M_SC_AW_PAYLD),
        .M_SC_AW_recv(m32_nodes_M_SC_AW_RECV),
        .M_SC_AW_req(m32_nodes_M_SC_AW_REQ),
        .M_SC_AW_send(m32_nodes_M_SC_AW_SEND),
        .M_SC_B_info(m32_nodes_M_SC_B_INFO),
        .M_SC_B_payld(m32_nodes_M_SC_B_PAYLD),
        .M_SC_B_recv(m32_nodes_M_SC_B_RECV),
        .M_SC_B_req(m32_nodes_M_SC_B_REQ),
        .M_SC_B_send(m32_nodes_M_SC_B_SEND),
        .M_SC_R_info(m32_nodes_M_SC_R_INFO),
        .M_SC_R_payld(m32_nodes_M_SC_R_PAYLD),
        .M_SC_R_recv(m32_nodes_M_SC_R_RECV),
        .M_SC_R_req(m32_nodes_M_SC_R_REQ),
        .M_SC_R_send(m32_nodes_M_SC_R_SEND),
        .M_SC_W_info(m32_nodes_M_SC_W_INFO),
        .M_SC_W_payld(m32_nodes_M_SC_W_PAYLD),
        .M_SC_W_recv(m32_nodes_M_SC_W_RECV),
        .M_SC_W_req(m32_nodes_M_SC_W_REQ),
        .M_SC_W_send(m32_nodes_M_SC_W_SEND),
        .S_SC_AR_info(S_SC_AR_34_INFO),
        .S_SC_AR_payld(S_SC_AR_34_PAYLD),
        .S_SC_AR_recv(S_SC_AR_34_RECV),
        .S_SC_AR_req(S_SC_AR_34_REQ),
        .S_SC_AR_send(S_SC_AR_34_SEND),
        .S_SC_AW_info(S_SC_AW_34_INFO),
        .S_SC_AW_payld(S_SC_AW_34_PAYLD),
        .S_SC_AW_recv(S_SC_AW_34_RECV),
        .S_SC_AW_req(S_SC_AW_34_REQ),
        .S_SC_AW_send(S_SC_AW_34_SEND),
        .S_SC_B_info(S_SC_B_34_INFO),
        .S_SC_B_payld(S_SC_B_34_PAYLD),
        .S_SC_B_recv(S_SC_B_34_RECV),
        .S_SC_B_req(S_SC_B_34_REQ),
        .S_SC_B_send(S_SC_B_34_SEND),
        .S_SC_R_info(S_SC_R_34_INFO),
        .S_SC_R_payld(S_SC_R_34_PAYLD),
        .S_SC_R_recv(S_SC_R_34_RECV),
        .S_SC_R_req(S_SC_R_34_REQ),
        .S_SC_R_send(S_SC_R_34_SEND),
        .S_SC_W_info(S_SC_W_34_INFO),
        .S_SC_W_payld(S_SC_W_34_PAYLD),
        .S_SC_W_recv(S_SC_W_34_RECV),
        .S_SC_W_req(S_SC_W_34_REQ),
        .S_SC_W_send(S_SC_W_34_SEND),
        .m_axi_aclk(clk_map_M32_ACLK),
        .m_axi_aresetn(m_axi_aresetn_32),
        .s_axi_aclk(clk_map_M00_ACLK),
        .s_axi_aresetn(clk_map_M00_ARESETN));
  bd_afc3_m32s2a_0 m32_sc2axi
       (.aclk(clk_map_M32_ACLK),
        .m_axi_araddr(m32_sc2axi_M_AXI_ARADDR),
        .m_axi_arcache(m32_sc2axi_M_AXI_ARCACHE),
        .m_axi_arid(m32_sc2axi_M_AXI_ARID),
        .m_axi_arlen(m32_sc2axi_M_AXI_ARLEN),
        .m_axi_arlock(m32_sc2axi_M_AXI_ARLOCK),
        .m_axi_arprot(m32_sc2axi_M_AXI_ARPROT),
        .m_axi_arqos(m32_sc2axi_M_AXI_ARQOS),
        .m_axi_arready(m32_sc2axi_M_AXI_ARREADY),
        .m_axi_aruser(m32_sc2axi_M_AXI_ARUSER),
        .m_axi_arvalid(m32_sc2axi_M_AXI_ARVALID),
        .m_axi_awaddr(m32_sc2axi_M_AXI_AWADDR),
        .m_axi_awcache(m32_sc2axi_M_AXI_AWCACHE),
        .m_axi_awid(m32_sc2axi_M_AXI_AWID),
        .m_axi_awlen(m32_sc2axi_M_AXI_AWLEN),
        .m_axi_awlock(m32_sc2axi_M_AXI_AWLOCK),
        .m_axi_awprot(m32_sc2axi_M_AXI_AWPROT),
        .m_axi_awqos(m32_sc2axi_M_AXI_AWQOS),
        .m_axi_awready(m32_sc2axi_M_AXI_AWREADY),
        .m_axi_awuser(m32_sc2axi_M_AXI_AWUSER),
        .m_axi_awvalid(m32_sc2axi_M_AXI_AWVALID),
        .m_axi_bid(m32_sc2axi_M_AXI_BID),
        .m_axi_bready(m32_sc2axi_M_AXI_BREADY),
        .m_axi_bresp(m32_sc2axi_M_AXI_BRESP),
        .m_axi_buser(m32_sc2axi_M_AXI_BUSER),
        .m_axi_bvalid(m32_sc2axi_M_AXI_BVALID),
        .m_axi_rdata(m32_sc2axi_M_AXI_RDATA),
        .m_axi_rid(m32_sc2axi_M_AXI_RID),
        .m_axi_rlast(m32_sc2axi_M_AXI_RLAST),
        .m_axi_rready(m32_sc2axi_M_AXI_RREADY),
        .m_axi_rresp(m32_sc2axi_M_AXI_RRESP),
        .m_axi_ruser(m32_sc2axi_M_AXI_RUSER),
        .m_axi_rvalid(m32_sc2axi_M_AXI_RVALID),
        .m_axi_wdata(m32_sc2axi_M_AXI_WDATA),
        .m_axi_wlast(m32_sc2axi_M_AXI_WLAST),
        .m_axi_wready(m32_sc2axi_M_AXI_WREADY),
        .m_axi_wstrb(m32_sc2axi_M_AXI_WSTRB),
        .m_axi_wuser(m32_sc2axi_M_AXI_WUSER),
        .m_axi_wvalid(m32_sc2axi_M_AXI_WVALID),
        .m_sc_b_info(S_SC_B_34_INFO),
        .m_sc_b_payld(S_SC_B_34_PAYLD),
        .m_sc_b_recv(S_SC_B_34_RECV),
        .m_sc_b_req(S_SC_B_34_REQ),
        .m_sc_b_send(S_SC_B_34_SEND),
        .m_sc_r_info(S_SC_R_34_INFO),
        .m_sc_r_payld(S_SC_R_34_PAYLD),
        .m_sc_r_recv(S_SC_R_34_RECV),
        .m_sc_r_req(S_SC_R_34_REQ),
        .m_sc_r_send(S_SC_R_34_SEND),
        .s_sc_ar_info(m32_nodes_M_SC_AR_INFO),
        .s_sc_ar_payld(m32_nodes_M_SC_AR_PAYLD[179:0]),
        .s_sc_ar_recv(m32_nodes_M_SC_AR_RECV),
        .s_sc_ar_req(m32_nodes_M_SC_AR_REQ),
        .s_sc_ar_send(m32_nodes_M_SC_AR_SEND),
        .s_sc_aw_info(m32_nodes_M_SC_AW_INFO),
        .s_sc_aw_payld(m32_nodes_M_SC_AW_PAYLD[179:0]),
        .s_sc_aw_recv(m32_nodes_M_SC_AW_RECV),
        .s_sc_aw_req(m32_nodes_M_SC_AW_REQ),
        .s_sc_aw_send(m32_nodes_M_SC_AW_SEND),
        .s_sc_w_info(m32_nodes_M_SC_W_INFO),
        .s_sc_w_payld(m32_nodes_M_SC_W_PAYLD[66:0]),
        .s_sc_w_recv(m32_nodes_M_SC_W_RECV),
        .s_sc_w_req(m32_nodes_M_SC_W_REQ),
        .s_sc_w_send(m32_nodes_M_SC_W_SEND));
  m33_exit_pipeline_imp_190QOUY m33_exit_pipeline
       (.aclk(clk_map_M33_ACLK),
        .aresetn(m_axi_aresetn_33),
        .m_axi_araddr(m33_exit_pipeline_m_axi_ARADDR),
        .m_axi_arprot(m33_exit_pipeline_m_axi_ARPROT),
        .m_axi_arready(m33_exit_pipeline_m_axi_ARREADY),
        .m_axi_arvalid(m33_exit_pipeline_m_axi_ARVALID),
        .m_axi_awaddr(m33_exit_pipeline_m_axi_AWADDR),
        .m_axi_awprot(m33_exit_pipeline_m_axi_AWPROT),
        .m_axi_awready(m33_exit_pipeline_m_axi_AWREADY),
        .m_axi_awvalid(m33_exit_pipeline_m_axi_AWVALID),
        .m_axi_bready(m33_exit_pipeline_m_axi_BREADY),
        .m_axi_bresp(m33_exit_pipeline_m_axi_BRESP),
        .m_axi_bvalid(m33_exit_pipeline_m_axi_BVALID),
        .m_axi_rdata(m33_exit_pipeline_m_axi_RDATA),
        .m_axi_rready(m33_exit_pipeline_m_axi_RREADY),
        .m_axi_rresp(m33_exit_pipeline_m_axi_RRESP),
        .m_axi_rvalid(m33_exit_pipeline_m_axi_RVALID),
        .m_axi_wdata(m33_exit_pipeline_m_axi_WDATA),
        .m_axi_wready(m33_exit_pipeline_m_axi_WREADY),
        .m_axi_wstrb(m33_exit_pipeline_m_axi_WSTRB),
        .m_axi_wvalid(m33_exit_pipeline_m_axi_WVALID),
        .s_axi_araddr(m33_sc2axi_M_AXI_ARADDR),
        .s_axi_arcache(m33_sc2axi_M_AXI_ARCACHE),
        .s_axi_arid(m33_sc2axi_M_AXI_ARID),
        .s_axi_arlen(m33_sc2axi_M_AXI_ARLEN),
        .s_axi_arlock(m33_sc2axi_M_AXI_ARLOCK),
        .s_axi_arprot(m33_sc2axi_M_AXI_ARPROT),
        .s_axi_arqos(m33_sc2axi_M_AXI_ARQOS),
        .s_axi_arready(m33_sc2axi_M_AXI_ARREADY),
        .s_axi_aruser(m33_sc2axi_M_AXI_ARUSER),
        .s_axi_arvalid(m33_sc2axi_M_AXI_ARVALID),
        .s_axi_awaddr(m33_sc2axi_M_AXI_AWADDR),
        .s_axi_awcache(m33_sc2axi_M_AXI_AWCACHE),
        .s_axi_awid(m33_sc2axi_M_AXI_AWID),
        .s_axi_awlen(m33_sc2axi_M_AXI_AWLEN),
        .s_axi_awlock(m33_sc2axi_M_AXI_AWLOCK),
        .s_axi_awprot(m33_sc2axi_M_AXI_AWPROT),
        .s_axi_awqos(m33_sc2axi_M_AXI_AWQOS),
        .s_axi_awready(m33_sc2axi_M_AXI_AWREADY),
        .s_axi_awuser(m33_sc2axi_M_AXI_AWUSER),
        .s_axi_awvalid(m33_sc2axi_M_AXI_AWVALID),
        .s_axi_bid(m33_sc2axi_M_AXI_BID),
        .s_axi_bready(m33_sc2axi_M_AXI_BREADY),
        .s_axi_bresp(m33_sc2axi_M_AXI_BRESP),
        .s_axi_buser(m33_sc2axi_M_AXI_BUSER),
        .s_axi_bvalid(m33_sc2axi_M_AXI_BVALID),
        .s_axi_rdata(m33_sc2axi_M_AXI_RDATA),
        .s_axi_rid(m33_sc2axi_M_AXI_RID),
        .s_axi_rlast(m33_sc2axi_M_AXI_RLAST),
        .s_axi_rready(m33_sc2axi_M_AXI_RREADY),
        .s_axi_rresp(m33_sc2axi_M_AXI_RRESP),
        .s_axi_ruser(m33_sc2axi_M_AXI_RUSER),
        .s_axi_rvalid(m33_sc2axi_M_AXI_RVALID),
        .s_axi_wdata(m33_sc2axi_M_AXI_WDATA),
        .s_axi_wlast(m33_sc2axi_M_AXI_WLAST),
        .s_axi_wready(m33_sc2axi_M_AXI_WREADY),
        .s_axi_wstrb(m33_sc2axi_M_AXI_WSTRB),
        .s_axi_wuser(m33_sc2axi_M_AXI_WUSER),
        .s_axi_wvalid(m33_sc2axi_M_AXI_WVALID));
  m33_nodes_imp_1LZ89T5 m33_nodes
       (.M_SC_AR_info(m33_nodes_M_SC_AR_INFO),
        .M_SC_AR_payld(m33_nodes_M_SC_AR_PAYLD),
        .M_SC_AR_recv(m33_nodes_M_SC_AR_RECV),
        .M_SC_AR_req(m33_nodes_M_SC_AR_REQ),
        .M_SC_AR_send(m33_nodes_M_SC_AR_SEND),
        .M_SC_AW_info(m33_nodes_M_SC_AW_INFO),
        .M_SC_AW_payld(m33_nodes_M_SC_AW_PAYLD),
        .M_SC_AW_recv(m33_nodes_M_SC_AW_RECV),
        .M_SC_AW_req(m33_nodes_M_SC_AW_REQ),
        .M_SC_AW_send(m33_nodes_M_SC_AW_SEND),
        .M_SC_B_info(m33_nodes_M_SC_B_INFO),
        .M_SC_B_payld(m33_nodes_M_SC_B_PAYLD),
        .M_SC_B_recv(m33_nodes_M_SC_B_RECV),
        .M_SC_B_req(m33_nodes_M_SC_B_REQ),
        .M_SC_B_send(m33_nodes_M_SC_B_SEND),
        .M_SC_R_info(m33_nodes_M_SC_R_INFO),
        .M_SC_R_payld(m33_nodes_M_SC_R_PAYLD),
        .M_SC_R_recv(m33_nodes_M_SC_R_RECV),
        .M_SC_R_req(m33_nodes_M_SC_R_REQ),
        .M_SC_R_send(m33_nodes_M_SC_R_SEND),
        .M_SC_W_info(m33_nodes_M_SC_W_INFO),
        .M_SC_W_payld(m33_nodes_M_SC_W_PAYLD),
        .M_SC_W_recv(m33_nodes_M_SC_W_RECV),
        .M_SC_W_req(m33_nodes_M_SC_W_REQ),
        .M_SC_W_send(m33_nodes_M_SC_W_SEND),
        .S_SC_AR_info(S_SC_AR_35_INFO),
        .S_SC_AR_payld(S_SC_AR_35_PAYLD),
        .S_SC_AR_recv(S_SC_AR_35_RECV),
        .S_SC_AR_req(S_SC_AR_35_REQ),
        .S_SC_AR_send(S_SC_AR_35_SEND),
        .S_SC_AW_info(S_SC_AW_35_INFO),
        .S_SC_AW_payld(S_SC_AW_35_PAYLD),
        .S_SC_AW_recv(S_SC_AW_35_RECV),
        .S_SC_AW_req(S_SC_AW_35_REQ),
        .S_SC_AW_send(S_SC_AW_35_SEND),
        .S_SC_B_info(S_SC_B_35_INFO),
        .S_SC_B_payld(S_SC_B_35_PAYLD),
        .S_SC_B_recv(S_SC_B_35_RECV),
        .S_SC_B_req(S_SC_B_35_REQ),
        .S_SC_B_send(S_SC_B_35_SEND),
        .S_SC_R_info(S_SC_R_35_INFO),
        .S_SC_R_payld(S_SC_R_35_PAYLD),
        .S_SC_R_recv(S_SC_R_35_RECV),
        .S_SC_R_req(S_SC_R_35_REQ),
        .S_SC_R_send(S_SC_R_35_SEND),
        .S_SC_W_info(S_SC_W_35_INFO),
        .S_SC_W_payld(S_SC_W_35_PAYLD),
        .S_SC_W_recv(S_SC_W_35_RECV),
        .S_SC_W_req(S_SC_W_35_REQ),
        .S_SC_W_send(S_SC_W_35_SEND),
        .m_axi_aclk(clk_map_M33_ACLK),
        .m_axi_aresetn(m_axi_aresetn_33),
        .s_axi_aclk(clk_map_M00_ACLK),
        .s_axi_aresetn(clk_map_M00_ARESETN));
  bd_afc3_m33s2a_0 m33_sc2axi
       (.aclk(clk_map_M33_ACLK),
        .m_axi_araddr(m33_sc2axi_M_AXI_ARADDR),
        .m_axi_arcache(m33_sc2axi_M_AXI_ARCACHE),
        .m_axi_arid(m33_sc2axi_M_AXI_ARID),
        .m_axi_arlen(m33_sc2axi_M_AXI_ARLEN),
        .m_axi_arlock(m33_sc2axi_M_AXI_ARLOCK),
        .m_axi_arprot(m33_sc2axi_M_AXI_ARPROT),
        .m_axi_arqos(m33_sc2axi_M_AXI_ARQOS),
        .m_axi_arready(m33_sc2axi_M_AXI_ARREADY),
        .m_axi_aruser(m33_sc2axi_M_AXI_ARUSER),
        .m_axi_arvalid(m33_sc2axi_M_AXI_ARVALID),
        .m_axi_awaddr(m33_sc2axi_M_AXI_AWADDR),
        .m_axi_awcache(m33_sc2axi_M_AXI_AWCACHE),
        .m_axi_awid(m33_sc2axi_M_AXI_AWID),
        .m_axi_awlen(m33_sc2axi_M_AXI_AWLEN),
        .m_axi_awlock(m33_sc2axi_M_AXI_AWLOCK),
        .m_axi_awprot(m33_sc2axi_M_AXI_AWPROT),
        .m_axi_awqos(m33_sc2axi_M_AXI_AWQOS),
        .m_axi_awready(m33_sc2axi_M_AXI_AWREADY),
        .m_axi_awuser(m33_sc2axi_M_AXI_AWUSER),
        .m_axi_awvalid(m33_sc2axi_M_AXI_AWVALID),
        .m_axi_bid(m33_sc2axi_M_AXI_BID),
        .m_axi_bready(m33_sc2axi_M_AXI_BREADY),
        .m_axi_bresp(m33_sc2axi_M_AXI_BRESP),
        .m_axi_buser(m33_sc2axi_M_AXI_BUSER),
        .m_axi_bvalid(m33_sc2axi_M_AXI_BVALID),
        .m_axi_rdata(m33_sc2axi_M_AXI_RDATA),
        .m_axi_rid(m33_sc2axi_M_AXI_RID),
        .m_axi_rlast(m33_sc2axi_M_AXI_RLAST),
        .m_axi_rready(m33_sc2axi_M_AXI_RREADY),
        .m_axi_rresp(m33_sc2axi_M_AXI_RRESP),
        .m_axi_ruser(m33_sc2axi_M_AXI_RUSER),
        .m_axi_rvalid(m33_sc2axi_M_AXI_RVALID),
        .m_axi_wdata(m33_sc2axi_M_AXI_WDATA),
        .m_axi_wlast(m33_sc2axi_M_AXI_WLAST),
        .m_axi_wready(m33_sc2axi_M_AXI_WREADY),
        .m_axi_wstrb(m33_sc2axi_M_AXI_WSTRB),
        .m_axi_wuser(m33_sc2axi_M_AXI_WUSER),
        .m_axi_wvalid(m33_sc2axi_M_AXI_WVALID),
        .m_sc_b_info(S_SC_B_35_INFO),
        .m_sc_b_payld(S_SC_B_35_PAYLD),
        .m_sc_b_recv(S_SC_B_35_RECV),
        .m_sc_b_req(S_SC_B_35_REQ),
        .m_sc_b_send(S_SC_B_35_SEND),
        .m_sc_r_info(S_SC_R_35_INFO),
        .m_sc_r_payld(S_SC_R_35_PAYLD),
        .m_sc_r_recv(S_SC_R_35_RECV),
        .m_sc_r_req(S_SC_R_35_REQ),
        .m_sc_r_send(S_SC_R_35_SEND),
        .s_sc_ar_info(m33_nodes_M_SC_AR_INFO),
        .s_sc_ar_payld(m33_nodes_M_SC_AR_PAYLD[179:0]),
        .s_sc_ar_recv(m33_nodes_M_SC_AR_RECV),
        .s_sc_ar_req(m33_nodes_M_SC_AR_REQ),
        .s_sc_ar_send(m33_nodes_M_SC_AR_SEND),
        .s_sc_aw_info(m33_nodes_M_SC_AW_INFO),
        .s_sc_aw_payld(m33_nodes_M_SC_AW_PAYLD[179:0]),
        .s_sc_aw_recv(m33_nodes_M_SC_AW_RECV),
        .s_sc_aw_req(m33_nodes_M_SC_AW_REQ),
        .s_sc_aw_send(m33_nodes_M_SC_AW_SEND),
        .s_sc_w_info(m33_nodes_M_SC_W_INFO),
        .s_sc_w_payld(m33_nodes_M_SC_W_PAYLD[66:0]),
        .s_sc_w_recv(m33_nodes_M_SC_W_RECV),
        .s_sc_w_req(m33_nodes_M_SC_W_REQ),
        .s_sc_w_send(m33_nodes_M_SC_W_SEND));
  m34_exit_pipeline_imp_1JDPZQ2 m34_exit_pipeline
       (.aclk(clk_map_M34_ACLK),
        .aresetn(m_axi_aresetn_34),
        .m_axi_araddr(m34_exit_pipeline_m_axi_ARADDR),
        .m_axi_arprot(m34_exit_pipeline_m_axi_ARPROT),
        .m_axi_arready(m34_exit_pipeline_m_axi_ARREADY),
        .m_axi_arvalid(m34_exit_pipeline_m_axi_ARVALID),
        .m_axi_awaddr(m34_exit_pipeline_m_axi_AWADDR),
        .m_axi_awprot(m34_exit_pipeline_m_axi_AWPROT),
        .m_axi_awready(m34_exit_pipeline_m_axi_AWREADY),
        .m_axi_awvalid(m34_exit_pipeline_m_axi_AWVALID),
        .m_axi_bready(m34_exit_pipeline_m_axi_BREADY),
        .m_axi_bresp(m34_exit_pipeline_m_axi_BRESP),
        .m_axi_bvalid(m34_exit_pipeline_m_axi_BVALID),
        .m_axi_rdata(m34_exit_pipeline_m_axi_RDATA),
        .m_axi_rready(m34_exit_pipeline_m_axi_RREADY),
        .m_axi_rresp(m34_exit_pipeline_m_axi_RRESP),
        .m_axi_rvalid(m34_exit_pipeline_m_axi_RVALID),
        .m_axi_wdata(m34_exit_pipeline_m_axi_WDATA),
        .m_axi_wready(m34_exit_pipeline_m_axi_WREADY),
        .m_axi_wstrb(m34_exit_pipeline_m_axi_WSTRB),
        .m_axi_wvalid(m34_exit_pipeline_m_axi_WVALID),
        .s_axi_araddr(m34_sc2axi_M_AXI_ARADDR),
        .s_axi_arcache(m34_sc2axi_M_AXI_ARCACHE),
        .s_axi_arid(m34_sc2axi_M_AXI_ARID),
        .s_axi_arlen(m34_sc2axi_M_AXI_ARLEN),
        .s_axi_arlock(m34_sc2axi_M_AXI_ARLOCK),
        .s_axi_arprot(m34_sc2axi_M_AXI_ARPROT),
        .s_axi_arqos(m34_sc2axi_M_AXI_ARQOS),
        .s_axi_arready(m34_sc2axi_M_AXI_ARREADY),
        .s_axi_aruser(m34_sc2axi_M_AXI_ARUSER),
        .s_axi_arvalid(m34_sc2axi_M_AXI_ARVALID),
        .s_axi_awaddr(m34_sc2axi_M_AXI_AWADDR),
        .s_axi_awcache(m34_sc2axi_M_AXI_AWCACHE),
        .s_axi_awid(m34_sc2axi_M_AXI_AWID),
        .s_axi_awlen(m34_sc2axi_M_AXI_AWLEN),
        .s_axi_awlock(m34_sc2axi_M_AXI_AWLOCK),
        .s_axi_awprot(m34_sc2axi_M_AXI_AWPROT),
        .s_axi_awqos(m34_sc2axi_M_AXI_AWQOS),
        .s_axi_awready(m34_sc2axi_M_AXI_AWREADY),
        .s_axi_awuser(m34_sc2axi_M_AXI_AWUSER),
        .s_axi_awvalid(m34_sc2axi_M_AXI_AWVALID),
        .s_axi_bid(m34_sc2axi_M_AXI_BID),
        .s_axi_bready(m34_sc2axi_M_AXI_BREADY),
        .s_axi_bresp(m34_sc2axi_M_AXI_BRESP),
        .s_axi_buser(m34_sc2axi_M_AXI_BUSER),
        .s_axi_bvalid(m34_sc2axi_M_AXI_BVALID),
        .s_axi_rdata(m34_sc2axi_M_AXI_RDATA),
        .s_axi_rid(m34_sc2axi_M_AXI_RID),
        .s_axi_rlast(m34_sc2axi_M_AXI_RLAST),
        .s_axi_rready(m34_sc2axi_M_AXI_RREADY),
        .s_axi_rresp(m34_sc2axi_M_AXI_RRESP),
        .s_axi_ruser(m34_sc2axi_M_AXI_RUSER),
        .s_axi_rvalid(m34_sc2axi_M_AXI_RVALID),
        .s_axi_wdata(m34_sc2axi_M_AXI_WDATA),
        .s_axi_wlast(m34_sc2axi_M_AXI_WLAST),
        .s_axi_wready(m34_sc2axi_M_AXI_WREADY),
        .s_axi_wstrb(m34_sc2axi_M_AXI_WSTRB),
        .s_axi_wuser(m34_sc2axi_M_AXI_WUSER),
        .s_axi_wvalid(m34_sc2axi_M_AXI_WVALID));
  m34_nodes_imp_1EA682X m34_nodes
       (.M_SC_AR_info(m34_nodes_M_SC_AR_INFO),
        .M_SC_AR_payld(m34_nodes_M_SC_AR_PAYLD),
        .M_SC_AR_recv(m34_nodes_M_SC_AR_RECV),
        .M_SC_AR_req(m34_nodes_M_SC_AR_REQ),
        .M_SC_AR_send(m34_nodes_M_SC_AR_SEND),
        .M_SC_AW_info(m34_nodes_M_SC_AW_INFO),
        .M_SC_AW_payld(m34_nodes_M_SC_AW_PAYLD),
        .M_SC_AW_recv(m34_nodes_M_SC_AW_RECV),
        .M_SC_AW_req(m34_nodes_M_SC_AW_REQ),
        .M_SC_AW_send(m34_nodes_M_SC_AW_SEND),
        .M_SC_B_info(m34_nodes_M_SC_B_INFO),
        .M_SC_B_payld(m34_nodes_M_SC_B_PAYLD),
        .M_SC_B_recv(m34_nodes_M_SC_B_RECV),
        .M_SC_B_req(m34_nodes_M_SC_B_REQ),
        .M_SC_B_send(m34_nodes_M_SC_B_SEND),
        .M_SC_R_info(m34_nodes_M_SC_R_INFO),
        .M_SC_R_payld(m34_nodes_M_SC_R_PAYLD),
        .M_SC_R_recv(m34_nodes_M_SC_R_RECV),
        .M_SC_R_req(m34_nodes_M_SC_R_REQ),
        .M_SC_R_send(m34_nodes_M_SC_R_SEND),
        .M_SC_W_info(m34_nodes_M_SC_W_INFO),
        .M_SC_W_payld(m34_nodes_M_SC_W_PAYLD),
        .M_SC_W_recv(m34_nodes_M_SC_W_RECV),
        .M_SC_W_req(m34_nodes_M_SC_W_REQ),
        .M_SC_W_send(m34_nodes_M_SC_W_SEND),
        .S_SC_AR_info(S_SC_AR_36_INFO),
        .S_SC_AR_payld(S_SC_AR_36_PAYLD),
        .S_SC_AR_recv(S_SC_AR_36_RECV),
        .S_SC_AR_req(S_SC_AR_36_REQ),
        .S_SC_AR_send(S_SC_AR_36_SEND),
        .S_SC_AW_info(S_SC_AW_36_INFO),
        .S_SC_AW_payld(S_SC_AW_36_PAYLD),
        .S_SC_AW_recv(S_SC_AW_36_RECV),
        .S_SC_AW_req(S_SC_AW_36_REQ),
        .S_SC_AW_send(S_SC_AW_36_SEND),
        .S_SC_B_info(S_SC_B_36_INFO),
        .S_SC_B_payld(S_SC_B_36_PAYLD),
        .S_SC_B_recv(S_SC_B_36_RECV),
        .S_SC_B_req(S_SC_B_36_REQ),
        .S_SC_B_send(S_SC_B_36_SEND),
        .S_SC_R_info(S_SC_R_36_INFO),
        .S_SC_R_payld(S_SC_R_36_PAYLD),
        .S_SC_R_recv(S_SC_R_36_RECV),
        .S_SC_R_req(S_SC_R_36_REQ),
        .S_SC_R_send(S_SC_R_36_SEND),
        .S_SC_W_info(S_SC_W_36_INFO),
        .S_SC_W_payld(S_SC_W_36_PAYLD),
        .S_SC_W_recv(S_SC_W_36_RECV),
        .S_SC_W_req(S_SC_W_36_REQ),
        .S_SC_W_send(S_SC_W_36_SEND),
        .m_axi_aclk(clk_map_M34_ACLK),
        .m_axi_aresetn(m_axi_aresetn_34),
        .s_axi_aclk(clk_map_M00_ACLK),
        .s_axi_aresetn(clk_map_M00_ARESETN));
  bd_afc3_m34s2a_0 m34_sc2axi
       (.aclk(clk_map_M34_ACLK),
        .m_axi_araddr(m34_sc2axi_M_AXI_ARADDR),
        .m_axi_arcache(m34_sc2axi_M_AXI_ARCACHE),
        .m_axi_arid(m34_sc2axi_M_AXI_ARID),
        .m_axi_arlen(m34_sc2axi_M_AXI_ARLEN),
        .m_axi_arlock(m34_sc2axi_M_AXI_ARLOCK),
        .m_axi_arprot(m34_sc2axi_M_AXI_ARPROT),
        .m_axi_arqos(m34_sc2axi_M_AXI_ARQOS),
        .m_axi_arready(m34_sc2axi_M_AXI_ARREADY),
        .m_axi_aruser(m34_sc2axi_M_AXI_ARUSER),
        .m_axi_arvalid(m34_sc2axi_M_AXI_ARVALID),
        .m_axi_awaddr(m34_sc2axi_M_AXI_AWADDR),
        .m_axi_awcache(m34_sc2axi_M_AXI_AWCACHE),
        .m_axi_awid(m34_sc2axi_M_AXI_AWID),
        .m_axi_awlen(m34_sc2axi_M_AXI_AWLEN),
        .m_axi_awlock(m34_sc2axi_M_AXI_AWLOCK),
        .m_axi_awprot(m34_sc2axi_M_AXI_AWPROT),
        .m_axi_awqos(m34_sc2axi_M_AXI_AWQOS),
        .m_axi_awready(m34_sc2axi_M_AXI_AWREADY),
        .m_axi_awuser(m34_sc2axi_M_AXI_AWUSER),
        .m_axi_awvalid(m34_sc2axi_M_AXI_AWVALID),
        .m_axi_bid(m34_sc2axi_M_AXI_BID),
        .m_axi_bready(m34_sc2axi_M_AXI_BREADY),
        .m_axi_bresp(m34_sc2axi_M_AXI_BRESP),
        .m_axi_buser(m34_sc2axi_M_AXI_BUSER),
        .m_axi_bvalid(m34_sc2axi_M_AXI_BVALID),
        .m_axi_rdata(m34_sc2axi_M_AXI_RDATA),
        .m_axi_rid(m34_sc2axi_M_AXI_RID),
        .m_axi_rlast(m34_sc2axi_M_AXI_RLAST),
        .m_axi_rready(m34_sc2axi_M_AXI_RREADY),
        .m_axi_rresp(m34_sc2axi_M_AXI_RRESP),
        .m_axi_ruser(m34_sc2axi_M_AXI_RUSER),
        .m_axi_rvalid(m34_sc2axi_M_AXI_RVALID),
        .m_axi_wdata(m34_sc2axi_M_AXI_WDATA),
        .m_axi_wlast(m34_sc2axi_M_AXI_WLAST),
        .m_axi_wready(m34_sc2axi_M_AXI_WREADY),
        .m_axi_wstrb(m34_sc2axi_M_AXI_WSTRB),
        .m_axi_wuser(m34_sc2axi_M_AXI_WUSER),
        .m_axi_wvalid(m34_sc2axi_M_AXI_WVALID),
        .m_sc_b_info(S_SC_B_36_INFO),
        .m_sc_b_payld(S_SC_B_36_PAYLD),
        .m_sc_b_recv(S_SC_B_36_RECV),
        .m_sc_b_req(S_SC_B_36_REQ),
        .m_sc_b_send(S_SC_B_36_SEND),
        .m_sc_r_info(S_SC_R_36_INFO),
        .m_sc_r_payld(S_SC_R_36_PAYLD),
        .m_sc_r_recv(S_SC_R_36_RECV),
        .m_sc_r_req(S_SC_R_36_REQ),
        .m_sc_r_send(S_SC_R_36_SEND),
        .s_sc_ar_info(m34_nodes_M_SC_AR_INFO),
        .s_sc_ar_payld(m34_nodes_M_SC_AR_PAYLD[179:0]),
        .s_sc_ar_recv(m34_nodes_M_SC_AR_RECV),
        .s_sc_ar_req(m34_nodes_M_SC_AR_REQ),
        .s_sc_ar_send(m34_nodes_M_SC_AR_SEND),
        .s_sc_aw_info(m34_nodes_M_SC_AW_INFO),
        .s_sc_aw_payld(m34_nodes_M_SC_AW_PAYLD[179:0]),
        .s_sc_aw_recv(m34_nodes_M_SC_AW_RECV),
        .s_sc_aw_req(m34_nodes_M_SC_AW_REQ),
        .s_sc_aw_send(m34_nodes_M_SC_AW_SEND),
        .s_sc_w_info(m34_nodes_M_SC_W_INFO),
        .s_sc_w_payld(m34_nodes_M_SC_W_PAYLD[66:0]),
        .s_sc_w_recv(m34_nodes_M_SC_W_RECV),
        .s_sc_w_req(m34_nodes_M_SC_W_REQ),
        .s_sc_w_send(m34_nodes_M_SC_W_SEND));
  m35_exit_pipeline_imp_1LWJJRU m35_exit_pipeline
       (.aclk(clk_map_M35_ACLK),
        .aresetn(m_axi_aresetn_35),
        .m_axi_araddr(m35_exit_pipeline_m_axi_ARADDR),
        .m_axi_arprot(m35_exit_pipeline_m_axi_ARPROT),
        .m_axi_arready(m35_exit_pipeline_m_axi_ARREADY),
        .m_axi_arvalid(m35_exit_pipeline_m_axi_ARVALID),
        .m_axi_awaddr(m35_exit_pipeline_m_axi_AWADDR),
        .m_axi_awprot(m35_exit_pipeline_m_axi_AWPROT),
        .m_axi_awready(m35_exit_pipeline_m_axi_AWREADY),
        .m_axi_awvalid(m35_exit_pipeline_m_axi_AWVALID),
        .m_axi_bready(m35_exit_pipeline_m_axi_BREADY),
        .m_axi_bresp(m35_exit_pipeline_m_axi_BRESP),
        .m_axi_bvalid(m35_exit_pipeline_m_axi_BVALID),
        .m_axi_rdata(m35_exit_pipeline_m_axi_RDATA),
        .m_axi_rready(m35_exit_pipeline_m_axi_RREADY),
        .m_axi_rresp(m35_exit_pipeline_m_axi_RRESP),
        .m_axi_rvalid(m35_exit_pipeline_m_axi_RVALID),
        .m_axi_wdata(m35_exit_pipeline_m_axi_WDATA),
        .m_axi_wready(m35_exit_pipeline_m_axi_WREADY),
        .m_axi_wstrb(m35_exit_pipeline_m_axi_WSTRB),
        .m_axi_wvalid(m35_exit_pipeline_m_axi_WVALID),
        .s_axi_araddr(m35_sc2axi_M_AXI_ARADDR),
        .s_axi_arcache(m35_sc2axi_M_AXI_ARCACHE),
        .s_axi_arid(m35_sc2axi_M_AXI_ARID),
        .s_axi_arlen(m35_sc2axi_M_AXI_ARLEN),
        .s_axi_arlock(m35_sc2axi_M_AXI_ARLOCK),
        .s_axi_arprot(m35_sc2axi_M_AXI_ARPROT),
        .s_axi_arqos(m35_sc2axi_M_AXI_ARQOS),
        .s_axi_arready(m35_sc2axi_M_AXI_ARREADY),
        .s_axi_aruser(m35_sc2axi_M_AXI_ARUSER),
        .s_axi_arvalid(m35_sc2axi_M_AXI_ARVALID),
        .s_axi_awaddr(m35_sc2axi_M_AXI_AWADDR),
        .s_axi_awcache(m35_sc2axi_M_AXI_AWCACHE),
        .s_axi_awid(m35_sc2axi_M_AXI_AWID),
        .s_axi_awlen(m35_sc2axi_M_AXI_AWLEN),
        .s_axi_awlock(m35_sc2axi_M_AXI_AWLOCK),
        .s_axi_awprot(m35_sc2axi_M_AXI_AWPROT),
        .s_axi_awqos(m35_sc2axi_M_AXI_AWQOS),
        .s_axi_awready(m35_sc2axi_M_AXI_AWREADY),
        .s_axi_awuser(m35_sc2axi_M_AXI_AWUSER),
        .s_axi_awvalid(m35_sc2axi_M_AXI_AWVALID),
        .s_axi_bid(m35_sc2axi_M_AXI_BID),
        .s_axi_bready(m35_sc2axi_M_AXI_BREADY),
        .s_axi_bresp(m35_sc2axi_M_AXI_BRESP),
        .s_axi_buser(m35_sc2axi_M_AXI_BUSER),
        .s_axi_bvalid(m35_sc2axi_M_AXI_BVALID),
        .s_axi_rdata(m35_sc2axi_M_AXI_RDATA),
        .s_axi_rid(m35_sc2axi_M_AXI_RID),
        .s_axi_rlast(m35_sc2axi_M_AXI_RLAST),
        .s_axi_rready(m35_sc2axi_M_AXI_RREADY),
        .s_axi_rresp(m35_sc2axi_M_AXI_RRESP),
        .s_axi_ruser(m35_sc2axi_M_AXI_RUSER),
        .s_axi_rvalid(m35_sc2axi_M_AXI_RVALID),
        .s_axi_wdata(m35_sc2axi_M_AXI_WDATA),
        .s_axi_wlast(m35_sc2axi_M_AXI_WLAST),
        .s_axi_wready(m35_sc2axi_M_AXI_WREADY),
        .s_axi_wstrb(m35_sc2axi_M_AXI_WSTRB),
        .s_axi_wuser(m35_sc2axi_M_AXI_WUSER),
        .s_axi_wvalid(m35_sc2axi_M_AXI_WVALID));
  m35_nodes_imp_B5P733 m35_nodes
       (.M_SC_AR_info(m35_nodes_M_SC_AR_INFO),
        .M_SC_AR_payld(m35_nodes_M_SC_AR_PAYLD),
        .M_SC_AR_recv(m35_nodes_M_SC_AR_RECV),
        .M_SC_AR_req(m35_nodes_M_SC_AR_REQ),
        .M_SC_AR_send(m35_nodes_M_SC_AR_SEND),
        .M_SC_AW_info(m35_nodes_M_SC_AW_INFO),
        .M_SC_AW_payld(m35_nodes_M_SC_AW_PAYLD),
        .M_SC_AW_recv(m35_nodes_M_SC_AW_RECV),
        .M_SC_AW_req(m35_nodes_M_SC_AW_REQ),
        .M_SC_AW_send(m35_nodes_M_SC_AW_SEND),
        .M_SC_B_info(m35_nodes_M_SC_B_INFO),
        .M_SC_B_payld(m35_nodes_M_SC_B_PAYLD),
        .M_SC_B_recv(m35_nodes_M_SC_B_RECV),
        .M_SC_B_req(m35_nodes_M_SC_B_REQ),
        .M_SC_B_send(m35_nodes_M_SC_B_SEND),
        .M_SC_R_info(m35_nodes_M_SC_R_INFO),
        .M_SC_R_payld(m35_nodes_M_SC_R_PAYLD),
        .M_SC_R_recv(m35_nodes_M_SC_R_RECV),
        .M_SC_R_req(m35_nodes_M_SC_R_REQ),
        .M_SC_R_send(m35_nodes_M_SC_R_SEND),
        .M_SC_W_info(m35_nodes_M_SC_W_INFO),
        .M_SC_W_payld(m35_nodes_M_SC_W_PAYLD),
        .M_SC_W_recv(m35_nodes_M_SC_W_RECV),
        .M_SC_W_req(m35_nodes_M_SC_W_REQ),
        .M_SC_W_send(m35_nodes_M_SC_W_SEND),
        .S_SC_AR_info(S_SC_AR_37_INFO),
        .S_SC_AR_payld(S_SC_AR_37_PAYLD),
        .S_SC_AR_recv(S_SC_AR_37_RECV),
        .S_SC_AR_req(S_SC_AR_37_REQ),
        .S_SC_AR_send(S_SC_AR_37_SEND),
        .S_SC_AW_info(S_SC_AW_37_INFO),
        .S_SC_AW_payld(S_SC_AW_37_PAYLD),
        .S_SC_AW_recv(S_SC_AW_37_RECV),
        .S_SC_AW_req(S_SC_AW_37_REQ),
        .S_SC_AW_send(S_SC_AW_37_SEND),
        .S_SC_B_info(S_SC_B_37_INFO),
        .S_SC_B_payld(S_SC_B_37_PAYLD),
        .S_SC_B_recv(S_SC_B_37_RECV),
        .S_SC_B_req(S_SC_B_37_REQ),
        .S_SC_B_send(S_SC_B_37_SEND),
        .S_SC_R_info(S_SC_R_37_INFO),
        .S_SC_R_payld(S_SC_R_37_PAYLD),
        .S_SC_R_recv(S_SC_R_37_RECV),
        .S_SC_R_req(S_SC_R_37_REQ),
        .S_SC_R_send(S_SC_R_37_SEND),
        .S_SC_W_info(S_SC_W_37_INFO),
        .S_SC_W_payld(S_SC_W_37_PAYLD),
        .S_SC_W_recv(S_SC_W_37_RECV),
        .S_SC_W_req(S_SC_W_37_REQ),
        .S_SC_W_send(S_SC_W_37_SEND),
        .m_axi_aclk(clk_map_M35_ACLK),
        .m_axi_aresetn(m_axi_aresetn_35),
        .s_axi_aclk(clk_map_M00_ACLK),
        .s_axi_aresetn(clk_map_M00_ARESETN));
  bd_afc3_m35s2a_0 m35_sc2axi
       (.aclk(clk_map_M35_ACLK),
        .m_axi_araddr(m35_sc2axi_M_AXI_ARADDR),
        .m_axi_arcache(m35_sc2axi_M_AXI_ARCACHE),
        .m_axi_arid(m35_sc2axi_M_AXI_ARID),
        .m_axi_arlen(m35_sc2axi_M_AXI_ARLEN),
        .m_axi_arlock(m35_sc2axi_M_AXI_ARLOCK),
        .m_axi_arprot(m35_sc2axi_M_AXI_ARPROT),
        .m_axi_arqos(m35_sc2axi_M_AXI_ARQOS),
        .m_axi_arready(m35_sc2axi_M_AXI_ARREADY),
        .m_axi_aruser(m35_sc2axi_M_AXI_ARUSER),
        .m_axi_arvalid(m35_sc2axi_M_AXI_ARVALID),
        .m_axi_awaddr(m35_sc2axi_M_AXI_AWADDR),
        .m_axi_awcache(m35_sc2axi_M_AXI_AWCACHE),
        .m_axi_awid(m35_sc2axi_M_AXI_AWID),
        .m_axi_awlen(m35_sc2axi_M_AXI_AWLEN),
        .m_axi_awlock(m35_sc2axi_M_AXI_AWLOCK),
        .m_axi_awprot(m35_sc2axi_M_AXI_AWPROT),
        .m_axi_awqos(m35_sc2axi_M_AXI_AWQOS),
        .m_axi_awready(m35_sc2axi_M_AXI_AWREADY),
        .m_axi_awuser(m35_sc2axi_M_AXI_AWUSER),
        .m_axi_awvalid(m35_sc2axi_M_AXI_AWVALID),
        .m_axi_bid(m35_sc2axi_M_AXI_BID),
        .m_axi_bready(m35_sc2axi_M_AXI_BREADY),
        .m_axi_bresp(m35_sc2axi_M_AXI_BRESP),
        .m_axi_buser(m35_sc2axi_M_AXI_BUSER),
        .m_axi_bvalid(m35_sc2axi_M_AXI_BVALID),
        .m_axi_rdata(m35_sc2axi_M_AXI_RDATA),
        .m_axi_rid(m35_sc2axi_M_AXI_RID),
        .m_axi_rlast(m35_sc2axi_M_AXI_RLAST),
        .m_axi_rready(m35_sc2axi_M_AXI_RREADY),
        .m_axi_rresp(m35_sc2axi_M_AXI_RRESP),
        .m_axi_ruser(m35_sc2axi_M_AXI_RUSER),
        .m_axi_rvalid(m35_sc2axi_M_AXI_RVALID),
        .m_axi_wdata(m35_sc2axi_M_AXI_WDATA),
        .m_axi_wlast(m35_sc2axi_M_AXI_WLAST),
        .m_axi_wready(m35_sc2axi_M_AXI_WREADY),
        .m_axi_wstrb(m35_sc2axi_M_AXI_WSTRB),
        .m_axi_wuser(m35_sc2axi_M_AXI_WUSER),
        .m_axi_wvalid(m35_sc2axi_M_AXI_WVALID),
        .m_sc_b_info(S_SC_B_37_INFO),
        .m_sc_b_payld(S_SC_B_37_PAYLD),
        .m_sc_b_recv(S_SC_B_37_RECV),
        .m_sc_b_req(S_SC_B_37_REQ),
        .m_sc_b_send(S_SC_B_37_SEND),
        .m_sc_r_info(S_SC_R_37_INFO),
        .m_sc_r_payld(S_SC_R_37_PAYLD),
        .m_sc_r_recv(S_SC_R_37_RECV),
        .m_sc_r_req(S_SC_R_37_REQ),
        .m_sc_r_send(S_SC_R_37_SEND),
        .s_sc_ar_info(m35_nodes_M_SC_AR_INFO),
        .s_sc_ar_payld(m35_nodes_M_SC_AR_PAYLD[179:0]),
        .s_sc_ar_recv(m35_nodes_M_SC_AR_RECV),
        .s_sc_ar_req(m35_nodes_M_SC_AR_REQ),
        .s_sc_ar_send(m35_nodes_M_SC_AR_SEND),
        .s_sc_aw_info(m35_nodes_M_SC_AW_INFO),
        .s_sc_aw_payld(m35_nodes_M_SC_AW_PAYLD[179:0]),
        .s_sc_aw_recv(m35_nodes_M_SC_AW_RECV),
        .s_sc_aw_req(m35_nodes_M_SC_AW_REQ),
        .s_sc_aw_send(m35_nodes_M_SC_AW_SEND),
        .s_sc_w_info(m35_nodes_M_SC_W_INFO),
        .s_sc_w_payld(m35_nodes_M_SC_W_PAYLD[66:0]),
        .s_sc_w_recv(m35_nodes_M_SC_W_RECV),
        .s_sc_w_req(m35_nodes_M_SC_W_REQ),
        .s_sc_w_send(m35_nodes_M_SC_W_SEND));
  m36_exit_pipeline_imp_1SV6ISA m36_exit_pipeline
       (.aclk(clk_map_M36_ACLK),
        .aresetn(m_axi_aresetn_36),
        .m_axi_araddr(m36_exit_pipeline_m_axi_ARADDR),
        .m_axi_arprot(m36_exit_pipeline_m_axi_ARPROT),
        .m_axi_arready(m36_exit_pipeline_m_axi_ARREADY),
        .m_axi_arvalid(m36_exit_pipeline_m_axi_ARVALID),
        .m_axi_awaddr(m36_exit_pipeline_m_axi_AWADDR),
        .m_axi_awprot(m36_exit_pipeline_m_axi_AWPROT),
        .m_axi_awready(m36_exit_pipeline_m_axi_AWREADY),
        .m_axi_awvalid(m36_exit_pipeline_m_axi_AWVALID),
        .m_axi_bready(m36_exit_pipeline_m_axi_BREADY),
        .m_axi_bresp(m36_exit_pipeline_m_axi_BRESP),
        .m_axi_bvalid(m36_exit_pipeline_m_axi_BVALID),
        .m_axi_rdata(m36_exit_pipeline_m_axi_RDATA),
        .m_axi_rready(m36_exit_pipeline_m_axi_RREADY),
        .m_axi_rresp(m36_exit_pipeline_m_axi_RRESP),
        .m_axi_rvalid(m36_exit_pipeline_m_axi_RVALID),
        .m_axi_wdata(m36_exit_pipeline_m_axi_WDATA),
        .m_axi_wready(m36_exit_pipeline_m_axi_WREADY),
        .m_axi_wstrb(m36_exit_pipeline_m_axi_WSTRB),
        .m_axi_wvalid(m36_exit_pipeline_m_axi_WVALID),
        .s_axi_araddr(m36_sc2axi_M_AXI_ARADDR),
        .s_axi_arcache(m36_sc2axi_M_AXI_ARCACHE),
        .s_axi_arid(m36_sc2axi_M_AXI_ARID),
        .s_axi_arlen(m36_sc2axi_M_AXI_ARLEN),
        .s_axi_arlock(m36_sc2axi_M_AXI_ARLOCK),
        .s_axi_arprot(m36_sc2axi_M_AXI_ARPROT),
        .s_axi_arqos(m36_sc2axi_M_AXI_ARQOS),
        .s_axi_arready(m36_sc2axi_M_AXI_ARREADY),
        .s_axi_aruser(m36_sc2axi_M_AXI_ARUSER),
        .s_axi_arvalid(m36_sc2axi_M_AXI_ARVALID),
        .s_axi_awaddr(m36_sc2axi_M_AXI_AWADDR),
        .s_axi_awcache(m36_sc2axi_M_AXI_AWCACHE),
        .s_axi_awid(m36_sc2axi_M_AXI_AWID),
        .s_axi_awlen(m36_sc2axi_M_AXI_AWLEN),
        .s_axi_awlock(m36_sc2axi_M_AXI_AWLOCK),
        .s_axi_awprot(m36_sc2axi_M_AXI_AWPROT),
        .s_axi_awqos(m36_sc2axi_M_AXI_AWQOS),
        .s_axi_awready(m36_sc2axi_M_AXI_AWREADY),
        .s_axi_awuser(m36_sc2axi_M_AXI_AWUSER),
        .s_axi_awvalid(m36_sc2axi_M_AXI_AWVALID),
        .s_axi_bid(m36_sc2axi_M_AXI_BID),
        .s_axi_bready(m36_sc2axi_M_AXI_BREADY),
        .s_axi_bresp(m36_sc2axi_M_AXI_BRESP),
        .s_axi_buser(m36_sc2axi_M_AXI_BUSER),
        .s_axi_bvalid(m36_sc2axi_M_AXI_BVALID),
        .s_axi_rdata(m36_sc2axi_M_AXI_RDATA),
        .s_axi_rid(m36_sc2axi_M_AXI_RID),
        .s_axi_rlast(m36_sc2axi_M_AXI_RLAST),
        .s_axi_rready(m36_sc2axi_M_AXI_RREADY),
        .s_axi_rresp(m36_sc2axi_M_AXI_RRESP),
        .s_axi_ruser(m36_sc2axi_M_AXI_RUSER),
        .s_axi_rvalid(m36_sc2axi_M_AXI_RVALID),
        .s_axi_wdata(m36_sc2axi_M_AXI_WDATA),
        .s_axi_wlast(m36_sc2axi_M_AXI_WLAST),
        .s_axi_wready(m36_sc2axi_M_AXI_WREADY),
        .s_axi_wstrb(m36_sc2axi_M_AXI_WSTRB),
        .s_axi_wuser(m36_sc2axi_M_AXI_WUSER),
        .s_axi_wvalid(m36_sc2axi_M_AXI_WVALID));
  m36_nodes_imp_NEEPXG m36_nodes
       (.M_SC_AR_info(m36_nodes_M_SC_AR_INFO),
        .M_SC_AR_payld(m36_nodes_M_SC_AR_PAYLD),
        .M_SC_AR_recv(m36_nodes_M_SC_AR_RECV),
        .M_SC_AR_req(m36_nodes_M_SC_AR_REQ),
        .M_SC_AR_send(m36_nodes_M_SC_AR_SEND),
        .M_SC_AW_info(m36_nodes_M_SC_AW_INFO),
        .M_SC_AW_payld(m36_nodes_M_SC_AW_PAYLD),
        .M_SC_AW_recv(m36_nodes_M_SC_AW_RECV),
        .M_SC_AW_req(m36_nodes_M_SC_AW_REQ),
        .M_SC_AW_send(m36_nodes_M_SC_AW_SEND),
        .M_SC_B_info(m36_nodes_M_SC_B_INFO),
        .M_SC_B_payld(m36_nodes_M_SC_B_PAYLD),
        .M_SC_B_recv(m36_nodes_M_SC_B_RECV),
        .M_SC_B_req(m36_nodes_M_SC_B_REQ),
        .M_SC_B_send(m36_nodes_M_SC_B_SEND),
        .M_SC_R_info(m36_nodes_M_SC_R_INFO),
        .M_SC_R_payld(m36_nodes_M_SC_R_PAYLD),
        .M_SC_R_recv(m36_nodes_M_SC_R_RECV),
        .M_SC_R_req(m36_nodes_M_SC_R_REQ),
        .M_SC_R_send(m36_nodes_M_SC_R_SEND),
        .M_SC_W_info(m36_nodes_M_SC_W_INFO),
        .M_SC_W_payld(m36_nodes_M_SC_W_PAYLD),
        .M_SC_W_recv(m36_nodes_M_SC_W_RECV),
        .M_SC_W_req(m36_nodes_M_SC_W_REQ),
        .M_SC_W_send(m36_nodes_M_SC_W_SEND),
        .S_SC_AR_info(S_SC_AR_38_INFO),
        .S_SC_AR_payld(S_SC_AR_38_PAYLD),
        .S_SC_AR_recv(S_SC_AR_38_RECV),
        .S_SC_AR_req(S_SC_AR_38_REQ),
        .S_SC_AR_send(S_SC_AR_38_SEND),
        .S_SC_AW_info(S_SC_AW_38_INFO),
        .S_SC_AW_payld(S_SC_AW_38_PAYLD),
        .S_SC_AW_recv(S_SC_AW_38_RECV),
        .S_SC_AW_req(S_SC_AW_38_REQ),
        .S_SC_AW_send(S_SC_AW_38_SEND),
        .S_SC_B_info(S_SC_B_38_INFO),
        .S_SC_B_payld(S_SC_B_38_PAYLD),
        .S_SC_B_recv(S_SC_B_38_RECV),
        .S_SC_B_req(S_SC_B_38_REQ),
        .S_SC_B_send(S_SC_B_38_SEND),
        .S_SC_R_info(S_SC_R_38_INFO),
        .S_SC_R_payld(S_SC_R_38_PAYLD),
        .S_SC_R_recv(S_SC_R_38_RECV),
        .S_SC_R_req(S_SC_R_38_REQ),
        .S_SC_R_send(S_SC_R_38_SEND),
        .S_SC_W_info(S_SC_W_38_INFO),
        .S_SC_W_payld(S_SC_W_38_PAYLD),
        .S_SC_W_recv(S_SC_W_38_RECV),
        .S_SC_W_req(S_SC_W_38_REQ),
        .S_SC_W_send(S_SC_W_38_SEND),
        .m_axi_aclk(clk_map_M36_ACLK),
        .m_axi_aresetn(m_axi_aresetn_36),
        .s_axi_aclk(clk_map_M00_ACLK),
        .s_axi_aresetn(clk_map_M00_ARESETN));
  bd_afc3_m36s2a_0 m36_sc2axi
       (.aclk(clk_map_M36_ACLK),
        .m_axi_araddr(m36_sc2axi_M_AXI_ARADDR),
        .m_axi_arcache(m36_sc2axi_M_AXI_ARCACHE),
        .m_axi_arid(m36_sc2axi_M_AXI_ARID),
        .m_axi_arlen(m36_sc2axi_M_AXI_ARLEN),
        .m_axi_arlock(m36_sc2axi_M_AXI_ARLOCK),
        .m_axi_arprot(m36_sc2axi_M_AXI_ARPROT),
        .m_axi_arqos(m36_sc2axi_M_AXI_ARQOS),
        .m_axi_arready(m36_sc2axi_M_AXI_ARREADY),
        .m_axi_aruser(m36_sc2axi_M_AXI_ARUSER),
        .m_axi_arvalid(m36_sc2axi_M_AXI_ARVALID),
        .m_axi_awaddr(m36_sc2axi_M_AXI_AWADDR),
        .m_axi_awcache(m36_sc2axi_M_AXI_AWCACHE),
        .m_axi_awid(m36_sc2axi_M_AXI_AWID),
        .m_axi_awlen(m36_sc2axi_M_AXI_AWLEN),
        .m_axi_awlock(m36_sc2axi_M_AXI_AWLOCK),
        .m_axi_awprot(m36_sc2axi_M_AXI_AWPROT),
        .m_axi_awqos(m36_sc2axi_M_AXI_AWQOS),
        .m_axi_awready(m36_sc2axi_M_AXI_AWREADY),
        .m_axi_awuser(m36_sc2axi_M_AXI_AWUSER),
        .m_axi_awvalid(m36_sc2axi_M_AXI_AWVALID),
        .m_axi_bid(m36_sc2axi_M_AXI_BID),
        .m_axi_bready(m36_sc2axi_M_AXI_BREADY),
        .m_axi_bresp(m36_sc2axi_M_AXI_BRESP),
        .m_axi_buser(m36_sc2axi_M_AXI_BUSER),
        .m_axi_bvalid(m36_sc2axi_M_AXI_BVALID),
        .m_axi_rdata(m36_sc2axi_M_AXI_RDATA),
        .m_axi_rid(m36_sc2axi_M_AXI_RID),
        .m_axi_rlast(m36_sc2axi_M_AXI_RLAST),
        .m_axi_rready(m36_sc2axi_M_AXI_RREADY),
        .m_axi_rresp(m36_sc2axi_M_AXI_RRESP),
        .m_axi_ruser(m36_sc2axi_M_AXI_RUSER),
        .m_axi_rvalid(m36_sc2axi_M_AXI_RVALID),
        .m_axi_wdata(m36_sc2axi_M_AXI_WDATA),
        .m_axi_wlast(m36_sc2axi_M_AXI_WLAST),
        .m_axi_wready(m36_sc2axi_M_AXI_WREADY),
        .m_axi_wstrb(m36_sc2axi_M_AXI_WSTRB),
        .m_axi_wuser(m36_sc2axi_M_AXI_WUSER),
        .m_axi_wvalid(m36_sc2axi_M_AXI_WVALID),
        .m_sc_b_info(S_SC_B_38_INFO),
        .m_sc_b_payld(S_SC_B_38_PAYLD),
        .m_sc_b_recv(S_SC_B_38_RECV),
        .m_sc_b_req(S_SC_B_38_REQ),
        .m_sc_b_send(S_SC_B_38_SEND),
        .m_sc_r_info(S_SC_R_38_INFO),
        .m_sc_r_payld(S_SC_R_38_PAYLD),
        .m_sc_r_recv(S_SC_R_38_RECV),
        .m_sc_r_req(S_SC_R_38_REQ),
        .m_sc_r_send(S_SC_R_38_SEND),
        .s_sc_ar_info(m36_nodes_M_SC_AR_INFO),
        .s_sc_ar_payld(m36_nodes_M_SC_AR_PAYLD[179:0]),
        .s_sc_ar_recv(m36_nodes_M_SC_AR_RECV),
        .s_sc_ar_req(m36_nodes_M_SC_AR_REQ),
        .s_sc_ar_send(m36_nodes_M_SC_AR_SEND),
        .s_sc_aw_info(m36_nodes_M_SC_AW_INFO),
        .s_sc_aw_payld(m36_nodes_M_SC_AW_PAYLD[179:0]),
        .s_sc_aw_recv(m36_nodes_M_SC_AW_RECV),
        .s_sc_aw_req(m36_nodes_M_SC_AW_REQ),
        .s_sc_aw_send(m36_nodes_M_SC_AW_SEND),
        .s_sc_w_info(m36_nodes_M_SC_W_INFO),
        .s_sc_w_payld(m36_nodes_M_SC_W_PAYLD[66:0]),
        .s_sc_w_recv(m36_nodes_M_SC_W_RECV),
        .s_sc_w_req(m36_nodes_M_SC_W_REQ),
        .s_sc_w_send(m36_nodes_M_SC_W_SEND));
  m37_exit_pipeline_imp_1YPVWII m37_exit_pipeline
       (.aclk(clk_map_M37_ACLK),
        .aresetn(m_axi_aresetn_37),
        .m_axi_araddr(m37_exit_pipeline_m_axi_ARADDR),
        .m_axi_arprot(m37_exit_pipeline_m_axi_ARPROT),
        .m_axi_arready(m37_exit_pipeline_m_axi_ARREADY),
        .m_axi_arvalid(m37_exit_pipeline_m_axi_ARVALID),
        .m_axi_awaddr(m37_exit_pipeline_m_axi_AWADDR),
        .m_axi_awprot(m37_exit_pipeline_m_axi_AWPROT),
        .m_axi_awready(m37_exit_pipeline_m_axi_AWREADY),
        .m_axi_awvalid(m37_exit_pipeline_m_axi_AWVALID),
        .m_axi_bready(m37_exit_pipeline_m_axi_BREADY),
        .m_axi_bresp(m37_exit_pipeline_m_axi_BRESP),
        .m_axi_bvalid(m37_exit_pipeline_m_axi_BVALID),
        .m_axi_rdata(m37_exit_pipeline_m_axi_RDATA),
        .m_axi_rready(m37_exit_pipeline_m_axi_RREADY),
        .m_axi_rresp(m37_exit_pipeline_m_axi_RRESP),
        .m_axi_rvalid(m37_exit_pipeline_m_axi_RVALID),
        .m_axi_wdata(m37_exit_pipeline_m_axi_WDATA),
        .m_axi_wready(m37_exit_pipeline_m_axi_WREADY),
        .m_axi_wstrb(m37_exit_pipeline_m_axi_WSTRB),
        .m_axi_wvalid(m37_exit_pipeline_m_axi_WVALID),
        .s_axi_araddr(m37_sc2axi_M_AXI_ARADDR),
        .s_axi_arcache(m37_sc2axi_M_AXI_ARCACHE),
        .s_axi_arid(m37_sc2axi_M_AXI_ARID),
        .s_axi_arlen(m37_sc2axi_M_AXI_ARLEN),
        .s_axi_arlock(m37_sc2axi_M_AXI_ARLOCK),
        .s_axi_arprot(m37_sc2axi_M_AXI_ARPROT),
        .s_axi_arqos(m37_sc2axi_M_AXI_ARQOS),
        .s_axi_arready(m37_sc2axi_M_AXI_ARREADY),
        .s_axi_aruser(m37_sc2axi_M_AXI_ARUSER),
        .s_axi_arvalid(m37_sc2axi_M_AXI_ARVALID),
        .s_axi_awaddr(m37_sc2axi_M_AXI_AWADDR),
        .s_axi_awcache(m37_sc2axi_M_AXI_AWCACHE),
        .s_axi_awid(m37_sc2axi_M_AXI_AWID),
        .s_axi_awlen(m37_sc2axi_M_AXI_AWLEN),
        .s_axi_awlock(m37_sc2axi_M_AXI_AWLOCK),
        .s_axi_awprot(m37_sc2axi_M_AXI_AWPROT),
        .s_axi_awqos(m37_sc2axi_M_AXI_AWQOS),
        .s_axi_awready(m37_sc2axi_M_AXI_AWREADY),
        .s_axi_awuser(m37_sc2axi_M_AXI_AWUSER),
        .s_axi_awvalid(m37_sc2axi_M_AXI_AWVALID),
        .s_axi_bid(m37_sc2axi_M_AXI_BID),
        .s_axi_bready(m37_sc2axi_M_AXI_BREADY),
        .s_axi_bresp(m37_sc2axi_M_AXI_BRESP),
        .s_axi_buser(m37_sc2axi_M_AXI_BUSER),
        .s_axi_bvalid(m37_sc2axi_M_AXI_BVALID),
        .s_axi_rdata(m37_sc2axi_M_AXI_RDATA),
        .s_axi_rid(m37_sc2axi_M_AXI_RID),
        .s_axi_rlast(m37_sc2axi_M_AXI_RLAST),
        .s_axi_rready(m37_sc2axi_M_AXI_RREADY),
        .s_axi_rresp(m37_sc2axi_M_AXI_RRESP),
        .s_axi_ruser(m37_sc2axi_M_AXI_RUSER),
        .s_axi_rvalid(m37_sc2axi_M_AXI_RVALID),
        .s_axi_wdata(m37_sc2axi_M_AXI_WDATA),
        .s_axi_wlast(m37_sc2axi_M_AXI_WLAST),
        .s_axi_wready(m37_sc2axi_M_AXI_WREADY),
        .s_axi_wstrb(m37_sc2axi_M_AXI_WSTRB),
        .s_axi_wuser(m37_sc2axi_M_AXI_WUSER),
        .s_axi_wvalid(m37_sc2axi_M_AXI_WVALID));
  m37_nodes_imp_1JV8NUA m37_nodes
       (.M_SC_AR_info(m37_nodes_M_SC_AR_INFO),
        .M_SC_AR_payld(m37_nodes_M_SC_AR_PAYLD),
        .M_SC_AR_recv(m37_nodes_M_SC_AR_RECV),
        .M_SC_AR_req(m37_nodes_M_SC_AR_REQ),
        .M_SC_AR_send(m37_nodes_M_SC_AR_SEND),
        .M_SC_AW_info(m37_nodes_M_SC_AW_INFO),
        .M_SC_AW_payld(m37_nodes_M_SC_AW_PAYLD),
        .M_SC_AW_recv(m37_nodes_M_SC_AW_RECV),
        .M_SC_AW_req(m37_nodes_M_SC_AW_REQ),
        .M_SC_AW_send(m37_nodes_M_SC_AW_SEND),
        .M_SC_B_info(m37_nodes_M_SC_B_INFO),
        .M_SC_B_payld(m37_nodes_M_SC_B_PAYLD),
        .M_SC_B_recv(m37_nodes_M_SC_B_RECV),
        .M_SC_B_req(m37_nodes_M_SC_B_REQ),
        .M_SC_B_send(m37_nodes_M_SC_B_SEND),
        .M_SC_R_info(m37_nodes_M_SC_R_INFO),
        .M_SC_R_payld(m37_nodes_M_SC_R_PAYLD),
        .M_SC_R_recv(m37_nodes_M_SC_R_RECV),
        .M_SC_R_req(m37_nodes_M_SC_R_REQ),
        .M_SC_R_send(m37_nodes_M_SC_R_SEND),
        .M_SC_W_info(m37_nodes_M_SC_W_INFO),
        .M_SC_W_payld(m37_nodes_M_SC_W_PAYLD),
        .M_SC_W_recv(m37_nodes_M_SC_W_RECV),
        .M_SC_W_req(m37_nodes_M_SC_W_REQ),
        .M_SC_W_send(m37_nodes_M_SC_W_SEND),
        .S_SC_AR_info(S_SC_AR_39_INFO),
        .S_SC_AR_payld(S_SC_AR_39_PAYLD),
        .S_SC_AR_recv(S_SC_AR_39_RECV),
        .S_SC_AR_req(S_SC_AR_39_REQ),
        .S_SC_AR_send(S_SC_AR_39_SEND),
        .S_SC_AW_info(S_SC_AW_39_INFO),
        .S_SC_AW_payld(S_SC_AW_39_PAYLD),
        .S_SC_AW_recv(S_SC_AW_39_RECV),
        .S_SC_AW_req(S_SC_AW_39_REQ),
        .S_SC_AW_send(S_SC_AW_39_SEND),
        .S_SC_B_info(S_SC_B_39_INFO),
        .S_SC_B_payld(S_SC_B_39_PAYLD),
        .S_SC_B_recv(S_SC_B_39_RECV),
        .S_SC_B_req(S_SC_B_39_REQ),
        .S_SC_B_send(S_SC_B_39_SEND),
        .S_SC_R_info(S_SC_R_39_INFO),
        .S_SC_R_payld(S_SC_R_39_PAYLD),
        .S_SC_R_recv(S_SC_R_39_RECV),
        .S_SC_R_req(S_SC_R_39_REQ),
        .S_SC_R_send(S_SC_R_39_SEND),
        .S_SC_W_info(S_SC_W_39_INFO),
        .S_SC_W_payld(S_SC_W_39_PAYLD),
        .S_SC_W_recv(S_SC_W_39_RECV),
        .S_SC_W_req(S_SC_W_39_REQ),
        .S_SC_W_send(S_SC_W_39_SEND),
        .m_axi_aclk(clk_map_M37_ACLK),
        .m_axi_aresetn(m_axi_aresetn_37),
        .s_axi_aclk(clk_map_M00_ACLK),
        .s_axi_aresetn(clk_map_M00_ARESETN));
  bd_afc3_m37s2a_0 m37_sc2axi
       (.aclk(clk_map_M37_ACLK),
        .m_axi_araddr(m37_sc2axi_M_AXI_ARADDR),
        .m_axi_arcache(m37_sc2axi_M_AXI_ARCACHE),
        .m_axi_arid(m37_sc2axi_M_AXI_ARID),
        .m_axi_arlen(m37_sc2axi_M_AXI_ARLEN),
        .m_axi_arlock(m37_sc2axi_M_AXI_ARLOCK),
        .m_axi_arprot(m37_sc2axi_M_AXI_ARPROT),
        .m_axi_arqos(m37_sc2axi_M_AXI_ARQOS),
        .m_axi_arready(m37_sc2axi_M_AXI_ARREADY),
        .m_axi_aruser(m37_sc2axi_M_AXI_ARUSER),
        .m_axi_arvalid(m37_sc2axi_M_AXI_ARVALID),
        .m_axi_awaddr(m37_sc2axi_M_AXI_AWADDR),
        .m_axi_awcache(m37_sc2axi_M_AXI_AWCACHE),
        .m_axi_awid(m37_sc2axi_M_AXI_AWID),
        .m_axi_awlen(m37_sc2axi_M_AXI_AWLEN),
        .m_axi_awlock(m37_sc2axi_M_AXI_AWLOCK),
        .m_axi_awprot(m37_sc2axi_M_AXI_AWPROT),
        .m_axi_awqos(m37_sc2axi_M_AXI_AWQOS),
        .m_axi_awready(m37_sc2axi_M_AXI_AWREADY),
        .m_axi_awuser(m37_sc2axi_M_AXI_AWUSER),
        .m_axi_awvalid(m37_sc2axi_M_AXI_AWVALID),
        .m_axi_bid(m37_sc2axi_M_AXI_BID),
        .m_axi_bready(m37_sc2axi_M_AXI_BREADY),
        .m_axi_bresp(m37_sc2axi_M_AXI_BRESP),
        .m_axi_buser(m37_sc2axi_M_AXI_BUSER),
        .m_axi_bvalid(m37_sc2axi_M_AXI_BVALID),
        .m_axi_rdata(m37_sc2axi_M_AXI_RDATA),
        .m_axi_rid(m37_sc2axi_M_AXI_RID),
        .m_axi_rlast(m37_sc2axi_M_AXI_RLAST),
        .m_axi_rready(m37_sc2axi_M_AXI_RREADY),
        .m_axi_rresp(m37_sc2axi_M_AXI_RRESP),
        .m_axi_ruser(m37_sc2axi_M_AXI_RUSER),
        .m_axi_rvalid(m37_sc2axi_M_AXI_RVALID),
        .m_axi_wdata(m37_sc2axi_M_AXI_WDATA),
        .m_axi_wlast(m37_sc2axi_M_AXI_WLAST),
        .m_axi_wready(m37_sc2axi_M_AXI_WREADY),
        .m_axi_wstrb(m37_sc2axi_M_AXI_WSTRB),
        .m_axi_wuser(m37_sc2axi_M_AXI_WUSER),
        .m_axi_wvalid(m37_sc2axi_M_AXI_WVALID),
        .m_sc_b_info(S_SC_B_39_INFO),
        .m_sc_b_payld(S_SC_B_39_PAYLD),
        .m_sc_b_recv(S_SC_B_39_RECV),
        .m_sc_b_req(S_SC_B_39_REQ),
        .m_sc_b_send(S_SC_B_39_SEND),
        .m_sc_r_info(S_SC_R_39_INFO),
        .m_sc_r_payld(S_SC_R_39_PAYLD),
        .m_sc_r_recv(S_SC_R_39_RECV),
        .m_sc_r_req(S_SC_R_39_REQ),
        .m_sc_r_send(S_SC_R_39_SEND),
        .s_sc_ar_info(m37_nodes_M_SC_AR_INFO),
        .s_sc_ar_payld(m37_nodes_M_SC_AR_PAYLD[179:0]),
        .s_sc_ar_recv(m37_nodes_M_SC_AR_RECV),
        .s_sc_ar_req(m37_nodes_M_SC_AR_REQ),
        .s_sc_ar_send(m37_nodes_M_SC_AR_SEND),
        .s_sc_aw_info(m37_nodes_M_SC_AW_INFO),
        .s_sc_aw_payld(m37_nodes_M_SC_AW_PAYLD[179:0]),
        .s_sc_aw_recv(m37_nodes_M_SC_AW_RECV),
        .s_sc_aw_req(m37_nodes_M_SC_AW_REQ),
        .s_sc_aw_send(m37_nodes_M_SC_AW_SEND),
        .s_sc_w_info(m37_nodes_M_SC_W_INFO),
        .s_sc_w_payld(m37_nodes_M_SC_W_PAYLD[66:0]),
        .s_sc_w_recv(m37_nodes_M_SC_W_RECV),
        .s_sc_w_req(m37_nodes_M_SC_W_REQ),
        .s_sc_w_send(m37_nodes_M_SC_W_SEND));
  m38_exit_pipeline_imp_9KE32Y m38_exit_pipeline
       (.aclk(clk_map_M38_ACLK),
        .aresetn(m_axi_aresetn_38),
        .m_axi_araddr(m38_exit_pipeline_m_axi_ARADDR),
        .m_axi_arprot(m38_exit_pipeline_m_axi_ARPROT),
        .m_axi_arready(m38_exit_pipeline_m_axi_ARREADY),
        .m_axi_arvalid(m38_exit_pipeline_m_axi_ARVALID),
        .m_axi_awaddr(m38_exit_pipeline_m_axi_AWADDR),
        .m_axi_awprot(m38_exit_pipeline_m_axi_AWPROT),
        .m_axi_awready(m38_exit_pipeline_m_axi_AWREADY),
        .m_axi_awvalid(m38_exit_pipeline_m_axi_AWVALID),
        .m_axi_bready(m38_exit_pipeline_m_axi_BREADY),
        .m_axi_bresp(m38_exit_pipeline_m_axi_BRESP),
        .m_axi_bvalid(m38_exit_pipeline_m_axi_BVALID),
        .m_axi_rdata(m38_exit_pipeline_m_axi_RDATA),
        .m_axi_rready(m38_exit_pipeline_m_axi_RREADY),
        .m_axi_rresp(m38_exit_pipeline_m_axi_RRESP),
        .m_axi_rvalid(m38_exit_pipeline_m_axi_RVALID),
        .m_axi_wdata(m38_exit_pipeline_m_axi_WDATA),
        .m_axi_wready(m38_exit_pipeline_m_axi_WREADY),
        .m_axi_wstrb(m38_exit_pipeline_m_axi_WSTRB),
        .m_axi_wvalid(m38_exit_pipeline_m_axi_WVALID),
        .s_axi_araddr(m38_sc2axi_M_AXI_ARADDR),
        .s_axi_arcache(m38_sc2axi_M_AXI_ARCACHE),
        .s_axi_arid(m38_sc2axi_M_AXI_ARID),
        .s_axi_arlen(m38_sc2axi_M_AXI_ARLEN),
        .s_axi_arlock(m38_sc2axi_M_AXI_ARLOCK),
        .s_axi_arprot(m38_sc2axi_M_AXI_ARPROT),
        .s_axi_arqos(m38_sc2axi_M_AXI_ARQOS),
        .s_axi_arready(m38_sc2axi_M_AXI_ARREADY),
        .s_axi_aruser(m38_sc2axi_M_AXI_ARUSER),
        .s_axi_arvalid(m38_sc2axi_M_AXI_ARVALID),
        .s_axi_awaddr(m38_sc2axi_M_AXI_AWADDR),
        .s_axi_awcache(m38_sc2axi_M_AXI_AWCACHE),
        .s_axi_awid(m38_sc2axi_M_AXI_AWID),
        .s_axi_awlen(m38_sc2axi_M_AXI_AWLEN),
        .s_axi_awlock(m38_sc2axi_M_AXI_AWLOCK),
        .s_axi_awprot(m38_sc2axi_M_AXI_AWPROT),
        .s_axi_awqos(m38_sc2axi_M_AXI_AWQOS),
        .s_axi_awready(m38_sc2axi_M_AXI_AWREADY),
        .s_axi_awuser(m38_sc2axi_M_AXI_AWUSER),
        .s_axi_awvalid(m38_sc2axi_M_AXI_AWVALID),
        .s_axi_bid(m38_sc2axi_M_AXI_BID),
        .s_axi_bready(m38_sc2axi_M_AXI_BREADY),
        .s_axi_bresp(m38_sc2axi_M_AXI_BRESP),
        .s_axi_buser(m38_sc2axi_M_AXI_BUSER),
        .s_axi_bvalid(m38_sc2axi_M_AXI_BVALID),
        .s_axi_rdata(m38_sc2axi_M_AXI_RDATA),
        .s_axi_rid(m38_sc2axi_M_AXI_RID),
        .s_axi_rlast(m38_sc2axi_M_AXI_RLAST),
        .s_axi_rready(m38_sc2axi_M_AXI_RREADY),
        .s_axi_rresp(m38_sc2axi_M_AXI_RRESP),
        .s_axi_ruser(m38_sc2axi_M_AXI_RUSER),
        .s_axi_rvalid(m38_sc2axi_M_AXI_RVALID),
        .s_axi_wdata(m38_sc2axi_M_AXI_WDATA),
        .s_axi_wlast(m38_sc2axi_M_AXI_WLAST),
        .s_axi_wready(m38_sc2axi_M_AXI_WREADY),
        .s_axi_wstrb(m38_sc2axi_M_AXI_WSTRB),
        .s_axi_wuser(m38_sc2axi_M_AXI_WUSER),
        .s_axi_wvalid(m38_sc2axi_M_AXI_WVALID));
  m38_nodes_imp_18C7UBO m38_nodes
       (.M_SC_AR_info(m38_nodes_M_SC_AR_INFO),
        .M_SC_AR_payld(m38_nodes_M_SC_AR_PAYLD),
        .M_SC_AR_recv(m38_nodes_M_SC_AR_RECV),
        .M_SC_AR_req(m38_nodes_M_SC_AR_REQ),
        .M_SC_AR_send(m38_nodes_M_SC_AR_SEND),
        .M_SC_AW_info(m38_nodes_M_SC_AW_INFO),
        .M_SC_AW_payld(m38_nodes_M_SC_AW_PAYLD),
        .M_SC_AW_recv(m38_nodes_M_SC_AW_RECV),
        .M_SC_AW_req(m38_nodes_M_SC_AW_REQ),
        .M_SC_AW_send(m38_nodes_M_SC_AW_SEND),
        .M_SC_B_info(m38_nodes_M_SC_B_INFO),
        .M_SC_B_payld(m38_nodes_M_SC_B_PAYLD),
        .M_SC_B_recv(m38_nodes_M_SC_B_RECV),
        .M_SC_B_req(m38_nodes_M_SC_B_REQ),
        .M_SC_B_send(m38_nodes_M_SC_B_SEND),
        .M_SC_R_info(m38_nodes_M_SC_R_INFO),
        .M_SC_R_payld(m38_nodes_M_SC_R_PAYLD),
        .M_SC_R_recv(m38_nodes_M_SC_R_RECV),
        .M_SC_R_req(m38_nodes_M_SC_R_REQ),
        .M_SC_R_send(m38_nodes_M_SC_R_SEND),
        .M_SC_W_info(m38_nodes_M_SC_W_INFO),
        .M_SC_W_payld(m38_nodes_M_SC_W_PAYLD),
        .M_SC_W_recv(m38_nodes_M_SC_W_RECV),
        .M_SC_W_req(m38_nodes_M_SC_W_REQ),
        .M_SC_W_send(m38_nodes_M_SC_W_SEND),
        .S_SC_AR_info(S_SC_AR_40_INFO),
        .S_SC_AR_payld(S_SC_AR_40_PAYLD),
        .S_SC_AR_recv(S_SC_AR_40_RECV),
        .S_SC_AR_req(S_SC_AR_40_REQ),
        .S_SC_AR_send(S_SC_AR_40_SEND),
        .S_SC_AW_info(S_SC_AW_40_INFO),
        .S_SC_AW_payld(S_SC_AW_40_PAYLD),
        .S_SC_AW_recv(S_SC_AW_40_RECV),
        .S_SC_AW_req(S_SC_AW_40_REQ),
        .S_SC_AW_send(S_SC_AW_40_SEND),
        .S_SC_B_info(S_SC_B_40_INFO),
        .S_SC_B_payld(S_SC_B_40_PAYLD),
        .S_SC_B_recv(S_SC_B_40_RECV),
        .S_SC_B_req(S_SC_B_40_REQ),
        .S_SC_B_send(S_SC_B_40_SEND),
        .S_SC_R_info(S_SC_R_40_INFO),
        .S_SC_R_payld(S_SC_R_40_PAYLD),
        .S_SC_R_recv(S_SC_R_40_RECV),
        .S_SC_R_req(S_SC_R_40_REQ),
        .S_SC_R_send(S_SC_R_40_SEND),
        .S_SC_W_info(S_SC_W_40_INFO),
        .S_SC_W_payld(S_SC_W_40_PAYLD),
        .S_SC_W_recv(S_SC_W_40_RECV),
        .S_SC_W_req(S_SC_W_40_REQ),
        .S_SC_W_send(S_SC_W_40_SEND),
        .m_axi_aclk(clk_map_M38_ACLK),
        .m_axi_aresetn(m_axi_aresetn_38),
        .s_axi_aclk(clk_map_M00_ACLK),
        .s_axi_aresetn(clk_map_M00_ARESETN));
  bd_afc3_m38s2a_0 m38_sc2axi
       (.aclk(clk_map_M38_ACLK),
        .m_axi_araddr(m38_sc2axi_M_AXI_ARADDR),
        .m_axi_arcache(m38_sc2axi_M_AXI_ARCACHE),
        .m_axi_arid(m38_sc2axi_M_AXI_ARID),
        .m_axi_arlen(m38_sc2axi_M_AXI_ARLEN),
        .m_axi_arlock(m38_sc2axi_M_AXI_ARLOCK),
        .m_axi_arprot(m38_sc2axi_M_AXI_ARPROT),
        .m_axi_arqos(m38_sc2axi_M_AXI_ARQOS),
        .m_axi_arready(m38_sc2axi_M_AXI_ARREADY),
        .m_axi_aruser(m38_sc2axi_M_AXI_ARUSER),
        .m_axi_arvalid(m38_sc2axi_M_AXI_ARVALID),
        .m_axi_awaddr(m38_sc2axi_M_AXI_AWADDR),
        .m_axi_awcache(m38_sc2axi_M_AXI_AWCACHE),
        .m_axi_awid(m38_sc2axi_M_AXI_AWID),
        .m_axi_awlen(m38_sc2axi_M_AXI_AWLEN),
        .m_axi_awlock(m38_sc2axi_M_AXI_AWLOCK),
        .m_axi_awprot(m38_sc2axi_M_AXI_AWPROT),
        .m_axi_awqos(m38_sc2axi_M_AXI_AWQOS),
        .m_axi_awready(m38_sc2axi_M_AXI_AWREADY),
        .m_axi_awuser(m38_sc2axi_M_AXI_AWUSER),
        .m_axi_awvalid(m38_sc2axi_M_AXI_AWVALID),
        .m_axi_bid(m38_sc2axi_M_AXI_BID),
        .m_axi_bready(m38_sc2axi_M_AXI_BREADY),
        .m_axi_bresp(m38_sc2axi_M_AXI_BRESP),
        .m_axi_buser(m38_sc2axi_M_AXI_BUSER),
        .m_axi_bvalid(m38_sc2axi_M_AXI_BVALID),
        .m_axi_rdata(m38_sc2axi_M_AXI_RDATA),
        .m_axi_rid(m38_sc2axi_M_AXI_RID),
        .m_axi_rlast(m38_sc2axi_M_AXI_RLAST),
        .m_axi_rready(m38_sc2axi_M_AXI_RREADY),
        .m_axi_rresp(m38_sc2axi_M_AXI_RRESP),
        .m_axi_ruser(m38_sc2axi_M_AXI_RUSER),
        .m_axi_rvalid(m38_sc2axi_M_AXI_RVALID),
        .m_axi_wdata(m38_sc2axi_M_AXI_WDATA),
        .m_axi_wlast(m38_sc2axi_M_AXI_WLAST),
        .m_axi_wready(m38_sc2axi_M_AXI_WREADY),
        .m_axi_wstrb(m38_sc2axi_M_AXI_WSTRB),
        .m_axi_wuser(m38_sc2axi_M_AXI_WUSER),
        .m_axi_wvalid(m38_sc2axi_M_AXI_WVALID),
        .m_sc_b_info(S_SC_B_40_INFO),
        .m_sc_b_payld(S_SC_B_40_PAYLD),
        .m_sc_b_recv(S_SC_B_40_RECV),
        .m_sc_b_req(S_SC_B_40_REQ),
        .m_sc_b_send(S_SC_B_40_SEND),
        .m_sc_r_info(S_SC_R_40_INFO),
        .m_sc_r_payld(S_SC_R_40_PAYLD),
        .m_sc_r_recv(S_SC_R_40_RECV),
        .m_sc_r_req(S_SC_R_40_REQ),
        .m_sc_r_send(S_SC_R_40_SEND),
        .s_sc_ar_info(m38_nodes_M_SC_AR_INFO),
        .s_sc_ar_payld(m38_nodes_M_SC_AR_PAYLD[179:0]),
        .s_sc_ar_recv(m38_nodes_M_SC_AR_RECV),
        .s_sc_ar_req(m38_nodes_M_SC_AR_REQ),
        .s_sc_ar_send(m38_nodes_M_SC_AR_SEND),
        .s_sc_aw_info(m38_nodes_M_SC_AW_INFO),
        .s_sc_aw_payld(m38_nodes_M_SC_AW_PAYLD[179:0]),
        .s_sc_aw_recv(m38_nodes_M_SC_AW_RECV),
        .s_sc_aw_req(m38_nodes_M_SC_AW_REQ),
        .s_sc_aw_send(m38_nodes_M_SC_AW_SEND),
        .s_sc_w_info(m38_nodes_M_SC_W_INFO),
        .s_sc_w_payld(m38_nodes_M_SC_W_PAYLD[66:0]),
        .s_sc_w_recv(m38_nodes_M_SC_W_RECV),
        .s_sc_w_req(m38_nodes_M_SC_W_REQ),
        .s_sc_w_send(m38_nodes_M_SC_W_SEND));
  m39_exit_pipeline_imp_ESLZOA m39_exit_pipeline
       (.aclk(clk_map_M39_ACLK),
        .aresetn(m_axi_aresetn_39),
        .m_axi_araddr(m39_exit_pipeline_m_axi_ARADDR),
        .m_axi_arprot(m39_exit_pipeline_m_axi_ARPROT),
        .m_axi_arready(m39_exit_pipeline_m_axi_ARREADY),
        .m_axi_arvalid(m39_exit_pipeline_m_axi_ARVALID),
        .m_axi_awaddr(m39_exit_pipeline_m_axi_AWADDR),
        .m_axi_awprot(m39_exit_pipeline_m_axi_AWPROT),
        .m_axi_awready(m39_exit_pipeline_m_axi_AWREADY),
        .m_axi_awvalid(m39_exit_pipeline_m_axi_AWVALID),
        .m_axi_bready(m39_exit_pipeline_m_axi_BREADY),
        .m_axi_bresp(m39_exit_pipeline_m_axi_BRESP),
        .m_axi_bvalid(m39_exit_pipeline_m_axi_BVALID),
        .m_axi_rdata(m39_exit_pipeline_m_axi_RDATA),
        .m_axi_rready(m39_exit_pipeline_m_axi_RREADY),
        .m_axi_rresp(m39_exit_pipeline_m_axi_RRESP),
        .m_axi_rvalid(m39_exit_pipeline_m_axi_RVALID),
        .m_axi_wdata(m39_exit_pipeline_m_axi_WDATA),
        .m_axi_wready(m39_exit_pipeline_m_axi_WREADY),
        .m_axi_wstrb(m39_exit_pipeline_m_axi_WSTRB),
        .m_axi_wvalid(m39_exit_pipeline_m_axi_WVALID),
        .s_axi_araddr(m39_sc2axi_M_AXI_ARADDR),
        .s_axi_arcache(m39_sc2axi_M_AXI_ARCACHE),
        .s_axi_arid(m39_sc2axi_M_AXI_ARID),
        .s_axi_arlen(m39_sc2axi_M_AXI_ARLEN),
        .s_axi_arlock(m39_sc2axi_M_AXI_ARLOCK),
        .s_axi_arprot(m39_sc2axi_M_AXI_ARPROT),
        .s_axi_arqos(m39_sc2axi_M_AXI_ARQOS),
        .s_axi_arready(m39_sc2axi_M_AXI_ARREADY),
        .s_axi_aruser(m39_sc2axi_M_AXI_ARUSER),
        .s_axi_arvalid(m39_sc2axi_M_AXI_ARVALID),
        .s_axi_awaddr(m39_sc2axi_M_AXI_AWADDR),
        .s_axi_awcache(m39_sc2axi_M_AXI_AWCACHE),
        .s_axi_awid(m39_sc2axi_M_AXI_AWID),
        .s_axi_awlen(m39_sc2axi_M_AXI_AWLEN),
        .s_axi_awlock(m39_sc2axi_M_AXI_AWLOCK),
        .s_axi_awprot(m39_sc2axi_M_AXI_AWPROT),
        .s_axi_awqos(m39_sc2axi_M_AXI_AWQOS),
        .s_axi_awready(m39_sc2axi_M_AXI_AWREADY),
        .s_axi_awuser(m39_sc2axi_M_AXI_AWUSER),
        .s_axi_awvalid(m39_sc2axi_M_AXI_AWVALID),
        .s_axi_bid(m39_sc2axi_M_AXI_BID),
        .s_axi_bready(m39_sc2axi_M_AXI_BREADY),
        .s_axi_bresp(m39_sc2axi_M_AXI_BRESP),
        .s_axi_buser(m39_sc2axi_M_AXI_BUSER),
        .s_axi_bvalid(m39_sc2axi_M_AXI_BVALID),
        .s_axi_rdata(m39_sc2axi_M_AXI_RDATA),
        .s_axi_rid(m39_sc2axi_M_AXI_RID),
        .s_axi_rlast(m39_sc2axi_M_AXI_RLAST),
        .s_axi_rready(m39_sc2axi_M_AXI_RREADY),
        .s_axi_rresp(m39_sc2axi_M_AXI_RRESP),
        .s_axi_ruser(m39_sc2axi_M_AXI_RUSER),
        .s_axi_rvalid(m39_sc2axi_M_AXI_RVALID),
        .s_axi_wdata(m39_sc2axi_M_AXI_WDATA),
        .s_axi_wlast(m39_sc2axi_M_AXI_WLAST),
        .s_axi_wready(m39_sc2axi_M_AXI_WREADY),
        .s_axi_wstrb(m39_sc2axi_M_AXI_WSTRB),
        .s_axi_wuser(m39_sc2axi_M_AXI_WUSER),
        .s_axi_wvalid(m39_sc2axi_M_AXI_WVALID));
  m39_nodes_imp_RKNQQ m39_nodes
       (.M_SC_AR_info(m39_nodes_M_SC_AR_INFO),
        .M_SC_AR_payld(m39_nodes_M_SC_AR_PAYLD),
        .M_SC_AR_recv(m39_nodes_M_SC_AR_RECV),
        .M_SC_AR_req(m39_nodes_M_SC_AR_REQ),
        .M_SC_AR_send(m39_nodes_M_SC_AR_SEND),
        .M_SC_AW_info(m39_nodes_M_SC_AW_INFO),
        .M_SC_AW_payld(m39_nodes_M_SC_AW_PAYLD),
        .M_SC_AW_recv(m39_nodes_M_SC_AW_RECV),
        .M_SC_AW_req(m39_nodes_M_SC_AW_REQ),
        .M_SC_AW_send(m39_nodes_M_SC_AW_SEND),
        .M_SC_B_info(m39_nodes_M_SC_B_INFO),
        .M_SC_B_payld(m39_nodes_M_SC_B_PAYLD),
        .M_SC_B_recv(m39_nodes_M_SC_B_RECV),
        .M_SC_B_req(m39_nodes_M_SC_B_REQ),
        .M_SC_B_send(m39_nodes_M_SC_B_SEND),
        .M_SC_R_info(m39_nodes_M_SC_R_INFO),
        .M_SC_R_payld(m39_nodes_M_SC_R_PAYLD),
        .M_SC_R_recv(m39_nodes_M_SC_R_RECV),
        .M_SC_R_req(m39_nodes_M_SC_R_REQ),
        .M_SC_R_send(m39_nodes_M_SC_R_SEND),
        .M_SC_W_info(m39_nodes_M_SC_W_INFO),
        .M_SC_W_payld(m39_nodes_M_SC_W_PAYLD),
        .M_SC_W_recv(m39_nodes_M_SC_W_RECV),
        .M_SC_W_req(m39_nodes_M_SC_W_REQ),
        .M_SC_W_send(m39_nodes_M_SC_W_SEND),
        .S_SC_AR_info(S_SC_AR_41_INFO),
        .S_SC_AR_payld(S_SC_AR_41_PAYLD),
        .S_SC_AR_recv(S_SC_AR_41_RECV),
        .S_SC_AR_req(S_SC_AR_41_REQ),
        .S_SC_AR_send(S_SC_AR_41_SEND),
        .S_SC_AW_info(S_SC_AW_41_INFO),
        .S_SC_AW_payld(S_SC_AW_41_PAYLD),
        .S_SC_AW_recv(S_SC_AW_41_RECV),
        .S_SC_AW_req(S_SC_AW_41_REQ),
        .S_SC_AW_send(S_SC_AW_41_SEND),
        .S_SC_B_info(S_SC_B_41_INFO),
        .S_SC_B_payld(S_SC_B_41_PAYLD),
        .S_SC_B_recv(S_SC_B_41_RECV),
        .S_SC_B_req(S_SC_B_41_REQ),
        .S_SC_B_send(S_SC_B_41_SEND),
        .S_SC_R_info(S_SC_R_41_INFO),
        .S_SC_R_payld(S_SC_R_41_PAYLD),
        .S_SC_R_recv(S_SC_R_41_RECV),
        .S_SC_R_req(S_SC_R_41_REQ),
        .S_SC_R_send(S_SC_R_41_SEND),
        .S_SC_W_info(S_SC_W_41_INFO),
        .S_SC_W_payld(S_SC_W_41_PAYLD),
        .S_SC_W_recv(S_SC_W_41_RECV),
        .S_SC_W_req(S_SC_W_41_REQ),
        .S_SC_W_send(S_SC_W_41_SEND),
        .m_axi_aclk(clk_map_M39_ACLK),
        .m_axi_aresetn(m_axi_aresetn_39),
        .s_axi_aclk(clk_map_M00_ACLK),
        .s_axi_aresetn(clk_map_M00_ARESETN));
  bd_afc3_m39s2a_0 m39_sc2axi
       (.aclk(clk_map_M39_ACLK),
        .m_axi_araddr(m39_sc2axi_M_AXI_ARADDR),
        .m_axi_arcache(m39_sc2axi_M_AXI_ARCACHE),
        .m_axi_arid(m39_sc2axi_M_AXI_ARID),
        .m_axi_arlen(m39_sc2axi_M_AXI_ARLEN),
        .m_axi_arlock(m39_sc2axi_M_AXI_ARLOCK),
        .m_axi_arprot(m39_sc2axi_M_AXI_ARPROT),
        .m_axi_arqos(m39_sc2axi_M_AXI_ARQOS),
        .m_axi_arready(m39_sc2axi_M_AXI_ARREADY),
        .m_axi_aruser(m39_sc2axi_M_AXI_ARUSER),
        .m_axi_arvalid(m39_sc2axi_M_AXI_ARVALID),
        .m_axi_awaddr(m39_sc2axi_M_AXI_AWADDR),
        .m_axi_awcache(m39_sc2axi_M_AXI_AWCACHE),
        .m_axi_awid(m39_sc2axi_M_AXI_AWID),
        .m_axi_awlen(m39_sc2axi_M_AXI_AWLEN),
        .m_axi_awlock(m39_sc2axi_M_AXI_AWLOCK),
        .m_axi_awprot(m39_sc2axi_M_AXI_AWPROT),
        .m_axi_awqos(m39_sc2axi_M_AXI_AWQOS),
        .m_axi_awready(m39_sc2axi_M_AXI_AWREADY),
        .m_axi_awuser(m39_sc2axi_M_AXI_AWUSER),
        .m_axi_awvalid(m39_sc2axi_M_AXI_AWVALID),
        .m_axi_bid(m39_sc2axi_M_AXI_BID),
        .m_axi_bready(m39_sc2axi_M_AXI_BREADY),
        .m_axi_bresp(m39_sc2axi_M_AXI_BRESP),
        .m_axi_buser(m39_sc2axi_M_AXI_BUSER),
        .m_axi_bvalid(m39_sc2axi_M_AXI_BVALID),
        .m_axi_rdata(m39_sc2axi_M_AXI_RDATA),
        .m_axi_rid(m39_sc2axi_M_AXI_RID),
        .m_axi_rlast(m39_sc2axi_M_AXI_RLAST),
        .m_axi_rready(m39_sc2axi_M_AXI_RREADY),
        .m_axi_rresp(m39_sc2axi_M_AXI_RRESP),
        .m_axi_ruser(m39_sc2axi_M_AXI_RUSER),
        .m_axi_rvalid(m39_sc2axi_M_AXI_RVALID),
        .m_axi_wdata(m39_sc2axi_M_AXI_WDATA),
        .m_axi_wlast(m39_sc2axi_M_AXI_WLAST),
        .m_axi_wready(m39_sc2axi_M_AXI_WREADY),
        .m_axi_wstrb(m39_sc2axi_M_AXI_WSTRB),
        .m_axi_wuser(m39_sc2axi_M_AXI_WUSER),
        .m_axi_wvalid(m39_sc2axi_M_AXI_WVALID),
        .m_sc_b_info(S_SC_B_41_INFO),
        .m_sc_b_payld(S_SC_B_41_PAYLD),
        .m_sc_b_recv(S_SC_B_41_RECV),
        .m_sc_b_req(S_SC_B_41_REQ),
        .m_sc_b_send(S_SC_B_41_SEND),
        .m_sc_r_info(S_SC_R_41_INFO),
        .m_sc_r_payld(S_SC_R_41_PAYLD),
        .m_sc_r_recv(S_SC_R_41_RECV),
        .m_sc_r_req(S_SC_R_41_REQ),
        .m_sc_r_send(S_SC_R_41_SEND),
        .s_sc_ar_info(m39_nodes_M_SC_AR_INFO),
        .s_sc_ar_payld(m39_nodes_M_SC_AR_PAYLD[179:0]),
        .s_sc_ar_recv(m39_nodes_M_SC_AR_RECV),
        .s_sc_ar_req(m39_nodes_M_SC_AR_REQ),
        .s_sc_ar_send(m39_nodes_M_SC_AR_SEND),
        .s_sc_aw_info(m39_nodes_M_SC_AW_INFO),
        .s_sc_aw_payld(m39_nodes_M_SC_AW_PAYLD[179:0]),
        .s_sc_aw_recv(m39_nodes_M_SC_AW_RECV),
        .s_sc_aw_req(m39_nodes_M_SC_AW_REQ),
        .s_sc_aw_send(m39_nodes_M_SC_AW_SEND),
        .s_sc_w_info(m39_nodes_M_SC_W_INFO),
        .s_sc_w_payld(m39_nodes_M_SC_W_PAYLD[66:0]),
        .s_sc_w_recv(m39_nodes_M_SC_W_RECV),
        .s_sc_w_req(m39_nodes_M_SC_W_REQ),
        .s_sc_w_send(m39_nodes_M_SC_W_SEND));
  m40_exit_pipeline_imp_1TWCSZ8 m40_exit_pipeline
       (.aclk(clk_map_M40_ACLK),
        .aresetn(m_axi_aresetn_40),
        .m_axi_araddr(m40_exit_pipeline_m_axi_ARADDR),
        .m_axi_arprot(m40_exit_pipeline_m_axi_ARPROT),
        .m_axi_arready(m40_exit_pipeline_m_axi_ARREADY),
        .m_axi_arvalid(m40_exit_pipeline_m_axi_ARVALID),
        .m_axi_awaddr(m40_exit_pipeline_m_axi_AWADDR),
        .m_axi_awprot(m40_exit_pipeline_m_axi_AWPROT),
        .m_axi_awready(m40_exit_pipeline_m_axi_AWREADY),
        .m_axi_awvalid(m40_exit_pipeline_m_axi_AWVALID),
        .m_axi_bready(m40_exit_pipeline_m_axi_BREADY),
        .m_axi_bresp(m40_exit_pipeline_m_axi_BRESP),
        .m_axi_bvalid(m40_exit_pipeline_m_axi_BVALID),
        .m_axi_rdata(m40_exit_pipeline_m_axi_RDATA),
        .m_axi_rready(m40_exit_pipeline_m_axi_RREADY),
        .m_axi_rresp(m40_exit_pipeline_m_axi_RRESP),
        .m_axi_rvalid(m40_exit_pipeline_m_axi_RVALID),
        .m_axi_wdata(m40_exit_pipeline_m_axi_WDATA),
        .m_axi_wready(m40_exit_pipeline_m_axi_WREADY),
        .m_axi_wstrb(m40_exit_pipeline_m_axi_WSTRB),
        .m_axi_wvalid(m40_exit_pipeline_m_axi_WVALID),
        .s_axi_araddr(m40_sc2axi_M_AXI_ARADDR),
        .s_axi_arcache(m40_sc2axi_M_AXI_ARCACHE),
        .s_axi_arid(m40_sc2axi_M_AXI_ARID),
        .s_axi_arlen(m40_sc2axi_M_AXI_ARLEN),
        .s_axi_arlock(m40_sc2axi_M_AXI_ARLOCK),
        .s_axi_arprot(m40_sc2axi_M_AXI_ARPROT),
        .s_axi_arqos(m40_sc2axi_M_AXI_ARQOS),
        .s_axi_arready(m40_sc2axi_M_AXI_ARREADY),
        .s_axi_aruser(m40_sc2axi_M_AXI_ARUSER),
        .s_axi_arvalid(m40_sc2axi_M_AXI_ARVALID),
        .s_axi_awaddr(m40_sc2axi_M_AXI_AWADDR),
        .s_axi_awcache(m40_sc2axi_M_AXI_AWCACHE),
        .s_axi_awid(m40_sc2axi_M_AXI_AWID),
        .s_axi_awlen(m40_sc2axi_M_AXI_AWLEN),
        .s_axi_awlock(m40_sc2axi_M_AXI_AWLOCK),
        .s_axi_awprot(m40_sc2axi_M_AXI_AWPROT),
        .s_axi_awqos(m40_sc2axi_M_AXI_AWQOS),
        .s_axi_awready(m40_sc2axi_M_AXI_AWREADY),
        .s_axi_awuser(m40_sc2axi_M_AXI_AWUSER),
        .s_axi_awvalid(m40_sc2axi_M_AXI_AWVALID),
        .s_axi_bid(m40_sc2axi_M_AXI_BID),
        .s_axi_bready(m40_sc2axi_M_AXI_BREADY),
        .s_axi_bresp(m40_sc2axi_M_AXI_BRESP),
        .s_axi_buser(m40_sc2axi_M_AXI_BUSER),
        .s_axi_bvalid(m40_sc2axi_M_AXI_BVALID),
        .s_axi_rdata(m40_sc2axi_M_AXI_RDATA),
        .s_axi_rid(m40_sc2axi_M_AXI_RID),
        .s_axi_rlast(m40_sc2axi_M_AXI_RLAST),
        .s_axi_rready(m40_sc2axi_M_AXI_RREADY),
        .s_axi_rresp(m40_sc2axi_M_AXI_RRESP),
        .s_axi_ruser(m40_sc2axi_M_AXI_RUSER),
        .s_axi_rvalid(m40_sc2axi_M_AXI_RVALID),
        .s_axi_wdata(m40_sc2axi_M_AXI_WDATA),
        .s_axi_wlast(m40_sc2axi_M_AXI_WLAST),
        .s_axi_wready(m40_sc2axi_M_AXI_WREADY),
        .s_axi_wstrb(m40_sc2axi_M_AXI_WSTRB),
        .s_axi_wuser(m40_sc2axi_M_AXI_WUSER),
        .s_axi_wvalid(m40_sc2axi_M_AXI_WVALID));
  m40_nodes_imp_FF7BE0 m40_nodes
       (.M_SC_AR_info(m40_nodes_M_SC_AR_INFO),
        .M_SC_AR_payld(m40_nodes_M_SC_AR_PAYLD),
        .M_SC_AR_recv(m40_nodes_M_SC_AR_RECV),
        .M_SC_AR_req(m40_nodes_M_SC_AR_REQ),
        .M_SC_AR_send(m40_nodes_M_SC_AR_SEND),
        .M_SC_AW_info(m40_nodes_M_SC_AW_INFO),
        .M_SC_AW_payld(m40_nodes_M_SC_AW_PAYLD),
        .M_SC_AW_recv(m40_nodes_M_SC_AW_RECV),
        .M_SC_AW_req(m40_nodes_M_SC_AW_REQ),
        .M_SC_AW_send(m40_nodes_M_SC_AW_SEND),
        .M_SC_B_info(m40_nodes_M_SC_B_INFO),
        .M_SC_B_payld(m40_nodes_M_SC_B_PAYLD),
        .M_SC_B_recv(m40_nodes_M_SC_B_RECV),
        .M_SC_B_req(m40_nodes_M_SC_B_REQ),
        .M_SC_B_send(m40_nodes_M_SC_B_SEND),
        .M_SC_R_info(m40_nodes_M_SC_R_INFO),
        .M_SC_R_payld(m40_nodes_M_SC_R_PAYLD),
        .M_SC_R_recv(m40_nodes_M_SC_R_RECV),
        .M_SC_R_req(m40_nodes_M_SC_R_REQ),
        .M_SC_R_send(m40_nodes_M_SC_R_SEND),
        .M_SC_W_info(m40_nodes_M_SC_W_INFO),
        .M_SC_W_payld(m40_nodes_M_SC_W_PAYLD),
        .M_SC_W_recv(m40_nodes_M_SC_W_RECV),
        .M_SC_W_req(m40_nodes_M_SC_W_REQ),
        .M_SC_W_send(m40_nodes_M_SC_W_SEND),
        .S_SC_AR_info(S_SC_AR_42_INFO),
        .S_SC_AR_payld(S_SC_AR_42_PAYLD),
        .S_SC_AR_recv(S_SC_AR_42_RECV),
        .S_SC_AR_req(S_SC_AR_42_REQ),
        .S_SC_AR_send(S_SC_AR_42_SEND),
        .S_SC_AW_info(S_SC_AW_42_INFO),
        .S_SC_AW_payld(S_SC_AW_42_PAYLD),
        .S_SC_AW_recv(S_SC_AW_42_RECV),
        .S_SC_AW_req(S_SC_AW_42_REQ),
        .S_SC_AW_send(S_SC_AW_42_SEND),
        .S_SC_B_info(S_SC_B_42_INFO),
        .S_SC_B_payld(S_SC_B_42_PAYLD),
        .S_SC_B_recv(S_SC_B_42_RECV),
        .S_SC_B_req(S_SC_B_42_REQ),
        .S_SC_B_send(S_SC_B_42_SEND),
        .S_SC_R_info(S_SC_R_42_INFO),
        .S_SC_R_payld(S_SC_R_42_PAYLD),
        .S_SC_R_recv(S_SC_R_42_RECV),
        .S_SC_R_req(S_SC_R_42_REQ),
        .S_SC_R_send(S_SC_R_42_SEND),
        .S_SC_W_info(S_SC_W_42_INFO),
        .S_SC_W_payld(S_SC_W_42_PAYLD),
        .S_SC_W_recv(S_SC_W_42_RECV),
        .S_SC_W_req(S_SC_W_42_REQ),
        .S_SC_W_send(S_SC_W_42_SEND),
        .m_axi_aclk(clk_map_M40_ACLK),
        .m_axi_aresetn(m_axi_aresetn_40),
        .s_axi_aclk(clk_map_M00_ACLK),
        .s_axi_aresetn(clk_map_M00_ARESETN));
  bd_afc3_m40s2a_0 m40_sc2axi
       (.aclk(clk_map_M40_ACLK),
        .m_axi_araddr(m40_sc2axi_M_AXI_ARADDR),
        .m_axi_arcache(m40_sc2axi_M_AXI_ARCACHE),
        .m_axi_arid(m40_sc2axi_M_AXI_ARID),
        .m_axi_arlen(m40_sc2axi_M_AXI_ARLEN),
        .m_axi_arlock(m40_sc2axi_M_AXI_ARLOCK),
        .m_axi_arprot(m40_sc2axi_M_AXI_ARPROT),
        .m_axi_arqos(m40_sc2axi_M_AXI_ARQOS),
        .m_axi_arready(m40_sc2axi_M_AXI_ARREADY),
        .m_axi_aruser(m40_sc2axi_M_AXI_ARUSER),
        .m_axi_arvalid(m40_sc2axi_M_AXI_ARVALID),
        .m_axi_awaddr(m40_sc2axi_M_AXI_AWADDR),
        .m_axi_awcache(m40_sc2axi_M_AXI_AWCACHE),
        .m_axi_awid(m40_sc2axi_M_AXI_AWID),
        .m_axi_awlen(m40_sc2axi_M_AXI_AWLEN),
        .m_axi_awlock(m40_sc2axi_M_AXI_AWLOCK),
        .m_axi_awprot(m40_sc2axi_M_AXI_AWPROT),
        .m_axi_awqos(m40_sc2axi_M_AXI_AWQOS),
        .m_axi_awready(m40_sc2axi_M_AXI_AWREADY),
        .m_axi_awuser(m40_sc2axi_M_AXI_AWUSER),
        .m_axi_awvalid(m40_sc2axi_M_AXI_AWVALID),
        .m_axi_bid(m40_sc2axi_M_AXI_BID),
        .m_axi_bready(m40_sc2axi_M_AXI_BREADY),
        .m_axi_bresp(m40_sc2axi_M_AXI_BRESP),
        .m_axi_buser(m40_sc2axi_M_AXI_BUSER),
        .m_axi_bvalid(m40_sc2axi_M_AXI_BVALID),
        .m_axi_rdata(m40_sc2axi_M_AXI_RDATA),
        .m_axi_rid(m40_sc2axi_M_AXI_RID),
        .m_axi_rlast(m40_sc2axi_M_AXI_RLAST),
        .m_axi_rready(m40_sc2axi_M_AXI_RREADY),
        .m_axi_rresp(m40_sc2axi_M_AXI_RRESP),
        .m_axi_ruser(m40_sc2axi_M_AXI_RUSER),
        .m_axi_rvalid(m40_sc2axi_M_AXI_RVALID),
        .m_axi_wdata(m40_sc2axi_M_AXI_WDATA),
        .m_axi_wlast(m40_sc2axi_M_AXI_WLAST),
        .m_axi_wready(m40_sc2axi_M_AXI_WREADY),
        .m_axi_wstrb(m40_sc2axi_M_AXI_WSTRB),
        .m_axi_wuser(m40_sc2axi_M_AXI_WUSER),
        .m_axi_wvalid(m40_sc2axi_M_AXI_WVALID),
        .m_sc_b_info(S_SC_B_42_INFO),
        .m_sc_b_payld(S_SC_B_42_PAYLD),
        .m_sc_b_recv(S_SC_B_42_RECV),
        .m_sc_b_req(S_SC_B_42_REQ),
        .m_sc_b_send(S_SC_B_42_SEND),
        .m_sc_r_info(S_SC_R_42_INFO),
        .m_sc_r_payld(S_SC_R_42_PAYLD),
        .m_sc_r_recv(S_SC_R_42_RECV),
        .m_sc_r_req(S_SC_R_42_REQ),
        .m_sc_r_send(S_SC_R_42_SEND),
        .s_sc_ar_info(m40_nodes_M_SC_AR_INFO),
        .s_sc_ar_payld(m40_nodes_M_SC_AR_PAYLD[179:0]),
        .s_sc_ar_recv(m40_nodes_M_SC_AR_RECV),
        .s_sc_ar_req(m40_nodes_M_SC_AR_REQ),
        .s_sc_ar_send(m40_nodes_M_SC_AR_SEND),
        .s_sc_aw_info(m40_nodes_M_SC_AW_INFO),
        .s_sc_aw_payld(m40_nodes_M_SC_AW_PAYLD[179:0]),
        .s_sc_aw_recv(m40_nodes_M_SC_AW_RECV),
        .s_sc_aw_req(m40_nodes_M_SC_AW_REQ),
        .s_sc_aw_send(m40_nodes_M_SC_AW_SEND),
        .s_sc_w_info(m40_nodes_M_SC_W_INFO),
        .s_sc_w_payld(m40_nodes_M_SC_W_PAYLD[66:0]),
        .s_sc_w_recv(m40_nodes_M_SC_W_RECV),
        .s_sc_w_req(m40_nodes_M_SC_W_REQ),
        .s_sc_w_send(m40_nodes_M_SC_W_SEND));
  m41_exit_pipeline_imp_1XJR7G4 m41_exit_pipeline
       (.aclk(clk_map_M41_ACLK),
        .aresetn(m_axi_aresetn_41),
        .m_axi_araddr(m41_exit_pipeline_m_axi_ARADDR),
        .m_axi_arprot(m41_exit_pipeline_m_axi_ARPROT),
        .m_axi_arready(m41_exit_pipeline_m_axi_ARREADY),
        .m_axi_arvalid(m41_exit_pipeline_m_axi_ARVALID),
        .m_axi_awaddr(m41_exit_pipeline_m_axi_AWADDR),
        .m_axi_awprot(m41_exit_pipeline_m_axi_AWPROT),
        .m_axi_awready(m41_exit_pipeline_m_axi_AWREADY),
        .m_axi_awvalid(m41_exit_pipeline_m_axi_AWVALID),
        .m_axi_bready(m41_exit_pipeline_m_axi_BREADY),
        .m_axi_bresp(m41_exit_pipeline_m_axi_BRESP),
        .m_axi_bvalid(m41_exit_pipeline_m_axi_BVALID),
        .m_axi_rdata(m41_exit_pipeline_m_axi_RDATA),
        .m_axi_rready(m41_exit_pipeline_m_axi_RREADY),
        .m_axi_rresp(m41_exit_pipeline_m_axi_RRESP),
        .m_axi_rvalid(m41_exit_pipeline_m_axi_RVALID),
        .m_axi_wdata(m41_exit_pipeline_m_axi_WDATA),
        .m_axi_wready(m41_exit_pipeline_m_axi_WREADY),
        .m_axi_wstrb(m41_exit_pipeline_m_axi_WSTRB),
        .m_axi_wvalid(m41_exit_pipeline_m_axi_WVALID),
        .s_axi_araddr(m41_sc2axi_M_AXI_ARADDR),
        .s_axi_arcache(m41_sc2axi_M_AXI_ARCACHE),
        .s_axi_arid(m41_sc2axi_M_AXI_ARID),
        .s_axi_arlen(m41_sc2axi_M_AXI_ARLEN),
        .s_axi_arlock(m41_sc2axi_M_AXI_ARLOCK),
        .s_axi_arprot(m41_sc2axi_M_AXI_ARPROT),
        .s_axi_arqos(m41_sc2axi_M_AXI_ARQOS),
        .s_axi_arready(m41_sc2axi_M_AXI_ARREADY),
        .s_axi_aruser(m41_sc2axi_M_AXI_ARUSER),
        .s_axi_arvalid(m41_sc2axi_M_AXI_ARVALID),
        .s_axi_awaddr(m41_sc2axi_M_AXI_AWADDR),
        .s_axi_awcache(m41_sc2axi_M_AXI_AWCACHE),
        .s_axi_awid(m41_sc2axi_M_AXI_AWID),
        .s_axi_awlen(m41_sc2axi_M_AXI_AWLEN),
        .s_axi_awlock(m41_sc2axi_M_AXI_AWLOCK),
        .s_axi_awprot(m41_sc2axi_M_AXI_AWPROT),
        .s_axi_awqos(m41_sc2axi_M_AXI_AWQOS),
        .s_axi_awready(m41_sc2axi_M_AXI_AWREADY),
        .s_axi_awuser(m41_sc2axi_M_AXI_AWUSER),
        .s_axi_awvalid(m41_sc2axi_M_AXI_AWVALID),
        .s_axi_bid(m41_sc2axi_M_AXI_BID),
        .s_axi_bready(m41_sc2axi_M_AXI_BREADY),
        .s_axi_bresp(m41_sc2axi_M_AXI_BRESP),
        .s_axi_buser(m41_sc2axi_M_AXI_BUSER),
        .s_axi_bvalid(m41_sc2axi_M_AXI_BVALID),
        .s_axi_rdata(m41_sc2axi_M_AXI_RDATA),
        .s_axi_rid(m41_sc2axi_M_AXI_RID),
        .s_axi_rlast(m41_sc2axi_M_AXI_RLAST),
        .s_axi_rready(m41_sc2axi_M_AXI_RREADY),
        .s_axi_rresp(m41_sc2axi_M_AXI_RRESP),
        .s_axi_ruser(m41_sc2axi_M_AXI_RUSER),
        .s_axi_rvalid(m41_sc2axi_M_AXI_RVALID),
        .s_axi_wdata(m41_sc2axi_M_AXI_WDATA),
        .s_axi_wlast(m41_sc2axi_M_AXI_WLAST),
        .s_axi_wready(m41_sc2axi_M_AXI_WREADY),
        .s_axi_wstrb(m41_sc2axi_M_AXI_WSTRB),
        .s_axi_wuser(m41_sc2axi_M_AXI_WUSER),
        .s_axi_wvalid(m41_sc2axi_M_AXI_WVALID));
  m41_nodes_imp_1BC46CE m41_nodes
       (.M_SC_AR_info(m41_nodes_M_SC_AR_INFO),
        .M_SC_AR_payld(m41_nodes_M_SC_AR_PAYLD),
        .M_SC_AR_recv(m41_nodes_M_SC_AR_RECV),
        .M_SC_AR_req(m41_nodes_M_SC_AR_REQ),
        .M_SC_AR_send(m41_nodes_M_SC_AR_SEND),
        .M_SC_AW_info(m41_nodes_M_SC_AW_INFO),
        .M_SC_AW_payld(m41_nodes_M_SC_AW_PAYLD),
        .M_SC_AW_recv(m41_nodes_M_SC_AW_RECV),
        .M_SC_AW_req(m41_nodes_M_SC_AW_REQ),
        .M_SC_AW_send(m41_nodes_M_SC_AW_SEND),
        .M_SC_B_info(m41_nodes_M_SC_B_INFO),
        .M_SC_B_payld(m41_nodes_M_SC_B_PAYLD),
        .M_SC_B_recv(m41_nodes_M_SC_B_RECV),
        .M_SC_B_req(m41_nodes_M_SC_B_REQ),
        .M_SC_B_send(m41_nodes_M_SC_B_SEND),
        .M_SC_R_info(m41_nodes_M_SC_R_INFO),
        .M_SC_R_payld(m41_nodes_M_SC_R_PAYLD),
        .M_SC_R_recv(m41_nodes_M_SC_R_RECV),
        .M_SC_R_req(m41_nodes_M_SC_R_REQ),
        .M_SC_R_send(m41_nodes_M_SC_R_SEND),
        .M_SC_W_info(m41_nodes_M_SC_W_INFO),
        .M_SC_W_payld(m41_nodes_M_SC_W_PAYLD),
        .M_SC_W_recv(m41_nodes_M_SC_W_RECV),
        .M_SC_W_req(m41_nodes_M_SC_W_REQ),
        .M_SC_W_send(m41_nodes_M_SC_W_SEND),
        .S_SC_AR_info(S_SC_AR_43_INFO),
        .S_SC_AR_payld(S_SC_AR_43_PAYLD),
        .S_SC_AR_recv(S_SC_AR_43_RECV),
        .S_SC_AR_req(S_SC_AR_43_REQ),
        .S_SC_AR_send(S_SC_AR_43_SEND),
        .S_SC_AW_info(S_SC_AW_43_INFO),
        .S_SC_AW_payld(S_SC_AW_43_PAYLD),
        .S_SC_AW_recv(S_SC_AW_43_RECV),
        .S_SC_AW_req(S_SC_AW_43_REQ),
        .S_SC_AW_send(S_SC_AW_43_SEND),
        .S_SC_B_info(S_SC_B_43_INFO),
        .S_SC_B_payld(S_SC_B_43_PAYLD),
        .S_SC_B_recv(S_SC_B_43_RECV),
        .S_SC_B_req(S_SC_B_43_REQ),
        .S_SC_B_send(S_SC_B_43_SEND),
        .S_SC_R_info(S_SC_R_43_INFO),
        .S_SC_R_payld(S_SC_R_43_PAYLD),
        .S_SC_R_recv(S_SC_R_43_RECV),
        .S_SC_R_req(S_SC_R_43_REQ),
        .S_SC_R_send(S_SC_R_43_SEND),
        .S_SC_W_info(S_SC_W_43_INFO),
        .S_SC_W_payld(S_SC_W_43_PAYLD),
        .S_SC_W_recv(S_SC_W_43_RECV),
        .S_SC_W_req(S_SC_W_43_REQ),
        .S_SC_W_send(S_SC_W_43_SEND),
        .m_axi_aclk(clk_map_M41_ACLK),
        .m_axi_aresetn(m_axi_aresetn_41),
        .s_axi_aclk(clk_map_M00_ACLK),
        .s_axi_aresetn(clk_map_M00_ARESETN));
  bd_afc3_m41s2a_0 m41_sc2axi
       (.aclk(clk_map_M41_ACLK),
        .m_axi_araddr(m41_sc2axi_M_AXI_ARADDR),
        .m_axi_arcache(m41_sc2axi_M_AXI_ARCACHE),
        .m_axi_arid(m41_sc2axi_M_AXI_ARID),
        .m_axi_arlen(m41_sc2axi_M_AXI_ARLEN),
        .m_axi_arlock(m41_sc2axi_M_AXI_ARLOCK),
        .m_axi_arprot(m41_sc2axi_M_AXI_ARPROT),
        .m_axi_arqos(m41_sc2axi_M_AXI_ARQOS),
        .m_axi_arready(m41_sc2axi_M_AXI_ARREADY),
        .m_axi_aruser(m41_sc2axi_M_AXI_ARUSER),
        .m_axi_arvalid(m41_sc2axi_M_AXI_ARVALID),
        .m_axi_awaddr(m41_sc2axi_M_AXI_AWADDR),
        .m_axi_awcache(m41_sc2axi_M_AXI_AWCACHE),
        .m_axi_awid(m41_sc2axi_M_AXI_AWID),
        .m_axi_awlen(m41_sc2axi_M_AXI_AWLEN),
        .m_axi_awlock(m41_sc2axi_M_AXI_AWLOCK),
        .m_axi_awprot(m41_sc2axi_M_AXI_AWPROT),
        .m_axi_awqos(m41_sc2axi_M_AXI_AWQOS),
        .m_axi_awready(m41_sc2axi_M_AXI_AWREADY),
        .m_axi_awuser(m41_sc2axi_M_AXI_AWUSER),
        .m_axi_awvalid(m41_sc2axi_M_AXI_AWVALID),
        .m_axi_bid(m41_sc2axi_M_AXI_BID),
        .m_axi_bready(m41_sc2axi_M_AXI_BREADY),
        .m_axi_bresp(m41_sc2axi_M_AXI_BRESP),
        .m_axi_buser(m41_sc2axi_M_AXI_BUSER),
        .m_axi_bvalid(m41_sc2axi_M_AXI_BVALID),
        .m_axi_rdata(m41_sc2axi_M_AXI_RDATA),
        .m_axi_rid(m41_sc2axi_M_AXI_RID),
        .m_axi_rlast(m41_sc2axi_M_AXI_RLAST),
        .m_axi_rready(m41_sc2axi_M_AXI_RREADY),
        .m_axi_rresp(m41_sc2axi_M_AXI_RRESP),
        .m_axi_ruser(m41_sc2axi_M_AXI_RUSER),
        .m_axi_rvalid(m41_sc2axi_M_AXI_RVALID),
        .m_axi_wdata(m41_sc2axi_M_AXI_WDATA),
        .m_axi_wlast(m41_sc2axi_M_AXI_WLAST),
        .m_axi_wready(m41_sc2axi_M_AXI_WREADY),
        .m_axi_wstrb(m41_sc2axi_M_AXI_WSTRB),
        .m_axi_wuser(m41_sc2axi_M_AXI_WUSER),
        .m_axi_wvalid(m41_sc2axi_M_AXI_WVALID),
        .m_sc_b_info(S_SC_B_43_INFO),
        .m_sc_b_payld(S_SC_B_43_PAYLD),
        .m_sc_b_recv(S_SC_B_43_RECV),
        .m_sc_b_req(S_SC_B_43_REQ),
        .m_sc_b_send(S_SC_B_43_SEND),
        .m_sc_r_info(S_SC_R_43_INFO),
        .m_sc_r_payld(S_SC_R_43_PAYLD),
        .m_sc_r_recv(S_SC_R_43_RECV),
        .m_sc_r_req(S_SC_R_43_REQ),
        .m_sc_r_send(S_SC_R_43_SEND),
        .s_sc_ar_info(m41_nodes_M_SC_AR_INFO),
        .s_sc_ar_payld(m41_nodes_M_SC_AR_PAYLD[179:0]),
        .s_sc_ar_recv(m41_nodes_M_SC_AR_RECV),
        .s_sc_ar_req(m41_nodes_M_SC_AR_REQ),
        .s_sc_ar_send(m41_nodes_M_SC_AR_SEND),
        .s_sc_aw_info(m41_nodes_M_SC_AW_INFO),
        .s_sc_aw_payld(m41_nodes_M_SC_AW_PAYLD[179:0]),
        .s_sc_aw_recv(m41_nodes_M_SC_AW_RECV),
        .s_sc_aw_req(m41_nodes_M_SC_AW_REQ),
        .s_sc_aw_send(m41_nodes_M_SC_AW_SEND),
        .s_sc_w_info(m41_nodes_M_SC_W_INFO),
        .s_sc_w_payld(m41_nodes_M_SC_W_PAYLD[66:0]),
        .s_sc_w_recv(m41_nodes_M_SC_W_RECV),
        .s_sc_w_req(m41_nodes_M_SC_W_REQ),
        .s_sc_w_send(m41_nodes_M_SC_W_SEND));
  m42_exit_pipeline_imp_1IBX7P0 m42_exit_pipeline
       (.aclk(clk_map_M42_ACLK),
        .aresetn(m_axi_aresetn_42),
        .m_axi_araddr(m42_exit_pipeline_m_axi_ARADDR),
        .m_axi_arprot(m42_exit_pipeline_m_axi_ARPROT),
        .m_axi_arready(m42_exit_pipeline_m_axi_ARREADY),
        .m_axi_arvalid(m42_exit_pipeline_m_axi_ARVALID),
        .m_axi_awaddr(m42_exit_pipeline_m_axi_AWADDR),
        .m_axi_awprot(m42_exit_pipeline_m_axi_AWPROT),
        .m_axi_awready(m42_exit_pipeline_m_axi_AWREADY),
        .m_axi_awvalid(m42_exit_pipeline_m_axi_AWVALID),
        .m_axi_bready(m42_exit_pipeline_m_axi_BREADY),
        .m_axi_bresp(m42_exit_pipeline_m_axi_BRESP),
        .m_axi_bvalid(m42_exit_pipeline_m_axi_BVALID),
        .m_axi_rdata(m42_exit_pipeline_m_axi_RDATA),
        .m_axi_rready(m42_exit_pipeline_m_axi_RREADY),
        .m_axi_rresp(m42_exit_pipeline_m_axi_RRESP),
        .m_axi_rvalid(m42_exit_pipeline_m_axi_RVALID),
        .m_axi_wdata(m42_exit_pipeline_m_axi_WDATA),
        .m_axi_wready(m42_exit_pipeline_m_axi_WREADY),
        .m_axi_wstrb(m42_exit_pipeline_m_axi_WSTRB),
        .m_axi_wvalid(m42_exit_pipeline_m_axi_WVALID),
        .s_axi_araddr(m42_sc2axi_M_AXI_ARADDR),
        .s_axi_arcache(m42_sc2axi_M_AXI_ARCACHE),
        .s_axi_arid(m42_sc2axi_M_AXI_ARID),
        .s_axi_arlen(m42_sc2axi_M_AXI_ARLEN),
        .s_axi_arlock(m42_sc2axi_M_AXI_ARLOCK),
        .s_axi_arprot(m42_sc2axi_M_AXI_ARPROT),
        .s_axi_arqos(m42_sc2axi_M_AXI_ARQOS),
        .s_axi_arready(m42_sc2axi_M_AXI_ARREADY),
        .s_axi_aruser(m42_sc2axi_M_AXI_ARUSER),
        .s_axi_arvalid(m42_sc2axi_M_AXI_ARVALID),
        .s_axi_awaddr(m42_sc2axi_M_AXI_AWADDR),
        .s_axi_awcache(m42_sc2axi_M_AXI_AWCACHE),
        .s_axi_awid(m42_sc2axi_M_AXI_AWID),
        .s_axi_awlen(m42_sc2axi_M_AXI_AWLEN),
        .s_axi_awlock(m42_sc2axi_M_AXI_AWLOCK),
        .s_axi_awprot(m42_sc2axi_M_AXI_AWPROT),
        .s_axi_awqos(m42_sc2axi_M_AXI_AWQOS),
        .s_axi_awready(m42_sc2axi_M_AXI_AWREADY),
        .s_axi_awuser(m42_sc2axi_M_AXI_AWUSER),
        .s_axi_awvalid(m42_sc2axi_M_AXI_AWVALID),
        .s_axi_bid(m42_sc2axi_M_AXI_BID),
        .s_axi_bready(m42_sc2axi_M_AXI_BREADY),
        .s_axi_bresp(m42_sc2axi_M_AXI_BRESP),
        .s_axi_buser(m42_sc2axi_M_AXI_BUSER),
        .s_axi_bvalid(m42_sc2axi_M_AXI_BVALID),
        .s_axi_rdata(m42_sc2axi_M_AXI_RDATA),
        .s_axi_rid(m42_sc2axi_M_AXI_RID),
        .s_axi_rlast(m42_sc2axi_M_AXI_RLAST),
        .s_axi_rready(m42_sc2axi_M_AXI_RREADY),
        .s_axi_rresp(m42_sc2axi_M_AXI_RRESP),
        .s_axi_ruser(m42_sc2axi_M_AXI_RUSER),
        .s_axi_rvalid(m42_sc2axi_M_AXI_RVALID),
        .s_axi_wdata(m42_sc2axi_M_AXI_WDATA),
        .s_axi_wlast(m42_sc2axi_M_AXI_WLAST),
        .s_axi_wready(m42_sc2axi_M_AXI_WREADY),
        .s_axi_wstrb(m42_sc2axi_M_AXI_WSTRB),
        .s_axi_wuser(m42_sc2axi_M_AXI_WUSER),
        .s_axi_wvalid(m42_sc2axi_M_AXI_WVALID));
  m42_nodes_imp_1NNEEO5 m42_nodes
       (.M_SC_AR_info(m42_nodes_M_SC_AR_INFO),
        .M_SC_AR_payld(m42_nodes_M_SC_AR_PAYLD),
        .M_SC_AR_recv(m42_nodes_M_SC_AR_RECV),
        .M_SC_AR_req(m42_nodes_M_SC_AR_REQ),
        .M_SC_AR_send(m42_nodes_M_SC_AR_SEND),
        .M_SC_AW_info(m42_nodes_M_SC_AW_INFO),
        .M_SC_AW_payld(m42_nodes_M_SC_AW_PAYLD),
        .M_SC_AW_recv(m42_nodes_M_SC_AW_RECV),
        .M_SC_AW_req(m42_nodes_M_SC_AW_REQ),
        .M_SC_AW_send(m42_nodes_M_SC_AW_SEND),
        .M_SC_B_info(m42_nodes_M_SC_B_INFO),
        .M_SC_B_payld(m42_nodes_M_SC_B_PAYLD),
        .M_SC_B_recv(m42_nodes_M_SC_B_RECV),
        .M_SC_B_req(m42_nodes_M_SC_B_REQ),
        .M_SC_B_send(m42_nodes_M_SC_B_SEND),
        .M_SC_R_info(m42_nodes_M_SC_R_INFO),
        .M_SC_R_payld(m42_nodes_M_SC_R_PAYLD),
        .M_SC_R_recv(m42_nodes_M_SC_R_RECV),
        .M_SC_R_req(m42_nodes_M_SC_R_REQ),
        .M_SC_R_send(m42_nodes_M_SC_R_SEND),
        .M_SC_W_info(m42_nodes_M_SC_W_INFO),
        .M_SC_W_payld(m42_nodes_M_SC_W_PAYLD),
        .M_SC_W_recv(m42_nodes_M_SC_W_RECV),
        .M_SC_W_req(m42_nodes_M_SC_W_REQ),
        .M_SC_W_send(m42_nodes_M_SC_W_SEND),
        .S_SC_AR_info(S_SC_AR_44_INFO),
        .S_SC_AR_payld(S_SC_AR_44_PAYLD),
        .S_SC_AR_recv(S_SC_AR_44_RECV),
        .S_SC_AR_req(S_SC_AR_44_REQ),
        .S_SC_AR_send(S_SC_AR_44_SEND),
        .S_SC_AW_info(S_SC_AW_44_INFO),
        .S_SC_AW_payld(S_SC_AW_44_PAYLD),
        .S_SC_AW_recv(S_SC_AW_44_RECV),
        .S_SC_AW_req(S_SC_AW_44_REQ),
        .S_SC_AW_send(S_SC_AW_44_SEND),
        .S_SC_B_info(S_SC_B_44_INFO),
        .S_SC_B_payld(S_SC_B_44_PAYLD),
        .S_SC_B_recv(S_SC_B_44_RECV),
        .S_SC_B_req(S_SC_B_44_REQ),
        .S_SC_B_send(S_SC_B_44_SEND),
        .S_SC_R_info(S_SC_R_44_INFO),
        .S_SC_R_payld(S_SC_R_44_PAYLD),
        .S_SC_R_recv(S_SC_R_44_RECV),
        .S_SC_R_req(S_SC_R_44_REQ),
        .S_SC_R_send(S_SC_R_44_SEND),
        .S_SC_W_info(S_SC_W_44_INFO),
        .S_SC_W_payld(S_SC_W_44_PAYLD),
        .S_SC_W_recv(S_SC_W_44_RECV),
        .S_SC_W_req(S_SC_W_44_REQ),
        .S_SC_W_send(S_SC_W_44_SEND),
        .m_axi_aclk(clk_map_M42_ACLK),
        .m_axi_aresetn(m_axi_aresetn_42),
        .s_axi_aclk(clk_map_M00_ACLK),
        .s_axi_aresetn(clk_map_M00_ARESETN));
  bd_afc3_m42s2a_0 m42_sc2axi
       (.aclk(clk_map_M42_ACLK),
        .m_axi_araddr(m42_sc2axi_M_AXI_ARADDR),
        .m_axi_arcache(m42_sc2axi_M_AXI_ARCACHE),
        .m_axi_arid(m42_sc2axi_M_AXI_ARID),
        .m_axi_arlen(m42_sc2axi_M_AXI_ARLEN),
        .m_axi_arlock(m42_sc2axi_M_AXI_ARLOCK),
        .m_axi_arprot(m42_sc2axi_M_AXI_ARPROT),
        .m_axi_arqos(m42_sc2axi_M_AXI_ARQOS),
        .m_axi_arready(m42_sc2axi_M_AXI_ARREADY),
        .m_axi_aruser(m42_sc2axi_M_AXI_ARUSER),
        .m_axi_arvalid(m42_sc2axi_M_AXI_ARVALID),
        .m_axi_awaddr(m42_sc2axi_M_AXI_AWADDR),
        .m_axi_awcache(m42_sc2axi_M_AXI_AWCACHE),
        .m_axi_awid(m42_sc2axi_M_AXI_AWID),
        .m_axi_awlen(m42_sc2axi_M_AXI_AWLEN),
        .m_axi_awlock(m42_sc2axi_M_AXI_AWLOCK),
        .m_axi_awprot(m42_sc2axi_M_AXI_AWPROT),
        .m_axi_awqos(m42_sc2axi_M_AXI_AWQOS),
        .m_axi_awready(m42_sc2axi_M_AXI_AWREADY),
        .m_axi_awuser(m42_sc2axi_M_AXI_AWUSER),
        .m_axi_awvalid(m42_sc2axi_M_AXI_AWVALID),
        .m_axi_bid(m42_sc2axi_M_AXI_BID),
        .m_axi_bready(m42_sc2axi_M_AXI_BREADY),
        .m_axi_bresp(m42_sc2axi_M_AXI_BRESP),
        .m_axi_buser(m42_sc2axi_M_AXI_BUSER),
        .m_axi_bvalid(m42_sc2axi_M_AXI_BVALID),
        .m_axi_rdata(m42_sc2axi_M_AXI_RDATA),
        .m_axi_rid(m42_sc2axi_M_AXI_RID),
        .m_axi_rlast(m42_sc2axi_M_AXI_RLAST),
        .m_axi_rready(m42_sc2axi_M_AXI_RREADY),
        .m_axi_rresp(m42_sc2axi_M_AXI_RRESP),
        .m_axi_ruser(m42_sc2axi_M_AXI_RUSER),
        .m_axi_rvalid(m42_sc2axi_M_AXI_RVALID),
        .m_axi_wdata(m42_sc2axi_M_AXI_WDATA),
        .m_axi_wlast(m42_sc2axi_M_AXI_WLAST),
        .m_axi_wready(m42_sc2axi_M_AXI_WREADY),
        .m_axi_wstrb(m42_sc2axi_M_AXI_WSTRB),
        .m_axi_wuser(m42_sc2axi_M_AXI_WUSER),
        .m_axi_wvalid(m42_sc2axi_M_AXI_WVALID),
        .m_sc_b_info(S_SC_B_44_INFO),
        .m_sc_b_payld(S_SC_B_44_PAYLD),
        .m_sc_b_recv(S_SC_B_44_RECV),
        .m_sc_b_req(S_SC_B_44_REQ),
        .m_sc_b_send(S_SC_B_44_SEND),
        .m_sc_r_info(S_SC_R_44_INFO),
        .m_sc_r_payld(S_SC_R_44_PAYLD),
        .m_sc_r_recv(S_SC_R_44_RECV),
        .m_sc_r_req(S_SC_R_44_REQ),
        .m_sc_r_send(S_SC_R_44_SEND),
        .s_sc_ar_info(m42_nodes_M_SC_AR_INFO),
        .s_sc_ar_payld(m42_nodes_M_SC_AR_PAYLD[179:0]),
        .s_sc_ar_recv(m42_nodes_M_SC_AR_RECV),
        .s_sc_ar_req(m42_nodes_M_SC_AR_REQ),
        .s_sc_ar_send(m42_nodes_M_SC_AR_SEND),
        .s_sc_aw_info(m42_nodes_M_SC_AW_INFO),
        .s_sc_aw_payld(m42_nodes_M_SC_AW_PAYLD[179:0]),
        .s_sc_aw_recv(m42_nodes_M_SC_AW_RECV),
        .s_sc_aw_req(m42_nodes_M_SC_AW_REQ),
        .s_sc_aw_send(m42_nodes_M_SC_AW_SEND),
        .s_sc_w_info(m42_nodes_M_SC_W_INFO),
        .s_sc_w_payld(m42_nodes_M_SC_W_PAYLD[66:0]),
        .s_sc_w_recv(m42_nodes_M_SC_W_RECV),
        .s_sc_w_req(m42_nodes_M_SC_W_REQ),
        .s_sc_w_send(m42_nodes_M_SC_W_SEND));
  m43_exit_pipeline_imp_1N3AP6C m43_exit_pipeline
       (.aclk(clk_map_M43_ACLK),
        .aresetn(m_axi_aresetn_43),
        .m_axi_araddr(m43_exit_pipeline_m_axi_ARADDR),
        .m_axi_arprot(m43_exit_pipeline_m_axi_ARPROT),
        .m_axi_arready(m43_exit_pipeline_m_axi_ARREADY),
        .m_axi_arvalid(m43_exit_pipeline_m_axi_ARVALID),
        .m_axi_awaddr(m43_exit_pipeline_m_axi_AWADDR),
        .m_axi_awprot(m43_exit_pipeline_m_axi_AWPROT),
        .m_axi_awready(m43_exit_pipeline_m_axi_AWREADY),
        .m_axi_awvalid(m43_exit_pipeline_m_axi_AWVALID),
        .m_axi_bready(m43_exit_pipeline_m_axi_BREADY),
        .m_axi_bresp(m43_exit_pipeline_m_axi_BRESP),
        .m_axi_bvalid(m43_exit_pipeline_m_axi_BVALID),
        .m_axi_rdata(m43_exit_pipeline_m_axi_RDATA),
        .m_axi_rready(m43_exit_pipeline_m_axi_RREADY),
        .m_axi_rresp(m43_exit_pipeline_m_axi_RRESP),
        .m_axi_rvalid(m43_exit_pipeline_m_axi_RVALID),
        .m_axi_wdata(m43_exit_pipeline_m_axi_WDATA),
        .m_axi_wready(m43_exit_pipeline_m_axi_WREADY),
        .m_axi_wstrb(m43_exit_pipeline_m_axi_WSTRB),
        .m_axi_wvalid(m43_exit_pipeline_m_axi_WVALID),
        .s_axi_araddr(m43_sc2axi_M_AXI_ARADDR),
        .s_axi_arcache(m43_sc2axi_M_AXI_ARCACHE),
        .s_axi_arid(m43_sc2axi_M_AXI_ARID),
        .s_axi_arlen(m43_sc2axi_M_AXI_ARLEN),
        .s_axi_arlock(m43_sc2axi_M_AXI_ARLOCK),
        .s_axi_arprot(m43_sc2axi_M_AXI_ARPROT),
        .s_axi_arqos(m43_sc2axi_M_AXI_ARQOS),
        .s_axi_arready(m43_sc2axi_M_AXI_ARREADY),
        .s_axi_aruser(m43_sc2axi_M_AXI_ARUSER),
        .s_axi_arvalid(m43_sc2axi_M_AXI_ARVALID),
        .s_axi_awaddr(m43_sc2axi_M_AXI_AWADDR),
        .s_axi_awcache(m43_sc2axi_M_AXI_AWCACHE),
        .s_axi_awid(m43_sc2axi_M_AXI_AWID),
        .s_axi_awlen(m43_sc2axi_M_AXI_AWLEN),
        .s_axi_awlock(m43_sc2axi_M_AXI_AWLOCK),
        .s_axi_awprot(m43_sc2axi_M_AXI_AWPROT),
        .s_axi_awqos(m43_sc2axi_M_AXI_AWQOS),
        .s_axi_awready(m43_sc2axi_M_AXI_AWREADY),
        .s_axi_awuser(m43_sc2axi_M_AXI_AWUSER),
        .s_axi_awvalid(m43_sc2axi_M_AXI_AWVALID),
        .s_axi_bid(m43_sc2axi_M_AXI_BID),
        .s_axi_bready(m43_sc2axi_M_AXI_BREADY),
        .s_axi_bresp(m43_sc2axi_M_AXI_BRESP),
        .s_axi_buser(m43_sc2axi_M_AXI_BUSER),
        .s_axi_bvalid(m43_sc2axi_M_AXI_BVALID),
        .s_axi_rdata(m43_sc2axi_M_AXI_RDATA),
        .s_axi_rid(m43_sc2axi_M_AXI_RID),
        .s_axi_rlast(m43_sc2axi_M_AXI_RLAST),
        .s_axi_rready(m43_sc2axi_M_AXI_RREADY),
        .s_axi_rresp(m43_sc2axi_M_AXI_RRESP),
        .s_axi_ruser(m43_sc2axi_M_AXI_RUSER),
        .s_axi_rvalid(m43_sc2axi_M_AXI_RVALID),
        .s_axi_wdata(m43_sc2axi_M_AXI_WDATA),
        .s_axi_wlast(m43_sc2axi_M_AXI_WLAST),
        .s_axi_wready(m43_sc2axi_M_AXI_WREADY),
        .s_axi_wstrb(m43_sc2axi_M_AXI_WSTRB),
        .s_axi_wuser(m43_sc2axi_M_AXI_WUSER),
        .s_axi_wvalid(m43_sc2axi_M_AXI_WVALID));
  m43_nodes_imp_L2OUCZ m43_nodes
       (.M_SC_AR_info(m43_nodes_M_SC_AR_INFO),
        .M_SC_AR_payld(m43_nodes_M_SC_AR_PAYLD),
        .M_SC_AR_recv(m43_nodes_M_SC_AR_RECV),
        .M_SC_AR_req(m43_nodes_M_SC_AR_REQ),
        .M_SC_AR_send(m43_nodes_M_SC_AR_SEND),
        .M_SC_AW_info(m43_nodes_M_SC_AW_INFO),
        .M_SC_AW_payld(m43_nodes_M_SC_AW_PAYLD),
        .M_SC_AW_recv(m43_nodes_M_SC_AW_RECV),
        .M_SC_AW_req(m43_nodes_M_SC_AW_REQ),
        .M_SC_AW_send(m43_nodes_M_SC_AW_SEND),
        .M_SC_B_info(m43_nodes_M_SC_B_INFO),
        .M_SC_B_payld(m43_nodes_M_SC_B_PAYLD),
        .M_SC_B_recv(m43_nodes_M_SC_B_RECV),
        .M_SC_B_req(m43_nodes_M_SC_B_REQ),
        .M_SC_B_send(m43_nodes_M_SC_B_SEND),
        .M_SC_R_info(m43_nodes_M_SC_R_INFO),
        .M_SC_R_payld(m43_nodes_M_SC_R_PAYLD),
        .M_SC_R_recv(m43_nodes_M_SC_R_RECV),
        .M_SC_R_req(m43_nodes_M_SC_R_REQ),
        .M_SC_R_send(m43_nodes_M_SC_R_SEND),
        .M_SC_W_info(m43_nodes_M_SC_W_INFO),
        .M_SC_W_payld(m43_nodes_M_SC_W_PAYLD),
        .M_SC_W_recv(m43_nodes_M_SC_W_RECV),
        .M_SC_W_req(m43_nodes_M_SC_W_REQ),
        .M_SC_W_send(m43_nodes_M_SC_W_SEND),
        .S_SC_AR_info(S_SC_AR_45_INFO),
        .S_SC_AR_payld(S_SC_AR_45_PAYLD),
        .S_SC_AR_recv(S_SC_AR_45_RECV),
        .S_SC_AR_req(S_SC_AR_45_REQ),
        .S_SC_AR_send(S_SC_AR_45_SEND),
        .S_SC_AW_info(S_SC_AW_45_INFO),
        .S_SC_AW_payld(S_SC_AW_45_PAYLD),
        .S_SC_AW_recv(S_SC_AW_45_RECV),
        .S_SC_AW_req(S_SC_AW_45_REQ),
        .S_SC_AW_send(S_SC_AW_45_SEND),
        .S_SC_B_info(S_SC_B_45_INFO),
        .S_SC_B_payld(S_SC_B_45_PAYLD),
        .S_SC_B_recv(S_SC_B_45_RECV),
        .S_SC_B_req(S_SC_B_45_REQ),
        .S_SC_B_send(S_SC_B_45_SEND),
        .S_SC_R_info(S_SC_R_45_INFO),
        .S_SC_R_payld(S_SC_R_45_PAYLD),
        .S_SC_R_recv(S_SC_R_45_RECV),
        .S_SC_R_req(S_SC_R_45_REQ),
        .S_SC_R_send(S_SC_R_45_SEND),
        .S_SC_W_info(S_SC_W_45_INFO),
        .S_SC_W_payld(S_SC_W_45_PAYLD),
        .S_SC_W_recv(S_SC_W_45_RECV),
        .S_SC_W_req(S_SC_W_45_REQ),
        .S_SC_W_send(S_SC_W_45_SEND),
        .m_axi_aclk(clk_map_M43_ACLK),
        .m_axi_aresetn(m_axi_aresetn_43),
        .s_axi_aclk(clk_map_M00_ACLK),
        .s_axi_aresetn(clk_map_M00_ARESETN));
  bd_afc3_m43s2a_0 m43_sc2axi
       (.aclk(clk_map_M43_ACLK),
        .m_axi_araddr(m43_sc2axi_M_AXI_ARADDR),
        .m_axi_arcache(m43_sc2axi_M_AXI_ARCACHE),
        .m_axi_arid(m43_sc2axi_M_AXI_ARID),
        .m_axi_arlen(m43_sc2axi_M_AXI_ARLEN),
        .m_axi_arlock(m43_sc2axi_M_AXI_ARLOCK),
        .m_axi_arprot(m43_sc2axi_M_AXI_ARPROT),
        .m_axi_arqos(m43_sc2axi_M_AXI_ARQOS),
        .m_axi_arready(m43_sc2axi_M_AXI_ARREADY),
        .m_axi_aruser(m43_sc2axi_M_AXI_ARUSER),
        .m_axi_arvalid(m43_sc2axi_M_AXI_ARVALID),
        .m_axi_awaddr(m43_sc2axi_M_AXI_AWADDR),
        .m_axi_awcache(m43_sc2axi_M_AXI_AWCACHE),
        .m_axi_awid(m43_sc2axi_M_AXI_AWID),
        .m_axi_awlen(m43_sc2axi_M_AXI_AWLEN),
        .m_axi_awlock(m43_sc2axi_M_AXI_AWLOCK),
        .m_axi_awprot(m43_sc2axi_M_AXI_AWPROT),
        .m_axi_awqos(m43_sc2axi_M_AXI_AWQOS),
        .m_axi_awready(m43_sc2axi_M_AXI_AWREADY),
        .m_axi_awuser(m43_sc2axi_M_AXI_AWUSER),
        .m_axi_awvalid(m43_sc2axi_M_AXI_AWVALID),
        .m_axi_bid(m43_sc2axi_M_AXI_BID),
        .m_axi_bready(m43_sc2axi_M_AXI_BREADY),
        .m_axi_bresp(m43_sc2axi_M_AXI_BRESP),
        .m_axi_buser(m43_sc2axi_M_AXI_BUSER),
        .m_axi_bvalid(m43_sc2axi_M_AXI_BVALID),
        .m_axi_rdata(m43_sc2axi_M_AXI_RDATA),
        .m_axi_rid(m43_sc2axi_M_AXI_RID),
        .m_axi_rlast(m43_sc2axi_M_AXI_RLAST),
        .m_axi_rready(m43_sc2axi_M_AXI_RREADY),
        .m_axi_rresp(m43_sc2axi_M_AXI_RRESP),
        .m_axi_ruser(m43_sc2axi_M_AXI_RUSER),
        .m_axi_rvalid(m43_sc2axi_M_AXI_RVALID),
        .m_axi_wdata(m43_sc2axi_M_AXI_WDATA),
        .m_axi_wlast(m43_sc2axi_M_AXI_WLAST),
        .m_axi_wready(m43_sc2axi_M_AXI_WREADY),
        .m_axi_wstrb(m43_sc2axi_M_AXI_WSTRB),
        .m_axi_wuser(m43_sc2axi_M_AXI_WUSER),
        .m_axi_wvalid(m43_sc2axi_M_AXI_WVALID),
        .m_sc_b_info(S_SC_B_45_INFO),
        .m_sc_b_payld(S_SC_B_45_PAYLD),
        .m_sc_b_recv(S_SC_B_45_RECV),
        .m_sc_b_req(S_SC_B_45_REQ),
        .m_sc_b_send(S_SC_B_45_SEND),
        .m_sc_r_info(S_SC_R_45_INFO),
        .m_sc_r_payld(S_SC_R_45_PAYLD),
        .m_sc_r_recv(S_SC_R_45_RECV),
        .m_sc_r_req(S_SC_R_45_REQ),
        .m_sc_r_send(S_SC_R_45_SEND),
        .s_sc_ar_info(m43_nodes_M_SC_AR_INFO),
        .s_sc_ar_payld(m43_nodes_M_SC_AR_PAYLD[179:0]),
        .s_sc_ar_recv(m43_nodes_M_SC_AR_RECV),
        .s_sc_ar_req(m43_nodes_M_SC_AR_REQ),
        .s_sc_ar_send(m43_nodes_M_SC_AR_SEND),
        .s_sc_aw_info(m43_nodes_M_SC_AW_INFO),
        .s_sc_aw_payld(m43_nodes_M_SC_AW_PAYLD[179:0]),
        .s_sc_aw_recv(m43_nodes_M_SC_AW_RECV),
        .s_sc_aw_req(m43_nodes_M_SC_AW_REQ),
        .s_sc_aw_send(m43_nodes_M_SC_AW_SEND),
        .s_sc_w_info(m43_nodes_M_SC_W_INFO),
        .s_sc_w_payld(m43_nodes_M_SC_W_PAYLD[66:0]),
        .s_sc_w_recv(m43_nodes_M_SC_W_RECV),
        .s_sc_w_req(m43_nodes_M_SC_W_REQ),
        .s_sc_w_send(m43_nodes_M_SC_W_SEND));
  m44_exit_pipeline_imp_1D5B450 m44_exit_pipeline
       (.aclk(clk_map_M44_ACLK),
        .aresetn(m_axi_aresetn_44),
        .m_axi_araddr(m44_exit_pipeline_m_axi_ARADDR),
        .m_axi_arprot(m44_exit_pipeline_m_axi_ARPROT),
        .m_axi_arready(m44_exit_pipeline_m_axi_ARREADY),
        .m_axi_arvalid(m44_exit_pipeline_m_axi_ARVALID),
        .m_axi_awaddr(m44_exit_pipeline_m_axi_AWADDR),
        .m_axi_awprot(m44_exit_pipeline_m_axi_AWPROT),
        .m_axi_awready(m44_exit_pipeline_m_axi_AWREADY),
        .m_axi_awvalid(m44_exit_pipeline_m_axi_AWVALID),
        .m_axi_bready(m44_exit_pipeline_m_axi_BREADY),
        .m_axi_bresp(m44_exit_pipeline_m_axi_BRESP),
        .m_axi_bvalid(m44_exit_pipeline_m_axi_BVALID),
        .m_axi_rdata(m44_exit_pipeline_m_axi_RDATA),
        .m_axi_rready(m44_exit_pipeline_m_axi_RREADY),
        .m_axi_rresp(m44_exit_pipeline_m_axi_RRESP),
        .m_axi_rvalid(m44_exit_pipeline_m_axi_RVALID),
        .m_axi_wdata(m44_exit_pipeline_m_axi_WDATA),
        .m_axi_wready(m44_exit_pipeline_m_axi_WREADY),
        .m_axi_wstrb(m44_exit_pipeline_m_axi_WSTRB),
        .m_axi_wvalid(m44_exit_pipeline_m_axi_WVALID),
        .s_axi_araddr(m44_sc2axi_M_AXI_ARADDR),
        .s_axi_arcache(m44_sc2axi_M_AXI_ARCACHE),
        .s_axi_arid(m44_sc2axi_M_AXI_ARID),
        .s_axi_arlen(m44_sc2axi_M_AXI_ARLEN),
        .s_axi_arlock(m44_sc2axi_M_AXI_ARLOCK),
        .s_axi_arprot(m44_sc2axi_M_AXI_ARPROT),
        .s_axi_arqos(m44_sc2axi_M_AXI_ARQOS),
        .s_axi_arready(m44_sc2axi_M_AXI_ARREADY),
        .s_axi_aruser(m44_sc2axi_M_AXI_ARUSER),
        .s_axi_arvalid(m44_sc2axi_M_AXI_ARVALID),
        .s_axi_awaddr(m44_sc2axi_M_AXI_AWADDR),
        .s_axi_awcache(m44_sc2axi_M_AXI_AWCACHE),
        .s_axi_awid(m44_sc2axi_M_AXI_AWID),
        .s_axi_awlen(m44_sc2axi_M_AXI_AWLEN),
        .s_axi_awlock(m44_sc2axi_M_AXI_AWLOCK),
        .s_axi_awprot(m44_sc2axi_M_AXI_AWPROT),
        .s_axi_awqos(m44_sc2axi_M_AXI_AWQOS),
        .s_axi_awready(m44_sc2axi_M_AXI_AWREADY),
        .s_axi_awuser(m44_sc2axi_M_AXI_AWUSER),
        .s_axi_awvalid(m44_sc2axi_M_AXI_AWVALID),
        .s_axi_bid(m44_sc2axi_M_AXI_BID),
        .s_axi_bready(m44_sc2axi_M_AXI_BREADY),
        .s_axi_bresp(m44_sc2axi_M_AXI_BRESP),
        .s_axi_buser(m44_sc2axi_M_AXI_BUSER),
        .s_axi_bvalid(m44_sc2axi_M_AXI_BVALID),
        .s_axi_rdata(m44_sc2axi_M_AXI_RDATA),
        .s_axi_rid(m44_sc2axi_M_AXI_RID),
        .s_axi_rlast(m44_sc2axi_M_AXI_RLAST),
        .s_axi_rready(m44_sc2axi_M_AXI_RREADY),
        .s_axi_rresp(m44_sc2axi_M_AXI_RRESP),
        .s_axi_ruser(m44_sc2axi_M_AXI_RUSER),
        .s_axi_rvalid(m44_sc2axi_M_AXI_RVALID),
        .s_axi_wdata(m44_sc2axi_M_AXI_WDATA),
        .s_axi_wlast(m44_sc2axi_M_AXI_WLAST),
        .s_axi_wready(m44_sc2axi_M_AXI_WREADY),
        .s_axi_wstrb(m44_sc2axi_M_AXI_WSTRB),
        .s_axi_wuser(m44_sc2axi_M_AXI_WUSER),
        .s_axi_wvalid(m44_sc2axi_M_AXI_WVALID));
  m44_nodes_imp_CTQIYB m44_nodes
       (.M_SC_AR_info(m44_nodes_M_SC_AR_INFO),
        .M_SC_AR_payld(m44_nodes_M_SC_AR_PAYLD),
        .M_SC_AR_recv(m44_nodes_M_SC_AR_RECV),
        .M_SC_AR_req(m44_nodes_M_SC_AR_REQ),
        .M_SC_AR_send(m44_nodes_M_SC_AR_SEND),
        .M_SC_AW_info(m44_nodes_M_SC_AW_INFO),
        .M_SC_AW_payld(m44_nodes_M_SC_AW_PAYLD),
        .M_SC_AW_recv(m44_nodes_M_SC_AW_RECV),
        .M_SC_AW_req(m44_nodes_M_SC_AW_REQ),
        .M_SC_AW_send(m44_nodes_M_SC_AW_SEND),
        .M_SC_B_info(m44_nodes_M_SC_B_INFO),
        .M_SC_B_payld(m44_nodes_M_SC_B_PAYLD),
        .M_SC_B_recv(m44_nodes_M_SC_B_RECV),
        .M_SC_B_req(m44_nodes_M_SC_B_REQ),
        .M_SC_B_send(m44_nodes_M_SC_B_SEND),
        .M_SC_R_info(m44_nodes_M_SC_R_INFO),
        .M_SC_R_payld(m44_nodes_M_SC_R_PAYLD),
        .M_SC_R_recv(m44_nodes_M_SC_R_RECV),
        .M_SC_R_req(m44_nodes_M_SC_R_REQ),
        .M_SC_R_send(m44_nodes_M_SC_R_SEND),
        .M_SC_W_info(m44_nodes_M_SC_W_INFO),
        .M_SC_W_payld(m44_nodes_M_SC_W_PAYLD),
        .M_SC_W_recv(m44_nodes_M_SC_W_RECV),
        .M_SC_W_req(m44_nodes_M_SC_W_REQ),
        .M_SC_W_send(m44_nodes_M_SC_W_SEND),
        .S_SC_AR_info(S_SC_AR_46_INFO),
        .S_SC_AR_payld(S_SC_AR_46_PAYLD),
        .S_SC_AR_recv(S_SC_AR_46_RECV),
        .S_SC_AR_req(S_SC_AR_46_REQ),
        .S_SC_AR_send(S_SC_AR_46_SEND),
        .S_SC_AW_info(S_SC_AW_46_INFO),
        .S_SC_AW_payld(S_SC_AW_46_PAYLD),
        .S_SC_AW_recv(S_SC_AW_46_RECV),
        .S_SC_AW_req(S_SC_AW_46_REQ),
        .S_SC_AW_send(S_SC_AW_46_SEND),
        .S_SC_B_info(S_SC_B_46_INFO),
        .S_SC_B_payld(S_SC_B_46_PAYLD),
        .S_SC_B_recv(S_SC_B_46_RECV),
        .S_SC_B_req(S_SC_B_46_REQ),
        .S_SC_B_send(S_SC_B_46_SEND),
        .S_SC_R_info(S_SC_R_46_INFO),
        .S_SC_R_payld(S_SC_R_46_PAYLD),
        .S_SC_R_recv(S_SC_R_46_RECV),
        .S_SC_R_req(S_SC_R_46_REQ),
        .S_SC_R_send(S_SC_R_46_SEND),
        .S_SC_W_info(S_SC_W_46_INFO),
        .S_SC_W_payld(S_SC_W_46_PAYLD),
        .S_SC_W_recv(S_SC_W_46_RECV),
        .S_SC_W_req(S_SC_W_46_REQ),
        .S_SC_W_send(S_SC_W_46_SEND),
        .m_axi_aclk(clk_map_M44_ACLK),
        .m_axi_aresetn(m_axi_aresetn_44),
        .s_axi_aclk(clk_map_M00_ACLK),
        .s_axi_aresetn(clk_map_M00_ARESETN));
  bd_afc3_m44s2a_0 m44_sc2axi
       (.aclk(clk_map_M44_ACLK),
        .m_axi_araddr(m44_sc2axi_M_AXI_ARADDR),
        .m_axi_arcache(m44_sc2axi_M_AXI_ARCACHE),
        .m_axi_arid(m44_sc2axi_M_AXI_ARID),
        .m_axi_arlen(m44_sc2axi_M_AXI_ARLEN),
        .m_axi_arlock(m44_sc2axi_M_AXI_ARLOCK),
        .m_axi_arprot(m44_sc2axi_M_AXI_ARPROT),
        .m_axi_arqos(m44_sc2axi_M_AXI_ARQOS),
        .m_axi_arready(m44_sc2axi_M_AXI_ARREADY),
        .m_axi_aruser(m44_sc2axi_M_AXI_ARUSER),
        .m_axi_arvalid(m44_sc2axi_M_AXI_ARVALID),
        .m_axi_awaddr(m44_sc2axi_M_AXI_AWADDR),
        .m_axi_awcache(m44_sc2axi_M_AXI_AWCACHE),
        .m_axi_awid(m44_sc2axi_M_AXI_AWID),
        .m_axi_awlen(m44_sc2axi_M_AXI_AWLEN),
        .m_axi_awlock(m44_sc2axi_M_AXI_AWLOCK),
        .m_axi_awprot(m44_sc2axi_M_AXI_AWPROT),
        .m_axi_awqos(m44_sc2axi_M_AXI_AWQOS),
        .m_axi_awready(m44_sc2axi_M_AXI_AWREADY),
        .m_axi_awuser(m44_sc2axi_M_AXI_AWUSER),
        .m_axi_awvalid(m44_sc2axi_M_AXI_AWVALID),
        .m_axi_bid(m44_sc2axi_M_AXI_BID),
        .m_axi_bready(m44_sc2axi_M_AXI_BREADY),
        .m_axi_bresp(m44_sc2axi_M_AXI_BRESP),
        .m_axi_buser(m44_sc2axi_M_AXI_BUSER),
        .m_axi_bvalid(m44_sc2axi_M_AXI_BVALID),
        .m_axi_rdata(m44_sc2axi_M_AXI_RDATA),
        .m_axi_rid(m44_sc2axi_M_AXI_RID),
        .m_axi_rlast(m44_sc2axi_M_AXI_RLAST),
        .m_axi_rready(m44_sc2axi_M_AXI_RREADY),
        .m_axi_rresp(m44_sc2axi_M_AXI_RRESP),
        .m_axi_ruser(m44_sc2axi_M_AXI_RUSER),
        .m_axi_rvalid(m44_sc2axi_M_AXI_RVALID),
        .m_axi_wdata(m44_sc2axi_M_AXI_WDATA),
        .m_axi_wlast(m44_sc2axi_M_AXI_WLAST),
        .m_axi_wready(m44_sc2axi_M_AXI_WREADY),
        .m_axi_wstrb(m44_sc2axi_M_AXI_WSTRB),
        .m_axi_wuser(m44_sc2axi_M_AXI_WUSER),
        .m_axi_wvalid(m44_sc2axi_M_AXI_WVALID),
        .m_sc_b_info(S_SC_B_46_INFO),
        .m_sc_b_payld(S_SC_B_46_PAYLD),
        .m_sc_b_recv(S_SC_B_46_RECV),
        .m_sc_b_req(S_SC_B_46_REQ),
        .m_sc_b_send(S_SC_B_46_SEND),
        .m_sc_r_info(S_SC_R_46_INFO),
        .m_sc_r_payld(S_SC_R_46_PAYLD),
        .m_sc_r_recv(S_SC_R_46_RECV),
        .m_sc_r_req(S_SC_R_46_REQ),
        .m_sc_r_send(S_SC_R_46_SEND),
        .s_sc_ar_info(m44_nodes_M_SC_AR_INFO),
        .s_sc_ar_payld(m44_nodes_M_SC_AR_PAYLD[179:0]),
        .s_sc_ar_recv(m44_nodes_M_SC_AR_RECV),
        .s_sc_ar_req(m44_nodes_M_SC_AR_REQ),
        .s_sc_ar_send(m44_nodes_M_SC_AR_SEND),
        .s_sc_aw_info(m44_nodes_M_SC_AW_INFO),
        .s_sc_aw_payld(m44_nodes_M_SC_AW_PAYLD[179:0]),
        .s_sc_aw_recv(m44_nodes_M_SC_AW_RECV),
        .s_sc_aw_req(m44_nodes_M_SC_AW_REQ),
        .s_sc_aw_send(m44_nodes_M_SC_AW_SEND),
        .s_sc_w_info(m44_nodes_M_SC_W_INFO),
        .s_sc_w_payld(m44_nodes_M_SC_W_PAYLD[66:0]),
        .s_sc_w_recv(m44_nodes_M_SC_W_RECV),
        .s_sc_w_req(m44_nodes_M_SC_W_REQ),
        .s_sc_w_send(m44_nodes_M_SC_W_SEND));
  m45_exit_pipeline_imp_1A2HD2S m45_exit_pipeline
       (.aclk(clk_map_M45_ACLK),
        .aresetn(m_axi_aresetn_45),
        .m_axi_araddr(m45_exit_pipeline_m_axi_ARADDR),
        .m_axi_arprot(m45_exit_pipeline_m_axi_ARPROT),
        .m_axi_arready(m45_exit_pipeline_m_axi_ARREADY),
        .m_axi_arvalid(m45_exit_pipeline_m_axi_ARVALID),
        .m_axi_awaddr(m45_exit_pipeline_m_axi_AWADDR),
        .m_axi_awprot(m45_exit_pipeline_m_axi_AWPROT),
        .m_axi_awready(m45_exit_pipeline_m_axi_AWREADY),
        .m_axi_awvalid(m45_exit_pipeline_m_axi_AWVALID),
        .m_axi_bready(m45_exit_pipeline_m_axi_BREADY),
        .m_axi_bresp(m45_exit_pipeline_m_axi_BRESP),
        .m_axi_bvalid(m45_exit_pipeline_m_axi_BVALID),
        .m_axi_rdata(m45_exit_pipeline_m_axi_RDATA),
        .m_axi_rready(m45_exit_pipeline_m_axi_RREADY),
        .m_axi_rresp(m45_exit_pipeline_m_axi_RRESP),
        .m_axi_rvalid(m45_exit_pipeline_m_axi_RVALID),
        .m_axi_wdata(m45_exit_pipeline_m_axi_WDATA),
        .m_axi_wready(m45_exit_pipeline_m_axi_WREADY),
        .m_axi_wstrb(m45_exit_pipeline_m_axi_WSTRB),
        .m_axi_wvalid(m45_exit_pipeline_m_axi_WVALID),
        .s_axi_araddr(m45_sc2axi_M_AXI_ARADDR),
        .s_axi_arcache(m45_sc2axi_M_AXI_ARCACHE),
        .s_axi_arid(m45_sc2axi_M_AXI_ARID),
        .s_axi_arlen(m45_sc2axi_M_AXI_ARLEN),
        .s_axi_arlock(m45_sc2axi_M_AXI_ARLOCK),
        .s_axi_arprot(m45_sc2axi_M_AXI_ARPROT),
        .s_axi_arqos(m45_sc2axi_M_AXI_ARQOS),
        .s_axi_arready(m45_sc2axi_M_AXI_ARREADY),
        .s_axi_aruser(m45_sc2axi_M_AXI_ARUSER),
        .s_axi_arvalid(m45_sc2axi_M_AXI_ARVALID),
        .s_axi_awaddr(m45_sc2axi_M_AXI_AWADDR),
        .s_axi_awcache(m45_sc2axi_M_AXI_AWCACHE),
        .s_axi_awid(m45_sc2axi_M_AXI_AWID),
        .s_axi_awlen(m45_sc2axi_M_AXI_AWLEN),
        .s_axi_awlock(m45_sc2axi_M_AXI_AWLOCK),
        .s_axi_awprot(m45_sc2axi_M_AXI_AWPROT),
        .s_axi_awqos(m45_sc2axi_M_AXI_AWQOS),
        .s_axi_awready(m45_sc2axi_M_AXI_AWREADY),
        .s_axi_awuser(m45_sc2axi_M_AXI_AWUSER),
        .s_axi_awvalid(m45_sc2axi_M_AXI_AWVALID),
        .s_axi_bid(m45_sc2axi_M_AXI_BID),
        .s_axi_bready(m45_sc2axi_M_AXI_BREADY),
        .s_axi_bresp(m45_sc2axi_M_AXI_BRESP),
        .s_axi_buser(m45_sc2axi_M_AXI_BUSER),
        .s_axi_bvalid(m45_sc2axi_M_AXI_BVALID),
        .s_axi_rdata(m45_sc2axi_M_AXI_RDATA),
        .s_axi_rid(m45_sc2axi_M_AXI_RID),
        .s_axi_rlast(m45_sc2axi_M_AXI_RLAST),
        .s_axi_rready(m45_sc2axi_M_AXI_RREADY),
        .s_axi_rresp(m45_sc2axi_M_AXI_RRESP),
        .s_axi_ruser(m45_sc2axi_M_AXI_RUSER),
        .s_axi_rvalid(m45_sc2axi_M_AXI_RVALID),
        .s_axi_wdata(m45_sc2axi_M_AXI_WDATA),
        .s_axi_wlast(m45_sc2axi_M_AXI_WLAST),
        .s_axi_wready(m45_sc2axi_M_AXI_WREADY),
        .s_axi_wstrb(m45_sc2axi_M_AXI_WSTRB),
        .s_axi_wuser(m45_sc2axi_M_AXI_WUSER),
        .s_axi_wvalid(m45_sc2axi_M_AXI_WVALID));
  m45_nodes_imp_1DQ3F9H m45_nodes
       (.M_SC_AR_info(m45_nodes_M_SC_AR_INFO),
        .M_SC_AR_payld(m45_nodes_M_SC_AR_PAYLD),
        .M_SC_AR_recv(m45_nodes_M_SC_AR_RECV),
        .M_SC_AR_req(m45_nodes_M_SC_AR_REQ),
        .M_SC_AR_send(m45_nodes_M_SC_AR_SEND),
        .M_SC_AW_info(m45_nodes_M_SC_AW_INFO),
        .M_SC_AW_payld(m45_nodes_M_SC_AW_PAYLD),
        .M_SC_AW_recv(m45_nodes_M_SC_AW_RECV),
        .M_SC_AW_req(m45_nodes_M_SC_AW_REQ),
        .M_SC_AW_send(m45_nodes_M_SC_AW_SEND),
        .M_SC_B_info(m45_nodes_M_SC_B_INFO),
        .M_SC_B_payld(m45_nodes_M_SC_B_PAYLD),
        .M_SC_B_recv(m45_nodes_M_SC_B_RECV),
        .M_SC_B_req(m45_nodes_M_SC_B_REQ),
        .M_SC_B_send(m45_nodes_M_SC_B_SEND),
        .M_SC_R_info(m45_nodes_M_SC_R_INFO),
        .M_SC_R_payld(m45_nodes_M_SC_R_PAYLD),
        .M_SC_R_recv(m45_nodes_M_SC_R_RECV),
        .M_SC_R_req(m45_nodes_M_SC_R_REQ),
        .M_SC_R_send(m45_nodes_M_SC_R_SEND),
        .M_SC_W_info(m45_nodes_M_SC_W_INFO),
        .M_SC_W_payld(m45_nodes_M_SC_W_PAYLD),
        .M_SC_W_recv(m45_nodes_M_SC_W_RECV),
        .M_SC_W_req(m45_nodes_M_SC_W_REQ),
        .M_SC_W_send(m45_nodes_M_SC_W_SEND),
        .S_SC_AR_info(S_SC_AR_47_INFO),
        .S_SC_AR_payld(S_SC_AR_47_PAYLD),
        .S_SC_AR_recv(S_SC_AR_47_RECV),
        .S_SC_AR_req(S_SC_AR_47_REQ),
        .S_SC_AR_send(S_SC_AR_47_SEND),
        .S_SC_AW_info(S_SC_AW_47_INFO),
        .S_SC_AW_payld(S_SC_AW_47_PAYLD),
        .S_SC_AW_recv(S_SC_AW_47_RECV),
        .S_SC_AW_req(S_SC_AW_47_REQ),
        .S_SC_AW_send(S_SC_AW_47_SEND),
        .S_SC_B_info(S_SC_B_47_INFO),
        .S_SC_B_payld(S_SC_B_47_PAYLD),
        .S_SC_B_recv(S_SC_B_47_RECV),
        .S_SC_B_req(S_SC_B_47_REQ),
        .S_SC_B_send(S_SC_B_47_SEND),
        .S_SC_R_info(S_SC_R_47_INFO),
        .S_SC_R_payld(S_SC_R_47_PAYLD),
        .S_SC_R_recv(S_SC_R_47_RECV),
        .S_SC_R_req(S_SC_R_47_REQ),
        .S_SC_R_send(S_SC_R_47_SEND),
        .S_SC_W_info(S_SC_W_47_INFO),
        .S_SC_W_payld(S_SC_W_47_PAYLD),
        .S_SC_W_recv(S_SC_W_47_RECV),
        .S_SC_W_req(S_SC_W_47_REQ),
        .S_SC_W_send(S_SC_W_47_SEND),
        .m_axi_aclk(clk_map_M45_ACLK),
        .m_axi_aresetn(m_axi_aresetn_45),
        .s_axi_aclk(clk_map_M00_ACLK),
        .s_axi_aresetn(clk_map_M00_ARESETN));
  bd_afc3_m45s2a_0 m45_sc2axi
       (.aclk(clk_map_M45_ACLK),
        .m_axi_araddr(m45_sc2axi_M_AXI_ARADDR),
        .m_axi_arcache(m45_sc2axi_M_AXI_ARCACHE),
        .m_axi_arid(m45_sc2axi_M_AXI_ARID),
        .m_axi_arlen(m45_sc2axi_M_AXI_ARLEN),
        .m_axi_arlock(m45_sc2axi_M_AXI_ARLOCK),
        .m_axi_arprot(m45_sc2axi_M_AXI_ARPROT),
        .m_axi_arqos(m45_sc2axi_M_AXI_ARQOS),
        .m_axi_arready(m45_sc2axi_M_AXI_ARREADY),
        .m_axi_aruser(m45_sc2axi_M_AXI_ARUSER),
        .m_axi_arvalid(m45_sc2axi_M_AXI_ARVALID),
        .m_axi_awaddr(m45_sc2axi_M_AXI_AWADDR),
        .m_axi_awcache(m45_sc2axi_M_AXI_AWCACHE),
        .m_axi_awid(m45_sc2axi_M_AXI_AWID),
        .m_axi_awlen(m45_sc2axi_M_AXI_AWLEN),
        .m_axi_awlock(m45_sc2axi_M_AXI_AWLOCK),
        .m_axi_awprot(m45_sc2axi_M_AXI_AWPROT),
        .m_axi_awqos(m45_sc2axi_M_AXI_AWQOS),
        .m_axi_awready(m45_sc2axi_M_AXI_AWREADY),
        .m_axi_awuser(m45_sc2axi_M_AXI_AWUSER),
        .m_axi_awvalid(m45_sc2axi_M_AXI_AWVALID),
        .m_axi_bid(m45_sc2axi_M_AXI_BID),
        .m_axi_bready(m45_sc2axi_M_AXI_BREADY),
        .m_axi_bresp(m45_sc2axi_M_AXI_BRESP),
        .m_axi_buser(m45_sc2axi_M_AXI_BUSER),
        .m_axi_bvalid(m45_sc2axi_M_AXI_BVALID),
        .m_axi_rdata(m45_sc2axi_M_AXI_RDATA),
        .m_axi_rid(m45_sc2axi_M_AXI_RID),
        .m_axi_rlast(m45_sc2axi_M_AXI_RLAST),
        .m_axi_rready(m45_sc2axi_M_AXI_RREADY),
        .m_axi_rresp(m45_sc2axi_M_AXI_RRESP),
        .m_axi_ruser(m45_sc2axi_M_AXI_RUSER),
        .m_axi_rvalid(m45_sc2axi_M_AXI_RVALID),
        .m_axi_wdata(m45_sc2axi_M_AXI_WDATA),
        .m_axi_wlast(m45_sc2axi_M_AXI_WLAST),
        .m_axi_wready(m45_sc2axi_M_AXI_WREADY),
        .m_axi_wstrb(m45_sc2axi_M_AXI_WSTRB),
        .m_axi_wuser(m45_sc2axi_M_AXI_WUSER),
        .m_axi_wvalid(m45_sc2axi_M_AXI_WVALID),
        .m_sc_b_info(S_SC_B_47_INFO),
        .m_sc_b_payld(S_SC_B_47_PAYLD),
        .m_sc_b_recv(S_SC_B_47_RECV),
        .m_sc_b_req(S_SC_B_47_REQ),
        .m_sc_b_send(S_SC_B_47_SEND),
        .m_sc_r_info(S_SC_R_47_INFO),
        .m_sc_r_payld(S_SC_R_47_PAYLD),
        .m_sc_r_recv(S_SC_R_47_RECV),
        .m_sc_r_req(S_SC_R_47_REQ),
        .m_sc_r_send(S_SC_R_47_SEND),
        .s_sc_ar_info(m45_nodes_M_SC_AR_INFO),
        .s_sc_ar_payld(m45_nodes_M_SC_AR_PAYLD[179:0]),
        .s_sc_ar_recv(m45_nodes_M_SC_AR_RECV),
        .s_sc_ar_req(m45_nodes_M_SC_AR_REQ),
        .s_sc_ar_send(m45_nodes_M_SC_AR_SEND),
        .s_sc_aw_info(m45_nodes_M_SC_AW_INFO),
        .s_sc_aw_payld(m45_nodes_M_SC_AW_PAYLD[179:0]),
        .s_sc_aw_recv(m45_nodes_M_SC_AW_RECV),
        .s_sc_aw_req(m45_nodes_M_SC_AW_REQ),
        .s_sc_aw_send(m45_nodes_M_SC_AW_SEND),
        .s_sc_w_info(m45_nodes_M_SC_W_INFO),
        .s_sc_w_payld(m45_nodes_M_SC_W_PAYLD[66:0]),
        .s_sc_w_recv(m45_nodes_M_SC_W_RECV),
        .s_sc_w_req(m45_nodes_M_SC_W_REQ),
        .s_sc_w_send(m45_nodes_M_SC_W_SEND));
  m46_exit_pipeline_imp_188N704 m46_exit_pipeline
       (.aclk(clk_map_M46_ACLK),
        .aresetn(m_axi_aresetn_46),
        .m_axi_araddr(m46_exit_pipeline_m_axi_ARADDR),
        .m_axi_arprot(m46_exit_pipeline_m_axi_ARPROT),
        .m_axi_arready(m46_exit_pipeline_m_axi_ARREADY),
        .m_axi_arvalid(m46_exit_pipeline_m_axi_ARVALID),
        .m_axi_awaddr(m46_exit_pipeline_m_axi_AWADDR),
        .m_axi_awprot(m46_exit_pipeline_m_axi_AWPROT),
        .m_axi_awready(m46_exit_pipeline_m_axi_AWREADY),
        .m_axi_awvalid(m46_exit_pipeline_m_axi_AWVALID),
        .m_axi_bready(m46_exit_pipeline_m_axi_BREADY),
        .m_axi_bresp(m46_exit_pipeline_m_axi_BRESP),
        .m_axi_bvalid(m46_exit_pipeline_m_axi_BVALID),
        .m_axi_rdata(m46_exit_pipeline_m_axi_RDATA),
        .m_axi_rready(m46_exit_pipeline_m_axi_RREADY),
        .m_axi_rresp(m46_exit_pipeline_m_axi_RRESP),
        .m_axi_rvalid(m46_exit_pipeline_m_axi_RVALID),
        .m_axi_wdata(m46_exit_pipeline_m_axi_WDATA),
        .m_axi_wready(m46_exit_pipeline_m_axi_WREADY),
        .m_axi_wstrb(m46_exit_pipeline_m_axi_WSTRB),
        .m_axi_wvalid(m46_exit_pipeline_m_axi_WVALID),
        .s_axi_araddr(m46_sc2axi_M_AXI_ARADDR),
        .s_axi_arcache(m46_sc2axi_M_AXI_ARCACHE),
        .s_axi_arid(m46_sc2axi_M_AXI_ARID),
        .s_axi_arlen(m46_sc2axi_M_AXI_ARLEN),
        .s_axi_arlock(m46_sc2axi_M_AXI_ARLOCK),
        .s_axi_arprot(m46_sc2axi_M_AXI_ARPROT),
        .s_axi_arqos(m46_sc2axi_M_AXI_ARQOS),
        .s_axi_arready(m46_sc2axi_M_AXI_ARREADY),
        .s_axi_aruser(m46_sc2axi_M_AXI_ARUSER),
        .s_axi_arvalid(m46_sc2axi_M_AXI_ARVALID),
        .s_axi_awaddr(m46_sc2axi_M_AXI_AWADDR),
        .s_axi_awcache(m46_sc2axi_M_AXI_AWCACHE),
        .s_axi_awid(m46_sc2axi_M_AXI_AWID),
        .s_axi_awlen(m46_sc2axi_M_AXI_AWLEN),
        .s_axi_awlock(m46_sc2axi_M_AXI_AWLOCK),
        .s_axi_awprot(m46_sc2axi_M_AXI_AWPROT),
        .s_axi_awqos(m46_sc2axi_M_AXI_AWQOS),
        .s_axi_awready(m46_sc2axi_M_AXI_AWREADY),
        .s_axi_awuser(m46_sc2axi_M_AXI_AWUSER),
        .s_axi_awvalid(m46_sc2axi_M_AXI_AWVALID),
        .s_axi_bid(m46_sc2axi_M_AXI_BID),
        .s_axi_bready(m46_sc2axi_M_AXI_BREADY),
        .s_axi_bresp(m46_sc2axi_M_AXI_BRESP),
        .s_axi_buser(m46_sc2axi_M_AXI_BUSER),
        .s_axi_bvalid(m46_sc2axi_M_AXI_BVALID),
        .s_axi_rdata(m46_sc2axi_M_AXI_RDATA),
        .s_axi_rid(m46_sc2axi_M_AXI_RID),
        .s_axi_rlast(m46_sc2axi_M_AXI_RLAST),
        .s_axi_rready(m46_sc2axi_M_AXI_RREADY),
        .s_axi_rresp(m46_sc2axi_M_AXI_RRESP),
        .s_axi_ruser(m46_sc2axi_M_AXI_RUSER),
        .s_axi_rvalid(m46_sc2axi_M_AXI_RVALID),
        .s_axi_wdata(m46_sc2axi_M_AXI_WDATA),
        .s_axi_wlast(m46_sc2axi_M_AXI_WLAST),
        .s_axi_wready(m46_sc2axi_M_AXI_WREADY),
        .s_axi_wstrb(m46_sc2axi_M_AXI_WSTRB),
        .s_axi_wuser(m46_sc2axi_M_AXI_WUSER),
        .s_axi_wvalid(m46_sc2axi_M_AXI_WVALID));
  m46_nodes_imp_1LJ27Z2 m46_nodes
       (.M_SC_AR_info(m46_nodes_M_SC_AR_INFO),
        .M_SC_AR_payld(m46_nodes_M_SC_AR_PAYLD),
        .M_SC_AR_recv(m46_nodes_M_SC_AR_RECV),
        .M_SC_AR_req(m46_nodes_M_SC_AR_REQ),
        .M_SC_AR_send(m46_nodes_M_SC_AR_SEND),
        .M_SC_AW_info(m46_nodes_M_SC_AW_INFO),
        .M_SC_AW_payld(m46_nodes_M_SC_AW_PAYLD),
        .M_SC_AW_recv(m46_nodes_M_SC_AW_RECV),
        .M_SC_AW_req(m46_nodes_M_SC_AW_REQ),
        .M_SC_AW_send(m46_nodes_M_SC_AW_SEND),
        .M_SC_B_info(m46_nodes_M_SC_B_INFO),
        .M_SC_B_payld(m46_nodes_M_SC_B_PAYLD),
        .M_SC_B_recv(m46_nodes_M_SC_B_RECV),
        .M_SC_B_req(m46_nodes_M_SC_B_REQ),
        .M_SC_B_send(m46_nodes_M_SC_B_SEND),
        .M_SC_R_info(m46_nodes_M_SC_R_INFO),
        .M_SC_R_payld(m46_nodes_M_SC_R_PAYLD),
        .M_SC_R_recv(m46_nodes_M_SC_R_RECV),
        .M_SC_R_req(m46_nodes_M_SC_R_REQ),
        .M_SC_R_send(m46_nodes_M_SC_R_SEND),
        .M_SC_W_info(m46_nodes_M_SC_W_INFO),
        .M_SC_W_payld(m46_nodes_M_SC_W_PAYLD),
        .M_SC_W_recv(m46_nodes_M_SC_W_RECV),
        .M_SC_W_req(m46_nodes_M_SC_W_REQ),
        .M_SC_W_send(m46_nodes_M_SC_W_SEND),
        .S_SC_AR_info(S_SC_AR_48_INFO),
        .S_SC_AR_payld(S_SC_AR_48_PAYLD),
        .S_SC_AR_recv(S_SC_AR_48_RECV),
        .S_SC_AR_req(S_SC_AR_48_REQ),
        .S_SC_AR_send(S_SC_AR_48_SEND),
        .S_SC_AW_info(S_SC_AW_48_INFO),
        .S_SC_AW_payld(S_SC_AW_48_PAYLD),
        .S_SC_AW_recv(S_SC_AW_48_RECV),
        .S_SC_AW_req(S_SC_AW_48_REQ),
        .S_SC_AW_send(S_SC_AW_48_SEND),
        .S_SC_B_info(S_SC_B_48_INFO),
        .S_SC_B_payld(S_SC_B_48_PAYLD),
        .S_SC_B_recv(S_SC_B_48_RECV),
        .S_SC_B_req(S_SC_B_48_REQ),
        .S_SC_B_send(S_SC_B_48_SEND),
        .S_SC_R_info(S_SC_R_48_INFO),
        .S_SC_R_payld(S_SC_R_48_PAYLD),
        .S_SC_R_recv(S_SC_R_48_RECV),
        .S_SC_R_req(S_SC_R_48_REQ),
        .S_SC_R_send(S_SC_R_48_SEND),
        .S_SC_W_info(S_SC_W_48_INFO),
        .S_SC_W_payld(S_SC_W_48_PAYLD),
        .S_SC_W_recv(S_SC_W_48_RECV),
        .S_SC_W_req(S_SC_W_48_REQ),
        .S_SC_W_send(S_SC_W_48_SEND),
        .m_axi_aclk(clk_map_M46_ACLK),
        .m_axi_aresetn(m_axi_aresetn_46),
        .s_axi_aclk(clk_map_M00_ACLK),
        .s_axi_aresetn(clk_map_M00_ARESETN));
  bd_afc3_m46s2a_0 m46_sc2axi
       (.aclk(clk_map_M46_ACLK),
        .m_axi_araddr(m46_sc2axi_M_AXI_ARADDR),
        .m_axi_arcache(m46_sc2axi_M_AXI_ARCACHE),
        .m_axi_arid(m46_sc2axi_M_AXI_ARID),
        .m_axi_arlen(m46_sc2axi_M_AXI_ARLEN),
        .m_axi_arlock(m46_sc2axi_M_AXI_ARLOCK),
        .m_axi_arprot(m46_sc2axi_M_AXI_ARPROT),
        .m_axi_arqos(m46_sc2axi_M_AXI_ARQOS),
        .m_axi_arready(m46_sc2axi_M_AXI_ARREADY),
        .m_axi_aruser(m46_sc2axi_M_AXI_ARUSER),
        .m_axi_arvalid(m46_sc2axi_M_AXI_ARVALID),
        .m_axi_awaddr(m46_sc2axi_M_AXI_AWADDR),
        .m_axi_awcache(m46_sc2axi_M_AXI_AWCACHE),
        .m_axi_awid(m46_sc2axi_M_AXI_AWID),
        .m_axi_awlen(m46_sc2axi_M_AXI_AWLEN),
        .m_axi_awlock(m46_sc2axi_M_AXI_AWLOCK),
        .m_axi_awprot(m46_sc2axi_M_AXI_AWPROT),
        .m_axi_awqos(m46_sc2axi_M_AXI_AWQOS),
        .m_axi_awready(m46_sc2axi_M_AXI_AWREADY),
        .m_axi_awuser(m46_sc2axi_M_AXI_AWUSER),
        .m_axi_awvalid(m46_sc2axi_M_AXI_AWVALID),
        .m_axi_bid(m46_sc2axi_M_AXI_BID),
        .m_axi_bready(m46_sc2axi_M_AXI_BREADY),
        .m_axi_bresp(m46_sc2axi_M_AXI_BRESP),
        .m_axi_buser(m46_sc2axi_M_AXI_BUSER),
        .m_axi_bvalid(m46_sc2axi_M_AXI_BVALID),
        .m_axi_rdata(m46_sc2axi_M_AXI_RDATA),
        .m_axi_rid(m46_sc2axi_M_AXI_RID),
        .m_axi_rlast(m46_sc2axi_M_AXI_RLAST),
        .m_axi_rready(m46_sc2axi_M_AXI_RREADY),
        .m_axi_rresp(m46_sc2axi_M_AXI_RRESP),
        .m_axi_ruser(m46_sc2axi_M_AXI_RUSER),
        .m_axi_rvalid(m46_sc2axi_M_AXI_RVALID),
        .m_axi_wdata(m46_sc2axi_M_AXI_WDATA),
        .m_axi_wlast(m46_sc2axi_M_AXI_WLAST),
        .m_axi_wready(m46_sc2axi_M_AXI_WREADY),
        .m_axi_wstrb(m46_sc2axi_M_AXI_WSTRB),
        .m_axi_wuser(m46_sc2axi_M_AXI_WUSER),
        .m_axi_wvalid(m46_sc2axi_M_AXI_WVALID),
        .m_sc_b_info(S_SC_B_48_INFO),
        .m_sc_b_payld(S_SC_B_48_PAYLD),
        .m_sc_b_recv(S_SC_B_48_RECV),
        .m_sc_b_req(S_SC_B_48_REQ),
        .m_sc_b_send(S_SC_B_48_SEND),
        .m_sc_r_info(S_SC_R_48_INFO),
        .m_sc_r_payld(S_SC_R_48_PAYLD),
        .m_sc_r_recv(S_SC_R_48_RECV),
        .m_sc_r_req(S_SC_R_48_REQ),
        .m_sc_r_send(S_SC_R_48_SEND),
        .s_sc_ar_info(m46_nodes_M_SC_AR_INFO),
        .s_sc_ar_payld(m46_nodes_M_SC_AR_PAYLD[179:0]),
        .s_sc_ar_recv(m46_nodes_M_SC_AR_RECV),
        .s_sc_ar_req(m46_nodes_M_SC_AR_REQ),
        .s_sc_ar_send(m46_nodes_M_SC_AR_SEND),
        .s_sc_aw_info(m46_nodes_M_SC_AW_INFO),
        .s_sc_aw_payld(m46_nodes_M_SC_AW_PAYLD[179:0]),
        .s_sc_aw_recv(m46_nodes_M_SC_AW_RECV),
        .s_sc_aw_req(m46_nodes_M_SC_AW_REQ),
        .s_sc_aw_send(m46_nodes_M_SC_AW_SEND),
        .s_sc_w_info(m46_nodes_M_SC_W_INFO),
        .s_sc_w_payld(m46_nodes_M_SC_W_PAYLD[66:0]),
        .s_sc_w_recv(m46_nodes_M_SC_W_RECV),
        .s_sc_w_req(m46_nodes_M_SC_W_REQ),
        .s_sc_w_send(m46_nodes_M_SC_W_SEND));
  m47_exit_pipeline_imp_11TZ0TW m47_exit_pipeline
       (.aclk(clk_map_M47_ACLK),
        .aresetn(m_axi_aresetn_47),
        .m_axi_araddr(m47_exit_pipeline_m_axi_ARADDR),
        .m_axi_arprot(m47_exit_pipeline_m_axi_ARPROT),
        .m_axi_arready(m47_exit_pipeline_m_axi_ARREADY),
        .m_axi_arvalid(m47_exit_pipeline_m_axi_ARVALID),
        .m_axi_awaddr(m47_exit_pipeline_m_axi_AWADDR),
        .m_axi_awprot(m47_exit_pipeline_m_axi_AWPROT),
        .m_axi_awready(m47_exit_pipeline_m_axi_AWREADY),
        .m_axi_awvalid(m47_exit_pipeline_m_axi_AWVALID),
        .m_axi_bready(m47_exit_pipeline_m_axi_BREADY),
        .m_axi_bresp(m47_exit_pipeline_m_axi_BRESP),
        .m_axi_bvalid(m47_exit_pipeline_m_axi_BVALID),
        .m_axi_rdata(m47_exit_pipeline_m_axi_RDATA),
        .m_axi_rready(m47_exit_pipeline_m_axi_RREADY),
        .m_axi_rresp(m47_exit_pipeline_m_axi_RRESP),
        .m_axi_rvalid(m47_exit_pipeline_m_axi_RVALID),
        .m_axi_wdata(m47_exit_pipeline_m_axi_WDATA),
        .m_axi_wready(m47_exit_pipeline_m_axi_WREADY),
        .m_axi_wstrb(m47_exit_pipeline_m_axi_WSTRB),
        .m_axi_wvalid(m47_exit_pipeline_m_axi_WVALID),
        .s_axi_araddr(m47_sc2axi_M_AXI_ARADDR),
        .s_axi_arcache(m47_sc2axi_M_AXI_ARCACHE),
        .s_axi_arid(m47_sc2axi_M_AXI_ARID),
        .s_axi_arlen(m47_sc2axi_M_AXI_ARLEN),
        .s_axi_arlock(m47_sc2axi_M_AXI_ARLOCK),
        .s_axi_arprot(m47_sc2axi_M_AXI_ARPROT),
        .s_axi_arqos(m47_sc2axi_M_AXI_ARQOS),
        .s_axi_arready(m47_sc2axi_M_AXI_ARREADY),
        .s_axi_aruser(m47_sc2axi_M_AXI_ARUSER),
        .s_axi_arvalid(m47_sc2axi_M_AXI_ARVALID),
        .s_axi_awaddr(m47_sc2axi_M_AXI_AWADDR),
        .s_axi_awcache(m47_sc2axi_M_AXI_AWCACHE),
        .s_axi_awid(m47_sc2axi_M_AXI_AWID),
        .s_axi_awlen(m47_sc2axi_M_AXI_AWLEN),
        .s_axi_awlock(m47_sc2axi_M_AXI_AWLOCK),
        .s_axi_awprot(m47_sc2axi_M_AXI_AWPROT),
        .s_axi_awqos(m47_sc2axi_M_AXI_AWQOS),
        .s_axi_awready(m47_sc2axi_M_AXI_AWREADY),
        .s_axi_awuser(m47_sc2axi_M_AXI_AWUSER),
        .s_axi_awvalid(m47_sc2axi_M_AXI_AWVALID),
        .s_axi_bid(m47_sc2axi_M_AXI_BID),
        .s_axi_bready(m47_sc2axi_M_AXI_BREADY),
        .s_axi_bresp(m47_sc2axi_M_AXI_BRESP),
        .s_axi_buser(m47_sc2axi_M_AXI_BUSER),
        .s_axi_bvalid(m47_sc2axi_M_AXI_BVALID),
        .s_axi_rdata(m47_sc2axi_M_AXI_RDATA),
        .s_axi_rid(m47_sc2axi_M_AXI_RID),
        .s_axi_rlast(m47_sc2axi_M_AXI_RLAST),
        .s_axi_rready(m47_sc2axi_M_AXI_RREADY),
        .s_axi_rresp(m47_sc2axi_M_AXI_RRESP),
        .s_axi_ruser(m47_sc2axi_M_AXI_RUSER),
        .s_axi_rvalid(m47_sc2axi_M_AXI_RVALID),
        .s_axi_wdata(m47_sc2axi_M_AXI_WDATA),
        .s_axi_wlast(m47_sc2axi_M_AXI_WLAST),
        .s_axi_wready(m47_sc2axi_M_AXI_WREADY),
        .s_axi_wstrb(m47_sc2axi_M_AXI_WSTRB),
        .s_axi_wuser(m47_sc2axi_M_AXI_WUSER),
        .s_axi_wvalid(m47_sc2axi_M_AXI_WVALID));
  m47_nodes_imp_MUJLPK m47_nodes
       (.M_SC_AR_info(m47_nodes_M_SC_AR_INFO),
        .M_SC_AR_payld(m47_nodes_M_SC_AR_PAYLD),
        .M_SC_AR_recv(m47_nodes_M_SC_AR_RECV),
        .M_SC_AR_req(m47_nodes_M_SC_AR_REQ),
        .M_SC_AR_send(m47_nodes_M_SC_AR_SEND),
        .M_SC_AW_info(m47_nodes_M_SC_AW_INFO),
        .M_SC_AW_payld(m47_nodes_M_SC_AW_PAYLD),
        .M_SC_AW_recv(m47_nodes_M_SC_AW_RECV),
        .M_SC_AW_req(m47_nodes_M_SC_AW_REQ),
        .M_SC_AW_send(m47_nodes_M_SC_AW_SEND),
        .M_SC_B_info(m47_nodes_M_SC_B_INFO),
        .M_SC_B_payld(m47_nodes_M_SC_B_PAYLD),
        .M_SC_B_recv(m47_nodes_M_SC_B_RECV),
        .M_SC_B_req(m47_nodes_M_SC_B_REQ),
        .M_SC_B_send(m47_nodes_M_SC_B_SEND),
        .M_SC_R_info(m47_nodes_M_SC_R_INFO),
        .M_SC_R_payld(m47_nodes_M_SC_R_PAYLD),
        .M_SC_R_recv(m47_nodes_M_SC_R_RECV),
        .M_SC_R_req(m47_nodes_M_SC_R_REQ),
        .M_SC_R_send(m47_nodes_M_SC_R_SEND),
        .M_SC_W_info(m47_nodes_M_SC_W_INFO),
        .M_SC_W_payld(m47_nodes_M_SC_W_PAYLD),
        .M_SC_W_recv(m47_nodes_M_SC_W_RECV),
        .M_SC_W_req(m47_nodes_M_SC_W_REQ),
        .M_SC_W_send(m47_nodes_M_SC_W_SEND),
        .S_SC_AR_info(S_SC_AR_49_INFO),
        .S_SC_AR_payld(S_SC_AR_49_PAYLD),
        .S_SC_AR_recv(S_SC_AR_49_RECV),
        .S_SC_AR_req(S_SC_AR_49_REQ),
        .S_SC_AR_send(S_SC_AR_49_SEND),
        .S_SC_AW_info(S_SC_AW_49_INFO),
        .S_SC_AW_payld(S_SC_AW_49_PAYLD),
        .S_SC_AW_recv(S_SC_AW_49_RECV),
        .S_SC_AW_req(S_SC_AW_49_REQ),
        .S_SC_AW_send(S_SC_AW_49_SEND),
        .S_SC_B_info(S_SC_B_49_INFO),
        .S_SC_B_payld(S_SC_B_49_PAYLD),
        .S_SC_B_recv(S_SC_B_49_RECV),
        .S_SC_B_req(S_SC_B_49_REQ),
        .S_SC_B_send(S_SC_B_49_SEND),
        .S_SC_R_info(S_SC_R_49_INFO),
        .S_SC_R_payld(S_SC_R_49_PAYLD),
        .S_SC_R_recv(S_SC_R_49_RECV),
        .S_SC_R_req(S_SC_R_49_REQ),
        .S_SC_R_send(S_SC_R_49_SEND),
        .S_SC_W_info(S_SC_W_49_INFO),
        .S_SC_W_payld(S_SC_W_49_PAYLD),
        .S_SC_W_recv(S_SC_W_49_RECV),
        .S_SC_W_req(S_SC_W_49_REQ),
        .S_SC_W_send(S_SC_W_49_SEND),
        .m_axi_aclk(clk_map_M47_ACLK),
        .m_axi_aresetn(m_axi_aresetn_47),
        .s_axi_aclk(clk_map_M00_ACLK),
        .s_axi_aresetn(clk_map_M00_ARESETN));
  bd_afc3_m47s2a_0 m47_sc2axi
       (.aclk(clk_map_M47_ACLK),
        .m_axi_araddr(m47_sc2axi_M_AXI_ARADDR),
        .m_axi_arcache(m47_sc2axi_M_AXI_ARCACHE),
        .m_axi_arid(m47_sc2axi_M_AXI_ARID),
        .m_axi_arlen(m47_sc2axi_M_AXI_ARLEN),
        .m_axi_arlock(m47_sc2axi_M_AXI_ARLOCK),
        .m_axi_arprot(m47_sc2axi_M_AXI_ARPROT),
        .m_axi_arqos(m47_sc2axi_M_AXI_ARQOS),
        .m_axi_arready(m47_sc2axi_M_AXI_ARREADY),
        .m_axi_aruser(m47_sc2axi_M_AXI_ARUSER),
        .m_axi_arvalid(m47_sc2axi_M_AXI_ARVALID),
        .m_axi_awaddr(m47_sc2axi_M_AXI_AWADDR),
        .m_axi_awcache(m47_sc2axi_M_AXI_AWCACHE),
        .m_axi_awid(m47_sc2axi_M_AXI_AWID),
        .m_axi_awlen(m47_sc2axi_M_AXI_AWLEN),
        .m_axi_awlock(m47_sc2axi_M_AXI_AWLOCK),
        .m_axi_awprot(m47_sc2axi_M_AXI_AWPROT),
        .m_axi_awqos(m47_sc2axi_M_AXI_AWQOS),
        .m_axi_awready(m47_sc2axi_M_AXI_AWREADY),
        .m_axi_awuser(m47_sc2axi_M_AXI_AWUSER),
        .m_axi_awvalid(m47_sc2axi_M_AXI_AWVALID),
        .m_axi_bid(m47_sc2axi_M_AXI_BID),
        .m_axi_bready(m47_sc2axi_M_AXI_BREADY),
        .m_axi_bresp(m47_sc2axi_M_AXI_BRESP),
        .m_axi_buser(m47_sc2axi_M_AXI_BUSER),
        .m_axi_bvalid(m47_sc2axi_M_AXI_BVALID),
        .m_axi_rdata(m47_sc2axi_M_AXI_RDATA),
        .m_axi_rid(m47_sc2axi_M_AXI_RID),
        .m_axi_rlast(m47_sc2axi_M_AXI_RLAST),
        .m_axi_rready(m47_sc2axi_M_AXI_RREADY),
        .m_axi_rresp(m47_sc2axi_M_AXI_RRESP),
        .m_axi_ruser(m47_sc2axi_M_AXI_RUSER),
        .m_axi_rvalid(m47_sc2axi_M_AXI_RVALID),
        .m_axi_wdata(m47_sc2axi_M_AXI_WDATA),
        .m_axi_wlast(m47_sc2axi_M_AXI_WLAST),
        .m_axi_wready(m47_sc2axi_M_AXI_WREADY),
        .m_axi_wstrb(m47_sc2axi_M_AXI_WSTRB),
        .m_axi_wuser(m47_sc2axi_M_AXI_WUSER),
        .m_axi_wvalid(m47_sc2axi_M_AXI_WVALID),
        .m_sc_b_info(S_SC_B_49_INFO),
        .m_sc_b_payld(S_SC_B_49_PAYLD),
        .m_sc_b_recv(S_SC_B_49_RECV),
        .m_sc_b_req(S_SC_B_49_REQ),
        .m_sc_b_send(S_SC_B_49_SEND),
        .m_sc_r_info(S_SC_R_49_INFO),
        .m_sc_r_payld(S_SC_R_49_PAYLD),
        .m_sc_r_recv(S_SC_R_49_RECV),
        .m_sc_r_req(S_SC_R_49_REQ),
        .m_sc_r_send(S_SC_R_49_SEND),
        .s_sc_ar_info(m47_nodes_M_SC_AR_INFO),
        .s_sc_ar_payld(m47_nodes_M_SC_AR_PAYLD[179:0]),
        .s_sc_ar_recv(m47_nodes_M_SC_AR_RECV),
        .s_sc_ar_req(m47_nodes_M_SC_AR_REQ),
        .s_sc_ar_send(m47_nodes_M_SC_AR_SEND),
        .s_sc_aw_info(m47_nodes_M_SC_AW_INFO),
        .s_sc_aw_payld(m47_nodes_M_SC_AW_PAYLD[179:0]),
        .s_sc_aw_recv(m47_nodes_M_SC_AW_RECV),
        .s_sc_aw_req(m47_nodes_M_SC_AW_REQ),
        .s_sc_aw_send(m47_nodes_M_SC_AW_SEND),
        .s_sc_w_info(m47_nodes_M_SC_W_INFO),
        .s_sc_w_payld(m47_nodes_M_SC_W_PAYLD[66:0]),
        .s_sc_w_recv(m47_nodes_M_SC_W_RECV),
        .s_sc_w_req(m47_nodes_M_SC_W_REQ),
        .s_sc_w_send(m47_nodes_M_SC_W_SEND));
  m48_exit_pipeline_imp_NIOWC4 m48_exit_pipeline
       (.aclk(clk_map_M48_ACLK),
        .aresetn(m_axi_aresetn_48),
        .m_axi_araddr(m48_exit_pipeline_m_axi_ARADDR),
        .m_axi_arprot(m48_exit_pipeline_m_axi_ARPROT),
        .m_axi_arready(m48_exit_pipeline_m_axi_ARREADY),
        .m_axi_arvalid(m48_exit_pipeline_m_axi_ARVALID),
        .m_axi_awaddr(m48_exit_pipeline_m_axi_AWADDR),
        .m_axi_awprot(m48_exit_pipeline_m_axi_AWPROT),
        .m_axi_awready(m48_exit_pipeline_m_axi_AWREADY),
        .m_axi_awvalid(m48_exit_pipeline_m_axi_AWVALID),
        .m_axi_bready(m48_exit_pipeline_m_axi_BREADY),
        .m_axi_bresp(m48_exit_pipeline_m_axi_BRESP),
        .m_axi_bvalid(m48_exit_pipeline_m_axi_BVALID),
        .m_axi_rdata(m48_exit_pipeline_m_axi_RDATA),
        .m_axi_rready(m48_exit_pipeline_m_axi_RREADY),
        .m_axi_rresp(m48_exit_pipeline_m_axi_RRESP),
        .m_axi_rvalid(m48_exit_pipeline_m_axi_RVALID),
        .m_axi_wdata(m48_exit_pipeline_m_axi_WDATA),
        .m_axi_wready(m48_exit_pipeline_m_axi_WREADY),
        .m_axi_wstrb(m48_exit_pipeline_m_axi_WSTRB),
        .m_axi_wvalid(m48_exit_pipeline_m_axi_WVALID),
        .s_axi_araddr(m48_sc2axi_M_AXI_ARADDR),
        .s_axi_arcache(m48_sc2axi_M_AXI_ARCACHE),
        .s_axi_arid(m48_sc2axi_M_AXI_ARID),
        .s_axi_arlen(m48_sc2axi_M_AXI_ARLEN),
        .s_axi_arlock(m48_sc2axi_M_AXI_ARLOCK),
        .s_axi_arprot(m48_sc2axi_M_AXI_ARPROT),
        .s_axi_arqos(m48_sc2axi_M_AXI_ARQOS),
        .s_axi_arready(m48_sc2axi_M_AXI_ARREADY),
        .s_axi_aruser(m48_sc2axi_M_AXI_ARUSER),
        .s_axi_arvalid(m48_sc2axi_M_AXI_ARVALID),
        .s_axi_awaddr(m48_sc2axi_M_AXI_AWADDR),
        .s_axi_awcache(m48_sc2axi_M_AXI_AWCACHE),
        .s_axi_awid(m48_sc2axi_M_AXI_AWID),
        .s_axi_awlen(m48_sc2axi_M_AXI_AWLEN),
        .s_axi_awlock(m48_sc2axi_M_AXI_AWLOCK),
        .s_axi_awprot(m48_sc2axi_M_AXI_AWPROT),
        .s_axi_awqos(m48_sc2axi_M_AXI_AWQOS),
        .s_axi_awready(m48_sc2axi_M_AXI_AWREADY),
        .s_axi_awuser(m48_sc2axi_M_AXI_AWUSER),
        .s_axi_awvalid(m48_sc2axi_M_AXI_AWVALID),
        .s_axi_bid(m48_sc2axi_M_AXI_BID),
        .s_axi_bready(m48_sc2axi_M_AXI_BREADY),
        .s_axi_bresp(m48_sc2axi_M_AXI_BRESP),
        .s_axi_buser(m48_sc2axi_M_AXI_BUSER),
        .s_axi_bvalid(m48_sc2axi_M_AXI_BVALID),
        .s_axi_rdata(m48_sc2axi_M_AXI_RDATA),
        .s_axi_rid(m48_sc2axi_M_AXI_RID),
        .s_axi_rlast(m48_sc2axi_M_AXI_RLAST),
        .s_axi_rready(m48_sc2axi_M_AXI_RREADY),
        .s_axi_rresp(m48_sc2axi_M_AXI_RRESP),
        .s_axi_ruser(m48_sc2axi_M_AXI_RUSER),
        .s_axi_rvalid(m48_sc2axi_M_AXI_RVALID),
        .s_axi_wdata(m48_sc2axi_M_AXI_WDATA),
        .s_axi_wlast(m48_sc2axi_M_AXI_WLAST),
        .s_axi_wready(m48_sc2axi_M_AXI_WREADY),
        .s_axi_wstrb(m48_sc2axi_M_AXI_WSTRB),
        .s_axi_wuser(m48_sc2axi_M_AXI_WUSER),
        .s_axi_wvalid(m48_sc2axi_M_AXI_WVALID));
  m48_nodes_imp_1BXG0U m48_nodes
       (.M_SC_AR_info(m48_nodes_M_SC_AR_INFO),
        .M_SC_AR_payld(m48_nodes_M_SC_AR_PAYLD),
        .M_SC_AR_recv(m48_nodes_M_SC_AR_RECV),
        .M_SC_AR_req(m48_nodes_M_SC_AR_REQ),
        .M_SC_AR_send(m48_nodes_M_SC_AR_SEND),
        .M_SC_AW_info(m48_nodes_M_SC_AW_INFO),
        .M_SC_AW_payld(m48_nodes_M_SC_AW_PAYLD),
        .M_SC_AW_recv(m48_nodes_M_SC_AW_RECV),
        .M_SC_AW_req(m48_nodes_M_SC_AW_REQ),
        .M_SC_AW_send(m48_nodes_M_SC_AW_SEND),
        .M_SC_B_info(m48_nodes_M_SC_B_INFO),
        .M_SC_B_payld(m48_nodes_M_SC_B_PAYLD),
        .M_SC_B_recv(m48_nodes_M_SC_B_RECV),
        .M_SC_B_req(m48_nodes_M_SC_B_REQ),
        .M_SC_B_send(m48_nodes_M_SC_B_SEND),
        .M_SC_R_info(m48_nodes_M_SC_R_INFO),
        .M_SC_R_payld(m48_nodes_M_SC_R_PAYLD),
        .M_SC_R_recv(m48_nodes_M_SC_R_RECV),
        .M_SC_R_req(m48_nodes_M_SC_R_REQ),
        .M_SC_R_send(m48_nodes_M_SC_R_SEND),
        .M_SC_W_info(m48_nodes_M_SC_W_INFO),
        .M_SC_W_payld(m48_nodes_M_SC_W_PAYLD),
        .M_SC_W_recv(m48_nodes_M_SC_W_RECV),
        .M_SC_W_req(m48_nodes_M_SC_W_REQ),
        .M_SC_W_send(m48_nodes_M_SC_W_SEND),
        .S_SC_AR_info(S_SC_AR_50_INFO),
        .S_SC_AR_payld(S_SC_AR_50_PAYLD),
        .S_SC_AR_recv(S_SC_AR_50_RECV),
        .S_SC_AR_req(S_SC_AR_50_REQ),
        .S_SC_AR_send(S_SC_AR_50_SEND),
        .S_SC_AW_info(S_SC_AW_50_INFO),
        .S_SC_AW_payld(S_SC_AW_50_PAYLD),
        .S_SC_AW_recv(S_SC_AW_50_RECV),
        .S_SC_AW_req(S_SC_AW_50_REQ),
        .S_SC_AW_send(S_SC_AW_50_SEND),
        .S_SC_B_info(S_SC_B_50_INFO),
        .S_SC_B_payld(S_SC_B_50_PAYLD),
        .S_SC_B_recv(S_SC_B_50_RECV),
        .S_SC_B_req(S_SC_B_50_REQ),
        .S_SC_B_send(S_SC_B_50_SEND),
        .S_SC_R_info(S_SC_R_50_INFO),
        .S_SC_R_payld(S_SC_R_50_PAYLD),
        .S_SC_R_recv(S_SC_R_50_RECV),
        .S_SC_R_req(S_SC_R_50_REQ),
        .S_SC_R_send(S_SC_R_50_SEND),
        .S_SC_W_info(S_SC_W_50_INFO),
        .S_SC_W_payld(S_SC_W_50_PAYLD),
        .S_SC_W_recv(S_SC_W_50_RECV),
        .S_SC_W_req(S_SC_W_50_REQ),
        .S_SC_W_send(S_SC_W_50_SEND),
        .m_axi_aclk(clk_map_M48_ACLK),
        .m_axi_aresetn(m_axi_aresetn_48),
        .s_axi_aclk(clk_map_M00_ACLK),
        .s_axi_aresetn(clk_map_M00_ARESETN));
  bd_afc3_m48s2a_0 m48_sc2axi
       (.aclk(clk_map_M48_ACLK),
        .m_axi_araddr(m48_sc2axi_M_AXI_ARADDR),
        .m_axi_arcache(m48_sc2axi_M_AXI_ARCACHE),
        .m_axi_arid(m48_sc2axi_M_AXI_ARID),
        .m_axi_arlen(m48_sc2axi_M_AXI_ARLEN),
        .m_axi_arlock(m48_sc2axi_M_AXI_ARLOCK),
        .m_axi_arprot(m48_sc2axi_M_AXI_ARPROT),
        .m_axi_arqos(m48_sc2axi_M_AXI_ARQOS),
        .m_axi_arready(m48_sc2axi_M_AXI_ARREADY),
        .m_axi_aruser(m48_sc2axi_M_AXI_ARUSER),
        .m_axi_arvalid(m48_sc2axi_M_AXI_ARVALID),
        .m_axi_awaddr(m48_sc2axi_M_AXI_AWADDR),
        .m_axi_awcache(m48_sc2axi_M_AXI_AWCACHE),
        .m_axi_awid(m48_sc2axi_M_AXI_AWID),
        .m_axi_awlen(m48_sc2axi_M_AXI_AWLEN),
        .m_axi_awlock(m48_sc2axi_M_AXI_AWLOCK),
        .m_axi_awprot(m48_sc2axi_M_AXI_AWPROT),
        .m_axi_awqos(m48_sc2axi_M_AXI_AWQOS),
        .m_axi_awready(m48_sc2axi_M_AXI_AWREADY),
        .m_axi_awuser(m48_sc2axi_M_AXI_AWUSER),
        .m_axi_awvalid(m48_sc2axi_M_AXI_AWVALID),
        .m_axi_bid(m48_sc2axi_M_AXI_BID),
        .m_axi_bready(m48_sc2axi_M_AXI_BREADY),
        .m_axi_bresp(m48_sc2axi_M_AXI_BRESP),
        .m_axi_buser(m48_sc2axi_M_AXI_BUSER),
        .m_axi_bvalid(m48_sc2axi_M_AXI_BVALID),
        .m_axi_rdata(m48_sc2axi_M_AXI_RDATA),
        .m_axi_rid(m48_sc2axi_M_AXI_RID),
        .m_axi_rlast(m48_sc2axi_M_AXI_RLAST),
        .m_axi_rready(m48_sc2axi_M_AXI_RREADY),
        .m_axi_rresp(m48_sc2axi_M_AXI_RRESP),
        .m_axi_ruser(m48_sc2axi_M_AXI_RUSER),
        .m_axi_rvalid(m48_sc2axi_M_AXI_RVALID),
        .m_axi_wdata(m48_sc2axi_M_AXI_WDATA),
        .m_axi_wlast(m48_sc2axi_M_AXI_WLAST),
        .m_axi_wready(m48_sc2axi_M_AXI_WREADY),
        .m_axi_wstrb(m48_sc2axi_M_AXI_WSTRB),
        .m_axi_wuser(m48_sc2axi_M_AXI_WUSER),
        .m_axi_wvalid(m48_sc2axi_M_AXI_WVALID),
        .m_sc_b_info(S_SC_B_50_INFO),
        .m_sc_b_payld(S_SC_B_50_PAYLD),
        .m_sc_b_recv(S_SC_B_50_RECV),
        .m_sc_b_req(S_SC_B_50_REQ),
        .m_sc_b_send(S_SC_B_50_SEND),
        .m_sc_r_info(S_SC_R_50_INFO),
        .m_sc_r_payld(S_SC_R_50_PAYLD),
        .m_sc_r_recv(S_SC_R_50_RECV),
        .m_sc_r_req(S_SC_R_50_REQ),
        .m_sc_r_send(S_SC_R_50_SEND),
        .s_sc_ar_info(m48_nodes_M_SC_AR_INFO),
        .s_sc_ar_payld(m48_nodes_M_SC_AR_PAYLD[179:0]),
        .s_sc_ar_recv(m48_nodes_M_SC_AR_RECV),
        .s_sc_ar_req(m48_nodes_M_SC_AR_REQ),
        .s_sc_ar_send(m48_nodes_M_SC_AR_SEND),
        .s_sc_aw_info(m48_nodes_M_SC_AW_INFO),
        .s_sc_aw_payld(m48_nodes_M_SC_AW_PAYLD[179:0]),
        .s_sc_aw_recv(m48_nodes_M_SC_AW_RECV),
        .s_sc_aw_req(m48_nodes_M_SC_AW_REQ),
        .s_sc_aw_send(m48_nodes_M_SC_AW_SEND),
        .s_sc_w_info(m48_nodes_M_SC_W_INFO),
        .s_sc_w_payld(m48_nodes_M_SC_W_PAYLD[66:0]),
        .s_sc_w_recv(m48_nodes_M_SC_W_RECV),
        .s_sc_w_req(m48_nodes_M_SC_W_REQ),
        .s_sc_w_send(m48_nodes_M_SC_W_SEND));
  m49_exit_pipeline_imp_IUFSDW m49_exit_pipeline
       (.aclk(clk_map_M49_ACLK),
        .aresetn(m_axi_aresetn_49),
        .m_axi_araddr(m49_exit_pipeline_m_axi_ARADDR),
        .m_axi_arprot(m49_exit_pipeline_m_axi_ARPROT),
        .m_axi_arready(m49_exit_pipeline_m_axi_ARREADY),
        .m_axi_arvalid(m49_exit_pipeline_m_axi_ARVALID),
        .m_axi_awaddr(m49_exit_pipeline_m_axi_AWADDR),
        .m_axi_awprot(m49_exit_pipeline_m_axi_AWPROT),
        .m_axi_awready(m49_exit_pipeline_m_axi_AWREADY),
        .m_axi_awvalid(m49_exit_pipeline_m_axi_AWVALID),
        .m_axi_bready(m49_exit_pipeline_m_axi_BREADY),
        .m_axi_bresp(m49_exit_pipeline_m_axi_BRESP),
        .m_axi_bvalid(m49_exit_pipeline_m_axi_BVALID),
        .m_axi_rdata(m49_exit_pipeline_m_axi_RDATA),
        .m_axi_rready(m49_exit_pipeline_m_axi_RREADY),
        .m_axi_rresp(m49_exit_pipeline_m_axi_RRESP),
        .m_axi_rvalid(m49_exit_pipeline_m_axi_RVALID),
        .m_axi_wdata(m49_exit_pipeline_m_axi_WDATA),
        .m_axi_wready(m49_exit_pipeline_m_axi_WREADY),
        .m_axi_wstrb(m49_exit_pipeline_m_axi_WSTRB),
        .m_axi_wvalid(m49_exit_pipeline_m_axi_WVALID),
        .s_axi_araddr(m49_sc2axi_M_AXI_ARADDR),
        .s_axi_arcache(m49_sc2axi_M_AXI_ARCACHE),
        .s_axi_arid(m49_sc2axi_M_AXI_ARID),
        .s_axi_arlen(m49_sc2axi_M_AXI_ARLEN),
        .s_axi_arlock(m49_sc2axi_M_AXI_ARLOCK),
        .s_axi_arprot(m49_sc2axi_M_AXI_ARPROT),
        .s_axi_arqos(m49_sc2axi_M_AXI_ARQOS),
        .s_axi_arready(m49_sc2axi_M_AXI_ARREADY),
        .s_axi_aruser(m49_sc2axi_M_AXI_ARUSER),
        .s_axi_arvalid(m49_sc2axi_M_AXI_ARVALID),
        .s_axi_awaddr(m49_sc2axi_M_AXI_AWADDR),
        .s_axi_awcache(m49_sc2axi_M_AXI_AWCACHE),
        .s_axi_awid(m49_sc2axi_M_AXI_AWID),
        .s_axi_awlen(m49_sc2axi_M_AXI_AWLEN),
        .s_axi_awlock(m49_sc2axi_M_AXI_AWLOCK),
        .s_axi_awprot(m49_sc2axi_M_AXI_AWPROT),
        .s_axi_awqos(m49_sc2axi_M_AXI_AWQOS),
        .s_axi_awready(m49_sc2axi_M_AXI_AWREADY),
        .s_axi_awuser(m49_sc2axi_M_AXI_AWUSER),
        .s_axi_awvalid(m49_sc2axi_M_AXI_AWVALID),
        .s_axi_bid(m49_sc2axi_M_AXI_BID),
        .s_axi_bready(m49_sc2axi_M_AXI_BREADY),
        .s_axi_bresp(m49_sc2axi_M_AXI_BRESP),
        .s_axi_buser(m49_sc2axi_M_AXI_BUSER),
        .s_axi_bvalid(m49_sc2axi_M_AXI_BVALID),
        .s_axi_rdata(m49_sc2axi_M_AXI_RDATA),
        .s_axi_rid(m49_sc2axi_M_AXI_RID),
        .s_axi_rlast(m49_sc2axi_M_AXI_RLAST),
        .s_axi_rready(m49_sc2axi_M_AXI_RREADY),
        .s_axi_rresp(m49_sc2axi_M_AXI_RRESP),
        .s_axi_ruser(m49_sc2axi_M_AXI_RUSER),
        .s_axi_rvalid(m49_sc2axi_M_AXI_RVALID),
        .s_axi_wdata(m49_sc2axi_M_AXI_WDATA),
        .s_axi_wlast(m49_sc2axi_M_AXI_WLAST),
        .s_axi_wready(m49_sc2axi_M_AXI_WREADY),
        .s_axi_wstrb(m49_sc2axi_M_AXI_WSTRB),
        .s_axi_wuser(m49_sc2axi_M_AXI_WUSER),
        .s_axi_wvalid(m49_sc2axi_M_AXI_WVALID));
  m49_nodes_imp_16NWU20 m49_nodes
       (.M_SC_AR_info(m49_nodes_M_SC_AR_INFO),
        .M_SC_AR_payld(m49_nodes_M_SC_AR_PAYLD),
        .M_SC_AR_recv(m49_nodes_M_SC_AR_RECV),
        .M_SC_AR_req(m49_nodes_M_SC_AR_REQ),
        .M_SC_AR_send(m49_nodes_M_SC_AR_SEND),
        .M_SC_AW_info(m49_nodes_M_SC_AW_INFO),
        .M_SC_AW_payld(m49_nodes_M_SC_AW_PAYLD),
        .M_SC_AW_recv(m49_nodes_M_SC_AW_RECV),
        .M_SC_AW_req(m49_nodes_M_SC_AW_REQ),
        .M_SC_AW_send(m49_nodes_M_SC_AW_SEND),
        .M_SC_B_info(m49_nodes_M_SC_B_INFO),
        .M_SC_B_payld(m49_nodes_M_SC_B_PAYLD),
        .M_SC_B_recv(m49_nodes_M_SC_B_RECV),
        .M_SC_B_req(m49_nodes_M_SC_B_REQ),
        .M_SC_B_send(m49_nodes_M_SC_B_SEND),
        .M_SC_R_info(m49_nodes_M_SC_R_INFO),
        .M_SC_R_payld(m49_nodes_M_SC_R_PAYLD),
        .M_SC_R_recv(m49_nodes_M_SC_R_RECV),
        .M_SC_R_req(m49_nodes_M_SC_R_REQ),
        .M_SC_R_send(m49_nodes_M_SC_R_SEND),
        .M_SC_W_info(m49_nodes_M_SC_W_INFO),
        .M_SC_W_payld(m49_nodes_M_SC_W_PAYLD),
        .M_SC_W_recv(m49_nodes_M_SC_W_RECV),
        .M_SC_W_req(m49_nodes_M_SC_W_REQ),
        .M_SC_W_send(m49_nodes_M_SC_W_SEND),
        .S_SC_AR_info(S_SC_AR_51_INFO),
        .S_SC_AR_payld(S_SC_AR_51_PAYLD),
        .S_SC_AR_recv(S_SC_AR_51_RECV),
        .S_SC_AR_req(S_SC_AR_51_REQ),
        .S_SC_AR_send(S_SC_AR_51_SEND),
        .S_SC_AW_info(S_SC_AW_51_INFO),
        .S_SC_AW_payld(S_SC_AW_51_PAYLD),
        .S_SC_AW_recv(S_SC_AW_51_RECV),
        .S_SC_AW_req(S_SC_AW_51_REQ),
        .S_SC_AW_send(S_SC_AW_51_SEND),
        .S_SC_B_info(S_SC_B_51_INFO),
        .S_SC_B_payld(S_SC_B_51_PAYLD),
        .S_SC_B_recv(S_SC_B_51_RECV),
        .S_SC_B_req(S_SC_B_51_REQ),
        .S_SC_B_send(S_SC_B_51_SEND),
        .S_SC_R_info(S_SC_R_51_INFO),
        .S_SC_R_payld(S_SC_R_51_PAYLD),
        .S_SC_R_recv(S_SC_R_51_RECV),
        .S_SC_R_req(S_SC_R_51_REQ),
        .S_SC_R_send(S_SC_R_51_SEND),
        .S_SC_W_info(S_SC_W_51_INFO),
        .S_SC_W_payld(S_SC_W_51_PAYLD),
        .S_SC_W_recv(S_SC_W_51_RECV),
        .S_SC_W_req(S_SC_W_51_REQ),
        .S_SC_W_send(S_SC_W_51_SEND),
        .m_axi_aclk(clk_map_M49_ACLK),
        .m_axi_aresetn(m_axi_aresetn_49),
        .s_axi_aclk(clk_map_M00_ACLK),
        .s_axi_aresetn(clk_map_M00_ARESETN));
  bd_afc3_m49s2a_0 m49_sc2axi
       (.aclk(clk_map_M49_ACLK),
        .m_axi_araddr(m49_sc2axi_M_AXI_ARADDR),
        .m_axi_arcache(m49_sc2axi_M_AXI_ARCACHE),
        .m_axi_arid(m49_sc2axi_M_AXI_ARID),
        .m_axi_arlen(m49_sc2axi_M_AXI_ARLEN),
        .m_axi_arlock(m49_sc2axi_M_AXI_ARLOCK),
        .m_axi_arprot(m49_sc2axi_M_AXI_ARPROT),
        .m_axi_arqos(m49_sc2axi_M_AXI_ARQOS),
        .m_axi_arready(m49_sc2axi_M_AXI_ARREADY),
        .m_axi_aruser(m49_sc2axi_M_AXI_ARUSER),
        .m_axi_arvalid(m49_sc2axi_M_AXI_ARVALID),
        .m_axi_awaddr(m49_sc2axi_M_AXI_AWADDR),
        .m_axi_awcache(m49_sc2axi_M_AXI_AWCACHE),
        .m_axi_awid(m49_sc2axi_M_AXI_AWID),
        .m_axi_awlen(m49_sc2axi_M_AXI_AWLEN),
        .m_axi_awlock(m49_sc2axi_M_AXI_AWLOCK),
        .m_axi_awprot(m49_sc2axi_M_AXI_AWPROT),
        .m_axi_awqos(m49_sc2axi_M_AXI_AWQOS),
        .m_axi_awready(m49_sc2axi_M_AXI_AWREADY),
        .m_axi_awuser(m49_sc2axi_M_AXI_AWUSER),
        .m_axi_awvalid(m49_sc2axi_M_AXI_AWVALID),
        .m_axi_bid(m49_sc2axi_M_AXI_BID),
        .m_axi_bready(m49_sc2axi_M_AXI_BREADY),
        .m_axi_bresp(m49_sc2axi_M_AXI_BRESP),
        .m_axi_buser(m49_sc2axi_M_AXI_BUSER),
        .m_axi_bvalid(m49_sc2axi_M_AXI_BVALID),
        .m_axi_rdata(m49_sc2axi_M_AXI_RDATA),
        .m_axi_rid(m49_sc2axi_M_AXI_RID),
        .m_axi_rlast(m49_sc2axi_M_AXI_RLAST),
        .m_axi_rready(m49_sc2axi_M_AXI_RREADY),
        .m_axi_rresp(m49_sc2axi_M_AXI_RRESP),
        .m_axi_ruser(m49_sc2axi_M_AXI_RUSER),
        .m_axi_rvalid(m49_sc2axi_M_AXI_RVALID),
        .m_axi_wdata(m49_sc2axi_M_AXI_WDATA),
        .m_axi_wlast(m49_sc2axi_M_AXI_WLAST),
        .m_axi_wready(m49_sc2axi_M_AXI_WREADY),
        .m_axi_wstrb(m49_sc2axi_M_AXI_WSTRB),
        .m_axi_wuser(m49_sc2axi_M_AXI_WUSER),
        .m_axi_wvalid(m49_sc2axi_M_AXI_WVALID),
        .m_sc_b_info(S_SC_B_51_INFO),
        .m_sc_b_payld(S_SC_B_51_PAYLD),
        .m_sc_b_recv(S_SC_B_51_RECV),
        .m_sc_b_req(S_SC_B_51_REQ),
        .m_sc_b_send(S_SC_B_51_SEND),
        .m_sc_r_info(S_SC_R_51_INFO),
        .m_sc_r_payld(S_SC_R_51_PAYLD),
        .m_sc_r_recv(S_SC_R_51_RECV),
        .m_sc_r_req(S_SC_R_51_REQ),
        .m_sc_r_send(S_SC_R_51_SEND),
        .s_sc_ar_info(m49_nodes_M_SC_AR_INFO),
        .s_sc_ar_payld(m49_nodes_M_SC_AR_PAYLD[179:0]),
        .s_sc_ar_recv(m49_nodes_M_SC_AR_RECV),
        .s_sc_ar_req(m49_nodes_M_SC_AR_REQ),
        .s_sc_ar_send(m49_nodes_M_SC_AR_SEND),
        .s_sc_aw_info(m49_nodes_M_SC_AW_INFO),
        .s_sc_aw_payld(m49_nodes_M_SC_AW_PAYLD[179:0]),
        .s_sc_aw_recv(m49_nodes_M_SC_AW_RECV),
        .s_sc_aw_req(m49_nodes_M_SC_AW_REQ),
        .s_sc_aw_send(m49_nodes_M_SC_AW_SEND),
        .s_sc_w_info(m49_nodes_M_SC_W_INFO),
        .s_sc_w_payld(m49_nodes_M_SC_W_PAYLD[66:0]),
        .s_sc_w_recv(m49_nodes_M_SC_W_RECV),
        .s_sc_w_req(m49_nodes_M_SC_W_REQ),
        .s_sc_w_send(m49_nodes_M_SC_W_SEND));
  m50_exit_pipeline_imp_X05HEO m50_exit_pipeline
       (.aclk(clk_map_M50_ACLK),
        .aresetn(m_axi_aresetn_50),
        .m_axi_araddr(m50_exit_pipeline_m_axi_ARADDR),
        .m_axi_arprot(m50_exit_pipeline_m_axi_ARPROT),
        .m_axi_arready(m50_exit_pipeline_m_axi_ARREADY),
        .m_axi_arvalid(m50_exit_pipeline_m_axi_ARVALID),
        .m_axi_awaddr(m50_exit_pipeline_m_axi_AWADDR),
        .m_axi_awprot(m50_exit_pipeline_m_axi_AWPROT),
        .m_axi_awready(m50_exit_pipeline_m_axi_AWREADY),
        .m_axi_awvalid(m50_exit_pipeline_m_axi_AWVALID),
        .m_axi_bready(m50_exit_pipeline_m_axi_BREADY),
        .m_axi_bresp(m50_exit_pipeline_m_axi_BRESP),
        .m_axi_bvalid(m50_exit_pipeline_m_axi_BVALID),
        .m_axi_rdata(m50_exit_pipeline_m_axi_RDATA),
        .m_axi_rready(m50_exit_pipeline_m_axi_RREADY),
        .m_axi_rresp(m50_exit_pipeline_m_axi_RRESP),
        .m_axi_rvalid(m50_exit_pipeline_m_axi_RVALID),
        .m_axi_wdata(m50_exit_pipeline_m_axi_WDATA),
        .m_axi_wready(m50_exit_pipeline_m_axi_WREADY),
        .m_axi_wstrb(m50_exit_pipeline_m_axi_WSTRB),
        .m_axi_wvalid(m50_exit_pipeline_m_axi_WVALID),
        .s_axi_araddr(m50_sc2axi_M_AXI_ARADDR),
        .s_axi_arcache(m50_sc2axi_M_AXI_ARCACHE),
        .s_axi_arid(m50_sc2axi_M_AXI_ARID),
        .s_axi_arlen(m50_sc2axi_M_AXI_ARLEN),
        .s_axi_arlock(m50_sc2axi_M_AXI_ARLOCK),
        .s_axi_arprot(m50_sc2axi_M_AXI_ARPROT),
        .s_axi_arqos(m50_sc2axi_M_AXI_ARQOS),
        .s_axi_arready(m50_sc2axi_M_AXI_ARREADY),
        .s_axi_aruser(m50_sc2axi_M_AXI_ARUSER),
        .s_axi_arvalid(m50_sc2axi_M_AXI_ARVALID),
        .s_axi_awaddr(m50_sc2axi_M_AXI_AWADDR),
        .s_axi_awcache(m50_sc2axi_M_AXI_AWCACHE),
        .s_axi_awid(m50_sc2axi_M_AXI_AWID),
        .s_axi_awlen(m50_sc2axi_M_AXI_AWLEN),
        .s_axi_awlock(m50_sc2axi_M_AXI_AWLOCK),
        .s_axi_awprot(m50_sc2axi_M_AXI_AWPROT),
        .s_axi_awqos(m50_sc2axi_M_AXI_AWQOS),
        .s_axi_awready(m50_sc2axi_M_AXI_AWREADY),
        .s_axi_awuser(m50_sc2axi_M_AXI_AWUSER),
        .s_axi_awvalid(m50_sc2axi_M_AXI_AWVALID),
        .s_axi_bid(m50_sc2axi_M_AXI_BID),
        .s_axi_bready(m50_sc2axi_M_AXI_BREADY),
        .s_axi_bresp(m50_sc2axi_M_AXI_BRESP),
        .s_axi_buser(m50_sc2axi_M_AXI_BUSER),
        .s_axi_bvalid(m50_sc2axi_M_AXI_BVALID),
        .s_axi_rdata(m50_sc2axi_M_AXI_RDATA),
        .s_axi_rid(m50_sc2axi_M_AXI_RID),
        .s_axi_rlast(m50_sc2axi_M_AXI_RLAST),
        .s_axi_rready(m50_sc2axi_M_AXI_RREADY),
        .s_axi_rresp(m50_sc2axi_M_AXI_RRESP),
        .s_axi_ruser(m50_sc2axi_M_AXI_RUSER),
        .s_axi_rvalid(m50_sc2axi_M_AXI_RVALID),
        .s_axi_wdata(m50_sc2axi_M_AXI_WDATA),
        .s_axi_wlast(m50_sc2axi_M_AXI_WLAST),
        .s_axi_wready(m50_sc2axi_M_AXI_WREADY),
        .s_axi_wstrb(m50_sc2axi_M_AXI_WSTRB),
        .s_axi_wuser(m50_sc2axi_M_AXI_WUSER),
        .s_axi_wvalid(m50_sc2axi_M_AXI_WVALID));
  m50_nodes_imp_13IPPJ4 m50_nodes
       (.M_SC_AR_info(m50_nodes_M_SC_AR_INFO),
        .M_SC_AR_payld(m50_nodes_M_SC_AR_PAYLD),
        .M_SC_AR_recv(m50_nodes_M_SC_AR_RECV),
        .M_SC_AR_req(m50_nodes_M_SC_AR_REQ),
        .M_SC_AR_send(m50_nodes_M_SC_AR_SEND),
        .M_SC_AW_info(m50_nodes_M_SC_AW_INFO),
        .M_SC_AW_payld(m50_nodes_M_SC_AW_PAYLD),
        .M_SC_AW_recv(m50_nodes_M_SC_AW_RECV),
        .M_SC_AW_req(m50_nodes_M_SC_AW_REQ),
        .M_SC_AW_send(m50_nodes_M_SC_AW_SEND),
        .M_SC_B_info(m50_nodes_M_SC_B_INFO),
        .M_SC_B_payld(m50_nodes_M_SC_B_PAYLD),
        .M_SC_B_recv(m50_nodes_M_SC_B_RECV),
        .M_SC_B_req(m50_nodes_M_SC_B_REQ),
        .M_SC_B_send(m50_nodes_M_SC_B_SEND),
        .M_SC_R_info(m50_nodes_M_SC_R_INFO),
        .M_SC_R_payld(m50_nodes_M_SC_R_PAYLD),
        .M_SC_R_recv(m50_nodes_M_SC_R_RECV),
        .M_SC_R_req(m50_nodes_M_SC_R_REQ),
        .M_SC_R_send(m50_nodes_M_SC_R_SEND),
        .M_SC_W_info(m50_nodes_M_SC_W_INFO),
        .M_SC_W_payld(m50_nodes_M_SC_W_PAYLD),
        .M_SC_W_recv(m50_nodes_M_SC_W_RECV),
        .M_SC_W_req(m50_nodes_M_SC_W_REQ),
        .M_SC_W_send(m50_nodes_M_SC_W_SEND),
        .S_SC_AR_info(S_SC_AR_52_INFO),
        .S_SC_AR_payld(S_SC_AR_52_PAYLD),
        .S_SC_AR_recv(S_SC_AR_52_RECV),
        .S_SC_AR_req(S_SC_AR_52_REQ),
        .S_SC_AR_send(S_SC_AR_52_SEND),
        .S_SC_AW_info(S_SC_AW_52_INFO),
        .S_SC_AW_payld(S_SC_AW_52_PAYLD),
        .S_SC_AW_recv(S_SC_AW_52_RECV),
        .S_SC_AW_req(S_SC_AW_52_REQ),
        .S_SC_AW_send(S_SC_AW_52_SEND),
        .S_SC_B_info(S_SC_B_52_INFO),
        .S_SC_B_payld(S_SC_B_52_PAYLD),
        .S_SC_B_recv(S_SC_B_52_RECV),
        .S_SC_B_req(S_SC_B_52_REQ),
        .S_SC_B_send(S_SC_B_52_SEND),
        .S_SC_R_info(S_SC_R_52_INFO),
        .S_SC_R_payld(S_SC_R_52_PAYLD),
        .S_SC_R_recv(S_SC_R_52_RECV),
        .S_SC_R_req(S_SC_R_52_REQ),
        .S_SC_R_send(S_SC_R_52_SEND),
        .S_SC_W_info(S_SC_W_52_INFO),
        .S_SC_W_payld(S_SC_W_52_PAYLD),
        .S_SC_W_recv(S_SC_W_52_RECV),
        .S_SC_W_req(S_SC_W_52_REQ),
        .S_SC_W_send(S_SC_W_52_SEND),
        .m_axi_aclk(clk_map_M50_ACLK),
        .m_axi_aresetn(m_axi_aresetn_50),
        .s_axi_aclk(clk_map_M00_ACLK),
        .s_axi_aresetn(clk_map_M00_ARESETN));
  bd_afc3_m50s2a_0 m50_sc2axi
       (.aclk(clk_map_M50_ACLK),
        .m_axi_araddr(m50_sc2axi_M_AXI_ARADDR),
        .m_axi_arcache(m50_sc2axi_M_AXI_ARCACHE),
        .m_axi_arid(m50_sc2axi_M_AXI_ARID),
        .m_axi_arlen(m50_sc2axi_M_AXI_ARLEN),
        .m_axi_arlock(m50_sc2axi_M_AXI_ARLOCK),
        .m_axi_arprot(m50_sc2axi_M_AXI_ARPROT),
        .m_axi_arqos(m50_sc2axi_M_AXI_ARQOS),
        .m_axi_arready(m50_sc2axi_M_AXI_ARREADY),
        .m_axi_aruser(m50_sc2axi_M_AXI_ARUSER),
        .m_axi_arvalid(m50_sc2axi_M_AXI_ARVALID),
        .m_axi_awaddr(m50_sc2axi_M_AXI_AWADDR),
        .m_axi_awcache(m50_sc2axi_M_AXI_AWCACHE),
        .m_axi_awid(m50_sc2axi_M_AXI_AWID),
        .m_axi_awlen(m50_sc2axi_M_AXI_AWLEN),
        .m_axi_awlock(m50_sc2axi_M_AXI_AWLOCK),
        .m_axi_awprot(m50_sc2axi_M_AXI_AWPROT),
        .m_axi_awqos(m50_sc2axi_M_AXI_AWQOS),
        .m_axi_awready(m50_sc2axi_M_AXI_AWREADY),
        .m_axi_awuser(m50_sc2axi_M_AXI_AWUSER),
        .m_axi_awvalid(m50_sc2axi_M_AXI_AWVALID),
        .m_axi_bid(m50_sc2axi_M_AXI_BID),
        .m_axi_bready(m50_sc2axi_M_AXI_BREADY),
        .m_axi_bresp(m50_sc2axi_M_AXI_BRESP),
        .m_axi_buser(m50_sc2axi_M_AXI_BUSER),
        .m_axi_bvalid(m50_sc2axi_M_AXI_BVALID),
        .m_axi_rdata(m50_sc2axi_M_AXI_RDATA),
        .m_axi_rid(m50_sc2axi_M_AXI_RID),
        .m_axi_rlast(m50_sc2axi_M_AXI_RLAST),
        .m_axi_rready(m50_sc2axi_M_AXI_RREADY),
        .m_axi_rresp(m50_sc2axi_M_AXI_RRESP),
        .m_axi_ruser(m50_sc2axi_M_AXI_RUSER),
        .m_axi_rvalid(m50_sc2axi_M_AXI_RVALID),
        .m_axi_wdata(m50_sc2axi_M_AXI_WDATA),
        .m_axi_wlast(m50_sc2axi_M_AXI_WLAST),
        .m_axi_wready(m50_sc2axi_M_AXI_WREADY),
        .m_axi_wstrb(m50_sc2axi_M_AXI_WSTRB),
        .m_axi_wuser(m50_sc2axi_M_AXI_WUSER),
        .m_axi_wvalid(m50_sc2axi_M_AXI_WVALID),
        .m_sc_b_info(S_SC_B_52_INFO),
        .m_sc_b_payld(S_SC_B_52_PAYLD),
        .m_sc_b_recv(S_SC_B_52_RECV),
        .m_sc_b_req(S_SC_B_52_REQ),
        .m_sc_b_send(S_SC_B_52_SEND),
        .m_sc_r_info(S_SC_R_52_INFO),
        .m_sc_r_payld(S_SC_R_52_PAYLD),
        .m_sc_r_recv(S_SC_R_52_RECV),
        .m_sc_r_req(S_SC_R_52_REQ),
        .m_sc_r_send(S_SC_R_52_SEND),
        .s_sc_ar_info(m50_nodes_M_SC_AR_INFO),
        .s_sc_ar_payld(m50_nodes_M_SC_AR_PAYLD[179:0]),
        .s_sc_ar_recv(m50_nodes_M_SC_AR_RECV),
        .s_sc_ar_req(m50_nodes_M_SC_AR_REQ),
        .s_sc_ar_send(m50_nodes_M_SC_AR_SEND),
        .s_sc_aw_info(m50_nodes_M_SC_AW_INFO),
        .s_sc_aw_payld(m50_nodes_M_SC_AW_PAYLD[179:0]),
        .s_sc_aw_recv(m50_nodes_M_SC_AW_RECV),
        .s_sc_aw_req(m50_nodes_M_SC_AW_REQ),
        .s_sc_aw_send(m50_nodes_M_SC_AW_SEND),
        .s_sc_w_info(m50_nodes_M_SC_W_INFO),
        .s_sc_w_payld(m50_nodes_M_SC_W_PAYLD[66:0]),
        .s_sc_w_recv(m50_nodes_M_SC_W_RECV),
        .s_sc_w_req(m50_nodes_M_SC_W_REQ),
        .s_sc_w_send(m50_nodes_M_SC_W_SEND));
  bd_afc3_s00a2s_0 s00_axi2sc
       (.aclk(aclk_1),
        .m_sc_ar_info(S_SC_AR_1_INFO),
        .m_sc_ar_payld(S_SC_AR_1_PAYLD),
        .m_sc_ar_recv(S_SC_AR_1_RECV),
        .m_sc_ar_req(S_SC_AR_1_REQ),
        .m_sc_ar_send(S_SC_AR_1_SEND),
        .m_sc_aw_info(S_SC_AW_1_INFO),
        .m_sc_aw_payld(S_SC_AW_1_PAYLD),
        .m_sc_aw_recv(S_SC_AW_1_RECV),
        .m_sc_aw_req(S_SC_AW_1_REQ),
        .m_sc_aw_send(S_SC_AW_1_SEND),
        .m_sc_w_info(S_SC_W_1_INFO),
        .m_sc_w_payld(S_SC_W_1_PAYLD),
        .m_sc_w_recv(S_SC_W_1_RECV),
        .m_sc_w_req(S_SC_W_1_REQ),
        .m_sc_w_send(S_SC_W_1_SEND),
        .s_axi_araddr(s00_entry_pipeline_m_axi_ARADDR),
        .s_axi_arcache(s00_entry_pipeline_m_axi_ARCACHE),
        .s_axi_arid(s00_entry_pipeline_m_axi_ARID),
        .s_axi_arlen(s00_entry_pipeline_m_axi_ARLEN),
        .s_axi_arlock(s00_entry_pipeline_m_axi_ARLOCK),
        .s_axi_arprot(s00_entry_pipeline_m_axi_ARPROT),
        .s_axi_arqos(s00_entry_pipeline_m_axi_ARQOS),
        .s_axi_arready(s00_entry_pipeline_m_axi_ARREADY),
        .s_axi_aruser(s00_entry_pipeline_m_axi_ARUSER),
        .s_axi_arvalid(s00_entry_pipeline_m_axi_ARVALID),
        .s_axi_awaddr(s00_entry_pipeline_m_axi_AWADDR),
        .s_axi_awcache(s00_entry_pipeline_m_axi_AWCACHE),
        .s_axi_awid(s00_entry_pipeline_m_axi_AWID),
        .s_axi_awlen(s00_entry_pipeline_m_axi_AWLEN),
        .s_axi_awlock(s00_entry_pipeline_m_axi_AWLOCK),
        .s_axi_awprot(s00_entry_pipeline_m_axi_AWPROT),
        .s_axi_awqos(s00_entry_pipeline_m_axi_AWQOS),
        .s_axi_awready(s00_entry_pipeline_m_axi_AWREADY),
        .s_axi_awuser(s00_entry_pipeline_m_axi_AWUSER),
        .s_axi_awvalid(s00_entry_pipeline_m_axi_AWVALID),
        .s_axi_bid(s00_entry_pipeline_m_axi_BID),
        .s_axi_bready(s00_entry_pipeline_m_axi_BREADY),
        .s_axi_bresp(s00_entry_pipeline_m_axi_BRESP),
        .s_axi_buser(s00_entry_pipeline_m_axi_BUSER),
        .s_axi_bvalid(s00_entry_pipeline_m_axi_BVALID),
        .s_axi_rdata(s00_entry_pipeline_m_axi_RDATA),
        .s_axi_rid(s00_entry_pipeline_m_axi_RID),
        .s_axi_rlast(s00_entry_pipeline_m_axi_RLAST),
        .s_axi_rready(s00_entry_pipeline_m_axi_RREADY),
        .s_axi_rresp(s00_entry_pipeline_m_axi_RRESP),
        .s_axi_ruser(s00_entry_pipeline_m_axi_RUSER),
        .s_axi_rvalid(s00_entry_pipeline_m_axi_RVALID),
        .s_axi_wdata(s00_entry_pipeline_m_axi_WDATA),
        .s_axi_wlast(s00_entry_pipeline_m_axi_WLAST),
        .s_axi_wready(s00_entry_pipeline_m_axi_WREADY),
        .s_axi_wstrb(s00_entry_pipeline_m_axi_WSTRB),
        .s_axi_wuser(s00_entry_pipeline_m_axi_WUSER),
        .s_axi_wvalid(s00_entry_pipeline_m_axi_WVALID),
        .s_sc_b_info(s00_nodes_M_SC_B_INFO),
        .s_sc_b_payld(s00_nodes_M_SC_B_PAYLD),
        .s_sc_b_recv(s00_nodes_M_SC_B_RECV),
        .s_sc_b_req(s00_nodes_M_SC_B_REQ),
        .s_sc_b_send(s00_nodes_M_SC_B_SEND),
        .s_sc_r_info(s00_nodes_M_SC_R_INFO),
        .s_sc_r_payld(s00_nodes_M_SC_R_PAYLD),
        .s_sc_r_recv(s00_nodes_M_SC_R_RECV),
        .s_sc_r_req(s00_nodes_M_SC_R_REQ),
        .s_sc_r_send(s00_nodes_M_SC_R_SEND));
  s00_entry_pipeline_imp_USCCV8 s00_entry_pipeline
       (.aclk(aclk_1),
        .aresetn(aresetn_2),
        .m_axi_araddr(s00_entry_pipeline_m_axi_ARADDR),
        .m_axi_arcache(s00_entry_pipeline_m_axi_ARCACHE),
        .m_axi_arid(s00_entry_pipeline_m_axi_ARID),
        .m_axi_arlen(s00_entry_pipeline_m_axi_ARLEN),
        .m_axi_arlock(s00_entry_pipeline_m_axi_ARLOCK),
        .m_axi_arprot(s00_entry_pipeline_m_axi_ARPROT),
        .m_axi_arqos(s00_entry_pipeline_m_axi_ARQOS),
        .m_axi_arready(s00_entry_pipeline_m_axi_ARREADY),
        .m_axi_aruser(s00_entry_pipeline_m_axi_ARUSER),
        .m_axi_arvalid(s00_entry_pipeline_m_axi_ARVALID),
        .m_axi_awaddr(s00_entry_pipeline_m_axi_AWADDR),
        .m_axi_awcache(s00_entry_pipeline_m_axi_AWCACHE),
        .m_axi_awid(s00_entry_pipeline_m_axi_AWID),
        .m_axi_awlen(s00_entry_pipeline_m_axi_AWLEN),
        .m_axi_awlock(s00_entry_pipeline_m_axi_AWLOCK),
        .m_axi_awprot(s00_entry_pipeline_m_axi_AWPROT),
        .m_axi_awqos(s00_entry_pipeline_m_axi_AWQOS),
        .m_axi_awready(s00_entry_pipeline_m_axi_AWREADY),
        .m_axi_awuser(s00_entry_pipeline_m_axi_AWUSER),
        .m_axi_awvalid(s00_entry_pipeline_m_axi_AWVALID),
        .m_axi_bid(s00_entry_pipeline_m_axi_BID),
        .m_axi_bready(s00_entry_pipeline_m_axi_BREADY),
        .m_axi_bresp(s00_entry_pipeline_m_axi_BRESP),
        .m_axi_buser(s00_entry_pipeline_m_axi_BUSER),
        .m_axi_bvalid(s00_entry_pipeline_m_axi_BVALID),
        .m_axi_rdata(s00_entry_pipeline_m_axi_RDATA),
        .m_axi_rid(s00_entry_pipeline_m_axi_RID),
        .m_axi_rlast(s00_entry_pipeline_m_axi_RLAST),
        .m_axi_rready(s00_entry_pipeline_m_axi_RREADY),
        .m_axi_rresp(s00_entry_pipeline_m_axi_RRESP),
        .m_axi_ruser(s00_entry_pipeline_m_axi_RUSER),
        .m_axi_rvalid(s00_entry_pipeline_m_axi_RVALID),
        .m_axi_wdata(s00_entry_pipeline_m_axi_WDATA),
        .m_axi_wlast(s00_entry_pipeline_m_axi_WLAST),
        .m_axi_wready(s00_entry_pipeline_m_axi_WREADY),
        .m_axi_wstrb(s00_entry_pipeline_m_axi_WSTRB),
        .m_axi_wuser(s00_entry_pipeline_m_axi_WUSER),
        .m_axi_wvalid(s00_entry_pipeline_m_axi_WVALID),
        .s_axi_araddr(S00_AXI_1_ARADDR),
        .s_axi_arburst(S00_AXI_1_ARBURST),
        .s_axi_arcache(S00_AXI_1_ARCACHE),
        .s_axi_arid(S00_AXI_1_ARID),
        .s_axi_arlen(S00_AXI_1_ARLEN),
        .s_axi_arlock(S00_AXI_1_ARLOCK),
        .s_axi_arprot(S00_AXI_1_ARPROT),
        .s_axi_arqos(S00_AXI_1_ARQOS),
        .s_axi_arready(S00_AXI_1_ARREADY),
        .s_axi_arsize(S00_AXI_1_ARSIZE),
        .s_axi_aruser(S00_AXI_1_ARUSER),
        .s_axi_arvalid(S00_AXI_1_ARVALID),
        .s_axi_awaddr(S00_AXI_1_AWADDR),
        .s_axi_awburst(S00_AXI_1_AWBURST),
        .s_axi_awcache(S00_AXI_1_AWCACHE),
        .s_axi_awid(S00_AXI_1_AWID),
        .s_axi_awlen(S00_AXI_1_AWLEN),
        .s_axi_awlock(S00_AXI_1_AWLOCK),
        .s_axi_awprot(S00_AXI_1_AWPROT),
        .s_axi_awqos(S00_AXI_1_AWQOS),
        .s_axi_awready(S00_AXI_1_AWREADY),
        .s_axi_awsize(S00_AXI_1_AWSIZE),
        .s_axi_awuser(S00_AXI_1_AWUSER),
        .s_axi_awvalid(S00_AXI_1_AWVALID),
        .s_axi_bid(S00_AXI_1_BID),
        .s_axi_bready(S00_AXI_1_BREADY),
        .s_axi_bresp(S00_AXI_1_BRESP),
        .s_axi_bvalid(S00_AXI_1_BVALID),
        .s_axi_rdata(S00_AXI_1_RDATA),
        .s_axi_rid(S00_AXI_1_RID),
        .s_axi_rlast(S00_AXI_1_RLAST),
        .s_axi_rready(S00_AXI_1_RREADY),
        .s_axi_rresp(S00_AXI_1_RRESP),
        .s_axi_rvalid(S00_AXI_1_RVALID),
        .s_axi_wdata(S00_AXI_1_WDATA),
        .s_axi_wlast(S00_AXI_1_WLAST),
        .s_axi_wready(S00_AXI_1_WREADY),
        .s_axi_wstrb(S00_AXI_1_WSTRB),
        .s_axi_wvalid(S00_AXI_1_WVALID));
  s00_nodes_imp_Y7M43I s00_nodes
       (.M_SC_AR_info(s00_nodes_M_SC_AR_INFO),
        .M_SC_AR_payld(s00_nodes_M_SC_AR_PAYLD),
        .M_SC_AR_recv(s00_nodes_M_SC_AR_RECV),
        .M_SC_AR_req(s00_nodes_M_SC_AR_REQ),
        .M_SC_AR_send(s00_nodes_M_SC_AR_SEND),
        .M_SC_AW_info(s00_nodes_M_SC_AW_INFO),
        .M_SC_AW_payld(s00_nodes_M_SC_AW_PAYLD),
        .M_SC_AW_recv(s00_nodes_M_SC_AW_RECV),
        .M_SC_AW_req(s00_nodes_M_SC_AW_REQ),
        .M_SC_AW_send(s00_nodes_M_SC_AW_SEND),
        .M_SC_B_info(s00_nodes_M_SC_B_INFO),
        .M_SC_B_payld(s00_nodes_M_SC_B_PAYLD),
        .M_SC_B_recv(s00_nodes_M_SC_B_RECV),
        .M_SC_B_req(s00_nodes_M_SC_B_REQ),
        .M_SC_B_send(s00_nodes_M_SC_B_SEND),
        .M_SC_R_info(s00_nodes_M_SC_R_INFO),
        .M_SC_R_payld(s00_nodes_M_SC_R_PAYLD),
        .M_SC_R_recv(s00_nodes_M_SC_R_RECV),
        .M_SC_R_req(s00_nodes_M_SC_R_REQ),
        .M_SC_R_send(s00_nodes_M_SC_R_SEND),
        .M_SC_W_info(s00_nodes_M_SC_W_INFO),
        .M_SC_W_payld(s00_nodes_M_SC_W_PAYLD),
        .M_SC_W_recv(s00_nodes_M_SC_W_RECV),
        .M_SC_W_req(s00_nodes_M_SC_W_REQ),
        .M_SC_W_send(s00_nodes_M_SC_W_SEND),
        .S_SC_AR_info(S_SC_AR_1_INFO),
        .S_SC_AR_payld(S_SC_AR_1_PAYLD),
        .S_SC_AR_recv(S_SC_AR_1_RECV),
        .S_SC_AR_req(S_SC_AR_1_REQ),
        .S_SC_AR_send(S_SC_AR_1_SEND),
        .S_SC_AW_info(S_SC_AW_1_INFO),
        .S_SC_AW_payld(S_SC_AW_1_PAYLD),
        .S_SC_AW_recv(S_SC_AW_1_RECV),
        .S_SC_AW_req(S_SC_AW_1_REQ),
        .S_SC_AW_send(S_SC_AW_1_SEND),
        .S_SC_B_info(S_SC_B_1_INFO),
        .S_SC_B_payld(S_SC_B_1_PAYLD),
        .S_SC_B_recv(S_SC_B_1_RECV),
        .S_SC_B_req(S_SC_B_1_REQ),
        .S_SC_B_send(S_SC_B_1_SEND),
        .S_SC_R_info(S_SC_R_1_INFO),
        .S_SC_R_payld(S_SC_R_1_PAYLD),
        .S_SC_R_recv(S_SC_R_1_RECV),
        .S_SC_R_req(S_SC_R_1_REQ),
        .S_SC_R_send(S_SC_R_1_SEND),
        .S_SC_W_info(S_SC_W_1_INFO),
        .S_SC_W_payld(S_SC_W_1_PAYLD),
        .S_SC_W_recv(S_SC_W_1_RECV),
        .S_SC_W_req(S_SC_W_1_REQ),
        .S_SC_W_send(S_SC_W_1_SEND),
        .m_sc_clk(clk_map_M00_ACLK),
        .m_sc_resetn(clk_map_M00_ARESETN),
        .s_sc_clk(aclk_1),
        .s_sc_resetn(aresetn_2));
  switchboards_imp_4N4PBE switchboards
       (.M00_SC_AR_info(S_SC_AR_2_INFO),
        .M00_SC_AR_payld(S_SC_AR_2_PAYLD),
        .M00_SC_AR_recv(S_SC_AR_2_RECV),
        .M00_SC_AR_req(S_SC_AR_2_REQ),
        .M00_SC_AR_send(S_SC_AR_2_SEND),
        .M00_SC_AW_info(S_SC_AW_2_INFO),
        .M00_SC_AW_payld(S_SC_AW_2_PAYLD),
        .M00_SC_AW_recv(S_SC_AW_2_RECV),
        .M00_SC_AW_req(S_SC_AW_2_REQ),
        .M00_SC_AW_send(S_SC_AW_2_SEND),
        .M00_SC_B_info(S_SC_B_1_INFO),
        .M00_SC_B_payld(S_SC_B_1_PAYLD),
        .M00_SC_B_recv(S_SC_B_1_RECV),
        .M00_SC_B_req(S_SC_B_1_REQ),
        .M00_SC_B_send(S_SC_B_1_SEND),
        .M00_SC_R_info(S_SC_R_1_INFO),
        .M00_SC_R_payld(S_SC_R_1_PAYLD),
        .M00_SC_R_recv(S_SC_R_1_RECV),
        .M00_SC_R_req(S_SC_R_1_REQ),
        .M00_SC_R_send(S_SC_R_1_SEND),
        .M00_SC_W_info(S_SC_W_2_INFO),
        .M00_SC_W_payld(S_SC_W_2_PAYLD),
        .M00_SC_W_recv(S_SC_W_2_RECV),
        .M00_SC_W_req(S_SC_W_2_REQ),
        .M00_SC_W_send(S_SC_W_2_SEND),
        .M01_SC_AR_info(S_SC_AR_3_INFO),
        .M01_SC_AR_payld(S_SC_AR_3_PAYLD),
        .M01_SC_AR_recv(S_SC_AR_3_RECV),
        .M01_SC_AR_req(S_SC_AR_3_REQ),
        .M01_SC_AR_send(S_SC_AR_3_SEND),
        .M01_SC_AW_info(S_SC_AW_3_INFO),
        .M01_SC_AW_payld(S_SC_AW_3_PAYLD),
        .M01_SC_AW_recv(S_SC_AW_3_RECV),
        .M01_SC_AW_req(S_SC_AW_3_REQ),
        .M01_SC_AW_send(S_SC_AW_3_SEND),
        .M01_SC_W_info(S_SC_W_3_INFO),
        .M01_SC_W_payld(S_SC_W_3_PAYLD),
        .M01_SC_W_recv(S_SC_W_3_RECV),
        .M01_SC_W_req(S_SC_W_3_REQ),
        .M01_SC_W_send(S_SC_W_3_SEND),
        .M02_SC_AR_info(S_SC_AR_4_INFO),
        .M02_SC_AR_payld(S_SC_AR_4_PAYLD),
        .M02_SC_AR_recv(S_SC_AR_4_RECV),
        .M02_SC_AR_req(S_SC_AR_4_REQ),
        .M02_SC_AR_send(S_SC_AR_4_SEND),
        .M02_SC_AW_info(S_SC_AW_4_INFO),
        .M02_SC_AW_payld(S_SC_AW_4_PAYLD),
        .M02_SC_AW_recv(S_SC_AW_4_RECV),
        .M02_SC_AW_req(S_SC_AW_4_REQ),
        .M02_SC_AW_send(S_SC_AW_4_SEND),
        .M02_SC_W_info(S_SC_W_4_INFO),
        .M02_SC_W_payld(S_SC_W_4_PAYLD),
        .M02_SC_W_recv(S_SC_W_4_RECV),
        .M02_SC_W_req(S_SC_W_4_REQ),
        .M02_SC_W_send(S_SC_W_4_SEND),
        .M03_SC_AR_info(S_SC_AR_5_INFO),
        .M03_SC_AR_payld(S_SC_AR_5_PAYLD),
        .M03_SC_AR_recv(S_SC_AR_5_RECV),
        .M03_SC_AR_req(S_SC_AR_5_REQ),
        .M03_SC_AR_send(S_SC_AR_5_SEND),
        .M03_SC_AW_info(S_SC_AW_5_INFO),
        .M03_SC_AW_payld(S_SC_AW_5_PAYLD),
        .M03_SC_AW_recv(S_SC_AW_5_RECV),
        .M03_SC_AW_req(S_SC_AW_5_REQ),
        .M03_SC_AW_send(S_SC_AW_5_SEND),
        .M03_SC_W_info(S_SC_W_5_INFO),
        .M03_SC_W_payld(S_SC_W_5_PAYLD),
        .M03_SC_W_recv(S_SC_W_5_RECV),
        .M03_SC_W_req(S_SC_W_5_REQ),
        .M03_SC_W_send(S_SC_W_5_SEND),
        .M04_SC_AR_info(S_SC_AR_6_INFO),
        .M04_SC_AR_payld(S_SC_AR_6_PAYLD),
        .M04_SC_AR_recv(S_SC_AR_6_RECV),
        .M04_SC_AR_req(S_SC_AR_6_REQ),
        .M04_SC_AR_send(S_SC_AR_6_SEND),
        .M04_SC_AW_info(S_SC_AW_6_INFO),
        .M04_SC_AW_payld(S_SC_AW_6_PAYLD),
        .M04_SC_AW_recv(S_SC_AW_6_RECV),
        .M04_SC_AW_req(S_SC_AW_6_REQ),
        .M04_SC_AW_send(S_SC_AW_6_SEND),
        .M04_SC_W_info(S_SC_W_6_INFO),
        .M04_SC_W_payld(S_SC_W_6_PAYLD),
        .M04_SC_W_recv(S_SC_W_6_RECV),
        .M04_SC_W_req(S_SC_W_6_REQ),
        .M04_SC_W_send(S_SC_W_6_SEND),
        .M05_SC_AR_info(S_SC_AR_7_INFO),
        .M05_SC_AR_payld(S_SC_AR_7_PAYLD),
        .M05_SC_AR_recv(S_SC_AR_7_RECV),
        .M05_SC_AR_req(S_SC_AR_7_REQ),
        .M05_SC_AR_send(S_SC_AR_7_SEND),
        .M05_SC_AW_info(S_SC_AW_7_INFO),
        .M05_SC_AW_payld(S_SC_AW_7_PAYLD),
        .M05_SC_AW_recv(S_SC_AW_7_RECV),
        .M05_SC_AW_req(S_SC_AW_7_REQ),
        .M05_SC_AW_send(S_SC_AW_7_SEND),
        .M05_SC_W_info(S_SC_W_7_INFO),
        .M05_SC_W_payld(S_SC_W_7_PAYLD),
        .M05_SC_W_recv(S_SC_W_7_RECV),
        .M05_SC_W_req(S_SC_W_7_REQ),
        .M05_SC_W_send(S_SC_W_7_SEND),
        .M06_SC_AR_info(S_SC_AR_8_INFO),
        .M06_SC_AR_payld(S_SC_AR_8_PAYLD),
        .M06_SC_AR_recv(S_SC_AR_8_RECV),
        .M06_SC_AR_req(S_SC_AR_8_REQ),
        .M06_SC_AR_send(S_SC_AR_8_SEND),
        .M06_SC_AW_info(S_SC_AW_8_INFO),
        .M06_SC_AW_payld(S_SC_AW_8_PAYLD),
        .M06_SC_AW_recv(S_SC_AW_8_RECV),
        .M06_SC_AW_req(S_SC_AW_8_REQ),
        .M06_SC_AW_send(S_SC_AW_8_SEND),
        .M06_SC_W_info(S_SC_W_8_INFO),
        .M06_SC_W_payld(S_SC_W_8_PAYLD),
        .M06_SC_W_recv(S_SC_W_8_RECV),
        .M06_SC_W_req(S_SC_W_8_REQ),
        .M06_SC_W_send(S_SC_W_8_SEND),
        .M07_SC_AR_info(S_SC_AR_9_INFO),
        .M07_SC_AR_payld(S_SC_AR_9_PAYLD),
        .M07_SC_AR_recv(S_SC_AR_9_RECV),
        .M07_SC_AR_req(S_SC_AR_9_REQ),
        .M07_SC_AR_send(S_SC_AR_9_SEND),
        .M07_SC_AW_info(S_SC_AW_9_INFO),
        .M07_SC_AW_payld(S_SC_AW_9_PAYLD),
        .M07_SC_AW_recv(S_SC_AW_9_RECV),
        .M07_SC_AW_req(S_SC_AW_9_REQ),
        .M07_SC_AW_send(S_SC_AW_9_SEND),
        .M07_SC_W_info(S_SC_W_9_INFO),
        .M07_SC_W_payld(S_SC_W_9_PAYLD),
        .M07_SC_W_recv(S_SC_W_9_RECV),
        .M07_SC_W_req(S_SC_W_9_REQ),
        .M07_SC_W_send(S_SC_W_9_SEND),
        .M08_SC_AR_info(S_SC_AR_10_INFO),
        .M08_SC_AR_payld(S_SC_AR_10_PAYLD),
        .M08_SC_AR_recv(S_SC_AR_10_RECV),
        .M08_SC_AR_req(S_SC_AR_10_REQ),
        .M08_SC_AR_send(S_SC_AR_10_SEND),
        .M08_SC_AW_info(S_SC_AW_10_INFO),
        .M08_SC_AW_payld(S_SC_AW_10_PAYLD),
        .M08_SC_AW_recv(S_SC_AW_10_RECV),
        .M08_SC_AW_req(S_SC_AW_10_REQ),
        .M08_SC_AW_send(S_SC_AW_10_SEND),
        .M08_SC_W_info(S_SC_W_10_INFO),
        .M08_SC_W_payld(S_SC_W_10_PAYLD),
        .M08_SC_W_recv(S_SC_W_10_RECV),
        .M08_SC_W_req(S_SC_W_10_REQ),
        .M08_SC_W_send(S_SC_W_10_SEND),
        .M09_SC_AR_info(S_SC_AR_11_INFO),
        .M09_SC_AR_payld(S_SC_AR_11_PAYLD),
        .M09_SC_AR_recv(S_SC_AR_11_RECV),
        .M09_SC_AR_req(S_SC_AR_11_REQ),
        .M09_SC_AR_send(S_SC_AR_11_SEND),
        .M09_SC_AW_info(S_SC_AW_11_INFO),
        .M09_SC_AW_payld(S_SC_AW_11_PAYLD),
        .M09_SC_AW_recv(S_SC_AW_11_RECV),
        .M09_SC_AW_req(S_SC_AW_11_REQ),
        .M09_SC_AW_send(S_SC_AW_11_SEND),
        .M09_SC_W_info(S_SC_W_11_INFO),
        .M09_SC_W_payld(S_SC_W_11_PAYLD),
        .M09_SC_W_recv(S_SC_W_11_RECV),
        .M09_SC_W_req(S_SC_W_11_REQ),
        .M09_SC_W_send(S_SC_W_11_SEND),
        .M10_SC_AR_info(S_SC_AR_12_INFO),
        .M10_SC_AR_payld(S_SC_AR_12_PAYLD),
        .M10_SC_AR_recv(S_SC_AR_12_RECV),
        .M10_SC_AR_req(S_SC_AR_12_REQ),
        .M10_SC_AR_send(S_SC_AR_12_SEND),
        .M10_SC_AW_info(S_SC_AW_12_INFO),
        .M10_SC_AW_payld(S_SC_AW_12_PAYLD),
        .M10_SC_AW_recv(S_SC_AW_12_RECV),
        .M10_SC_AW_req(S_SC_AW_12_REQ),
        .M10_SC_AW_send(S_SC_AW_12_SEND),
        .M10_SC_W_info(S_SC_W_12_INFO),
        .M10_SC_W_payld(S_SC_W_12_PAYLD),
        .M10_SC_W_recv(S_SC_W_12_RECV),
        .M10_SC_W_req(S_SC_W_12_REQ),
        .M10_SC_W_send(S_SC_W_12_SEND),
        .M11_SC_AR_info(S_SC_AR_13_INFO),
        .M11_SC_AR_payld(S_SC_AR_13_PAYLD),
        .M11_SC_AR_recv(S_SC_AR_13_RECV),
        .M11_SC_AR_req(S_SC_AR_13_REQ),
        .M11_SC_AR_send(S_SC_AR_13_SEND),
        .M11_SC_AW_info(S_SC_AW_13_INFO),
        .M11_SC_AW_payld(S_SC_AW_13_PAYLD),
        .M11_SC_AW_recv(S_SC_AW_13_RECV),
        .M11_SC_AW_req(S_SC_AW_13_REQ),
        .M11_SC_AW_send(S_SC_AW_13_SEND),
        .M11_SC_W_info(S_SC_W_13_INFO),
        .M11_SC_W_payld(S_SC_W_13_PAYLD),
        .M11_SC_W_recv(S_SC_W_13_RECV),
        .M11_SC_W_req(S_SC_W_13_REQ),
        .M11_SC_W_send(S_SC_W_13_SEND),
        .M12_SC_AR_info(S_SC_AR_14_INFO),
        .M12_SC_AR_payld(S_SC_AR_14_PAYLD),
        .M12_SC_AR_recv(S_SC_AR_14_RECV),
        .M12_SC_AR_req(S_SC_AR_14_REQ),
        .M12_SC_AR_send(S_SC_AR_14_SEND),
        .M12_SC_AW_info(S_SC_AW_14_INFO),
        .M12_SC_AW_payld(S_SC_AW_14_PAYLD),
        .M12_SC_AW_recv(S_SC_AW_14_RECV),
        .M12_SC_AW_req(S_SC_AW_14_REQ),
        .M12_SC_AW_send(S_SC_AW_14_SEND),
        .M12_SC_W_info(S_SC_W_14_INFO),
        .M12_SC_W_payld(S_SC_W_14_PAYLD),
        .M12_SC_W_recv(S_SC_W_14_RECV),
        .M12_SC_W_req(S_SC_W_14_REQ),
        .M12_SC_W_send(S_SC_W_14_SEND),
        .M13_SC_AR_info(S_SC_AR_15_INFO),
        .M13_SC_AR_payld(S_SC_AR_15_PAYLD),
        .M13_SC_AR_recv(S_SC_AR_15_RECV),
        .M13_SC_AR_req(S_SC_AR_15_REQ),
        .M13_SC_AR_send(S_SC_AR_15_SEND),
        .M13_SC_AW_info(S_SC_AW_15_INFO),
        .M13_SC_AW_payld(S_SC_AW_15_PAYLD),
        .M13_SC_AW_recv(S_SC_AW_15_RECV),
        .M13_SC_AW_req(S_SC_AW_15_REQ),
        .M13_SC_AW_send(S_SC_AW_15_SEND),
        .M13_SC_W_info(S_SC_W_15_INFO),
        .M13_SC_W_payld(S_SC_W_15_PAYLD),
        .M13_SC_W_recv(S_SC_W_15_RECV),
        .M13_SC_W_req(S_SC_W_15_REQ),
        .M13_SC_W_send(S_SC_W_15_SEND),
        .M14_SC_AR_info(S_SC_AR_16_INFO),
        .M14_SC_AR_payld(S_SC_AR_16_PAYLD),
        .M14_SC_AR_recv(S_SC_AR_16_RECV),
        .M14_SC_AR_req(S_SC_AR_16_REQ),
        .M14_SC_AR_send(S_SC_AR_16_SEND),
        .M14_SC_AW_info(S_SC_AW_16_INFO),
        .M14_SC_AW_payld(S_SC_AW_16_PAYLD),
        .M14_SC_AW_recv(S_SC_AW_16_RECV),
        .M14_SC_AW_req(S_SC_AW_16_REQ),
        .M14_SC_AW_send(S_SC_AW_16_SEND),
        .M14_SC_W_info(S_SC_W_16_INFO),
        .M14_SC_W_payld(S_SC_W_16_PAYLD),
        .M14_SC_W_recv(S_SC_W_16_RECV),
        .M14_SC_W_req(S_SC_W_16_REQ),
        .M14_SC_W_send(S_SC_W_16_SEND),
        .M15_SC_AR_info(S_SC_AR_17_INFO),
        .M15_SC_AR_payld(S_SC_AR_17_PAYLD),
        .M15_SC_AR_recv(S_SC_AR_17_RECV),
        .M15_SC_AR_req(S_SC_AR_17_REQ),
        .M15_SC_AR_send(S_SC_AR_17_SEND),
        .M15_SC_AW_info(S_SC_AW_17_INFO),
        .M15_SC_AW_payld(S_SC_AW_17_PAYLD),
        .M15_SC_AW_recv(S_SC_AW_17_RECV),
        .M15_SC_AW_req(S_SC_AW_17_REQ),
        .M15_SC_AW_send(S_SC_AW_17_SEND),
        .M15_SC_W_info(S_SC_W_17_INFO),
        .M15_SC_W_payld(S_SC_W_17_PAYLD),
        .M15_SC_W_recv(S_SC_W_17_RECV),
        .M15_SC_W_req(S_SC_W_17_REQ),
        .M15_SC_W_send(S_SC_W_17_SEND),
        .M16_SC_AR_info(S_SC_AR_18_INFO),
        .M16_SC_AR_payld(S_SC_AR_18_PAYLD),
        .M16_SC_AR_recv(S_SC_AR_18_RECV),
        .M16_SC_AR_req(S_SC_AR_18_REQ),
        .M16_SC_AR_send(S_SC_AR_18_SEND),
        .M16_SC_AW_info(S_SC_AW_18_INFO),
        .M16_SC_AW_payld(S_SC_AW_18_PAYLD),
        .M16_SC_AW_recv(S_SC_AW_18_RECV),
        .M16_SC_AW_req(S_SC_AW_18_REQ),
        .M16_SC_AW_send(S_SC_AW_18_SEND),
        .M16_SC_W_info(S_SC_W_18_INFO),
        .M16_SC_W_payld(S_SC_W_18_PAYLD),
        .M16_SC_W_recv(S_SC_W_18_RECV),
        .M16_SC_W_req(S_SC_W_18_REQ),
        .M16_SC_W_send(S_SC_W_18_SEND),
        .M17_SC_AR_info(S_SC_AR_19_INFO),
        .M17_SC_AR_payld(S_SC_AR_19_PAYLD),
        .M17_SC_AR_recv(S_SC_AR_19_RECV),
        .M17_SC_AR_req(S_SC_AR_19_REQ),
        .M17_SC_AR_send(S_SC_AR_19_SEND),
        .M17_SC_AW_info(S_SC_AW_19_INFO),
        .M17_SC_AW_payld(S_SC_AW_19_PAYLD),
        .M17_SC_AW_recv(S_SC_AW_19_RECV),
        .M17_SC_AW_req(S_SC_AW_19_REQ),
        .M17_SC_AW_send(S_SC_AW_19_SEND),
        .M17_SC_W_info(S_SC_W_19_INFO),
        .M17_SC_W_payld(S_SC_W_19_PAYLD),
        .M17_SC_W_recv(S_SC_W_19_RECV),
        .M17_SC_W_req(S_SC_W_19_REQ),
        .M17_SC_W_send(S_SC_W_19_SEND),
        .M18_SC_AR_info(S_SC_AR_20_INFO),
        .M18_SC_AR_payld(S_SC_AR_20_PAYLD),
        .M18_SC_AR_recv(S_SC_AR_20_RECV),
        .M18_SC_AR_req(S_SC_AR_20_REQ),
        .M18_SC_AR_send(S_SC_AR_20_SEND),
        .M18_SC_AW_info(S_SC_AW_20_INFO),
        .M18_SC_AW_payld(S_SC_AW_20_PAYLD),
        .M18_SC_AW_recv(S_SC_AW_20_RECV),
        .M18_SC_AW_req(S_SC_AW_20_REQ),
        .M18_SC_AW_send(S_SC_AW_20_SEND),
        .M18_SC_W_info(S_SC_W_20_INFO),
        .M18_SC_W_payld(S_SC_W_20_PAYLD),
        .M18_SC_W_recv(S_SC_W_20_RECV),
        .M18_SC_W_req(S_SC_W_20_REQ),
        .M18_SC_W_send(S_SC_W_20_SEND),
        .M19_SC_AR_info(S_SC_AR_21_INFO),
        .M19_SC_AR_payld(S_SC_AR_21_PAYLD),
        .M19_SC_AR_recv(S_SC_AR_21_RECV),
        .M19_SC_AR_req(S_SC_AR_21_REQ),
        .M19_SC_AR_send(S_SC_AR_21_SEND),
        .M19_SC_AW_info(S_SC_AW_21_INFO),
        .M19_SC_AW_payld(S_SC_AW_21_PAYLD),
        .M19_SC_AW_recv(S_SC_AW_21_RECV),
        .M19_SC_AW_req(S_SC_AW_21_REQ),
        .M19_SC_AW_send(S_SC_AW_21_SEND),
        .M19_SC_W_info(S_SC_W_21_INFO),
        .M19_SC_W_payld(S_SC_W_21_PAYLD),
        .M19_SC_W_recv(S_SC_W_21_RECV),
        .M19_SC_W_req(S_SC_W_21_REQ),
        .M19_SC_W_send(S_SC_W_21_SEND),
        .M20_SC_AR_info(S_SC_AR_22_INFO),
        .M20_SC_AR_payld(S_SC_AR_22_PAYLD),
        .M20_SC_AR_recv(S_SC_AR_22_RECV),
        .M20_SC_AR_req(S_SC_AR_22_REQ),
        .M20_SC_AR_send(S_SC_AR_22_SEND),
        .M20_SC_AW_info(S_SC_AW_22_INFO),
        .M20_SC_AW_payld(S_SC_AW_22_PAYLD),
        .M20_SC_AW_recv(S_SC_AW_22_RECV),
        .M20_SC_AW_req(S_SC_AW_22_REQ),
        .M20_SC_AW_send(S_SC_AW_22_SEND),
        .M20_SC_W_info(S_SC_W_22_INFO),
        .M20_SC_W_payld(S_SC_W_22_PAYLD),
        .M20_SC_W_recv(S_SC_W_22_RECV),
        .M20_SC_W_req(S_SC_W_22_REQ),
        .M20_SC_W_send(S_SC_W_22_SEND),
        .M21_SC_AR_info(S_SC_AR_23_INFO),
        .M21_SC_AR_payld(S_SC_AR_23_PAYLD),
        .M21_SC_AR_recv(S_SC_AR_23_RECV),
        .M21_SC_AR_req(S_SC_AR_23_REQ),
        .M21_SC_AR_send(S_SC_AR_23_SEND),
        .M21_SC_AW_info(S_SC_AW_23_INFO),
        .M21_SC_AW_payld(S_SC_AW_23_PAYLD),
        .M21_SC_AW_recv(S_SC_AW_23_RECV),
        .M21_SC_AW_req(S_SC_AW_23_REQ),
        .M21_SC_AW_send(S_SC_AW_23_SEND),
        .M21_SC_W_info(S_SC_W_23_INFO),
        .M21_SC_W_payld(S_SC_W_23_PAYLD),
        .M21_SC_W_recv(S_SC_W_23_RECV),
        .M21_SC_W_req(S_SC_W_23_REQ),
        .M21_SC_W_send(S_SC_W_23_SEND),
        .M22_SC_AR_info(S_SC_AR_24_INFO),
        .M22_SC_AR_payld(S_SC_AR_24_PAYLD),
        .M22_SC_AR_recv(S_SC_AR_24_RECV),
        .M22_SC_AR_req(S_SC_AR_24_REQ),
        .M22_SC_AR_send(S_SC_AR_24_SEND),
        .M22_SC_AW_info(S_SC_AW_24_INFO),
        .M22_SC_AW_payld(S_SC_AW_24_PAYLD),
        .M22_SC_AW_recv(S_SC_AW_24_RECV),
        .M22_SC_AW_req(S_SC_AW_24_REQ),
        .M22_SC_AW_send(S_SC_AW_24_SEND),
        .M22_SC_W_info(S_SC_W_24_INFO),
        .M22_SC_W_payld(S_SC_W_24_PAYLD),
        .M22_SC_W_recv(S_SC_W_24_RECV),
        .M22_SC_W_req(S_SC_W_24_REQ),
        .M22_SC_W_send(S_SC_W_24_SEND),
        .M23_SC_AR_info(S_SC_AR_25_INFO),
        .M23_SC_AR_payld(S_SC_AR_25_PAYLD),
        .M23_SC_AR_recv(S_SC_AR_25_RECV),
        .M23_SC_AR_req(S_SC_AR_25_REQ),
        .M23_SC_AR_send(S_SC_AR_25_SEND),
        .M23_SC_AW_info(S_SC_AW_25_INFO),
        .M23_SC_AW_payld(S_SC_AW_25_PAYLD),
        .M23_SC_AW_recv(S_SC_AW_25_RECV),
        .M23_SC_AW_req(S_SC_AW_25_REQ),
        .M23_SC_AW_send(S_SC_AW_25_SEND),
        .M23_SC_W_info(S_SC_W_25_INFO),
        .M23_SC_W_payld(S_SC_W_25_PAYLD),
        .M23_SC_W_recv(S_SC_W_25_RECV),
        .M23_SC_W_req(S_SC_W_25_REQ),
        .M23_SC_W_send(S_SC_W_25_SEND),
        .M24_SC_AR_info(S_SC_AR_26_INFO),
        .M24_SC_AR_payld(S_SC_AR_26_PAYLD),
        .M24_SC_AR_recv(S_SC_AR_26_RECV),
        .M24_SC_AR_req(S_SC_AR_26_REQ),
        .M24_SC_AR_send(S_SC_AR_26_SEND),
        .M24_SC_AW_info(S_SC_AW_26_INFO),
        .M24_SC_AW_payld(S_SC_AW_26_PAYLD),
        .M24_SC_AW_recv(S_SC_AW_26_RECV),
        .M24_SC_AW_req(S_SC_AW_26_REQ),
        .M24_SC_AW_send(S_SC_AW_26_SEND),
        .M24_SC_W_info(S_SC_W_26_INFO),
        .M24_SC_W_payld(S_SC_W_26_PAYLD),
        .M24_SC_W_recv(S_SC_W_26_RECV),
        .M24_SC_W_req(S_SC_W_26_REQ),
        .M24_SC_W_send(S_SC_W_26_SEND),
        .M25_SC_AR_info(S_SC_AR_27_INFO),
        .M25_SC_AR_payld(S_SC_AR_27_PAYLD),
        .M25_SC_AR_recv(S_SC_AR_27_RECV),
        .M25_SC_AR_req(S_SC_AR_27_REQ),
        .M25_SC_AR_send(S_SC_AR_27_SEND),
        .M25_SC_AW_info(S_SC_AW_27_INFO),
        .M25_SC_AW_payld(S_SC_AW_27_PAYLD),
        .M25_SC_AW_recv(S_SC_AW_27_RECV),
        .M25_SC_AW_req(S_SC_AW_27_REQ),
        .M25_SC_AW_send(S_SC_AW_27_SEND),
        .M25_SC_W_info(S_SC_W_27_INFO),
        .M25_SC_W_payld(S_SC_W_27_PAYLD),
        .M25_SC_W_recv(S_SC_W_27_RECV),
        .M25_SC_W_req(S_SC_W_27_REQ),
        .M25_SC_W_send(S_SC_W_27_SEND),
        .M26_SC_AR_info(S_SC_AR_28_INFO),
        .M26_SC_AR_payld(S_SC_AR_28_PAYLD),
        .M26_SC_AR_recv(S_SC_AR_28_RECV),
        .M26_SC_AR_req(S_SC_AR_28_REQ),
        .M26_SC_AR_send(S_SC_AR_28_SEND),
        .M26_SC_AW_info(S_SC_AW_28_INFO),
        .M26_SC_AW_payld(S_SC_AW_28_PAYLD),
        .M26_SC_AW_recv(S_SC_AW_28_RECV),
        .M26_SC_AW_req(S_SC_AW_28_REQ),
        .M26_SC_AW_send(S_SC_AW_28_SEND),
        .M26_SC_W_info(S_SC_W_28_INFO),
        .M26_SC_W_payld(S_SC_W_28_PAYLD),
        .M26_SC_W_recv(S_SC_W_28_RECV),
        .M26_SC_W_req(S_SC_W_28_REQ),
        .M26_SC_W_send(S_SC_W_28_SEND),
        .M27_SC_AR_info(S_SC_AR_29_INFO),
        .M27_SC_AR_payld(S_SC_AR_29_PAYLD),
        .M27_SC_AR_recv(S_SC_AR_29_RECV),
        .M27_SC_AR_req(S_SC_AR_29_REQ),
        .M27_SC_AR_send(S_SC_AR_29_SEND),
        .M27_SC_AW_info(S_SC_AW_29_INFO),
        .M27_SC_AW_payld(S_SC_AW_29_PAYLD),
        .M27_SC_AW_recv(S_SC_AW_29_RECV),
        .M27_SC_AW_req(S_SC_AW_29_REQ),
        .M27_SC_AW_send(S_SC_AW_29_SEND),
        .M27_SC_W_info(S_SC_W_29_INFO),
        .M27_SC_W_payld(S_SC_W_29_PAYLD),
        .M27_SC_W_recv(S_SC_W_29_RECV),
        .M27_SC_W_req(S_SC_W_29_REQ),
        .M27_SC_W_send(S_SC_W_29_SEND),
        .M28_SC_AR_info(S_SC_AR_30_INFO),
        .M28_SC_AR_payld(S_SC_AR_30_PAYLD),
        .M28_SC_AR_recv(S_SC_AR_30_RECV),
        .M28_SC_AR_req(S_SC_AR_30_REQ),
        .M28_SC_AR_send(S_SC_AR_30_SEND),
        .M28_SC_AW_info(S_SC_AW_30_INFO),
        .M28_SC_AW_payld(S_SC_AW_30_PAYLD),
        .M28_SC_AW_recv(S_SC_AW_30_RECV),
        .M28_SC_AW_req(S_SC_AW_30_REQ),
        .M28_SC_AW_send(S_SC_AW_30_SEND),
        .M28_SC_W_info(S_SC_W_30_INFO),
        .M28_SC_W_payld(S_SC_W_30_PAYLD),
        .M28_SC_W_recv(S_SC_W_30_RECV),
        .M28_SC_W_req(S_SC_W_30_REQ),
        .M28_SC_W_send(S_SC_W_30_SEND),
        .M29_SC_AR_info(S_SC_AR_31_INFO),
        .M29_SC_AR_payld(S_SC_AR_31_PAYLD),
        .M29_SC_AR_recv(S_SC_AR_31_RECV),
        .M29_SC_AR_req(S_SC_AR_31_REQ),
        .M29_SC_AR_send(S_SC_AR_31_SEND),
        .M29_SC_AW_info(S_SC_AW_31_INFO),
        .M29_SC_AW_payld(S_SC_AW_31_PAYLD),
        .M29_SC_AW_recv(S_SC_AW_31_RECV),
        .M29_SC_AW_req(S_SC_AW_31_REQ),
        .M29_SC_AW_send(S_SC_AW_31_SEND),
        .M29_SC_W_info(S_SC_W_31_INFO),
        .M29_SC_W_payld(S_SC_W_31_PAYLD),
        .M29_SC_W_recv(S_SC_W_31_RECV),
        .M29_SC_W_req(S_SC_W_31_REQ),
        .M29_SC_W_send(S_SC_W_31_SEND),
        .M30_SC_AR_info(S_SC_AR_32_INFO),
        .M30_SC_AR_payld(S_SC_AR_32_PAYLD),
        .M30_SC_AR_recv(S_SC_AR_32_RECV),
        .M30_SC_AR_req(S_SC_AR_32_REQ),
        .M30_SC_AR_send(S_SC_AR_32_SEND),
        .M30_SC_AW_info(S_SC_AW_32_INFO),
        .M30_SC_AW_payld(S_SC_AW_32_PAYLD),
        .M30_SC_AW_recv(S_SC_AW_32_RECV),
        .M30_SC_AW_req(S_SC_AW_32_REQ),
        .M30_SC_AW_send(S_SC_AW_32_SEND),
        .M30_SC_W_info(S_SC_W_32_INFO),
        .M30_SC_W_payld(S_SC_W_32_PAYLD),
        .M30_SC_W_recv(S_SC_W_32_RECV),
        .M30_SC_W_req(S_SC_W_32_REQ),
        .M30_SC_W_send(S_SC_W_32_SEND),
        .M31_SC_AR_info(S_SC_AR_33_INFO),
        .M31_SC_AR_payld(S_SC_AR_33_PAYLD),
        .M31_SC_AR_recv(S_SC_AR_33_RECV),
        .M31_SC_AR_req(S_SC_AR_33_REQ),
        .M31_SC_AR_send(S_SC_AR_33_SEND),
        .M31_SC_AW_info(S_SC_AW_33_INFO),
        .M31_SC_AW_payld(S_SC_AW_33_PAYLD),
        .M31_SC_AW_recv(S_SC_AW_33_RECV),
        .M31_SC_AW_req(S_SC_AW_33_REQ),
        .M31_SC_AW_send(S_SC_AW_33_SEND),
        .M31_SC_W_info(S_SC_W_33_INFO),
        .M31_SC_W_payld(S_SC_W_33_PAYLD),
        .M31_SC_W_recv(S_SC_W_33_RECV),
        .M31_SC_W_req(S_SC_W_33_REQ),
        .M31_SC_W_send(S_SC_W_33_SEND),
        .M32_SC_AR_info(S_SC_AR_34_INFO),
        .M32_SC_AR_payld(S_SC_AR_34_PAYLD),
        .M32_SC_AR_recv(S_SC_AR_34_RECV),
        .M32_SC_AR_req(S_SC_AR_34_REQ),
        .M32_SC_AR_send(S_SC_AR_34_SEND),
        .M32_SC_AW_info(S_SC_AW_34_INFO),
        .M32_SC_AW_payld(S_SC_AW_34_PAYLD),
        .M32_SC_AW_recv(S_SC_AW_34_RECV),
        .M32_SC_AW_req(S_SC_AW_34_REQ),
        .M32_SC_AW_send(S_SC_AW_34_SEND),
        .M32_SC_W_info(S_SC_W_34_INFO),
        .M32_SC_W_payld(S_SC_W_34_PAYLD),
        .M32_SC_W_recv(S_SC_W_34_RECV),
        .M32_SC_W_req(S_SC_W_34_REQ),
        .M32_SC_W_send(S_SC_W_34_SEND),
        .M33_SC_AR_info(S_SC_AR_35_INFO),
        .M33_SC_AR_payld(S_SC_AR_35_PAYLD),
        .M33_SC_AR_recv(S_SC_AR_35_RECV),
        .M33_SC_AR_req(S_SC_AR_35_REQ),
        .M33_SC_AR_send(S_SC_AR_35_SEND),
        .M33_SC_AW_info(S_SC_AW_35_INFO),
        .M33_SC_AW_payld(S_SC_AW_35_PAYLD),
        .M33_SC_AW_recv(S_SC_AW_35_RECV),
        .M33_SC_AW_req(S_SC_AW_35_REQ),
        .M33_SC_AW_send(S_SC_AW_35_SEND),
        .M33_SC_W_info(S_SC_W_35_INFO),
        .M33_SC_W_payld(S_SC_W_35_PAYLD),
        .M33_SC_W_recv(S_SC_W_35_RECV),
        .M33_SC_W_req(S_SC_W_35_REQ),
        .M33_SC_W_send(S_SC_W_35_SEND),
        .M34_SC_AR_info(S_SC_AR_36_INFO),
        .M34_SC_AR_payld(S_SC_AR_36_PAYLD),
        .M34_SC_AR_recv(S_SC_AR_36_RECV),
        .M34_SC_AR_req(S_SC_AR_36_REQ),
        .M34_SC_AR_send(S_SC_AR_36_SEND),
        .M34_SC_AW_info(S_SC_AW_36_INFO),
        .M34_SC_AW_payld(S_SC_AW_36_PAYLD),
        .M34_SC_AW_recv(S_SC_AW_36_RECV),
        .M34_SC_AW_req(S_SC_AW_36_REQ),
        .M34_SC_AW_send(S_SC_AW_36_SEND),
        .M34_SC_W_info(S_SC_W_36_INFO),
        .M34_SC_W_payld(S_SC_W_36_PAYLD),
        .M34_SC_W_recv(S_SC_W_36_RECV),
        .M34_SC_W_req(S_SC_W_36_REQ),
        .M34_SC_W_send(S_SC_W_36_SEND),
        .M35_SC_AR_info(S_SC_AR_37_INFO),
        .M35_SC_AR_payld(S_SC_AR_37_PAYLD),
        .M35_SC_AR_recv(S_SC_AR_37_RECV),
        .M35_SC_AR_req(S_SC_AR_37_REQ),
        .M35_SC_AR_send(S_SC_AR_37_SEND),
        .M35_SC_AW_info(S_SC_AW_37_INFO),
        .M35_SC_AW_payld(S_SC_AW_37_PAYLD),
        .M35_SC_AW_recv(S_SC_AW_37_RECV),
        .M35_SC_AW_req(S_SC_AW_37_REQ),
        .M35_SC_AW_send(S_SC_AW_37_SEND),
        .M35_SC_W_info(S_SC_W_37_INFO),
        .M35_SC_W_payld(S_SC_W_37_PAYLD),
        .M35_SC_W_recv(S_SC_W_37_RECV),
        .M35_SC_W_req(S_SC_W_37_REQ),
        .M35_SC_W_send(S_SC_W_37_SEND),
        .M36_SC_AR_info(S_SC_AR_38_INFO),
        .M36_SC_AR_payld(S_SC_AR_38_PAYLD),
        .M36_SC_AR_recv(S_SC_AR_38_RECV),
        .M36_SC_AR_req(S_SC_AR_38_REQ),
        .M36_SC_AR_send(S_SC_AR_38_SEND),
        .M36_SC_AW_info(S_SC_AW_38_INFO),
        .M36_SC_AW_payld(S_SC_AW_38_PAYLD),
        .M36_SC_AW_recv(S_SC_AW_38_RECV),
        .M36_SC_AW_req(S_SC_AW_38_REQ),
        .M36_SC_AW_send(S_SC_AW_38_SEND),
        .M36_SC_W_info(S_SC_W_38_INFO),
        .M36_SC_W_payld(S_SC_W_38_PAYLD),
        .M36_SC_W_recv(S_SC_W_38_RECV),
        .M36_SC_W_req(S_SC_W_38_REQ),
        .M36_SC_W_send(S_SC_W_38_SEND),
        .M37_SC_AR_info(S_SC_AR_39_INFO),
        .M37_SC_AR_payld(S_SC_AR_39_PAYLD),
        .M37_SC_AR_recv(S_SC_AR_39_RECV),
        .M37_SC_AR_req(S_SC_AR_39_REQ),
        .M37_SC_AR_send(S_SC_AR_39_SEND),
        .M37_SC_AW_info(S_SC_AW_39_INFO),
        .M37_SC_AW_payld(S_SC_AW_39_PAYLD),
        .M37_SC_AW_recv(S_SC_AW_39_RECV),
        .M37_SC_AW_req(S_SC_AW_39_REQ),
        .M37_SC_AW_send(S_SC_AW_39_SEND),
        .M37_SC_W_info(S_SC_W_39_INFO),
        .M37_SC_W_payld(S_SC_W_39_PAYLD),
        .M37_SC_W_recv(S_SC_W_39_RECV),
        .M37_SC_W_req(S_SC_W_39_REQ),
        .M37_SC_W_send(S_SC_W_39_SEND),
        .M38_SC_AR_info(S_SC_AR_40_INFO),
        .M38_SC_AR_payld(S_SC_AR_40_PAYLD),
        .M38_SC_AR_recv(S_SC_AR_40_RECV),
        .M38_SC_AR_req(S_SC_AR_40_REQ),
        .M38_SC_AR_send(S_SC_AR_40_SEND),
        .M38_SC_AW_info(S_SC_AW_40_INFO),
        .M38_SC_AW_payld(S_SC_AW_40_PAYLD),
        .M38_SC_AW_recv(S_SC_AW_40_RECV),
        .M38_SC_AW_req(S_SC_AW_40_REQ),
        .M38_SC_AW_send(S_SC_AW_40_SEND),
        .M38_SC_W_info(S_SC_W_40_INFO),
        .M38_SC_W_payld(S_SC_W_40_PAYLD),
        .M38_SC_W_recv(S_SC_W_40_RECV),
        .M38_SC_W_req(S_SC_W_40_REQ),
        .M38_SC_W_send(S_SC_W_40_SEND),
        .M39_SC_AR_info(S_SC_AR_41_INFO),
        .M39_SC_AR_payld(S_SC_AR_41_PAYLD),
        .M39_SC_AR_recv(S_SC_AR_41_RECV),
        .M39_SC_AR_req(S_SC_AR_41_REQ),
        .M39_SC_AR_send(S_SC_AR_41_SEND),
        .M39_SC_AW_info(S_SC_AW_41_INFO),
        .M39_SC_AW_payld(S_SC_AW_41_PAYLD),
        .M39_SC_AW_recv(S_SC_AW_41_RECV),
        .M39_SC_AW_req(S_SC_AW_41_REQ),
        .M39_SC_AW_send(S_SC_AW_41_SEND),
        .M39_SC_W_info(S_SC_W_41_INFO),
        .M39_SC_W_payld(S_SC_W_41_PAYLD),
        .M39_SC_W_recv(S_SC_W_41_RECV),
        .M39_SC_W_req(S_SC_W_41_REQ),
        .M39_SC_W_send(S_SC_W_41_SEND),
        .M40_SC_AR_info(S_SC_AR_42_INFO),
        .M40_SC_AR_payld(S_SC_AR_42_PAYLD),
        .M40_SC_AR_recv(S_SC_AR_42_RECV),
        .M40_SC_AR_req(S_SC_AR_42_REQ),
        .M40_SC_AR_send(S_SC_AR_42_SEND),
        .M40_SC_AW_info(S_SC_AW_42_INFO),
        .M40_SC_AW_payld(S_SC_AW_42_PAYLD),
        .M40_SC_AW_recv(S_SC_AW_42_RECV),
        .M40_SC_AW_req(S_SC_AW_42_REQ),
        .M40_SC_AW_send(S_SC_AW_42_SEND),
        .M40_SC_W_info(S_SC_W_42_INFO),
        .M40_SC_W_payld(S_SC_W_42_PAYLD),
        .M40_SC_W_recv(S_SC_W_42_RECV),
        .M40_SC_W_req(S_SC_W_42_REQ),
        .M40_SC_W_send(S_SC_W_42_SEND),
        .M41_SC_AR_info(S_SC_AR_43_INFO),
        .M41_SC_AR_payld(S_SC_AR_43_PAYLD),
        .M41_SC_AR_recv(S_SC_AR_43_RECV),
        .M41_SC_AR_req(S_SC_AR_43_REQ),
        .M41_SC_AR_send(S_SC_AR_43_SEND),
        .M41_SC_AW_info(S_SC_AW_43_INFO),
        .M41_SC_AW_payld(S_SC_AW_43_PAYLD),
        .M41_SC_AW_recv(S_SC_AW_43_RECV),
        .M41_SC_AW_req(S_SC_AW_43_REQ),
        .M41_SC_AW_send(S_SC_AW_43_SEND),
        .M41_SC_W_info(S_SC_W_43_INFO),
        .M41_SC_W_payld(S_SC_W_43_PAYLD),
        .M41_SC_W_recv(S_SC_W_43_RECV),
        .M41_SC_W_req(S_SC_W_43_REQ),
        .M41_SC_W_send(S_SC_W_43_SEND),
        .M42_SC_AR_info(S_SC_AR_44_INFO),
        .M42_SC_AR_payld(S_SC_AR_44_PAYLD),
        .M42_SC_AR_recv(S_SC_AR_44_RECV),
        .M42_SC_AR_req(S_SC_AR_44_REQ),
        .M42_SC_AR_send(S_SC_AR_44_SEND),
        .M42_SC_AW_info(S_SC_AW_44_INFO),
        .M42_SC_AW_payld(S_SC_AW_44_PAYLD),
        .M42_SC_AW_recv(S_SC_AW_44_RECV),
        .M42_SC_AW_req(S_SC_AW_44_REQ),
        .M42_SC_AW_send(S_SC_AW_44_SEND),
        .M42_SC_W_info(S_SC_W_44_INFO),
        .M42_SC_W_payld(S_SC_W_44_PAYLD),
        .M42_SC_W_recv(S_SC_W_44_RECV),
        .M42_SC_W_req(S_SC_W_44_REQ),
        .M42_SC_W_send(S_SC_W_44_SEND),
        .M43_SC_AR_info(S_SC_AR_45_INFO),
        .M43_SC_AR_payld(S_SC_AR_45_PAYLD),
        .M43_SC_AR_recv(S_SC_AR_45_RECV),
        .M43_SC_AR_req(S_SC_AR_45_REQ),
        .M43_SC_AR_send(S_SC_AR_45_SEND),
        .M43_SC_AW_info(S_SC_AW_45_INFO),
        .M43_SC_AW_payld(S_SC_AW_45_PAYLD),
        .M43_SC_AW_recv(S_SC_AW_45_RECV),
        .M43_SC_AW_req(S_SC_AW_45_REQ),
        .M43_SC_AW_send(S_SC_AW_45_SEND),
        .M43_SC_W_info(S_SC_W_45_INFO),
        .M43_SC_W_payld(S_SC_W_45_PAYLD),
        .M43_SC_W_recv(S_SC_W_45_RECV),
        .M43_SC_W_req(S_SC_W_45_REQ),
        .M43_SC_W_send(S_SC_W_45_SEND),
        .M44_SC_AR_info(S_SC_AR_46_INFO),
        .M44_SC_AR_payld(S_SC_AR_46_PAYLD),
        .M44_SC_AR_recv(S_SC_AR_46_RECV),
        .M44_SC_AR_req(S_SC_AR_46_REQ),
        .M44_SC_AR_send(S_SC_AR_46_SEND),
        .M44_SC_AW_info(S_SC_AW_46_INFO),
        .M44_SC_AW_payld(S_SC_AW_46_PAYLD),
        .M44_SC_AW_recv(S_SC_AW_46_RECV),
        .M44_SC_AW_req(S_SC_AW_46_REQ),
        .M44_SC_AW_send(S_SC_AW_46_SEND),
        .M44_SC_W_info(S_SC_W_46_INFO),
        .M44_SC_W_payld(S_SC_W_46_PAYLD),
        .M44_SC_W_recv(S_SC_W_46_RECV),
        .M44_SC_W_req(S_SC_W_46_REQ),
        .M44_SC_W_send(S_SC_W_46_SEND),
        .M45_SC_AR_info(S_SC_AR_47_INFO),
        .M45_SC_AR_payld(S_SC_AR_47_PAYLD),
        .M45_SC_AR_recv(S_SC_AR_47_RECV),
        .M45_SC_AR_req(S_SC_AR_47_REQ),
        .M45_SC_AR_send(S_SC_AR_47_SEND),
        .M45_SC_AW_info(S_SC_AW_47_INFO),
        .M45_SC_AW_payld(S_SC_AW_47_PAYLD),
        .M45_SC_AW_recv(S_SC_AW_47_RECV),
        .M45_SC_AW_req(S_SC_AW_47_REQ),
        .M45_SC_AW_send(S_SC_AW_47_SEND),
        .M45_SC_W_info(S_SC_W_47_INFO),
        .M45_SC_W_payld(S_SC_W_47_PAYLD),
        .M45_SC_W_recv(S_SC_W_47_RECV),
        .M45_SC_W_req(S_SC_W_47_REQ),
        .M45_SC_W_send(S_SC_W_47_SEND),
        .M46_SC_AR_info(S_SC_AR_48_INFO),
        .M46_SC_AR_payld(S_SC_AR_48_PAYLD),
        .M46_SC_AR_recv(S_SC_AR_48_RECV),
        .M46_SC_AR_req(S_SC_AR_48_REQ),
        .M46_SC_AR_send(S_SC_AR_48_SEND),
        .M46_SC_AW_info(S_SC_AW_48_INFO),
        .M46_SC_AW_payld(S_SC_AW_48_PAYLD),
        .M46_SC_AW_recv(S_SC_AW_48_RECV),
        .M46_SC_AW_req(S_SC_AW_48_REQ),
        .M46_SC_AW_send(S_SC_AW_48_SEND),
        .M46_SC_W_info(S_SC_W_48_INFO),
        .M46_SC_W_payld(S_SC_W_48_PAYLD),
        .M46_SC_W_recv(S_SC_W_48_RECV),
        .M46_SC_W_req(S_SC_W_48_REQ),
        .M46_SC_W_send(S_SC_W_48_SEND),
        .M47_SC_AR_info(S_SC_AR_49_INFO),
        .M47_SC_AR_payld(S_SC_AR_49_PAYLD),
        .M47_SC_AR_recv(S_SC_AR_49_RECV),
        .M47_SC_AR_req(S_SC_AR_49_REQ),
        .M47_SC_AR_send(S_SC_AR_49_SEND),
        .M47_SC_AW_info(S_SC_AW_49_INFO),
        .M47_SC_AW_payld(S_SC_AW_49_PAYLD),
        .M47_SC_AW_recv(S_SC_AW_49_RECV),
        .M47_SC_AW_req(S_SC_AW_49_REQ),
        .M47_SC_AW_send(S_SC_AW_49_SEND),
        .M47_SC_W_info(S_SC_W_49_INFO),
        .M47_SC_W_payld(S_SC_W_49_PAYLD),
        .M47_SC_W_recv(S_SC_W_49_RECV),
        .M47_SC_W_req(S_SC_W_49_REQ),
        .M47_SC_W_send(S_SC_W_49_SEND),
        .M48_SC_AR_info(S_SC_AR_50_INFO),
        .M48_SC_AR_payld(S_SC_AR_50_PAYLD),
        .M48_SC_AR_recv(S_SC_AR_50_RECV),
        .M48_SC_AR_req(S_SC_AR_50_REQ),
        .M48_SC_AR_send(S_SC_AR_50_SEND),
        .M48_SC_AW_info(S_SC_AW_50_INFO),
        .M48_SC_AW_payld(S_SC_AW_50_PAYLD),
        .M48_SC_AW_recv(S_SC_AW_50_RECV),
        .M48_SC_AW_req(S_SC_AW_50_REQ),
        .M48_SC_AW_send(S_SC_AW_50_SEND),
        .M48_SC_W_info(S_SC_W_50_INFO),
        .M48_SC_W_payld(S_SC_W_50_PAYLD),
        .M48_SC_W_recv(S_SC_W_50_RECV),
        .M48_SC_W_req(S_SC_W_50_REQ),
        .M48_SC_W_send(S_SC_W_50_SEND),
        .M49_SC_AR_info(S_SC_AR_51_INFO),
        .M49_SC_AR_payld(S_SC_AR_51_PAYLD),
        .M49_SC_AR_recv(S_SC_AR_51_RECV),
        .M49_SC_AR_req(S_SC_AR_51_REQ),
        .M49_SC_AR_send(S_SC_AR_51_SEND),
        .M49_SC_AW_info(S_SC_AW_51_INFO),
        .M49_SC_AW_payld(S_SC_AW_51_PAYLD),
        .M49_SC_AW_recv(S_SC_AW_51_RECV),
        .M49_SC_AW_req(S_SC_AW_51_REQ),
        .M49_SC_AW_send(S_SC_AW_51_SEND),
        .M49_SC_W_info(S_SC_W_51_INFO),
        .M49_SC_W_payld(S_SC_W_51_PAYLD),
        .M49_SC_W_recv(S_SC_W_51_RECV),
        .M49_SC_W_req(S_SC_W_51_REQ),
        .M49_SC_W_send(S_SC_W_51_SEND),
        .M50_SC_AR_info(S_SC_AR_52_INFO),
        .M50_SC_AR_payld(S_SC_AR_52_PAYLD),
        .M50_SC_AR_recv(S_SC_AR_52_RECV),
        .M50_SC_AR_req(S_SC_AR_52_REQ),
        .M50_SC_AR_send(S_SC_AR_52_SEND),
        .M50_SC_AW_info(S_SC_AW_52_INFO),
        .M50_SC_AW_payld(S_SC_AW_52_PAYLD),
        .M50_SC_AW_recv(S_SC_AW_52_RECV),
        .M50_SC_AW_req(S_SC_AW_52_REQ),
        .M50_SC_AW_send(S_SC_AW_52_SEND),
        .M50_SC_W_info(S_SC_W_52_INFO),
        .M50_SC_W_payld(S_SC_W_52_PAYLD),
        .M50_SC_W_recv(S_SC_W_52_RECV),
        .M50_SC_W_req(S_SC_W_52_REQ),
        .M50_SC_W_send(S_SC_W_52_SEND),
        .S00_SC_AR_info(s00_nodes_M_SC_AR_INFO),
        .S00_SC_AR_payld(s00_nodes_M_SC_AR_PAYLD),
        .S00_SC_AR_recv(s00_nodes_M_SC_AR_RECV),
        .S00_SC_AR_req(s00_nodes_M_SC_AR_REQ),
        .S00_SC_AR_send(s00_nodes_M_SC_AR_SEND),
        .S00_SC_AW_info(s00_nodes_M_SC_AW_INFO),
        .S00_SC_AW_payld(s00_nodes_M_SC_AW_PAYLD),
        .S00_SC_AW_recv(s00_nodes_M_SC_AW_RECV),
        .S00_SC_AW_req(s00_nodes_M_SC_AW_REQ),
        .S00_SC_AW_send(s00_nodes_M_SC_AW_SEND),
        .S00_SC_B_info(m00_nodes_M_SC_B_INFO),
        .S00_SC_B_payld(m00_nodes_M_SC_B_PAYLD),
        .S00_SC_B_recv(m00_nodes_M_SC_B_RECV),
        .S00_SC_B_req(m00_nodes_M_SC_B_REQ),
        .S00_SC_B_send(m00_nodes_M_SC_B_SEND),
        .S00_SC_R_info(m00_nodes_M_SC_R_INFO),
        .S00_SC_R_payld(m00_nodes_M_SC_R_PAYLD),
        .S00_SC_R_recv(m00_nodes_M_SC_R_RECV),
        .S00_SC_R_req(m00_nodes_M_SC_R_REQ),
        .S00_SC_R_send(m00_nodes_M_SC_R_SEND),
        .S00_SC_W_info(s00_nodes_M_SC_W_INFO),
        .S00_SC_W_payld(s00_nodes_M_SC_W_PAYLD),
        .S00_SC_W_recv(s00_nodes_M_SC_W_RECV),
        .S00_SC_W_req(s00_nodes_M_SC_W_REQ),
        .S00_SC_W_send(s00_nodes_M_SC_W_SEND),
        .S01_SC_B_info(m01_nodes_M_SC_B_INFO),
        .S01_SC_B_payld(m01_nodes_M_SC_B_PAYLD),
        .S01_SC_B_recv(m01_nodes_M_SC_B_RECV),
        .S01_SC_B_req(m01_nodes_M_SC_B_REQ),
        .S01_SC_B_send(m01_nodes_M_SC_B_SEND),
        .S01_SC_R_info(m01_nodes_M_SC_R_INFO),
        .S01_SC_R_payld(m01_nodes_M_SC_R_PAYLD),
        .S01_SC_R_recv(m01_nodes_M_SC_R_RECV),
        .S01_SC_R_req(m01_nodes_M_SC_R_REQ),
        .S01_SC_R_send(m01_nodes_M_SC_R_SEND),
        .S02_SC_B_info(m02_nodes_M_SC_B_INFO),
        .S02_SC_B_payld(m02_nodes_M_SC_B_PAYLD),
        .S02_SC_B_recv(m02_nodes_M_SC_B_RECV),
        .S02_SC_B_req(m02_nodes_M_SC_B_REQ),
        .S02_SC_B_send(m02_nodes_M_SC_B_SEND),
        .S02_SC_R_info(m02_nodes_M_SC_R_INFO),
        .S02_SC_R_payld(m02_nodes_M_SC_R_PAYLD),
        .S02_SC_R_recv(m02_nodes_M_SC_R_RECV),
        .S02_SC_R_req(m02_nodes_M_SC_R_REQ),
        .S02_SC_R_send(m02_nodes_M_SC_R_SEND),
        .S03_SC_B_info(m03_nodes_M_SC_B_INFO),
        .S03_SC_B_payld(m03_nodes_M_SC_B_PAYLD),
        .S03_SC_B_recv(m03_nodes_M_SC_B_RECV),
        .S03_SC_B_req(m03_nodes_M_SC_B_REQ),
        .S03_SC_B_send(m03_nodes_M_SC_B_SEND),
        .S03_SC_R_info(m03_nodes_M_SC_R_INFO),
        .S03_SC_R_payld(m03_nodes_M_SC_R_PAYLD),
        .S03_SC_R_recv(m03_nodes_M_SC_R_RECV),
        .S03_SC_R_req(m03_nodes_M_SC_R_REQ),
        .S03_SC_R_send(m03_nodes_M_SC_R_SEND),
        .S04_SC_B_info(m04_nodes_M_SC_B_INFO),
        .S04_SC_B_payld(m04_nodes_M_SC_B_PAYLD),
        .S04_SC_B_recv(m04_nodes_M_SC_B_RECV),
        .S04_SC_B_req(m04_nodes_M_SC_B_REQ),
        .S04_SC_B_send(m04_nodes_M_SC_B_SEND),
        .S04_SC_R_info(m04_nodes_M_SC_R_INFO),
        .S04_SC_R_payld(m04_nodes_M_SC_R_PAYLD),
        .S04_SC_R_recv(m04_nodes_M_SC_R_RECV),
        .S04_SC_R_req(m04_nodes_M_SC_R_REQ),
        .S04_SC_R_send(m04_nodes_M_SC_R_SEND),
        .S05_SC_B_info(m05_nodes_M_SC_B_INFO),
        .S05_SC_B_payld(m05_nodes_M_SC_B_PAYLD),
        .S05_SC_B_recv(m05_nodes_M_SC_B_RECV),
        .S05_SC_B_req(m05_nodes_M_SC_B_REQ),
        .S05_SC_B_send(m05_nodes_M_SC_B_SEND),
        .S05_SC_R_info(m05_nodes_M_SC_R_INFO),
        .S05_SC_R_payld(m05_nodes_M_SC_R_PAYLD),
        .S05_SC_R_recv(m05_nodes_M_SC_R_RECV),
        .S05_SC_R_req(m05_nodes_M_SC_R_REQ),
        .S05_SC_R_send(m05_nodes_M_SC_R_SEND),
        .S06_SC_B_info(m06_nodes_M_SC_B_INFO),
        .S06_SC_B_payld(m06_nodes_M_SC_B_PAYLD),
        .S06_SC_B_recv(m06_nodes_M_SC_B_RECV),
        .S06_SC_B_req(m06_nodes_M_SC_B_REQ),
        .S06_SC_B_send(m06_nodes_M_SC_B_SEND),
        .S06_SC_R_info(m06_nodes_M_SC_R_INFO),
        .S06_SC_R_payld(m06_nodes_M_SC_R_PAYLD),
        .S06_SC_R_recv(m06_nodes_M_SC_R_RECV),
        .S06_SC_R_req(m06_nodes_M_SC_R_REQ),
        .S06_SC_R_send(m06_nodes_M_SC_R_SEND),
        .S07_SC_B_info(m07_nodes_M_SC_B_INFO),
        .S07_SC_B_payld(m07_nodes_M_SC_B_PAYLD),
        .S07_SC_B_recv(m07_nodes_M_SC_B_RECV),
        .S07_SC_B_req(m07_nodes_M_SC_B_REQ),
        .S07_SC_B_send(m07_nodes_M_SC_B_SEND),
        .S07_SC_R_info(m07_nodes_M_SC_R_INFO),
        .S07_SC_R_payld(m07_nodes_M_SC_R_PAYLD),
        .S07_SC_R_recv(m07_nodes_M_SC_R_RECV),
        .S07_SC_R_req(m07_nodes_M_SC_R_REQ),
        .S07_SC_R_send(m07_nodes_M_SC_R_SEND),
        .S08_SC_B_info(m08_nodes_M_SC_B_INFO),
        .S08_SC_B_payld(m08_nodes_M_SC_B_PAYLD),
        .S08_SC_B_recv(m08_nodes_M_SC_B_RECV),
        .S08_SC_B_req(m08_nodes_M_SC_B_REQ),
        .S08_SC_B_send(m08_nodes_M_SC_B_SEND),
        .S08_SC_R_info(m08_nodes_M_SC_R_INFO),
        .S08_SC_R_payld(m08_nodes_M_SC_R_PAYLD),
        .S08_SC_R_recv(m08_nodes_M_SC_R_RECV),
        .S08_SC_R_req(m08_nodes_M_SC_R_REQ),
        .S08_SC_R_send(m08_nodes_M_SC_R_SEND),
        .S09_SC_B_info(m09_nodes_M_SC_B_INFO),
        .S09_SC_B_payld(m09_nodes_M_SC_B_PAYLD),
        .S09_SC_B_recv(m09_nodes_M_SC_B_RECV),
        .S09_SC_B_req(m09_nodes_M_SC_B_REQ),
        .S09_SC_B_send(m09_nodes_M_SC_B_SEND),
        .S09_SC_R_info(m09_nodes_M_SC_R_INFO),
        .S09_SC_R_payld(m09_nodes_M_SC_R_PAYLD),
        .S09_SC_R_recv(m09_nodes_M_SC_R_RECV),
        .S09_SC_R_req(m09_nodes_M_SC_R_REQ),
        .S09_SC_R_send(m09_nodes_M_SC_R_SEND),
        .S10_SC_B_info(m10_nodes_M_SC_B_INFO),
        .S10_SC_B_payld(m10_nodes_M_SC_B_PAYLD),
        .S10_SC_B_recv(m10_nodes_M_SC_B_RECV),
        .S10_SC_B_req(m10_nodes_M_SC_B_REQ),
        .S10_SC_B_send(m10_nodes_M_SC_B_SEND),
        .S10_SC_R_info(m10_nodes_M_SC_R_INFO),
        .S10_SC_R_payld(m10_nodes_M_SC_R_PAYLD),
        .S10_SC_R_recv(m10_nodes_M_SC_R_RECV),
        .S10_SC_R_req(m10_nodes_M_SC_R_REQ),
        .S10_SC_R_send(m10_nodes_M_SC_R_SEND),
        .S11_SC_B_info(m11_nodes_M_SC_B_INFO),
        .S11_SC_B_payld(m11_nodes_M_SC_B_PAYLD),
        .S11_SC_B_recv(m11_nodes_M_SC_B_RECV),
        .S11_SC_B_req(m11_nodes_M_SC_B_REQ),
        .S11_SC_B_send(m11_nodes_M_SC_B_SEND),
        .S11_SC_R_info(m11_nodes_M_SC_R_INFO),
        .S11_SC_R_payld(m11_nodes_M_SC_R_PAYLD),
        .S11_SC_R_recv(m11_nodes_M_SC_R_RECV),
        .S11_SC_R_req(m11_nodes_M_SC_R_REQ),
        .S11_SC_R_send(m11_nodes_M_SC_R_SEND),
        .S12_SC_B_info(m12_nodes_M_SC_B_INFO),
        .S12_SC_B_payld(m12_nodes_M_SC_B_PAYLD),
        .S12_SC_B_recv(m12_nodes_M_SC_B_RECV),
        .S12_SC_B_req(m12_nodes_M_SC_B_REQ),
        .S12_SC_B_send(m12_nodes_M_SC_B_SEND),
        .S12_SC_R_info(m12_nodes_M_SC_R_INFO),
        .S12_SC_R_payld(m12_nodes_M_SC_R_PAYLD),
        .S12_SC_R_recv(m12_nodes_M_SC_R_RECV),
        .S12_SC_R_req(m12_nodes_M_SC_R_REQ),
        .S12_SC_R_send(m12_nodes_M_SC_R_SEND),
        .S13_SC_B_info(m13_nodes_M_SC_B_INFO),
        .S13_SC_B_payld(m13_nodes_M_SC_B_PAYLD),
        .S13_SC_B_recv(m13_nodes_M_SC_B_RECV),
        .S13_SC_B_req(m13_nodes_M_SC_B_REQ),
        .S13_SC_B_send(m13_nodes_M_SC_B_SEND),
        .S13_SC_R_info(m13_nodes_M_SC_R_INFO),
        .S13_SC_R_payld(m13_nodes_M_SC_R_PAYLD),
        .S13_SC_R_recv(m13_nodes_M_SC_R_RECV),
        .S13_SC_R_req(m13_nodes_M_SC_R_REQ),
        .S13_SC_R_send(m13_nodes_M_SC_R_SEND),
        .S14_SC_B_info(m14_nodes_M_SC_B_INFO),
        .S14_SC_B_payld(m14_nodes_M_SC_B_PAYLD),
        .S14_SC_B_recv(m14_nodes_M_SC_B_RECV),
        .S14_SC_B_req(m14_nodes_M_SC_B_REQ),
        .S14_SC_B_send(m14_nodes_M_SC_B_SEND),
        .S14_SC_R_info(m14_nodes_M_SC_R_INFO),
        .S14_SC_R_payld(m14_nodes_M_SC_R_PAYLD),
        .S14_SC_R_recv(m14_nodes_M_SC_R_RECV),
        .S14_SC_R_req(m14_nodes_M_SC_R_REQ),
        .S14_SC_R_send(m14_nodes_M_SC_R_SEND),
        .S15_SC_B_info(m15_nodes_M_SC_B_INFO),
        .S15_SC_B_payld(m15_nodes_M_SC_B_PAYLD),
        .S15_SC_B_recv(m15_nodes_M_SC_B_RECV),
        .S15_SC_B_req(m15_nodes_M_SC_B_REQ),
        .S15_SC_B_send(m15_nodes_M_SC_B_SEND),
        .S15_SC_R_info(m15_nodes_M_SC_R_INFO),
        .S15_SC_R_payld(m15_nodes_M_SC_R_PAYLD),
        .S15_SC_R_recv(m15_nodes_M_SC_R_RECV),
        .S15_SC_R_req(m15_nodes_M_SC_R_REQ),
        .S15_SC_R_send(m15_nodes_M_SC_R_SEND),
        .S16_SC_B_info(m16_nodes_M_SC_B_INFO),
        .S16_SC_B_payld(m16_nodes_M_SC_B_PAYLD),
        .S16_SC_B_recv(m16_nodes_M_SC_B_RECV),
        .S16_SC_B_req(m16_nodes_M_SC_B_REQ),
        .S16_SC_B_send(m16_nodes_M_SC_B_SEND),
        .S16_SC_R_info(m16_nodes_M_SC_R_INFO),
        .S16_SC_R_payld(m16_nodes_M_SC_R_PAYLD),
        .S16_SC_R_recv(m16_nodes_M_SC_R_RECV),
        .S16_SC_R_req(m16_nodes_M_SC_R_REQ),
        .S16_SC_R_send(m16_nodes_M_SC_R_SEND),
        .S17_SC_B_info(m17_nodes_M_SC_B_INFO),
        .S17_SC_B_payld(m17_nodes_M_SC_B_PAYLD),
        .S17_SC_B_recv(m17_nodes_M_SC_B_RECV),
        .S17_SC_B_req(m17_nodes_M_SC_B_REQ),
        .S17_SC_B_send(m17_nodes_M_SC_B_SEND),
        .S17_SC_R_info(m17_nodes_M_SC_R_INFO),
        .S17_SC_R_payld(m17_nodes_M_SC_R_PAYLD),
        .S17_SC_R_recv(m17_nodes_M_SC_R_RECV),
        .S17_SC_R_req(m17_nodes_M_SC_R_REQ),
        .S17_SC_R_send(m17_nodes_M_SC_R_SEND),
        .S18_SC_B_info(m18_nodes_M_SC_B_INFO),
        .S18_SC_B_payld(m18_nodes_M_SC_B_PAYLD),
        .S18_SC_B_recv(m18_nodes_M_SC_B_RECV),
        .S18_SC_B_req(m18_nodes_M_SC_B_REQ),
        .S18_SC_B_send(m18_nodes_M_SC_B_SEND),
        .S18_SC_R_info(m18_nodes_M_SC_R_INFO),
        .S18_SC_R_payld(m18_nodes_M_SC_R_PAYLD),
        .S18_SC_R_recv(m18_nodes_M_SC_R_RECV),
        .S18_SC_R_req(m18_nodes_M_SC_R_REQ),
        .S18_SC_R_send(m18_nodes_M_SC_R_SEND),
        .S19_SC_B_info(m19_nodes_M_SC_B_INFO),
        .S19_SC_B_payld(m19_nodes_M_SC_B_PAYLD),
        .S19_SC_B_recv(m19_nodes_M_SC_B_RECV),
        .S19_SC_B_req(m19_nodes_M_SC_B_REQ),
        .S19_SC_B_send(m19_nodes_M_SC_B_SEND),
        .S19_SC_R_info(m19_nodes_M_SC_R_INFO),
        .S19_SC_R_payld(m19_nodes_M_SC_R_PAYLD),
        .S19_SC_R_recv(m19_nodes_M_SC_R_RECV),
        .S19_SC_R_req(m19_nodes_M_SC_R_REQ),
        .S19_SC_R_send(m19_nodes_M_SC_R_SEND),
        .S20_SC_B_info(m20_nodes_M_SC_B_INFO),
        .S20_SC_B_payld(m20_nodes_M_SC_B_PAYLD),
        .S20_SC_B_recv(m20_nodes_M_SC_B_RECV),
        .S20_SC_B_req(m20_nodes_M_SC_B_REQ),
        .S20_SC_B_send(m20_nodes_M_SC_B_SEND),
        .S20_SC_R_info(m20_nodes_M_SC_R_INFO),
        .S20_SC_R_payld(m20_nodes_M_SC_R_PAYLD),
        .S20_SC_R_recv(m20_nodes_M_SC_R_RECV),
        .S20_SC_R_req(m20_nodes_M_SC_R_REQ),
        .S20_SC_R_send(m20_nodes_M_SC_R_SEND),
        .S21_SC_B_info(m21_nodes_M_SC_B_INFO),
        .S21_SC_B_payld(m21_nodes_M_SC_B_PAYLD),
        .S21_SC_B_recv(m21_nodes_M_SC_B_RECV),
        .S21_SC_B_req(m21_nodes_M_SC_B_REQ),
        .S21_SC_B_send(m21_nodes_M_SC_B_SEND),
        .S21_SC_R_info(m21_nodes_M_SC_R_INFO),
        .S21_SC_R_payld(m21_nodes_M_SC_R_PAYLD),
        .S21_SC_R_recv(m21_nodes_M_SC_R_RECV),
        .S21_SC_R_req(m21_nodes_M_SC_R_REQ),
        .S21_SC_R_send(m21_nodes_M_SC_R_SEND),
        .S22_SC_B_info(m22_nodes_M_SC_B_INFO),
        .S22_SC_B_payld(m22_nodes_M_SC_B_PAYLD),
        .S22_SC_B_recv(m22_nodes_M_SC_B_RECV),
        .S22_SC_B_req(m22_nodes_M_SC_B_REQ),
        .S22_SC_B_send(m22_nodes_M_SC_B_SEND),
        .S22_SC_R_info(m22_nodes_M_SC_R_INFO),
        .S22_SC_R_payld(m22_nodes_M_SC_R_PAYLD),
        .S22_SC_R_recv(m22_nodes_M_SC_R_RECV),
        .S22_SC_R_req(m22_nodes_M_SC_R_REQ),
        .S22_SC_R_send(m22_nodes_M_SC_R_SEND),
        .S23_SC_B_info(m23_nodes_M_SC_B_INFO),
        .S23_SC_B_payld(m23_nodes_M_SC_B_PAYLD),
        .S23_SC_B_recv(m23_nodes_M_SC_B_RECV),
        .S23_SC_B_req(m23_nodes_M_SC_B_REQ),
        .S23_SC_B_send(m23_nodes_M_SC_B_SEND),
        .S23_SC_R_info(m23_nodes_M_SC_R_INFO),
        .S23_SC_R_payld(m23_nodes_M_SC_R_PAYLD),
        .S23_SC_R_recv(m23_nodes_M_SC_R_RECV),
        .S23_SC_R_req(m23_nodes_M_SC_R_REQ),
        .S23_SC_R_send(m23_nodes_M_SC_R_SEND),
        .S24_SC_B_info(m24_nodes_M_SC_B_INFO),
        .S24_SC_B_payld(m24_nodes_M_SC_B_PAYLD),
        .S24_SC_B_recv(m24_nodes_M_SC_B_RECV),
        .S24_SC_B_req(m24_nodes_M_SC_B_REQ),
        .S24_SC_B_send(m24_nodes_M_SC_B_SEND),
        .S24_SC_R_info(m24_nodes_M_SC_R_INFO),
        .S24_SC_R_payld(m24_nodes_M_SC_R_PAYLD),
        .S24_SC_R_recv(m24_nodes_M_SC_R_RECV),
        .S24_SC_R_req(m24_nodes_M_SC_R_REQ),
        .S24_SC_R_send(m24_nodes_M_SC_R_SEND),
        .S25_SC_B_info(m25_nodes_M_SC_B_INFO),
        .S25_SC_B_payld(m25_nodes_M_SC_B_PAYLD),
        .S25_SC_B_recv(m25_nodes_M_SC_B_RECV),
        .S25_SC_B_req(m25_nodes_M_SC_B_REQ),
        .S25_SC_B_send(m25_nodes_M_SC_B_SEND),
        .S25_SC_R_info(m25_nodes_M_SC_R_INFO),
        .S25_SC_R_payld(m25_nodes_M_SC_R_PAYLD),
        .S25_SC_R_recv(m25_nodes_M_SC_R_RECV),
        .S25_SC_R_req(m25_nodes_M_SC_R_REQ),
        .S25_SC_R_send(m25_nodes_M_SC_R_SEND),
        .S26_SC_B_info(m26_nodes_M_SC_B_INFO),
        .S26_SC_B_payld(m26_nodes_M_SC_B_PAYLD),
        .S26_SC_B_recv(m26_nodes_M_SC_B_RECV),
        .S26_SC_B_req(m26_nodes_M_SC_B_REQ),
        .S26_SC_B_send(m26_nodes_M_SC_B_SEND),
        .S26_SC_R_info(m26_nodes_M_SC_R_INFO),
        .S26_SC_R_payld(m26_nodes_M_SC_R_PAYLD),
        .S26_SC_R_recv(m26_nodes_M_SC_R_RECV),
        .S26_SC_R_req(m26_nodes_M_SC_R_REQ),
        .S26_SC_R_send(m26_nodes_M_SC_R_SEND),
        .S27_SC_B_info(m27_nodes_M_SC_B_INFO),
        .S27_SC_B_payld(m27_nodes_M_SC_B_PAYLD),
        .S27_SC_B_recv(m27_nodes_M_SC_B_RECV),
        .S27_SC_B_req(m27_nodes_M_SC_B_REQ),
        .S27_SC_B_send(m27_nodes_M_SC_B_SEND),
        .S27_SC_R_info(m27_nodes_M_SC_R_INFO),
        .S27_SC_R_payld(m27_nodes_M_SC_R_PAYLD),
        .S27_SC_R_recv(m27_nodes_M_SC_R_RECV),
        .S27_SC_R_req(m27_nodes_M_SC_R_REQ),
        .S27_SC_R_send(m27_nodes_M_SC_R_SEND),
        .S28_SC_B_info(m28_nodes_M_SC_B_INFO),
        .S28_SC_B_payld(m28_nodes_M_SC_B_PAYLD),
        .S28_SC_B_recv(m28_nodes_M_SC_B_RECV),
        .S28_SC_B_req(m28_nodes_M_SC_B_REQ),
        .S28_SC_B_send(m28_nodes_M_SC_B_SEND),
        .S28_SC_R_info(m28_nodes_M_SC_R_INFO),
        .S28_SC_R_payld(m28_nodes_M_SC_R_PAYLD),
        .S28_SC_R_recv(m28_nodes_M_SC_R_RECV),
        .S28_SC_R_req(m28_nodes_M_SC_R_REQ),
        .S28_SC_R_send(m28_nodes_M_SC_R_SEND),
        .S29_SC_B_info(m29_nodes_M_SC_B_INFO),
        .S29_SC_B_payld(m29_nodes_M_SC_B_PAYLD),
        .S29_SC_B_recv(m29_nodes_M_SC_B_RECV),
        .S29_SC_B_req(m29_nodes_M_SC_B_REQ),
        .S29_SC_B_send(m29_nodes_M_SC_B_SEND),
        .S29_SC_R_info(m29_nodes_M_SC_R_INFO),
        .S29_SC_R_payld(m29_nodes_M_SC_R_PAYLD),
        .S29_SC_R_recv(m29_nodes_M_SC_R_RECV),
        .S29_SC_R_req(m29_nodes_M_SC_R_REQ),
        .S29_SC_R_send(m29_nodes_M_SC_R_SEND),
        .S30_SC_B_info(m30_nodes_M_SC_B_INFO),
        .S30_SC_B_payld(m30_nodes_M_SC_B_PAYLD),
        .S30_SC_B_recv(m30_nodes_M_SC_B_RECV),
        .S30_SC_B_req(m30_nodes_M_SC_B_REQ),
        .S30_SC_B_send(m30_nodes_M_SC_B_SEND),
        .S30_SC_R_info(m30_nodes_M_SC_R_INFO),
        .S30_SC_R_payld(m30_nodes_M_SC_R_PAYLD),
        .S30_SC_R_recv(m30_nodes_M_SC_R_RECV),
        .S30_SC_R_req(m30_nodes_M_SC_R_REQ),
        .S30_SC_R_send(m30_nodes_M_SC_R_SEND),
        .S31_SC_B_info(m31_nodes_M_SC_B_INFO),
        .S31_SC_B_payld(m31_nodes_M_SC_B_PAYLD),
        .S31_SC_B_recv(m31_nodes_M_SC_B_RECV),
        .S31_SC_B_req(m31_nodes_M_SC_B_REQ),
        .S31_SC_B_send(m31_nodes_M_SC_B_SEND),
        .S31_SC_R_info(m31_nodes_M_SC_R_INFO),
        .S31_SC_R_payld(m31_nodes_M_SC_R_PAYLD),
        .S31_SC_R_recv(m31_nodes_M_SC_R_RECV),
        .S31_SC_R_req(m31_nodes_M_SC_R_REQ),
        .S31_SC_R_send(m31_nodes_M_SC_R_SEND),
        .S32_SC_B_info(m32_nodes_M_SC_B_INFO),
        .S32_SC_B_payld(m32_nodes_M_SC_B_PAYLD),
        .S32_SC_B_recv(m32_nodes_M_SC_B_RECV),
        .S32_SC_B_req(m32_nodes_M_SC_B_REQ),
        .S32_SC_B_send(m32_nodes_M_SC_B_SEND),
        .S32_SC_R_info(m32_nodes_M_SC_R_INFO),
        .S32_SC_R_payld(m32_nodes_M_SC_R_PAYLD),
        .S32_SC_R_recv(m32_nodes_M_SC_R_RECV),
        .S32_SC_R_req(m32_nodes_M_SC_R_REQ),
        .S32_SC_R_send(m32_nodes_M_SC_R_SEND),
        .S33_SC_B_info(m33_nodes_M_SC_B_INFO),
        .S33_SC_B_payld(m33_nodes_M_SC_B_PAYLD),
        .S33_SC_B_recv(m33_nodes_M_SC_B_RECV),
        .S33_SC_B_req(m33_nodes_M_SC_B_REQ),
        .S33_SC_B_send(m33_nodes_M_SC_B_SEND),
        .S33_SC_R_info(m33_nodes_M_SC_R_INFO),
        .S33_SC_R_payld(m33_nodes_M_SC_R_PAYLD),
        .S33_SC_R_recv(m33_nodes_M_SC_R_RECV),
        .S33_SC_R_req(m33_nodes_M_SC_R_REQ),
        .S33_SC_R_send(m33_nodes_M_SC_R_SEND),
        .S34_SC_B_info(m34_nodes_M_SC_B_INFO),
        .S34_SC_B_payld(m34_nodes_M_SC_B_PAYLD),
        .S34_SC_B_recv(m34_nodes_M_SC_B_RECV),
        .S34_SC_B_req(m34_nodes_M_SC_B_REQ),
        .S34_SC_B_send(m34_nodes_M_SC_B_SEND),
        .S34_SC_R_info(m34_nodes_M_SC_R_INFO),
        .S34_SC_R_payld(m34_nodes_M_SC_R_PAYLD),
        .S34_SC_R_recv(m34_nodes_M_SC_R_RECV),
        .S34_SC_R_req(m34_nodes_M_SC_R_REQ),
        .S34_SC_R_send(m34_nodes_M_SC_R_SEND),
        .S35_SC_B_info(m35_nodes_M_SC_B_INFO),
        .S35_SC_B_payld(m35_nodes_M_SC_B_PAYLD),
        .S35_SC_B_recv(m35_nodes_M_SC_B_RECV),
        .S35_SC_B_req(m35_nodes_M_SC_B_REQ),
        .S35_SC_B_send(m35_nodes_M_SC_B_SEND),
        .S35_SC_R_info(m35_nodes_M_SC_R_INFO),
        .S35_SC_R_payld(m35_nodes_M_SC_R_PAYLD),
        .S35_SC_R_recv(m35_nodes_M_SC_R_RECV),
        .S35_SC_R_req(m35_nodes_M_SC_R_REQ),
        .S35_SC_R_send(m35_nodes_M_SC_R_SEND),
        .S36_SC_B_info(m36_nodes_M_SC_B_INFO),
        .S36_SC_B_payld(m36_nodes_M_SC_B_PAYLD),
        .S36_SC_B_recv(m36_nodes_M_SC_B_RECV),
        .S36_SC_B_req(m36_nodes_M_SC_B_REQ),
        .S36_SC_B_send(m36_nodes_M_SC_B_SEND),
        .S36_SC_R_info(m36_nodes_M_SC_R_INFO),
        .S36_SC_R_payld(m36_nodes_M_SC_R_PAYLD),
        .S36_SC_R_recv(m36_nodes_M_SC_R_RECV),
        .S36_SC_R_req(m36_nodes_M_SC_R_REQ),
        .S36_SC_R_send(m36_nodes_M_SC_R_SEND),
        .S37_SC_B_info(m37_nodes_M_SC_B_INFO),
        .S37_SC_B_payld(m37_nodes_M_SC_B_PAYLD),
        .S37_SC_B_recv(m37_nodes_M_SC_B_RECV),
        .S37_SC_B_req(m37_nodes_M_SC_B_REQ),
        .S37_SC_B_send(m37_nodes_M_SC_B_SEND),
        .S37_SC_R_info(m37_nodes_M_SC_R_INFO),
        .S37_SC_R_payld(m37_nodes_M_SC_R_PAYLD),
        .S37_SC_R_recv(m37_nodes_M_SC_R_RECV),
        .S37_SC_R_req(m37_nodes_M_SC_R_REQ),
        .S37_SC_R_send(m37_nodes_M_SC_R_SEND),
        .S38_SC_B_info(m38_nodes_M_SC_B_INFO),
        .S38_SC_B_payld(m38_nodes_M_SC_B_PAYLD),
        .S38_SC_B_recv(m38_nodes_M_SC_B_RECV),
        .S38_SC_B_req(m38_nodes_M_SC_B_REQ),
        .S38_SC_B_send(m38_nodes_M_SC_B_SEND),
        .S38_SC_R_info(m38_nodes_M_SC_R_INFO),
        .S38_SC_R_payld(m38_nodes_M_SC_R_PAYLD),
        .S38_SC_R_recv(m38_nodes_M_SC_R_RECV),
        .S38_SC_R_req(m38_nodes_M_SC_R_REQ),
        .S38_SC_R_send(m38_nodes_M_SC_R_SEND),
        .S39_SC_B_info(m39_nodes_M_SC_B_INFO),
        .S39_SC_B_payld(m39_nodes_M_SC_B_PAYLD),
        .S39_SC_B_recv(m39_nodes_M_SC_B_RECV),
        .S39_SC_B_req(m39_nodes_M_SC_B_REQ),
        .S39_SC_B_send(m39_nodes_M_SC_B_SEND),
        .S39_SC_R_info(m39_nodes_M_SC_R_INFO),
        .S39_SC_R_payld(m39_nodes_M_SC_R_PAYLD),
        .S39_SC_R_recv(m39_nodes_M_SC_R_RECV),
        .S39_SC_R_req(m39_nodes_M_SC_R_REQ),
        .S39_SC_R_send(m39_nodes_M_SC_R_SEND),
        .S40_SC_B_info(m40_nodes_M_SC_B_INFO),
        .S40_SC_B_payld(m40_nodes_M_SC_B_PAYLD),
        .S40_SC_B_recv(m40_nodes_M_SC_B_RECV),
        .S40_SC_B_req(m40_nodes_M_SC_B_REQ),
        .S40_SC_B_send(m40_nodes_M_SC_B_SEND),
        .S40_SC_R_info(m40_nodes_M_SC_R_INFO),
        .S40_SC_R_payld(m40_nodes_M_SC_R_PAYLD),
        .S40_SC_R_recv(m40_nodes_M_SC_R_RECV),
        .S40_SC_R_req(m40_nodes_M_SC_R_REQ),
        .S40_SC_R_send(m40_nodes_M_SC_R_SEND),
        .S41_SC_B_info(m41_nodes_M_SC_B_INFO),
        .S41_SC_B_payld(m41_nodes_M_SC_B_PAYLD),
        .S41_SC_B_recv(m41_nodes_M_SC_B_RECV),
        .S41_SC_B_req(m41_nodes_M_SC_B_REQ),
        .S41_SC_B_send(m41_nodes_M_SC_B_SEND),
        .S41_SC_R_info(m41_nodes_M_SC_R_INFO),
        .S41_SC_R_payld(m41_nodes_M_SC_R_PAYLD),
        .S41_SC_R_recv(m41_nodes_M_SC_R_RECV),
        .S41_SC_R_req(m41_nodes_M_SC_R_REQ),
        .S41_SC_R_send(m41_nodes_M_SC_R_SEND),
        .S42_SC_B_info(m42_nodes_M_SC_B_INFO),
        .S42_SC_B_payld(m42_nodes_M_SC_B_PAYLD),
        .S42_SC_B_recv(m42_nodes_M_SC_B_RECV),
        .S42_SC_B_req(m42_nodes_M_SC_B_REQ),
        .S42_SC_B_send(m42_nodes_M_SC_B_SEND),
        .S42_SC_R_info(m42_nodes_M_SC_R_INFO),
        .S42_SC_R_payld(m42_nodes_M_SC_R_PAYLD),
        .S42_SC_R_recv(m42_nodes_M_SC_R_RECV),
        .S42_SC_R_req(m42_nodes_M_SC_R_REQ),
        .S42_SC_R_send(m42_nodes_M_SC_R_SEND),
        .S43_SC_B_info(m43_nodes_M_SC_B_INFO),
        .S43_SC_B_payld(m43_nodes_M_SC_B_PAYLD),
        .S43_SC_B_recv(m43_nodes_M_SC_B_RECV),
        .S43_SC_B_req(m43_nodes_M_SC_B_REQ),
        .S43_SC_B_send(m43_nodes_M_SC_B_SEND),
        .S43_SC_R_info(m43_nodes_M_SC_R_INFO),
        .S43_SC_R_payld(m43_nodes_M_SC_R_PAYLD),
        .S43_SC_R_recv(m43_nodes_M_SC_R_RECV),
        .S43_SC_R_req(m43_nodes_M_SC_R_REQ),
        .S43_SC_R_send(m43_nodes_M_SC_R_SEND),
        .S44_SC_B_info(m44_nodes_M_SC_B_INFO),
        .S44_SC_B_payld(m44_nodes_M_SC_B_PAYLD),
        .S44_SC_B_recv(m44_nodes_M_SC_B_RECV),
        .S44_SC_B_req(m44_nodes_M_SC_B_REQ),
        .S44_SC_B_send(m44_nodes_M_SC_B_SEND),
        .S44_SC_R_info(m44_nodes_M_SC_R_INFO),
        .S44_SC_R_payld(m44_nodes_M_SC_R_PAYLD),
        .S44_SC_R_recv(m44_nodes_M_SC_R_RECV),
        .S44_SC_R_req(m44_nodes_M_SC_R_REQ),
        .S44_SC_R_send(m44_nodes_M_SC_R_SEND),
        .S45_SC_B_info(m45_nodes_M_SC_B_INFO),
        .S45_SC_B_payld(m45_nodes_M_SC_B_PAYLD),
        .S45_SC_B_recv(m45_nodes_M_SC_B_RECV),
        .S45_SC_B_req(m45_nodes_M_SC_B_REQ),
        .S45_SC_B_send(m45_nodes_M_SC_B_SEND),
        .S45_SC_R_info(m45_nodes_M_SC_R_INFO),
        .S45_SC_R_payld(m45_nodes_M_SC_R_PAYLD),
        .S45_SC_R_recv(m45_nodes_M_SC_R_RECV),
        .S45_SC_R_req(m45_nodes_M_SC_R_REQ),
        .S45_SC_R_send(m45_nodes_M_SC_R_SEND),
        .S46_SC_B_info(m46_nodes_M_SC_B_INFO),
        .S46_SC_B_payld(m46_nodes_M_SC_B_PAYLD),
        .S46_SC_B_recv(m46_nodes_M_SC_B_RECV),
        .S46_SC_B_req(m46_nodes_M_SC_B_REQ),
        .S46_SC_B_send(m46_nodes_M_SC_B_SEND),
        .S46_SC_R_info(m46_nodes_M_SC_R_INFO),
        .S46_SC_R_payld(m46_nodes_M_SC_R_PAYLD),
        .S46_SC_R_recv(m46_nodes_M_SC_R_RECV),
        .S46_SC_R_req(m46_nodes_M_SC_R_REQ),
        .S46_SC_R_send(m46_nodes_M_SC_R_SEND),
        .S47_SC_B_info(m47_nodes_M_SC_B_INFO),
        .S47_SC_B_payld(m47_nodes_M_SC_B_PAYLD),
        .S47_SC_B_recv(m47_nodes_M_SC_B_RECV),
        .S47_SC_B_req(m47_nodes_M_SC_B_REQ),
        .S47_SC_B_send(m47_nodes_M_SC_B_SEND),
        .S47_SC_R_info(m47_nodes_M_SC_R_INFO),
        .S47_SC_R_payld(m47_nodes_M_SC_R_PAYLD),
        .S47_SC_R_recv(m47_nodes_M_SC_R_RECV),
        .S47_SC_R_req(m47_nodes_M_SC_R_REQ),
        .S47_SC_R_send(m47_nodes_M_SC_R_SEND),
        .S48_SC_B_info(m48_nodes_M_SC_B_INFO),
        .S48_SC_B_payld(m48_nodes_M_SC_B_PAYLD),
        .S48_SC_B_recv(m48_nodes_M_SC_B_RECV),
        .S48_SC_B_req(m48_nodes_M_SC_B_REQ),
        .S48_SC_B_send(m48_nodes_M_SC_B_SEND),
        .S48_SC_R_info(m48_nodes_M_SC_R_INFO),
        .S48_SC_R_payld(m48_nodes_M_SC_R_PAYLD),
        .S48_SC_R_recv(m48_nodes_M_SC_R_RECV),
        .S48_SC_R_req(m48_nodes_M_SC_R_REQ),
        .S48_SC_R_send(m48_nodes_M_SC_R_SEND),
        .S49_SC_B_info(m49_nodes_M_SC_B_INFO),
        .S49_SC_B_payld(m49_nodes_M_SC_B_PAYLD),
        .S49_SC_B_recv(m49_nodes_M_SC_B_RECV),
        .S49_SC_B_req(m49_nodes_M_SC_B_REQ),
        .S49_SC_B_send(m49_nodes_M_SC_B_SEND),
        .S49_SC_R_info(m49_nodes_M_SC_R_INFO),
        .S49_SC_R_payld(m49_nodes_M_SC_R_PAYLD),
        .S49_SC_R_recv(m49_nodes_M_SC_R_RECV),
        .S49_SC_R_req(m49_nodes_M_SC_R_REQ),
        .S49_SC_R_send(m49_nodes_M_SC_R_SEND),
        .S50_SC_B_info(m50_nodes_M_SC_B_INFO),
        .S50_SC_B_payld(m50_nodes_M_SC_B_PAYLD),
        .S50_SC_B_recv(m50_nodes_M_SC_B_RECV),
        .S50_SC_B_req(m50_nodes_M_SC_B_REQ),
        .S50_SC_B_send(m50_nodes_M_SC_B_SEND),
        .S50_SC_R_info(m50_nodes_M_SC_R_INFO),
        .S50_SC_R_payld(m50_nodes_M_SC_R_PAYLD),
        .S50_SC_R_recv(m50_nodes_M_SC_R_RECV),
        .S50_SC_R_req(m50_nodes_M_SC_R_REQ),
        .S50_SC_R_send(m50_nodes_M_SC_R_SEND),
        .m_sc_aclk(clk_map_M00_ACLK),
        .m_sc_aresetn(clk_map_M00_ARESETN),
        .s_sc_aclk(clk_map_M00_ACLK),
        .s_sc_aresetn(clk_map_M00_ARESETN));
endmodule

module clk_map_imp_5Y9LOC
   (M00_ACLK,
    M00_ARESETN,
    M01_ACLK,
    M01_ARESETN,
    M02_ACLK,
    M02_ARESETN,
    M03_ACLK,
    M03_ARESETN,
    M04_ACLK,
    M04_ARESETN,
    M05_ACLK,
    M05_ARESETN,
    M06_ACLK,
    M06_ARESETN,
    M07_ACLK,
    M07_ARESETN,
    M08_ACLK,
    M08_ARESETN,
    M09_ACLK,
    M09_ARESETN,
    M10_ACLK,
    M10_ARESETN,
    M11_ACLK,
    M11_ARESETN,
    M12_ACLK,
    M12_ARESETN,
    M13_ACLK,
    M13_ARESETN,
    M14_ACLK,
    M14_ARESETN,
    M15_ACLK,
    M15_ARESETN,
    M16_ACLK,
    M16_ARESETN,
    M17_ACLK,
    M17_ARESETN,
    M18_ACLK,
    M18_ARESETN,
    M19_ACLK,
    M19_ARESETN,
    M20_ACLK,
    M20_ARESETN,
    M21_ACLK,
    M21_ARESETN,
    M22_ACLK,
    M22_ARESETN,
    M23_ACLK,
    M23_ARESETN,
    M24_ACLK,
    M24_ARESETN,
    M25_ACLK,
    M25_ARESETN,
    M26_ACLK,
    M26_ARESETN,
    M27_ACLK,
    M27_ARESETN,
    M28_ACLK,
    M28_ARESETN,
    M29_ACLK,
    M29_ARESETN,
    M30_ACLK,
    M30_ARESETN,
    M31_ACLK,
    M31_ARESETN,
    M32_ACLK,
    M32_ARESETN,
    M33_ACLK,
    M33_ARESETN,
    M34_ACLK,
    M34_ARESETN,
    M35_ACLK,
    M35_ARESETN,
    M36_ACLK,
    M36_ARESETN,
    M37_ACLK,
    M37_ARESETN,
    M38_ACLK,
    M38_ARESETN,
    M39_ACLK,
    M39_ARESETN,
    M40_ACLK,
    M40_ARESETN,
    M41_ACLK,
    M41_ARESETN,
    M42_ACLK,
    M42_ARESETN,
    M43_ACLK,
    M43_ARESETN,
    M44_ACLK,
    M44_ARESETN,
    M45_ACLK,
    M45_ARESETN,
    M46_ACLK,
    M46_ARESETN,
    M47_ACLK,
    M47_ARESETN,
    M48_ACLK,
    M48_ARESETN,
    M49_ACLK,
    M49_ARESETN,
    M50_ACLK,
    M50_ARESETN,
    S00_ACLK,
    S00_ARESETN,
    aclk,
    aresetn,
    aresetn_out,
    swbd_aclk,
    swbd_aresetn);
  output M00_ACLK;
  output [0:0]M00_ARESETN;
  output M01_ACLK;
  output [0:0]M01_ARESETN;
  output M02_ACLK;
  output [0:0]M02_ARESETN;
  output M03_ACLK;
  output [0:0]M03_ARESETN;
  output M04_ACLK;
  output [0:0]M04_ARESETN;
  output M05_ACLK;
  output [0:0]M05_ARESETN;
  output M06_ACLK;
  output [0:0]M06_ARESETN;
  output M07_ACLK;
  output [0:0]M07_ARESETN;
  output M08_ACLK;
  output [0:0]M08_ARESETN;
  output M09_ACLK;
  output [0:0]M09_ARESETN;
  output M10_ACLK;
  output [0:0]M10_ARESETN;
  output M11_ACLK;
  output [0:0]M11_ARESETN;
  output M12_ACLK;
  output [0:0]M12_ARESETN;
  output M13_ACLK;
  output [0:0]M13_ARESETN;
  output M14_ACLK;
  output [0:0]M14_ARESETN;
  output M15_ACLK;
  output [0:0]M15_ARESETN;
  output M16_ACLK;
  output [0:0]M16_ARESETN;
  output M17_ACLK;
  output [0:0]M17_ARESETN;
  output M18_ACLK;
  output [0:0]M18_ARESETN;
  output M19_ACLK;
  output [0:0]M19_ARESETN;
  output M20_ACLK;
  output [0:0]M20_ARESETN;
  output M21_ACLK;
  output [0:0]M21_ARESETN;
  output M22_ACLK;
  output [0:0]M22_ARESETN;
  output M23_ACLK;
  output [0:0]M23_ARESETN;
  output M24_ACLK;
  output [0:0]M24_ARESETN;
  output M25_ACLK;
  output [0:0]M25_ARESETN;
  output M26_ACLK;
  output [0:0]M26_ARESETN;
  output M27_ACLK;
  output [0:0]M27_ARESETN;
  output M28_ACLK;
  output [0:0]M28_ARESETN;
  output M29_ACLK;
  output [0:0]M29_ARESETN;
  output M30_ACLK;
  output [0:0]M30_ARESETN;
  output M31_ACLK;
  output [0:0]M31_ARESETN;
  output M32_ACLK;
  output [0:0]M32_ARESETN;
  output M33_ACLK;
  output [0:0]M33_ARESETN;
  output M34_ACLK;
  output [0:0]M34_ARESETN;
  output M35_ACLK;
  output [0:0]M35_ARESETN;
  output M36_ACLK;
  output [0:0]M36_ARESETN;
  output M37_ACLK;
  output [0:0]M37_ARESETN;
  output M38_ACLK;
  output [0:0]M38_ARESETN;
  output M39_ACLK;
  output [0:0]M39_ARESETN;
  output M40_ACLK;
  output [0:0]M40_ARESETN;
  output M41_ACLK;
  output [0:0]M41_ARESETN;
  output M42_ACLK;
  output [0:0]M42_ARESETN;
  output M43_ACLK;
  output [0:0]M43_ARESETN;
  output M44_ACLK;
  output [0:0]M44_ARESETN;
  output M45_ACLK;
  output [0:0]M45_ARESETN;
  output M46_ACLK;
  output [0:0]M46_ARESETN;
  output M47_ACLK;
  output [0:0]M47_ARESETN;
  output M48_ACLK;
  output [0:0]M48_ARESETN;
  output M49_ACLK;
  output [0:0]M49_ARESETN;
  output M50_ACLK;
  output [0:0]M50_ARESETN;
  output S00_ACLK;
  output [0:0]S00_ARESETN;
  input aclk;
  input aresetn;
  output aresetn_out;
  output swbd_aclk;
  output [0:0]swbd_aresetn;

  wire clk_map_aclk_net;
  wire clk_map_aresetn_net;
  wire [0:0]one_dout;
  wire [0:0]psr_aclk_interconnect_aresetn;

  assign M00_ACLK = clk_map_aclk_net;
  assign M00_ARESETN[0] = psr_aclk_interconnect_aresetn;
  assign M01_ACLK = clk_map_aclk_net;
  assign M01_ARESETN[0] = psr_aclk_interconnect_aresetn;
  assign M02_ACLK = clk_map_aclk_net;
  assign M02_ARESETN[0] = psr_aclk_interconnect_aresetn;
  assign M03_ACLK = clk_map_aclk_net;
  assign M03_ARESETN[0] = psr_aclk_interconnect_aresetn;
  assign M04_ACLK = clk_map_aclk_net;
  assign M04_ARESETN[0] = psr_aclk_interconnect_aresetn;
  assign M05_ACLK = clk_map_aclk_net;
  assign M05_ARESETN[0] = psr_aclk_interconnect_aresetn;
  assign M06_ACLK = clk_map_aclk_net;
  assign M06_ARESETN[0] = psr_aclk_interconnect_aresetn;
  assign M07_ACLK = clk_map_aclk_net;
  assign M07_ARESETN[0] = psr_aclk_interconnect_aresetn;
  assign M08_ACLK = clk_map_aclk_net;
  assign M08_ARESETN[0] = psr_aclk_interconnect_aresetn;
  assign M09_ACLK = clk_map_aclk_net;
  assign M09_ARESETN[0] = psr_aclk_interconnect_aresetn;
  assign M10_ACLK = clk_map_aclk_net;
  assign M10_ARESETN[0] = psr_aclk_interconnect_aresetn;
  assign M11_ACLK = clk_map_aclk_net;
  assign M11_ARESETN[0] = psr_aclk_interconnect_aresetn;
  assign M12_ACLK = clk_map_aclk_net;
  assign M12_ARESETN[0] = psr_aclk_interconnect_aresetn;
  assign M13_ACLK = clk_map_aclk_net;
  assign M13_ARESETN[0] = psr_aclk_interconnect_aresetn;
  assign M14_ACLK = clk_map_aclk_net;
  assign M14_ARESETN[0] = psr_aclk_interconnect_aresetn;
  assign M15_ACLK = clk_map_aclk_net;
  assign M15_ARESETN[0] = psr_aclk_interconnect_aresetn;
  assign M16_ACLK = clk_map_aclk_net;
  assign M16_ARESETN[0] = psr_aclk_interconnect_aresetn;
  assign M17_ACLK = clk_map_aclk_net;
  assign M17_ARESETN[0] = psr_aclk_interconnect_aresetn;
  assign M18_ACLK = clk_map_aclk_net;
  assign M18_ARESETN[0] = psr_aclk_interconnect_aresetn;
  assign M19_ACLK = clk_map_aclk_net;
  assign M19_ARESETN[0] = psr_aclk_interconnect_aresetn;
  assign M20_ACLK = clk_map_aclk_net;
  assign M20_ARESETN[0] = psr_aclk_interconnect_aresetn;
  assign M21_ACLK = clk_map_aclk_net;
  assign M21_ARESETN[0] = psr_aclk_interconnect_aresetn;
  assign M22_ACLK = clk_map_aclk_net;
  assign M22_ARESETN[0] = psr_aclk_interconnect_aresetn;
  assign M23_ACLK = clk_map_aclk_net;
  assign M23_ARESETN[0] = psr_aclk_interconnect_aresetn;
  assign M24_ACLK = clk_map_aclk_net;
  assign M24_ARESETN[0] = psr_aclk_interconnect_aresetn;
  assign M25_ACLK = clk_map_aclk_net;
  assign M25_ARESETN[0] = psr_aclk_interconnect_aresetn;
  assign M26_ACLK = clk_map_aclk_net;
  assign M26_ARESETN[0] = psr_aclk_interconnect_aresetn;
  assign M27_ACLK = clk_map_aclk_net;
  assign M27_ARESETN[0] = psr_aclk_interconnect_aresetn;
  assign M28_ACLK = clk_map_aclk_net;
  assign M28_ARESETN[0] = psr_aclk_interconnect_aresetn;
  assign M29_ACLK = clk_map_aclk_net;
  assign M29_ARESETN[0] = psr_aclk_interconnect_aresetn;
  assign M30_ACLK = clk_map_aclk_net;
  assign M30_ARESETN[0] = psr_aclk_interconnect_aresetn;
  assign M31_ACLK = clk_map_aclk_net;
  assign M31_ARESETN[0] = psr_aclk_interconnect_aresetn;
  assign M32_ACLK = clk_map_aclk_net;
  assign M32_ARESETN[0] = psr_aclk_interconnect_aresetn;
  assign M33_ACLK = clk_map_aclk_net;
  assign M33_ARESETN[0] = psr_aclk_interconnect_aresetn;
  assign M34_ACLK = clk_map_aclk_net;
  assign M34_ARESETN[0] = psr_aclk_interconnect_aresetn;
  assign M35_ACLK = clk_map_aclk_net;
  assign M35_ARESETN[0] = psr_aclk_interconnect_aresetn;
  assign M36_ACLK = clk_map_aclk_net;
  assign M36_ARESETN[0] = psr_aclk_interconnect_aresetn;
  assign M37_ACLK = clk_map_aclk_net;
  assign M37_ARESETN[0] = psr_aclk_interconnect_aresetn;
  assign M38_ACLK = clk_map_aclk_net;
  assign M38_ARESETN[0] = psr_aclk_interconnect_aresetn;
  assign M39_ACLK = clk_map_aclk_net;
  assign M39_ARESETN[0] = psr_aclk_interconnect_aresetn;
  assign M40_ACLK = clk_map_aclk_net;
  assign M40_ARESETN[0] = psr_aclk_interconnect_aresetn;
  assign M41_ACLK = clk_map_aclk_net;
  assign M41_ARESETN[0] = psr_aclk_interconnect_aresetn;
  assign M42_ACLK = clk_map_aclk_net;
  assign M42_ARESETN[0] = psr_aclk_interconnect_aresetn;
  assign M43_ACLK = clk_map_aclk_net;
  assign M43_ARESETN[0] = psr_aclk_interconnect_aresetn;
  assign M44_ACLK = clk_map_aclk_net;
  assign M44_ARESETN[0] = psr_aclk_interconnect_aresetn;
  assign M45_ACLK = clk_map_aclk_net;
  assign M45_ARESETN[0] = psr_aclk_interconnect_aresetn;
  assign M46_ACLK = clk_map_aclk_net;
  assign M46_ARESETN[0] = psr_aclk_interconnect_aresetn;
  assign M47_ACLK = clk_map_aclk_net;
  assign M47_ARESETN[0] = psr_aclk_interconnect_aresetn;
  assign M48_ACLK = clk_map_aclk_net;
  assign M48_ARESETN[0] = psr_aclk_interconnect_aresetn;
  assign M49_ACLK = clk_map_aclk_net;
  assign M49_ARESETN[0] = psr_aclk_interconnect_aresetn;
  assign M50_ACLK = clk_map_aclk_net;
  assign M50_ARESETN[0] = psr_aclk_interconnect_aresetn;
  assign S00_ACLK = clk_map_aclk_net;
  assign S00_ARESETN[0] = psr_aclk_interconnect_aresetn;
  assign clk_map_aclk_net = aclk;
  assign clk_map_aresetn_net = aresetn;
  assign swbd_aclk = clk_map_aclk_net;
  assign swbd_aresetn[0] = psr_aclk_interconnect_aresetn;
  bd_afc3_one_0 one
       (.dout(one_dout));
  bd_afc3_psr_aclk_0 psr_aclk
       (.aux_reset_in(clk_map_aresetn_net),
        .dcm_locked(1'b1),
        .ext_reset_in(one_dout),
        .interconnect_aresetn(psr_aclk_interconnect_aresetn),
        .mb_debug_sys_rst(1'b0),
        .slowest_sync_clk(clk_map_aclk_net));
endmodule

module i_nodes_0_imp_JJ2Z8G
   (M_SC_AR_info,
    M_SC_AR_payld,
    M_SC_AR_recv,
    M_SC_AR_req,
    M_SC_AR_send,
    M_SC_AW_info,
    M_SC_AW_payld,
    M_SC_AW_recv,
    M_SC_AW_req,
    M_SC_AW_send,
    M_SC_B_info,
    M_SC_B_payld,
    M_SC_B_recv,
    M_SC_B_req,
    M_SC_B_send,
    M_SC_R_info,
    M_SC_R_payld,
    M_SC_R_recv,
    M_SC_R_req,
    M_SC_R_send,
    M_SC_W_info,
    M_SC_W_payld,
    M_SC_W_recv,
    M_SC_W_req,
    M_SC_W_send,
    S_SC_AR_info,
    S_SC_AR_payld,
    S_SC_AR_recv,
    S_SC_AR_req,
    S_SC_AR_send,
    S_SC_AW_info,
    S_SC_AW_payld,
    S_SC_AW_recv,
    S_SC_AW_req,
    S_SC_AW_send,
    S_SC_B_info,
    S_SC_B_payld,
    S_SC_B_recv,
    S_SC_B_req,
    S_SC_B_send,
    S_SC_R_info,
    S_SC_R_payld,
    S_SC_R_recv,
    S_SC_R_req,
    S_SC_R_send,
    S_SC_W_info,
    S_SC_W_payld,
    S_SC_W_recv,
    S_SC_W_req,
    S_SC_W_send,
    m_sc_aclk,
    m_sc_aresetn,
    s_sc_aclk,
    s_sc_aresetn);
  output [6:0]M_SC_AR_info;
  output [181:0]M_SC_AR_payld;
  input [6:0]M_SC_AR_recv;
  output [6:0]M_SC_AR_req;
  output [6:0]M_SC_AR_send;
  output [6:0]M_SC_AW_info;
  output [181:0]M_SC_AW_payld;
  input [6:0]M_SC_AW_recv;
  output [6:0]M_SC_AW_req;
  output [6:0]M_SC_AW_send;
  output [0:0]M_SC_B_info;
  output [8:0]M_SC_B_payld;
  input [0:0]M_SC_B_recv;
  output [0:0]M_SC_B_req;
  output [0:0]M_SC_B_send;
  output [0:0]M_SC_R_info;
  output [54:0]M_SC_R_payld;
  input [0:0]M_SC_R_recv;
  output [0:0]M_SC_R_req;
  output [0:0]M_SC_R_send;
  output [6:0]M_SC_W_info;
  output [68:0]M_SC_W_payld;
  input [6:0]M_SC_W_recv;
  output [6:0]M_SC_W_req;
  output [6:0]M_SC_W_send;
  input [0:0]S_SC_AR_info;
  input [181:0]S_SC_AR_payld;
  output [0:0]S_SC_AR_recv;
  input [0:0]S_SC_AR_req;
  input [0:0]S_SC_AR_send;
  input [0:0]S_SC_AW_info;
  input [181:0]S_SC_AW_payld;
  output [0:0]S_SC_AW_recv;
  input [0:0]S_SC_AW_req;
  input [0:0]S_SC_AW_send;
  input [6:0]S_SC_B_info;
  input [8:0]S_SC_B_payld;
  output [6:0]S_SC_B_recv;
  input [6:0]S_SC_B_req;
  input [6:0]S_SC_B_send;
  input [6:0]S_SC_R_info;
  input [54:0]S_SC_R_payld;
  output [6:0]S_SC_R_recv;
  input [6:0]S_SC_R_req;
  input [6:0]S_SC_R_send;
  input [0:0]S_SC_W_info;
  input [68:0]S_SC_W_payld;
  output [0:0]S_SC_W_recv;
  input [0:0]S_SC_W_req;
  input [0:0]S_SC_W_send;
  input m_sc_aclk;
  input m_sc_aresetn;
  input s_sc_aclk;
  input s_sc_aresetn;

  wire [0:0]S_SC_AR_1_INFO;
  wire [181:0]S_SC_AR_1_PAYLD;
  wire [0:0]S_SC_AR_1_RECV;
  wire [0:0]S_SC_AR_1_REQ;
  wire [0:0]S_SC_AR_1_SEND;
  wire [0:0]S_SC_AW_1_INFO;
  wire [181:0]S_SC_AW_1_PAYLD;
  wire [0:0]S_SC_AW_1_RECV;
  wire [0:0]S_SC_AW_1_REQ;
  wire [0:0]S_SC_AW_1_SEND;
  wire [6:0]S_SC_B_1_INFO;
  wire [8:0]S_SC_B_1_PAYLD;
  wire [6:0]S_SC_B_1_RECV;
  wire [6:0]S_SC_B_1_REQ;
  wire [6:0]S_SC_B_1_SEND;
  wire [6:0]S_SC_R_1_INFO;
  wire [54:0]S_SC_R_1_PAYLD;
  wire [6:0]S_SC_R_1_RECV;
  wire [6:0]S_SC_R_1_REQ;
  wire [6:0]S_SC_R_1_SEND;
  wire [0:0]S_SC_W_1_INFO;
  wire [68:0]S_SC_W_1_PAYLD;
  wire [0:0]S_SC_W_1_RECV;
  wire [0:0]S_SC_W_1_REQ;
  wire [0:0]S_SC_W_1_SEND;
  wire [6:0]i_ar_node_0_M_SC_INFO;
  wire [181:0]i_ar_node_0_M_SC_PAYLD;
  wire [6:0]i_ar_node_0_M_SC_RECV;
  wire [6:0]i_ar_node_0_M_SC_REQ;
  wire [6:0]i_ar_node_0_M_SC_SEND;
  wire [6:0]i_aw_node_0_M_SC_INFO;
  wire [181:0]i_aw_node_0_M_SC_PAYLD;
  wire [6:0]i_aw_node_0_M_SC_RECV;
  wire [6:0]i_aw_node_0_M_SC_REQ;
  wire [6:0]i_aw_node_0_M_SC_SEND;
  wire [0:0]i_b_node_0_M_SC_INFO;
  wire [8:0]i_b_node_0_M_SC_PAYLD;
  wire [0:0]i_b_node_0_M_SC_RECV;
  wire [0:0]i_b_node_0_M_SC_REQ;
  wire [0:0]i_b_node_0_M_SC_SEND;
  wire [0:0]i_r_node_0_M_SC_INFO;
  wire [54:0]i_r_node_0_M_SC_PAYLD;
  wire [0:0]i_r_node_0_M_SC_RECV;
  wire [0:0]i_r_node_0_M_SC_REQ;
  wire [0:0]i_r_node_0_M_SC_SEND;
  wire [6:0]i_w_node_0_M_SC_INFO;
  wire [68:0]i_w_node_0_M_SC_PAYLD;
  wire [6:0]i_w_node_0_M_SC_RECV;
  wire [6:0]i_w_node_0_M_SC_REQ;
  wire [6:0]i_w_node_0_M_SC_SEND;
  wire m_sc_aclk_1;
  wire m_sc_aresetn_1;
  wire s_sc_aclk_1;
  wire s_sc_aresetn_1;

  assign M_SC_AR_info[6:0] = i_ar_node_0_M_SC_INFO;
  assign M_SC_AR_payld[181:0] = i_ar_node_0_M_SC_PAYLD;
  assign M_SC_AR_req[6:0] = i_ar_node_0_M_SC_REQ;
  assign M_SC_AR_send[6:0] = i_ar_node_0_M_SC_SEND;
  assign M_SC_AW_info[6:0] = i_aw_node_0_M_SC_INFO;
  assign M_SC_AW_payld[181:0] = i_aw_node_0_M_SC_PAYLD;
  assign M_SC_AW_req[6:0] = i_aw_node_0_M_SC_REQ;
  assign M_SC_AW_send[6:0] = i_aw_node_0_M_SC_SEND;
  assign M_SC_B_info[0] = i_b_node_0_M_SC_INFO;
  assign M_SC_B_payld[8:0] = i_b_node_0_M_SC_PAYLD;
  assign M_SC_B_req[0] = i_b_node_0_M_SC_REQ;
  assign M_SC_B_send[0] = i_b_node_0_M_SC_SEND;
  assign M_SC_R_info[0] = i_r_node_0_M_SC_INFO;
  assign M_SC_R_payld[54:0] = i_r_node_0_M_SC_PAYLD;
  assign M_SC_R_req[0] = i_r_node_0_M_SC_REQ;
  assign M_SC_R_send[0] = i_r_node_0_M_SC_SEND;
  assign M_SC_W_info[6:0] = i_w_node_0_M_SC_INFO;
  assign M_SC_W_payld[68:0] = i_w_node_0_M_SC_PAYLD;
  assign M_SC_W_req[6:0] = i_w_node_0_M_SC_REQ;
  assign M_SC_W_send[6:0] = i_w_node_0_M_SC_SEND;
  assign S_SC_AR_1_INFO = S_SC_AR_info[0];
  assign S_SC_AR_1_PAYLD = S_SC_AR_payld[181:0];
  assign S_SC_AR_1_REQ = S_SC_AR_req[0];
  assign S_SC_AR_1_SEND = S_SC_AR_send[0];
  assign S_SC_AR_recv[0] = S_SC_AR_1_RECV;
  assign S_SC_AW_1_INFO = S_SC_AW_info[0];
  assign S_SC_AW_1_PAYLD = S_SC_AW_payld[181:0];
  assign S_SC_AW_1_REQ = S_SC_AW_req[0];
  assign S_SC_AW_1_SEND = S_SC_AW_send[0];
  assign S_SC_AW_recv[0] = S_SC_AW_1_RECV;
  assign S_SC_B_1_INFO = S_SC_B_info[6:0];
  assign S_SC_B_1_PAYLD = S_SC_B_payld[8:0];
  assign S_SC_B_1_REQ = S_SC_B_req[6:0];
  assign S_SC_B_1_SEND = S_SC_B_send[6:0];
  assign S_SC_B_recv[6:0] = S_SC_B_1_RECV;
  assign S_SC_R_1_INFO = S_SC_R_info[6:0];
  assign S_SC_R_1_PAYLD = S_SC_R_payld[54:0];
  assign S_SC_R_1_REQ = S_SC_R_req[6:0];
  assign S_SC_R_1_SEND = S_SC_R_send[6:0];
  assign S_SC_R_recv[6:0] = S_SC_R_1_RECV;
  assign S_SC_W_1_INFO = S_SC_W_info[0];
  assign S_SC_W_1_PAYLD = S_SC_W_payld[68:0];
  assign S_SC_W_1_REQ = S_SC_W_req[0];
  assign S_SC_W_1_SEND = S_SC_W_send[0];
  assign S_SC_W_recv[0] = S_SC_W_1_RECV;
  assign i_ar_node_0_M_SC_RECV = M_SC_AR_recv[6:0];
  assign i_aw_node_0_M_SC_RECV = M_SC_AW_recv[6:0];
  assign i_b_node_0_M_SC_RECV = M_SC_B_recv[0];
  assign i_r_node_0_M_SC_RECV = M_SC_R_recv[0];
  assign i_w_node_0_M_SC_RECV = M_SC_W_recv[6:0];
  assign m_sc_aclk_1 = m_sc_aclk;
  assign m_sc_aresetn_1 = m_sc_aresetn;
  assign s_sc_aclk_1 = s_sc_aclk;
  assign s_sc_aresetn_1 = s_sc_aresetn;
  bd_afc3_arni_0 i_ar_node_0
       (.m_sc_aclk(m_sc_aclk_1),
        .m_sc_aresetn(m_sc_aresetn_1),
        .m_sc_info(i_ar_node_0_M_SC_INFO),
        .m_sc_payld(i_ar_node_0_M_SC_PAYLD),
        .m_sc_recv(i_ar_node_0_M_SC_RECV),
        .m_sc_req(i_ar_node_0_M_SC_REQ),
        .m_sc_send(i_ar_node_0_M_SC_SEND),
        .s_sc_aclk(s_sc_aclk_1),
        .s_sc_aresetn(s_sc_aresetn_1),
        .s_sc_info(S_SC_AR_1_INFO),
        .s_sc_payld(S_SC_AR_1_PAYLD),
        .s_sc_recv(S_SC_AR_1_RECV),
        .s_sc_req(S_SC_AR_1_REQ),
        .s_sc_send(S_SC_AR_1_SEND));
  bd_afc3_awni_0 i_aw_node_0
       (.m_sc_aclk(m_sc_aclk_1),
        .m_sc_aresetn(m_sc_aresetn_1),
        .m_sc_info(i_aw_node_0_M_SC_INFO),
        .m_sc_payld(i_aw_node_0_M_SC_PAYLD),
        .m_sc_recv(i_aw_node_0_M_SC_RECV),
        .m_sc_req(i_aw_node_0_M_SC_REQ),
        .m_sc_send(i_aw_node_0_M_SC_SEND),
        .s_sc_aclk(s_sc_aclk_1),
        .s_sc_aresetn(s_sc_aresetn_1),
        .s_sc_info(S_SC_AW_1_INFO),
        .s_sc_payld(S_SC_AW_1_PAYLD),
        .s_sc_recv(S_SC_AW_1_RECV),
        .s_sc_req(S_SC_AW_1_REQ),
        .s_sc_send(S_SC_AW_1_SEND));
  bd_afc3_bni_0 i_b_node_0
       (.m_sc_aclk(s_sc_aclk_1),
        .m_sc_aresetn(s_sc_aresetn_1),
        .m_sc_info(i_b_node_0_M_SC_INFO),
        .m_sc_payld(i_b_node_0_M_SC_PAYLD),
        .m_sc_recv(i_b_node_0_M_SC_RECV),
        .m_sc_req(i_b_node_0_M_SC_REQ),
        .m_sc_send(i_b_node_0_M_SC_SEND),
        .s_sc_aclk(m_sc_aclk_1),
        .s_sc_aresetn(m_sc_aresetn_1),
        .s_sc_info(S_SC_B_1_INFO),
        .s_sc_payld(S_SC_B_1_PAYLD),
        .s_sc_recv(S_SC_B_1_RECV),
        .s_sc_req(S_SC_B_1_REQ),
        .s_sc_send(S_SC_B_1_SEND));
  bd_afc3_rni_0 i_r_node_0
       (.m_sc_aclk(s_sc_aclk_1),
        .m_sc_aresetn(s_sc_aresetn_1),
        .m_sc_info(i_r_node_0_M_SC_INFO),
        .m_sc_payld(i_r_node_0_M_SC_PAYLD),
        .m_sc_recv(i_r_node_0_M_SC_RECV),
        .m_sc_req(i_r_node_0_M_SC_REQ),
        .m_sc_send(i_r_node_0_M_SC_SEND),
        .s_sc_aclk(m_sc_aclk_1),
        .s_sc_aresetn(m_sc_aresetn_1),
        .s_sc_info(S_SC_R_1_INFO),
        .s_sc_payld(S_SC_R_1_PAYLD),
        .s_sc_recv(S_SC_R_1_RECV),
        .s_sc_req(S_SC_R_1_REQ),
        .s_sc_send(S_SC_R_1_SEND));
  bd_afc3_wni_0 i_w_node_0
       (.m_sc_aclk(m_sc_aclk_1),
        .m_sc_aresetn(m_sc_aresetn_1),
        .m_sc_info(i_w_node_0_M_SC_INFO),
        .m_sc_payld(i_w_node_0_M_SC_PAYLD),
        .m_sc_recv(i_w_node_0_M_SC_RECV),
        .m_sc_req(i_w_node_0_M_SC_REQ),
        .m_sc_send(i_w_node_0_M_SC_SEND),
        .s_sc_aclk(s_sc_aclk_1),
        .s_sc_aresetn(s_sc_aresetn_1),
        .s_sc_info(S_SC_W_1_INFO),
        .s_sc_payld(S_SC_W_1_PAYLD),
        .s_sc_recv(S_SC_W_1_RECV),
        .s_sc_req(S_SC_W_1_REQ),
        .s_sc_send(S_SC_W_1_SEND));
endmodule

module i_nodes_1_imp_12IAN3Y
   (M_SC_AR_info,
    M_SC_AR_payld,
    M_SC_AR_recv,
    M_SC_AR_req,
    M_SC_AR_send,
    M_SC_AW_info,
    M_SC_AW_payld,
    M_SC_AW_recv,
    M_SC_AW_req,
    M_SC_AW_send,
    M_SC_B_info,
    M_SC_B_payld,
    M_SC_B_recv,
    M_SC_B_req,
    M_SC_B_send,
    M_SC_R_info,
    M_SC_R_payld,
    M_SC_R_recv,
    M_SC_R_req,
    M_SC_R_send,
    M_SC_W_info,
    M_SC_W_payld,
    M_SC_W_recv,
    M_SC_W_req,
    M_SC_W_send,
    S_SC_AR_info,
    S_SC_AR_payld,
    S_SC_AR_recv,
    S_SC_AR_req,
    S_SC_AR_send,
    S_SC_AW_info,
    S_SC_AW_payld,
    S_SC_AW_recv,
    S_SC_AW_req,
    S_SC_AW_send,
    S_SC_B_info,
    S_SC_B_payld,
    S_SC_B_recv,
    S_SC_B_req,
    S_SC_B_send,
    S_SC_R_info,
    S_SC_R_payld,
    S_SC_R_recv,
    S_SC_R_req,
    S_SC_R_send,
    S_SC_W_info,
    S_SC_W_payld,
    S_SC_W_recv,
    S_SC_W_req,
    S_SC_W_send,
    m_sc_aclk,
    m_sc_aresetn,
    s_sc_aclk,
    s_sc_aresetn);
  output [6:0]M_SC_AR_info;
  output [181:0]M_SC_AR_payld;
  input [6:0]M_SC_AR_recv;
  output [6:0]M_SC_AR_req;
  output [6:0]M_SC_AR_send;
  output [6:0]M_SC_AW_info;
  output [181:0]M_SC_AW_payld;
  input [6:0]M_SC_AW_recv;
  output [6:0]M_SC_AW_req;
  output [6:0]M_SC_AW_send;
  output [0:0]M_SC_B_info;
  output [8:0]M_SC_B_payld;
  input [0:0]M_SC_B_recv;
  output [0:0]M_SC_B_req;
  output [0:0]M_SC_B_send;
  output [0:0]M_SC_R_info;
  output [54:0]M_SC_R_payld;
  input [0:0]M_SC_R_recv;
  output [0:0]M_SC_R_req;
  output [0:0]M_SC_R_send;
  output [6:0]M_SC_W_info;
  output [68:0]M_SC_W_payld;
  input [6:0]M_SC_W_recv;
  output [6:0]M_SC_W_req;
  output [6:0]M_SC_W_send;
  input [0:0]S_SC_AR_info;
  input [181:0]S_SC_AR_payld;
  output [0:0]S_SC_AR_recv;
  input [0:0]S_SC_AR_req;
  input [0:0]S_SC_AR_send;
  input [0:0]S_SC_AW_info;
  input [181:0]S_SC_AW_payld;
  output [0:0]S_SC_AW_recv;
  input [0:0]S_SC_AW_req;
  input [0:0]S_SC_AW_send;
  input [6:0]S_SC_B_info;
  input [8:0]S_SC_B_payld;
  output [6:0]S_SC_B_recv;
  input [6:0]S_SC_B_req;
  input [6:0]S_SC_B_send;
  input [6:0]S_SC_R_info;
  input [54:0]S_SC_R_payld;
  output [6:0]S_SC_R_recv;
  input [6:0]S_SC_R_req;
  input [6:0]S_SC_R_send;
  input [0:0]S_SC_W_info;
  input [68:0]S_SC_W_payld;
  output [0:0]S_SC_W_recv;
  input [0:0]S_SC_W_req;
  input [0:0]S_SC_W_send;
  input m_sc_aclk;
  input m_sc_aresetn;
  input s_sc_aclk;
  input s_sc_aresetn;

  wire [0:0]S_SC_AR_1_INFO;
  wire [181:0]S_SC_AR_1_PAYLD;
  wire [0:0]S_SC_AR_1_RECV;
  wire [0:0]S_SC_AR_1_REQ;
  wire [0:0]S_SC_AR_1_SEND;
  wire [0:0]S_SC_AW_1_INFO;
  wire [181:0]S_SC_AW_1_PAYLD;
  wire [0:0]S_SC_AW_1_RECV;
  wire [0:0]S_SC_AW_1_REQ;
  wire [0:0]S_SC_AW_1_SEND;
  wire [6:0]S_SC_B_1_INFO;
  wire [8:0]S_SC_B_1_PAYLD;
  wire [6:0]S_SC_B_1_RECV;
  wire [6:0]S_SC_B_1_REQ;
  wire [6:0]S_SC_B_1_SEND;
  wire [6:0]S_SC_R_1_INFO;
  wire [54:0]S_SC_R_1_PAYLD;
  wire [6:0]S_SC_R_1_RECV;
  wire [6:0]S_SC_R_1_REQ;
  wire [6:0]S_SC_R_1_SEND;
  wire [0:0]S_SC_W_1_INFO;
  wire [68:0]S_SC_W_1_PAYLD;
  wire [0:0]S_SC_W_1_RECV;
  wire [0:0]S_SC_W_1_REQ;
  wire [0:0]S_SC_W_1_SEND;
  wire [6:0]i_ar_node_1_M_SC_INFO;
  wire [181:0]i_ar_node_1_M_SC_PAYLD;
  wire [6:0]i_ar_node_1_M_SC_RECV;
  wire [6:0]i_ar_node_1_M_SC_REQ;
  wire [6:0]i_ar_node_1_M_SC_SEND;
  wire [6:0]i_aw_node_1_M_SC_INFO;
  wire [181:0]i_aw_node_1_M_SC_PAYLD;
  wire [6:0]i_aw_node_1_M_SC_RECV;
  wire [6:0]i_aw_node_1_M_SC_REQ;
  wire [6:0]i_aw_node_1_M_SC_SEND;
  wire [0:0]i_b_node_1_M_SC_INFO;
  wire [8:0]i_b_node_1_M_SC_PAYLD;
  wire [0:0]i_b_node_1_M_SC_RECV;
  wire [0:0]i_b_node_1_M_SC_REQ;
  wire [0:0]i_b_node_1_M_SC_SEND;
  wire [0:0]i_r_node_1_M_SC_INFO;
  wire [54:0]i_r_node_1_M_SC_PAYLD;
  wire [0:0]i_r_node_1_M_SC_RECV;
  wire [0:0]i_r_node_1_M_SC_REQ;
  wire [0:0]i_r_node_1_M_SC_SEND;
  wire [6:0]i_w_node_1_M_SC_INFO;
  wire [68:0]i_w_node_1_M_SC_PAYLD;
  wire [6:0]i_w_node_1_M_SC_RECV;
  wire [6:0]i_w_node_1_M_SC_REQ;
  wire [6:0]i_w_node_1_M_SC_SEND;
  wire m_sc_aclk_1;
  wire m_sc_aresetn_1;
  wire s_sc_aclk_1;
  wire s_sc_aresetn_1;

  assign M_SC_AR_info[6:0] = i_ar_node_1_M_SC_INFO;
  assign M_SC_AR_payld[181:0] = i_ar_node_1_M_SC_PAYLD;
  assign M_SC_AR_req[6:0] = i_ar_node_1_M_SC_REQ;
  assign M_SC_AR_send[6:0] = i_ar_node_1_M_SC_SEND;
  assign M_SC_AW_info[6:0] = i_aw_node_1_M_SC_INFO;
  assign M_SC_AW_payld[181:0] = i_aw_node_1_M_SC_PAYLD;
  assign M_SC_AW_req[6:0] = i_aw_node_1_M_SC_REQ;
  assign M_SC_AW_send[6:0] = i_aw_node_1_M_SC_SEND;
  assign M_SC_B_info[0] = i_b_node_1_M_SC_INFO;
  assign M_SC_B_payld[8:0] = i_b_node_1_M_SC_PAYLD;
  assign M_SC_B_req[0] = i_b_node_1_M_SC_REQ;
  assign M_SC_B_send[0] = i_b_node_1_M_SC_SEND;
  assign M_SC_R_info[0] = i_r_node_1_M_SC_INFO;
  assign M_SC_R_payld[54:0] = i_r_node_1_M_SC_PAYLD;
  assign M_SC_R_req[0] = i_r_node_1_M_SC_REQ;
  assign M_SC_R_send[0] = i_r_node_1_M_SC_SEND;
  assign M_SC_W_info[6:0] = i_w_node_1_M_SC_INFO;
  assign M_SC_W_payld[68:0] = i_w_node_1_M_SC_PAYLD;
  assign M_SC_W_req[6:0] = i_w_node_1_M_SC_REQ;
  assign M_SC_W_send[6:0] = i_w_node_1_M_SC_SEND;
  assign S_SC_AR_1_INFO = S_SC_AR_info[0];
  assign S_SC_AR_1_PAYLD = S_SC_AR_payld[181:0];
  assign S_SC_AR_1_REQ = S_SC_AR_req[0];
  assign S_SC_AR_1_SEND = S_SC_AR_send[0];
  assign S_SC_AR_recv[0] = S_SC_AR_1_RECV;
  assign S_SC_AW_1_INFO = S_SC_AW_info[0];
  assign S_SC_AW_1_PAYLD = S_SC_AW_payld[181:0];
  assign S_SC_AW_1_REQ = S_SC_AW_req[0];
  assign S_SC_AW_1_SEND = S_SC_AW_send[0];
  assign S_SC_AW_recv[0] = S_SC_AW_1_RECV;
  assign S_SC_B_1_INFO = S_SC_B_info[6:0];
  assign S_SC_B_1_PAYLD = S_SC_B_payld[8:0];
  assign S_SC_B_1_REQ = S_SC_B_req[6:0];
  assign S_SC_B_1_SEND = S_SC_B_send[6:0];
  assign S_SC_B_recv[6:0] = S_SC_B_1_RECV;
  assign S_SC_R_1_INFO = S_SC_R_info[6:0];
  assign S_SC_R_1_PAYLD = S_SC_R_payld[54:0];
  assign S_SC_R_1_REQ = S_SC_R_req[6:0];
  assign S_SC_R_1_SEND = S_SC_R_send[6:0];
  assign S_SC_R_recv[6:0] = S_SC_R_1_RECV;
  assign S_SC_W_1_INFO = S_SC_W_info[0];
  assign S_SC_W_1_PAYLD = S_SC_W_payld[68:0];
  assign S_SC_W_1_REQ = S_SC_W_req[0];
  assign S_SC_W_1_SEND = S_SC_W_send[0];
  assign S_SC_W_recv[0] = S_SC_W_1_RECV;
  assign i_ar_node_1_M_SC_RECV = M_SC_AR_recv[6:0];
  assign i_aw_node_1_M_SC_RECV = M_SC_AW_recv[6:0];
  assign i_b_node_1_M_SC_RECV = M_SC_B_recv[0];
  assign i_r_node_1_M_SC_RECV = M_SC_R_recv[0];
  assign i_w_node_1_M_SC_RECV = M_SC_W_recv[6:0];
  assign m_sc_aclk_1 = m_sc_aclk;
  assign m_sc_aresetn_1 = m_sc_aresetn;
  assign s_sc_aclk_1 = s_sc_aclk;
  assign s_sc_aresetn_1 = s_sc_aresetn;
  bd_afc3_arni_1 i_ar_node_1
       (.m_sc_aclk(m_sc_aclk_1),
        .m_sc_aresetn(m_sc_aresetn_1),
        .m_sc_info(i_ar_node_1_M_SC_INFO),
        .m_sc_payld(i_ar_node_1_M_SC_PAYLD),
        .m_sc_recv(i_ar_node_1_M_SC_RECV),
        .m_sc_req(i_ar_node_1_M_SC_REQ),
        .m_sc_send(i_ar_node_1_M_SC_SEND),
        .s_sc_aclk(s_sc_aclk_1),
        .s_sc_aresetn(s_sc_aresetn_1),
        .s_sc_info(S_SC_AR_1_INFO),
        .s_sc_payld(S_SC_AR_1_PAYLD),
        .s_sc_recv(S_SC_AR_1_RECV),
        .s_sc_req(S_SC_AR_1_REQ),
        .s_sc_send(S_SC_AR_1_SEND));
  bd_afc3_awni_1 i_aw_node_1
       (.m_sc_aclk(m_sc_aclk_1),
        .m_sc_aresetn(m_sc_aresetn_1),
        .m_sc_info(i_aw_node_1_M_SC_INFO),
        .m_sc_payld(i_aw_node_1_M_SC_PAYLD),
        .m_sc_recv(i_aw_node_1_M_SC_RECV),
        .m_sc_req(i_aw_node_1_M_SC_REQ),
        .m_sc_send(i_aw_node_1_M_SC_SEND),
        .s_sc_aclk(s_sc_aclk_1),
        .s_sc_aresetn(s_sc_aresetn_1),
        .s_sc_info(S_SC_AW_1_INFO),
        .s_sc_payld(S_SC_AW_1_PAYLD),
        .s_sc_recv(S_SC_AW_1_RECV),
        .s_sc_req(S_SC_AW_1_REQ),
        .s_sc_send(S_SC_AW_1_SEND));
  bd_afc3_bni_1 i_b_node_1
       (.m_sc_aclk(s_sc_aclk_1),
        .m_sc_aresetn(s_sc_aresetn_1),
        .m_sc_info(i_b_node_1_M_SC_INFO),
        .m_sc_payld(i_b_node_1_M_SC_PAYLD),
        .m_sc_recv(i_b_node_1_M_SC_RECV),
        .m_sc_req(i_b_node_1_M_SC_REQ),
        .m_sc_send(i_b_node_1_M_SC_SEND),
        .s_sc_aclk(m_sc_aclk_1),
        .s_sc_aresetn(m_sc_aresetn_1),
        .s_sc_info(S_SC_B_1_INFO),
        .s_sc_payld(S_SC_B_1_PAYLD),
        .s_sc_recv(S_SC_B_1_RECV),
        .s_sc_req(S_SC_B_1_REQ),
        .s_sc_send(S_SC_B_1_SEND));
  bd_afc3_rni_1 i_r_node_1
       (.m_sc_aclk(s_sc_aclk_1),
        .m_sc_aresetn(s_sc_aresetn_1),
        .m_sc_info(i_r_node_1_M_SC_INFO),
        .m_sc_payld(i_r_node_1_M_SC_PAYLD),
        .m_sc_recv(i_r_node_1_M_SC_RECV),
        .m_sc_req(i_r_node_1_M_SC_REQ),
        .m_sc_send(i_r_node_1_M_SC_SEND),
        .s_sc_aclk(m_sc_aclk_1),
        .s_sc_aresetn(m_sc_aresetn_1),
        .s_sc_info(S_SC_R_1_INFO),
        .s_sc_payld(S_SC_R_1_PAYLD),
        .s_sc_recv(S_SC_R_1_RECV),
        .s_sc_req(S_SC_R_1_REQ),
        .s_sc_send(S_SC_R_1_SEND));
  bd_afc3_wni_1 i_w_node_1
       (.m_sc_aclk(m_sc_aclk_1),
        .m_sc_aresetn(m_sc_aresetn_1),
        .m_sc_info(i_w_node_1_M_SC_INFO),
        .m_sc_payld(i_w_node_1_M_SC_PAYLD),
        .m_sc_recv(i_w_node_1_M_SC_RECV),
        .m_sc_req(i_w_node_1_M_SC_REQ),
        .m_sc_send(i_w_node_1_M_SC_SEND),
        .s_sc_aclk(s_sc_aclk_1),
        .s_sc_aresetn(s_sc_aresetn_1),
        .s_sc_info(S_SC_W_1_INFO),
        .s_sc_payld(S_SC_W_1_PAYLD),
        .s_sc_recv(S_SC_W_1_RECV),
        .s_sc_req(S_SC_W_1_REQ),
        .s_sc_send(S_SC_W_1_SEND));
endmodule

module i_nodes_2_imp_16P0V1
   (M_SC_AR_info,
    M_SC_AR_payld,
    M_SC_AR_recv,
    M_SC_AR_req,
    M_SC_AR_send,
    M_SC_AW_info,
    M_SC_AW_payld,
    M_SC_AW_recv,
    M_SC_AW_req,
    M_SC_AW_send,
    M_SC_B_info,
    M_SC_B_payld,
    M_SC_B_recv,
    M_SC_B_req,
    M_SC_B_send,
    M_SC_R_info,
    M_SC_R_payld,
    M_SC_R_recv,
    M_SC_R_req,
    M_SC_R_send,
    M_SC_W_info,
    M_SC_W_payld,
    M_SC_W_recv,
    M_SC_W_req,
    M_SC_W_send,
    S_SC_AR_info,
    S_SC_AR_payld,
    S_SC_AR_recv,
    S_SC_AR_req,
    S_SC_AR_send,
    S_SC_AW_info,
    S_SC_AW_payld,
    S_SC_AW_recv,
    S_SC_AW_req,
    S_SC_AW_send,
    S_SC_B_info,
    S_SC_B_payld,
    S_SC_B_recv,
    S_SC_B_req,
    S_SC_B_send,
    S_SC_R_info,
    S_SC_R_payld,
    S_SC_R_recv,
    S_SC_R_req,
    S_SC_R_send,
    S_SC_W_info,
    S_SC_W_payld,
    S_SC_W_recv,
    S_SC_W_req,
    S_SC_W_send,
    m_sc_aclk,
    m_sc_aresetn,
    s_sc_aclk,
    s_sc_aresetn);
  output [6:0]M_SC_AR_info;
  output [181:0]M_SC_AR_payld;
  input [6:0]M_SC_AR_recv;
  output [6:0]M_SC_AR_req;
  output [6:0]M_SC_AR_send;
  output [6:0]M_SC_AW_info;
  output [181:0]M_SC_AW_payld;
  input [6:0]M_SC_AW_recv;
  output [6:0]M_SC_AW_req;
  output [6:0]M_SC_AW_send;
  output [0:0]M_SC_B_info;
  output [8:0]M_SC_B_payld;
  input [0:0]M_SC_B_recv;
  output [0:0]M_SC_B_req;
  output [0:0]M_SC_B_send;
  output [0:0]M_SC_R_info;
  output [54:0]M_SC_R_payld;
  input [0:0]M_SC_R_recv;
  output [0:0]M_SC_R_req;
  output [0:0]M_SC_R_send;
  output [6:0]M_SC_W_info;
  output [68:0]M_SC_W_payld;
  input [6:0]M_SC_W_recv;
  output [6:0]M_SC_W_req;
  output [6:0]M_SC_W_send;
  input [0:0]S_SC_AR_info;
  input [181:0]S_SC_AR_payld;
  output [0:0]S_SC_AR_recv;
  input [0:0]S_SC_AR_req;
  input [0:0]S_SC_AR_send;
  input [0:0]S_SC_AW_info;
  input [181:0]S_SC_AW_payld;
  output [0:0]S_SC_AW_recv;
  input [0:0]S_SC_AW_req;
  input [0:0]S_SC_AW_send;
  input [6:0]S_SC_B_info;
  input [8:0]S_SC_B_payld;
  output [6:0]S_SC_B_recv;
  input [6:0]S_SC_B_req;
  input [6:0]S_SC_B_send;
  input [6:0]S_SC_R_info;
  input [54:0]S_SC_R_payld;
  output [6:0]S_SC_R_recv;
  input [6:0]S_SC_R_req;
  input [6:0]S_SC_R_send;
  input [0:0]S_SC_W_info;
  input [68:0]S_SC_W_payld;
  output [0:0]S_SC_W_recv;
  input [0:0]S_SC_W_req;
  input [0:0]S_SC_W_send;
  input m_sc_aclk;
  input m_sc_aresetn;
  input s_sc_aclk;
  input s_sc_aresetn;

  wire [0:0]S_SC_AR_1_INFO;
  wire [181:0]S_SC_AR_1_PAYLD;
  wire [0:0]S_SC_AR_1_RECV;
  wire [0:0]S_SC_AR_1_REQ;
  wire [0:0]S_SC_AR_1_SEND;
  wire [0:0]S_SC_AW_1_INFO;
  wire [181:0]S_SC_AW_1_PAYLD;
  wire [0:0]S_SC_AW_1_RECV;
  wire [0:0]S_SC_AW_1_REQ;
  wire [0:0]S_SC_AW_1_SEND;
  wire [6:0]S_SC_B_1_INFO;
  wire [8:0]S_SC_B_1_PAYLD;
  wire [6:0]S_SC_B_1_RECV;
  wire [6:0]S_SC_B_1_REQ;
  wire [6:0]S_SC_B_1_SEND;
  wire [6:0]S_SC_R_1_INFO;
  wire [54:0]S_SC_R_1_PAYLD;
  wire [6:0]S_SC_R_1_RECV;
  wire [6:0]S_SC_R_1_REQ;
  wire [6:0]S_SC_R_1_SEND;
  wire [0:0]S_SC_W_1_INFO;
  wire [68:0]S_SC_W_1_PAYLD;
  wire [0:0]S_SC_W_1_RECV;
  wire [0:0]S_SC_W_1_REQ;
  wire [0:0]S_SC_W_1_SEND;
  wire [6:0]i_ar_node_2_M_SC_INFO;
  wire [181:0]i_ar_node_2_M_SC_PAYLD;
  wire [6:0]i_ar_node_2_M_SC_RECV;
  wire [6:0]i_ar_node_2_M_SC_REQ;
  wire [6:0]i_ar_node_2_M_SC_SEND;
  wire [6:0]i_aw_node_2_M_SC_INFO;
  wire [181:0]i_aw_node_2_M_SC_PAYLD;
  wire [6:0]i_aw_node_2_M_SC_RECV;
  wire [6:0]i_aw_node_2_M_SC_REQ;
  wire [6:0]i_aw_node_2_M_SC_SEND;
  wire [0:0]i_b_node_2_M_SC_INFO;
  wire [8:0]i_b_node_2_M_SC_PAYLD;
  wire [0:0]i_b_node_2_M_SC_RECV;
  wire [0:0]i_b_node_2_M_SC_REQ;
  wire [0:0]i_b_node_2_M_SC_SEND;
  wire [0:0]i_r_node_2_M_SC_INFO;
  wire [54:0]i_r_node_2_M_SC_PAYLD;
  wire [0:0]i_r_node_2_M_SC_RECV;
  wire [0:0]i_r_node_2_M_SC_REQ;
  wire [0:0]i_r_node_2_M_SC_SEND;
  wire [6:0]i_w_node_2_M_SC_INFO;
  wire [68:0]i_w_node_2_M_SC_PAYLD;
  wire [6:0]i_w_node_2_M_SC_RECV;
  wire [6:0]i_w_node_2_M_SC_REQ;
  wire [6:0]i_w_node_2_M_SC_SEND;
  wire m_sc_aclk_1;
  wire m_sc_aresetn_1;
  wire s_sc_aclk_1;
  wire s_sc_aresetn_1;

  assign M_SC_AR_info[6:0] = i_ar_node_2_M_SC_INFO;
  assign M_SC_AR_payld[181:0] = i_ar_node_2_M_SC_PAYLD;
  assign M_SC_AR_req[6:0] = i_ar_node_2_M_SC_REQ;
  assign M_SC_AR_send[6:0] = i_ar_node_2_M_SC_SEND;
  assign M_SC_AW_info[6:0] = i_aw_node_2_M_SC_INFO;
  assign M_SC_AW_payld[181:0] = i_aw_node_2_M_SC_PAYLD;
  assign M_SC_AW_req[6:0] = i_aw_node_2_M_SC_REQ;
  assign M_SC_AW_send[6:0] = i_aw_node_2_M_SC_SEND;
  assign M_SC_B_info[0] = i_b_node_2_M_SC_INFO;
  assign M_SC_B_payld[8:0] = i_b_node_2_M_SC_PAYLD;
  assign M_SC_B_req[0] = i_b_node_2_M_SC_REQ;
  assign M_SC_B_send[0] = i_b_node_2_M_SC_SEND;
  assign M_SC_R_info[0] = i_r_node_2_M_SC_INFO;
  assign M_SC_R_payld[54:0] = i_r_node_2_M_SC_PAYLD;
  assign M_SC_R_req[0] = i_r_node_2_M_SC_REQ;
  assign M_SC_R_send[0] = i_r_node_2_M_SC_SEND;
  assign M_SC_W_info[6:0] = i_w_node_2_M_SC_INFO;
  assign M_SC_W_payld[68:0] = i_w_node_2_M_SC_PAYLD;
  assign M_SC_W_req[6:0] = i_w_node_2_M_SC_REQ;
  assign M_SC_W_send[6:0] = i_w_node_2_M_SC_SEND;
  assign S_SC_AR_1_INFO = S_SC_AR_info[0];
  assign S_SC_AR_1_PAYLD = S_SC_AR_payld[181:0];
  assign S_SC_AR_1_REQ = S_SC_AR_req[0];
  assign S_SC_AR_1_SEND = S_SC_AR_send[0];
  assign S_SC_AR_recv[0] = S_SC_AR_1_RECV;
  assign S_SC_AW_1_INFO = S_SC_AW_info[0];
  assign S_SC_AW_1_PAYLD = S_SC_AW_payld[181:0];
  assign S_SC_AW_1_REQ = S_SC_AW_req[0];
  assign S_SC_AW_1_SEND = S_SC_AW_send[0];
  assign S_SC_AW_recv[0] = S_SC_AW_1_RECV;
  assign S_SC_B_1_INFO = S_SC_B_info[6:0];
  assign S_SC_B_1_PAYLD = S_SC_B_payld[8:0];
  assign S_SC_B_1_REQ = S_SC_B_req[6:0];
  assign S_SC_B_1_SEND = S_SC_B_send[6:0];
  assign S_SC_B_recv[6:0] = S_SC_B_1_RECV;
  assign S_SC_R_1_INFO = S_SC_R_info[6:0];
  assign S_SC_R_1_PAYLD = S_SC_R_payld[54:0];
  assign S_SC_R_1_REQ = S_SC_R_req[6:0];
  assign S_SC_R_1_SEND = S_SC_R_send[6:0];
  assign S_SC_R_recv[6:0] = S_SC_R_1_RECV;
  assign S_SC_W_1_INFO = S_SC_W_info[0];
  assign S_SC_W_1_PAYLD = S_SC_W_payld[68:0];
  assign S_SC_W_1_REQ = S_SC_W_req[0];
  assign S_SC_W_1_SEND = S_SC_W_send[0];
  assign S_SC_W_recv[0] = S_SC_W_1_RECV;
  assign i_ar_node_2_M_SC_RECV = M_SC_AR_recv[6:0];
  assign i_aw_node_2_M_SC_RECV = M_SC_AW_recv[6:0];
  assign i_b_node_2_M_SC_RECV = M_SC_B_recv[0];
  assign i_r_node_2_M_SC_RECV = M_SC_R_recv[0];
  assign i_w_node_2_M_SC_RECV = M_SC_W_recv[6:0];
  assign m_sc_aclk_1 = m_sc_aclk;
  assign m_sc_aresetn_1 = m_sc_aresetn;
  assign s_sc_aclk_1 = s_sc_aclk;
  assign s_sc_aresetn_1 = s_sc_aresetn;
  bd_afc3_arni_2 i_ar_node_2
       (.m_sc_aclk(m_sc_aclk_1),
        .m_sc_aresetn(m_sc_aresetn_1),
        .m_sc_info(i_ar_node_2_M_SC_INFO),
        .m_sc_payld(i_ar_node_2_M_SC_PAYLD),
        .m_sc_recv(i_ar_node_2_M_SC_RECV),
        .m_sc_req(i_ar_node_2_M_SC_REQ),
        .m_sc_send(i_ar_node_2_M_SC_SEND),
        .s_sc_aclk(s_sc_aclk_1),
        .s_sc_aresetn(s_sc_aresetn_1),
        .s_sc_info(S_SC_AR_1_INFO),
        .s_sc_payld(S_SC_AR_1_PAYLD),
        .s_sc_recv(S_SC_AR_1_RECV),
        .s_sc_req(S_SC_AR_1_REQ),
        .s_sc_send(S_SC_AR_1_SEND));
  bd_afc3_awni_2 i_aw_node_2
       (.m_sc_aclk(m_sc_aclk_1),
        .m_sc_aresetn(m_sc_aresetn_1),
        .m_sc_info(i_aw_node_2_M_SC_INFO),
        .m_sc_payld(i_aw_node_2_M_SC_PAYLD),
        .m_sc_recv(i_aw_node_2_M_SC_RECV),
        .m_sc_req(i_aw_node_2_M_SC_REQ),
        .m_sc_send(i_aw_node_2_M_SC_SEND),
        .s_sc_aclk(s_sc_aclk_1),
        .s_sc_aresetn(s_sc_aresetn_1),
        .s_sc_info(S_SC_AW_1_INFO),
        .s_sc_payld(S_SC_AW_1_PAYLD),
        .s_sc_recv(S_SC_AW_1_RECV),
        .s_sc_req(S_SC_AW_1_REQ),
        .s_sc_send(S_SC_AW_1_SEND));
  bd_afc3_bni_2 i_b_node_2
       (.m_sc_aclk(s_sc_aclk_1),
        .m_sc_aresetn(s_sc_aresetn_1),
        .m_sc_info(i_b_node_2_M_SC_INFO),
        .m_sc_payld(i_b_node_2_M_SC_PAYLD),
        .m_sc_recv(i_b_node_2_M_SC_RECV),
        .m_sc_req(i_b_node_2_M_SC_REQ),
        .m_sc_send(i_b_node_2_M_SC_SEND),
        .s_sc_aclk(m_sc_aclk_1),
        .s_sc_aresetn(m_sc_aresetn_1),
        .s_sc_info(S_SC_B_1_INFO),
        .s_sc_payld(S_SC_B_1_PAYLD),
        .s_sc_recv(S_SC_B_1_RECV),
        .s_sc_req(S_SC_B_1_REQ),
        .s_sc_send(S_SC_B_1_SEND));
  bd_afc3_rni_2 i_r_node_2
       (.m_sc_aclk(s_sc_aclk_1),
        .m_sc_aresetn(s_sc_aresetn_1),
        .m_sc_info(i_r_node_2_M_SC_INFO),
        .m_sc_payld(i_r_node_2_M_SC_PAYLD),
        .m_sc_recv(i_r_node_2_M_SC_RECV),
        .m_sc_req(i_r_node_2_M_SC_REQ),
        .m_sc_send(i_r_node_2_M_SC_SEND),
        .s_sc_aclk(m_sc_aclk_1),
        .s_sc_aresetn(m_sc_aresetn_1),
        .s_sc_info(S_SC_R_1_INFO),
        .s_sc_payld(S_SC_R_1_PAYLD),
        .s_sc_recv(S_SC_R_1_RECV),
        .s_sc_req(S_SC_R_1_REQ),
        .s_sc_send(S_SC_R_1_SEND));
  bd_afc3_wni_2 i_w_node_2
       (.m_sc_aclk(m_sc_aclk_1),
        .m_sc_aresetn(m_sc_aresetn_1),
        .m_sc_info(i_w_node_2_M_SC_INFO),
        .m_sc_payld(i_w_node_2_M_SC_PAYLD),
        .m_sc_recv(i_w_node_2_M_SC_RECV),
        .m_sc_req(i_w_node_2_M_SC_REQ),
        .m_sc_send(i_w_node_2_M_SC_SEND),
        .s_sc_aclk(s_sc_aclk_1),
        .s_sc_aresetn(s_sc_aresetn_1),
        .s_sc_info(S_SC_W_1_INFO),
        .s_sc_payld(S_SC_W_1_PAYLD),
        .s_sc_recv(S_SC_W_1_RECV),
        .s_sc_req(S_SC_W_1_REQ),
        .s_sc_send(S_SC_W_1_SEND));
endmodule

module i_nodes_3_imp_1JQYM0Z
   (M_SC_AR_info,
    M_SC_AR_payld,
    M_SC_AR_recv,
    M_SC_AR_req,
    M_SC_AR_send,
    M_SC_AW_info,
    M_SC_AW_payld,
    M_SC_AW_recv,
    M_SC_AW_req,
    M_SC_AW_send,
    M_SC_B_info,
    M_SC_B_payld,
    M_SC_B_recv,
    M_SC_B_req,
    M_SC_B_send,
    M_SC_R_info,
    M_SC_R_payld,
    M_SC_R_recv,
    M_SC_R_req,
    M_SC_R_send,
    M_SC_W_info,
    M_SC_W_payld,
    M_SC_W_recv,
    M_SC_W_req,
    M_SC_W_send,
    S_SC_AR_info,
    S_SC_AR_payld,
    S_SC_AR_recv,
    S_SC_AR_req,
    S_SC_AR_send,
    S_SC_AW_info,
    S_SC_AW_payld,
    S_SC_AW_recv,
    S_SC_AW_req,
    S_SC_AW_send,
    S_SC_B_info,
    S_SC_B_payld,
    S_SC_B_recv,
    S_SC_B_req,
    S_SC_B_send,
    S_SC_R_info,
    S_SC_R_payld,
    S_SC_R_recv,
    S_SC_R_req,
    S_SC_R_send,
    S_SC_W_info,
    S_SC_W_payld,
    S_SC_W_recv,
    S_SC_W_req,
    S_SC_W_send,
    m_sc_aclk,
    m_sc_aresetn,
    s_sc_aclk,
    s_sc_aresetn);
  output [5:0]M_SC_AR_info;
  output [181:0]M_SC_AR_payld;
  input [5:0]M_SC_AR_recv;
  output [5:0]M_SC_AR_req;
  output [5:0]M_SC_AR_send;
  output [5:0]M_SC_AW_info;
  output [181:0]M_SC_AW_payld;
  input [5:0]M_SC_AW_recv;
  output [5:0]M_SC_AW_req;
  output [5:0]M_SC_AW_send;
  output [0:0]M_SC_B_info;
  output [8:0]M_SC_B_payld;
  input [0:0]M_SC_B_recv;
  output [0:0]M_SC_B_req;
  output [0:0]M_SC_B_send;
  output [0:0]M_SC_R_info;
  output [54:0]M_SC_R_payld;
  input [0:0]M_SC_R_recv;
  output [0:0]M_SC_R_req;
  output [0:0]M_SC_R_send;
  output [5:0]M_SC_W_info;
  output [68:0]M_SC_W_payld;
  input [5:0]M_SC_W_recv;
  output [5:0]M_SC_W_req;
  output [5:0]M_SC_W_send;
  input [0:0]S_SC_AR_info;
  input [181:0]S_SC_AR_payld;
  output [0:0]S_SC_AR_recv;
  input [0:0]S_SC_AR_req;
  input [0:0]S_SC_AR_send;
  input [0:0]S_SC_AW_info;
  input [181:0]S_SC_AW_payld;
  output [0:0]S_SC_AW_recv;
  input [0:0]S_SC_AW_req;
  input [0:0]S_SC_AW_send;
  input [5:0]S_SC_B_info;
  input [8:0]S_SC_B_payld;
  output [5:0]S_SC_B_recv;
  input [5:0]S_SC_B_req;
  input [5:0]S_SC_B_send;
  input [5:0]S_SC_R_info;
  input [54:0]S_SC_R_payld;
  output [5:0]S_SC_R_recv;
  input [5:0]S_SC_R_req;
  input [5:0]S_SC_R_send;
  input [0:0]S_SC_W_info;
  input [68:0]S_SC_W_payld;
  output [0:0]S_SC_W_recv;
  input [0:0]S_SC_W_req;
  input [0:0]S_SC_W_send;
  input m_sc_aclk;
  input m_sc_aresetn;
  input s_sc_aclk;
  input s_sc_aresetn;

  wire [0:0]S_SC_AR_1_INFO;
  wire [181:0]S_SC_AR_1_PAYLD;
  wire [0:0]S_SC_AR_1_RECV;
  wire [0:0]S_SC_AR_1_REQ;
  wire [0:0]S_SC_AR_1_SEND;
  wire [0:0]S_SC_AW_1_INFO;
  wire [181:0]S_SC_AW_1_PAYLD;
  wire [0:0]S_SC_AW_1_RECV;
  wire [0:0]S_SC_AW_1_REQ;
  wire [0:0]S_SC_AW_1_SEND;
  wire [5:0]S_SC_B_1_INFO;
  wire [8:0]S_SC_B_1_PAYLD;
  wire [5:0]S_SC_B_1_RECV;
  wire [5:0]S_SC_B_1_REQ;
  wire [5:0]S_SC_B_1_SEND;
  wire [5:0]S_SC_R_1_INFO;
  wire [54:0]S_SC_R_1_PAYLD;
  wire [5:0]S_SC_R_1_RECV;
  wire [5:0]S_SC_R_1_REQ;
  wire [5:0]S_SC_R_1_SEND;
  wire [0:0]S_SC_W_1_INFO;
  wire [68:0]S_SC_W_1_PAYLD;
  wire [0:0]S_SC_W_1_RECV;
  wire [0:0]S_SC_W_1_REQ;
  wire [0:0]S_SC_W_1_SEND;
  wire [5:0]i_ar_node_3_M_SC_INFO;
  wire [181:0]i_ar_node_3_M_SC_PAYLD;
  wire [5:0]i_ar_node_3_M_SC_RECV;
  wire [5:0]i_ar_node_3_M_SC_REQ;
  wire [5:0]i_ar_node_3_M_SC_SEND;
  wire [5:0]i_aw_node_3_M_SC_INFO;
  wire [181:0]i_aw_node_3_M_SC_PAYLD;
  wire [5:0]i_aw_node_3_M_SC_RECV;
  wire [5:0]i_aw_node_3_M_SC_REQ;
  wire [5:0]i_aw_node_3_M_SC_SEND;
  wire [0:0]i_b_node_3_M_SC_INFO;
  wire [8:0]i_b_node_3_M_SC_PAYLD;
  wire [0:0]i_b_node_3_M_SC_RECV;
  wire [0:0]i_b_node_3_M_SC_REQ;
  wire [0:0]i_b_node_3_M_SC_SEND;
  wire [0:0]i_r_node_3_M_SC_INFO;
  wire [54:0]i_r_node_3_M_SC_PAYLD;
  wire [0:0]i_r_node_3_M_SC_RECV;
  wire [0:0]i_r_node_3_M_SC_REQ;
  wire [0:0]i_r_node_3_M_SC_SEND;
  wire [5:0]i_w_node_3_M_SC_INFO;
  wire [68:0]i_w_node_3_M_SC_PAYLD;
  wire [5:0]i_w_node_3_M_SC_RECV;
  wire [5:0]i_w_node_3_M_SC_REQ;
  wire [5:0]i_w_node_3_M_SC_SEND;
  wire m_sc_aclk_1;
  wire m_sc_aresetn_1;
  wire s_sc_aclk_1;
  wire s_sc_aresetn_1;

  assign M_SC_AR_info[5:0] = i_ar_node_3_M_SC_INFO;
  assign M_SC_AR_payld[181:0] = i_ar_node_3_M_SC_PAYLD;
  assign M_SC_AR_req[5:0] = i_ar_node_3_M_SC_REQ;
  assign M_SC_AR_send[5:0] = i_ar_node_3_M_SC_SEND;
  assign M_SC_AW_info[5:0] = i_aw_node_3_M_SC_INFO;
  assign M_SC_AW_payld[181:0] = i_aw_node_3_M_SC_PAYLD;
  assign M_SC_AW_req[5:0] = i_aw_node_3_M_SC_REQ;
  assign M_SC_AW_send[5:0] = i_aw_node_3_M_SC_SEND;
  assign M_SC_B_info[0] = i_b_node_3_M_SC_INFO;
  assign M_SC_B_payld[8:0] = i_b_node_3_M_SC_PAYLD;
  assign M_SC_B_req[0] = i_b_node_3_M_SC_REQ;
  assign M_SC_B_send[0] = i_b_node_3_M_SC_SEND;
  assign M_SC_R_info[0] = i_r_node_3_M_SC_INFO;
  assign M_SC_R_payld[54:0] = i_r_node_3_M_SC_PAYLD;
  assign M_SC_R_req[0] = i_r_node_3_M_SC_REQ;
  assign M_SC_R_send[0] = i_r_node_3_M_SC_SEND;
  assign M_SC_W_info[5:0] = i_w_node_3_M_SC_INFO;
  assign M_SC_W_payld[68:0] = i_w_node_3_M_SC_PAYLD;
  assign M_SC_W_req[5:0] = i_w_node_3_M_SC_REQ;
  assign M_SC_W_send[5:0] = i_w_node_3_M_SC_SEND;
  assign S_SC_AR_1_INFO = S_SC_AR_info[0];
  assign S_SC_AR_1_PAYLD = S_SC_AR_payld[181:0];
  assign S_SC_AR_1_REQ = S_SC_AR_req[0];
  assign S_SC_AR_1_SEND = S_SC_AR_send[0];
  assign S_SC_AR_recv[0] = S_SC_AR_1_RECV;
  assign S_SC_AW_1_INFO = S_SC_AW_info[0];
  assign S_SC_AW_1_PAYLD = S_SC_AW_payld[181:0];
  assign S_SC_AW_1_REQ = S_SC_AW_req[0];
  assign S_SC_AW_1_SEND = S_SC_AW_send[0];
  assign S_SC_AW_recv[0] = S_SC_AW_1_RECV;
  assign S_SC_B_1_INFO = S_SC_B_info[5:0];
  assign S_SC_B_1_PAYLD = S_SC_B_payld[8:0];
  assign S_SC_B_1_REQ = S_SC_B_req[5:0];
  assign S_SC_B_1_SEND = S_SC_B_send[5:0];
  assign S_SC_B_recv[5:0] = S_SC_B_1_RECV;
  assign S_SC_R_1_INFO = S_SC_R_info[5:0];
  assign S_SC_R_1_PAYLD = S_SC_R_payld[54:0];
  assign S_SC_R_1_REQ = S_SC_R_req[5:0];
  assign S_SC_R_1_SEND = S_SC_R_send[5:0];
  assign S_SC_R_recv[5:0] = S_SC_R_1_RECV;
  assign S_SC_W_1_INFO = S_SC_W_info[0];
  assign S_SC_W_1_PAYLD = S_SC_W_payld[68:0];
  assign S_SC_W_1_REQ = S_SC_W_req[0];
  assign S_SC_W_1_SEND = S_SC_W_send[0];
  assign S_SC_W_recv[0] = S_SC_W_1_RECV;
  assign i_ar_node_3_M_SC_RECV = M_SC_AR_recv[5:0];
  assign i_aw_node_3_M_SC_RECV = M_SC_AW_recv[5:0];
  assign i_b_node_3_M_SC_RECV = M_SC_B_recv[0];
  assign i_r_node_3_M_SC_RECV = M_SC_R_recv[0];
  assign i_w_node_3_M_SC_RECV = M_SC_W_recv[5:0];
  assign m_sc_aclk_1 = m_sc_aclk;
  assign m_sc_aresetn_1 = m_sc_aresetn;
  assign s_sc_aclk_1 = s_sc_aclk;
  assign s_sc_aresetn_1 = s_sc_aresetn;
  bd_afc3_arni_3 i_ar_node_3
       (.m_sc_aclk(m_sc_aclk_1),
        .m_sc_aresetn(m_sc_aresetn_1),
        .m_sc_info(i_ar_node_3_M_SC_INFO),
        .m_sc_payld(i_ar_node_3_M_SC_PAYLD),
        .m_sc_recv(i_ar_node_3_M_SC_RECV),
        .m_sc_req(i_ar_node_3_M_SC_REQ),
        .m_sc_send(i_ar_node_3_M_SC_SEND),
        .s_sc_aclk(s_sc_aclk_1),
        .s_sc_aresetn(s_sc_aresetn_1),
        .s_sc_info(S_SC_AR_1_INFO),
        .s_sc_payld(S_SC_AR_1_PAYLD),
        .s_sc_recv(S_SC_AR_1_RECV),
        .s_sc_req(S_SC_AR_1_REQ),
        .s_sc_send(S_SC_AR_1_SEND));
  bd_afc3_awni_3 i_aw_node_3
       (.m_sc_aclk(m_sc_aclk_1),
        .m_sc_aresetn(m_sc_aresetn_1),
        .m_sc_info(i_aw_node_3_M_SC_INFO),
        .m_sc_payld(i_aw_node_3_M_SC_PAYLD),
        .m_sc_recv(i_aw_node_3_M_SC_RECV),
        .m_sc_req(i_aw_node_3_M_SC_REQ),
        .m_sc_send(i_aw_node_3_M_SC_SEND),
        .s_sc_aclk(s_sc_aclk_1),
        .s_sc_aresetn(s_sc_aresetn_1),
        .s_sc_info(S_SC_AW_1_INFO),
        .s_sc_payld(S_SC_AW_1_PAYLD),
        .s_sc_recv(S_SC_AW_1_RECV),
        .s_sc_req(S_SC_AW_1_REQ),
        .s_sc_send(S_SC_AW_1_SEND));
  bd_afc3_bni_3 i_b_node_3
       (.m_sc_aclk(s_sc_aclk_1),
        .m_sc_aresetn(s_sc_aresetn_1),
        .m_sc_info(i_b_node_3_M_SC_INFO),
        .m_sc_payld(i_b_node_3_M_SC_PAYLD),
        .m_sc_recv(i_b_node_3_M_SC_RECV),
        .m_sc_req(i_b_node_3_M_SC_REQ),
        .m_sc_send(i_b_node_3_M_SC_SEND),
        .s_sc_aclk(m_sc_aclk_1),
        .s_sc_aresetn(m_sc_aresetn_1),
        .s_sc_info(S_SC_B_1_INFO),
        .s_sc_payld(S_SC_B_1_PAYLD),
        .s_sc_recv(S_SC_B_1_RECV),
        .s_sc_req(S_SC_B_1_REQ),
        .s_sc_send(S_SC_B_1_SEND));
  bd_afc3_rni_3 i_r_node_3
       (.m_sc_aclk(s_sc_aclk_1),
        .m_sc_aresetn(s_sc_aresetn_1),
        .m_sc_info(i_r_node_3_M_SC_INFO),
        .m_sc_payld(i_r_node_3_M_SC_PAYLD),
        .m_sc_recv(i_r_node_3_M_SC_RECV),
        .m_sc_req(i_r_node_3_M_SC_REQ),
        .m_sc_send(i_r_node_3_M_SC_SEND),
        .s_sc_aclk(m_sc_aclk_1),
        .s_sc_aresetn(m_sc_aresetn_1),
        .s_sc_info(S_SC_R_1_INFO),
        .s_sc_payld(S_SC_R_1_PAYLD),
        .s_sc_recv(S_SC_R_1_RECV),
        .s_sc_req(S_SC_R_1_REQ),
        .s_sc_send(S_SC_R_1_SEND));
  bd_afc3_wni_3 i_w_node_3
       (.m_sc_aclk(m_sc_aclk_1),
        .m_sc_aresetn(m_sc_aresetn_1),
        .m_sc_info(i_w_node_3_M_SC_INFO),
        .m_sc_payld(i_w_node_3_M_SC_PAYLD),
        .m_sc_recv(i_w_node_3_M_SC_RECV),
        .m_sc_req(i_w_node_3_M_SC_REQ),
        .m_sc_send(i_w_node_3_M_SC_SEND),
        .s_sc_aclk(s_sc_aclk_1),
        .s_sc_aresetn(s_sc_aresetn_1),
        .s_sc_info(S_SC_W_1_INFO),
        .s_sc_payld(S_SC_W_1_PAYLD),
        .s_sc_recv(S_SC_W_1_RECV),
        .s_sc_req(S_SC_W_1_REQ),
        .s_sc_send(S_SC_W_1_SEND));
endmodule

module i_nodes_4_imp_1HVF3MI
   (M_SC_AR_info,
    M_SC_AR_payld,
    M_SC_AR_recv,
    M_SC_AR_req,
    M_SC_AR_send,
    M_SC_AW_info,
    M_SC_AW_payld,
    M_SC_AW_recv,
    M_SC_AW_req,
    M_SC_AW_send,
    M_SC_B_info,
    M_SC_B_payld,
    M_SC_B_recv,
    M_SC_B_req,
    M_SC_B_send,
    M_SC_R_info,
    M_SC_R_payld,
    M_SC_R_recv,
    M_SC_R_req,
    M_SC_R_send,
    M_SC_W_info,
    M_SC_W_payld,
    M_SC_W_recv,
    M_SC_W_req,
    M_SC_W_send,
    S_SC_AR_info,
    S_SC_AR_payld,
    S_SC_AR_recv,
    S_SC_AR_req,
    S_SC_AR_send,
    S_SC_AW_info,
    S_SC_AW_payld,
    S_SC_AW_recv,
    S_SC_AW_req,
    S_SC_AW_send,
    S_SC_B_info,
    S_SC_B_payld,
    S_SC_B_recv,
    S_SC_B_req,
    S_SC_B_send,
    S_SC_R_info,
    S_SC_R_payld,
    S_SC_R_recv,
    S_SC_R_req,
    S_SC_R_send,
    S_SC_W_info,
    S_SC_W_payld,
    S_SC_W_recv,
    S_SC_W_req,
    S_SC_W_send,
    m_sc_aclk,
    m_sc_aresetn,
    s_sc_aclk,
    s_sc_aresetn);
  output [5:0]M_SC_AR_info;
  output [181:0]M_SC_AR_payld;
  input [5:0]M_SC_AR_recv;
  output [5:0]M_SC_AR_req;
  output [5:0]M_SC_AR_send;
  output [5:0]M_SC_AW_info;
  output [181:0]M_SC_AW_payld;
  input [5:0]M_SC_AW_recv;
  output [5:0]M_SC_AW_req;
  output [5:0]M_SC_AW_send;
  output [0:0]M_SC_B_info;
  output [8:0]M_SC_B_payld;
  input [0:0]M_SC_B_recv;
  output [0:0]M_SC_B_req;
  output [0:0]M_SC_B_send;
  output [0:0]M_SC_R_info;
  output [54:0]M_SC_R_payld;
  input [0:0]M_SC_R_recv;
  output [0:0]M_SC_R_req;
  output [0:0]M_SC_R_send;
  output [5:0]M_SC_W_info;
  output [68:0]M_SC_W_payld;
  input [5:0]M_SC_W_recv;
  output [5:0]M_SC_W_req;
  output [5:0]M_SC_W_send;
  input [0:0]S_SC_AR_info;
  input [181:0]S_SC_AR_payld;
  output [0:0]S_SC_AR_recv;
  input [0:0]S_SC_AR_req;
  input [0:0]S_SC_AR_send;
  input [0:0]S_SC_AW_info;
  input [181:0]S_SC_AW_payld;
  output [0:0]S_SC_AW_recv;
  input [0:0]S_SC_AW_req;
  input [0:0]S_SC_AW_send;
  input [5:0]S_SC_B_info;
  input [8:0]S_SC_B_payld;
  output [5:0]S_SC_B_recv;
  input [5:0]S_SC_B_req;
  input [5:0]S_SC_B_send;
  input [5:0]S_SC_R_info;
  input [54:0]S_SC_R_payld;
  output [5:0]S_SC_R_recv;
  input [5:0]S_SC_R_req;
  input [5:0]S_SC_R_send;
  input [0:0]S_SC_W_info;
  input [68:0]S_SC_W_payld;
  output [0:0]S_SC_W_recv;
  input [0:0]S_SC_W_req;
  input [0:0]S_SC_W_send;
  input m_sc_aclk;
  input m_sc_aresetn;
  input s_sc_aclk;
  input s_sc_aresetn;

  wire [0:0]S_SC_AR_1_INFO;
  wire [181:0]S_SC_AR_1_PAYLD;
  wire [0:0]S_SC_AR_1_RECV;
  wire [0:0]S_SC_AR_1_REQ;
  wire [0:0]S_SC_AR_1_SEND;
  wire [0:0]S_SC_AW_1_INFO;
  wire [181:0]S_SC_AW_1_PAYLD;
  wire [0:0]S_SC_AW_1_RECV;
  wire [0:0]S_SC_AW_1_REQ;
  wire [0:0]S_SC_AW_1_SEND;
  wire [5:0]S_SC_B_1_INFO;
  wire [8:0]S_SC_B_1_PAYLD;
  wire [5:0]S_SC_B_1_RECV;
  wire [5:0]S_SC_B_1_REQ;
  wire [5:0]S_SC_B_1_SEND;
  wire [5:0]S_SC_R_1_INFO;
  wire [54:0]S_SC_R_1_PAYLD;
  wire [5:0]S_SC_R_1_RECV;
  wire [5:0]S_SC_R_1_REQ;
  wire [5:0]S_SC_R_1_SEND;
  wire [0:0]S_SC_W_1_INFO;
  wire [68:0]S_SC_W_1_PAYLD;
  wire [0:0]S_SC_W_1_RECV;
  wire [0:0]S_SC_W_1_REQ;
  wire [0:0]S_SC_W_1_SEND;
  wire [5:0]i_ar_node_4_M_SC_INFO;
  wire [181:0]i_ar_node_4_M_SC_PAYLD;
  wire [5:0]i_ar_node_4_M_SC_RECV;
  wire [5:0]i_ar_node_4_M_SC_REQ;
  wire [5:0]i_ar_node_4_M_SC_SEND;
  wire [5:0]i_aw_node_4_M_SC_INFO;
  wire [181:0]i_aw_node_4_M_SC_PAYLD;
  wire [5:0]i_aw_node_4_M_SC_RECV;
  wire [5:0]i_aw_node_4_M_SC_REQ;
  wire [5:0]i_aw_node_4_M_SC_SEND;
  wire [0:0]i_b_node_4_M_SC_INFO;
  wire [8:0]i_b_node_4_M_SC_PAYLD;
  wire [0:0]i_b_node_4_M_SC_RECV;
  wire [0:0]i_b_node_4_M_SC_REQ;
  wire [0:0]i_b_node_4_M_SC_SEND;
  wire [0:0]i_r_node_4_M_SC_INFO;
  wire [54:0]i_r_node_4_M_SC_PAYLD;
  wire [0:0]i_r_node_4_M_SC_RECV;
  wire [0:0]i_r_node_4_M_SC_REQ;
  wire [0:0]i_r_node_4_M_SC_SEND;
  wire [5:0]i_w_node_4_M_SC_INFO;
  wire [68:0]i_w_node_4_M_SC_PAYLD;
  wire [5:0]i_w_node_4_M_SC_RECV;
  wire [5:0]i_w_node_4_M_SC_REQ;
  wire [5:0]i_w_node_4_M_SC_SEND;
  wire m_sc_aclk_1;
  wire m_sc_aresetn_1;
  wire s_sc_aclk_1;
  wire s_sc_aresetn_1;

  assign M_SC_AR_info[5:0] = i_ar_node_4_M_SC_INFO;
  assign M_SC_AR_payld[181:0] = i_ar_node_4_M_SC_PAYLD;
  assign M_SC_AR_req[5:0] = i_ar_node_4_M_SC_REQ;
  assign M_SC_AR_send[5:0] = i_ar_node_4_M_SC_SEND;
  assign M_SC_AW_info[5:0] = i_aw_node_4_M_SC_INFO;
  assign M_SC_AW_payld[181:0] = i_aw_node_4_M_SC_PAYLD;
  assign M_SC_AW_req[5:0] = i_aw_node_4_M_SC_REQ;
  assign M_SC_AW_send[5:0] = i_aw_node_4_M_SC_SEND;
  assign M_SC_B_info[0] = i_b_node_4_M_SC_INFO;
  assign M_SC_B_payld[8:0] = i_b_node_4_M_SC_PAYLD;
  assign M_SC_B_req[0] = i_b_node_4_M_SC_REQ;
  assign M_SC_B_send[0] = i_b_node_4_M_SC_SEND;
  assign M_SC_R_info[0] = i_r_node_4_M_SC_INFO;
  assign M_SC_R_payld[54:0] = i_r_node_4_M_SC_PAYLD;
  assign M_SC_R_req[0] = i_r_node_4_M_SC_REQ;
  assign M_SC_R_send[0] = i_r_node_4_M_SC_SEND;
  assign M_SC_W_info[5:0] = i_w_node_4_M_SC_INFO;
  assign M_SC_W_payld[68:0] = i_w_node_4_M_SC_PAYLD;
  assign M_SC_W_req[5:0] = i_w_node_4_M_SC_REQ;
  assign M_SC_W_send[5:0] = i_w_node_4_M_SC_SEND;
  assign S_SC_AR_1_INFO = S_SC_AR_info[0];
  assign S_SC_AR_1_PAYLD = S_SC_AR_payld[181:0];
  assign S_SC_AR_1_REQ = S_SC_AR_req[0];
  assign S_SC_AR_1_SEND = S_SC_AR_send[0];
  assign S_SC_AR_recv[0] = S_SC_AR_1_RECV;
  assign S_SC_AW_1_INFO = S_SC_AW_info[0];
  assign S_SC_AW_1_PAYLD = S_SC_AW_payld[181:0];
  assign S_SC_AW_1_REQ = S_SC_AW_req[0];
  assign S_SC_AW_1_SEND = S_SC_AW_send[0];
  assign S_SC_AW_recv[0] = S_SC_AW_1_RECV;
  assign S_SC_B_1_INFO = S_SC_B_info[5:0];
  assign S_SC_B_1_PAYLD = S_SC_B_payld[8:0];
  assign S_SC_B_1_REQ = S_SC_B_req[5:0];
  assign S_SC_B_1_SEND = S_SC_B_send[5:0];
  assign S_SC_B_recv[5:0] = S_SC_B_1_RECV;
  assign S_SC_R_1_INFO = S_SC_R_info[5:0];
  assign S_SC_R_1_PAYLD = S_SC_R_payld[54:0];
  assign S_SC_R_1_REQ = S_SC_R_req[5:0];
  assign S_SC_R_1_SEND = S_SC_R_send[5:0];
  assign S_SC_R_recv[5:0] = S_SC_R_1_RECV;
  assign S_SC_W_1_INFO = S_SC_W_info[0];
  assign S_SC_W_1_PAYLD = S_SC_W_payld[68:0];
  assign S_SC_W_1_REQ = S_SC_W_req[0];
  assign S_SC_W_1_SEND = S_SC_W_send[0];
  assign S_SC_W_recv[0] = S_SC_W_1_RECV;
  assign i_ar_node_4_M_SC_RECV = M_SC_AR_recv[5:0];
  assign i_aw_node_4_M_SC_RECV = M_SC_AW_recv[5:0];
  assign i_b_node_4_M_SC_RECV = M_SC_B_recv[0];
  assign i_r_node_4_M_SC_RECV = M_SC_R_recv[0];
  assign i_w_node_4_M_SC_RECV = M_SC_W_recv[5:0];
  assign m_sc_aclk_1 = m_sc_aclk;
  assign m_sc_aresetn_1 = m_sc_aresetn;
  assign s_sc_aclk_1 = s_sc_aclk;
  assign s_sc_aresetn_1 = s_sc_aresetn;
  bd_afc3_arni_4 i_ar_node_4
       (.m_sc_aclk(m_sc_aclk_1),
        .m_sc_aresetn(m_sc_aresetn_1),
        .m_sc_info(i_ar_node_4_M_SC_INFO),
        .m_sc_payld(i_ar_node_4_M_SC_PAYLD),
        .m_sc_recv(i_ar_node_4_M_SC_RECV),
        .m_sc_req(i_ar_node_4_M_SC_REQ),
        .m_sc_send(i_ar_node_4_M_SC_SEND),
        .s_sc_aclk(s_sc_aclk_1),
        .s_sc_aresetn(s_sc_aresetn_1),
        .s_sc_info(S_SC_AR_1_INFO),
        .s_sc_payld(S_SC_AR_1_PAYLD),
        .s_sc_recv(S_SC_AR_1_RECV),
        .s_sc_req(S_SC_AR_1_REQ),
        .s_sc_send(S_SC_AR_1_SEND));
  bd_afc3_awni_4 i_aw_node_4
       (.m_sc_aclk(m_sc_aclk_1),
        .m_sc_aresetn(m_sc_aresetn_1),
        .m_sc_info(i_aw_node_4_M_SC_INFO),
        .m_sc_payld(i_aw_node_4_M_SC_PAYLD),
        .m_sc_recv(i_aw_node_4_M_SC_RECV),
        .m_sc_req(i_aw_node_4_M_SC_REQ),
        .m_sc_send(i_aw_node_4_M_SC_SEND),
        .s_sc_aclk(s_sc_aclk_1),
        .s_sc_aresetn(s_sc_aresetn_1),
        .s_sc_info(S_SC_AW_1_INFO),
        .s_sc_payld(S_SC_AW_1_PAYLD),
        .s_sc_recv(S_SC_AW_1_RECV),
        .s_sc_req(S_SC_AW_1_REQ),
        .s_sc_send(S_SC_AW_1_SEND));
  bd_afc3_bni_4 i_b_node_4
       (.m_sc_aclk(s_sc_aclk_1),
        .m_sc_aresetn(s_sc_aresetn_1),
        .m_sc_info(i_b_node_4_M_SC_INFO),
        .m_sc_payld(i_b_node_4_M_SC_PAYLD),
        .m_sc_recv(i_b_node_4_M_SC_RECV),
        .m_sc_req(i_b_node_4_M_SC_REQ),
        .m_sc_send(i_b_node_4_M_SC_SEND),
        .s_sc_aclk(m_sc_aclk_1),
        .s_sc_aresetn(m_sc_aresetn_1),
        .s_sc_info(S_SC_B_1_INFO),
        .s_sc_payld(S_SC_B_1_PAYLD),
        .s_sc_recv(S_SC_B_1_RECV),
        .s_sc_req(S_SC_B_1_REQ),
        .s_sc_send(S_SC_B_1_SEND));
  bd_afc3_rni_4 i_r_node_4
       (.m_sc_aclk(s_sc_aclk_1),
        .m_sc_aresetn(s_sc_aresetn_1),
        .m_sc_info(i_r_node_4_M_SC_INFO),
        .m_sc_payld(i_r_node_4_M_SC_PAYLD),
        .m_sc_recv(i_r_node_4_M_SC_RECV),
        .m_sc_req(i_r_node_4_M_SC_REQ),
        .m_sc_send(i_r_node_4_M_SC_SEND),
        .s_sc_aclk(m_sc_aclk_1),
        .s_sc_aresetn(m_sc_aresetn_1),
        .s_sc_info(S_SC_R_1_INFO),
        .s_sc_payld(S_SC_R_1_PAYLD),
        .s_sc_recv(S_SC_R_1_RECV),
        .s_sc_req(S_SC_R_1_REQ),
        .s_sc_send(S_SC_R_1_SEND));
  bd_afc3_wni_4 i_w_node_4
       (.m_sc_aclk(m_sc_aclk_1),
        .m_sc_aresetn(m_sc_aresetn_1),
        .m_sc_info(i_w_node_4_M_SC_INFO),
        .m_sc_payld(i_w_node_4_M_SC_PAYLD),
        .m_sc_recv(i_w_node_4_M_SC_RECV),
        .m_sc_req(i_w_node_4_M_SC_REQ),
        .m_sc_send(i_w_node_4_M_SC_SEND),
        .s_sc_aclk(s_sc_aclk_1),
        .s_sc_aresetn(s_sc_aresetn_1),
        .s_sc_info(S_SC_W_1_INFO),
        .s_sc_payld(S_SC_W_1_PAYLD),
        .s_sc_recv(S_SC_W_1_RECV),
        .s_sc_req(S_SC_W_1_REQ),
        .s_sc_send(S_SC_W_1_SEND));
endmodule

module i_nodes_5_imp_40YLXG
   (M_SC_AR_info,
    M_SC_AR_payld,
    M_SC_AR_recv,
    M_SC_AR_req,
    M_SC_AR_send,
    M_SC_AW_info,
    M_SC_AW_payld,
    M_SC_AW_recv,
    M_SC_AW_req,
    M_SC_AW_send,
    M_SC_B_info,
    M_SC_B_payld,
    M_SC_B_recv,
    M_SC_B_req,
    M_SC_B_send,
    M_SC_R_info,
    M_SC_R_payld,
    M_SC_R_recv,
    M_SC_R_req,
    M_SC_R_send,
    M_SC_W_info,
    M_SC_W_payld,
    M_SC_W_recv,
    M_SC_W_req,
    M_SC_W_send,
    S_SC_AR_info,
    S_SC_AR_payld,
    S_SC_AR_recv,
    S_SC_AR_req,
    S_SC_AR_send,
    S_SC_AW_info,
    S_SC_AW_payld,
    S_SC_AW_recv,
    S_SC_AW_req,
    S_SC_AW_send,
    S_SC_B_info,
    S_SC_B_payld,
    S_SC_B_recv,
    S_SC_B_req,
    S_SC_B_send,
    S_SC_R_info,
    S_SC_R_payld,
    S_SC_R_recv,
    S_SC_R_req,
    S_SC_R_send,
    S_SC_W_info,
    S_SC_W_payld,
    S_SC_W_recv,
    S_SC_W_req,
    S_SC_W_send,
    m_sc_aclk,
    m_sc_aresetn,
    s_sc_aclk,
    s_sc_aresetn);
  output [5:0]M_SC_AR_info;
  output [181:0]M_SC_AR_payld;
  input [5:0]M_SC_AR_recv;
  output [5:0]M_SC_AR_req;
  output [5:0]M_SC_AR_send;
  output [5:0]M_SC_AW_info;
  output [181:0]M_SC_AW_payld;
  input [5:0]M_SC_AW_recv;
  output [5:0]M_SC_AW_req;
  output [5:0]M_SC_AW_send;
  output [0:0]M_SC_B_info;
  output [8:0]M_SC_B_payld;
  input [0:0]M_SC_B_recv;
  output [0:0]M_SC_B_req;
  output [0:0]M_SC_B_send;
  output [0:0]M_SC_R_info;
  output [54:0]M_SC_R_payld;
  input [0:0]M_SC_R_recv;
  output [0:0]M_SC_R_req;
  output [0:0]M_SC_R_send;
  output [5:0]M_SC_W_info;
  output [68:0]M_SC_W_payld;
  input [5:0]M_SC_W_recv;
  output [5:0]M_SC_W_req;
  output [5:0]M_SC_W_send;
  input [0:0]S_SC_AR_info;
  input [181:0]S_SC_AR_payld;
  output [0:0]S_SC_AR_recv;
  input [0:0]S_SC_AR_req;
  input [0:0]S_SC_AR_send;
  input [0:0]S_SC_AW_info;
  input [181:0]S_SC_AW_payld;
  output [0:0]S_SC_AW_recv;
  input [0:0]S_SC_AW_req;
  input [0:0]S_SC_AW_send;
  input [5:0]S_SC_B_info;
  input [8:0]S_SC_B_payld;
  output [5:0]S_SC_B_recv;
  input [5:0]S_SC_B_req;
  input [5:0]S_SC_B_send;
  input [5:0]S_SC_R_info;
  input [54:0]S_SC_R_payld;
  output [5:0]S_SC_R_recv;
  input [5:0]S_SC_R_req;
  input [5:0]S_SC_R_send;
  input [0:0]S_SC_W_info;
  input [68:0]S_SC_W_payld;
  output [0:0]S_SC_W_recv;
  input [0:0]S_SC_W_req;
  input [0:0]S_SC_W_send;
  input m_sc_aclk;
  input m_sc_aresetn;
  input s_sc_aclk;
  input s_sc_aresetn;

  wire [0:0]S_SC_AR_1_INFO;
  wire [181:0]S_SC_AR_1_PAYLD;
  wire [0:0]S_SC_AR_1_RECV;
  wire [0:0]S_SC_AR_1_REQ;
  wire [0:0]S_SC_AR_1_SEND;
  wire [0:0]S_SC_AW_1_INFO;
  wire [181:0]S_SC_AW_1_PAYLD;
  wire [0:0]S_SC_AW_1_RECV;
  wire [0:0]S_SC_AW_1_REQ;
  wire [0:0]S_SC_AW_1_SEND;
  wire [5:0]S_SC_B_1_INFO;
  wire [8:0]S_SC_B_1_PAYLD;
  wire [5:0]S_SC_B_1_RECV;
  wire [5:0]S_SC_B_1_REQ;
  wire [5:0]S_SC_B_1_SEND;
  wire [5:0]S_SC_R_1_INFO;
  wire [54:0]S_SC_R_1_PAYLD;
  wire [5:0]S_SC_R_1_RECV;
  wire [5:0]S_SC_R_1_REQ;
  wire [5:0]S_SC_R_1_SEND;
  wire [0:0]S_SC_W_1_INFO;
  wire [68:0]S_SC_W_1_PAYLD;
  wire [0:0]S_SC_W_1_RECV;
  wire [0:0]S_SC_W_1_REQ;
  wire [0:0]S_SC_W_1_SEND;
  wire [5:0]i_ar_node_5_M_SC_INFO;
  wire [181:0]i_ar_node_5_M_SC_PAYLD;
  wire [5:0]i_ar_node_5_M_SC_RECV;
  wire [5:0]i_ar_node_5_M_SC_REQ;
  wire [5:0]i_ar_node_5_M_SC_SEND;
  wire [5:0]i_aw_node_5_M_SC_INFO;
  wire [181:0]i_aw_node_5_M_SC_PAYLD;
  wire [5:0]i_aw_node_5_M_SC_RECV;
  wire [5:0]i_aw_node_5_M_SC_REQ;
  wire [5:0]i_aw_node_5_M_SC_SEND;
  wire [0:0]i_b_node_5_M_SC_INFO;
  wire [8:0]i_b_node_5_M_SC_PAYLD;
  wire [0:0]i_b_node_5_M_SC_RECV;
  wire [0:0]i_b_node_5_M_SC_REQ;
  wire [0:0]i_b_node_5_M_SC_SEND;
  wire [0:0]i_r_node_5_M_SC_INFO;
  wire [54:0]i_r_node_5_M_SC_PAYLD;
  wire [0:0]i_r_node_5_M_SC_RECV;
  wire [0:0]i_r_node_5_M_SC_REQ;
  wire [0:0]i_r_node_5_M_SC_SEND;
  wire [5:0]i_w_node_5_M_SC_INFO;
  wire [68:0]i_w_node_5_M_SC_PAYLD;
  wire [5:0]i_w_node_5_M_SC_RECV;
  wire [5:0]i_w_node_5_M_SC_REQ;
  wire [5:0]i_w_node_5_M_SC_SEND;
  wire m_sc_aclk_1;
  wire m_sc_aresetn_1;
  wire s_sc_aclk_1;
  wire s_sc_aresetn_1;

  assign M_SC_AR_info[5:0] = i_ar_node_5_M_SC_INFO;
  assign M_SC_AR_payld[181:0] = i_ar_node_5_M_SC_PAYLD;
  assign M_SC_AR_req[5:0] = i_ar_node_5_M_SC_REQ;
  assign M_SC_AR_send[5:0] = i_ar_node_5_M_SC_SEND;
  assign M_SC_AW_info[5:0] = i_aw_node_5_M_SC_INFO;
  assign M_SC_AW_payld[181:0] = i_aw_node_5_M_SC_PAYLD;
  assign M_SC_AW_req[5:0] = i_aw_node_5_M_SC_REQ;
  assign M_SC_AW_send[5:0] = i_aw_node_5_M_SC_SEND;
  assign M_SC_B_info[0] = i_b_node_5_M_SC_INFO;
  assign M_SC_B_payld[8:0] = i_b_node_5_M_SC_PAYLD;
  assign M_SC_B_req[0] = i_b_node_5_M_SC_REQ;
  assign M_SC_B_send[0] = i_b_node_5_M_SC_SEND;
  assign M_SC_R_info[0] = i_r_node_5_M_SC_INFO;
  assign M_SC_R_payld[54:0] = i_r_node_5_M_SC_PAYLD;
  assign M_SC_R_req[0] = i_r_node_5_M_SC_REQ;
  assign M_SC_R_send[0] = i_r_node_5_M_SC_SEND;
  assign M_SC_W_info[5:0] = i_w_node_5_M_SC_INFO;
  assign M_SC_W_payld[68:0] = i_w_node_5_M_SC_PAYLD;
  assign M_SC_W_req[5:0] = i_w_node_5_M_SC_REQ;
  assign M_SC_W_send[5:0] = i_w_node_5_M_SC_SEND;
  assign S_SC_AR_1_INFO = S_SC_AR_info[0];
  assign S_SC_AR_1_PAYLD = S_SC_AR_payld[181:0];
  assign S_SC_AR_1_REQ = S_SC_AR_req[0];
  assign S_SC_AR_1_SEND = S_SC_AR_send[0];
  assign S_SC_AR_recv[0] = S_SC_AR_1_RECV;
  assign S_SC_AW_1_INFO = S_SC_AW_info[0];
  assign S_SC_AW_1_PAYLD = S_SC_AW_payld[181:0];
  assign S_SC_AW_1_REQ = S_SC_AW_req[0];
  assign S_SC_AW_1_SEND = S_SC_AW_send[0];
  assign S_SC_AW_recv[0] = S_SC_AW_1_RECV;
  assign S_SC_B_1_INFO = S_SC_B_info[5:0];
  assign S_SC_B_1_PAYLD = S_SC_B_payld[8:0];
  assign S_SC_B_1_REQ = S_SC_B_req[5:0];
  assign S_SC_B_1_SEND = S_SC_B_send[5:0];
  assign S_SC_B_recv[5:0] = S_SC_B_1_RECV;
  assign S_SC_R_1_INFO = S_SC_R_info[5:0];
  assign S_SC_R_1_PAYLD = S_SC_R_payld[54:0];
  assign S_SC_R_1_REQ = S_SC_R_req[5:0];
  assign S_SC_R_1_SEND = S_SC_R_send[5:0];
  assign S_SC_R_recv[5:0] = S_SC_R_1_RECV;
  assign S_SC_W_1_INFO = S_SC_W_info[0];
  assign S_SC_W_1_PAYLD = S_SC_W_payld[68:0];
  assign S_SC_W_1_REQ = S_SC_W_req[0];
  assign S_SC_W_1_SEND = S_SC_W_send[0];
  assign S_SC_W_recv[0] = S_SC_W_1_RECV;
  assign i_ar_node_5_M_SC_RECV = M_SC_AR_recv[5:0];
  assign i_aw_node_5_M_SC_RECV = M_SC_AW_recv[5:0];
  assign i_b_node_5_M_SC_RECV = M_SC_B_recv[0];
  assign i_r_node_5_M_SC_RECV = M_SC_R_recv[0];
  assign i_w_node_5_M_SC_RECV = M_SC_W_recv[5:0];
  assign m_sc_aclk_1 = m_sc_aclk;
  assign m_sc_aresetn_1 = m_sc_aresetn;
  assign s_sc_aclk_1 = s_sc_aclk;
  assign s_sc_aresetn_1 = s_sc_aresetn;
  bd_afc3_arni_5 i_ar_node_5
       (.m_sc_aclk(m_sc_aclk_1),
        .m_sc_aresetn(m_sc_aresetn_1),
        .m_sc_info(i_ar_node_5_M_SC_INFO),
        .m_sc_payld(i_ar_node_5_M_SC_PAYLD),
        .m_sc_recv(i_ar_node_5_M_SC_RECV),
        .m_sc_req(i_ar_node_5_M_SC_REQ),
        .m_sc_send(i_ar_node_5_M_SC_SEND),
        .s_sc_aclk(s_sc_aclk_1),
        .s_sc_aresetn(s_sc_aresetn_1),
        .s_sc_info(S_SC_AR_1_INFO),
        .s_sc_payld(S_SC_AR_1_PAYLD),
        .s_sc_recv(S_SC_AR_1_RECV),
        .s_sc_req(S_SC_AR_1_REQ),
        .s_sc_send(S_SC_AR_1_SEND));
  bd_afc3_awni_5 i_aw_node_5
       (.m_sc_aclk(m_sc_aclk_1),
        .m_sc_aresetn(m_sc_aresetn_1),
        .m_sc_info(i_aw_node_5_M_SC_INFO),
        .m_sc_payld(i_aw_node_5_M_SC_PAYLD),
        .m_sc_recv(i_aw_node_5_M_SC_RECV),
        .m_sc_req(i_aw_node_5_M_SC_REQ),
        .m_sc_send(i_aw_node_5_M_SC_SEND),
        .s_sc_aclk(s_sc_aclk_1),
        .s_sc_aresetn(s_sc_aresetn_1),
        .s_sc_info(S_SC_AW_1_INFO),
        .s_sc_payld(S_SC_AW_1_PAYLD),
        .s_sc_recv(S_SC_AW_1_RECV),
        .s_sc_req(S_SC_AW_1_REQ),
        .s_sc_send(S_SC_AW_1_SEND));
  bd_afc3_bni_5 i_b_node_5
       (.m_sc_aclk(s_sc_aclk_1),
        .m_sc_aresetn(s_sc_aresetn_1),
        .m_sc_info(i_b_node_5_M_SC_INFO),
        .m_sc_payld(i_b_node_5_M_SC_PAYLD),
        .m_sc_recv(i_b_node_5_M_SC_RECV),
        .m_sc_req(i_b_node_5_M_SC_REQ),
        .m_sc_send(i_b_node_5_M_SC_SEND),
        .s_sc_aclk(m_sc_aclk_1),
        .s_sc_aresetn(m_sc_aresetn_1),
        .s_sc_info(S_SC_B_1_INFO),
        .s_sc_payld(S_SC_B_1_PAYLD),
        .s_sc_recv(S_SC_B_1_RECV),
        .s_sc_req(S_SC_B_1_REQ),
        .s_sc_send(S_SC_B_1_SEND));
  bd_afc3_rni_5 i_r_node_5
       (.m_sc_aclk(s_sc_aclk_1),
        .m_sc_aresetn(s_sc_aresetn_1),
        .m_sc_info(i_r_node_5_M_SC_INFO),
        .m_sc_payld(i_r_node_5_M_SC_PAYLD),
        .m_sc_recv(i_r_node_5_M_SC_RECV),
        .m_sc_req(i_r_node_5_M_SC_REQ),
        .m_sc_send(i_r_node_5_M_SC_SEND),
        .s_sc_aclk(m_sc_aclk_1),
        .s_sc_aresetn(m_sc_aresetn_1),
        .s_sc_info(S_SC_R_1_INFO),
        .s_sc_payld(S_SC_R_1_PAYLD),
        .s_sc_recv(S_SC_R_1_RECV),
        .s_sc_req(S_SC_R_1_REQ),
        .s_sc_send(S_SC_R_1_SEND));
  bd_afc3_wni_5 i_w_node_5
       (.m_sc_aclk(m_sc_aclk_1),
        .m_sc_aresetn(m_sc_aresetn_1),
        .m_sc_info(i_w_node_5_M_SC_INFO),
        .m_sc_payld(i_w_node_5_M_SC_PAYLD),
        .m_sc_recv(i_w_node_5_M_SC_RECV),
        .m_sc_req(i_w_node_5_M_SC_REQ),
        .m_sc_send(i_w_node_5_M_SC_SEND),
        .s_sc_aclk(s_sc_aclk_1),
        .s_sc_aresetn(s_sc_aresetn_1),
        .s_sc_info(S_SC_W_1_INFO),
        .s_sc_payld(S_SC_W_1_PAYLD),
        .s_sc_recv(S_SC_W_1_RECV),
        .s_sc_req(S_SC_W_1_REQ),
        .s_sc_send(S_SC_W_1_SEND));
endmodule

module i_nodes_6_imp_ZJ165J
   (M_SC_AR_info,
    M_SC_AR_payld,
    M_SC_AR_recv,
    M_SC_AR_req,
    M_SC_AR_send,
    M_SC_AW_info,
    M_SC_AW_payld,
    M_SC_AW_recv,
    M_SC_AW_req,
    M_SC_AW_send,
    M_SC_B_info,
    M_SC_B_payld,
    M_SC_B_recv,
    M_SC_B_req,
    M_SC_B_send,
    M_SC_R_info,
    M_SC_R_payld,
    M_SC_R_recv,
    M_SC_R_req,
    M_SC_R_send,
    M_SC_W_info,
    M_SC_W_payld,
    M_SC_W_recv,
    M_SC_W_req,
    M_SC_W_send,
    S_SC_AR_info,
    S_SC_AR_payld,
    S_SC_AR_recv,
    S_SC_AR_req,
    S_SC_AR_send,
    S_SC_AW_info,
    S_SC_AW_payld,
    S_SC_AW_recv,
    S_SC_AW_req,
    S_SC_AW_send,
    S_SC_B_info,
    S_SC_B_payld,
    S_SC_B_recv,
    S_SC_B_req,
    S_SC_B_send,
    S_SC_R_info,
    S_SC_R_payld,
    S_SC_R_recv,
    S_SC_R_req,
    S_SC_R_send,
    S_SC_W_info,
    S_SC_W_payld,
    S_SC_W_recv,
    S_SC_W_req,
    S_SC_W_send,
    m_sc_aclk,
    m_sc_aresetn,
    s_sc_aclk,
    s_sc_aresetn);
  output [5:0]M_SC_AR_info;
  output [181:0]M_SC_AR_payld;
  input [5:0]M_SC_AR_recv;
  output [5:0]M_SC_AR_req;
  output [5:0]M_SC_AR_send;
  output [5:0]M_SC_AW_info;
  output [181:0]M_SC_AW_payld;
  input [5:0]M_SC_AW_recv;
  output [5:0]M_SC_AW_req;
  output [5:0]M_SC_AW_send;
  output [0:0]M_SC_B_info;
  output [8:0]M_SC_B_payld;
  input [0:0]M_SC_B_recv;
  output [0:0]M_SC_B_req;
  output [0:0]M_SC_B_send;
  output [0:0]M_SC_R_info;
  output [54:0]M_SC_R_payld;
  input [0:0]M_SC_R_recv;
  output [0:0]M_SC_R_req;
  output [0:0]M_SC_R_send;
  output [5:0]M_SC_W_info;
  output [68:0]M_SC_W_payld;
  input [5:0]M_SC_W_recv;
  output [5:0]M_SC_W_req;
  output [5:0]M_SC_W_send;
  input [0:0]S_SC_AR_info;
  input [181:0]S_SC_AR_payld;
  output [0:0]S_SC_AR_recv;
  input [0:0]S_SC_AR_req;
  input [0:0]S_SC_AR_send;
  input [0:0]S_SC_AW_info;
  input [181:0]S_SC_AW_payld;
  output [0:0]S_SC_AW_recv;
  input [0:0]S_SC_AW_req;
  input [0:0]S_SC_AW_send;
  input [5:0]S_SC_B_info;
  input [8:0]S_SC_B_payld;
  output [5:0]S_SC_B_recv;
  input [5:0]S_SC_B_req;
  input [5:0]S_SC_B_send;
  input [5:0]S_SC_R_info;
  input [54:0]S_SC_R_payld;
  output [5:0]S_SC_R_recv;
  input [5:0]S_SC_R_req;
  input [5:0]S_SC_R_send;
  input [0:0]S_SC_W_info;
  input [68:0]S_SC_W_payld;
  output [0:0]S_SC_W_recv;
  input [0:0]S_SC_W_req;
  input [0:0]S_SC_W_send;
  input m_sc_aclk;
  input m_sc_aresetn;
  input s_sc_aclk;
  input s_sc_aresetn;

  wire [0:0]S_SC_AR_1_INFO;
  wire [181:0]S_SC_AR_1_PAYLD;
  wire [0:0]S_SC_AR_1_RECV;
  wire [0:0]S_SC_AR_1_REQ;
  wire [0:0]S_SC_AR_1_SEND;
  wire [0:0]S_SC_AW_1_INFO;
  wire [181:0]S_SC_AW_1_PAYLD;
  wire [0:0]S_SC_AW_1_RECV;
  wire [0:0]S_SC_AW_1_REQ;
  wire [0:0]S_SC_AW_1_SEND;
  wire [5:0]S_SC_B_1_INFO;
  wire [8:0]S_SC_B_1_PAYLD;
  wire [5:0]S_SC_B_1_RECV;
  wire [5:0]S_SC_B_1_REQ;
  wire [5:0]S_SC_B_1_SEND;
  wire [5:0]S_SC_R_1_INFO;
  wire [54:0]S_SC_R_1_PAYLD;
  wire [5:0]S_SC_R_1_RECV;
  wire [5:0]S_SC_R_1_REQ;
  wire [5:0]S_SC_R_1_SEND;
  wire [0:0]S_SC_W_1_INFO;
  wire [68:0]S_SC_W_1_PAYLD;
  wire [0:0]S_SC_W_1_RECV;
  wire [0:0]S_SC_W_1_REQ;
  wire [0:0]S_SC_W_1_SEND;
  wire [5:0]i_ar_node_6_M_SC_INFO;
  wire [181:0]i_ar_node_6_M_SC_PAYLD;
  wire [5:0]i_ar_node_6_M_SC_RECV;
  wire [5:0]i_ar_node_6_M_SC_REQ;
  wire [5:0]i_ar_node_6_M_SC_SEND;
  wire [5:0]i_aw_node_6_M_SC_INFO;
  wire [181:0]i_aw_node_6_M_SC_PAYLD;
  wire [5:0]i_aw_node_6_M_SC_RECV;
  wire [5:0]i_aw_node_6_M_SC_REQ;
  wire [5:0]i_aw_node_6_M_SC_SEND;
  wire [0:0]i_b_node_6_M_SC_INFO;
  wire [8:0]i_b_node_6_M_SC_PAYLD;
  wire [0:0]i_b_node_6_M_SC_RECV;
  wire [0:0]i_b_node_6_M_SC_REQ;
  wire [0:0]i_b_node_6_M_SC_SEND;
  wire [0:0]i_r_node_6_M_SC_INFO;
  wire [54:0]i_r_node_6_M_SC_PAYLD;
  wire [0:0]i_r_node_6_M_SC_RECV;
  wire [0:0]i_r_node_6_M_SC_REQ;
  wire [0:0]i_r_node_6_M_SC_SEND;
  wire [5:0]i_w_node_6_M_SC_INFO;
  wire [68:0]i_w_node_6_M_SC_PAYLD;
  wire [5:0]i_w_node_6_M_SC_RECV;
  wire [5:0]i_w_node_6_M_SC_REQ;
  wire [5:0]i_w_node_6_M_SC_SEND;
  wire m_sc_aclk_1;
  wire m_sc_aresetn_1;
  wire s_sc_aclk_1;
  wire s_sc_aresetn_1;

  assign M_SC_AR_info[5:0] = i_ar_node_6_M_SC_INFO;
  assign M_SC_AR_payld[181:0] = i_ar_node_6_M_SC_PAYLD;
  assign M_SC_AR_req[5:0] = i_ar_node_6_M_SC_REQ;
  assign M_SC_AR_send[5:0] = i_ar_node_6_M_SC_SEND;
  assign M_SC_AW_info[5:0] = i_aw_node_6_M_SC_INFO;
  assign M_SC_AW_payld[181:0] = i_aw_node_6_M_SC_PAYLD;
  assign M_SC_AW_req[5:0] = i_aw_node_6_M_SC_REQ;
  assign M_SC_AW_send[5:0] = i_aw_node_6_M_SC_SEND;
  assign M_SC_B_info[0] = i_b_node_6_M_SC_INFO;
  assign M_SC_B_payld[8:0] = i_b_node_6_M_SC_PAYLD;
  assign M_SC_B_req[0] = i_b_node_6_M_SC_REQ;
  assign M_SC_B_send[0] = i_b_node_6_M_SC_SEND;
  assign M_SC_R_info[0] = i_r_node_6_M_SC_INFO;
  assign M_SC_R_payld[54:0] = i_r_node_6_M_SC_PAYLD;
  assign M_SC_R_req[0] = i_r_node_6_M_SC_REQ;
  assign M_SC_R_send[0] = i_r_node_6_M_SC_SEND;
  assign M_SC_W_info[5:0] = i_w_node_6_M_SC_INFO;
  assign M_SC_W_payld[68:0] = i_w_node_6_M_SC_PAYLD;
  assign M_SC_W_req[5:0] = i_w_node_6_M_SC_REQ;
  assign M_SC_W_send[5:0] = i_w_node_6_M_SC_SEND;
  assign S_SC_AR_1_INFO = S_SC_AR_info[0];
  assign S_SC_AR_1_PAYLD = S_SC_AR_payld[181:0];
  assign S_SC_AR_1_REQ = S_SC_AR_req[0];
  assign S_SC_AR_1_SEND = S_SC_AR_send[0];
  assign S_SC_AR_recv[0] = S_SC_AR_1_RECV;
  assign S_SC_AW_1_INFO = S_SC_AW_info[0];
  assign S_SC_AW_1_PAYLD = S_SC_AW_payld[181:0];
  assign S_SC_AW_1_REQ = S_SC_AW_req[0];
  assign S_SC_AW_1_SEND = S_SC_AW_send[0];
  assign S_SC_AW_recv[0] = S_SC_AW_1_RECV;
  assign S_SC_B_1_INFO = S_SC_B_info[5:0];
  assign S_SC_B_1_PAYLD = S_SC_B_payld[8:0];
  assign S_SC_B_1_REQ = S_SC_B_req[5:0];
  assign S_SC_B_1_SEND = S_SC_B_send[5:0];
  assign S_SC_B_recv[5:0] = S_SC_B_1_RECV;
  assign S_SC_R_1_INFO = S_SC_R_info[5:0];
  assign S_SC_R_1_PAYLD = S_SC_R_payld[54:0];
  assign S_SC_R_1_REQ = S_SC_R_req[5:0];
  assign S_SC_R_1_SEND = S_SC_R_send[5:0];
  assign S_SC_R_recv[5:0] = S_SC_R_1_RECV;
  assign S_SC_W_1_INFO = S_SC_W_info[0];
  assign S_SC_W_1_PAYLD = S_SC_W_payld[68:0];
  assign S_SC_W_1_REQ = S_SC_W_req[0];
  assign S_SC_W_1_SEND = S_SC_W_send[0];
  assign S_SC_W_recv[0] = S_SC_W_1_RECV;
  assign i_ar_node_6_M_SC_RECV = M_SC_AR_recv[5:0];
  assign i_aw_node_6_M_SC_RECV = M_SC_AW_recv[5:0];
  assign i_b_node_6_M_SC_RECV = M_SC_B_recv[0];
  assign i_r_node_6_M_SC_RECV = M_SC_R_recv[0];
  assign i_w_node_6_M_SC_RECV = M_SC_W_recv[5:0];
  assign m_sc_aclk_1 = m_sc_aclk;
  assign m_sc_aresetn_1 = m_sc_aresetn;
  assign s_sc_aclk_1 = s_sc_aclk;
  assign s_sc_aresetn_1 = s_sc_aresetn;
  bd_afc3_arni_6 i_ar_node_6
       (.m_sc_aclk(m_sc_aclk_1),
        .m_sc_aresetn(m_sc_aresetn_1),
        .m_sc_info(i_ar_node_6_M_SC_INFO),
        .m_sc_payld(i_ar_node_6_M_SC_PAYLD),
        .m_sc_recv(i_ar_node_6_M_SC_RECV),
        .m_sc_req(i_ar_node_6_M_SC_REQ),
        .m_sc_send(i_ar_node_6_M_SC_SEND),
        .s_sc_aclk(s_sc_aclk_1),
        .s_sc_aresetn(s_sc_aresetn_1),
        .s_sc_info(S_SC_AR_1_INFO),
        .s_sc_payld(S_SC_AR_1_PAYLD),
        .s_sc_recv(S_SC_AR_1_RECV),
        .s_sc_req(S_SC_AR_1_REQ),
        .s_sc_send(S_SC_AR_1_SEND));
  bd_afc3_awni_6 i_aw_node_6
       (.m_sc_aclk(m_sc_aclk_1),
        .m_sc_aresetn(m_sc_aresetn_1),
        .m_sc_info(i_aw_node_6_M_SC_INFO),
        .m_sc_payld(i_aw_node_6_M_SC_PAYLD),
        .m_sc_recv(i_aw_node_6_M_SC_RECV),
        .m_sc_req(i_aw_node_6_M_SC_REQ),
        .m_sc_send(i_aw_node_6_M_SC_SEND),
        .s_sc_aclk(s_sc_aclk_1),
        .s_sc_aresetn(s_sc_aresetn_1),
        .s_sc_info(S_SC_AW_1_INFO),
        .s_sc_payld(S_SC_AW_1_PAYLD),
        .s_sc_recv(S_SC_AW_1_RECV),
        .s_sc_req(S_SC_AW_1_REQ),
        .s_sc_send(S_SC_AW_1_SEND));
  bd_afc3_bni_6 i_b_node_6
       (.m_sc_aclk(s_sc_aclk_1),
        .m_sc_aresetn(s_sc_aresetn_1),
        .m_sc_info(i_b_node_6_M_SC_INFO),
        .m_sc_payld(i_b_node_6_M_SC_PAYLD),
        .m_sc_recv(i_b_node_6_M_SC_RECV),
        .m_sc_req(i_b_node_6_M_SC_REQ),
        .m_sc_send(i_b_node_6_M_SC_SEND),
        .s_sc_aclk(m_sc_aclk_1),
        .s_sc_aresetn(m_sc_aresetn_1),
        .s_sc_info(S_SC_B_1_INFO),
        .s_sc_payld(S_SC_B_1_PAYLD),
        .s_sc_recv(S_SC_B_1_RECV),
        .s_sc_req(S_SC_B_1_REQ),
        .s_sc_send(S_SC_B_1_SEND));
  bd_afc3_rni_6 i_r_node_6
       (.m_sc_aclk(s_sc_aclk_1),
        .m_sc_aresetn(s_sc_aresetn_1),
        .m_sc_info(i_r_node_6_M_SC_INFO),
        .m_sc_payld(i_r_node_6_M_SC_PAYLD),
        .m_sc_recv(i_r_node_6_M_SC_RECV),
        .m_sc_req(i_r_node_6_M_SC_REQ),
        .m_sc_send(i_r_node_6_M_SC_SEND),
        .s_sc_aclk(m_sc_aclk_1),
        .s_sc_aresetn(m_sc_aresetn_1),
        .s_sc_info(S_SC_R_1_INFO),
        .s_sc_payld(S_SC_R_1_PAYLD),
        .s_sc_recv(S_SC_R_1_RECV),
        .s_sc_req(S_SC_R_1_REQ),
        .s_sc_send(S_SC_R_1_SEND));
  bd_afc3_wni_6 i_w_node_6
       (.m_sc_aclk(m_sc_aclk_1),
        .m_sc_aresetn(m_sc_aresetn_1),
        .m_sc_info(i_w_node_6_M_SC_INFO),
        .m_sc_payld(i_w_node_6_M_SC_PAYLD),
        .m_sc_recv(i_w_node_6_M_SC_RECV),
        .m_sc_req(i_w_node_6_M_SC_REQ),
        .m_sc_send(i_w_node_6_M_SC_SEND),
        .s_sc_aclk(s_sc_aclk_1),
        .s_sc_aresetn(s_sc_aresetn_1),
        .s_sc_info(S_SC_W_1_INFO),
        .s_sc_payld(S_SC_W_1_PAYLD),
        .s_sc_recv(S_SC_W_1_RECV),
        .s_sc_req(S_SC_W_1_REQ),
        .s_sc_send(S_SC_W_1_SEND));
endmodule

module i_nodes_7_imp_L9MLTL
   (M_SC_AR_info,
    M_SC_AR_payld,
    M_SC_AR_recv,
    M_SC_AR_req,
    M_SC_AR_send,
    M_SC_AW_info,
    M_SC_AW_payld,
    M_SC_AW_recv,
    M_SC_AW_req,
    M_SC_AW_send,
    M_SC_B_info,
    M_SC_B_payld,
    M_SC_B_recv,
    M_SC_B_req,
    M_SC_B_send,
    M_SC_R_info,
    M_SC_R_payld,
    M_SC_R_recv,
    M_SC_R_req,
    M_SC_R_send,
    M_SC_W_info,
    M_SC_W_payld,
    M_SC_W_recv,
    M_SC_W_req,
    M_SC_W_send,
    S_SC_AR_info,
    S_SC_AR_payld,
    S_SC_AR_recv,
    S_SC_AR_req,
    S_SC_AR_send,
    S_SC_AW_info,
    S_SC_AW_payld,
    S_SC_AW_recv,
    S_SC_AW_req,
    S_SC_AW_send,
    S_SC_B_info,
    S_SC_B_payld,
    S_SC_B_recv,
    S_SC_B_req,
    S_SC_B_send,
    S_SC_R_info,
    S_SC_R_payld,
    S_SC_R_recv,
    S_SC_R_req,
    S_SC_R_send,
    S_SC_W_info,
    S_SC_W_payld,
    S_SC_W_recv,
    S_SC_W_req,
    S_SC_W_send,
    m_sc_aclk,
    m_sc_aresetn,
    s_sc_aclk,
    s_sc_aresetn);
  output [5:0]M_SC_AR_info;
  output [181:0]M_SC_AR_payld;
  input [5:0]M_SC_AR_recv;
  output [5:0]M_SC_AR_req;
  output [5:0]M_SC_AR_send;
  output [5:0]M_SC_AW_info;
  output [181:0]M_SC_AW_payld;
  input [5:0]M_SC_AW_recv;
  output [5:0]M_SC_AW_req;
  output [5:0]M_SC_AW_send;
  output [0:0]M_SC_B_info;
  output [8:0]M_SC_B_payld;
  input [0:0]M_SC_B_recv;
  output [0:0]M_SC_B_req;
  output [0:0]M_SC_B_send;
  output [0:0]M_SC_R_info;
  output [54:0]M_SC_R_payld;
  input [0:0]M_SC_R_recv;
  output [0:0]M_SC_R_req;
  output [0:0]M_SC_R_send;
  output [5:0]M_SC_W_info;
  output [68:0]M_SC_W_payld;
  input [5:0]M_SC_W_recv;
  output [5:0]M_SC_W_req;
  output [5:0]M_SC_W_send;
  input [0:0]S_SC_AR_info;
  input [181:0]S_SC_AR_payld;
  output [0:0]S_SC_AR_recv;
  input [0:0]S_SC_AR_req;
  input [0:0]S_SC_AR_send;
  input [0:0]S_SC_AW_info;
  input [181:0]S_SC_AW_payld;
  output [0:0]S_SC_AW_recv;
  input [0:0]S_SC_AW_req;
  input [0:0]S_SC_AW_send;
  input [5:0]S_SC_B_info;
  input [8:0]S_SC_B_payld;
  output [5:0]S_SC_B_recv;
  input [5:0]S_SC_B_req;
  input [5:0]S_SC_B_send;
  input [5:0]S_SC_R_info;
  input [54:0]S_SC_R_payld;
  output [5:0]S_SC_R_recv;
  input [5:0]S_SC_R_req;
  input [5:0]S_SC_R_send;
  input [0:0]S_SC_W_info;
  input [68:0]S_SC_W_payld;
  output [0:0]S_SC_W_recv;
  input [0:0]S_SC_W_req;
  input [0:0]S_SC_W_send;
  input m_sc_aclk;
  input m_sc_aresetn;
  input s_sc_aclk;
  input s_sc_aresetn;

  wire [0:0]S_SC_AR_1_INFO;
  wire [181:0]S_SC_AR_1_PAYLD;
  wire [0:0]S_SC_AR_1_RECV;
  wire [0:0]S_SC_AR_1_REQ;
  wire [0:0]S_SC_AR_1_SEND;
  wire [0:0]S_SC_AW_1_INFO;
  wire [181:0]S_SC_AW_1_PAYLD;
  wire [0:0]S_SC_AW_1_RECV;
  wire [0:0]S_SC_AW_1_REQ;
  wire [0:0]S_SC_AW_1_SEND;
  wire [5:0]S_SC_B_1_INFO;
  wire [8:0]S_SC_B_1_PAYLD;
  wire [5:0]S_SC_B_1_RECV;
  wire [5:0]S_SC_B_1_REQ;
  wire [5:0]S_SC_B_1_SEND;
  wire [5:0]S_SC_R_1_INFO;
  wire [54:0]S_SC_R_1_PAYLD;
  wire [5:0]S_SC_R_1_RECV;
  wire [5:0]S_SC_R_1_REQ;
  wire [5:0]S_SC_R_1_SEND;
  wire [0:0]S_SC_W_1_INFO;
  wire [68:0]S_SC_W_1_PAYLD;
  wire [0:0]S_SC_W_1_RECV;
  wire [0:0]S_SC_W_1_REQ;
  wire [0:0]S_SC_W_1_SEND;
  wire [5:0]i_ar_node_7_M_SC_INFO;
  wire [181:0]i_ar_node_7_M_SC_PAYLD;
  wire [5:0]i_ar_node_7_M_SC_RECV;
  wire [5:0]i_ar_node_7_M_SC_REQ;
  wire [5:0]i_ar_node_7_M_SC_SEND;
  wire [5:0]i_aw_node_7_M_SC_INFO;
  wire [181:0]i_aw_node_7_M_SC_PAYLD;
  wire [5:0]i_aw_node_7_M_SC_RECV;
  wire [5:0]i_aw_node_7_M_SC_REQ;
  wire [5:0]i_aw_node_7_M_SC_SEND;
  wire [0:0]i_b_node_7_M_SC_INFO;
  wire [8:0]i_b_node_7_M_SC_PAYLD;
  wire [0:0]i_b_node_7_M_SC_RECV;
  wire [0:0]i_b_node_7_M_SC_REQ;
  wire [0:0]i_b_node_7_M_SC_SEND;
  wire [0:0]i_r_node_7_M_SC_INFO;
  wire [54:0]i_r_node_7_M_SC_PAYLD;
  wire [0:0]i_r_node_7_M_SC_RECV;
  wire [0:0]i_r_node_7_M_SC_REQ;
  wire [0:0]i_r_node_7_M_SC_SEND;
  wire [5:0]i_w_node_7_M_SC_INFO;
  wire [68:0]i_w_node_7_M_SC_PAYLD;
  wire [5:0]i_w_node_7_M_SC_RECV;
  wire [5:0]i_w_node_7_M_SC_REQ;
  wire [5:0]i_w_node_7_M_SC_SEND;
  wire m_sc_aclk_1;
  wire m_sc_aresetn_1;
  wire s_sc_aclk_1;
  wire s_sc_aresetn_1;

  assign M_SC_AR_info[5:0] = i_ar_node_7_M_SC_INFO;
  assign M_SC_AR_payld[181:0] = i_ar_node_7_M_SC_PAYLD;
  assign M_SC_AR_req[5:0] = i_ar_node_7_M_SC_REQ;
  assign M_SC_AR_send[5:0] = i_ar_node_7_M_SC_SEND;
  assign M_SC_AW_info[5:0] = i_aw_node_7_M_SC_INFO;
  assign M_SC_AW_payld[181:0] = i_aw_node_7_M_SC_PAYLD;
  assign M_SC_AW_req[5:0] = i_aw_node_7_M_SC_REQ;
  assign M_SC_AW_send[5:0] = i_aw_node_7_M_SC_SEND;
  assign M_SC_B_info[0] = i_b_node_7_M_SC_INFO;
  assign M_SC_B_payld[8:0] = i_b_node_7_M_SC_PAYLD;
  assign M_SC_B_req[0] = i_b_node_7_M_SC_REQ;
  assign M_SC_B_send[0] = i_b_node_7_M_SC_SEND;
  assign M_SC_R_info[0] = i_r_node_7_M_SC_INFO;
  assign M_SC_R_payld[54:0] = i_r_node_7_M_SC_PAYLD;
  assign M_SC_R_req[0] = i_r_node_7_M_SC_REQ;
  assign M_SC_R_send[0] = i_r_node_7_M_SC_SEND;
  assign M_SC_W_info[5:0] = i_w_node_7_M_SC_INFO;
  assign M_SC_W_payld[68:0] = i_w_node_7_M_SC_PAYLD;
  assign M_SC_W_req[5:0] = i_w_node_7_M_SC_REQ;
  assign M_SC_W_send[5:0] = i_w_node_7_M_SC_SEND;
  assign S_SC_AR_1_INFO = S_SC_AR_info[0];
  assign S_SC_AR_1_PAYLD = S_SC_AR_payld[181:0];
  assign S_SC_AR_1_REQ = S_SC_AR_req[0];
  assign S_SC_AR_1_SEND = S_SC_AR_send[0];
  assign S_SC_AR_recv[0] = S_SC_AR_1_RECV;
  assign S_SC_AW_1_INFO = S_SC_AW_info[0];
  assign S_SC_AW_1_PAYLD = S_SC_AW_payld[181:0];
  assign S_SC_AW_1_REQ = S_SC_AW_req[0];
  assign S_SC_AW_1_SEND = S_SC_AW_send[0];
  assign S_SC_AW_recv[0] = S_SC_AW_1_RECV;
  assign S_SC_B_1_INFO = S_SC_B_info[5:0];
  assign S_SC_B_1_PAYLD = S_SC_B_payld[8:0];
  assign S_SC_B_1_REQ = S_SC_B_req[5:0];
  assign S_SC_B_1_SEND = S_SC_B_send[5:0];
  assign S_SC_B_recv[5:0] = S_SC_B_1_RECV;
  assign S_SC_R_1_INFO = S_SC_R_info[5:0];
  assign S_SC_R_1_PAYLD = S_SC_R_payld[54:0];
  assign S_SC_R_1_REQ = S_SC_R_req[5:0];
  assign S_SC_R_1_SEND = S_SC_R_send[5:0];
  assign S_SC_R_recv[5:0] = S_SC_R_1_RECV;
  assign S_SC_W_1_INFO = S_SC_W_info[0];
  assign S_SC_W_1_PAYLD = S_SC_W_payld[68:0];
  assign S_SC_W_1_REQ = S_SC_W_req[0];
  assign S_SC_W_1_SEND = S_SC_W_send[0];
  assign S_SC_W_recv[0] = S_SC_W_1_RECV;
  assign i_ar_node_7_M_SC_RECV = M_SC_AR_recv[5:0];
  assign i_aw_node_7_M_SC_RECV = M_SC_AW_recv[5:0];
  assign i_b_node_7_M_SC_RECV = M_SC_B_recv[0];
  assign i_r_node_7_M_SC_RECV = M_SC_R_recv[0];
  assign i_w_node_7_M_SC_RECV = M_SC_W_recv[5:0];
  assign m_sc_aclk_1 = m_sc_aclk;
  assign m_sc_aresetn_1 = m_sc_aresetn;
  assign s_sc_aclk_1 = s_sc_aclk;
  assign s_sc_aresetn_1 = s_sc_aresetn;
  bd_afc3_arni_7 i_ar_node_7
       (.m_sc_aclk(m_sc_aclk_1),
        .m_sc_aresetn(m_sc_aresetn_1),
        .m_sc_info(i_ar_node_7_M_SC_INFO),
        .m_sc_payld(i_ar_node_7_M_SC_PAYLD),
        .m_sc_recv(i_ar_node_7_M_SC_RECV),
        .m_sc_req(i_ar_node_7_M_SC_REQ),
        .m_sc_send(i_ar_node_7_M_SC_SEND),
        .s_sc_aclk(s_sc_aclk_1),
        .s_sc_aresetn(s_sc_aresetn_1),
        .s_sc_info(S_SC_AR_1_INFO),
        .s_sc_payld(S_SC_AR_1_PAYLD),
        .s_sc_recv(S_SC_AR_1_RECV),
        .s_sc_req(S_SC_AR_1_REQ),
        .s_sc_send(S_SC_AR_1_SEND));
  bd_afc3_awni_7 i_aw_node_7
       (.m_sc_aclk(m_sc_aclk_1),
        .m_sc_aresetn(m_sc_aresetn_1),
        .m_sc_info(i_aw_node_7_M_SC_INFO),
        .m_sc_payld(i_aw_node_7_M_SC_PAYLD),
        .m_sc_recv(i_aw_node_7_M_SC_RECV),
        .m_sc_req(i_aw_node_7_M_SC_REQ),
        .m_sc_send(i_aw_node_7_M_SC_SEND),
        .s_sc_aclk(s_sc_aclk_1),
        .s_sc_aresetn(s_sc_aresetn_1),
        .s_sc_info(S_SC_AW_1_INFO),
        .s_sc_payld(S_SC_AW_1_PAYLD),
        .s_sc_recv(S_SC_AW_1_RECV),
        .s_sc_req(S_SC_AW_1_REQ),
        .s_sc_send(S_SC_AW_1_SEND));
  bd_afc3_bni_7 i_b_node_7
       (.m_sc_aclk(s_sc_aclk_1),
        .m_sc_aresetn(s_sc_aresetn_1),
        .m_sc_info(i_b_node_7_M_SC_INFO),
        .m_sc_payld(i_b_node_7_M_SC_PAYLD),
        .m_sc_recv(i_b_node_7_M_SC_RECV),
        .m_sc_req(i_b_node_7_M_SC_REQ),
        .m_sc_send(i_b_node_7_M_SC_SEND),
        .s_sc_aclk(m_sc_aclk_1),
        .s_sc_aresetn(m_sc_aresetn_1),
        .s_sc_info(S_SC_B_1_INFO),
        .s_sc_payld(S_SC_B_1_PAYLD),
        .s_sc_recv(S_SC_B_1_RECV),
        .s_sc_req(S_SC_B_1_REQ),
        .s_sc_send(S_SC_B_1_SEND));
  bd_afc3_rni_7 i_r_node_7
       (.m_sc_aclk(s_sc_aclk_1),
        .m_sc_aresetn(s_sc_aresetn_1),
        .m_sc_info(i_r_node_7_M_SC_INFO),
        .m_sc_payld(i_r_node_7_M_SC_PAYLD),
        .m_sc_recv(i_r_node_7_M_SC_RECV),
        .m_sc_req(i_r_node_7_M_SC_REQ),
        .m_sc_send(i_r_node_7_M_SC_SEND),
        .s_sc_aclk(m_sc_aclk_1),
        .s_sc_aresetn(m_sc_aresetn_1),
        .s_sc_info(S_SC_R_1_INFO),
        .s_sc_payld(S_SC_R_1_PAYLD),
        .s_sc_recv(S_SC_R_1_RECV),
        .s_sc_req(S_SC_R_1_REQ),
        .s_sc_send(S_SC_R_1_SEND));
  bd_afc3_wni_7 i_w_node_7
       (.m_sc_aclk(m_sc_aclk_1),
        .m_sc_aresetn(m_sc_aresetn_1),
        .m_sc_info(i_w_node_7_M_SC_INFO),
        .m_sc_payld(i_w_node_7_M_SC_PAYLD),
        .m_sc_recv(i_w_node_7_M_SC_RECV),
        .m_sc_req(i_w_node_7_M_SC_REQ),
        .m_sc_send(i_w_node_7_M_SC_SEND),
        .s_sc_aclk(s_sc_aclk_1),
        .s_sc_aresetn(s_sc_aresetn_1),
        .s_sc_info(S_SC_W_1_INFO),
        .s_sc_payld(S_SC_W_1_PAYLD),
        .s_sc_recv(S_SC_W_1_RECV),
        .s_sc_req(S_SC_W_1_REQ),
        .s_sc_send(S_SC_W_1_SEND));
endmodule

module m00_exit_pipeline_imp_1TZX5BB
   (aclk,
    aresetn,
    m_axi_araddr,
    m_axi_arburst,
    m_axi_arcache,
    m_axi_arlen,
    m_axi_arlock,
    m_axi_arprot,
    m_axi_arqos,
    m_axi_arready,
    m_axi_arsize,
    m_axi_aruser,
    m_axi_arvalid,
    m_axi_awaddr,
    m_axi_awburst,
    m_axi_awcache,
    m_axi_awlen,
    m_axi_awlock,
    m_axi_awprot,
    m_axi_awqos,
    m_axi_awready,
    m_axi_awsize,
    m_axi_awuser,
    m_axi_awvalid,
    m_axi_bready,
    m_axi_bresp,
    m_axi_bvalid,
    m_axi_rdata,
    m_axi_rlast,
    m_axi_rready,
    m_axi_rresp,
    m_axi_rvalid,
    m_axi_wdata,
    m_axi_wlast,
    m_axi_wready,
    m_axi_wstrb,
    m_axi_wvalid,
    s_axi_araddr,
    s_axi_arcache,
    s_axi_arid,
    s_axi_arlen,
    s_axi_arlock,
    s_axi_arprot,
    s_axi_arqos,
    s_axi_arready,
    s_axi_aruser,
    s_axi_arvalid,
    s_axi_awaddr,
    s_axi_awcache,
    s_axi_awid,
    s_axi_awlen,
    s_axi_awlock,
    s_axi_awprot,
    s_axi_awqos,
    s_axi_awready,
    s_axi_awuser,
    s_axi_awvalid,
    s_axi_bid,
    s_axi_bready,
    s_axi_bresp,
    s_axi_buser,
    s_axi_bvalid,
    s_axi_rdata,
    s_axi_rid,
    s_axi_rlast,
    s_axi_rready,
    s_axi_rresp,
    s_axi_ruser,
    s_axi_rvalid,
    s_axi_wdata,
    s_axi_wlast,
    s_axi_wready,
    s_axi_wstrb,
    s_axi_wuser,
    s_axi_wvalid);
  input aclk;
  input aresetn;
  output [12:0]m_axi_araddr;
  output [1:0]m_axi_arburst;
  output [3:0]m_axi_arcache;
  output [7:0]m_axi_arlen;
  output [0:0]m_axi_arlock;
  output [2:0]m_axi_arprot;
  output [3:0]m_axi_arqos;
  input m_axi_arready;
  output [2:0]m_axi_arsize;
  output [15:0]m_axi_aruser;
  output m_axi_arvalid;
  output [12:0]m_axi_awaddr;
  output [1:0]m_axi_awburst;
  output [3:0]m_axi_awcache;
  output [7:0]m_axi_awlen;
  output [0:0]m_axi_awlock;
  output [2:0]m_axi_awprot;
  output [3:0]m_axi_awqos;
  input m_axi_awready;
  output [2:0]m_axi_awsize;
  output [15:0]m_axi_awuser;
  output m_axi_awvalid;
  output m_axi_bready;
  input [1:0]m_axi_bresp;
  input m_axi_bvalid;
  input [31:0]m_axi_rdata;
  input m_axi_rlast;
  output m_axi_rready;
  input [1:0]m_axi_rresp;
  input m_axi_rvalid;
  output [31:0]m_axi_wdata;
  output m_axi_wlast;
  input m_axi_wready;
  output [3:0]m_axi_wstrb;
  output m_axi_wvalid;
  input [12:0]s_axi_araddr;
  input [3:0]s_axi_arcache;
  input [2:0]s_axi_arid;
  input [7:0]s_axi_arlen;
  input [0:0]s_axi_arlock;
  input [2:0]s_axi_arprot;
  input [3:0]s_axi_arqos;
  output s_axi_arready;
  input [1023:0]s_axi_aruser;
  input s_axi_arvalid;
  input [12:0]s_axi_awaddr;
  input [3:0]s_axi_awcache;
  input [2:0]s_axi_awid;
  input [7:0]s_axi_awlen;
  input [0:0]s_axi_awlock;
  input [2:0]s_axi_awprot;
  input [3:0]s_axi_awqos;
  output s_axi_awready;
  input [1023:0]s_axi_awuser;
  input s_axi_awvalid;
  output [2:0]s_axi_bid;
  input s_axi_bready;
  output [1:0]s_axi_bresp;
  output [1023:0]s_axi_buser;
  output s_axi_bvalid;
  output [31:0]s_axi_rdata;
  output [2:0]s_axi_rid;
  output s_axi_rlast;
  input s_axi_rready;
  output [1:0]s_axi_rresp;
  output [1023:0]s_axi_ruser;
  output s_axi_rvalid;
  input [31:0]s_axi_wdata;
  input s_axi_wlast;
  output s_axi_wready;
  input [3:0]s_axi_wstrb;
  input [1023:0]s_axi_wuser;
  input s_axi_wvalid;

  wire aclk_1;
  wire aresetn_1;
  wire [12:0]m00_exit_M_AXI_ARADDR;
  wire [1:0]m00_exit_M_AXI_ARBURST;
  wire [3:0]m00_exit_M_AXI_ARCACHE;
  wire [7:0]m00_exit_M_AXI_ARLEN;
  wire [0:0]m00_exit_M_AXI_ARLOCK;
  wire [2:0]m00_exit_M_AXI_ARPROT;
  wire [3:0]m00_exit_M_AXI_ARQOS;
  wire m00_exit_M_AXI_ARREADY;
  wire [2:0]m00_exit_M_AXI_ARSIZE;
  wire [15:0]m00_exit_M_AXI_ARUSER;
  wire m00_exit_M_AXI_ARVALID;
  wire [12:0]m00_exit_M_AXI_AWADDR;
  wire [1:0]m00_exit_M_AXI_AWBURST;
  wire [3:0]m00_exit_M_AXI_AWCACHE;
  wire [7:0]m00_exit_M_AXI_AWLEN;
  wire [0:0]m00_exit_M_AXI_AWLOCK;
  wire [2:0]m00_exit_M_AXI_AWPROT;
  wire [3:0]m00_exit_M_AXI_AWQOS;
  wire m00_exit_M_AXI_AWREADY;
  wire [2:0]m00_exit_M_AXI_AWSIZE;
  wire [15:0]m00_exit_M_AXI_AWUSER;
  wire m00_exit_M_AXI_AWVALID;
  wire m00_exit_M_AXI_BREADY;
  wire [1:0]m00_exit_M_AXI_BRESP;
  wire m00_exit_M_AXI_BVALID;
  wire [31:0]m00_exit_M_AXI_RDATA;
  wire m00_exit_M_AXI_RLAST;
  wire m00_exit_M_AXI_RREADY;
  wire [1:0]m00_exit_M_AXI_RRESP;
  wire m00_exit_M_AXI_RVALID;
  wire [31:0]m00_exit_M_AXI_WDATA;
  wire m00_exit_M_AXI_WLAST;
  wire m00_exit_M_AXI_WREADY;
  wire [3:0]m00_exit_M_AXI_WSTRB;
  wire m00_exit_M_AXI_WVALID;
  wire [12:0]s_axi_1_ARADDR;
  wire [3:0]s_axi_1_ARCACHE;
  wire [2:0]s_axi_1_ARID;
  wire [7:0]s_axi_1_ARLEN;
  wire [0:0]s_axi_1_ARLOCK;
  wire [2:0]s_axi_1_ARPROT;
  wire [3:0]s_axi_1_ARQOS;
  wire s_axi_1_ARREADY;
  wire [1023:0]s_axi_1_ARUSER;
  wire s_axi_1_ARVALID;
  wire [12:0]s_axi_1_AWADDR;
  wire [3:0]s_axi_1_AWCACHE;
  wire [2:0]s_axi_1_AWID;
  wire [7:0]s_axi_1_AWLEN;
  wire [0:0]s_axi_1_AWLOCK;
  wire [2:0]s_axi_1_AWPROT;
  wire [3:0]s_axi_1_AWQOS;
  wire s_axi_1_AWREADY;
  wire [1023:0]s_axi_1_AWUSER;
  wire s_axi_1_AWVALID;
  wire [2:0]s_axi_1_BID;
  wire s_axi_1_BREADY;
  wire [1:0]s_axi_1_BRESP;
  wire [1023:0]s_axi_1_BUSER;
  wire s_axi_1_BVALID;
  wire [31:0]s_axi_1_RDATA;
  wire [2:0]s_axi_1_RID;
  wire s_axi_1_RLAST;
  wire s_axi_1_RREADY;
  wire [1:0]s_axi_1_RRESP;
  wire [1023:0]s_axi_1_RUSER;
  wire s_axi_1_RVALID;
  wire [31:0]s_axi_1_WDATA;
  wire s_axi_1_WLAST;
  wire s_axi_1_WREADY;
  wire [3:0]s_axi_1_WSTRB;
  wire [1023:0]s_axi_1_WUSER;
  wire s_axi_1_WVALID;

  assign aclk_1 = aclk;
  assign aresetn_1 = aresetn;
  assign m00_exit_M_AXI_ARREADY = m_axi_arready;
  assign m00_exit_M_AXI_AWREADY = m_axi_awready;
  assign m00_exit_M_AXI_BRESP = m_axi_bresp[1:0];
  assign m00_exit_M_AXI_BVALID = m_axi_bvalid;
  assign m00_exit_M_AXI_RDATA = m_axi_rdata[31:0];
  assign m00_exit_M_AXI_RLAST = m_axi_rlast;
  assign m00_exit_M_AXI_RRESP = m_axi_rresp[1:0];
  assign m00_exit_M_AXI_RVALID = m_axi_rvalid;
  assign m00_exit_M_AXI_WREADY = m_axi_wready;
  assign m_axi_araddr[12:0] = m00_exit_M_AXI_ARADDR;
  assign m_axi_arburst[1:0] = m00_exit_M_AXI_ARBURST;
  assign m_axi_arcache[3:0] = m00_exit_M_AXI_ARCACHE;
  assign m_axi_arlen[7:0] = m00_exit_M_AXI_ARLEN;
  assign m_axi_arlock[0] = m00_exit_M_AXI_ARLOCK;
  assign m_axi_arprot[2:0] = m00_exit_M_AXI_ARPROT;
  assign m_axi_arqos[3:0] = m00_exit_M_AXI_ARQOS;
  assign m_axi_arsize[2:0] = m00_exit_M_AXI_ARSIZE;
  assign m_axi_aruser[15:0] = m00_exit_M_AXI_ARUSER;
  assign m_axi_arvalid = m00_exit_M_AXI_ARVALID;
  assign m_axi_awaddr[12:0] = m00_exit_M_AXI_AWADDR;
  assign m_axi_awburst[1:0] = m00_exit_M_AXI_AWBURST;
  assign m_axi_awcache[3:0] = m00_exit_M_AXI_AWCACHE;
  assign m_axi_awlen[7:0] = m00_exit_M_AXI_AWLEN;
  assign m_axi_awlock[0] = m00_exit_M_AXI_AWLOCK;
  assign m_axi_awprot[2:0] = m00_exit_M_AXI_AWPROT;
  assign m_axi_awqos[3:0] = m00_exit_M_AXI_AWQOS;
  assign m_axi_awsize[2:0] = m00_exit_M_AXI_AWSIZE;
  assign m_axi_awuser[15:0] = m00_exit_M_AXI_AWUSER;
  assign m_axi_awvalid = m00_exit_M_AXI_AWVALID;
  assign m_axi_bready = m00_exit_M_AXI_BREADY;
  assign m_axi_rready = m00_exit_M_AXI_RREADY;
  assign m_axi_wdata[31:0] = m00_exit_M_AXI_WDATA;
  assign m_axi_wlast = m00_exit_M_AXI_WLAST;
  assign m_axi_wstrb[3:0] = m00_exit_M_AXI_WSTRB;
  assign m_axi_wvalid = m00_exit_M_AXI_WVALID;
  assign s_axi_1_ARADDR = s_axi_araddr[12:0];
  assign s_axi_1_ARCACHE = s_axi_arcache[3:0];
  assign s_axi_1_ARID = s_axi_arid[2:0];
  assign s_axi_1_ARLEN = s_axi_arlen[7:0];
  assign s_axi_1_ARLOCK = s_axi_arlock[0];
  assign s_axi_1_ARPROT = s_axi_arprot[2:0];
  assign s_axi_1_ARQOS = s_axi_arqos[3:0];
  assign s_axi_1_ARUSER = s_axi_aruser[1023:0];
  assign s_axi_1_ARVALID = s_axi_arvalid;
  assign s_axi_1_AWADDR = s_axi_awaddr[12:0];
  assign s_axi_1_AWCACHE = s_axi_awcache[3:0];
  assign s_axi_1_AWID = s_axi_awid[2:0];
  assign s_axi_1_AWLEN = s_axi_awlen[7:0];
  assign s_axi_1_AWLOCK = s_axi_awlock[0];
  assign s_axi_1_AWPROT = s_axi_awprot[2:0];
  assign s_axi_1_AWQOS = s_axi_awqos[3:0];
  assign s_axi_1_AWUSER = s_axi_awuser[1023:0];
  assign s_axi_1_AWVALID = s_axi_awvalid;
  assign s_axi_1_BREADY = s_axi_bready;
  assign s_axi_1_RREADY = s_axi_rready;
  assign s_axi_1_WDATA = s_axi_wdata[31:0];
  assign s_axi_1_WLAST = s_axi_wlast;
  assign s_axi_1_WSTRB = s_axi_wstrb[3:0];
  assign s_axi_1_WUSER = s_axi_wuser[1023:0];
  assign s_axi_1_WVALID = s_axi_wvalid;
  assign s_axi_arready = s_axi_1_ARREADY;
  assign s_axi_awready = s_axi_1_AWREADY;
  assign s_axi_bid[2:0] = s_axi_1_BID;
  assign s_axi_bresp[1:0] = s_axi_1_BRESP;
  assign s_axi_buser[1023:0] = s_axi_1_BUSER;
  assign s_axi_bvalid = s_axi_1_BVALID;
  assign s_axi_rdata[31:0] = s_axi_1_RDATA;
  assign s_axi_rid[2:0] = s_axi_1_RID;
  assign s_axi_rlast = s_axi_1_RLAST;
  assign s_axi_rresp[1:0] = s_axi_1_RRESP;
  assign s_axi_ruser[1023:0] = s_axi_1_RUSER;
  assign s_axi_rvalid = s_axi_1_RVALID;
  assign s_axi_wready = s_axi_1_WREADY;
  bd_afc3_m00e_0 m00_exit
       (.aclk(aclk_1),
        .aresetn(aresetn_1),
        .m_axi_araddr(m00_exit_M_AXI_ARADDR),
        .m_axi_arburst(m00_exit_M_AXI_ARBURST),
        .m_axi_arcache(m00_exit_M_AXI_ARCACHE),
        .m_axi_arlen(m00_exit_M_AXI_ARLEN),
        .m_axi_arlock(m00_exit_M_AXI_ARLOCK),
        .m_axi_arprot(m00_exit_M_AXI_ARPROT),
        .m_axi_arqos(m00_exit_M_AXI_ARQOS),
        .m_axi_arready(m00_exit_M_AXI_ARREADY),
        .m_axi_arsize(m00_exit_M_AXI_ARSIZE),
        .m_axi_aruser(m00_exit_M_AXI_ARUSER),
        .m_axi_arvalid(m00_exit_M_AXI_ARVALID),
        .m_axi_awaddr(m00_exit_M_AXI_AWADDR),
        .m_axi_awburst(m00_exit_M_AXI_AWBURST),
        .m_axi_awcache(m00_exit_M_AXI_AWCACHE),
        .m_axi_awlen(m00_exit_M_AXI_AWLEN),
        .m_axi_awlock(m00_exit_M_AXI_AWLOCK),
        .m_axi_awprot(m00_exit_M_AXI_AWPROT),
        .m_axi_awqos(m00_exit_M_AXI_AWQOS),
        .m_axi_awready(m00_exit_M_AXI_AWREADY),
        .m_axi_awsize(m00_exit_M_AXI_AWSIZE),
        .m_axi_awuser(m00_exit_M_AXI_AWUSER),
        .m_axi_awvalid(m00_exit_M_AXI_AWVALID),
        .m_axi_bready(m00_exit_M_AXI_BREADY),
        .m_axi_bresp(m00_exit_M_AXI_BRESP),
        .m_axi_bvalid(m00_exit_M_AXI_BVALID),
        .m_axi_rdata(m00_exit_M_AXI_RDATA),
        .m_axi_rlast(m00_exit_M_AXI_RLAST),
        .m_axi_rready(m00_exit_M_AXI_RREADY),
        .m_axi_rresp(m00_exit_M_AXI_RRESP),
        .m_axi_rvalid(m00_exit_M_AXI_RVALID),
        .m_axi_wdata(m00_exit_M_AXI_WDATA),
        .m_axi_wlast(m00_exit_M_AXI_WLAST),
        .m_axi_wready(m00_exit_M_AXI_WREADY),
        .m_axi_wstrb(m00_exit_M_AXI_WSTRB),
        .m_axi_wvalid(m00_exit_M_AXI_WVALID),
        .s_axi_araddr(s_axi_1_ARADDR),
        .s_axi_arcache(s_axi_1_ARCACHE),
        .s_axi_arid(s_axi_1_ARID),
        .s_axi_arlen(s_axi_1_ARLEN),
        .s_axi_arlock(s_axi_1_ARLOCK),
        .s_axi_arprot(s_axi_1_ARPROT),
        .s_axi_arqos(s_axi_1_ARQOS),
        .s_axi_arready(s_axi_1_ARREADY),
        .s_axi_aruser(s_axi_1_ARUSER),
        .s_axi_arvalid(s_axi_1_ARVALID),
        .s_axi_awaddr(s_axi_1_AWADDR),
        .s_axi_awcache(s_axi_1_AWCACHE),
        .s_axi_awid(s_axi_1_AWID),
        .s_axi_awlen(s_axi_1_AWLEN),
        .s_axi_awlock(s_axi_1_AWLOCK),
        .s_axi_awprot(s_axi_1_AWPROT),
        .s_axi_awqos(s_axi_1_AWQOS),
        .s_axi_awready(s_axi_1_AWREADY),
        .s_axi_awuser(s_axi_1_AWUSER),
        .s_axi_awvalid(s_axi_1_AWVALID),
        .s_axi_bid(s_axi_1_BID),
        .s_axi_bready(s_axi_1_BREADY),
        .s_axi_bresp(s_axi_1_BRESP),
        .s_axi_buser(s_axi_1_BUSER),
        .s_axi_bvalid(s_axi_1_BVALID),
        .s_axi_rdata(s_axi_1_RDATA),
        .s_axi_rid(s_axi_1_RID),
        .s_axi_rlast(s_axi_1_RLAST),
        .s_axi_rready(s_axi_1_RREADY),
        .s_axi_rresp(s_axi_1_RRESP),
        .s_axi_ruser(s_axi_1_RUSER),
        .s_axi_rvalid(s_axi_1_RVALID),
        .s_axi_wdata(s_axi_1_WDATA),
        .s_axi_wlast(s_axi_1_WLAST),
        .s_axi_wready(s_axi_1_WREADY),
        .s_axi_wstrb(s_axi_1_WSTRB),
        .s_axi_wuser(s_axi_1_WUSER),
        .s_axi_wvalid(s_axi_1_WVALID));
endmodule

module m00_nodes_imp_1GOYQYZ
   (M_SC_AR_info,
    M_SC_AR_payld,
    M_SC_AR_recv,
    M_SC_AR_req,
    M_SC_AR_send,
    M_SC_AW_info,
    M_SC_AW_payld,
    M_SC_AW_recv,
    M_SC_AW_req,
    M_SC_AW_send,
    M_SC_B_info,
    M_SC_B_payld,
    M_SC_B_recv,
    M_SC_B_req,
    M_SC_B_send,
    M_SC_R_info,
    M_SC_R_payld,
    M_SC_R_recv,
    M_SC_R_req,
    M_SC_R_send,
    M_SC_W_info,
    M_SC_W_payld,
    M_SC_W_recv,
    M_SC_W_req,
    M_SC_W_send,
    S_SC_AR_info,
    S_SC_AR_payld,
    S_SC_AR_recv,
    S_SC_AR_req,
    S_SC_AR_send,
    S_SC_AW_info,
    S_SC_AW_payld,
    S_SC_AW_recv,
    S_SC_AW_req,
    S_SC_AW_send,
    S_SC_B_info,
    S_SC_B_payld,
    S_SC_B_recv,
    S_SC_B_req,
    S_SC_B_send,
    S_SC_R_info,
    S_SC_R_payld,
    S_SC_R_recv,
    S_SC_R_req,
    S_SC_R_send,
    S_SC_W_info,
    S_SC_W_payld,
    S_SC_W_recv,
    S_SC_W_req,
    S_SC_W_send,
    m_axi_aclk,
    m_axi_aresetn,
    s_axi_aclk,
    s_axi_aresetn);
  output [0:0]M_SC_AR_info;
  output [181:0]M_SC_AR_payld;
  input [0:0]M_SC_AR_recv;
  output [0:0]M_SC_AR_req;
  output [0:0]M_SC_AR_send;
  output [0:0]M_SC_AW_info;
  output [181:0]M_SC_AW_payld;
  input [0:0]M_SC_AW_recv;
  output [0:0]M_SC_AW_req;
  output [0:0]M_SC_AW_send;
  output [0:0]M_SC_B_info;
  output [8:0]M_SC_B_payld;
  input [0:0]M_SC_B_recv;
  output [0:0]M_SC_B_req;
  output [0:0]M_SC_B_send;
  output [0:0]M_SC_R_info;
  output [54:0]M_SC_R_payld;
  input [0:0]M_SC_R_recv;
  output [0:0]M_SC_R_req;
  output [0:0]M_SC_R_send;
  output [0:0]M_SC_W_info;
  output [68:0]M_SC_W_payld;
  input [0:0]M_SC_W_recv;
  output [0:0]M_SC_W_req;
  output [0:0]M_SC_W_send;
  input [0:0]S_SC_AR_info;
  input [181:0]S_SC_AR_payld;
  output [0:0]S_SC_AR_recv;
  input [0:0]S_SC_AR_req;
  input [0:0]S_SC_AR_send;
  input [0:0]S_SC_AW_info;
  input [181:0]S_SC_AW_payld;
  output [0:0]S_SC_AW_recv;
  input [0:0]S_SC_AW_req;
  input [0:0]S_SC_AW_send;
  input [0:0]S_SC_B_info;
  input [8:0]S_SC_B_payld;
  output [0:0]S_SC_B_recv;
  input [0:0]S_SC_B_req;
  input [0:0]S_SC_B_send;
  input [0:0]S_SC_R_info;
  input [54:0]S_SC_R_payld;
  output [0:0]S_SC_R_recv;
  input [0:0]S_SC_R_req;
  input [0:0]S_SC_R_send;
  input [0:0]S_SC_W_info;
  input [68:0]S_SC_W_payld;
  output [0:0]S_SC_W_recv;
  input [0:0]S_SC_W_req;
  input [0:0]S_SC_W_send;
  input m_axi_aclk;
  input m_axi_aresetn;
  input s_axi_aclk;
  input s_axi_aresetn;

  wire [0:0]S_SC_AR_1_INFO;
  wire [181:0]S_SC_AR_1_PAYLD;
  wire [0:0]S_SC_AR_1_RECV;
  wire [0:0]S_SC_AR_1_REQ;
  wire [0:0]S_SC_AR_1_SEND;
  wire [0:0]S_SC_AW_1_INFO;
  wire [181:0]S_SC_AW_1_PAYLD;
  wire [0:0]S_SC_AW_1_RECV;
  wire [0:0]S_SC_AW_1_REQ;
  wire [0:0]S_SC_AW_1_SEND;
  wire [0:0]S_SC_B_1_INFO;
  wire [8:0]S_SC_B_1_PAYLD;
  wire [0:0]S_SC_B_1_RECV;
  wire [0:0]S_SC_B_1_REQ;
  wire [0:0]S_SC_B_1_SEND;
  wire [0:0]S_SC_R_1_INFO;
  wire [54:0]S_SC_R_1_PAYLD;
  wire [0:0]S_SC_R_1_RECV;
  wire [0:0]S_SC_R_1_REQ;
  wire [0:0]S_SC_R_1_SEND;
  wire [0:0]S_SC_W_1_INFO;
  wire [68:0]S_SC_W_1_PAYLD;
  wire [0:0]S_SC_W_1_RECV;
  wire [0:0]S_SC_W_1_REQ;
  wire [0:0]S_SC_W_1_SEND;
  wire [0:0]m00_ar_node_M_SC_INFO;
  wire [181:0]m00_ar_node_M_SC_PAYLD;
  wire [0:0]m00_ar_node_M_SC_RECV;
  wire [0:0]m00_ar_node_M_SC_REQ;
  wire [0:0]m00_ar_node_M_SC_SEND;
  wire [0:0]m00_aw_node_M_SC_INFO;
  wire [181:0]m00_aw_node_M_SC_PAYLD;
  wire [0:0]m00_aw_node_M_SC_RECV;
  wire [0:0]m00_aw_node_M_SC_REQ;
  wire [0:0]m00_aw_node_M_SC_SEND;
  wire [0:0]m00_b_node_M_SC_INFO;
  wire [8:0]m00_b_node_M_SC_PAYLD;
  wire [0:0]m00_b_node_M_SC_RECV;
  wire [0:0]m00_b_node_M_SC_REQ;
  wire [0:0]m00_b_node_M_SC_SEND;
  wire [0:0]m00_r_node_M_SC_INFO;
  wire [54:0]m00_r_node_M_SC_PAYLD;
  wire [0:0]m00_r_node_M_SC_RECV;
  wire [0:0]m00_r_node_M_SC_REQ;
  wire [0:0]m00_r_node_M_SC_SEND;
  wire [0:0]m00_w_node_M_SC_INFO;
  wire [68:0]m00_w_node_M_SC_PAYLD;
  wire [0:0]m00_w_node_M_SC_RECV;
  wire [0:0]m00_w_node_M_SC_REQ;
  wire [0:0]m00_w_node_M_SC_SEND;
  wire m_axi_aclk_1;
  wire m_axi_aresetn_1;
  wire s_axi_aclk_1;
  wire s_axi_aresetn_1;

  assign M_SC_AR_info[0] = m00_ar_node_M_SC_INFO;
  assign M_SC_AR_payld[181:0] = m00_ar_node_M_SC_PAYLD;
  assign M_SC_AR_req[0] = m00_ar_node_M_SC_REQ;
  assign M_SC_AR_send[0] = m00_ar_node_M_SC_SEND;
  assign M_SC_AW_info[0] = m00_aw_node_M_SC_INFO;
  assign M_SC_AW_payld[181:0] = m00_aw_node_M_SC_PAYLD;
  assign M_SC_AW_req[0] = m00_aw_node_M_SC_REQ;
  assign M_SC_AW_send[0] = m00_aw_node_M_SC_SEND;
  assign M_SC_B_info[0] = m00_b_node_M_SC_INFO;
  assign M_SC_B_payld[8:0] = m00_b_node_M_SC_PAYLD;
  assign M_SC_B_req[0] = m00_b_node_M_SC_REQ;
  assign M_SC_B_send[0] = m00_b_node_M_SC_SEND;
  assign M_SC_R_info[0] = m00_r_node_M_SC_INFO;
  assign M_SC_R_payld[54:0] = m00_r_node_M_SC_PAYLD;
  assign M_SC_R_req[0] = m00_r_node_M_SC_REQ;
  assign M_SC_R_send[0] = m00_r_node_M_SC_SEND;
  assign M_SC_W_info[0] = m00_w_node_M_SC_INFO;
  assign M_SC_W_payld[68:0] = m00_w_node_M_SC_PAYLD;
  assign M_SC_W_req[0] = m00_w_node_M_SC_REQ;
  assign M_SC_W_send[0] = m00_w_node_M_SC_SEND;
  assign S_SC_AR_1_INFO = S_SC_AR_info[0];
  assign S_SC_AR_1_PAYLD = S_SC_AR_payld[181:0];
  assign S_SC_AR_1_REQ = S_SC_AR_req[0];
  assign S_SC_AR_1_SEND = S_SC_AR_send[0];
  assign S_SC_AR_recv[0] = S_SC_AR_1_RECV;
  assign S_SC_AW_1_INFO = S_SC_AW_info[0];
  assign S_SC_AW_1_PAYLD = S_SC_AW_payld[181:0];
  assign S_SC_AW_1_REQ = S_SC_AW_req[0];
  assign S_SC_AW_1_SEND = S_SC_AW_send[0];
  assign S_SC_AW_recv[0] = S_SC_AW_1_RECV;
  assign S_SC_B_1_INFO = S_SC_B_info[0];
  assign S_SC_B_1_PAYLD = S_SC_B_payld[8:0];
  assign S_SC_B_1_REQ = S_SC_B_req[0];
  assign S_SC_B_1_SEND = S_SC_B_send[0];
  assign S_SC_B_recv[0] = S_SC_B_1_RECV;
  assign S_SC_R_1_INFO = S_SC_R_info[0];
  assign S_SC_R_1_PAYLD = S_SC_R_payld[54:0];
  assign S_SC_R_1_REQ = S_SC_R_req[0];
  assign S_SC_R_1_SEND = S_SC_R_send[0];
  assign S_SC_R_recv[0] = S_SC_R_1_RECV;
  assign S_SC_W_1_INFO = S_SC_W_info[0];
  assign S_SC_W_1_PAYLD = S_SC_W_payld[68:0];
  assign S_SC_W_1_REQ = S_SC_W_req[0];
  assign S_SC_W_1_SEND = S_SC_W_send[0];
  assign S_SC_W_recv[0] = S_SC_W_1_RECV;
  assign m00_ar_node_M_SC_RECV = M_SC_AR_recv[0];
  assign m00_aw_node_M_SC_RECV = M_SC_AW_recv[0];
  assign m00_b_node_M_SC_RECV = M_SC_B_recv[0];
  assign m00_r_node_M_SC_RECV = M_SC_R_recv[0];
  assign m00_w_node_M_SC_RECV = M_SC_W_recv[0];
  assign m_axi_aclk_1 = m_axi_aclk;
  assign m_axi_aresetn_1 = m_axi_aresetn;
  assign s_axi_aclk_1 = s_axi_aclk;
  assign s_axi_aresetn_1 = s_axi_aresetn;
  bd_afc3_m00arn_0 m00_ar_node
       (.m_sc_aclk(m_axi_aclk_1),
        .m_sc_aresetn(m_axi_aresetn_1),
        .m_sc_info(m00_ar_node_M_SC_INFO),
        .m_sc_payld(m00_ar_node_M_SC_PAYLD),
        .m_sc_recv(m00_ar_node_M_SC_RECV),
        .m_sc_req(m00_ar_node_M_SC_REQ),
        .m_sc_send(m00_ar_node_M_SC_SEND),
        .s_sc_aclk(s_axi_aclk_1),
        .s_sc_aresetn(s_axi_aresetn_1),
        .s_sc_info(S_SC_AR_1_INFO),
        .s_sc_payld(S_SC_AR_1_PAYLD),
        .s_sc_recv(S_SC_AR_1_RECV),
        .s_sc_req(S_SC_AR_1_REQ),
        .s_sc_send(S_SC_AR_1_SEND));
  bd_afc3_m00awn_0 m00_aw_node
       (.m_sc_aclk(m_axi_aclk_1),
        .m_sc_aresetn(m_axi_aresetn_1),
        .m_sc_info(m00_aw_node_M_SC_INFO),
        .m_sc_payld(m00_aw_node_M_SC_PAYLD),
        .m_sc_recv(m00_aw_node_M_SC_RECV),
        .m_sc_req(m00_aw_node_M_SC_REQ),
        .m_sc_send(m00_aw_node_M_SC_SEND),
        .s_sc_aclk(s_axi_aclk_1),
        .s_sc_aresetn(s_axi_aresetn_1),
        .s_sc_info(S_SC_AW_1_INFO),
        .s_sc_payld(S_SC_AW_1_PAYLD),
        .s_sc_recv(S_SC_AW_1_RECV),
        .s_sc_req(S_SC_AW_1_REQ),
        .s_sc_send(S_SC_AW_1_SEND));
  bd_afc3_m00bn_0 m00_b_node
       (.m_sc_aclk(s_axi_aclk_1),
        .m_sc_aresetn(s_axi_aresetn_1),
        .m_sc_info(m00_b_node_M_SC_INFO),
        .m_sc_payld(m00_b_node_M_SC_PAYLD),
        .m_sc_recv(m00_b_node_M_SC_RECV),
        .m_sc_req(m00_b_node_M_SC_REQ),
        .m_sc_send(m00_b_node_M_SC_SEND),
        .s_sc_aclk(m_axi_aclk_1),
        .s_sc_aresetn(m_axi_aresetn_1),
        .s_sc_info(S_SC_B_1_INFO),
        .s_sc_payld(S_SC_B_1_PAYLD),
        .s_sc_recv(S_SC_B_1_RECV),
        .s_sc_req(S_SC_B_1_REQ),
        .s_sc_send(S_SC_B_1_SEND));
  bd_afc3_m00rn_0 m00_r_node
       (.m_sc_aclk(s_axi_aclk_1),
        .m_sc_aresetn(s_axi_aresetn_1),
        .m_sc_info(m00_r_node_M_SC_INFO),
        .m_sc_payld(m00_r_node_M_SC_PAYLD),
        .m_sc_recv(m00_r_node_M_SC_RECV),
        .m_sc_req(m00_r_node_M_SC_REQ),
        .m_sc_send(m00_r_node_M_SC_SEND),
        .s_sc_aclk(m_axi_aclk_1),
        .s_sc_aresetn(m_axi_aresetn_1),
        .s_sc_info(S_SC_R_1_INFO),
        .s_sc_payld(S_SC_R_1_PAYLD),
        .s_sc_recv(S_SC_R_1_RECV),
        .s_sc_req(S_SC_R_1_REQ),
        .s_sc_send(S_SC_R_1_SEND));
  bd_afc3_m00wn_0 m00_w_node
       (.m_sc_aclk(m_axi_aclk_1),
        .m_sc_aresetn(m_axi_aresetn_1),
        .m_sc_info(m00_w_node_M_SC_INFO),
        .m_sc_payld(m00_w_node_M_SC_PAYLD),
        .m_sc_recv(m00_w_node_M_SC_RECV),
        .m_sc_req(m00_w_node_M_SC_REQ),
        .m_sc_send(m00_w_node_M_SC_SEND),
        .s_sc_aclk(s_axi_aclk_1),
        .s_sc_aresetn(s_axi_aresetn_1),
        .s_sc_info(S_SC_W_1_INFO),
        .s_sc_payld(S_SC_W_1_PAYLD),
        .s_sc_recv(S_SC_W_1_RECV),
        .s_sc_req(S_SC_W_1_REQ),
        .s_sc_send(S_SC_W_1_SEND));
endmodule

module m01_exit_pipeline_imp_1XMPFJB
   (aclk,
    aresetn,
    m_axi_araddr,
    m_axi_arburst,
    m_axi_arcache,
    m_axi_arlen,
    m_axi_arlock,
    m_axi_arprot,
    m_axi_arqos,
    m_axi_arready,
    m_axi_arsize,
    m_axi_aruser,
    m_axi_arvalid,
    m_axi_awaddr,
    m_axi_awburst,
    m_axi_awcache,
    m_axi_awlen,
    m_axi_awlock,
    m_axi_awprot,
    m_axi_awqos,
    m_axi_awready,
    m_axi_awsize,
    m_axi_awuser,
    m_axi_awvalid,
    m_axi_bready,
    m_axi_bresp,
    m_axi_bvalid,
    m_axi_rdata,
    m_axi_rlast,
    m_axi_rready,
    m_axi_rresp,
    m_axi_rvalid,
    m_axi_wdata,
    m_axi_wlast,
    m_axi_wready,
    m_axi_wstrb,
    m_axi_wvalid,
    s_axi_araddr,
    s_axi_arcache,
    s_axi_arid,
    s_axi_arlen,
    s_axi_arlock,
    s_axi_arprot,
    s_axi_arqos,
    s_axi_arready,
    s_axi_aruser,
    s_axi_arvalid,
    s_axi_awaddr,
    s_axi_awcache,
    s_axi_awid,
    s_axi_awlen,
    s_axi_awlock,
    s_axi_awprot,
    s_axi_awqos,
    s_axi_awready,
    s_axi_awuser,
    s_axi_awvalid,
    s_axi_bid,
    s_axi_bready,
    s_axi_bresp,
    s_axi_buser,
    s_axi_bvalid,
    s_axi_rdata,
    s_axi_rid,
    s_axi_rlast,
    s_axi_rready,
    s_axi_rresp,
    s_axi_ruser,
    s_axi_rvalid,
    s_axi_wdata,
    s_axi_wlast,
    s_axi_wready,
    s_axi_wstrb,
    s_axi_wuser,
    s_axi_wvalid);
  input aclk;
  input aresetn;
  output [12:0]m_axi_araddr;
  output [1:0]m_axi_arburst;
  output [3:0]m_axi_arcache;
  output [7:0]m_axi_arlen;
  output [0:0]m_axi_arlock;
  output [2:0]m_axi_arprot;
  output [3:0]m_axi_arqos;
  input m_axi_arready;
  output [2:0]m_axi_arsize;
  output [15:0]m_axi_aruser;
  output m_axi_arvalid;
  output [12:0]m_axi_awaddr;
  output [1:0]m_axi_awburst;
  output [3:0]m_axi_awcache;
  output [7:0]m_axi_awlen;
  output [0:0]m_axi_awlock;
  output [2:0]m_axi_awprot;
  output [3:0]m_axi_awqos;
  input m_axi_awready;
  output [2:0]m_axi_awsize;
  output [15:0]m_axi_awuser;
  output m_axi_awvalid;
  output m_axi_bready;
  input [1:0]m_axi_bresp;
  input m_axi_bvalid;
  input [31:0]m_axi_rdata;
  input m_axi_rlast;
  output m_axi_rready;
  input [1:0]m_axi_rresp;
  input m_axi_rvalid;
  output [31:0]m_axi_wdata;
  output m_axi_wlast;
  input m_axi_wready;
  output [3:0]m_axi_wstrb;
  output m_axi_wvalid;
  input [12:0]s_axi_araddr;
  input [3:0]s_axi_arcache;
  input [2:0]s_axi_arid;
  input [7:0]s_axi_arlen;
  input [0:0]s_axi_arlock;
  input [2:0]s_axi_arprot;
  input [3:0]s_axi_arqos;
  output s_axi_arready;
  input [1023:0]s_axi_aruser;
  input s_axi_arvalid;
  input [12:0]s_axi_awaddr;
  input [3:0]s_axi_awcache;
  input [2:0]s_axi_awid;
  input [7:0]s_axi_awlen;
  input [0:0]s_axi_awlock;
  input [2:0]s_axi_awprot;
  input [3:0]s_axi_awqos;
  output s_axi_awready;
  input [1023:0]s_axi_awuser;
  input s_axi_awvalid;
  output [2:0]s_axi_bid;
  input s_axi_bready;
  output [1:0]s_axi_bresp;
  output [1023:0]s_axi_buser;
  output s_axi_bvalid;
  output [31:0]s_axi_rdata;
  output [2:0]s_axi_rid;
  output s_axi_rlast;
  input s_axi_rready;
  output [1:0]s_axi_rresp;
  output [1023:0]s_axi_ruser;
  output s_axi_rvalid;
  input [31:0]s_axi_wdata;
  input s_axi_wlast;
  output s_axi_wready;
  input [3:0]s_axi_wstrb;
  input [1023:0]s_axi_wuser;
  input s_axi_wvalid;

  wire aclk_1;
  wire aresetn_1;
  wire [12:0]m01_exit_M_AXI_ARADDR;
  wire [1:0]m01_exit_M_AXI_ARBURST;
  wire [3:0]m01_exit_M_AXI_ARCACHE;
  wire [7:0]m01_exit_M_AXI_ARLEN;
  wire [0:0]m01_exit_M_AXI_ARLOCK;
  wire [2:0]m01_exit_M_AXI_ARPROT;
  wire [3:0]m01_exit_M_AXI_ARQOS;
  wire m01_exit_M_AXI_ARREADY;
  wire [2:0]m01_exit_M_AXI_ARSIZE;
  wire [15:0]m01_exit_M_AXI_ARUSER;
  wire m01_exit_M_AXI_ARVALID;
  wire [12:0]m01_exit_M_AXI_AWADDR;
  wire [1:0]m01_exit_M_AXI_AWBURST;
  wire [3:0]m01_exit_M_AXI_AWCACHE;
  wire [7:0]m01_exit_M_AXI_AWLEN;
  wire [0:0]m01_exit_M_AXI_AWLOCK;
  wire [2:0]m01_exit_M_AXI_AWPROT;
  wire [3:0]m01_exit_M_AXI_AWQOS;
  wire m01_exit_M_AXI_AWREADY;
  wire [2:0]m01_exit_M_AXI_AWSIZE;
  wire [15:0]m01_exit_M_AXI_AWUSER;
  wire m01_exit_M_AXI_AWVALID;
  wire m01_exit_M_AXI_BREADY;
  wire [1:0]m01_exit_M_AXI_BRESP;
  wire m01_exit_M_AXI_BVALID;
  wire [31:0]m01_exit_M_AXI_RDATA;
  wire m01_exit_M_AXI_RLAST;
  wire m01_exit_M_AXI_RREADY;
  wire [1:0]m01_exit_M_AXI_RRESP;
  wire m01_exit_M_AXI_RVALID;
  wire [31:0]m01_exit_M_AXI_WDATA;
  wire m01_exit_M_AXI_WLAST;
  wire m01_exit_M_AXI_WREADY;
  wire [3:0]m01_exit_M_AXI_WSTRB;
  wire m01_exit_M_AXI_WVALID;
  wire [12:0]s_axi_1_ARADDR;
  wire [3:0]s_axi_1_ARCACHE;
  wire [2:0]s_axi_1_ARID;
  wire [7:0]s_axi_1_ARLEN;
  wire [0:0]s_axi_1_ARLOCK;
  wire [2:0]s_axi_1_ARPROT;
  wire [3:0]s_axi_1_ARQOS;
  wire s_axi_1_ARREADY;
  wire [1023:0]s_axi_1_ARUSER;
  wire s_axi_1_ARVALID;
  wire [12:0]s_axi_1_AWADDR;
  wire [3:0]s_axi_1_AWCACHE;
  wire [2:0]s_axi_1_AWID;
  wire [7:0]s_axi_1_AWLEN;
  wire [0:0]s_axi_1_AWLOCK;
  wire [2:0]s_axi_1_AWPROT;
  wire [3:0]s_axi_1_AWQOS;
  wire s_axi_1_AWREADY;
  wire [1023:0]s_axi_1_AWUSER;
  wire s_axi_1_AWVALID;
  wire [2:0]s_axi_1_BID;
  wire s_axi_1_BREADY;
  wire [1:0]s_axi_1_BRESP;
  wire [1023:0]s_axi_1_BUSER;
  wire s_axi_1_BVALID;
  wire [31:0]s_axi_1_RDATA;
  wire [2:0]s_axi_1_RID;
  wire s_axi_1_RLAST;
  wire s_axi_1_RREADY;
  wire [1:0]s_axi_1_RRESP;
  wire [1023:0]s_axi_1_RUSER;
  wire s_axi_1_RVALID;
  wire [31:0]s_axi_1_WDATA;
  wire s_axi_1_WLAST;
  wire s_axi_1_WREADY;
  wire [3:0]s_axi_1_WSTRB;
  wire [1023:0]s_axi_1_WUSER;
  wire s_axi_1_WVALID;

  assign aclk_1 = aclk;
  assign aresetn_1 = aresetn;
  assign m01_exit_M_AXI_ARREADY = m_axi_arready;
  assign m01_exit_M_AXI_AWREADY = m_axi_awready;
  assign m01_exit_M_AXI_BRESP = m_axi_bresp[1:0];
  assign m01_exit_M_AXI_BVALID = m_axi_bvalid;
  assign m01_exit_M_AXI_RDATA = m_axi_rdata[31:0];
  assign m01_exit_M_AXI_RLAST = m_axi_rlast;
  assign m01_exit_M_AXI_RRESP = m_axi_rresp[1:0];
  assign m01_exit_M_AXI_RVALID = m_axi_rvalid;
  assign m01_exit_M_AXI_WREADY = m_axi_wready;
  assign m_axi_araddr[12:0] = m01_exit_M_AXI_ARADDR;
  assign m_axi_arburst[1:0] = m01_exit_M_AXI_ARBURST;
  assign m_axi_arcache[3:0] = m01_exit_M_AXI_ARCACHE;
  assign m_axi_arlen[7:0] = m01_exit_M_AXI_ARLEN;
  assign m_axi_arlock[0] = m01_exit_M_AXI_ARLOCK;
  assign m_axi_arprot[2:0] = m01_exit_M_AXI_ARPROT;
  assign m_axi_arqos[3:0] = m01_exit_M_AXI_ARQOS;
  assign m_axi_arsize[2:0] = m01_exit_M_AXI_ARSIZE;
  assign m_axi_aruser[15:0] = m01_exit_M_AXI_ARUSER;
  assign m_axi_arvalid = m01_exit_M_AXI_ARVALID;
  assign m_axi_awaddr[12:0] = m01_exit_M_AXI_AWADDR;
  assign m_axi_awburst[1:0] = m01_exit_M_AXI_AWBURST;
  assign m_axi_awcache[3:0] = m01_exit_M_AXI_AWCACHE;
  assign m_axi_awlen[7:0] = m01_exit_M_AXI_AWLEN;
  assign m_axi_awlock[0] = m01_exit_M_AXI_AWLOCK;
  assign m_axi_awprot[2:0] = m01_exit_M_AXI_AWPROT;
  assign m_axi_awqos[3:0] = m01_exit_M_AXI_AWQOS;
  assign m_axi_awsize[2:0] = m01_exit_M_AXI_AWSIZE;
  assign m_axi_awuser[15:0] = m01_exit_M_AXI_AWUSER;
  assign m_axi_awvalid = m01_exit_M_AXI_AWVALID;
  assign m_axi_bready = m01_exit_M_AXI_BREADY;
  assign m_axi_rready = m01_exit_M_AXI_RREADY;
  assign m_axi_wdata[31:0] = m01_exit_M_AXI_WDATA;
  assign m_axi_wlast = m01_exit_M_AXI_WLAST;
  assign m_axi_wstrb[3:0] = m01_exit_M_AXI_WSTRB;
  assign m_axi_wvalid = m01_exit_M_AXI_WVALID;
  assign s_axi_1_ARADDR = s_axi_araddr[12:0];
  assign s_axi_1_ARCACHE = s_axi_arcache[3:0];
  assign s_axi_1_ARID = s_axi_arid[2:0];
  assign s_axi_1_ARLEN = s_axi_arlen[7:0];
  assign s_axi_1_ARLOCK = s_axi_arlock[0];
  assign s_axi_1_ARPROT = s_axi_arprot[2:0];
  assign s_axi_1_ARQOS = s_axi_arqos[3:0];
  assign s_axi_1_ARUSER = s_axi_aruser[1023:0];
  assign s_axi_1_ARVALID = s_axi_arvalid;
  assign s_axi_1_AWADDR = s_axi_awaddr[12:0];
  assign s_axi_1_AWCACHE = s_axi_awcache[3:0];
  assign s_axi_1_AWID = s_axi_awid[2:0];
  assign s_axi_1_AWLEN = s_axi_awlen[7:0];
  assign s_axi_1_AWLOCK = s_axi_awlock[0];
  assign s_axi_1_AWPROT = s_axi_awprot[2:0];
  assign s_axi_1_AWQOS = s_axi_awqos[3:0];
  assign s_axi_1_AWUSER = s_axi_awuser[1023:0];
  assign s_axi_1_AWVALID = s_axi_awvalid;
  assign s_axi_1_BREADY = s_axi_bready;
  assign s_axi_1_RREADY = s_axi_rready;
  assign s_axi_1_WDATA = s_axi_wdata[31:0];
  assign s_axi_1_WLAST = s_axi_wlast;
  assign s_axi_1_WSTRB = s_axi_wstrb[3:0];
  assign s_axi_1_WUSER = s_axi_wuser[1023:0];
  assign s_axi_1_WVALID = s_axi_wvalid;
  assign s_axi_arready = s_axi_1_ARREADY;
  assign s_axi_awready = s_axi_1_AWREADY;
  assign s_axi_bid[2:0] = s_axi_1_BID;
  assign s_axi_bresp[1:0] = s_axi_1_BRESP;
  assign s_axi_buser[1023:0] = s_axi_1_BUSER;
  assign s_axi_bvalid = s_axi_1_BVALID;
  assign s_axi_rdata[31:0] = s_axi_1_RDATA;
  assign s_axi_rid[2:0] = s_axi_1_RID;
  assign s_axi_rlast = s_axi_1_RLAST;
  assign s_axi_rresp[1:0] = s_axi_1_RRESP;
  assign s_axi_ruser[1023:0] = s_axi_1_RUSER;
  assign s_axi_rvalid = s_axi_1_RVALID;
  assign s_axi_wready = s_axi_1_WREADY;
  bd_afc3_m01e_0 m01_exit
       (.aclk(aclk_1),
        .aresetn(aresetn_1),
        .m_axi_araddr(m01_exit_M_AXI_ARADDR),
        .m_axi_arburst(m01_exit_M_AXI_ARBURST),
        .m_axi_arcache(m01_exit_M_AXI_ARCACHE),
        .m_axi_arlen(m01_exit_M_AXI_ARLEN),
        .m_axi_arlock(m01_exit_M_AXI_ARLOCK),
        .m_axi_arprot(m01_exit_M_AXI_ARPROT),
        .m_axi_arqos(m01_exit_M_AXI_ARQOS),
        .m_axi_arready(m01_exit_M_AXI_ARREADY),
        .m_axi_arsize(m01_exit_M_AXI_ARSIZE),
        .m_axi_aruser(m01_exit_M_AXI_ARUSER),
        .m_axi_arvalid(m01_exit_M_AXI_ARVALID),
        .m_axi_awaddr(m01_exit_M_AXI_AWADDR),
        .m_axi_awburst(m01_exit_M_AXI_AWBURST),
        .m_axi_awcache(m01_exit_M_AXI_AWCACHE),
        .m_axi_awlen(m01_exit_M_AXI_AWLEN),
        .m_axi_awlock(m01_exit_M_AXI_AWLOCK),
        .m_axi_awprot(m01_exit_M_AXI_AWPROT),
        .m_axi_awqos(m01_exit_M_AXI_AWQOS),
        .m_axi_awready(m01_exit_M_AXI_AWREADY),
        .m_axi_awsize(m01_exit_M_AXI_AWSIZE),
        .m_axi_awuser(m01_exit_M_AXI_AWUSER),
        .m_axi_awvalid(m01_exit_M_AXI_AWVALID),
        .m_axi_bready(m01_exit_M_AXI_BREADY),
        .m_axi_bresp(m01_exit_M_AXI_BRESP),
        .m_axi_bvalid(m01_exit_M_AXI_BVALID),
        .m_axi_rdata(m01_exit_M_AXI_RDATA),
        .m_axi_rlast(m01_exit_M_AXI_RLAST),
        .m_axi_rready(m01_exit_M_AXI_RREADY),
        .m_axi_rresp(m01_exit_M_AXI_RRESP),
        .m_axi_rvalid(m01_exit_M_AXI_RVALID),
        .m_axi_wdata(m01_exit_M_AXI_WDATA),
        .m_axi_wlast(m01_exit_M_AXI_WLAST),
        .m_axi_wready(m01_exit_M_AXI_WREADY),
        .m_axi_wstrb(m01_exit_M_AXI_WSTRB),
        .m_axi_wvalid(m01_exit_M_AXI_WVALID),
        .s_axi_araddr(s_axi_1_ARADDR),
        .s_axi_arcache(s_axi_1_ARCACHE),
        .s_axi_arid(s_axi_1_ARID),
        .s_axi_arlen(s_axi_1_ARLEN),
        .s_axi_arlock(s_axi_1_ARLOCK),
        .s_axi_arprot(s_axi_1_ARPROT),
        .s_axi_arqos(s_axi_1_ARQOS),
        .s_axi_arready(s_axi_1_ARREADY),
        .s_axi_aruser(s_axi_1_ARUSER),
        .s_axi_arvalid(s_axi_1_ARVALID),
        .s_axi_awaddr(s_axi_1_AWADDR),
        .s_axi_awcache(s_axi_1_AWCACHE),
        .s_axi_awid(s_axi_1_AWID),
        .s_axi_awlen(s_axi_1_AWLEN),
        .s_axi_awlock(s_axi_1_AWLOCK),
        .s_axi_awprot(s_axi_1_AWPROT),
        .s_axi_awqos(s_axi_1_AWQOS),
        .s_axi_awready(s_axi_1_AWREADY),
        .s_axi_awuser(s_axi_1_AWUSER),
        .s_axi_awvalid(s_axi_1_AWVALID),
        .s_axi_bid(s_axi_1_BID),
        .s_axi_bready(s_axi_1_BREADY),
        .s_axi_bresp(s_axi_1_BRESP),
        .s_axi_buser(s_axi_1_BUSER),
        .s_axi_bvalid(s_axi_1_BVALID),
        .s_axi_rdata(s_axi_1_RDATA),
        .s_axi_rid(s_axi_1_RID),
        .s_axi_rlast(s_axi_1_RLAST),
        .s_axi_rready(s_axi_1_RREADY),
        .s_axi_rresp(s_axi_1_RRESP),
        .s_axi_ruser(s_axi_1_RUSER),
        .s_axi_rvalid(s_axi_1_RVALID),
        .s_axi_wdata(s_axi_1_WDATA),
        .s_axi_wlast(s_axi_1_WLAST),
        .s_axi_wready(s_axi_1_WREADY),
        .s_axi_wstrb(s_axi_1_WSTRB),
        .s_axi_wuser(s_axi_1_WUSER),
        .s_axi_wvalid(s_axi_1_WVALID));
endmodule

module m01_nodes_imp_94N5OD
   (M_SC_AR_info,
    M_SC_AR_payld,
    M_SC_AR_recv,
    M_SC_AR_req,
    M_SC_AR_send,
    M_SC_AW_info,
    M_SC_AW_payld,
    M_SC_AW_recv,
    M_SC_AW_req,
    M_SC_AW_send,
    M_SC_B_info,
    M_SC_B_payld,
    M_SC_B_recv,
    M_SC_B_req,
    M_SC_B_send,
    M_SC_R_info,
    M_SC_R_payld,
    M_SC_R_recv,
    M_SC_R_req,
    M_SC_R_send,
    M_SC_W_info,
    M_SC_W_payld,
    M_SC_W_recv,
    M_SC_W_req,
    M_SC_W_send,
    S_SC_AR_info,
    S_SC_AR_payld,
    S_SC_AR_recv,
    S_SC_AR_req,
    S_SC_AR_send,
    S_SC_AW_info,
    S_SC_AW_payld,
    S_SC_AW_recv,
    S_SC_AW_req,
    S_SC_AW_send,
    S_SC_B_info,
    S_SC_B_payld,
    S_SC_B_recv,
    S_SC_B_req,
    S_SC_B_send,
    S_SC_R_info,
    S_SC_R_payld,
    S_SC_R_recv,
    S_SC_R_req,
    S_SC_R_send,
    S_SC_W_info,
    S_SC_W_payld,
    S_SC_W_recv,
    S_SC_W_req,
    S_SC_W_send,
    m_axi_aclk,
    m_axi_aresetn,
    s_axi_aclk,
    s_axi_aresetn);
  output [0:0]M_SC_AR_info;
  output [181:0]M_SC_AR_payld;
  input [0:0]M_SC_AR_recv;
  output [0:0]M_SC_AR_req;
  output [0:0]M_SC_AR_send;
  output [0:0]M_SC_AW_info;
  output [181:0]M_SC_AW_payld;
  input [0:0]M_SC_AW_recv;
  output [0:0]M_SC_AW_req;
  output [0:0]M_SC_AW_send;
  output [0:0]M_SC_B_info;
  output [8:0]M_SC_B_payld;
  input [0:0]M_SC_B_recv;
  output [0:0]M_SC_B_req;
  output [0:0]M_SC_B_send;
  output [0:0]M_SC_R_info;
  output [54:0]M_SC_R_payld;
  input [0:0]M_SC_R_recv;
  output [0:0]M_SC_R_req;
  output [0:0]M_SC_R_send;
  output [0:0]M_SC_W_info;
  output [68:0]M_SC_W_payld;
  input [0:0]M_SC_W_recv;
  output [0:0]M_SC_W_req;
  output [0:0]M_SC_W_send;
  input [0:0]S_SC_AR_info;
  input [181:0]S_SC_AR_payld;
  output [0:0]S_SC_AR_recv;
  input [0:0]S_SC_AR_req;
  input [0:0]S_SC_AR_send;
  input [0:0]S_SC_AW_info;
  input [181:0]S_SC_AW_payld;
  output [0:0]S_SC_AW_recv;
  input [0:0]S_SC_AW_req;
  input [0:0]S_SC_AW_send;
  input [0:0]S_SC_B_info;
  input [8:0]S_SC_B_payld;
  output [0:0]S_SC_B_recv;
  input [0:0]S_SC_B_req;
  input [0:0]S_SC_B_send;
  input [0:0]S_SC_R_info;
  input [54:0]S_SC_R_payld;
  output [0:0]S_SC_R_recv;
  input [0:0]S_SC_R_req;
  input [0:0]S_SC_R_send;
  input [0:0]S_SC_W_info;
  input [68:0]S_SC_W_payld;
  output [0:0]S_SC_W_recv;
  input [0:0]S_SC_W_req;
  input [0:0]S_SC_W_send;
  input m_axi_aclk;
  input m_axi_aresetn;
  input s_axi_aclk;
  input s_axi_aresetn;

  wire [0:0]S_SC_AR_1_INFO;
  wire [181:0]S_SC_AR_1_PAYLD;
  wire [0:0]S_SC_AR_1_RECV;
  wire [0:0]S_SC_AR_1_REQ;
  wire [0:0]S_SC_AR_1_SEND;
  wire [0:0]S_SC_AW_1_INFO;
  wire [181:0]S_SC_AW_1_PAYLD;
  wire [0:0]S_SC_AW_1_RECV;
  wire [0:0]S_SC_AW_1_REQ;
  wire [0:0]S_SC_AW_1_SEND;
  wire [0:0]S_SC_B_1_INFO;
  wire [8:0]S_SC_B_1_PAYLD;
  wire [0:0]S_SC_B_1_RECV;
  wire [0:0]S_SC_B_1_REQ;
  wire [0:0]S_SC_B_1_SEND;
  wire [0:0]S_SC_R_1_INFO;
  wire [54:0]S_SC_R_1_PAYLD;
  wire [0:0]S_SC_R_1_RECV;
  wire [0:0]S_SC_R_1_REQ;
  wire [0:0]S_SC_R_1_SEND;
  wire [0:0]S_SC_W_1_INFO;
  wire [68:0]S_SC_W_1_PAYLD;
  wire [0:0]S_SC_W_1_RECV;
  wire [0:0]S_SC_W_1_REQ;
  wire [0:0]S_SC_W_1_SEND;
  wire [0:0]m01_ar_node_M_SC_INFO;
  wire [181:0]m01_ar_node_M_SC_PAYLD;
  wire [0:0]m01_ar_node_M_SC_RECV;
  wire [0:0]m01_ar_node_M_SC_REQ;
  wire [0:0]m01_ar_node_M_SC_SEND;
  wire [0:0]m01_aw_node_M_SC_INFO;
  wire [181:0]m01_aw_node_M_SC_PAYLD;
  wire [0:0]m01_aw_node_M_SC_RECV;
  wire [0:0]m01_aw_node_M_SC_REQ;
  wire [0:0]m01_aw_node_M_SC_SEND;
  wire [0:0]m01_b_node_M_SC_INFO;
  wire [8:0]m01_b_node_M_SC_PAYLD;
  wire [0:0]m01_b_node_M_SC_RECV;
  wire [0:0]m01_b_node_M_SC_REQ;
  wire [0:0]m01_b_node_M_SC_SEND;
  wire [0:0]m01_r_node_M_SC_INFO;
  wire [54:0]m01_r_node_M_SC_PAYLD;
  wire [0:0]m01_r_node_M_SC_RECV;
  wire [0:0]m01_r_node_M_SC_REQ;
  wire [0:0]m01_r_node_M_SC_SEND;
  wire [0:0]m01_w_node_M_SC_INFO;
  wire [68:0]m01_w_node_M_SC_PAYLD;
  wire [0:0]m01_w_node_M_SC_RECV;
  wire [0:0]m01_w_node_M_SC_REQ;
  wire [0:0]m01_w_node_M_SC_SEND;
  wire m_axi_aclk_1;
  wire m_axi_aresetn_1;
  wire s_axi_aclk_1;
  wire s_axi_aresetn_1;

  assign M_SC_AR_info[0] = m01_ar_node_M_SC_INFO;
  assign M_SC_AR_payld[181:0] = m01_ar_node_M_SC_PAYLD;
  assign M_SC_AR_req[0] = m01_ar_node_M_SC_REQ;
  assign M_SC_AR_send[0] = m01_ar_node_M_SC_SEND;
  assign M_SC_AW_info[0] = m01_aw_node_M_SC_INFO;
  assign M_SC_AW_payld[181:0] = m01_aw_node_M_SC_PAYLD;
  assign M_SC_AW_req[0] = m01_aw_node_M_SC_REQ;
  assign M_SC_AW_send[0] = m01_aw_node_M_SC_SEND;
  assign M_SC_B_info[0] = m01_b_node_M_SC_INFO;
  assign M_SC_B_payld[8:0] = m01_b_node_M_SC_PAYLD;
  assign M_SC_B_req[0] = m01_b_node_M_SC_REQ;
  assign M_SC_B_send[0] = m01_b_node_M_SC_SEND;
  assign M_SC_R_info[0] = m01_r_node_M_SC_INFO;
  assign M_SC_R_payld[54:0] = m01_r_node_M_SC_PAYLD;
  assign M_SC_R_req[0] = m01_r_node_M_SC_REQ;
  assign M_SC_R_send[0] = m01_r_node_M_SC_SEND;
  assign M_SC_W_info[0] = m01_w_node_M_SC_INFO;
  assign M_SC_W_payld[68:0] = m01_w_node_M_SC_PAYLD;
  assign M_SC_W_req[0] = m01_w_node_M_SC_REQ;
  assign M_SC_W_send[0] = m01_w_node_M_SC_SEND;
  assign S_SC_AR_1_INFO = S_SC_AR_info[0];
  assign S_SC_AR_1_PAYLD = S_SC_AR_payld[181:0];
  assign S_SC_AR_1_REQ = S_SC_AR_req[0];
  assign S_SC_AR_1_SEND = S_SC_AR_send[0];
  assign S_SC_AR_recv[0] = S_SC_AR_1_RECV;
  assign S_SC_AW_1_INFO = S_SC_AW_info[0];
  assign S_SC_AW_1_PAYLD = S_SC_AW_payld[181:0];
  assign S_SC_AW_1_REQ = S_SC_AW_req[0];
  assign S_SC_AW_1_SEND = S_SC_AW_send[0];
  assign S_SC_AW_recv[0] = S_SC_AW_1_RECV;
  assign S_SC_B_1_INFO = S_SC_B_info[0];
  assign S_SC_B_1_PAYLD = S_SC_B_payld[8:0];
  assign S_SC_B_1_REQ = S_SC_B_req[0];
  assign S_SC_B_1_SEND = S_SC_B_send[0];
  assign S_SC_B_recv[0] = S_SC_B_1_RECV;
  assign S_SC_R_1_INFO = S_SC_R_info[0];
  assign S_SC_R_1_PAYLD = S_SC_R_payld[54:0];
  assign S_SC_R_1_REQ = S_SC_R_req[0];
  assign S_SC_R_1_SEND = S_SC_R_send[0];
  assign S_SC_R_recv[0] = S_SC_R_1_RECV;
  assign S_SC_W_1_INFO = S_SC_W_info[0];
  assign S_SC_W_1_PAYLD = S_SC_W_payld[68:0];
  assign S_SC_W_1_REQ = S_SC_W_req[0];
  assign S_SC_W_1_SEND = S_SC_W_send[0];
  assign S_SC_W_recv[0] = S_SC_W_1_RECV;
  assign m01_ar_node_M_SC_RECV = M_SC_AR_recv[0];
  assign m01_aw_node_M_SC_RECV = M_SC_AW_recv[0];
  assign m01_b_node_M_SC_RECV = M_SC_B_recv[0];
  assign m01_r_node_M_SC_RECV = M_SC_R_recv[0];
  assign m01_w_node_M_SC_RECV = M_SC_W_recv[0];
  assign m_axi_aclk_1 = m_axi_aclk;
  assign m_axi_aresetn_1 = m_axi_aresetn;
  assign s_axi_aclk_1 = s_axi_aclk;
  assign s_axi_aresetn_1 = s_axi_aresetn;
  bd_afc3_m01arn_0 m01_ar_node
       (.m_sc_aclk(m_axi_aclk_1),
        .m_sc_aresetn(m_axi_aresetn_1),
        .m_sc_info(m01_ar_node_M_SC_INFO),
        .m_sc_payld(m01_ar_node_M_SC_PAYLD),
        .m_sc_recv(m01_ar_node_M_SC_RECV),
        .m_sc_req(m01_ar_node_M_SC_REQ),
        .m_sc_send(m01_ar_node_M_SC_SEND),
        .s_sc_aclk(s_axi_aclk_1),
        .s_sc_aresetn(s_axi_aresetn_1),
        .s_sc_info(S_SC_AR_1_INFO),
        .s_sc_payld(S_SC_AR_1_PAYLD),
        .s_sc_recv(S_SC_AR_1_RECV),
        .s_sc_req(S_SC_AR_1_REQ),
        .s_sc_send(S_SC_AR_1_SEND));
  bd_afc3_m01awn_0 m01_aw_node
       (.m_sc_aclk(m_axi_aclk_1),
        .m_sc_aresetn(m_axi_aresetn_1),
        .m_sc_info(m01_aw_node_M_SC_INFO),
        .m_sc_payld(m01_aw_node_M_SC_PAYLD),
        .m_sc_recv(m01_aw_node_M_SC_RECV),
        .m_sc_req(m01_aw_node_M_SC_REQ),
        .m_sc_send(m01_aw_node_M_SC_SEND),
        .s_sc_aclk(s_axi_aclk_1),
        .s_sc_aresetn(s_axi_aresetn_1),
        .s_sc_info(S_SC_AW_1_INFO),
        .s_sc_payld(S_SC_AW_1_PAYLD),
        .s_sc_recv(S_SC_AW_1_RECV),
        .s_sc_req(S_SC_AW_1_REQ),
        .s_sc_send(S_SC_AW_1_SEND));
  bd_afc3_m01bn_0 m01_b_node
       (.m_sc_aclk(s_axi_aclk_1),
        .m_sc_aresetn(s_axi_aresetn_1),
        .m_sc_info(m01_b_node_M_SC_INFO),
        .m_sc_payld(m01_b_node_M_SC_PAYLD),
        .m_sc_recv(m01_b_node_M_SC_RECV),
        .m_sc_req(m01_b_node_M_SC_REQ),
        .m_sc_send(m01_b_node_M_SC_SEND),
        .s_sc_aclk(m_axi_aclk_1),
        .s_sc_aresetn(m_axi_aresetn_1),
        .s_sc_info(S_SC_B_1_INFO),
        .s_sc_payld(S_SC_B_1_PAYLD),
        .s_sc_recv(S_SC_B_1_RECV),
        .s_sc_req(S_SC_B_1_REQ),
        .s_sc_send(S_SC_B_1_SEND));
  bd_afc3_m01rn_0 m01_r_node
       (.m_sc_aclk(s_axi_aclk_1),
        .m_sc_aresetn(s_axi_aresetn_1),
        .m_sc_info(m01_r_node_M_SC_INFO),
        .m_sc_payld(m01_r_node_M_SC_PAYLD),
        .m_sc_recv(m01_r_node_M_SC_RECV),
        .m_sc_req(m01_r_node_M_SC_REQ),
        .m_sc_send(m01_r_node_M_SC_SEND),
        .s_sc_aclk(m_axi_aclk_1),
        .s_sc_aresetn(m_axi_aresetn_1),
        .s_sc_info(S_SC_R_1_INFO),
        .s_sc_payld(S_SC_R_1_PAYLD),
        .s_sc_recv(S_SC_R_1_RECV),
        .s_sc_req(S_SC_R_1_REQ),
        .s_sc_send(S_SC_R_1_SEND));
  bd_afc3_m01wn_0 m01_w_node
       (.m_sc_aclk(m_axi_aclk_1),
        .m_sc_aresetn(m_axi_aresetn_1),
        .m_sc_info(m01_w_node_M_SC_INFO),
        .m_sc_payld(m01_w_node_M_SC_PAYLD),
        .m_sc_recv(m01_w_node_M_SC_RECV),
        .m_sc_req(m01_w_node_M_SC_REQ),
        .m_sc_send(m01_w_node_M_SC_SEND),
        .s_sc_aclk(s_axi_aclk_1),
        .s_sc_aresetn(s_axi_aresetn_1),
        .s_sc_info(S_SC_W_1_INFO),
        .s_sc_payld(S_SC_W_1_PAYLD),
        .s_sc_recv(S_SC_W_1_RECV),
        .s_sc_req(S_SC_W_1_REQ),
        .s_sc_send(S_SC_W_1_SEND));
endmodule

module m02_exit_pipeline_imp_1I9A8BR
   (aclk,
    aresetn,
    m_axi_araddr,
    m_axi_arburst,
    m_axi_arcache,
    m_axi_arlen,
    m_axi_arlock,
    m_axi_arprot,
    m_axi_arqos,
    m_axi_arready,
    m_axi_arsize,
    m_axi_aruser,
    m_axi_arvalid,
    m_axi_awaddr,
    m_axi_awburst,
    m_axi_awcache,
    m_axi_awlen,
    m_axi_awlock,
    m_axi_awprot,
    m_axi_awqos,
    m_axi_awready,
    m_axi_awsize,
    m_axi_awuser,
    m_axi_awvalid,
    m_axi_bready,
    m_axi_bresp,
    m_axi_bvalid,
    m_axi_rdata,
    m_axi_rlast,
    m_axi_rready,
    m_axi_rresp,
    m_axi_rvalid,
    m_axi_wdata,
    m_axi_wlast,
    m_axi_wready,
    m_axi_wstrb,
    m_axi_wvalid,
    s_axi_araddr,
    s_axi_arcache,
    s_axi_arid,
    s_axi_arlen,
    s_axi_arlock,
    s_axi_arprot,
    s_axi_arqos,
    s_axi_arready,
    s_axi_aruser,
    s_axi_arvalid,
    s_axi_awaddr,
    s_axi_awcache,
    s_axi_awid,
    s_axi_awlen,
    s_axi_awlock,
    s_axi_awprot,
    s_axi_awqos,
    s_axi_awready,
    s_axi_awuser,
    s_axi_awvalid,
    s_axi_bid,
    s_axi_bready,
    s_axi_bresp,
    s_axi_buser,
    s_axi_bvalid,
    s_axi_rdata,
    s_axi_rid,
    s_axi_rlast,
    s_axi_rready,
    s_axi_rresp,
    s_axi_ruser,
    s_axi_rvalid,
    s_axi_wdata,
    s_axi_wlast,
    s_axi_wready,
    s_axi_wstrb,
    s_axi_wuser,
    s_axi_wvalid);
  input aclk;
  input aresetn;
  output [12:0]m_axi_araddr;
  output [1:0]m_axi_arburst;
  output [3:0]m_axi_arcache;
  output [7:0]m_axi_arlen;
  output [0:0]m_axi_arlock;
  output [2:0]m_axi_arprot;
  output [3:0]m_axi_arqos;
  input m_axi_arready;
  output [2:0]m_axi_arsize;
  output [15:0]m_axi_aruser;
  output m_axi_arvalid;
  output [12:0]m_axi_awaddr;
  output [1:0]m_axi_awburst;
  output [3:0]m_axi_awcache;
  output [7:0]m_axi_awlen;
  output [0:0]m_axi_awlock;
  output [2:0]m_axi_awprot;
  output [3:0]m_axi_awqos;
  input m_axi_awready;
  output [2:0]m_axi_awsize;
  output [15:0]m_axi_awuser;
  output m_axi_awvalid;
  output m_axi_bready;
  input [1:0]m_axi_bresp;
  input m_axi_bvalid;
  input [31:0]m_axi_rdata;
  input m_axi_rlast;
  output m_axi_rready;
  input [1:0]m_axi_rresp;
  input m_axi_rvalid;
  output [31:0]m_axi_wdata;
  output m_axi_wlast;
  input m_axi_wready;
  output [3:0]m_axi_wstrb;
  output m_axi_wvalid;
  input [12:0]s_axi_araddr;
  input [3:0]s_axi_arcache;
  input [2:0]s_axi_arid;
  input [7:0]s_axi_arlen;
  input [0:0]s_axi_arlock;
  input [2:0]s_axi_arprot;
  input [3:0]s_axi_arqos;
  output s_axi_arready;
  input [1023:0]s_axi_aruser;
  input s_axi_arvalid;
  input [12:0]s_axi_awaddr;
  input [3:0]s_axi_awcache;
  input [2:0]s_axi_awid;
  input [7:0]s_axi_awlen;
  input [0:0]s_axi_awlock;
  input [2:0]s_axi_awprot;
  input [3:0]s_axi_awqos;
  output s_axi_awready;
  input [1023:0]s_axi_awuser;
  input s_axi_awvalid;
  output [2:0]s_axi_bid;
  input s_axi_bready;
  output [1:0]s_axi_bresp;
  output [1023:0]s_axi_buser;
  output s_axi_bvalid;
  output [31:0]s_axi_rdata;
  output [2:0]s_axi_rid;
  output s_axi_rlast;
  input s_axi_rready;
  output [1:0]s_axi_rresp;
  output [1023:0]s_axi_ruser;
  output s_axi_rvalid;
  input [31:0]s_axi_wdata;
  input s_axi_wlast;
  output s_axi_wready;
  input [3:0]s_axi_wstrb;
  input [1023:0]s_axi_wuser;
  input s_axi_wvalid;

  wire aclk_1;
  wire aresetn_1;
  wire [12:0]m02_exit_M_AXI_ARADDR;
  wire [1:0]m02_exit_M_AXI_ARBURST;
  wire [3:0]m02_exit_M_AXI_ARCACHE;
  wire [7:0]m02_exit_M_AXI_ARLEN;
  wire [0:0]m02_exit_M_AXI_ARLOCK;
  wire [2:0]m02_exit_M_AXI_ARPROT;
  wire [3:0]m02_exit_M_AXI_ARQOS;
  wire m02_exit_M_AXI_ARREADY;
  wire [2:0]m02_exit_M_AXI_ARSIZE;
  wire [15:0]m02_exit_M_AXI_ARUSER;
  wire m02_exit_M_AXI_ARVALID;
  wire [12:0]m02_exit_M_AXI_AWADDR;
  wire [1:0]m02_exit_M_AXI_AWBURST;
  wire [3:0]m02_exit_M_AXI_AWCACHE;
  wire [7:0]m02_exit_M_AXI_AWLEN;
  wire [0:0]m02_exit_M_AXI_AWLOCK;
  wire [2:0]m02_exit_M_AXI_AWPROT;
  wire [3:0]m02_exit_M_AXI_AWQOS;
  wire m02_exit_M_AXI_AWREADY;
  wire [2:0]m02_exit_M_AXI_AWSIZE;
  wire [15:0]m02_exit_M_AXI_AWUSER;
  wire m02_exit_M_AXI_AWVALID;
  wire m02_exit_M_AXI_BREADY;
  wire [1:0]m02_exit_M_AXI_BRESP;
  wire m02_exit_M_AXI_BVALID;
  wire [31:0]m02_exit_M_AXI_RDATA;
  wire m02_exit_M_AXI_RLAST;
  wire m02_exit_M_AXI_RREADY;
  wire [1:0]m02_exit_M_AXI_RRESP;
  wire m02_exit_M_AXI_RVALID;
  wire [31:0]m02_exit_M_AXI_WDATA;
  wire m02_exit_M_AXI_WLAST;
  wire m02_exit_M_AXI_WREADY;
  wire [3:0]m02_exit_M_AXI_WSTRB;
  wire m02_exit_M_AXI_WVALID;
  wire [12:0]s_axi_1_ARADDR;
  wire [3:0]s_axi_1_ARCACHE;
  wire [2:0]s_axi_1_ARID;
  wire [7:0]s_axi_1_ARLEN;
  wire [0:0]s_axi_1_ARLOCK;
  wire [2:0]s_axi_1_ARPROT;
  wire [3:0]s_axi_1_ARQOS;
  wire s_axi_1_ARREADY;
  wire [1023:0]s_axi_1_ARUSER;
  wire s_axi_1_ARVALID;
  wire [12:0]s_axi_1_AWADDR;
  wire [3:0]s_axi_1_AWCACHE;
  wire [2:0]s_axi_1_AWID;
  wire [7:0]s_axi_1_AWLEN;
  wire [0:0]s_axi_1_AWLOCK;
  wire [2:0]s_axi_1_AWPROT;
  wire [3:0]s_axi_1_AWQOS;
  wire s_axi_1_AWREADY;
  wire [1023:0]s_axi_1_AWUSER;
  wire s_axi_1_AWVALID;
  wire [2:0]s_axi_1_BID;
  wire s_axi_1_BREADY;
  wire [1:0]s_axi_1_BRESP;
  wire [1023:0]s_axi_1_BUSER;
  wire s_axi_1_BVALID;
  wire [31:0]s_axi_1_RDATA;
  wire [2:0]s_axi_1_RID;
  wire s_axi_1_RLAST;
  wire s_axi_1_RREADY;
  wire [1:0]s_axi_1_RRESP;
  wire [1023:0]s_axi_1_RUSER;
  wire s_axi_1_RVALID;
  wire [31:0]s_axi_1_WDATA;
  wire s_axi_1_WLAST;
  wire s_axi_1_WREADY;
  wire [3:0]s_axi_1_WSTRB;
  wire [1023:0]s_axi_1_WUSER;
  wire s_axi_1_WVALID;

  assign aclk_1 = aclk;
  assign aresetn_1 = aresetn;
  assign m02_exit_M_AXI_ARREADY = m_axi_arready;
  assign m02_exit_M_AXI_AWREADY = m_axi_awready;
  assign m02_exit_M_AXI_BRESP = m_axi_bresp[1:0];
  assign m02_exit_M_AXI_BVALID = m_axi_bvalid;
  assign m02_exit_M_AXI_RDATA = m_axi_rdata[31:0];
  assign m02_exit_M_AXI_RLAST = m_axi_rlast;
  assign m02_exit_M_AXI_RRESP = m_axi_rresp[1:0];
  assign m02_exit_M_AXI_RVALID = m_axi_rvalid;
  assign m02_exit_M_AXI_WREADY = m_axi_wready;
  assign m_axi_araddr[12:0] = m02_exit_M_AXI_ARADDR;
  assign m_axi_arburst[1:0] = m02_exit_M_AXI_ARBURST;
  assign m_axi_arcache[3:0] = m02_exit_M_AXI_ARCACHE;
  assign m_axi_arlen[7:0] = m02_exit_M_AXI_ARLEN;
  assign m_axi_arlock[0] = m02_exit_M_AXI_ARLOCK;
  assign m_axi_arprot[2:0] = m02_exit_M_AXI_ARPROT;
  assign m_axi_arqos[3:0] = m02_exit_M_AXI_ARQOS;
  assign m_axi_arsize[2:0] = m02_exit_M_AXI_ARSIZE;
  assign m_axi_aruser[15:0] = m02_exit_M_AXI_ARUSER;
  assign m_axi_arvalid = m02_exit_M_AXI_ARVALID;
  assign m_axi_awaddr[12:0] = m02_exit_M_AXI_AWADDR;
  assign m_axi_awburst[1:0] = m02_exit_M_AXI_AWBURST;
  assign m_axi_awcache[3:0] = m02_exit_M_AXI_AWCACHE;
  assign m_axi_awlen[7:0] = m02_exit_M_AXI_AWLEN;
  assign m_axi_awlock[0] = m02_exit_M_AXI_AWLOCK;
  assign m_axi_awprot[2:0] = m02_exit_M_AXI_AWPROT;
  assign m_axi_awqos[3:0] = m02_exit_M_AXI_AWQOS;
  assign m_axi_awsize[2:0] = m02_exit_M_AXI_AWSIZE;
  assign m_axi_awuser[15:0] = m02_exit_M_AXI_AWUSER;
  assign m_axi_awvalid = m02_exit_M_AXI_AWVALID;
  assign m_axi_bready = m02_exit_M_AXI_BREADY;
  assign m_axi_rready = m02_exit_M_AXI_RREADY;
  assign m_axi_wdata[31:0] = m02_exit_M_AXI_WDATA;
  assign m_axi_wlast = m02_exit_M_AXI_WLAST;
  assign m_axi_wstrb[3:0] = m02_exit_M_AXI_WSTRB;
  assign m_axi_wvalid = m02_exit_M_AXI_WVALID;
  assign s_axi_1_ARADDR = s_axi_araddr[12:0];
  assign s_axi_1_ARCACHE = s_axi_arcache[3:0];
  assign s_axi_1_ARID = s_axi_arid[2:0];
  assign s_axi_1_ARLEN = s_axi_arlen[7:0];
  assign s_axi_1_ARLOCK = s_axi_arlock[0];
  assign s_axi_1_ARPROT = s_axi_arprot[2:0];
  assign s_axi_1_ARQOS = s_axi_arqos[3:0];
  assign s_axi_1_ARUSER = s_axi_aruser[1023:0];
  assign s_axi_1_ARVALID = s_axi_arvalid;
  assign s_axi_1_AWADDR = s_axi_awaddr[12:0];
  assign s_axi_1_AWCACHE = s_axi_awcache[3:0];
  assign s_axi_1_AWID = s_axi_awid[2:0];
  assign s_axi_1_AWLEN = s_axi_awlen[7:0];
  assign s_axi_1_AWLOCK = s_axi_awlock[0];
  assign s_axi_1_AWPROT = s_axi_awprot[2:0];
  assign s_axi_1_AWQOS = s_axi_awqos[3:0];
  assign s_axi_1_AWUSER = s_axi_awuser[1023:0];
  assign s_axi_1_AWVALID = s_axi_awvalid;
  assign s_axi_1_BREADY = s_axi_bready;
  assign s_axi_1_RREADY = s_axi_rready;
  assign s_axi_1_WDATA = s_axi_wdata[31:0];
  assign s_axi_1_WLAST = s_axi_wlast;
  assign s_axi_1_WSTRB = s_axi_wstrb[3:0];
  assign s_axi_1_WUSER = s_axi_wuser[1023:0];
  assign s_axi_1_WVALID = s_axi_wvalid;
  assign s_axi_arready = s_axi_1_ARREADY;
  assign s_axi_awready = s_axi_1_AWREADY;
  assign s_axi_bid[2:0] = s_axi_1_BID;
  assign s_axi_bresp[1:0] = s_axi_1_BRESP;
  assign s_axi_buser[1023:0] = s_axi_1_BUSER;
  assign s_axi_bvalid = s_axi_1_BVALID;
  assign s_axi_rdata[31:0] = s_axi_1_RDATA;
  assign s_axi_rid[2:0] = s_axi_1_RID;
  assign s_axi_rlast = s_axi_1_RLAST;
  assign s_axi_rresp[1:0] = s_axi_1_RRESP;
  assign s_axi_ruser[1023:0] = s_axi_1_RUSER;
  assign s_axi_rvalid = s_axi_1_RVALID;
  assign s_axi_wready = s_axi_1_WREADY;
  bd_afc3_m02e_0 m02_exit
       (.aclk(aclk_1),
        .aresetn(aresetn_1),
        .m_axi_araddr(m02_exit_M_AXI_ARADDR),
        .m_axi_arburst(m02_exit_M_AXI_ARBURST),
        .m_axi_arcache(m02_exit_M_AXI_ARCACHE),
        .m_axi_arlen(m02_exit_M_AXI_ARLEN),
        .m_axi_arlock(m02_exit_M_AXI_ARLOCK),
        .m_axi_arprot(m02_exit_M_AXI_ARPROT),
        .m_axi_arqos(m02_exit_M_AXI_ARQOS),
        .m_axi_arready(m02_exit_M_AXI_ARREADY),
        .m_axi_arsize(m02_exit_M_AXI_ARSIZE),
        .m_axi_aruser(m02_exit_M_AXI_ARUSER),
        .m_axi_arvalid(m02_exit_M_AXI_ARVALID),
        .m_axi_awaddr(m02_exit_M_AXI_AWADDR),
        .m_axi_awburst(m02_exit_M_AXI_AWBURST),
        .m_axi_awcache(m02_exit_M_AXI_AWCACHE),
        .m_axi_awlen(m02_exit_M_AXI_AWLEN),
        .m_axi_awlock(m02_exit_M_AXI_AWLOCK),
        .m_axi_awprot(m02_exit_M_AXI_AWPROT),
        .m_axi_awqos(m02_exit_M_AXI_AWQOS),
        .m_axi_awready(m02_exit_M_AXI_AWREADY),
        .m_axi_awsize(m02_exit_M_AXI_AWSIZE),
        .m_axi_awuser(m02_exit_M_AXI_AWUSER),
        .m_axi_awvalid(m02_exit_M_AXI_AWVALID),
        .m_axi_bready(m02_exit_M_AXI_BREADY),
        .m_axi_bresp(m02_exit_M_AXI_BRESP),
        .m_axi_bvalid(m02_exit_M_AXI_BVALID),
        .m_axi_rdata(m02_exit_M_AXI_RDATA),
        .m_axi_rlast(m02_exit_M_AXI_RLAST),
        .m_axi_rready(m02_exit_M_AXI_RREADY),
        .m_axi_rresp(m02_exit_M_AXI_RRESP),
        .m_axi_rvalid(m02_exit_M_AXI_RVALID),
        .m_axi_wdata(m02_exit_M_AXI_WDATA),
        .m_axi_wlast(m02_exit_M_AXI_WLAST),
        .m_axi_wready(m02_exit_M_AXI_WREADY),
        .m_axi_wstrb(m02_exit_M_AXI_WSTRB),
        .m_axi_wvalid(m02_exit_M_AXI_WVALID),
        .s_axi_araddr(s_axi_1_ARADDR),
        .s_axi_arcache(s_axi_1_ARCACHE),
        .s_axi_arid(s_axi_1_ARID),
        .s_axi_arlen(s_axi_1_ARLEN),
        .s_axi_arlock(s_axi_1_ARLOCK),
        .s_axi_arprot(s_axi_1_ARPROT),
        .s_axi_arqos(s_axi_1_ARQOS),
        .s_axi_arready(s_axi_1_ARREADY),
        .s_axi_aruser(s_axi_1_ARUSER),
        .s_axi_arvalid(s_axi_1_ARVALID),
        .s_axi_awaddr(s_axi_1_AWADDR),
        .s_axi_awcache(s_axi_1_AWCACHE),
        .s_axi_awid(s_axi_1_AWID),
        .s_axi_awlen(s_axi_1_AWLEN),
        .s_axi_awlock(s_axi_1_AWLOCK),
        .s_axi_awprot(s_axi_1_AWPROT),
        .s_axi_awqos(s_axi_1_AWQOS),
        .s_axi_awready(s_axi_1_AWREADY),
        .s_axi_awuser(s_axi_1_AWUSER),
        .s_axi_awvalid(s_axi_1_AWVALID),
        .s_axi_bid(s_axi_1_BID),
        .s_axi_bready(s_axi_1_BREADY),
        .s_axi_bresp(s_axi_1_BRESP),
        .s_axi_buser(s_axi_1_BUSER),
        .s_axi_bvalid(s_axi_1_BVALID),
        .s_axi_rdata(s_axi_1_RDATA),
        .s_axi_rid(s_axi_1_RID),
        .s_axi_rlast(s_axi_1_RLAST),
        .s_axi_rready(s_axi_1_RREADY),
        .s_axi_rresp(s_axi_1_RRESP),
        .s_axi_ruser(s_axi_1_RUSER),
        .s_axi_rvalid(s_axi_1_RVALID),
        .s_axi_wdata(s_axi_1_WDATA),
        .s_axi_wlast(s_axi_1_WLAST),
        .s_axi_wready(s_axi_1_WREADY),
        .s_axi_wstrb(s_axi_1_WSTRB),
        .s_axi_wuser(s_axi_1_WUSER),
        .s_axi_wvalid(s_axi_1_WVALID));
endmodule

module m02_nodes_imp_PO9IG6
   (M_SC_AR_info,
    M_SC_AR_payld,
    M_SC_AR_recv,
    M_SC_AR_req,
    M_SC_AR_send,
    M_SC_AW_info,
    M_SC_AW_payld,
    M_SC_AW_recv,
    M_SC_AW_req,
    M_SC_AW_send,
    M_SC_B_info,
    M_SC_B_payld,
    M_SC_B_recv,
    M_SC_B_req,
    M_SC_B_send,
    M_SC_R_info,
    M_SC_R_payld,
    M_SC_R_recv,
    M_SC_R_req,
    M_SC_R_send,
    M_SC_W_info,
    M_SC_W_payld,
    M_SC_W_recv,
    M_SC_W_req,
    M_SC_W_send,
    S_SC_AR_info,
    S_SC_AR_payld,
    S_SC_AR_recv,
    S_SC_AR_req,
    S_SC_AR_send,
    S_SC_AW_info,
    S_SC_AW_payld,
    S_SC_AW_recv,
    S_SC_AW_req,
    S_SC_AW_send,
    S_SC_B_info,
    S_SC_B_payld,
    S_SC_B_recv,
    S_SC_B_req,
    S_SC_B_send,
    S_SC_R_info,
    S_SC_R_payld,
    S_SC_R_recv,
    S_SC_R_req,
    S_SC_R_send,
    S_SC_W_info,
    S_SC_W_payld,
    S_SC_W_recv,
    S_SC_W_req,
    S_SC_W_send,
    m_axi_aclk,
    m_axi_aresetn,
    s_axi_aclk,
    s_axi_aresetn);
  output [0:0]M_SC_AR_info;
  output [181:0]M_SC_AR_payld;
  input [0:0]M_SC_AR_recv;
  output [0:0]M_SC_AR_req;
  output [0:0]M_SC_AR_send;
  output [0:0]M_SC_AW_info;
  output [181:0]M_SC_AW_payld;
  input [0:0]M_SC_AW_recv;
  output [0:0]M_SC_AW_req;
  output [0:0]M_SC_AW_send;
  output [0:0]M_SC_B_info;
  output [8:0]M_SC_B_payld;
  input [0:0]M_SC_B_recv;
  output [0:0]M_SC_B_req;
  output [0:0]M_SC_B_send;
  output [0:0]M_SC_R_info;
  output [54:0]M_SC_R_payld;
  input [0:0]M_SC_R_recv;
  output [0:0]M_SC_R_req;
  output [0:0]M_SC_R_send;
  output [0:0]M_SC_W_info;
  output [68:0]M_SC_W_payld;
  input [0:0]M_SC_W_recv;
  output [0:0]M_SC_W_req;
  output [0:0]M_SC_W_send;
  input [0:0]S_SC_AR_info;
  input [181:0]S_SC_AR_payld;
  output [0:0]S_SC_AR_recv;
  input [0:0]S_SC_AR_req;
  input [0:0]S_SC_AR_send;
  input [0:0]S_SC_AW_info;
  input [181:0]S_SC_AW_payld;
  output [0:0]S_SC_AW_recv;
  input [0:0]S_SC_AW_req;
  input [0:0]S_SC_AW_send;
  input [0:0]S_SC_B_info;
  input [8:0]S_SC_B_payld;
  output [0:0]S_SC_B_recv;
  input [0:0]S_SC_B_req;
  input [0:0]S_SC_B_send;
  input [0:0]S_SC_R_info;
  input [54:0]S_SC_R_payld;
  output [0:0]S_SC_R_recv;
  input [0:0]S_SC_R_req;
  input [0:0]S_SC_R_send;
  input [0:0]S_SC_W_info;
  input [68:0]S_SC_W_payld;
  output [0:0]S_SC_W_recv;
  input [0:0]S_SC_W_req;
  input [0:0]S_SC_W_send;
  input m_axi_aclk;
  input m_axi_aresetn;
  input s_axi_aclk;
  input s_axi_aresetn;

  wire [0:0]S_SC_AR_1_INFO;
  wire [181:0]S_SC_AR_1_PAYLD;
  wire [0:0]S_SC_AR_1_RECV;
  wire [0:0]S_SC_AR_1_REQ;
  wire [0:0]S_SC_AR_1_SEND;
  wire [0:0]S_SC_AW_1_INFO;
  wire [181:0]S_SC_AW_1_PAYLD;
  wire [0:0]S_SC_AW_1_RECV;
  wire [0:0]S_SC_AW_1_REQ;
  wire [0:0]S_SC_AW_1_SEND;
  wire [0:0]S_SC_B_1_INFO;
  wire [8:0]S_SC_B_1_PAYLD;
  wire [0:0]S_SC_B_1_RECV;
  wire [0:0]S_SC_B_1_REQ;
  wire [0:0]S_SC_B_1_SEND;
  wire [0:0]S_SC_R_1_INFO;
  wire [54:0]S_SC_R_1_PAYLD;
  wire [0:0]S_SC_R_1_RECV;
  wire [0:0]S_SC_R_1_REQ;
  wire [0:0]S_SC_R_1_SEND;
  wire [0:0]S_SC_W_1_INFO;
  wire [68:0]S_SC_W_1_PAYLD;
  wire [0:0]S_SC_W_1_RECV;
  wire [0:0]S_SC_W_1_REQ;
  wire [0:0]S_SC_W_1_SEND;
  wire [0:0]m02_ar_node_M_SC_INFO;
  wire [181:0]m02_ar_node_M_SC_PAYLD;
  wire [0:0]m02_ar_node_M_SC_RECV;
  wire [0:0]m02_ar_node_M_SC_REQ;
  wire [0:0]m02_ar_node_M_SC_SEND;
  wire [0:0]m02_aw_node_M_SC_INFO;
  wire [181:0]m02_aw_node_M_SC_PAYLD;
  wire [0:0]m02_aw_node_M_SC_RECV;
  wire [0:0]m02_aw_node_M_SC_REQ;
  wire [0:0]m02_aw_node_M_SC_SEND;
  wire [0:0]m02_b_node_M_SC_INFO;
  wire [8:0]m02_b_node_M_SC_PAYLD;
  wire [0:0]m02_b_node_M_SC_RECV;
  wire [0:0]m02_b_node_M_SC_REQ;
  wire [0:0]m02_b_node_M_SC_SEND;
  wire [0:0]m02_r_node_M_SC_INFO;
  wire [54:0]m02_r_node_M_SC_PAYLD;
  wire [0:0]m02_r_node_M_SC_RECV;
  wire [0:0]m02_r_node_M_SC_REQ;
  wire [0:0]m02_r_node_M_SC_SEND;
  wire [0:0]m02_w_node_M_SC_INFO;
  wire [68:0]m02_w_node_M_SC_PAYLD;
  wire [0:0]m02_w_node_M_SC_RECV;
  wire [0:0]m02_w_node_M_SC_REQ;
  wire [0:0]m02_w_node_M_SC_SEND;
  wire m_axi_aclk_1;
  wire m_axi_aresetn_1;
  wire s_axi_aclk_1;
  wire s_axi_aresetn_1;

  assign M_SC_AR_info[0] = m02_ar_node_M_SC_INFO;
  assign M_SC_AR_payld[181:0] = m02_ar_node_M_SC_PAYLD;
  assign M_SC_AR_req[0] = m02_ar_node_M_SC_REQ;
  assign M_SC_AR_send[0] = m02_ar_node_M_SC_SEND;
  assign M_SC_AW_info[0] = m02_aw_node_M_SC_INFO;
  assign M_SC_AW_payld[181:0] = m02_aw_node_M_SC_PAYLD;
  assign M_SC_AW_req[0] = m02_aw_node_M_SC_REQ;
  assign M_SC_AW_send[0] = m02_aw_node_M_SC_SEND;
  assign M_SC_B_info[0] = m02_b_node_M_SC_INFO;
  assign M_SC_B_payld[8:0] = m02_b_node_M_SC_PAYLD;
  assign M_SC_B_req[0] = m02_b_node_M_SC_REQ;
  assign M_SC_B_send[0] = m02_b_node_M_SC_SEND;
  assign M_SC_R_info[0] = m02_r_node_M_SC_INFO;
  assign M_SC_R_payld[54:0] = m02_r_node_M_SC_PAYLD;
  assign M_SC_R_req[0] = m02_r_node_M_SC_REQ;
  assign M_SC_R_send[0] = m02_r_node_M_SC_SEND;
  assign M_SC_W_info[0] = m02_w_node_M_SC_INFO;
  assign M_SC_W_payld[68:0] = m02_w_node_M_SC_PAYLD;
  assign M_SC_W_req[0] = m02_w_node_M_SC_REQ;
  assign M_SC_W_send[0] = m02_w_node_M_SC_SEND;
  assign S_SC_AR_1_INFO = S_SC_AR_info[0];
  assign S_SC_AR_1_PAYLD = S_SC_AR_payld[181:0];
  assign S_SC_AR_1_REQ = S_SC_AR_req[0];
  assign S_SC_AR_1_SEND = S_SC_AR_send[0];
  assign S_SC_AR_recv[0] = S_SC_AR_1_RECV;
  assign S_SC_AW_1_INFO = S_SC_AW_info[0];
  assign S_SC_AW_1_PAYLD = S_SC_AW_payld[181:0];
  assign S_SC_AW_1_REQ = S_SC_AW_req[0];
  assign S_SC_AW_1_SEND = S_SC_AW_send[0];
  assign S_SC_AW_recv[0] = S_SC_AW_1_RECV;
  assign S_SC_B_1_INFO = S_SC_B_info[0];
  assign S_SC_B_1_PAYLD = S_SC_B_payld[8:0];
  assign S_SC_B_1_REQ = S_SC_B_req[0];
  assign S_SC_B_1_SEND = S_SC_B_send[0];
  assign S_SC_B_recv[0] = S_SC_B_1_RECV;
  assign S_SC_R_1_INFO = S_SC_R_info[0];
  assign S_SC_R_1_PAYLD = S_SC_R_payld[54:0];
  assign S_SC_R_1_REQ = S_SC_R_req[0];
  assign S_SC_R_1_SEND = S_SC_R_send[0];
  assign S_SC_R_recv[0] = S_SC_R_1_RECV;
  assign S_SC_W_1_INFO = S_SC_W_info[0];
  assign S_SC_W_1_PAYLD = S_SC_W_payld[68:0];
  assign S_SC_W_1_REQ = S_SC_W_req[0];
  assign S_SC_W_1_SEND = S_SC_W_send[0];
  assign S_SC_W_recv[0] = S_SC_W_1_RECV;
  assign m02_ar_node_M_SC_RECV = M_SC_AR_recv[0];
  assign m02_aw_node_M_SC_RECV = M_SC_AW_recv[0];
  assign m02_b_node_M_SC_RECV = M_SC_B_recv[0];
  assign m02_r_node_M_SC_RECV = M_SC_R_recv[0];
  assign m02_w_node_M_SC_RECV = M_SC_W_recv[0];
  assign m_axi_aclk_1 = m_axi_aclk;
  assign m_axi_aresetn_1 = m_axi_aresetn;
  assign s_axi_aclk_1 = s_axi_aclk;
  assign s_axi_aresetn_1 = s_axi_aresetn;
  bd_afc3_m02arn_0 m02_ar_node
       (.m_sc_aclk(m_axi_aclk_1),
        .m_sc_aresetn(m_axi_aresetn_1),
        .m_sc_info(m02_ar_node_M_SC_INFO),
        .m_sc_payld(m02_ar_node_M_SC_PAYLD),
        .m_sc_recv(m02_ar_node_M_SC_RECV),
        .m_sc_req(m02_ar_node_M_SC_REQ),
        .m_sc_send(m02_ar_node_M_SC_SEND),
        .s_sc_aclk(s_axi_aclk_1),
        .s_sc_aresetn(s_axi_aresetn_1),
        .s_sc_info(S_SC_AR_1_INFO),
        .s_sc_payld(S_SC_AR_1_PAYLD),
        .s_sc_recv(S_SC_AR_1_RECV),
        .s_sc_req(S_SC_AR_1_REQ),
        .s_sc_send(S_SC_AR_1_SEND));
  bd_afc3_m02awn_0 m02_aw_node
       (.m_sc_aclk(m_axi_aclk_1),
        .m_sc_aresetn(m_axi_aresetn_1),
        .m_sc_info(m02_aw_node_M_SC_INFO),
        .m_sc_payld(m02_aw_node_M_SC_PAYLD),
        .m_sc_recv(m02_aw_node_M_SC_RECV),
        .m_sc_req(m02_aw_node_M_SC_REQ),
        .m_sc_send(m02_aw_node_M_SC_SEND),
        .s_sc_aclk(s_axi_aclk_1),
        .s_sc_aresetn(s_axi_aresetn_1),
        .s_sc_info(S_SC_AW_1_INFO),
        .s_sc_payld(S_SC_AW_1_PAYLD),
        .s_sc_recv(S_SC_AW_1_RECV),
        .s_sc_req(S_SC_AW_1_REQ),
        .s_sc_send(S_SC_AW_1_SEND));
  bd_afc3_m02bn_0 m02_b_node
       (.m_sc_aclk(s_axi_aclk_1),
        .m_sc_aresetn(s_axi_aresetn_1),
        .m_sc_info(m02_b_node_M_SC_INFO),
        .m_sc_payld(m02_b_node_M_SC_PAYLD),
        .m_sc_recv(m02_b_node_M_SC_RECV),
        .m_sc_req(m02_b_node_M_SC_REQ),
        .m_sc_send(m02_b_node_M_SC_SEND),
        .s_sc_aclk(m_axi_aclk_1),
        .s_sc_aresetn(m_axi_aresetn_1),
        .s_sc_info(S_SC_B_1_INFO),
        .s_sc_payld(S_SC_B_1_PAYLD),
        .s_sc_recv(S_SC_B_1_RECV),
        .s_sc_req(S_SC_B_1_REQ),
        .s_sc_send(S_SC_B_1_SEND));
  bd_afc3_m02rn_0 m02_r_node
       (.m_sc_aclk(s_axi_aclk_1),
        .m_sc_aresetn(s_axi_aresetn_1),
        .m_sc_info(m02_r_node_M_SC_INFO),
        .m_sc_payld(m02_r_node_M_SC_PAYLD),
        .m_sc_recv(m02_r_node_M_SC_RECV),
        .m_sc_req(m02_r_node_M_SC_REQ),
        .m_sc_send(m02_r_node_M_SC_SEND),
        .s_sc_aclk(m_axi_aclk_1),
        .s_sc_aresetn(m_axi_aresetn_1),
        .s_sc_info(S_SC_R_1_INFO),
        .s_sc_payld(S_SC_R_1_PAYLD),
        .s_sc_recv(S_SC_R_1_RECV),
        .s_sc_req(S_SC_R_1_REQ),
        .s_sc_send(S_SC_R_1_SEND));
  bd_afc3_m02wn_0 m02_w_node
       (.m_sc_aclk(m_axi_aclk_1),
        .m_sc_aresetn(m_axi_aresetn_1),
        .m_sc_info(m02_w_node_M_SC_INFO),
        .m_sc_payld(m02_w_node_M_SC_PAYLD),
        .m_sc_recv(m02_w_node_M_SC_RECV),
        .m_sc_req(m02_w_node_M_SC_REQ),
        .m_sc_send(m02_w_node_M_SC_SEND),
        .s_sc_aclk(s_axi_aclk_1),
        .s_sc_aresetn(s_axi_aresetn_1),
        .s_sc_info(S_SC_W_1_INFO),
        .s_sc_payld(S_SC_W_1_PAYLD),
        .s_sc_recv(S_SC_W_1_RECV),
        .s_sc_req(S_SC_W_1_REQ),
        .s_sc_send(S_SC_W_1_SEND));
endmodule

module m03_exit_pipeline_imp_1N01L5Z
   (aclk,
    aresetn,
    m_axi_araddr,
    m_axi_arburst,
    m_axi_arcache,
    m_axi_arlen,
    m_axi_arlock,
    m_axi_arprot,
    m_axi_arqos,
    m_axi_arready,
    m_axi_arsize,
    m_axi_aruser,
    m_axi_arvalid,
    m_axi_awaddr,
    m_axi_awburst,
    m_axi_awcache,
    m_axi_awlen,
    m_axi_awlock,
    m_axi_awprot,
    m_axi_awqos,
    m_axi_awready,
    m_axi_awsize,
    m_axi_awuser,
    m_axi_awvalid,
    m_axi_bready,
    m_axi_bresp,
    m_axi_bvalid,
    m_axi_rdata,
    m_axi_rlast,
    m_axi_rready,
    m_axi_rresp,
    m_axi_rvalid,
    m_axi_wdata,
    m_axi_wlast,
    m_axi_wready,
    m_axi_wstrb,
    m_axi_wvalid,
    s_axi_araddr,
    s_axi_arcache,
    s_axi_arid,
    s_axi_arlen,
    s_axi_arlock,
    s_axi_arprot,
    s_axi_arqos,
    s_axi_arready,
    s_axi_aruser,
    s_axi_arvalid,
    s_axi_awaddr,
    s_axi_awcache,
    s_axi_awid,
    s_axi_awlen,
    s_axi_awlock,
    s_axi_awprot,
    s_axi_awqos,
    s_axi_awready,
    s_axi_awuser,
    s_axi_awvalid,
    s_axi_bid,
    s_axi_bready,
    s_axi_bresp,
    s_axi_buser,
    s_axi_bvalid,
    s_axi_rdata,
    s_axi_rid,
    s_axi_rlast,
    s_axi_rready,
    s_axi_rresp,
    s_axi_ruser,
    s_axi_rvalid,
    s_axi_wdata,
    s_axi_wlast,
    s_axi_wready,
    s_axi_wstrb,
    s_axi_wuser,
    s_axi_wvalid);
  input aclk;
  input aresetn;
  output [12:0]m_axi_araddr;
  output [1:0]m_axi_arburst;
  output [3:0]m_axi_arcache;
  output [7:0]m_axi_arlen;
  output [0:0]m_axi_arlock;
  output [2:0]m_axi_arprot;
  output [3:0]m_axi_arqos;
  input m_axi_arready;
  output [2:0]m_axi_arsize;
  output [15:0]m_axi_aruser;
  output m_axi_arvalid;
  output [12:0]m_axi_awaddr;
  output [1:0]m_axi_awburst;
  output [3:0]m_axi_awcache;
  output [7:0]m_axi_awlen;
  output [0:0]m_axi_awlock;
  output [2:0]m_axi_awprot;
  output [3:0]m_axi_awqos;
  input m_axi_awready;
  output [2:0]m_axi_awsize;
  output [15:0]m_axi_awuser;
  output m_axi_awvalid;
  output m_axi_bready;
  input [1:0]m_axi_bresp;
  input m_axi_bvalid;
  input [31:0]m_axi_rdata;
  input m_axi_rlast;
  output m_axi_rready;
  input [1:0]m_axi_rresp;
  input m_axi_rvalid;
  output [31:0]m_axi_wdata;
  output m_axi_wlast;
  input m_axi_wready;
  output [3:0]m_axi_wstrb;
  output m_axi_wvalid;
  input [12:0]s_axi_araddr;
  input [3:0]s_axi_arcache;
  input [2:0]s_axi_arid;
  input [7:0]s_axi_arlen;
  input [0:0]s_axi_arlock;
  input [2:0]s_axi_arprot;
  input [3:0]s_axi_arqos;
  output s_axi_arready;
  input [1023:0]s_axi_aruser;
  input s_axi_arvalid;
  input [12:0]s_axi_awaddr;
  input [3:0]s_axi_awcache;
  input [2:0]s_axi_awid;
  input [7:0]s_axi_awlen;
  input [0:0]s_axi_awlock;
  input [2:0]s_axi_awprot;
  input [3:0]s_axi_awqos;
  output s_axi_awready;
  input [1023:0]s_axi_awuser;
  input s_axi_awvalid;
  output [2:0]s_axi_bid;
  input s_axi_bready;
  output [1:0]s_axi_bresp;
  output [1023:0]s_axi_buser;
  output s_axi_bvalid;
  output [31:0]s_axi_rdata;
  output [2:0]s_axi_rid;
  output s_axi_rlast;
  input s_axi_rready;
  output [1:0]s_axi_rresp;
  output [1023:0]s_axi_ruser;
  output s_axi_rvalid;
  input [31:0]s_axi_wdata;
  input s_axi_wlast;
  output s_axi_wready;
  input [3:0]s_axi_wstrb;
  input [1023:0]s_axi_wuser;
  input s_axi_wvalid;

  wire aclk_1;
  wire aresetn_1;
  wire [12:0]m03_exit_M_AXI_ARADDR;
  wire [1:0]m03_exit_M_AXI_ARBURST;
  wire [3:0]m03_exit_M_AXI_ARCACHE;
  wire [7:0]m03_exit_M_AXI_ARLEN;
  wire [0:0]m03_exit_M_AXI_ARLOCK;
  wire [2:0]m03_exit_M_AXI_ARPROT;
  wire [3:0]m03_exit_M_AXI_ARQOS;
  wire m03_exit_M_AXI_ARREADY;
  wire [2:0]m03_exit_M_AXI_ARSIZE;
  wire [15:0]m03_exit_M_AXI_ARUSER;
  wire m03_exit_M_AXI_ARVALID;
  wire [12:0]m03_exit_M_AXI_AWADDR;
  wire [1:0]m03_exit_M_AXI_AWBURST;
  wire [3:0]m03_exit_M_AXI_AWCACHE;
  wire [7:0]m03_exit_M_AXI_AWLEN;
  wire [0:0]m03_exit_M_AXI_AWLOCK;
  wire [2:0]m03_exit_M_AXI_AWPROT;
  wire [3:0]m03_exit_M_AXI_AWQOS;
  wire m03_exit_M_AXI_AWREADY;
  wire [2:0]m03_exit_M_AXI_AWSIZE;
  wire [15:0]m03_exit_M_AXI_AWUSER;
  wire m03_exit_M_AXI_AWVALID;
  wire m03_exit_M_AXI_BREADY;
  wire [1:0]m03_exit_M_AXI_BRESP;
  wire m03_exit_M_AXI_BVALID;
  wire [31:0]m03_exit_M_AXI_RDATA;
  wire m03_exit_M_AXI_RLAST;
  wire m03_exit_M_AXI_RREADY;
  wire [1:0]m03_exit_M_AXI_RRESP;
  wire m03_exit_M_AXI_RVALID;
  wire [31:0]m03_exit_M_AXI_WDATA;
  wire m03_exit_M_AXI_WLAST;
  wire m03_exit_M_AXI_WREADY;
  wire [3:0]m03_exit_M_AXI_WSTRB;
  wire m03_exit_M_AXI_WVALID;
  wire [12:0]s_axi_1_ARADDR;
  wire [3:0]s_axi_1_ARCACHE;
  wire [2:0]s_axi_1_ARID;
  wire [7:0]s_axi_1_ARLEN;
  wire [0:0]s_axi_1_ARLOCK;
  wire [2:0]s_axi_1_ARPROT;
  wire [3:0]s_axi_1_ARQOS;
  wire s_axi_1_ARREADY;
  wire [1023:0]s_axi_1_ARUSER;
  wire s_axi_1_ARVALID;
  wire [12:0]s_axi_1_AWADDR;
  wire [3:0]s_axi_1_AWCACHE;
  wire [2:0]s_axi_1_AWID;
  wire [7:0]s_axi_1_AWLEN;
  wire [0:0]s_axi_1_AWLOCK;
  wire [2:0]s_axi_1_AWPROT;
  wire [3:0]s_axi_1_AWQOS;
  wire s_axi_1_AWREADY;
  wire [1023:0]s_axi_1_AWUSER;
  wire s_axi_1_AWVALID;
  wire [2:0]s_axi_1_BID;
  wire s_axi_1_BREADY;
  wire [1:0]s_axi_1_BRESP;
  wire [1023:0]s_axi_1_BUSER;
  wire s_axi_1_BVALID;
  wire [31:0]s_axi_1_RDATA;
  wire [2:0]s_axi_1_RID;
  wire s_axi_1_RLAST;
  wire s_axi_1_RREADY;
  wire [1:0]s_axi_1_RRESP;
  wire [1023:0]s_axi_1_RUSER;
  wire s_axi_1_RVALID;
  wire [31:0]s_axi_1_WDATA;
  wire s_axi_1_WLAST;
  wire s_axi_1_WREADY;
  wire [3:0]s_axi_1_WSTRB;
  wire [1023:0]s_axi_1_WUSER;
  wire s_axi_1_WVALID;

  assign aclk_1 = aclk;
  assign aresetn_1 = aresetn;
  assign m03_exit_M_AXI_ARREADY = m_axi_arready;
  assign m03_exit_M_AXI_AWREADY = m_axi_awready;
  assign m03_exit_M_AXI_BRESP = m_axi_bresp[1:0];
  assign m03_exit_M_AXI_BVALID = m_axi_bvalid;
  assign m03_exit_M_AXI_RDATA = m_axi_rdata[31:0];
  assign m03_exit_M_AXI_RLAST = m_axi_rlast;
  assign m03_exit_M_AXI_RRESP = m_axi_rresp[1:0];
  assign m03_exit_M_AXI_RVALID = m_axi_rvalid;
  assign m03_exit_M_AXI_WREADY = m_axi_wready;
  assign m_axi_araddr[12:0] = m03_exit_M_AXI_ARADDR;
  assign m_axi_arburst[1:0] = m03_exit_M_AXI_ARBURST;
  assign m_axi_arcache[3:0] = m03_exit_M_AXI_ARCACHE;
  assign m_axi_arlen[7:0] = m03_exit_M_AXI_ARLEN;
  assign m_axi_arlock[0] = m03_exit_M_AXI_ARLOCK;
  assign m_axi_arprot[2:0] = m03_exit_M_AXI_ARPROT;
  assign m_axi_arqos[3:0] = m03_exit_M_AXI_ARQOS;
  assign m_axi_arsize[2:0] = m03_exit_M_AXI_ARSIZE;
  assign m_axi_aruser[15:0] = m03_exit_M_AXI_ARUSER;
  assign m_axi_arvalid = m03_exit_M_AXI_ARVALID;
  assign m_axi_awaddr[12:0] = m03_exit_M_AXI_AWADDR;
  assign m_axi_awburst[1:0] = m03_exit_M_AXI_AWBURST;
  assign m_axi_awcache[3:0] = m03_exit_M_AXI_AWCACHE;
  assign m_axi_awlen[7:0] = m03_exit_M_AXI_AWLEN;
  assign m_axi_awlock[0] = m03_exit_M_AXI_AWLOCK;
  assign m_axi_awprot[2:0] = m03_exit_M_AXI_AWPROT;
  assign m_axi_awqos[3:0] = m03_exit_M_AXI_AWQOS;
  assign m_axi_awsize[2:0] = m03_exit_M_AXI_AWSIZE;
  assign m_axi_awuser[15:0] = m03_exit_M_AXI_AWUSER;
  assign m_axi_awvalid = m03_exit_M_AXI_AWVALID;
  assign m_axi_bready = m03_exit_M_AXI_BREADY;
  assign m_axi_rready = m03_exit_M_AXI_RREADY;
  assign m_axi_wdata[31:0] = m03_exit_M_AXI_WDATA;
  assign m_axi_wlast = m03_exit_M_AXI_WLAST;
  assign m_axi_wstrb[3:0] = m03_exit_M_AXI_WSTRB;
  assign m_axi_wvalid = m03_exit_M_AXI_WVALID;
  assign s_axi_1_ARADDR = s_axi_araddr[12:0];
  assign s_axi_1_ARCACHE = s_axi_arcache[3:0];
  assign s_axi_1_ARID = s_axi_arid[2:0];
  assign s_axi_1_ARLEN = s_axi_arlen[7:0];
  assign s_axi_1_ARLOCK = s_axi_arlock[0];
  assign s_axi_1_ARPROT = s_axi_arprot[2:0];
  assign s_axi_1_ARQOS = s_axi_arqos[3:0];
  assign s_axi_1_ARUSER = s_axi_aruser[1023:0];
  assign s_axi_1_ARVALID = s_axi_arvalid;
  assign s_axi_1_AWADDR = s_axi_awaddr[12:0];
  assign s_axi_1_AWCACHE = s_axi_awcache[3:0];
  assign s_axi_1_AWID = s_axi_awid[2:0];
  assign s_axi_1_AWLEN = s_axi_awlen[7:0];
  assign s_axi_1_AWLOCK = s_axi_awlock[0];
  assign s_axi_1_AWPROT = s_axi_awprot[2:0];
  assign s_axi_1_AWQOS = s_axi_awqos[3:0];
  assign s_axi_1_AWUSER = s_axi_awuser[1023:0];
  assign s_axi_1_AWVALID = s_axi_awvalid;
  assign s_axi_1_BREADY = s_axi_bready;
  assign s_axi_1_RREADY = s_axi_rready;
  assign s_axi_1_WDATA = s_axi_wdata[31:0];
  assign s_axi_1_WLAST = s_axi_wlast;
  assign s_axi_1_WSTRB = s_axi_wstrb[3:0];
  assign s_axi_1_WUSER = s_axi_wuser[1023:0];
  assign s_axi_1_WVALID = s_axi_wvalid;
  assign s_axi_arready = s_axi_1_ARREADY;
  assign s_axi_awready = s_axi_1_AWREADY;
  assign s_axi_bid[2:0] = s_axi_1_BID;
  assign s_axi_bresp[1:0] = s_axi_1_BRESP;
  assign s_axi_buser[1023:0] = s_axi_1_BUSER;
  assign s_axi_bvalid = s_axi_1_BVALID;
  assign s_axi_rdata[31:0] = s_axi_1_RDATA;
  assign s_axi_rid[2:0] = s_axi_1_RID;
  assign s_axi_rlast = s_axi_1_RLAST;
  assign s_axi_rresp[1:0] = s_axi_1_RRESP;
  assign s_axi_ruser[1023:0] = s_axi_1_RUSER;
  assign s_axi_rvalid = s_axi_1_RVALID;
  assign s_axi_wready = s_axi_1_WREADY;
  bd_afc3_m03e_0 m03_exit
       (.aclk(aclk_1),
        .aresetn(aresetn_1),
        .m_axi_araddr(m03_exit_M_AXI_ARADDR),
        .m_axi_arburst(m03_exit_M_AXI_ARBURST),
        .m_axi_arcache(m03_exit_M_AXI_ARCACHE),
        .m_axi_arlen(m03_exit_M_AXI_ARLEN),
        .m_axi_arlock(m03_exit_M_AXI_ARLOCK),
        .m_axi_arprot(m03_exit_M_AXI_ARPROT),
        .m_axi_arqos(m03_exit_M_AXI_ARQOS),
        .m_axi_arready(m03_exit_M_AXI_ARREADY),
        .m_axi_arsize(m03_exit_M_AXI_ARSIZE),
        .m_axi_aruser(m03_exit_M_AXI_ARUSER),
        .m_axi_arvalid(m03_exit_M_AXI_ARVALID),
        .m_axi_awaddr(m03_exit_M_AXI_AWADDR),
        .m_axi_awburst(m03_exit_M_AXI_AWBURST),
        .m_axi_awcache(m03_exit_M_AXI_AWCACHE),
        .m_axi_awlen(m03_exit_M_AXI_AWLEN),
        .m_axi_awlock(m03_exit_M_AXI_AWLOCK),
        .m_axi_awprot(m03_exit_M_AXI_AWPROT),
        .m_axi_awqos(m03_exit_M_AXI_AWQOS),
        .m_axi_awready(m03_exit_M_AXI_AWREADY),
        .m_axi_awsize(m03_exit_M_AXI_AWSIZE),
        .m_axi_awuser(m03_exit_M_AXI_AWUSER),
        .m_axi_awvalid(m03_exit_M_AXI_AWVALID),
        .m_axi_bready(m03_exit_M_AXI_BREADY),
        .m_axi_bresp(m03_exit_M_AXI_BRESP),
        .m_axi_bvalid(m03_exit_M_AXI_BVALID),
        .m_axi_rdata(m03_exit_M_AXI_RDATA),
        .m_axi_rlast(m03_exit_M_AXI_RLAST),
        .m_axi_rready(m03_exit_M_AXI_RREADY),
        .m_axi_rresp(m03_exit_M_AXI_RRESP),
        .m_axi_rvalid(m03_exit_M_AXI_RVALID),
        .m_axi_wdata(m03_exit_M_AXI_WDATA),
        .m_axi_wlast(m03_exit_M_AXI_WLAST),
        .m_axi_wready(m03_exit_M_AXI_WREADY),
        .m_axi_wstrb(m03_exit_M_AXI_WSTRB),
        .m_axi_wvalid(m03_exit_M_AXI_WVALID),
        .s_axi_araddr(s_axi_1_ARADDR),
        .s_axi_arcache(s_axi_1_ARCACHE),
        .s_axi_arid(s_axi_1_ARID),
        .s_axi_arlen(s_axi_1_ARLEN),
        .s_axi_arlock(s_axi_1_ARLOCK),
        .s_axi_arprot(s_axi_1_ARPROT),
        .s_axi_arqos(s_axi_1_ARQOS),
        .s_axi_arready(s_axi_1_ARREADY),
        .s_axi_aruser(s_axi_1_ARUSER),
        .s_axi_arvalid(s_axi_1_ARVALID),
        .s_axi_awaddr(s_axi_1_AWADDR),
        .s_axi_awcache(s_axi_1_AWCACHE),
        .s_axi_awid(s_axi_1_AWID),
        .s_axi_awlen(s_axi_1_AWLEN),
        .s_axi_awlock(s_axi_1_AWLOCK),
        .s_axi_awprot(s_axi_1_AWPROT),
        .s_axi_awqos(s_axi_1_AWQOS),
        .s_axi_awready(s_axi_1_AWREADY),
        .s_axi_awuser(s_axi_1_AWUSER),
        .s_axi_awvalid(s_axi_1_AWVALID),
        .s_axi_bid(s_axi_1_BID),
        .s_axi_bready(s_axi_1_BREADY),
        .s_axi_bresp(s_axi_1_BRESP),
        .s_axi_buser(s_axi_1_BUSER),
        .s_axi_bvalid(s_axi_1_BVALID),
        .s_axi_rdata(s_axi_1_RDATA),
        .s_axi_rid(s_axi_1_RID),
        .s_axi_rlast(s_axi_1_RLAST),
        .s_axi_rready(s_axi_1_RREADY),
        .s_axi_rresp(s_axi_1_RRESP),
        .s_axi_ruser(s_axi_1_RUSER),
        .s_axi_rvalid(s_axi_1_RVALID),
        .s_axi_wdata(s_axi_1_WDATA),
        .s_axi_wlast(s_axi_1_WLAST),
        .s_axi_wready(s_axi_1_WREADY),
        .s_axi_wstrb(s_axi_1_WSTRB),
        .s_axi_wuser(s_axi_1_WUSER),
        .s_axi_wvalid(s_axi_1_WVALID));
endmodule

module m03_nodes_imp_1HP4O9C
   (M_SC_AR_info,
    M_SC_AR_payld,
    M_SC_AR_recv,
    M_SC_AR_req,
    M_SC_AR_send,
    M_SC_AW_info,
    M_SC_AW_payld,
    M_SC_AW_recv,
    M_SC_AW_req,
    M_SC_AW_send,
    M_SC_B_info,
    M_SC_B_payld,
    M_SC_B_recv,
    M_SC_B_req,
    M_SC_B_send,
    M_SC_R_info,
    M_SC_R_payld,
    M_SC_R_recv,
    M_SC_R_req,
    M_SC_R_send,
    M_SC_W_info,
    M_SC_W_payld,
    M_SC_W_recv,
    M_SC_W_req,
    M_SC_W_send,
    S_SC_AR_info,
    S_SC_AR_payld,
    S_SC_AR_recv,
    S_SC_AR_req,
    S_SC_AR_send,
    S_SC_AW_info,
    S_SC_AW_payld,
    S_SC_AW_recv,
    S_SC_AW_req,
    S_SC_AW_send,
    S_SC_B_info,
    S_SC_B_payld,
    S_SC_B_recv,
    S_SC_B_req,
    S_SC_B_send,
    S_SC_R_info,
    S_SC_R_payld,
    S_SC_R_recv,
    S_SC_R_req,
    S_SC_R_send,
    S_SC_W_info,
    S_SC_W_payld,
    S_SC_W_recv,
    S_SC_W_req,
    S_SC_W_send,
    m_axi_aclk,
    m_axi_aresetn,
    s_axi_aclk,
    s_axi_aresetn);
  output [0:0]M_SC_AR_info;
  output [181:0]M_SC_AR_payld;
  input [0:0]M_SC_AR_recv;
  output [0:0]M_SC_AR_req;
  output [0:0]M_SC_AR_send;
  output [0:0]M_SC_AW_info;
  output [181:0]M_SC_AW_payld;
  input [0:0]M_SC_AW_recv;
  output [0:0]M_SC_AW_req;
  output [0:0]M_SC_AW_send;
  output [0:0]M_SC_B_info;
  output [8:0]M_SC_B_payld;
  input [0:0]M_SC_B_recv;
  output [0:0]M_SC_B_req;
  output [0:0]M_SC_B_send;
  output [0:0]M_SC_R_info;
  output [54:0]M_SC_R_payld;
  input [0:0]M_SC_R_recv;
  output [0:0]M_SC_R_req;
  output [0:0]M_SC_R_send;
  output [0:0]M_SC_W_info;
  output [68:0]M_SC_W_payld;
  input [0:0]M_SC_W_recv;
  output [0:0]M_SC_W_req;
  output [0:0]M_SC_W_send;
  input [0:0]S_SC_AR_info;
  input [181:0]S_SC_AR_payld;
  output [0:0]S_SC_AR_recv;
  input [0:0]S_SC_AR_req;
  input [0:0]S_SC_AR_send;
  input [0:0]S_SC_AW_info;
  input [181:0]S_SC_AW_payld;
  output [0:0]S_SC_AW_recv;
  input [0:0]S_SC_AW_req;
  input [0:0]S_SC_AW_send;
  input [0:0]S_SC_B_info;
  input [8:0]S_SC_B_payld;
  output [0:0]S_SC_B_recv;
  input [0:0]S_SC_B_req;
  input [0:0]S_SC_B_send;
  input [0:0]S_SC_R_info;
  input [54:0]S_SC_R_payld;
  output [0:0]S_SC_R_recv;
  input [0:0]S_SC_R_req;
  input [0:0]S_SC_R_send;
  input [0:0]S_SC_W_info;
  input [68:0]S_SC_W_payld;
  output [0:0]S_SC_W_recv;
  input [0:0]S_SC_W_req;
  input [0:0]S_SC_W_send;
  input m_axi_aclk;
  input m_axi_aresetn;
  input s_axi_aclk;
  input s_axi_aresetn;

  wire [0:0]S_SC_AR_1_INFO;
  wire [181:0]S_SC_AR_1_PAYLD;
  wire [0:0]S_SC_AR_1_RECV;
  wire [0:0]S_SC_AR_1_REQ;
  wire [0:0]S_SC_AR_1_SEND;
  wire [0:0]S_SC_AW_1_INFO;
  wire [181:0]S_SC_AW_1_PAYLD;
  wire [0:0]S_SC_AW_1_RECV;
  wire [0:0]S_SC_AW_1_REQ;
  wire [0:0]S_SC_AW_1_SEND;
  wire [0:0]S_SC_B_1_INFO;
  wire [8:0]S_SC_B_1_PAYLD;
  wire [0:0]S_SC_B_1_RECV;
  wire [0:0]S_SC_B_1_REQ;
  wire [0:0]S_SC_B_1_SEND;
  wire [0:0]S_SC_R_1_INFO;
  wire [54:0]S_SC_R_1_PAYLD;
  wire [0:0]S_SC_R_1_RECV;
  wire [0:0]S_SC_R_1_REQ;
  wire [0:0]S_SC_R_1_SEND;
  wire [0:0]S_SC_W_1_INFO;
  wire [68:0]S_SC_W_1_PAYLD;
  wire [0:0]S_SC_W_1_RECV;
  wire [0:0]S_SC_W_1_REQ;
  wire [0:0]S_SC_W_1_SEND;
  wire [0:0]m03_ar_node_M_SC_INFO;
  wire [181:0]m03_ar_node_M_SC_PAYLD;
  wire [0:0]m03_ar_node_M_SC_RECV;
  wire [0:0]m03_ar_node_M_SC_REQ;
  wire [0:0]m03_ar_node_M_SC_SEND;
  wire [0:0]m03_aw_node_M_SC_INFO;
  wire [181:0]m03_aw_node_M_SC_PAYLD;
  wire [0:0]m03_aw_node_M_SC_RECV;
  wire [0:0]m03_aw_node_M_SC_REQ;
  wire [0:0]m03_aw_node_M_SC_SEND;
  wire [0:0]m03_b_node_M_SC_INFO;
  wire [8:0]m03_b_node_M_SC_PAYLD;
  wire [0:0]m03_b_node_M_SC_RECV;
  wire [0:0]m03_b_node_M_SC_REQ;
  wire [0:0]m03_b_node_M_SC_SEND;
  wire [0:0]m03_r_node_M_SC_INFO;
  wire [54:0]m03_r_node_M_SC_PAYLD;
  wire [0:0]m03_r_node_M_SC_RECV;
  wire [0:0]m03_r_node_M_SC_REQ;
  wire [0:0]m03_r_node_M_SC_SEND;
  wire [0:0]m03_w_node_M_SC_INFO;
  wire [68:0]m03_w_node_M_SC_PAYLD;
  wire [0:0]m03_w_node_M_SC_RECV;
  wire [0:0]m03_w_node_M_SC_REQ;
  wire [0:0]m03_w_node_M_SC_SEND;
  wire m_axi_aclk_1;
  wire m_axi_aresetn_1;
  wire s_axi_aclk_1;
  wire s_axi_aresetn_1;

  assign M_SC_AR_info[0] = m03_ar_node_M_SC_INFO;
  assign M_SC_AR_payld[181:0] = m03_ar_node_M_SC_PAYLD;
  assign M_SC_AR_req[0] = m03_ar_node_M_SC_REQ;
  assign M_SC_AR_send[0] = m03_ar_node_M_SC_SEND;
  assign M_SC_AW_info[0] = m03_aw_node_M_SC_INFO;
  assign M_SC_AW_payld[181:0] = m03_aw_node_M_SC_PAYLD;
  assign M_SC_AW_req[0] = m03_aw_node_M_SC_REQ;
  assign M_SC_AW_send[0] = m03_aw_node_M_SC_SEND;
  assign M_SC_B_info[0] = m03_b_node_M_SC_INFO;
  assign M_SC_B_payld[8:0] = m03_b_node_M_SC_PAYLD;
  assign M_SC_B_req[0] = m03_b_node_M_SC_REQ;
  assign M_SC_B_send[0] = m03_b_node_M_SC_SEND;
  assign M_SC_R_info[0] = m03_r_node_M_SC_INFO;
  assign M_SC_R_payld[54:0] = m03_r_node_M_SC_PAYLD;
  assign M_SC_R_req[0] = m03_r_node_M_SC_REQ;
  assign M_SC_R_send[0] = m03_r_node_M_SC_SEND;
  assign M_SC_W_info[0] = m03_w_node_M_SC_INFO;
  assign M_SC_W_payld[68:0] = m03_w_node_M_SC_PAYLD;
  assign M_SC_W_req[0] = m03_w_node_M_SC_REQ;
  assign M_SC_W_send[0] = m03_w_node_M_SC_SEND;
  assign S_SC_AR_1_INFO = S_SC_AR_info[0];
  assign S_SC_AR_1_PAYLD = S_SC_AR_payld[181:0];
  assign S_SC_AR_1_REQ = S_SC_AR_req[0];
  assign S_SC_AR_1_SEND = S_SC_AR_send[0];
  assign S_SC_AR_recv[0] = S_SC_AR_1_RECV;
  assign S_SC_AW_1_INFO = S_SC_AW_info[0];
  assign S_SC_AW_1_PAYLD = S_SC_AW_payld[181:0];
  assign S_SC_AW_1_REQ = S_SC_AW_req[0];
  assign S_SC_AW_1_SEND = S_SC_AW_send[0];
  assign S_SC_AW_recv[0] = S_SC_AW_1_RECV;
  assign S_SC_B_1_INFO = S_SC_B_info[0];
  assign S_SC_B_1_PAYLD = S_SC_B_payld[8:0];
  assign S_SC_B_1_REQ = S_SC_B_req[0];
  assign S_SC_B_1_SEND = S_SC_B_send[0];
  assign S_SC_B_recv[0] = S_SC_B_1_RECV;
  assign S_SC_R_1_INFO = S_SC_R_info[0];
  assign S_SC_R_1_PAYLD = S_SC_R_payld[54:0];
  assign S_SC_R_1_REQ = S_SC_R_req[0];
  assign S_SC_R_1_SEND = S_SC_R_send[0];
  assign S_SC_R_recv[0] = S_SC_R_1_RECV;
  assign S_SC_W_1_INFO = S_SC_W_info[0];
  assign S_SC_W_1_PAYLD = S_SC_W_payld[68:0];
  assign S_SC_W_1_REQ = S_SC_W_req[0];
  assign S_SC_W_1_SEND = S_SC_W_send[0];
  assign S_SC_W_recv[0] = S_SC_W_1_RECV;
  assign m03_ar_node_M_SC_RECV = M_SC_AR_recv[0];
  assign m03_aw_node_M_SC_RECV = M_SC_AW_recv[0];
  assign m03_b_node_M_SC_RECV = M_SC_B_recv[0];
  assign m03_r_node_M_SC_RECV = M_SC_R_recv[0];
  assign m03_w_node_M_SC_RECV = M_SC_W_recv[0];
  assign m_axi_aclk_1 = m_axi_aclk;
  assign m_axi_aresetn_1 = m_axi_aresetn;
  assign s_axi_aclk_1 = s_axi_aclk;
  assign s_axi_aresetn_1 = s_axi_aresetn;
  bd_afc3_m03arn_0 m03_ar_node
       (.m_sc_aclk(m_axi_aclk_1),
        .m_sc_aresetn(m_axi_aresetn_1),
        .m_sc_info(m03_ar_node_M_SC_INFO),
        .m_sc_payld(m03_ar_node_M_SC_PAYLD),
        .m_sc_recv(m03_ar_node_M_SC_RECV),
        .m_sc_req(m03_ar_node_M_SC_REQ),
        .m_sc_send(m03_ar_node_M_SC_SEND),
        .s_sc_aclk(s_axi_aclk_1),
        .s_sc_aresetn(s_axi_aresetn_1),
        .s_sc_info(S_SC_AR_1_INFO),
        .s_sc_payld(S_SC_AR_1_PAYLD),
        .s_sc_recv(S_SC_AR_1_RECV),
        .s_sc_req(S_SC_AR_1_REQ),
        .s_sc_send(S_SC_AR_1_SEND));
  bd_afc3_m03awn_0 m03_aw_node
       (.m_sc_aclk(m_axi_aclk_1),
        .m_sc_aresetn(m_axi_aresetn_1),
        .m_sc_info(m03_aw_node_M_SC_INFO),
        .m_sc_payld(m03_aw_node_M_SC_PAYLD),
        .m_sc_recv(m03_aw_node_M_SC_RECV),
        .m_sc_req(m03_aw_node_M_SC_REQ),
        .m_sc_send(m03_aw_node_M_SC_SEND),
        .s_sc_aclk(s_axi_aclk_1),
        .s_sc_aresetn(s_axi_aresetn_1),
        .s_sc_info(S_SC_AW_1_INFO),
        .s_sc_payld(S_SC_AW_1_PAYLD),
        .s_sc_recv(S_SC_AW_1_RECV),
        .s_sc_req(S_SC_AW_1_REQ),
        .s_sc_send(S_SC_AW_1_SEND));
  bd_afc3_m03bn_0 m03_b_node
       (.m_sc_aclk(s_axi_aclk_1),
        .m_sc_aresetn(s_axi_aresetn_1),
        .m_sc_info(m03_b_node_M_SC_INFO),
        .m_sc_payld(m03_b_node_M_SC_PAYLD),
        .m_sc_recv(m03_b_node_M_SC_RECV),
        .m_sc_req(m03_b_node_M_SC_REQ),
        .m_sc_send(m03_b_node_M_SC_SEND),
        .s_sc_aclk(m_axi_aclk_1),
        .s_sc_aresetn(m_axi_aresetn_1),
        .s_sc_info(S_SC_B_1_INFO),
        .s_sc_payld(S_SC_B_1_PAYLD),
        .s_sc_recv(S_SC_B_1_RECV),
        .s_sc_req(S_SC_B_1_REQ),
        .s_sc_send(S_SC_B_1_SEND));
  bd_afc3_m03rn_0 m03_r_node
       (.m_sc_aclk(s_axi_aclk_1),
        .m_sc_aresetn(s_axi_aresetn_1),
        .m_sc_info(m03_r_node_M_SC_INFO),
        .m_sc_payld(m03_r_node_M_SC_PAYLD),
        .m_sc_recv(m03_r_node_M_SC_RECV),
        .m_sc_req(m03_r_node_M_SC_REQ),
        .m_sc_send(m03_r_node_M_SC_SEND),
        .s_sc_aclk(m_axi_aclk_1),
        .s_sc_aresetn(m_axi_aresetn_1),
        .s_sc_info(S_SC_R_1_INFO),
        .s_sc_payld(S_SC_R_1_PAYLD),
        .s_sc_recv(S_SC_R_1_RECV),
        .s_sc_req(S_SC_R_1_REQ),
        .s_sc_send(S_SC_R_1_SEND));
  bd_afc3_m03wn_0 m03_w_node
       (.m_sc_aclk(m_axi_aclk_1),
        .m_sc_aresetn(m_axi_aresetn_1),
        .m_sc_info(m03_w_node_M_SC_INFO),
        .m_sc_payld(m03_w_node_M_SC_PAYLD),
        .m_sc_recv(m03_w_node_M_SC_RECV),
        .m_sc_req(m03_w_node_M_SC_REQ),
        .m_sc_send(m03_w_node_M_SC_SEND),
        .s_sc_aclk(s_axi_aclk_1),
        .s_sc_aresetn(s_axi_aresetn_1),
        .s_sc_info(S_SC_W_1_INFO),
        .s_sc_payld(S_SC_W_1_PAYLD),
        .s_sc_recv(S_SC_W_1_RECV),
        .s_sc_req(S_SC_W_1_REQ),
        .s_sc_send(S_SC_W_1_SEND));
endmodule

module m04_exit_pipeline_imp_1D8WVFR
   (aclk,
    aresetn,
    m_axi_araddr,
    m_axi_arburst,
    m_axi_arcache,
    m_axi_arlen,
    m_axi_arlock,
    m_axi_arprot,
    m_axi_arqos,
    m_axi_arready,
    m_axi_arsize,
    m_axi_aruser,
    m_axi_arvalid,
    m_axi_awaddr,
    m_axi_awburst,
    m_axi_awcache,
    m_axi_awlen,
    m_axi_awlock,
    m_axi_awprot,
    m_axi_awqos,
    m_axi_awready,
    m_axi_awsize,
    m_axi_awuser,
    m_axi_awvalid,
    m_axi_bready,
    m_axi_bresp,
    m_axi_bvalid,
    m_axi_rdata,
    m_axi_rlast,
    m_axi_rready,
    m_axi_rresp,
    m_axi_rvalid,
    m_axi_wdata,
    m_axi_wlast,
    m_axi_wready,
    m_axi_wstrb,
    m_axi_wvalid,
    s_axi_araddr,
    s_axi_arcache,
    s_axi_arid,
    s_axi_arlen,
    s_axi_arlock,
    s_axi_arprot,
    s_axi_arqos,
    s_axi_arready,
    s_axi_aruser,
    s_axi_arvalid,
    s_axi_awaddr,
    s_axi_awcache,
    s_axi_awid,
    s_axi_awlen,
    s_axi_awlock,
    s_axi_awprot,
    s_axi_awqos,
    s_axi_awready,
    s_axi_awuser,
    s_axi_awvalid,
    s_axi_bid,
    s_axi_bready,
    s_axi_bresp,
    s_axi_buser,
    s_axi_bvalid,
    s_axi_rdata,
    s_axi_rid,
    s_axi_rlast,
    s_axi_rready,
    s_axi_rresp,
    s_axi_ruser,
    s_axi_rvalid,
    s_axi_wdata,
    s_axi_wlast,
    s_axi_wready,
    s_axi_wstrb,
    s_axi_wuser,
    s_axi_wvalid);
  input aclk;
  input aresetn;
  output [12:0]m_axi_araddr;
  output [1:0]m_axi_arburst;
  output [3:0]m_axi_arcache;
  output [7:0]m_axi_arlen;
  output [0:0]m_axi_arlock;
  output [2:0]m_axi_arprot;
  output [3:0]m_axi_arqos;
  input m_axi_arready;
  output [2:0]m_axi_arsize;
  output [15:0]m_axi_aruser;
  output m_axi_arvalid;
  output [12:0]m_axi_awaddr;
  output [1:0]m_axi_awburst;
  output [3:0]m_axi_awcache;
  output [7:0]m_axi_awlen;
  output [0:0]m_axi_awlock;
  output [2:0]m_axi_awprot;
  output [3:0]m_axi_awqos;
  input m_axi_awready;
  output [2:0]m_axi_awsize;
  output [15:0]m_axi_awuser;
  output m_axi_awvalid;
  output m_axi_bready;
  input [1:0]m_axi_bresp;
  input m_axi_bvalid;
  input [31:0]m_axi_rdata;
  input m_axi_rlast;
  output m_axi_rready;
  input [1:0]m_axi_rresp;
  input m_axi_rvalid;
  output [31:0]m_axi_wdata;
  output m_axi_wlast;
  input m_axi_wready;
  output [3:0]m_axi_wstrb;
  output m_axi_wvalid;
  input [12:0]s_axi_araddr;
  input [3:0]s_axi_arcache;
  input [2:0]s_axi_arid;
  input [7:0]s_axi_arlen;
  input [0:0]s_axi_arlock;
  input [2:0]s_axi_arprot;
  input [3:0]s_axi_arqos;
  output s_axi_arready;
  input [1023:0]s_axi_aruser;
  input s_axi_arvalid;
  input [12:0]s_axi_awaddr;
  input [3:0]s_axi_awcache;
  input [2:0]s_axi_awid;
  input [7:0]s_axi_awlen;
  input [0:0]s_axi_awlock;
  input [2:0]s_axi_awprot;
  input [3:0]s_axi_awqos;
  output s_axi_awready;
  input [1023:0]s_axi_awuser;
  input s_axi_awvalid;
  output [2:0]s_axi_bid;
  input s_axi_bready;
  output [1:0]s_axi_bresp;
  output [1023:0]s_axi_buser;
  output s_axi_bvalid;
  output [31:0]s_axi_rdata;
  output [2:0]s_axi_rid;
  output s_axi_rlast;
  input s_axi_rready;
  output [1:0]s_axi_rresp;
  output [1023:0]s_axi_ruser;
  output s_axi_rvalid;
  input [31:0]s_axi_wdata;
  input s_axi_wlast;
  output s_axi_wready;
  input [3:0]s_axi_wstrb;
  input [1023:0]s_axi_wuser;
  input s_axi_wvalid;

  wire aclk_1;
  wire aresetn_1;
  wire [12:0]m04_exit_M_AXI_ARADDR;
  wire [1:0]m04_exit_M_AXI_ARBURST;
  wire [3:0]m04_exit_M_AXI_ARCACHE;
  wire [7:0]m04_exit_M_AXI_ARLEN;
  wire [0:0]m04_exit_M_AXI_ARLOCK;
  wire [2:0]m04_exit_M_AXI_ARPROT;
  wire [3:0]m04_exit_M_AXI_ARQOS;
  wire m04_exit_M_AXI_ARREADY;
  wire [2:0]m04_exit_M_AXI_ARSIZE;
  wire [15:0]m04_exit_M_AXI_ARUSER;
  wire m04_exit_M_AXI_ARVALID;
  wire [12:0]m04_exit_M_AXI_AWADDR;
  wire [1:0]m04_exit_M_AXI_AWBURST;
  wire [3:0]m04_exit_M_AXI_AWCACHE;
  wire [7:0]m04_exit_M_AXI_AWLEN;
  wire [0:0]m04_exit_M_AXI_AWLOCK;
  wire [2:0]m04_exit_M_AXI_AWPROT;
  wire [3:0]m04_exit_M_AXI_AWQOS;
  wire m04_exit_M_AXI_AWREADY;
  wire [2:0]m04_exit_M_AXI_AWSIZE;
  wire [15:0]m04_exit_M_AXI_AWUSER;
  wire m04_exit_M_AXI_AWVALID;
  wire m04_exit_M_AXI_BREADY;
  wire [1:0]m04_exit_M_AXI_BRESP;
  wire m04_exit_M_AXI_BVALID;
  wire [31:0]m04_exit_M_AXI_RDATA;
  wire m04_exit_M_AXI_RLAST;
  wire m04_exit_M_AXI_RREADY;
  wire [1:0]m04_exit_M_AXI_RRESP;
  wire m04_exit_M_AXI_RVALID;
  wire [31:0]m04_exit_M_AXI_WDATA;
  wire m04_exit_M_AXI_WLAST;
  wire m04_exit_M_AXI_WREADY;
  wire [3:0]m04_exit_M_AXI_WSTRB;
  wire m04_exit_M_AXI_WVALID;
  wire [12:0]s_axi_1_ARADDR;
  wire [3:0]s_axi_1_ARCACHE;
  wire [2:0]s_axi_1_ARID;
  wire [7:0]s_axi_1_ARLEN;
  wire [0:0]s_axi_1_ARLOCK;
  wire [2:0]s_axi_1_ARPROT;
  wire [3:0]s_axi_1_ARQOS;
  wire s_axi_1_ARREADY;
  wire [1023:0]s_axi_1_ARUSER;
  wire s_axi_1_ARVALID;
  wire [12:0]s_axi_1_AWADDR;
  wire [3:0]s_axi_1_AWCACHE;
  wire [2:0]s_axi_1_AWID;
  wire [7:0]s_axi_1_AWLEN;
  wire [0:0]s_axi_1_AWLOCK;
  wire [2:0]s_axi_1_AWPROT;
  wire [3:0]s_axi_1_AWQOS;
  wire s_axi_1_AWREADY;
  wire [1023:0]s_axi_1_AWUSER;
  wire s_axi_1_AWVALID;
  wire [2:0]s_axi_1_BID;
  wire s_axi_1_BREADY;
  wire [1:0]s_axi_1_BRESP;
  wire [1023:0]s_axi_1_BUSER;
  wire s_axi_1_BVALID;
  wire [31:0]s_axi_1_RDATA;
  wire [2:0]s_axi_1_RID;
  wire s_axi_1_RLAST;
  wire s_axi_1_RREADY;
  wire [1:0]s_axi_1_RRESP;
  wire [1023:0]s_axi_1_RUSER;
  wire s_axi_1_RVALID;
  wire [31:0]s_axi_1_WDATA;
  wire s_axi_1_WLAST;
  wire s_axi_1_WREADY;
  wire [3:0]s_axi_1_WSTRB;
  wire [1023:0]s_axi_1_WUSER;
  wire s_axi_1_WVALID;

  assign aclk_1 = aclk;
  assign aresetn_1 = aresetn;
  assign m04_exit_M_AXI_ARREADY = m_axi_arready;
  assign m04_exit_M_AXI_AWREADY = m_axi_awready;
  assign m04_exit_M_AXI_BRESP = m_axi_bresp[1:0];
  assign m04_exit_M_AXI_BVALID = m_axi_bvalid;
  assign m04_exit_M_AXI_RDATA = m_axi_rdata[31:0];
  assign m04_exit_M_AXI_RLAST = m_axi_rlast;
  assign m04_exit_M_AXI_RRESP = m_axi_rresp[1:0];
  assign m04_exit_M_AXI_RVALID = m_axi_rvalid;
  assign m04_exit_M_AXI_WREADY = m_axi_wready;
  assign m_axi_araddr[12:0] = m04_exit_M_AXI_ARADDR;
  assign m_axi_arburst[1:0] = m04_exit_M_AXI_ARBURST;
  assign m_axi_arcache[3:0] = m04_exit_M_AXI_ARCACHE;
  assign m_axi_arlen[7:0] = m04_exit_M_AXI_ARLEN;
  assign m_axi_arlock[0] = m04_exit_M_AXI_ARLOCK;
  assign m_axi_arprot[2:0] = m04_exit_M_AXI_ARPROT;
  assign m_axi_arqos[3:0] = m04_exit_M_AXI_ARQOS;
  assign m_axi_arsize[2:0] = m04_exit_M_AXI_ARSIZE;
  assign m_axi_aruser[15:0] = m04_exit_M_AXI_ARUSER;
  assign m_axi_arvalid = m04_exit_M_AXI_ARVALID;
  assign m_axi_awaddr[12:0] = m04_exit_M_AXI_AWADDR;
  assign m_axi_awburst[1:0] = m04_exit_M_AXI_AWBURST;
  assign m_axi_awcache[3:0] = m04_exit_M_AXI_AWCACHE;
  assign m_axi_awlen[7:0] = m04_exit_M_AXI_AWLEN;
  assign m_axi_awlock[0] = m04_exit_M_AXI_AWLOCK;
  assign m_axi_awprot[2:0] = m04_exit_M_AXI_AWPROT;
  assign m_axi_awqos[3:0] = m04_exit_M_AXI_AWQOS;
  assign m_axi_awsize[2:0] = m04_exit_M_AXI_AWSIZE;
  assign m_axi_awuser[15:0] = m04_exit_M_AXI_AWUSER;
  assign m_axi_awvalid = m04_exit_M_AXI_AWVALID;
  assign m_axi_bready = m04_exit_M_AXI_BREADY;
  assign m_axi_rready = m04_exit_M_AXI_RREADY;
  assign m_axi_wdata[31:0] = m04_exit_M_AXI_WDATA;
  assign m_axi_wlast = m04_exit_M_AXI_WLAST;
  assign m_axi_wstrb[3:0] = m04_exit_M_AXI_WSTRB;
  assign m_axi_wvalid = m04_exit_M_AXI_WVALID;
  assign s_axi_1_ARADDR = s_axi_araddr[12:0];
  assign s_axi_1_ARCACHE = s_axi_arcache[3:0];
  assign s_axi_1_ARID = s_axi_arid[2:0];
  assign s_axi_1_ARLEN = s_axi_arlen[7:0];
  assign s_axi_1_ARLOCK = s_axi_arlock[0];
  assign s_axi_1_ARPROT = s_axi_arprot[2:0];
  assign s_axi_1_ARQOS = s_axi_arqos[3:0];
  assign s_axi_1_ARUSER = s_axi_aruser[1023:0];
  assign s_axi_1_ARVALID = s_axi_arvalid;
  assign s_axi_1_AWADDR = s_axi_awaddr[12:0];
  assign s_axi_1_AWCACHE = s_axi_awcache[3:0];
  assign s_axi_1_AWID = s_axi_awid[2:0];
  assign s_axi_1_AWLEN = s_axi_awlen[7:0];
  assign s_axi_1_AWLOCK = s_axi_awlock[0];
  assign s_axi_1_AWPROT = s_axi_awprot[2:0];
  assign s_axi_1_AWQOS = s_axi_awqos[3:0];
  assign s_axi_1_AWUSER = s_axi_awuser[1023:0];
  assign s_axi_1_AWVALID = s_axi_awvalid;
  assign s_axi_1_BREADY = s_axi_bready;
  assign s_axi_1_RREADY = s_axi_rready;
  assign s_axi_1_WDATA = s_axi_wdata[31:0];
  assign s_axi_1_WLAST = s_axi_wlast;
  assign s_axi_1_WSTRB = s_axi_wstrb[3:0];
  assign s_axi_1_WUSER = s_axi_wuser[1023:0];
  assign s_axi_1_WVALID = s_axi_wvalid;
  assign s_axi_arready = s_axi_1_ARREADY;
  assign s_axi_awready = s_axi_1_AWREADY;
  assign s_axi_bid[2:0] = s_axi_1_BID;
  assign s_axi_bresp[1:0] = s_axi_1_BRESP;
  assign s_axi_buser[1023:0] = s_axi_1_BUSER;
  assign s_axi_bvalid = s_axi_1_BVALID;
  assign s_axi_rdata[31:0] = s_axi_1_RDATA;
  assign s_axi_rid[2:0] = s_axi_1_RID;
  assign s_axi_rlast = s_axi_1_RLAST;
  assign s_axi_rresp[1:0] = s_axi_1_RRESP;
  assign s_axi_ruser[1023:0] = s_axi_1_RUSER;
  assign s_axi_rvalid = s_axi_1_RVALID;
  assign s_axi_wready = s_axi_1_WREADY;
  bd_afc3_m04e_0 m04_exit
       (.aclk(aclk_1),
        .aresetn(aresetn_1),
        .m_axi_araddr(m04_exit_M_AXI_ARADDR),
        .m_axi_arburst(m04_exit_M_AXI_ARBURST),
        .m_axi_arcache(m04_exit_M_AXI_ARCACHE),
        .m_axi_arlen(m04_exit_M_AXI_ARLEN),
        .m_axi_arlock(m04_exit_M_AXI_ARLOCK),
        .m_axi_arprot(m04_exit_M_AXI_ARPROT),
        .m_axi_arqos(m04_exit_M_AXI_ARQOS),
        .m_axi_arready(m04_exit_M_AXI_ARREADY),
        .m_axi_arsize(m04_exit_M_AXI_ARSIZE),
        .m_axi_aruser(m04_exit_M_AXI_ARUSER),
        .m_axi_arvalid(m04_exit_M_AXI_ARVALID),
        .m_axi_awaddr(m04_exit_M_AXI_AWADDR),
        .m_axi_awburst(m04_exit_M_AXI_AWBURST),
        .m_axi_awcache(m04_exit_M_AXI_AWCACHE),
        .m_axi_awlen(m04_exit_M_AXI_AWLEN),
        .m_axi_awlock(m04_exit_M_AXI_AWLOCK),
        .m_axi_awprot(m04_exit_M_AXI_AWPROT),
        .m_axi_awqos(m04_exit_M_AXI_AWQOS),
        .m_axi_awready(m04_exit_M_AXI_AWREADY),
        .m_axi_awsize(m04_exit_M_AXI_AWSIZE),
        .m_axi_awuser(m04_exit_M_AXI_AWUSER),
        .m_axi_awvalid(m04_exit_M_AXI_AWVALID),
        .m_axi_bready(m04_exit_M_AXI_BREADY),
        .m_axi_bresp(m04_exit_M_AXI_BRESP),
        .m_axi_bvalid(m04_exit_M_AXI_BVALID),
        .m_axi_rdata(m04_exit_M_AXI_RDATA),
        .m_axi_rlast(m04_exit_M_AXI_RLAST),
        .m_axi_rready(m04_exit_M_AXI_RREADY),
        .m_axi_rresp(m04_exit_M_AXI_RRESP),
        .m_axi_rvalid(m04_exit_M_AXI_RVALID),
        .m_axi_wdata(m04_exit_M_AXI_WDATA),
        .m_axi_wlast(m04_exit_M_AXI_WLAST),
        .m_axi_wready(m04_exit_M_AXI_WREADY),
        .m_axi_wstrb(m04_exit_M_AXI_WSTRB),
        .m_axi_wvalid(m04_exit_M_AXI_WVALID),
        .s_axi_araddr(s_axi_1_ARADDR),
        .s_axi_arcache(s_axi_1_ARCACHE),
        .s_axi_arid(s_axi_1_ARID),
        .s_axi_arlen(s_axi_1_ARLEN),
        .s_axi_arlock(s_axi_1_ARLOCK),
        .s_axi_arprot(s_axi_1_ARPROT),
        .s_axi_arqos(s_axi_1_ARQOS),
        .s_axi_arready(s_axi_1_ARREADY),
        .s_axi_aruser(s_axi_1_ARUSER),
        .s_axi_arvalid(s_axi_1_ARVALID),
        .s_axi_awaddr(s_axi_1_AWADDR),
        .s_axi_awcache(s_axi_1_AWCACHE),
        .s_axi_awid(s_axi_1_AWID),
        .s_axi_awlen(s_axi_1_AWLEN),
        .s_axi_awlock(s_axi_1_AWLOCK),
        .s_axi_awprot(s_axi_1_AWPROT),
        .s_axi_awqos(s_axi_1_AWQOS),
        .s_axi_awready(s_axi_1_AWREADY),
        .s_axi_awuser(s_axi_1_AWUSER),
        .s_axi_awvalid(s_axi_1_AWVALID),
        .s_axi_bid(s_axi_1_BID),
        .s_axi_bready(s_axi_1_BREADY),
        .s_axi_bresp(s_axi_1_BRESP),
        .s_axi_buser(s_axi_1_BUSER),
        .s_axi_bvalid(s_axi_1_BVALID),
        .s_axi_rdata(s_axi_1_RDATA),
        .s_axi_rid(s_axi_1_RID),
        .s_axi_rlast(s_axi_1_RLAST),
        .s_axi_rready(s_axi_1_RREADY),
        .s_axi_rresp(s_axi_1_RRESP),
        .s_axi_ruser(s_axi_1_RUSER),
        .s_axi_rvalid(s_axi_1_RVALID),
        .s_axi_wdata(s_axi_1_WDATA),
        .s_axi_wlast(s_axi_1_WLAST),
        .s_axi_wready(s_axi_1_WREADY),
        .s_axi_wstrb(s_axi_1_WSTRB),
        .s_axi_wuser(s_axi_1_WUSER),
        .s_axi_wvalid(s_axi_1_WVALID));
endmodule

module m04_nodes_imp_19KV9JK
   (M_SC_AR_info,
    M_SC_AR_payld,
    M_SC_AR_recv,
    M_SC_AR_req,
    M_SC_AR_send,
    M_SC_AW_info,
    M_SC_AW_payld,
    M_SC_AW_recv,
    M_SC_AW_req,
    M_SC_AW_send,
    M_SC_B_info,
    M_SC_B_payld,
    M_SC_B_recv,
    M_SC_B_req,
    M_SC_B_send,
    M_SC_R_info,
    M_SC_R_payld,
    M_SC_R_recv,
    M_SC_R_req,
    M_SC_R_send,
    M_SC_W_info,
    M_SC_W_payld,
    M_SC_W_recv,
    M_SC_W_req,
    M_SC_W_send,
    S_SC_AR_info,
    S_SC_AR_payld,
    S_SC_AR_recv,
    S_SC_AR_req,
    S_SC_AR_send,
    S_SC_AW_info,
    S_SC_AW_payld,
    S_SC_AW_recv,
    S_SC_AW_req,
    S_SC_AW_send,
    S_SC_B_info,
    S_SC_B_payld,
    S_SC_B_recv,
    S_SC_B_req,
    S_SC_B_send,
    S_SC_R_info,
    S_SC_R_payld,
    S_SC_R_recv,
    S_SC_R_req,
    S_SC_R_send,
    S_SC_W_info,
    S_SC_W_payld,
    S_SC_W_recv,
    S_SC_W_req,
    S_SC_W_send,
    m_axi_aclk,
    m_axi_aresetn,
    s_axi_aclk,
    s_axi_aresetn);
  output [0:0]M_SC_AR_info;
  output [181:0]M_SC_AR_payld;
  input [0:0]M_SC_AR_recv;
  output [0:0]M_SC_AR_req;
  output [0:0]M_SC_AR_send;
  output [0:0]M_SC_AW_info;
  output [181:0]M_SC_AW_payld;
  input [0:0]M_SC_AW_recv;
  output [0:0]M_SC_AW_req;
  output [0:0]M_SC_AW_send;
  output [0:0]M_SC_B_info;
  output [8:0]M_SC_B_payld;
  input [0:0]M_SC_B_recv;
  output [0:0]M_SC_B_req;
  output [0:0]M_SC_B_send;
  output [0:0]M_SC_R_info;
  output [54:0]M_SC_R_payld;
  input [0:0]M_SC_R_recv;
  output [0:0]M_SC_R_req;
  output [0:0]M_SC_R_send;
  output [0:0]M_SC_W_info;
  output [68:0]M_SC_W_payld;
  input [0:0]M_SC_W_recv;
  output [0:0]M_SC_W_req;
  output [0:0]M_SC_W_send;
  input [0:0]S_SC_AR_info;
  input [181:0]S_SC_AR_payld;
  output [0:0]S_SC_AR_recv;
  input [0:0]S_SC_AR_req;
  input [0:0]S_SC_AR_send;
  input [0:0]S_SC_AW_info;
  input [181:0]S_SC_AW_payld;
  output [0:0]S_SC_AW_recv;
  input [0:0]S_SC_AW_req;
  input [0:0]S_SC_AW_send;
  input [0:0]S_SC_B_info;
  input [8:0]S_SC_B_payld;
  output [0:0]S_SC_B_recv;
  input [0:0]S_SC_B_req;
  input [0:0]S_SC_B_send;
  input [0:0]S_SC_R_info;
  input [54:0]S_SC_R_payld;
  output [0:0]S_SC_R_recv;
  input [0:0]S_SC_R_req;
  input [0:0]S_SC_R_send;
  input [0:0]S_SC_W_info;
  input [68:0]S_SC_W_payld;
  output [0:0]S_SC_W_recv;
  input [0:0]S_SC_W_req;
  input [0:0]S_SC_W_send;
  input m_axi_aclk;
  input m_axi_aresetn;
  input s_axi_aclk;
  input s_axi_aresetn;

  wire [0:0]S_SC_AR_1_INFO;
  wire [181:0]S_SC_AR_1_PAYLD;
  wire [0:0]S_SC_AR_1_RECV;
  wire [0:0]S_SC_AR_1_REQ;
  wire [0:0]S_SC_AR_1_SEND;
  wire [0:0]S_SC_AW_1_INFO;
  wire [181:0]S_SC_AW_1_PAYLD;
  wire [0:0]S_SC_AW_1_RECV;
  wire [0:0]S_SC_AW_1_REQ;
  wire [0:0]S_SC_AW_1_SEND;
  wire [0:0]S_SC_B_1_INFO;
  wire [8:0]S_SC_B_1_PAYLD;
  wire [0:0]S_SC_B_1_RECV;
  wire [0:0]S_SC_B_1_REQ;
  wire [0:0]S_SC_B_1_SEND;
  wire [0:0]S_SC_R_1_INFO;
  wire [54:0]S_SC_R_1_PAYLD;
  wire [0:0]S_SC_R_1_RECV;
  wire [0:0]S_SC_R_1_REQ;
  wire [0:0]S_SC_R_1_SEND;
  wire [0:0]S_SC_W_1_INFO;
  wire [68:0]S_SC_W_1_PAYLD;
  wire [0:0]S_SC_W_1_RECV;
  wire [0:0]S_SC_W_1_REQ;
  wire [0:0]S_SC_W_1_SEND;
  wire [0:0]m04_ar_node_M_SC_INFO;
  wire [181:0]m04_ar_node_M_SC_PAYLD;
  wire [0:0]m04_ar_node_M_SC_RECV;
  wire [0:0]m04_ar_node_M_SC_REQ;
  wire [0:0]m04_ar_node_M_SC_SEND;
  wire [0:0]m04_aw_node_M_SC_INFO;
  wire [181:0]m04_aw_node_M_SC_PAYLD;
  wire [0:0]m04_aw_node_M_SC_RECV;
  wire [0:0]m04_aw_node_M_SC_REQ;
  wire [0:0]m04_aw_node_M_SC_SEND;
  wire [0:0]m04_b_node_M_SC_INFO;
  wire [8:0]m04_b_node_M_SC_PAYLD;
  wire [0:0]m04_b_node_M_SC_RECV;
  wire [0:0]m04_b_node_M_SC_REQ;
  wire [0:0]m04_b_node_M_SC_SEND;
  wire [0:0]m04_r_node_M_SC_INFO;
  wire [54:0]m04_r_node_M_SC_PAYLD;
  wire [0:0]m04_r_node_M_SC_RECV;
  wire [0:0]m04_r_node_M_SC_REQ;
  wire [0:0]m04_r_node_M_SC_SEND;
  wire [0:0]m04_w_node_M_SC_INFO;
  wire [68:0]m04_w_node_M_SC_PAYLD;
  wire [0:0]m04_w_node_M_SC_RECV;
  wire [0:0]m04_w_node_M_SC_REQ;
  wire [0:0]m04_w_node_M_SC_SEND;
  wire m_axi_aclk_1;
  wire m_axi_aresetn_1;
  wire s_axi_aclk_1;
  wire s_axi_aresetn_1;

  assign M_SC_AR_info[0] = m04_ar_node_M_SC_INFO;
  assign M_SC_AR_payld[181:0] = m04_ar_node_M_SC_PAYLD;
  assign M_SC_AR_req[0] = m04_ar_node_M_SC_REQ;
  assign M_SC_AR_send[0] = m04_ar_node_M_SC_SEND;
  assign M_SC_AW_info[0] = m04_aw_node_M_SC_INFO;
  assign M_SC_AW_payld[181:0] = m04_aw_node_M_SC_PAYLD;
  assign M_SC_AW_req[0] = m04_aw_node_M_SC_REQ;
  assign M_SC_AW_send[0] = m04_aw_node_M_SC_SEND;
  assign M_SC_B_info[0] = m04_b_node_M_SC_INFO;
  assign M_SC_B_payld[8:0] = m04_b_node_M_SC_PAYLD;
  assign M_SC_B_req[0] = m04_b_node_M_SC_REQ;
  assign M_SC_B_send[0] = m04_b_node_M_SC_SEND;
  assign M_SC_R_info[0] = m04_r_node_M_SC_INFO;
  assign M_SC_R_payld[54:0] = m04_r_node_M_SC_PAYLD;
  assign M_SC_R_req[0] = m04_r_node_M_SC_REQ;
  assign M_SC_R_send[0] = m04_r_node_M_SC_SEND;
  assign M_SC_W_info[0] = m04_w_node_M_SC_INFO;
  assign M_SC_W_payld[68:0] = m04_w_node_M_SC_PAYLD;
  assign M_SC_W_req[0] = m04_w_node_M_SC_REQ;
  assign M_SC_W_send[0] = m04_w_node_M_SC_SEND;
  assign S_SC_AR_1_INFO = S_SC_AR_info[0];
  assign S_SC_AR_1_PAYLD = S_SC_AR_payld[181:0];
  assign S_SC_AR_1_REQ = S_SC_AR_req[0];
  assign S_SC_AR_1_SEND = S_SC_AR_send[0];
  assign S_SC_AR_recv[0] = S_SC_AR_1_RECV;
  assign S_SC_AW_1_INFO = S_SC_AW_info[0];
  assign S_SC_AW_1_PAYLD = S_SC_AW_payld[181:0];
  assign S_SC_AW_1_REQ = S_SC_AW_req[0];
  assign S_SC_AW_1_SEND = S_SC_AW_send[0];
  assign S_SC_AW_recv[0] = S_SC_AW_1_RECV;
  assign S_SC_B_1_INFO = S_SC_B_info[0];
  assign S_SC_B_1_PAYLD = S_SC_B_payld[8:0];
  assign S_SC_B_1_REQ = S_SC_B_req[0];
  assign S_SC_B_1_SEND = S_SC_B_send[0];
  assign S_SC_B_recv[0] = S_SC_B_1_RECV;
  assign S_SC_R_1_INFO = S_SC_R_info[0];
  assign S_SC_R_1_PAYLD = S_SC_R_payld[54:0];
  assign S_SC_R_1_REQ = S_SC_R_req[0];
  assign S_SC_R_1_SEND = S_SC_R_send[0];
  assign S_SC_R_recv[0] = S_SC_R_1_RECV;
  assign S_SC_W_1_INFO = S_SC_W_info[0];
  assign S_SC_W_1_PAYLD = S_SC_W_payld[68:0];
  assign S_SC_W_1_REQ = S_SC_W_req[0];
  assign S_SC_W_1_SEND = S_SC_W_send[0];
  assign S_SC_W_recv[0] = S_SC_W_1_RECV;
  assign m04_ar_node_M_SC_RECV = M_SC_AR_recv[0];
  assign m04_aw_node_M_SC_RECV = M_SC_AW_recv[0];
  assign m04_b_node_M_SC_RECV = M_SC_B_recv[0];
  assign m04_r_node_M_SC_RECV = M_SC_R_recv[0];
  assign m04_w_node_M_SC_RECV = M_SC_W_recv[0];
  assign m_axi_aclk_1 = m_axi_aclk;
  assign m_axi_aresetn_1 = m_axi_aresetn;
  assign s_axi_aclk_1 = s_axi_aclk;
  assign s_axi_aresetn_1 = s_axi_aresetn;
  bd_afc3_m04arn_0 m04_ar_node
       (.m_sc_aclk(m_axi_aclk_1),
        .m_sc_aresetn(m_axi_aresetn_1),
        .m_sc_info(m04_ar_node_M_SC_INFO),
        .m_sc_payld(m04_ar_node_M_SC_PAYLD),
        .m_sc_recv(m04_ar_node_M_SC_RECV),
        .m_sc_req(m04_ar_node_M_SC_REQ),
        .m_sc_send(m04_ar_node_M_SC_SEND),
        .s_sc_aclk(s_axi_aclk_1),
        .s_sc_aresetn(s_axi_aresetn_1),
        .s_sc_info(S_SC_AR_1_INFO),
        .s_sc_payld(S_SC_AR_1_PAYLD),
        .s_sc_recv(S_SC_AR_1_RECV),
        .s_sc_req(S_SC_AR_1_REQ),
        .s_sc_send(S_SC_AR_1_SEND));
  bd_afc3_m04awn_0 m04_aw_node
       (.m_sc_aclk(m_axi_aclk_1),
        .m_sc_aresetn(m_axi_aresetn_1),
        .m_sc_info(m04_aw_node_M_SC_INFO),
        .m_sc_payld(m04_aw_node_M_SC_PAYLD),
        .m_sc_recv(m04_aw_node_M_SC_RECV),
        .m_sc_req(m04_aw_node_M_SC_REQ),
        .m_sc_send(m04_aw_node_M_SC_SEND),
        .s_sc_aclk(s_axi_aclk_1),
        .s_sc_aresetn(s_axi_aresetn_1),
        .s_sc_info(S_SC_AW_1_INFO),
        .s_sc_payld(S_SC_AW_1_PAYLD),
        .s_sc_recv(S_SC_AW_1_RECV),
        .s_sc_req(S_SC_AW_1_REQ),
        .s_sc_send(S_SC_AW_1_SEND));
  bd_afc3_m04bn_0 m04_b_node
       (.m_sc_aclk(s_axi_aclk_1),
        .m_sc_aresetn(s_axi_aresetn_1),
        .m_sc_info(m04_b_node_M_SC_INFO),
        .m_sc_payld(m04_b_node_M_SC_PAYLD),
        .m_sc_recv(m04_b_node_M_SC_RECV),
        .m_sc_req(m04_b_node_M_SC_REQ),
        .m_sc_send(m04_b_node_M_SC_SEND),
        .s_sc_aclk(m_axi_aclk_1),
        .s_sc_aresetn(m_axi_aresetn_1),
        .s_sc_info(S_SC_B_1_INFO),
        .s_sc_payld(S_SC_B_1_PAYLD),
        .s_sc_recv(S_SC_B_1_RECV),
        .s_sc_req(S_SC_B_1_REQ),
        .s_sc_send(S_SC_B_1_SEND));
  bd_afc3_m04rn_0 m04_r_node
       (.m_sc_aclk(s_axi_aclk_1),
        .m_sc_aresetn(s_axi_aresetn_1),
        .m_sc_info(m04_r_node_M_SC_INFO),
        .m_sc_payld(m04_r_node_M_SC_PAYLD),
        .m_sc_recv(m04_r_node_M_SC_RECV),
        .m_sc_req(m04_r_node_M_SC_REQ),
        .m_sc_send(m04_r_node_M_SC_SEND),
        .s_sc_aclk(m_axi_aclk_1),
        .s_sc_aresetn(m_axi_aresetn_1),
        .s_sc_info(S_SC_R_1_INFO),
        .s_sc_payld(S_SC_R_1_PAYLD),
        .s_sc_recv(S_SC_R_1_RECV),
        .s_sc_req(S_SC_R_1_REQ),
        .s_sc_send(S_SC_R_1_SEND));
  bd_afc3_m04wn_0 m04_w_node
       (.m_sc_aclk(m_axi_aclk_1),
        .m_sc_aresetn(m_axi_aresetn_1),
        .m_sc_info(m04_w_node_M_SC_INFO),
        .m_sc_payld(m04_w_node_M_SC_PAYLD),
        .m_sc_recv(m04_w_node_M_SC_RECV),
        .m_sc_req(m04_w_node_M_SC_REQ),
        .m_sc_send(m04_w_node_M_SC_SEND),
        .s_sc_aclk(s_axi_aclk_1),
        .s_sc_aresetn(s_axi_aresetn_1),
        .s_sc_info(S_SC_W_1_INFO),
        .s_sc_payld(S_SC_W_1_PAYLD),
        .s_sc_recv(S_SC_W_1_RECV),
        .s_sc_req(S_SC_W_1_REQ),
        .s_sc_send(S_SC_W_1_SEND));
endmodule

module m05_exit_pipeline_imp_1A5H04N
   (aclk,
    aresetn,
    m_axi_araddr,
    m_axi_arburst,
    m_axi_arcache,
    m_axi_arlen,
    m_axi_arlock,
    m_axi_arprot,
    m_axi_arqos,
    m_axi_arready,
    m_axi_arsize,
    m_axi_aruser,
    m_axi_arvalid,
    m_axi_awaddr,
    m_axi_awburst,
    m_axi_awcache,
    m_axi_awlen,
    m_axi_awlock,
    m_axi_awprot,
    m_axi_awqos,
    m_axi_awready,
    m_axi_awsize,
    m_axi_awuser,
    m_axi_awvalid,
    m_axi_bready,
    m_axi_bresp,
    m_axi_bvalid,
    m_axi_rdata,
    m_axi_rlast,
    m_axi_rready,
    m_axi_rresp,
    m_axi_rvalid,
    m_axi_wdata,
    m_axi_wlast,
    m_axi_wready,
    m_axi_wstrb,
    m_axi_wvalid,
    s_axi_araddr,
    s_axi_arcache,
    s_axi_arid,
    s_axi_arlen,
    s_axi_arlock,
    s_axi_arprot,
    s_axi_arqos,
    s_axi_arready,
    s_axi_aruser,
    s_axi_arvalid,
    s_axi_awaddr,
    s_axi_awcache,
    s_axi_awid,
    s_axi_awlen,
    s_axi_awlock,
    s_axi_awprot,
    s_axi_awqos,
    s_axi_awready,
    s_axi_awuser,
    s_axi_awvalid,
    s_axi_bid,
    s_axi_bready,
    s_axi_bresp,
    s_axi_buser,
    s_axi_bvalid,
    s_axi_rdata,
    s_axi_rid,
    s_axi_rlast,
    s_axi_rready,
    s_axi_rresp,
    s_axi_ruser,
    s_axi_rvalid,
    s_axi_wdata,
    s_axi_wlast,
    s_axi_wready,
    s_axi_wstrb,
    s_axi_wuser,
    s_axi_wvalid);
  input aclk;
  input aresetn;
  output [12:0]m_axi_araddr;
  output [1:0]m_axi_arburst;
  output [3:0]m_axi_arcache;
  output [7:0]m_axi_arlen;
  output [0:0]m_axi_arlock;
  output [2:0]m_axi_arprot;
  output [3:0]m_axi_arqos;
  input m_axi_arready;
  output [2:0]m_axi_arsize;
  output [15:0]m_axi_aruser;
  output m_axi_arvalid;
  output [12:0]m_axi_awaddr;
  output [1:0]m_axi_awburst;
  output [3:0]m_axi_awcache;
  output [7:0]m_axi_awlen;
  output [0:0]m_axi_awlock;
  output [2:0]m_axi_awprot;
  output [3:0]m_axi_awqos;
  input m_axi_awready;
  output [2:0]m_axi_awsize;
  output [15:0]m_axi_awuser;
  output m_axi_awvalid;
  output m_axi_bready;
  input [1:0]m_axi_bresp;
  input m_axi_bvalid;
  input [31:0]m_axi_rdata;
  input m_axi_rlast;
  output m_axi_rready;
  input [1:0]m_axi_rresp;
  input m_axi_rvalid;
  output [31:0]m_axi_wdata;
  output m_axi_wlast;
  input m_axi_wready;
  output [3:0]m_axi_wstrb;
  output m_axi_wvalid;
  input [12:0]s_axi_araddr;
  input [3:0]s_axi_arcache;
  input [2:0]s_axi_arid;
  input [7:0]s_axi_arlen;
  input [0:0]s_axi_arlock;
  input [2:0]s_axi_arprot;
  input [3:0]s_axi_arqos;
  output s_axi_arready;
  input [1023:0]s_axi_aruser;
  input s_axi_arvalid;
  input [12:0]s_axi_awaddr;
  input [3:0]s_axi_awcache;
  input [2:0]s_axi_awid;
  input [7:0]s_axi_awlen;
  input [0:0]s_axi_awlock;
  input [2:0]s_axi_awprot;
  input [3:0]s_axi_awqos;
  output s_axi_awready;
  input [1023:0]s_axi_awuser;
  input s_axi_awvalid;
  output [2:0]s_axi_bid;
  input s_axi_bready;
  output [1:0]s_axi_bresp;
  output [1023:0]s_axi_buser;
  output s_axi_bvalid;
  output [31:0]s_axi_rdata;
  output [2:0]s_axi_rid;
  output s_axi_rlast;
  input s_axi_rready;
  output [1:0]s_axi_rresp;
  output [1023:0]s_axi_ruser;
  output s_axi_rvalid;
  input [31:0]s_axi_wdata;
  input s_axi_wlast;
  output s_axi_wready;
  input [3:0]s_axi_wstrb;
  input [1023:0]s_axi_wuser;
  input s_axi_wvalid;

  wire aclk_1;
  wire aresetn_1;
  wire [12:0]m05_exit_M_AXI_ARADDR;
  wire [1:0]m05_exit_M_AXI_ARBURST;
  wire [3:0]m05_exit_M_AXI_ARCACHE;
  wire [7:0]m05_exit_M_AXI_ARLEN;
  wire [0:0]m05_exit_M_AXI_ARLOCK;
  wire [2:0]m05_exit_M_AXI_ARPROT;
  wire [3:0]m05_exit_M_AXI_ARQOS;
  wire m05_exit_M_AXI_ARREADY;
  wire [2:0]m05_exit_M_AXI_ARSIZE;
  wire [15:0]m05_exit_M_AXI_ARUSER;
  wire m05_exit_M_AXI_ARVALID;
  wire [12:0]m05_exit_M_AXI_AWADDR;
  wire [1:0]m05_exit_M_AXI_AWBURST;
  wire [3:0]m05_exit_M_AXI_AWCACHE;
  wire [7:0]m05_exit_M_AXI_AWLEN;
  wire [0:0]m05_exit_M_AXI_AWLOCK;
  wire [2:0]m05_exit_M_AXI_AWPROT;
  wire [3:0]m05_exit_M_AXI_AWQOS;
  wire m05_exit_M_AXI_AWREADY;
  wire [2:0]m05_exit_M_AXI_AWSIZE;
  wire [15:0]m05_exit_M_AXI_AWUSER;
  wire m05_exit_M_AXI_AWVALID;
  wire m05_exit_M_AXI_BREADY;
  wire [1:0]m05_exit_M_AXI_BRESP;
  wire m05_exit_M_AXI_BVALID;
  wire [31:0]m05_exit_M_AXI_RDATA;
  wire m05_exit_M_AXI_RLAST;
  wire m05_exit_M_AXI_RREADY;
  wire [1:0]m05_exit_M_AXI_RRESP;
  wire m05_exit_M_AXI_RVALID;
  wire [31:0]m05_exit_M_AXI_WDATA;
  wire m05_exit_M_AXI_WLAST;
  wire m05_exit_M_AXI_WREADY;
  wire [3:0]m05_exit_M_AXI_WSTRB;
  wire m05_exit_M_AXI_WVALID;
  wire [12:0]s_axi_1_ARADDR;
  wire [3:0]s_axi_1_ARCACHE;
  wire [2:0]s_axi_1_ARID;
  wire [7:0]s_axi_1_ARLEN;
  wire [0:0]s_axi_1_ARLOCK;
  wire [2:0]s_axi_1_ARPROT;
  wire [3:0]s_axi_1_ARQOS;
  wire s_axi_1_ARREADY;
  wire [1023:0]s_axi_1_ARUSER;
  wire s_axi_1_ARVALID;
  wire [12:0]s_axi_1_AWADDR;
  wire [3:0]s_axi_1_AWCACHE;
  wire [2:0]s_axi_1_AWID;
  wire [7:0]s_axi_1_AWLEN;
  wire [0:0]s_axi_1_AWLOCK;
  wire [2:0]s_axi_1_AWPROT;
  wire [3:0]s_axi_1_AWQOS;
  wire s_axi_1_AWREADY;
  wire [1023:0]s_axi_1_AWUSER;
  wire s_axi_1_AWVALID;
  wire [2:0]s_axi_1_BID;
  wire s_axi_1_BREADY;
  wire [1:0]s_axi_1_BRESP;
  wire [1023:0]s_axi_1_BUSER;
  wire s_axi_1_BVALID;
  wire [31:0]s_axi_1_RDATA;
  wire [2:0]s_axi_1_RID;
  wire s_axi_1_RLAST;
  wire s_axi_1_RREADY;
  wire [1:0]s_axi_1_RRESP;
  wire [1023:0]s_axi_1_RUSER;
  wire s_axi_1_RVALID;
  wire [31:0]s_axi_1_WDATA;
  wire s_axi_1_WLAST;
  wire s_axi_1_WREADY;
  wire [3:0]s_axi_1_WSTRB;
  wire [1023:0]s_axi_1_WUSER;
  wire s_axi_1_WVALID;

  assign aclk_1 = aclk;
  assign aresetn_1 = aresetn;
  assign m05_exit_M_AXI_ARREADY = m_axi_arready;
  assign m05_exit_M_AXI_AWREADY = m_axi_awready;
  assign m05_exit_M_AXI_BRESP = m_axi_bresp[1:0];
  assign m05_exit_M_AXI_BVALID = m_axi_bvalid;
  assign m05_exit_M_AXI_RDATA = m_axi_rdata[31:0];
  assign m05_exit_M_AXI_RLAST = m_axi_rlast;
  assign m05_exit_M_AXI_RRESP = m_axi_rresp[1:0];
  assign m05_exit_M_AXI_RVALID = m_axi_rvalid;
  assign m05_exit_M_AXI_WREADY = m_axi_wready;
  assign m_axi_araddr[12:0] = m05_exit_M_AXI_ARADDR;
  assign m_axi_arburst[1:0] = m05_exit_M_AXI_ARBURST;
  assign m_axi_arcache[3:0] = m05_exit_M_AXI_ARCACHE;
  assign m_axi_arlen[7:0] = m05_exit_M_AXI_ARLEN;
  assign m_axi_arlock[0] = m05_exit_M_AXI_ARLOCK;
  assign m_axi_arprot[2:0] = m05_exit_M_AXI_ARPROT;
  assign m_axi_arqos[3:0] = m05_exit_M_AXI_ARQOS;
  assign m_axi_arsize[2:0] = m05_exit_M_AXI_ARSIZE;
  assign m_axi_aruser[15:0] = m05_exit_M_AXI_ARUSER;
  assign m_axi_arvalid = m05_exit_M_AXI_ARVALID;
  assign m_axi_awaddr[12:0] = m05_exit_M_AXI_AWADDR;
  assign m_axi_awburst[1:0] = m05_exit_M_AXI_AWBURST;
  assign m_axi_awcache[3:0] = m05_exit_M_AXI_AWCACHE;
  assign m_axi_awlen[7:0] = m05_exit_M_AXI_AWLEN;
  assign m_axi_awlock[0] = m05_exit_M_AXI_AWLOCK;
  assign m_axi_awprot[2:0] = m05_exit_M_AXI_AWPROT;
  assign m_axi_awqos[3:0] = m05_exit_M_AXI_AWQOS;
  assign m_axi_awsize[2:0] = m05_exit_M_AXI_AWSIZE;
  assign m_axi_awuser[15:0] = m05_exit_M_AXI_AWUSER;
  assign m_axi_awvalid = m05_exit_M_AXI_AWVALID;
  assign m_axi_bready = m05_exit_M_AXI_BREADY;
  assign m_axi_rready = m05_exit_M_AXI_RREADY;
  assign m_axi_wdata[31:0] = m05_exit_M_AXI_WDATA;
  assign m_axi_wlast = m05_exit_M_AXI_WLAST;
  assign m_axi_wstrb[3:0] = m05_exit_M_AXI_WSTRB;
  assign m_axi_wvalid = m05_exit_M_AXI_WVALID;
  assign s_axi_1_ARADDR = s_axi_araddr[12:0];
  assign s_axi_1_ARCACHE = s_axi_arcache[3:0];
  assign s_axi_1_ARID = s_axi_arid[2:0];
  assign s_axi_1_ARLEN = s_axi_arlen[7:0];
  assign s_axi_1_ARLOCK = s_axi_arlock[0];
  assign s_axi_1_ARPROT = s_axi_arprot[2:0];
  assign s_axi_1_ARQOS = s_axi_arqos[3:0];
  assign s_axi_1_ARUSER = s_axi_aruser[1023:0];
  assign s_axi_1_ARVALID = s_axi_arvalid;
  assign s_axi_1_AWADDR = s_axi_awaddr[12:0];
  assign s_axi_1_AWCACHE = s_axi_awcache[3:0];
  assign s_axi_1_AWID = s_axi_awid[2:0];
  assign s_axi_1_AWLEN = s_axi_awlen[7:0];
  assign s_axi_1_AWLOCK = s_axi_awlock[0];
  assign s_axi_1_AWPROT = s_axi_awprot[2:0];
  assign s_axi_1_AWQOS = s_axi_awqos[3:0];
  assign s_axi_1_AWUSER = s_axi_awuser[1023:0];
  assign s_axi_1_AWVALID = s_axi_awvalid;
  assign s_axi_1_BREADY = s_axi_bready;
  assign s_axi_1_RREADY = s_axi_rready;
  assign s_axi_1_WDATA = s_axi_wdata[31:0];
  assign s_axi_1_WLAST = s_axi_wlast;
  assign s_axi_1_WSTRB = s_axi_wstrb[3:0];
  assign s_axi_1_WUSER = s_axi_wuser[1023:0];
  assign s_axi_1_WVALID = s_axi_wvalid;
  assign s_axi_arready = s_axi_1_ARREADY;
  assign s_axi_awready = s_axi_1_AWREADY;
  assign s_axi_bid[2:0] = s_axi_1_BID;
  assign s_axi_bresp[1:0] = s_axi_1_BRESP;
  assign s_axi_buser[1023:0] = s_axi_1_BUSER;
  assign s_axi_bvalid = s_axi_1_BVALID;
  assign s_axi_rdata[31:0] = s_axi_1_RDATA;
  assign s_axi_rid[2:0] = s_axi_1_RID;
  assign s_axi_rlast = s_axi_1_RLAST;
  assign s_axi_rresp[1:0] = s_axi_1_RRESP;
  assign s_axi_ruser[1023:0] = s_axi_1_RUSER;
  assign s_axi_rvalid = s_axi_1_RVALID;
  assign s_axi_wready = s_axi_1_WREADY;
  bd_afc3_m05e_0 m05_exit
       (.aclk(aclk_1),
        .aresetn(aresetn_1),
        .m_axi_araddr(m05_exit_M_AXI_ARADDR),
        .m_axi_arburst(m05_exit_M_AXI_ARBURST),
        .m_axi_arcache(m05_exit_M_AXI_ARCACHE),
        .m_axi_arlen(m05_exit_M_AXI_ARLEN),
        .m_axi_arlock(m05_exit_M_AXI_ARLOCK),
        .m_axi_arprot(m05_exit_M_AXI_ARPROT),
        .m_axi_arqos(m05_exit_M_AXI_ARQOS),
        .m_axi_arready(m05_exit_M_AXI_ARREADY),
        .m_axi_arsize(m05_exit_M_AXI_ARSIZE),
        .m_axi_aruser(m05_exit_M_AXI_ARUSER),
        .m_axi_arvalid(m05_exit_M_AXI_ARVALID),
        .m_axi_awaddr(m05_exit_M_AXI_AWADDR),
        .m_axi_awburst(m05_exit_M_AXI_AWBURST),
        .m_axi_awcache(m05_exit_M_AXI_AWCACHE),
        .m_axi_awlen(m05_exit_M_AXI_AWLEN),
        .m_axi_awlock(m05_exit_M_AXI_AWLOCK),
        .m_axi_awprot(m05_exit_M_AXI_AWPROT),
        .m_axi_awqos(m05_exit_M_AXI_AWQOS),
        .m_axi_awready(m05_exit_M_AXI_AWREADY),
        .m_axi_awsize(m05_exit_M_AXI_AWSIZE),
        .m_axi_awuser(m05_exit_M_AXI_AWUSER),
        .m_axi_awvalid(m05_exit_M_AXI_AWVALID),
        .m_axi_bready(m05_exit_M_AXI_BREADY),
        .m_axi_bresp(m05_exit_M_AXI_BRESP),
        .m_axi_bvalid(m05_exit_M_AXI_BVALID),
        .m_axi_rdata(m05_exit_M_AXI_RDATA),
        .m_axi_rlast(m05_exit_M_AXI_RLAST),
        .m_axi_rready(m05_exit_M_AXI_RREADY),
        .m_axi_rresp(m05_exit_M_AXI_RRESP),
        .m_axi_rvalid(m05_exit_M_AXI_RVALID),
        .m_axi_wdata(m05_exit_M_AXI_WDATA),
        .m_axi_wlast(m05_exit_M_AXI_WLAST),
        .m_axi_wready(m05_exit_M_AXI_WREADY),
        .m_axi_wstrb(m05_exit_M_AXI_WSTRB),
        .m_axi_wvalid(m05_exit_M_AXI_WVALID),
        .s_axi_araddr(s_axi_1_ARADDR),
        .s_axi_arcache(s_axi_1_ARCACHE),
        .s_axi_arid(s_axi_1_ARID),
        .s_axi_arlen(s_axi_1_ARLEN),
        .s_axi_arlock(s_axi_1_ARLOCK),
        .s_axi_arprot(s_axi_1_ARPROT),
        .s_axi_arqos(s_axi_1_ARQOS),
        .s_axi_arready(s_axi_1_ARREADY),
        .s_axi_aruser(s_axi_1_ARUSER),
        .s_axi_arvalid(s_axi_1_ARVALID),
        .s_axi_awaddr(s_axi_1_AWADDR),
        .s_axi_awcache(s_axi_1_AWCACHE),
        .s_axi_awid(s_axi_1_AWID),
        .s_axi_awlen(s_axi_1_AWLEN),
        .s_axi_awlock(s_axi_1_AWLOCK),
        .s_axi_awprot(s_axi_1_AWPROT),
        .s_axi_awqos(s_axi_1_AWQOS),
        .s_axi_awready(s_axi_1_AWREADY),
        .s_axi_awuser(s_axi_1_AWUSER),
        .s_axi_awvalid(s_axi_1_AWVALID),
        .s_axi_bid(s_axi_1_BID),
        .s_axi_bready(s_axi_1_BREADY),
        .s_axi_bresp(s_axi_1_BRESP),
        .s_axi_buser(s_axi_1_BUSER),
        .s_axi_bvalid(s_axi_1_BVALID),
        .s_axi_rdata(s_axi_1_RDATA),
        .s_axi_rid(s_axi_1_RID),
        .s_axi_rlast(s_axi_1_RLAST),
        .s_axi_rready(s_axi_1_RREADY),
        .s_axi_rresp(s_axi_1_RRESP),
        .s_axi_ruser(s_axi_1_RUSER),
        .s_axi_rvalid(s_axi_1_RVALID),
        .s_axi_wdata(s_axi_1_WDATA),
        .s_axi_wlast(s_axi_1_WLAST),
        .s_axi_wready(s_axi_1_WREADY),
        .s_axi_wstrb(s_axi_1_WSTRB),
        .s_axi_wuser(s_axi_1_WUSER),
        .s_axi_wvalid(s_axi_1_WVALID));
endmodule

module m05_nodes_imp_FW97QE
   (M_SC_AR_info,
    M_SC_AR_payld,
    M_SC_AR_recv,
    M_SC_AR_req,
    M_SC_AR_send,
    M_SC_AW_info,
    M_SC_AW_payld,
    M_SC_AW_recv,
    M_SC_AW_req,
    M_SC_AW_send,
    M_SC_B_info,
    M_SC_B_payld,
    M_SC_B_recv,
    M_SC_B_req,
    M_SC_B_send,
    M_SC_R_info,
    M_SC_R_payld,
    M_SC_R_recv,
    M_SC_R_req,
    M_SC_R_send,
    M_SC_W_info,
    M_SC_W_payld,
    M_SC_W_recv,
    M_SC_W_req,
    M_SC_W_send,
    S_SC_AR_info,
    S_SC_AR_payld,
    S_SC_AR_recv,
    S_SC_AR_req,
    S_SC_AR_send,
    S_SC_AW_info,
    S_SC_AW_payld,
    S_SC_AW_recv,
    S_SC_AW_req,
    S_SC_AW_send,
    S_SC_B_info,
    S_SC_B_payld,
    S_SC_B_recv,
    S_SC_B_req,
    S_SC_B_send,
    S_SC_R_info,
    S_SC_R_payld,
    S_SC_R_recv,
    S_SC_R_req,
    S_SC_R_send,
    S_SC_W_info,
    S_SC_W_payld,
    S_SC_W_recv,
    S_SC_W_req,
    S_SC_W_send,
    m_axi_aclk,
    m_axi_aresetn,
    s_axi_aclk,
    s_axi_aresetn);
  output [0:0]M_SC_AR_info;
  output [181:0]M_SC_AR_payld;
  input [0:0]M_SC_AR_recv;
  output [0:0]M_SC_AR_req;
  output [0:0]M_SC_AR_send;
  output [0:0]M_SC_AW_info;
  output [181:0]M_SC_AW_payld;
  input [0:0]M_SC_AW_recv;
  output [0:0]M_SC_AW_req;
  output [0:0]M_SC_AW_send;
  output [0:0]M_SC_B_info;
  output [8:0]M_SC_B_payld;
  input [0:0]M_SC_B_recv;
  output [0:0]M_SC_B_req;
  output [0:0]M_SC_B_send;
  output [0:0]M_SC_R_info;
  output [54:0]M_SC_R_payld;
  input [0:0]M_SC_R_recv;
  output [0:0]M_SC_R_req;
  output [0:0]M_SC_R_send;
  output [0:0]M_SC_W_info;
  output [68:0]M_SC_W_payld;
  input [0:0]M_SC_W_recv;
  output [0:0]M_SC_W_req;
  output [0:0]M_SC_W_send;
  input [0:0]S_SC_AR_info;
  input [181:0]S_SC_AR_payld;
  output [0:0]S_SC_AR_recv;
  input [0:0]S_SC_AR_req;
  input [0:0]S_SC_AR_send;
  input [0:0]S_SC_AW_info;
  input [181:0]S_SC_AW_payld;
  output [0:0]S_SC_AW_recv;
  input [0:0]S_SC_AW_req;
  input [0:0]S_SC_AW_send;
  input [0:0]S_SC_B_info;
  input [8:0]S_SC_B_payld;
  output [0:0]S_SC_B_recv;
  input [0:0]S_SC_B_req;
  input [0:0]S_SC_B_send;
  input [0:0]S_SC_R_info;
  input [54:0]S_SC_R_payld;
  output [0:0]S_SC_R_recv;
  input [0:0]S_SC_R_req;
  input [0:0]S_SC_R_send;
  input [0:0]S_SC_W_info;
  input [68:0]S_SC_W_payld;
  output [0:0]S_SC_W_recv;
  input [0:0]S_SC_W_req;
  input [0:0]S_SC_W_send;
  input m_axi_aclk;
  input m_axi_aresetn;
  input s_axi_aclk;
  input s_axi_aresetn;

  wire [0:0]S_SC_AR_1_INFO;
  wire [181:0]S_SC_AR_1_PAYLD;
  wire [0:0]S_SC_AR_1_RECV;
  wire [0:0]S_SC_AR_1_REQ;
  wire [0:0]S_SC_AR_1_SEND;
  wire [0:0]S_SC_AW_1_INFO;
  wire [181:0]S_SC_AW_1_PAYLD;
  wire [0:0]S_SC_AW_1_RECV;
  wire [0:0]S_SC_AW_1_REQ;
  wire [0:0]S_SC_AW_1_SEND;
  wire [0:0]S_SC_B_1_INFO;
  wire [8:0]S_SC_B_1_PAYLD;
  wire [0:0]S_SC_B_1_RECV;
  wire [0:0]S_SC_B_1_REQ;
  wire [0:0]S_SC_B_1_SEND;
  wire [0:0]S_SC_R_1_INFO;
  wire [54:0]S_SC_R_1_PAYLD;
  wire [0:0]S_SC_R_1_RECV;
  wire [0:0]S_SC_R_1_REQ;
  wire [0:0]S_SC_R_1_SEND;
  wire [0:0]S_SC_W_1_INFO;
  wire [68:0]S_SC_W_1_PAYLD;
  wire [0:0]S_SC_W_1_RECV;
  wire [0:0]S_SC_W_1_REQ;
  wire [0:0]S_SC_W_1_SEND;
  wire [0:0]m05_ar_node_M_SC_INFO;
  wire [181:0]m05_ar_node_M_SC_PAYLD;
  wire [0:0]m05_ar_node_M_SC_RECV;
  wire [0:0]m05_ar_node_M_SC_REQ;
  wire [0:0]m05_ar_node_M_SC_SEND;
  wire [0:0]m05_aw_node_M_SC_INFO;
  wire [181:0]m05_aw_node_M_SC_PAYLD;
  wire [0:0]m05_aw_node_M_SC_RECV;
  wire [0:0]m05_aw_node_M_SC_REQ;
  wire [0:0]m05_aw_node_M_SC_SEND;
  wire [0:0]m05_b_node_M_SC_INFO;
  wire [8:0]m05_b_node_M_SC_PAYLD;
  wire [0:0]m05_b_node_M_SC_RECV;
  wire [0:0]m05_b_node_M_SC_REQ;
  wire [0:0]m05_b_node_M_SC_SEND;
  wire [0:0]m05_r_node_M_SC_INFO;
  wire [54:0]m05_r_node_M_SC_PAYLD;
  wire [0:0]m05_r_node_M_SC_RECV;
  wire [0:0]m05_r_node_M_SC_REQ;
  wire [0:0]m05_r_node_M_SC_SEND;
  wire [0:0]m05_w_node_M_SC_INFO;
  wire [68:0]m05_w_node_M_SC_PAYLD;
  wire [0:0]m05_w_node_M_SC_RECV;
  wire [0:0]m05_w_node_M_SC_REQ;
  wire [0:0]m05_w_node_M_SC_SEND;
  wire m_axi_aclk_1;
  wire m_axi_aresetn_1;
  wire s_axi_aclk_1;
  wire s_axi_aresetn_1;

  assign M_SC_AR_info[0] = m05_ar_node_M_SC_INFO;
  assign M_SC_AR_payld[181:0] = m05_ar_node_M_SC_PAYLD;
  assign M_SC_AR_req[0] = m05_ar_node_M_SC_REQ;
  assign M_SC_AR_send[0] = m05_ar_node_M_SC_SEND;
  assign M_SC_AW_info[0] = m05_aw_node_M_SC_INFO;
  assign M_SC_AW_payld[181:0] = m05_aw_node_M_SC_PAYLD;
  assign M_SC_AW_req[0] = m05_aw_node_M_SC_REQ;
  assign M_SC_AW_send[0] = m05_aw_node_M_SC_SEND;
  assign M_SC_B_info[0] = m05_b_node_M_SC_INFO;
  assign M_SC_B_payld[8:0] = m05_b_node_M_SC_PAYLD;
  assign M_SC_B_req[0] = m05_b_node_M_SC_REQ;
  assign M_SC_B_send[0] = m05_b_node_M_SC_SEND;
  assign M_SC_R_info[0] = m05_r_node_M_SC_INFO;
  assign M_SC_R_payld[54:0] = m05_r_node_M_SC_PAYLD;
  assign M_SC_R_req[0] = m05_r_node_M_SC_REQ;
  assign M_SC_R_send[0] = m05_r_node_M_SC_SEND;
  assign M_SC_W_info[0] = m05_w_node_M_SC_INFO;
  assign M_SC_W_payld[68:0] = m05_w_node_M_SC_PAYLD;
  assign M_SC_W_req[0] = m05_w_node_M_SC_REQ;
  assign M_SC_W_send[0] = m05_w_node_M_SC_SEND;
  assign S_SC_AR_1_INFO = S_SC_AR_info[0];
  assign S_SC_AR_1_PAYLD = S_SC_AR_payld[181:0];
  assign S_SC_AR_1_REQ = S_SC_AR_req[0];
  assign S_SC_AR_1_SEND = S_SC_AR_send[0];
  assign S_SC_AR_recv[0] = S_SC_AR_1_RECV;
  assign S_SC_AW_1_INFO = S_SC_AW_info[0];
  assign S_SC_AW_1_PAYLD = S_SC_AW_payld[181:0];
  assign S_SC_AW_1_REQ = S_SC_AW_req[0];
  assign S_SC_AW_1_SEND = S_SC_AW_send[0];
  assign S_SC_AW_recv[0] = S_SC_AW_1_RECV;
  assign S_SC_B_1_INFO = S_SC_B_info[0];
  assign S_SC_B_1_PAYLD = S_SC_B_payld[8:0];
  assign S_SC_B_1_REQ = S_SC_B_req[0];
  assign S_SC_B_1_SEND = S_SC_B_send[0];
  assign S_SC_B_recv[0] = S_SC_B_1_RECV;
  assign S_SC_R_1_INFO = S_SC_R_info[0];
  assign S_SC_R_1_PAYLD = S_SC_R_payld[54:0];
  assign S_SC_R_1_REQ = S_SC_R_req[0];
  assign S_SC_R_1_SEND = S_SC_R_send[0];
  assign S_SC_R_recv[0] = S_SC_R_1_RECV;
  assign S_SC_W_1_INFO = S_SC_W_info[0];
  assign S_SC_W_1_PAYLD = S_SC_W_payld[68:0];
  assign S_SC_W_1_REQ = S_SC_W_req[0];
  assign S_SC_W_1_SEND = S_SC_W_send[0];
  assign S_SC_W_recv[0] = S_SC_W_1_RECV;
  assign m05_ar_node_M_SC_RECV = M_SC_AR_recv[0];
  assign m05_aw_node_M_SC_RECV = M_SC_AW_recv[0];
  assign m05_b_node_M_SC_RECV = M_SC_B_recv[0];
  assign m05_r_node_M_SC_RECV = M_SC_R_recv[0];
  assign m05_w_node_M_SC_RECV = M_SC_W_recv[0];
  assign m_axi_aclk_1 = m_axi_aclk;
  assign m_axi_aresetn_1 = m_axi_aresetn;
  assign s_axi_aclk_1 = s_axi_aclk;
  assign s_axi_aresetn_1 = s_axi_aresetn;
  bd_afc3_m05arn_0 m05_ar_node
       (.m_sc_aclk(m_axi_aclk_1),
        .m_sc_aresetn(m_axi_aresetn_1),
        .m_sc_info(m05_ar_node_M_SC_INFO),
        .m_sc_payld(m05_ar_node_M_SC_PAYLD),
        .m_sc_recv(m05_ar_node_M_SC_RECV),
        .m_sc_req(m05_ar_node_M_SC_REQ),
        .m_sc_send(m05_ar_node_M_SC_SEND),
        .s_sc_aclk(s_axi_aclk_1),
        .s_sc_aresetn(s_axi_aresetn_1),
        .s_sc_info(S_SC_AR_1_INFO),
        .s_sc_payld(S_SC_AR_1_PAYLD),
        .s_sc_recv(S_SC_AR_1_RECV),
        .s_sc_req(S_SC_AR_1_REQ),
        .s_sc_send(S_SC_AR_1_SEND));
  bd_afc3_m05awn_0 m05_aw_node
       (.m_sc_aclk(m_axi_aclk_1),
        .m_sc_aresetn(m_axi_aresetn_1),
        .m_sc_info(m05_aw_node_M_SC_INFO),
        .m_sc_payld(m05_aw_node_M_SC_PAYLD),
        .m_sc_recv(m05_aw_node_M_SC_RECV),
        .m_sc_req(m05_aw_node_M_SC_REQ),
        .m_sc_send(m05_aw_node_M_SC_SEND),
        .s_sc_aclk(s_axi_aclk_1),
        .s_sc_aresetn(s_axi_aresetn_1),
        .s_sc_info(S_SC_AW_1_INFO),
        .s_sc_payld(S_SC_AW_1_PAYLD),
        .s_sc_recv(S_SC_AW_1_RECV),
        .s_sc_req(S_SC_AW_1_REQ),
        .s_sc_send(S_SC_AW_1_SEND));
  bd_afc3_m05bn_0 m05_b_node
       (.m_sc_aclk(s_axi_aclk_1),
        .m_sc_aresetn(s_axi_aresetn_1),
        .m_sc_info(m05_b_node_M_SC_INFO),
        .m_sc_payld(m05_b_node_M_SC_PAYLD),
        .m_sc_recv(m05_b_node_M_SC_RECV),
        .m_sc_req(m05_b_node_M_SC_REQ),
        .m_sc_send(m05_b_node_M_SC_SEND),
        .s_sc_aclk(m_axi_aclk_1),
        .s_sc_aresetn(m_axi_aresetn_1),
        .s_sc_info(S_SC_B_1_INFO),
        .s_sc_payld(S_SC_B_1_PAYLD),
        .s_sc_recv(S_SC_B_1_RECV),
        .s_sc_req(S_SC_B_1_REQ),
        .s_sc_send(S_SC_B_1_SEND));
  bd_afc3_m05rn_0 m05_r_node
       (.m_sc_aclk(s_axi_aclk_1),
        .m_sc_aresetn(s_axi_aresetn_1),
        .m_sc_info(m05_r_node_M_SC_INFO),
        .m_sc_payld(m05_r_node_M_SC_PAYLD),
        .m_sc_recv(m05_r_node_M_SC_RECV),
        .m_sc_req(m05_r_node_M_SC_REQ),
        .m_sc_send(m05_r_node_M_SC_SEND),
        .s_sc_aclk(m_axi_aclk_1),
        .s_sc_aresetn(m_axi_aresetn_1),
        .s_sc_info(S_SC_R_1_INFO),
        .s_sc_payld(S_SC_R_1_PAYLD),
        .s_sc_recv(S_SC_R_1_RECV),
        .s_sc_req(S_SC_R_1_REQ),
        .s_sc_send(S_SC_R_1_SEND));
  bd_afc3_m05wn_0 m05_w_node
       (.m_sc_aclk(m_axi_aclk_1),
        .m_sc_aresetn(m_axi_aresetn_1),
        .m_sc_info(m05_w_node_M_SC_INFO),
        .m_sc_payld(m05_w_node_M_SC_PAYLD),
        .m_sc_recv(m05_w_node_M_SC_RECV),
        .m_sc_req(m05_w_node_M_SC_REQ),
        .m_sc_send(m05_w_node_M_SC_SEND),
        .s_sc_aclk(s_axi_aclk_1),
        .s_sc_aresetn(s_axi_aresetn_1),
        .s_sc_info(S_SC_W_1_INFO),
        .s_sc_payld(S_SC_W_1_PAYLD),
        .s_sc_recv(S_SC_W_1_RECV),
        .s_sc_req(S_SC_W_1_REQ),
        .s_sc_send(S_SC_W_1_SEND));
endmodule

module m06_exit_pipeline_imp_185YSO7
   (aclk,
    aresetn,
    m_axi_araddr,
    m_axi_arburst,
    m_axi_arcache,
    m_axi_arlen,
    m_axi_arlock,
    m_axi_arprot,
    m_axi_arqos,
    m_axi_arready,
    m_axi_arsize,
    m_axi_aruser,
    m_axi_arvalid,
    m_axi_awaddr,
    m_axi_awburst,
    m_axi_awcache,
    m_axi_awlen,
    m_axi_awlock,
    m_axi_awprot,
    m_axi_awqos,
    m_axi_awready,
    m_axi_awsize,
    m_axi_awuser,
    m_axi_awvalid,
    m_axi_bready,
    m_axi_bresp,
    m_axi_bvalid,
    m_axi_rdata,
    m_axi_rlast,
    m_axi_rready,
    m_axi_rresp,
    m_axi_rvalid,
    m_axi_wdata,
    m_axi_wlast,
    m_axi_wready,
    m_axi_wstrb,
    m_axi_wvalid,
    s_axi_araddr,
    s_axi_arcache,
    s_axi_arid,
    s_axi_arlen,
    s_axi_arlock,
    s_axi_arprot,
    s_axi_arqos,
    s_axi_arready,
    s_axi_aruser,
    s_axi_arvalid,
    s_axi_awaddr,
    s_axi_awcache,
    s_axi_awid,
    s_axi_awlen,
    s_axi_awlock,
    s_axi_awprot,
    s_axi_awqos,
    s_axi_awready,
    s_axi_awuser,
    s_axi_awvalid,
    s_axi_bid,
    s_axi_bready,
    s_axi_bresp,
    s_axi_buser,
    s_axi_bvalid,
    s_axi_rdata,
    s_axi_rid,
    s_axi_rlast,
    s_axi_rready,
    s_axi_rresp,
    s_axi_ruser,
    s_axi_rvalid,
    s_axi_wdata,
    s_axi_wlast,
    s_axi_wready,
    s_axi_wstrb,
    s_axi_wuser,
    s_axi_wvalid);
  input aclk;
  input aresetn;
  output [12:0]m_axi_araddr;
  output [1:0]m_axi_arburst;
  output [3:0]m_axi_arcache;
  output [7:0]m_axi_arlen;
  output [0:0]m_axi_arlock;
  output [2:0]m_axi_arprot;
  output [3:0]m_axi_arqos;
  input m_axi_arready;
  output [2:0]m_axi_arsize;
  output [15:0]m_axi_aruser;
  output m_axi_arvalid;
  output [12:0]m_axi_awaddr;
  output [1:0]m_axi_awburst;
  output [3:0]m_axi_awcache;
  output [7:0]m_axi_awlen;
  output [0:0]m_axi_awlock;
  output [2:0]m_axi_awprot;
  output [3:0]m_axi_awqos;
  input m_axi_awready;
  output [2:0]m_axi_awsize;
  output [15:0]m_axi_awuser;
  output m_axi_awvalid;
  output m_axi_bready;
  input [1:0]m_axi_bresp;
  input m_axi_bvalid;
  input [31:0]m_axi_rdata;
  input m_axi_rlast;
  output m_axi_rready;
  input [1:0]m_axi_rresp;
  input m_axi_rvalid;
  output [31:0]m_axi_wdata;
  output m_axi_wlast;
  input m_axi_wready;
  output [3:0]m_axi_wstrb;
  output m_axi_wvalid;
  input [12:0]s_axi_araddr;
  input [3:0]s_axi_arcache;
  input [2:0]s_axi_arid;
  input [7:0]s_axi_arlen;
  input [0:0]s_axi_arlock;
  input [2:0]s_axi_arprot;
  input [3:0]s_axi_arqos;
  output s_axi_arready;
  input [1023:0]s_axi_aruser;
  input s_axi_arvalid;
  input [12:0]s_axi_awaddr;
  input [3:0]s_axi_awcache;
  input [2:0]s_axi_awid;
  input [7:0]s_axi_awlen;
  input [0:0]s_axi_awlock;
  input [2:0]s_axi_awprot;
  input [3:0]s_axi_awqos;
  output s_axi_awready;
  input [1023:0]s_axi_awuser;
  input s_axi_awvalid;
  output [2:0]s_axi_bid;
  input s_axi_bready;
  output [1:0]s_axi_bresp;
  output [1023:0]s_axi_buser;
  output s_axi_bvalid;
  output [31:0]s_axi_rdata;
  output [2:0]s_axi_rid;
  output s_axi_rlast;
  input s_axi_rready;
  output [1:0]s_axi_rresp;
  output [1023:0]s_axi_ruser;
  output s_axi_rvalid;
  input [31:0]s_axi_wdata;
  input s_axi_wlast;
  output s_axi_wready;
  input [3:0]s_axi_wstrb;
  input [1023:0]s_axi_wuser;
  input s_axi_wvalid;

  wire aclk_1;
  wire aresetn_1;
  wire [12:0]m06_exit_M_AXI_ARADDR;
  wire [1:0]m06_exit_M_AXI_ARBURST;
  wire [3:0]m06_exit_M_AXI_ARCACHE;
  wire [7:0]m06_exit_M_AXI_ARLEN;
  wire [0:0]m06_exit_M_AXI_ARLOCK;
  wire [2:0]m06_exit_M_AXI_ARPROT;
  wire [3:0]m06_exit_M_AXI_ARQOS;
  wire m06_exit_M_AXI_ARREADY;
  wire [2:0]m06_exit_M_AXI_ARSIZE;
  wire [15:0]m06_exit_M_AXI_ARUSER;
  wire m06_exit_M_AXI_ARVALID;
  wire [12:0]m06_exit_M_AXI_AWADDR;
  wire [1:0]m06_exit_M_AXI_AWBURST;
  wire [3:0]m06_exit_M_AXI_AWCACHE;
  wire [7:0]m06_exit_M_AXI_AWLEN;
  wire [0:0]m06_exit_M_AXI_AWLOCK;
  wire [2:0]m06_exit_M_AXI_AWPROT;
  wire [3:0]m06_exit_M_AXI_AWQOS;
  wire m06_exit_M_AXI_AWREADY;
  wire [2:0]m06_exit_M_AXI_AWSIZE;
  wire [15:0]m06_exit_M_AXI_AWUSER;
  wire m06_exit_M_AXI_AWVALID;
  wire m06_exit_M_AXI_BREADY;
  wire [1:0]m06_exit_M_AXI_BRESP;
  wire m06_exit_M_AXI_BVALID;
  wire [31:0]m06_exit_M_AXI_RDATA;
  wire m06_exit_M_AXI_RLAST;
  wire m06_exit_M_AXI_RREADY;
  wire [1:0]m06_exit_M_AXI_RRESP;
  wire m06_exit_M_AXI_RVALID;
  wire [31:0]m06_exit_M_AXI_WDATA;
  wire m06_exit_M_AXI_WLAST;
  wire m06_exit_M_AXI_WREADY;
  wire [3:0]m06_exit_M_AXI_WSTRB;
  wire m06_exit_M_AXI_WVALID;
  wire [12:0]s_axi_1_ARADDR;
  wire [3:0]s_axi_1_ARCACHE;
  wire [2:0]s_axi_1_ARID;
  wire [7:0]s_axi_1_ARLEN;
  wire [0:0]s_axi_1_ARLOCK;
  wire [2:0]s_axi_1_ARPROT;
  wire [3:0]s_axi_1_ARQOS;
  wire s_axi_1_ARREADY;
  wire [1023:0]s_axi_1_ARUSER;
  wire s_axi_1_ARVALID;
  wire [12:0]s_axi_1_AWADDR;
  wire [3:0]s_axi_1_AWCACHE;
  wire [2:0]s_axi_1_AWID;
  wire [7:0]s_axi_1_AWLEN;
  wire [0:0]s_axi_1_AWLOCK;
  wire [2:0]s_axi_1_AWPROT;
  wire [3:0]s_axi_1_AWQOS;
  wire s_axi_1_AWREADY;
  wire [1023:0]s_axi_1_AWUSER;
  wire s_axi_1_AWVALID;
  wire [2:0]s_axi_1_BID;
  wire s_axi_1_BREADY;
  wire [1:0]s_axi_1_BRESP;
  wire [1023:0]s_axi_1_BUSER;
  wire s_axi_1_BVALID;
  wire [31:0]s_axi_1_RDATA;
  wire [2:0]s_axi_1_RID;
  wire s_axi_1_RLAST;
  wire s_axi_1_RREADY;
  wire [1:0]s_axi_1_RRESP;
  wire [1023:0]s_axi_1_RUSER;
  wire s_axi_1_RVALID;
  wire [31:0]s_axi_1_WDATA;
  wire s_axi_1_WLAST;
  wire s_axi_1_WREADY;
  wire [3:0]s_axi_1_WSTRB;
  wire [1023:0]s_axi_1_WUSER;
  wire s_axi_1_WVALID;

  assign aclk_1 = aclk;
  assign aresetn_1 = aresetn;
  assign m06_exit_M_AXI_ARREADY = m_axi_arready;
  assign m06_exit_M_AXI_AWREADY = m_axi_awready;
  assign m06_exit_M_AXI_BRESP = m_axi_bresp[1:0];
  assign m06_exit_M_AXI_BVALID = m_axi_bvalid;
  assign m06_exit_M_AXI_RDATA = m_axi_rdata[31:0];
  assign m06_exit_M_AXI_RLAST = m_axi_rlast;
  assign m06_exit_M_AXI_RRESP = m_axi_rresp[1:0];
  assign m06_exit_M_AXI_RVALID = m_axi_rvalid;
  assign m06_exit_M_AXI_WREADY = m_axi_wready;
  assign m_axi_araddr[12:0] = m06_exit_M_AXI_ARADDR;
  assign m_axi_arburst[1:0] = m06_exit_M_AXI_ARBURST;
  assign m_axi_arcache[3:0] = m06_exit_M_AXI_ARCACHE;
  assign m_axi_arlen[7:0] = m06_exit_M_AXI_ARLEN;
  assign m_axi_arlock[0] = m06_exit_M_AXI_ARLOCK;
  assign m_axi_arprot[2:0] = m06_exit_M_AXI_ARPROT;
  assign m_axi_arqos[3:0] = m06_exit_M_AXI_ARQOS;
  assign m_axi_arsize[2:0] = m06_exit_M_AXI_ARSIZE;
  assign m_axi_aruser[15:0] = m06_exit_M_AXI_ARUSER;
  assign m_axi_arvalid = m06_exit_M_AXI_ARVALID;
  assign m_axi_awaddr[12:0] = m06_exit_M_AXI_AWADDR;
  assign m_axi_awburst[1:0] = m06_exit_M_AXI_AWBURST;
  assign m_axi_awcache[3:0] = m06_exit_M_AXI_AWCACHE;
  assign m_axi_awlen[7:0] = m06_exit_M_AXI_AWLEN;
  assign m_axi_awlock[0] = m06_exit_M_AXI_AWLOCK;
  assign m_axi_awprot[2:0] = m06_exit_M_AXI_AWPROT;
  assign m_axi_awqos[3:0] = m06_exit_M_AXI_AWQOS;
  assign m_axi_awsize[2:0] = m06_exit_M_AXI_AWSIZE;
  assign m_axi_awuser[15:0] = m06_exit_M_AXI_AWUSER;
  assign m_axi_awvalid = m06_exit_M_AXI_AWVALID;
  assign m_axi_bready = m06_exit_M_AXI_BREADY;
  assign m_axi_rready = m06_exit_M_AXI_RREADY;
  assign m_axi_wdata[31:0] = m06_exit_M_AXI_WDATA;
  assign m_axi_wlast = m06_exit_M_AXI_WLAST;
  assign m_axi_wstrb[3:0] = m06_exit_M_AXI_WSTRB;
  assign m_axi_wvalid = m06_exit_M_AXI_WVALID;
  assign s_axi_1_ARADDR = s_axi_araddr[12:0];
  assign s_axi_1_ARCACHE = s_axi_arcache[3:0];
  assign s_axi_1_ARID = s_axi_arid[2:0];
  assign s_axi_1_ARLEN = s_axi_arlen[7:0];
  assign s_axi_1_ARLOCK = s_axi_arlock[0];
  assign s_axi_1_ARPROT = s_axi_arprot[2:0];
  assign s_axi_1_ARQOS = s_axi_arqos[3:0];
  assign s_axi_1_ARUSER = s_axi_aruser[1023:0];
  assign s_axi_1_ARVALID = s_axi_arvalid;
  assign s_axi_1_AWADDR = s_axi_awaddr[12:0];
  assign s_axi_1_AWCACHE = s_axi_awcache[3:0];
  assign s_axi_1_AWID = s_axi_awid[2:0];
  assign s_axi_1_AWLEN = s_axi_awlen[7:0];
  assign s_axi_1_AWLOCK = s_axi_awlock[0];
  assign s_axi_1_AWPROT = s_axi_awprot[2:0];
  assign s_axi_1_AWQOS = s_axi_awqos[3:0];
  assign s_axi_1_AWUSER = s_axi_awuser[1023:0];
  assign s_axi_1_AWVALID = s_axi_awvalid;
  assign s_axi_1_BREADY = s_axi_bready;
  assign s_axi_1_RREADY = s_axi_rready;
  assign s_axi_1_WDATA = s_axi_wdata[31:0];
  assign s_axi_1_WLAST = s_axi_wlast;
  assign s_axi_1_WSTRB = s_axi_wstrb[3:0];
  assign s_axi_1_WUSER = s_axi_wuser[1023:0];
  assign s_axi_1_WVALID = s_axi_wvalid;
  assign s_axi_arready = s_axi_1_ARREADY;
  assign s_axi_awready = s_axi_1_AWREADY;
  assign s_axi_bid[2:0] = s_axi_1_BID;
  assign s_axi_bresp[1:0] = s_axi_1_BRESP;
  assign s_axi_buser[1023:0] = s_axi_1_BUSER;
  assign s_axi_bvalid = s_axi_1_BVALID;
  assign s_axi_rdata[31:0] = s_axi_1_RDATA;
  assign s_axi_rid[2:0] = s_axi_1_RID;
  assign s_axi_rlast = s_axi_1_RLAST;
  assign s_axi_rresp[1:0] = s_axi_1_RRESP;
  assign s_axi_ruser[1023:0] = s_axi_1_RUSER;
  assign s_axi_rvalid = s_axi_1_RVALID;
  assign s_axi_wready = s_axi_1_WREADY;
  bd_afc3_m06e_0 m06_exit
       (.aclk(aclk_1),
        .aresetn(aresetn_1),
        .m_axi_araddr(m06_exit_M_AXI_ARADDR),
        .m_axi_arburst(m06_exit_M_AXI_ARBURST),
        .m_axi_arcache(m06_exit_M_AXI_ARCACHE),
        .m_axi_arlen(m06_exit_M_AXI_ARLEN),
        .m_axi_arlock(m06_exit_M_AXI_ARLOCK),
        .m_axi_arprot(m06_exit_M_AXI_ARPROT),
        .m_axi_arqos(m06_exit_M_AXI_ARQOS),
        .m_axi_arready(m06_exit_M_AXI_ARREADY),
        .m_axi_arsize(m06_exit_M_AXI_ARSIZE),
        .m_axi_aruser(m06_exit_M_AXI_ARUSER),
        .m_axi_arvalid(m06_exit_M_AXI_ARVALID),
        .m_axi_awaddr(m06_exit_M_AXI_AWADDR),
        .m_axi_awburst(m06_exit_M_AXI_AWBURST),
        .m_axi_awcache(m06_exit_M_AXI_AWCACHE),
        .m_axi_awlen(m06_exit_M_AXI_AWLEN),
        .m_axi_awlock(m06_exit_M_AXI_AWLOCK),
        .m_axi_awprot(m06_exit_M_AXI_AWPROT),
        .m_axi_awqos(m06_exit_M_AXI_AWQOS),
        .m_axi_awready(m06_exit_M_AXI_AWREADY),
        .m_axi_awsize(m06_exit_M_AXI_AWSIZE),
        .m_axi_awuser(m06_exit_M_AXI_AWUSER),
        .m_axi_awvalid(m06_exit_M_AXI_AWVALID),
        .m_axi_bready(m06_exit_M_AXI_BREADY),
        .m_axi_bresp(m06_exit_M_AXI_BRESP),
        .m_axi_bvalid(m06_exit_M_AXI_BVALID),
        .m_axi_rdata(m06_exit_M_AXI_RDATA),
        .m_axi_rlast(m06_exit_M_AXI_RLAST),
        .m_axi_rready(m06_exit_M_AXI_RREADY),
        .m_axi_rresp(m06_exit_M_AXI_RRESP),
        .m_axi_rvalid(m06_exit_M_AXI_RVALID),
        .m_axi_wdata(m06_exit_M_AXI_WDATA),
        .m_axi_wlast(m06_exit_M_AXI_WLAST),
        .m_axi_wready(m06_exit_M_AXI_WREADY),
        .m_axi_wstrb(m06_exit_M_AXI_WSTRB),
        .m_axi_wvalid(m06_exit_M_AXI_WVALID),
        .s_axi_araddr(s_axi_1_ARADDR),
        .s_axi_arcache(s_axi_1_ARCACHE),
        .s_axi_arid(s_axi_1_ARID),
        .s_axi_arlen(s_axi_1_ARLEN),
        .s_axi_arlock(s_axi_1_ARLOCK),
        .s_axi_arprot(s_axi_1_ARPROT),
        .s_axi_arqos(s_axi_1_ARQOS),
        .s_axi_arready(s_axi_1_ARREADY),
        .s_axi_aruser(s_axi_1_ARUSER),
        .s_axi_arvalid(s_axi_1_ARVALID),
        .s_axi_awaddr(s_axi_1_AWADDR),
        .s_axi_awcache(s_axi_1_AWCACHE),
        .s_axi_awid(s_axi_1_AWID),
        .s_axi_awlen(s_axi_1_AWLEN),
        .s_axi_awlock(s_axi_1_AWLOCK),
        .s_axi_awprot(s_axi_1_AWPROT),
        .s_axi_awqos(s_axi_1_AWQOS),
        .s_axi_awready(s_axi_1_AWREADY),
        .s_axi_awuser(s_axi_1_AWUSER),
        .s_axi_awvalid(s_axi_1_AWVALID),
        .s_axi_bid(s_axi_1_BID),
        .s_axi_bready(s_axi_1_BREADY),
        .s_axi_bresp(s_axi_1_BRESP),
        .s_axi_buser(s_axi_1_BUSER),
        .s_axi_bvalid(s_axi_1_BVALID),
        .s_axi_rdata(s_axi_1_RDATA),
        .s_axi_rid(s_axi_1_RID),
        .s_axi_rlast(s_axi_1_RLAST),
        .s_axi_rready(s_axi_1_RREADY),
        .s_axi_rresp(s_axi_1_RRESP),
        .s_axi_ruser(s_axi_1_RUSER),
        .s_axi_rvalid(s_axi_1_RVALID),
        .s_axi_wdata(s_axi_1_WDATA),
        .s_axi_wlast(s_axi_1_WLAST),
        .s_axi_wready(s_axi_1_WREADY),
        .s_axi_wstrb(s_axi_1_WSTRB),
        .s_axi_wuser(s_axi_1_WUSER),
        .s_axi_wvalid(s_axi_1_WVALID));
endmodule

module m06_nodes_imp_J6WZP9
   (M_SC_AR_info,
    M_SC_AR_payld,
    M_SC_AR_recv,
    M_SC_AR_req,
    M_SC_AR_send,
    M_SC_AW_info,
    M_SC_AW_payld,
    M_SC_AW_recv,
    M_SC_AW_req,
    M_SC_AW_send,
    M_SC_B_info,
    M_SC_B_payld,
    M_SC_B_recv,
    M_SC_B_req,
    M_SC_B_send,
    M_SC_R_info,
    M_SC_R_payld,
    M_SC_R_recv,
    M_SC_R_req,
    M_SC_R_send,
    M_SC_W_info,
    M_SC_W_payld,
    M_SC_W_recv,
    M_SC_W_req,
    M_SC_W_send,
    S_SC_AR_info,
    S_SC_AR_payld,
    S_SC_AR_recv,
    S_SC_AR_req,
    S_SC_AR_send,
    S_SC_AW_info,
    S_SC_AW_payld,
    S_SC_AW_recv,
    S_SC_AW_req,
    S_SC_AW_send,
    S_SC_B_info,
    S_SC_B_payld,
    S_SC_B_recv,
    S_SC_B_req,
    S_SC_B_send,
    S_SC_R_info,
    S_SC_R_payld,
    S_SC_R_recv,
    S_SC_R_req,
    S_SC_R_send,
    S_SC_W_info,
    S_SC_W_payld,
    S_SC_W_recv,
    S_SC_W_req,
    S_SC_W_send,
    m_axi_aclk,
    m_axi_aresetn,
    s_axi_aclk,
    s_axi_aresetn);
  output [0:0]M_SC_AR_info;
  output [181:0]M_SC_AR_payld;
  input [0:0]M_SC_AR_recv;
  output [0:0]M_SC_AR_req;
  output [0:0]M_SC_AR_send;
  output [0:0]M_SC_AW_info;
  output [181:0]M_SC_AW_payld;
  input [0:0]M_SC_AW_recv;
  output [0:0]M_SC_AW_req;
  output [0:0]M_SC_AW_send;
  output [0:0]M_SC_B_info;
  output [8:0]M_SC_B_payld;
  input [0:0]M_SC_B_recv;
  output [0:0]M_SC_B_req;
  output [0:0]M_SC_B_send;
  output [0:0]M_SC_R_info;
  output [54:0]M_SC_R_payld;
  input [0:0]M_SC_R_recv;
  output [0:0]M_SC_R_req;
  output [0:0]M_SC_R_send;
  output [0:0]M_SC_W_info;
  output [68:0]M_SC_W_payld;
  input [0:0]M_SC_W_recv;
  output [0:0]M_SC_W_req;
  output [0:0]M_SC_W_send;
  input [0:0]S_SC_AR_info;
  input [181:0]S_SC_AR_payld;
  output [0:0]S_SC_AR_recv;
  input [0:0]S_SC_AR_req;
  input [0:0]S_SC_AR_send;
  input [0:0]S_SC_AW_info;
  input [181:0]S_SC_AW_payld;
  output [0:0]S_SC_AW_recv;
  input [0:0]S_SC_AW_req;
  input [0:0]S_SC_AW_send;
  input [0:0]S_SC_B_info;
  input [8:0]S_SC_B_payld;
  output [0:0]S_SC_B_recv;
  input [0:0]S_SC_B_req;
  input [0:0]S_SC_B_send;
  input [0:0]S_SC_R_info;
  input [54:0]S_SC_R_payld;
  output [0:0]S_SC_R_recv;
  input [0:0]S_SC_R_req;
  input [0:0]S_SC_R_send;
  input [0:0]S_SC_W_info;
  input [68:0]S_SC_W_payld;
  output [0:0]S_SC_W_recv;
  input [0:0]S_SC_W_req;
  input [0:0]S_SC_W_send;
  input m_axi_aclk;
  input m_axi_aresetn;
  input s_axi_aclk;
  input s_axi_aresetn;

  wire [0:0]S_SC_AR_1_INFO;
  wire [181:0]S_SC_AR_1_PAYLD;
  wire [0:0]S_SC_AR_1_RECV;
  wire [0:0]S_SC_AR_1_REQ;
  wire [0:0]S_SC_AR_1_SEND;
  wire [0:0]S_SC_AW_1_INFO;
  wire [181:0]S_SC_AW_1_PAYLD;
  wire [0:0]S_SC_AW_1_RECV;
  wire [0:0]S_SC_AW_1_REQ;
  wire [0:0]S_SC_AW_1_SEND;
  wire [0:0]S_SC_B_1_INFO;
  wire [8:0]S_SC_B_1_PAYLD;
  wire [0:0]S_SC_B_1_RECV;
  wire [0:0]S_SC_B_1_REQ;
  wire [0:0]S_SC_B_1_SEND;
  wire [0:0]S_SC_R_1_INFO;
  wire [54:0]S_SC_R_1_PAYLD;
  wire [0:0]S_SC_R_1_RECV;
  wire [0:0]S_SC_R_1_REQ;
  wire [0:0]S_SC_R_1_SEND;
  wire [0:0]S_SC_W_1_INFO;
  wire [68:0]S_SC_W_1_PAYLD;
  wire [0:0]S_SC_W_1_RECV;
  wire [0:0]S_SC_W_1_REQ;
  wire [0:0]S_SC_W_1_SEND;
  wire [0:0]m06_ar_node_M_SC_INFO;
  wire [181:0]m06_ar_node_M_SC_PAYLD;
  wire [0:0]m06_ar_node_M_SC_RECV;
  wire [0:0]m06_ar_node_M_SC_REQ;
  wire [0:0]m06_ar_node_M_SC_SEND;
  wire [0:0]m06_aw_node_M_SC_INFO;
  wire [181:0]m06_aw_node_M_SC_PAYLD;
  wire [0:0]m06_aw_node_M_SC_RECV;
  wire [0:0]m06_aw_node_M_SC_REQ;
  wire [0:0]m06_aw_node_M_SC_SEND;
  wire [0:0]m06_b_node_M_SC_INFO;
  wire [8:0]m06_b_node_M_SC_PAYLD;
  wire [0:0]m06_b_node_M_SC_RECV;
  wire [0:0]m06_b_node_M_SC_REQ;
  wire [0:0]m06_b_node_M_SC_SEND;
  wire [0:0]m06_r_node_M_SC_INFO;
  wire [54:0]m06_r_node_M_SC_PAYLD;
  wire [0:0]m06_r_node_M_SC_RECV;
  wire [0:0]m06_r_node_M_SC_REQ;
  wire [0:0]m06_r_node_M_SC_SEND;
  wire [0:0]m06_w_node_M_SC_INFO;
  wire [68:0]m06_w_node_M_SC_PAYLD;
  wire [0:0]m06_w_node_M_SC_RECV;
  wire [0:0]m06_w_node_M_SC_REQ;
  wire [0:0]m06_w_node_M_SC_SEND;
  wire m_axi_aclk_1;
  wire m_axi_aresetn_1;
  wire s_axi_aclk_1;
  wire s_axi_aresetn_1;

  assign M_SC_AR_info[0] = m06_ar_node_M_SC_INFO;
  assign M_SC_AR_payld[181:0] = m06_ar_node_M_SC_PAYLD;
  assign M_SC_AR_req[0] = m06_ar_node_M_SC_REQ;
  assign M_SC_AR_send[0] = m06_ar_node_M_SC_SEND;
  assign M_SC_AW_info[0] = m06_aw_node_M_SC_INFO;
  assign M_SC_AW_payld[181:0] = m06_aw_node_M_SC_PAYLD;
  assign M_SC_AW_req[0] = m06_aw_node_M_SC_REQ;
  assign M_SC_AW_send[0] = m06_aw_node_M_SC_SEND;
  assign M_SC_B_info[0] = m06_b_node_M_SC_INFO;
  assign M_SC_B_payld[8:0] = m06_b_node_M_SC_PAYLD;
  assign M_SC_B_req[0] = m06_b_node_M_SC_REQ;
  assign M_SC_B_send[0] = m06_b_node_M_SC_SEND;
  assign M_SC_R_info[0] = m06_r_node_M_SC_INFO;
  assign M_SC_R_payld[54:0] = m06_r_node_M_SC_PAYLD;
  assign M_SC_R_req[0] = m06_r_node_M_SC_REQ;
  assign M_SC_R_send[0] = m06_r_node_M_SC_SEND;
  assign M_SC_W_info[0] = m06_w_node_M_SC_INFO;
  assign M_SC_W_payld[68:0] = m06_w_node_M_SC_PAYLD;
  assign M_SC_W_req[0] = m06_w_node_M_SC_REQ;
  assign M_SC_W_send[0] = m06_w_node_M_SC_SEND;
  assign S_SC_AR_1_INFO = S_SC_AR_info[0];
  assign S_SC_AR_1_PAYLD = S_SC_AR_payld[181:0];
  assign S_SC_AR_1_REQ = S_SC_AR_req[0];
  assign S_SC_AR_1_SEND = S_SC_AR_send[0];
  assign S_SC_AR_recv[0] = S_SC_AR_1_RECV;
  assign S_SC_AW_1_INFO = S_SC_AW_info[0];
  assign S_SC_AW_1_PAYLD = S_SC_AW_payld[181:0];
  assign S_SC_AW_1_REQ = S_SC_AW_req[0];
  assign S_SC_AW_1_SEND = S_SC_AW_send[0];
  assign S_SC_AW_recv[0] = S_SC_AW_1_RECV;
  assign S_SC_B_1_INFO = S_SC_B_info[0];
  assign S_SC_B_1_PAYLD = S_SC_B_payld[8:0];
  assign S_SC_B_1_REQ = S_SC_B_req[0];
  assign S_SC_B_1_SEND = S_SC_B_send[0];
  assign S_SC_B_recv[0] = S_SC_B_1_RECV;
  assign S_SC_R_1_INFO = S_SC_R_info[0];
  assign S_SC_R_1_PAYLD = S_SC_R_payld[54:0];
  assign S_SC_R_1_REQ = S_SC_R_req[0];
  assign S_SC_R_1_SEND = S_SC_R_send[0];
  assign S_SC_R_recv[0] = S_SC_R_1_RECV;
  assign S_SC_W_1_INFO = S_SC_W_info[0];
  assign S_SC_W_1_PAYLD = S_SC_W_payld[68:0];
  assign S_SC_W_1_REQ = S_SC_W_req[0];
  assign S_SC_W_1_SEND = S_SC_W_send[0];
  assign S_SC_W_recv[0] = S_SC_W_1_RECV;
  assign m06_ar_node_M_SC_RECV = M_SC_AR_recv[0];
  assign m06_aw_node_M_SC_RECV = M_SC_AW_recv[0];
  assign m06_b_node_M_SC_RECV = M_SC_B_recv[0];
  assign m06_r_node_M_SC_RECV = M_SC_R_recv[0];
  assign m06_w_node_M_SC_RECV = M_SC_W_recv[0];
  assign m_axi_aclk_1 = m_axi_aclk;
  assign m_axi_aresetn_1 = m_axi_aresetn;
  assign s_axi_aclk_1 = s_axi_aclk;
  assign s_axi_aresetn_1 = s_axi_aresetn;
  bd_afc3_m06arn_0 m06_ar_node
       (.m_sc_aclk(m_axi_aclk_1),
        .m_sc_aresetn(m_axi_aresetn_1),
        .m_sc_info(m06_ar_node_M_SC_INFO),
        .m_sc_payld(m06_ar_node_M_SC_PAYLD),
        .m_sc_recv(m06_ar_node_M_SC_RECV),
        .m_sc_req(m06_ar_node_M_SC_REQ),
        .m_sc_send(m06_ar_node_M_SC_SEND),
        .s_sc_aclk(s_axi_aclk_1),
        .s_sc_aresetn(s_axi_aresetn_1),
        .s_sc_info(S_SC_AR_1_INFO),
        .s_sc_payld(S_SC_AR_1_PAYLD),
        .s_sc_recv(S_SC_AR_1_RECV),
        .s_sc_req(S_SC_AR_1_REQ),
        .s_sc_send(S_SC_AR_1_SEND));
  bd_afc3_m06awn_0 m06_aw_node
       (.m_sc_aclk(m_axi_aclk_1),
        .m_sc_aresetn(m_axi_aresetn_1),
        .m_sc_info(m06_aw_node_M_SC_INFO),
        .m_sc_payld(m06_aw_node_M_SC_PAYLD),
        .m_sc_recv(m06_aw_node_M_SC_RECV),
        .m_sc_req(m06_aw_node_M_SC_REQ),
        .m_sc_send(m06_aw_node_M_SC_SEND),
        .s_sc_aclk(s_axi_aclk_1),
        .s_sc_aresetn(s_axi_aresetn_1),
        .s_sc_info(S_SC_AW_1_INFO),
        .s_sc_payld(S_SC_AW_1_PAYLD),
        .s_sc_recv(S_SC_AW_1_RECV),
        .s_sc_req(S_SC_AW_1_REQ),
        .s_sc_send(S_SC_AW_1_SEND));
  bd_afc3_m06bn_0 m06_b_node
       (.m_sc_aclk(s_axi_aclk_1),
        .m_sc_aresetn(s_axi_aresetn_1),
        .m_sc_info(m06_b_node_M_SC_INFO),
        .m_sc_payld(m06_b_node_M_SC_PAYLD),
        .m_sc_recv(m06_b_node_M_SC_RECV),
        .m_sc_req(m06_b_node_M_SC_REQ),
        .m_sc_send(m06_b_node_M_SC_SEND),
        .s_sc_aclk(m_axi_aclk_1),
        .s_sc_aresetn(m_axi_aresetn_1),
        .s_sc_info(S_SC_B_1_INFO),
        .s_sc_payld(S_SC_B_1_PAYLD),
        .s_sc_recv(S_SC_B_1_RECV),
        .s_sc_req(S_SC_B_1_REQ),
        .s_sc_send(S_SC_B_1_SEND));
  bd_afc3_m06rn_0 m06_r_node
       (.m_sc_aclk(s_axi_aclk_1),
        .m_sc_aresetn(s_axi_aresetn_1),
        .m_sc_info(m06_r_node_M_SC_INFO),
        .m_sc_payld(m06_r_node_M_SC_PAYLD),
        .m_sc_recv(m06_r_node_M_SC_RECV),
        .m_sc_req(m06_r_node_M_SC_REQ),
        .m_sc_send(m06_r_node_M_SC_SEND),
        .s_sc_aclk(m_axi_aclk_1),
        .s_sc_aresetn(m_axi_aresetn_1),
        .s_sc_info(S_SC_R_1_INFO),
        .s_sc_payld(S_SC_R_1_PAYLD),
        .s_sc_recv(S_SC_R_1_RECV),
        .s_sc_req(S_SC_R_1_REQ),
        .s_sc_send(S_SC_R_1_SEND));
  bd_afc3_m06wn_0 m06_w_node
       (.m_sc_aclk(m_axi_aclk_1),
        .m_sc_aresetn(m_axi_aresetn_1),
        .m_sc_info(m06_w_node_M_SC_INFO),
        .m_sc_payld(m06_w_node_M_SC_PAYLD),
        .m_sc_recv(m06_w_node_M_SC_RECV),
        .m_sc_req(m06_w_node_M_SC_REQ),
        .m_sc_send(m06_w_node_M_SC_SEND),
        .s_sc_aclk(s_axi_aclk_1),
        .s_sc_aresetn(s_axi_aresetn_1),
        .s_sc_info(S_SC_W_1_INFO),
        .s_sc_payld(S_SC_W_1_PAYLD),
        .s_sc_recv(S_SC_W_1_RECV),
        .s_sc_req(S_SC_W_1_REQ),
        .s_sc_send(S_SC_W_1_SEND));
endmodule

module m07_exit_pipeline_imp_11QOHUV
   (aclk,
    aresetn,
    m_axi_araddr,
    m_axi_arburst,
    m_axi_arcache,
    m_axi_arlen,
    m_axi_arlock,
    m_axi_arprot,
    m_axi_arqos,
    m_axi_arready,
    m_axi_arsize,
    m_axi_aruser,
    m_axi_arvalid,
    m_axi_awaddr,
    m_axi_awburst,
    m_axi_awcache,
    m_axi_awlen,
    m_axi_awlock,
    m_axi_awprot,
    m_axi_awqos,
    m_axi_awready,
    m_axi_awsize,
    m_axi_awuser,
    m_axi_awvalid,
    m_axi_bready,
    m_axi_bresp,
    m_axi_bvalid,
    m_axi_rdata,
    m_axi_rlast,
    m_axi_rready,
    m_axi_rresp,
    m_axi_rvalid,
    m_axi_wdata,
    m_axi_wlast,
    m_axi_wready,
    m_axi_wstrb,
    m_axi_wvalid,
    s_axi_araddr,
    s_axi_arcache,
    s_axi_arid,
    s_axi_arlen,
    s_axi_arlock,
    s_axi_arprot,
    s_axi_arqos,
    s_axi_arready,
    s_axi_aruser,
    s_axi_arvalid,
    s_axi_awaddr,
    s_axi_awcache,
    s_axi_awid,
    s_axi_awlen,
    s_axi_awlock,
    s_axi_awprot,
    s_axi_awqos,
    s_axi_awready,
    s_axi_awuser,
    s_axi_awvalid,
    s_axi_bid,
    s_axi_bready,
    s_axi_bresp,
    s_axi_buser,
    s_axi_bvalid,
    s_axi_rdata,
    s_axi_rid,
    s_axi_rlast,
    s_axi_rready,
    s_axi_rresp,
    s_axi_ruser,
    s_axi_rvalid,
    s_axi_wdata,
    s_axi_wlast,
    s_axi_wready,
    s_axi_wstrb,
    s_axi_wuser,
    s_axi_wvalid);
  input aclk;
  input aresetn;
  output [12:0]m_axi_araddr;
  output [1:0]m_axi_arburst;
  output [3:0]m_axi_arcache;
  output [7:0]m_axi_arlen;
  output [0:0]m_axi_arlock;
  output [2:0]m_axi_arprot;
  output [3:0]m_axi_arqos;
  input m_axi_arready;
  output [2:0]m_axi_arsize;
  output [15:0]m_axi_aruser;
  output m_axi_arvalid;
  output [12:0]m_axi_awaddr;
  output [1:0]m_axi_awburst;
  output [3:0]m_axi_awcache;
  output [7:0]m_axi_awlen;
  output [0:0]m_axi_awlock;
  output [2:0]m_axi_awprot;
  output [3:0]m_axi_awqos;
  input m_axi_awready;
  output [2:0]m_axi_awsize;
  output [15:0]m_axi_awuser;
  output m_axi_awvalid;
  output m_axi_bready;
  input [1:0]m_axi_bresp;
  input m_axi_bvalid;
  input [31:0]m_axi_rdata;
  input m_axi_rlast;
  output m_axi_rready;
  input [1:0]m_axi_rresp;
  input m_axi_rvalid;
  output [31:0]m_axi_wdata;
  output m_axi_wlast;
  input m_axi_wready;
  output [3:0]m_axi_wstrb;
  output m_axi_wvalid;
  input [12:0]s_axi_araddr;
  input [3:0]s_axi_arcache;
  input [2:0]s_axi_arid;
  input [7:0]s_axi_arlen;
  input [0:0]s_axi_arlock;
  input [2:0]s_axi_arprot;
  input [3:0]s_axi_arqos;
  output s_axi_arready;
  input [1023:0]s_axi_aruser;
  input s_axi_arvalid;
  input [12:0]s_axi_awaddr;
  input [3:0]s_axi_awcache;
  input [2:0]s_axi_awid;
  input [7:0]s_axi_awlen;
  input [0:0]s_axi_awlock;
  input [2:0]s_axi_awprot;
  input [3:0]s_axi_awqos;
  output s_axi_awready;
  input [1023:0]s_axi_awuser;
  input s_axi_awvalid;
  output [2:0]s_axi_bid;
  input s_axi_bready;
  output [1:0]s_axi_bresp;
  output [1023:0]s_axi_buser;
  output s_axi_bvalid;
  output [31:0]s_axi_rdata;
  output [2:0]s_axi_rid;
  output s_axi_rlast;
  input s_axi_rready;
  output [1:0]s_axi_rresp;
  output [1023:0]s_axi_ruser;
  output s_axi_rvalid;
  input [31:0]s_axi_wdata;
  input s_axi_wlast;
  output s_axi_wready;
  input [3:0]s_axi_wstrb;
  input [1023:0]s_axi_wuser;
  input s_axi_wvalid;

  wire aclk_1;
  wire aresetn_1;
  wire [12:0]m07_exit_M_AXI_ARADDR;
  wire [1:0]m07_exit_M_AXI_ARBURST;
  wire [3:0]m07_exit_M_AXI_ARCACHE;
  wire [7:0]m07_exit_M_AXI_ARLEN;
  wire [0:0]m07_exit_M_AXI_ARLOCK;
  wire [2:0]m07_exit_M_AXI_ARPROT;
  wire [3:0]m07_exit_M_AXI_ARQOS;
  wire m07_exit_M_AXI_ARREADY;
  wire [2:0]m07_exit_M_AXI_ARSIZE;
  wire [15:0]m07_exit_M_AXI_ARUSER;
  wire m07_exit_M_AXI_ARVALID;
  wire [12:0]m07_exit_M_AXI_AWADDR;
  wire [1:0]m07_exit_M_AXI_AWBURST;
  wire [3:0]m07_exit_M_AXI_AWCACHE;
  wire [7:0]m07_exit_M_AXI_AWLEN;
  wire [0:0]m07_exit_M_AXI_AWLOCK;
  wire [2:0]m07_exit_M_AXI_AWPROT;
  wire [3:0]m07_exit_M_AXI_AWQOS;
  wire m07_exit_M_AXI_AWREADY;
  wire [2:0]m07_exit_M_AXI_AWSIZE;
  wire [15:0]m07_exit_M_AXI_AWUSER;
  wire m07_exit_M_AXI_AWVALID;
  wire m07_exit_M_AXI_BREADY;
  wire [1:0]m07_exit_M_AXI_BRESP;
  wire m07_exit_M_AXI_BVALID;
  wire [31:0]m07_exit_M_AXI_RDATA;
  wire m07_exit_M_AXI_RLAST;
  wire m07_exit_M_AXI_RREADY;
  wire [1:0]m07_exit_M_AXI_RRESP;
  wire m07_exit_M_AXI_RVALID;
  wire [31:0]m07_exit_M_AXI_WDATA;
  wire m07_exit_M_AXI_WLAST;
  wire m07_exit_M_AXI_WREADY;
  wire [3:0]m07_exit_M_AXI_WSTRB;
  wire m07_exit_M_AXI_WVALID;
  wire [12:0]s_axi_1_ARADDR;
  wire [3:0]s_axi_1_ARCACHE;
  wire [2:0]s_axi_1_ARID;
  wire [7:0]s_axi_1_ARLEN;
  wire [0:0]s_axi_1_ARLOCK;
  wire [2:0]s_axi_1_ARPROT;
  wire [3:0]s_axi_1_ARQOS;
  wire s_axi_1_ARREADY;
  wire [1023:0]s_axi_1_ARUSER;
  wire s_axi_1_ARVALID;
  wire [12:0]s_axi_1_AWADDR;
  wire [3:0]s_axi_1_AWCACHE;
  wire [2:0]s_axi_1_AWID;
  wire [7:0]s_axi_1_AWLEN;
  wire [0:0]s_axi_1_AWLOCK;
  wire [2:0]s_axi_1_AWPROT;
  wire [3:0]s_axi_1_AWQOS;
  wire s_axi_1_AWREADY;
  wire [1023:0]s_axi_1_AWUSER;
  wire s_axi_1_AWVALID;
  wire [2:0]s_axi_1_BID;
  wire s_axi_1_BREADY;
  wire [1:0]s_axi_1_BRESP;
  wire [1023:0]s_axi_1_BUSER;
  wire s_axi_1_BVALID;
  wire [31:0]s_axi_1_RDATA;
  wire [2:0]s_axi_1_RID;
  wire s_axi_1_RLAST;
  wire s_axi_1_RREADY;
  wire [1:0]s_axi_1_RRESP;
  wire [1023:0]s_axi_1_RUSER;
  wire s_axi_1_RVALID;
  wire [31:0]s_axi_1_WDATA;
  wire s_axi_1_WLAST;
  wire s_axi_1_WREADY;
  wire [3:0]s_axi_1_WSTRB;
  wire [1023:0]s_axi_1_WUSER;
  wire s_axi_1_WVALID;

  assign aclk_1 = aclk;
  assign aresetn_1 = aresetn;
  assign m07_exit_M_AXI_ARREADY = m_axi_arready;
  assign m07_exit_M_AXI_AWREADY = m_axi_awready;
  assign m07_exit_M_AXI_BRESP = m_axi_bresp[1:0];
  assign m07_exit_M_AXI_BVALID = m_axi_bvalid;
  assign m07_exit_M_AXI_RDATA = m_axi_rdata[31:0];
  assign m07_exit_M_AXI_RLAST = m_axi_rlast;
  assign m07_exit_M_AXI_RRESP = m_axi_rresp[1:0];
  assign m07_exit_M_AXI_RVALID = m_axi_rvalid;
  assign m07_exit_M_AXI_WREADY = m_axi_wready;
  assign m_axi_araddr[12:0] = m07_exit_M_AXI_ARADDR;
  assign m_axi_arburst[1:0] = m07_exit_M_AXI_ARBURST;
  assign m_axi_arcache[3:0] = m07_exit_M_AXI_ARCACHE;
  assign m_axi_arlen[7:0] = m07_exit_M_AXI_ARLEN;
  assign m_axi_arlock[0] = m07_exit_M_AXI_ARLOCK;
  assign m_axi_arprot[2:0] = m07_exit_M_AXI_ARPROT;
  assign m_axi_arqos[3:0] = m07_exit_M_AXI_ARQOS;
  assign m_axi_arsize[2:0] = m07_exit_M_AXI_ARSIZE;
  assign m_axi_aruser[15:0] = m07_exit_M_AXI_ARUSER;
  assign m_axi_arvalid = m07_exit_M_AXI_ARVALID;
  assign m_axi_awaddr[12:0] = m07_exit_M_AXI_AWADDR;
  assign m_axi_awburst[1:0] = m07_exit_M_AXI_AWBURST;
  assign m_axi_awcache[3:0] = m07_exit_M_AXI_AWCACHE;
  assign m_axi_awlen[7:0] = m07_exit_M_AXI_AWLEN;
  assign m_axi_awlock[0] = m07_exit_M_AXI_AWLOCK;
  assign m_axi_awprot[2:0] = m07_exit_M_AXI_AWPROT;
  assign m_axi_awqos[3:0] = m07_exit_M_AXI_AWQOS;
  assign m_axi_awsize[2:0] = m07_exit_M_AXI_AWSIZE;
  assign m_axi_awuser[15:0] = m07_exit_M_AXI_AWUSER;
  assign m_axi_awvalid = m07_exit_M_AXI_AWVALID;
  assign m_axi_bready = m07_exit_M_AXI_BREADY;
  assign m_axi_rready = m07_exit_M_AXI_RREADY;
  assign m_axi_wdata[31:0] = m07_exit_M_AXI_WDATA;
  assign m_axi_wlast = m07_exit_M_AXI_WLAST;
  assign m_axi_wstrb[3:0] = m07_exit_M_AXI_WSTRB;
  assign m_axi_wvalid = m07_exit_M_AXI_WVALID;
  assign s_axi_1_ARADDR = s_axi_araddr[12:0];
  assign s_axi_1_ARCACHE = s_axi_arcache[3:0];
  assign s_axi_1_ARID = s_axi_arid[2:0];
  assign s_axi_1_ARLEN = s_axi_arlen[7:0];
  assign s_axi_1_ARLOCK = s_axi_arlock[0];
  assign s_axi_1_ARPROT = s_axi_arprot[2:0];
  assign s_axi_1_ARQOS = s_axi_arqos[3:0];
  assign s_axi_1_ARUSER = s_axi_aruser[1023:0];
  assign s_axi_1_ARVALID = s_axi_arvalid;
  assign s_axi_1_AWADDR = s_axi_awaddr[12:0];
  assign s_axi_1_AWCACHE = s_axi_awcache[3:0];
  assign s_axi_1_AWID = s_axi_awid[2:0];
  assign s_axi_1_AWLEN = s_axi_awlen[7:0];
  assign s_axi_1_AWLOCK = s_axi_awlock[0];
  assign s_axi_1_AWPROT = s_axi_awprot[2:0];
  assign s_axi_1_AWQOS = s_axi_awqos[3:0];
  assign s_axi_1_AWUSER = s_axi_awuser[1023:0];
  assign s_axi_1_AWVALID = s_axi_awvalid;
  assign s_axi_1_BREADY = s_axi_bready;
  assign s_axi_1_RREADY = s_axi_rready;
  assign s_axi_1_WDATA = s_axi_wdata[31:0];
  assign s_axi_1_WLAST = s_axi_wlast;
  assign s_axi_1_WSTRB = s_axi_wstrb[3:0];
  assign s_axi_1_WUSER = s_axi_wuser[1023:0];
  assign s_axi_1_WVALID = s_axi_wvalid;
  assign s_axi_arready = s_axi_1_ARREADY;
  assign s_axi_awready = s_axi_1_AWREADY;
  assign s_axi_bid[2:0] = s_axi_1_BID;
  assign s_axi_bresp[1:0] = s_axi_1_BRESP;
  assign s_axi_buser[1023:0] = s_axi_1_BUSER;
  assign s_axi_bvalid = s_axi_1_BVALID;
  assign s_axi_rdata[31:0] = s_axi_1_RDATA;
  assign s_axi_rid[2:0] = s_axi_1_RID;
  assign s_axi_rlast = s_axi_1_RLAST;
  assign s_axi_rresp[1:0] = s_axi_1_RRESP;
  assign s_axi_ruser[1023:0] = s_axi_1_RUSER;
  assign s_axi_rvalid = s_axi_1_RVALID;
  assign s_axi_wready = s_axi_1_WREADY;
  bd_afc3_m07e_0 m07_exit
       (.aclk(aclk_1),
        .aresetn(aresetn_1),
        .m_axi_araddr(m07_exit_M_AXI_ARADDR),
        .m_axi_arburst(m07_exit_M_AXI_ARBURST),
        .m_axi_arcache(m07_exit_M_AXI_ARCACHE),
        .m_axi_arlen(m07_exit_M_AXI_ARLEN),
        .m_axi_arlock(m07_exit_M_AXI_ARLOCK),
        .m_axi_arprot(m07_exit_M_AXI_ARPROT),
        .m_axi_arqos(m07_exit_M_AXI_ARQOS),
        .m_axi_arready(m07_exit_M_AXI_ARREADY),
        .m_axi_arsize(m07_exit_M_AXI_ARSIZE),
        .m_axi_aruser(m07_exit_M_AXI_ARUSER),
        .m_axi_arvalid(m07_exit_M_AXI_ARVALID),
        .m_axi_awaddr(m07_exit_M_AXI_AWADDR),
        .m_axi_awburst(m07_exit_M_AXI_AWBURST),
        .m_axi_awcache(m07_exit_M_AXI_AWCACHE),
        .m_axi_awlen(m07_exit_M_AXI_AWLEN),
        .m_axi_awlock(m07_exit_M_AXI_AWLOCK),
        .m_axi_awprot(m07_exit_M_AXI_AWPROT),
        .m_axi_awqos(m07_exit_M_AXI_AWQOS),
        .m_axi_awready(m07_exit_M_AXI_AWREADY),
        .m_axi_awsize(m07_exit_M_AXI_AWSIZE),
        .m_axi_awuser(m07_exit_M_AXI_AWUSER),
        .m_axi_awvalid(m07_exit_M_AXI_AWVALID),
        .m_axi_bready(m07_exit_M_AXI_BREADY),
        .m_axi_bresp(m07_exit_M_AXI_BRESP),
        .m_axi_bvalid(m07_exit_M_AXI_BVALID),
        .m_axi_rdata(m07_exit_M_AXI_RDATA),
        .m_axi_rlast(m07_exit_M_AXI_RLAST),
        .m_axi_rready(m07_exit_M_AXI_RREADY),
        .m_axi_rresp(m07_exit_M_AXI_RRESP),
        .m_axi_rvalid(m07_exit_M_AXI_RVALID),
        .m_axi_wdata(m07_exit_M_AXI_WDATA),
        .m_axi_wlast(m07_exit_M_AXI_WLAST),
        .m_axi_wready(m07_exit_M_AXI_WREADY),
        .m_axi_wstrb(m07_exit_M_AXI_WSTRB),
        .m_axi_wvalid(m07_exit_M_AXI_WVALID),
        .s_axi_araddr(s_axi_1_ARADDR),
        .s_axi_arcache(s_axi_1_ARCACHE),
        .s_axi_arid(s_axi_1_ARID),
        .s_axi_arlen(s_axi_1_ARLEN),
        .s_axi_arlock(s_axi_1_ARLOCK),
        .s_axi_arprot(s_axi_1_ARPROT),
        .s_axi_arqos(s_axi_1_ARQOS),
        .s_axi_arready(s_axi_1_ARREADY),
        .s_axi_aruser(s_axi_1_ARUSER),
        .s_axi_arvalid(s_axi_1_ARVALID),
        .s_axi_awaddr(s_axi_1_AWADDR),
        .s_axi_awcache(s_axi_1_AWCACHE),
        .s_axi_awid(s_axi_1_AWID),
        .s_axi_awlen(s_axi_1_AWLEN),
        .s_axi_awlock(s_axi_1_AWLOCK),
        .s_axi_awprot(s_axi_1_AWPROT),
        .s_axi_awqos(s_axi_1_AWQOS),
        .s_axi_awready(s_axi_1_AWREADY),
        .s_axi_awuser(s_axi_1_AWUSER),
        .s_axi_awvalid(s_axi_1_AWVALID),
        .s_axi_bid(s_axi_1_BID),
        .s_axi_bready(s_axi_1_BREADY),
        .s_axi_bresp(s_axi_1_BRESP),
        .s_axi_buser(s_axi_1_BUSER),
        .s_axi_bvalid(s_axi_1_BVALID),
        .s_axi_rdata(s_axi_1_RDATA),
        .s_axi_rid(s_axi_1_RID),
        .s_axi_rlast(s_axi_1_RLAST),
        .s_axi_rready(s_axi_1_RREADY),
        .s_axi_rresp(s_axi_1_RRESP),
        .s_axi_ruser(s_axi_1_RUSER),
        .s_axi_rvalid(s_axi_1_RVALID),
        .s_axi_wdata(s_axi_1_WDATA),
        .s_axi_wlast(s_axi_1_WLAST),
        .s_axi_wready(s_axi_1_WREADY),
        .s_axi_wstrb(s_axi_1_WSTRB),
        .s_axi_wuser(s_axi_1_WUSER),
        .s_axi_wvalid(s_axi_1_WVALID));
endmodule

module m07_nodes_imp_1NYZNIJ
   (M_SC_AR_info,
    M_SC_AR_payld,
    M_SC_AR_recv,
    M_SC_AR_req,
    M_SC_AR_send,
    M_SC_AW_info,
    M_SC_AW_payld,
    M_SC_AW_recv,
    M_SC_AW_req,
    M_SC_AW_send,
    M_SC_B_info,
    M_SC_B_payld,
    M_SC_B_recv,
    M_SC_B_req,
    M_SC_B_send,
    M_SC_R_info,
    M_SC_R_payld,
    M_SC_R_recv,
    M_SC_R_req,
    M_SC_R_send,
    M_SC_W_info,
    M_SC_W_payld,
    M_SC_W_recv,
    M_SC_W_req,
    M_SC_W_send,
    S_SC_AR_info,
    S_SC_AR_payld,
    S_SC_AR_recv,
    S_SC_AR_req,
    S_SC_AR_send,
    S_SC_AW_info,
    S_SC_AW_payld,
    S_SC_AW_recv,
    S_SC_AW_req,
    S_SC_AW_send,
    S_SC_B_info,
    S_SC_B_payld,
    S_SC_B_recv,
    S_SC_B_req,
    S_SC_B_send,
    S_SC_R_info,
    S_SC_R_payld,
    S_SC_R_recv,
    S_SC_R_req,
    S_SC_R_send,
    S_SC_W_info,
    S_SC_W_payld,
    S_SC_W_recv,
    S_SC_W_req,
    S_SC_W_send,
    m_axi_aclk,
    m_axi_aresetn,
    s_axi_aclk,
    s_axi_aresetn);
  output [0:0]M_SC_AR_info;
  output [181:0]M_SC_AR_payld;
  input [0:0]M_SC_AR_recv;
  output [0:0]M_SC_AR_req;
  output [0:0]M_SC_AR_send;
  output [0:0]M_SC_AW_info;
  output [181:0]M_SC_AW_payld;
  input [0:0]M_SC_AW_recv;
  output [0:0]M_SC_AW_req;
  output [0:0]M_SC_AW_send;
  output [0:0]M_SC_B_info;
  output [8:0]M_SC_B_payld;
  input [0:0]M_SC_B_recv;
  output [0:0]M_SC_B_req;
  output [0:0]M_SC_B_send;
  output [0:0]M_SC_R_info;
  output [54:0]M_SC_R_payld;
  input [0:0]M_SC_R_recv;
  output [0:0]M_SC_R_req;
  output [0:0]M_SC_R_send;
  output [0:0]M_SC_W_info;
  output [68:0]M_SC_W_payld;
  input [0:0]M_SC_W_recv;
  output [0:0]M_SC_W_req;
  output [0:0]M_SC_W_send;
  input [0:0]S_SC_AR_info;
  input [181:0]S_SC_AR_payld;
  output [0:0]S_SC_AR_recv;
  input [0:0]S_SC_AR_req;
  input [0:0]S_SC_AR_send;
  input [0:0]S_SC_AW_info;
  input [181:0]S_SC_AW_payld;
  output [0:0]S_SC_AW_recv;
  input [0:0]S_SC_AW_req;
  input [0:0]S_SC_AW_send;
  input [0:0]S_SC_B_info;
  input [8:0]S_SC_B_payld;
  output [0:0]S_SC_B_recv;
  input [0:0]S_SC_B_req;
  input [0:0]S_SC_B_send;
  input [0:0]S_SC_R_info;
  input [54:0]S_SC_R_payld;
  output [0:0]S_SC_R_recv;
  input [0:0]S_SC_R_req;
  input [0:0]S_SC_R_send;
  input [0:0]S_SC_W_info;
  input [68:0]S_SC_W_payld;
  output [0:0]S_SC_W_recv;
  input [0:0]S_SC_W_req;
  input [0:0]S_SC_W_send;
  input m_axi_aclk;
  input m_axi_aresetn;
  input s_axi_aclk;
  input s_axi_aresetn;

  wire [0:0]S_SC_AR_1_INFO;
  wire [181:0]S_SC_AR_1_PAYLD;
  wire [0:0]S_SC_AR_1_RECV;
  wire [0:0]S_SC_AR_1_REQ;
  wire [0:0]S_SC_AR_1_SEND;
  wire [0:0]S_SC_AW_1_INFO;
  wire [181:0]S_SC_AW_1_PAYLD;
  wire [0:0]S_SC_AW_1_RECV;
  wire [0:0]S_SC_AW_1_REQ;
  wire [0:0]S_SC_AW_1_SEND;
  wire [0:0]S_SC_B_1_INFO;
  wire [8:0]S_SC_B_1_PAYLD;
  wire [0:0]S_SC_B_1_RECV;
  wire [0:0]S_SC_B_1_REQ;
  wire [0:0]S_SC_B_1_SEND;
  wire [0:0]S_SC_R_1_INFO;
  wire [54:0]S_SC_R_1_PAYLD;
  wire [0:0]S_SC_R_1_RECV;
  wire [0:0]S_SC_R_1_REQ;
  wire [0:0]S_SC_R_1_SEND;
  wire [0:0]S_SC_W_1_INFO;
  wire [68:0]S_SC_W_1_PAYLD;
  wire [0:0]S_SC_W_1_RECV;
  wire [0:0]S_SC_W_1_REQ;
  wire [0:0]S_SC_W_1_SEND;
  wire [0:0]m07_ar_node_M_SC_INFO;
  wire [181:0]m07_ar_node_M_SC_PAYLD;
  wire [0:0]m07_ar_node_M_SC_RECV;
  wire [0:0]m07_ar_node_M_SC_REQ;
  wire [0:0]m07_ar_node_M_SC_SEND;
  wire [0:0]m07_aw_node_M_SC_INFO;
  wire [181:0]m07_aw_node_M_SC_PAYLD;
  wire [0:0]m07_aw_node_M_SC_RECV;
  wire [0:0]m07_aw_node_M_SC_REQ;
  wire [0:0]m07_aw_node_M_SC_SEND;
  wire [0:0]m07_b_node_M_SC_INFO;
  wire [8:0]m07_b_node_M_SC_PAYLD;
  wire [0:0]m07_b_node_M_SC_RECV;
  wire [0:0]m07_b_node_M_SC_REQ;
  wire [0:0]m07_b_node_M_SC_SEND;
  wire [0:0]m07_r_node_M_SC_INFO;
  wire [54:0]m07_r_node_M_SC_PAYLD;
  wire [0:0]m07_r_node_M_SC_RECV;
  wire [0:0]m07_r_node_M_SC_REQ;
  wire [0:0]m07_r_node_M_SC_SEND;
  wire [0:0]m07_w_node_M_SC_INFO;
  wire [68:0]m07_w_node_M_SC_PAYLD;
  wire [0:0]m07_w_node_M_SC_RECV;
  wire [0:0]m07_w_node_M_SC_REQ;
  wire [0:0]m07_w_node_M_SC_SEND;
  wire m_axi_aclk_1;
  wire m_axi_aresetn_1;
  wire s_axi_aclk_1;
  wire s_axi_aresetn_1;

  assign M_SC_AR_info[0] = m07_ar_node_M_SC_INFO;
  assign M_SC_AR_payld[181:0] = m07_ar_node_M_SC_PAYLD;
  assign M_SC_AR_req[0] = m07_ar_node_M_SC_REQ;
  assign M_SC_AR_send[0] = m07_ar_node_M_SC_SEND;
  assign M_SC_AW_info[0] = m07_aw_node_M_SC_INFO;
  assign M_SC_AW_payld[181:0] = m07_aw_node_M_SC_PAYLD;
  assign M_SC_AW_req[0] = m07_aw_node_M_SC_REQ;
  assign M_SC_AW_send[0] = m07_aw_node_M_SC_SEND;
  assign M_SC_B_info[0] = m07_b_node_M_SC_INFO;
  assign M_SC_B_payld[8:0] = m07_b_node_M_SC_PAYLD;
  assign M_SC_B_req[0] = m07_b_node_M_SC_REQ;
  assign M_SC_B_send[0] = m07_b_node_M_SC_SEND;
  assign M_SC_R_info[0] = m07_r_node_M_SC_INFO;
  assign M_SC_R_payld[54:0] = m07_r_node_M_SC_PAYLD;
  assign M_SC_R_req[0] = m07_r_node_M_SC_REQ;
  assign M_SC_R_send[0] = m07_r_node_M_SC_SEND;
  assign M_SC_W_info[0] = m07_w_node_M_SC_INFO;
  assign M_SC_W_payld[68:0] = m07_w_node_M_SC_PAYLD;
  assign M_SC_W_req[0] = m07_w_node_M_SC_REQ;
  assign M_SC_W_send[0] = m07_w_node_M_SC_SEND;
  assign S_SC_AR_1_INFO = S_SC_AR_info[0];
  assign S_SC_AR_1_PAYLD = S_SC_AR_payld[181:0];
  assign S_SC_AR_1_REQ = S_SC_AR_req[0];
  assign S_SC_AR_1_SEND = S_SC_AR_send[0];
  assign S_SC_AR_recv[0] = S_SC_AR_1_RECV;
  assign S_SC_AW_1_INFO = S_SC_AW_info[0];
  assign S_SC_AW_1_PAYLD = S_SC_AW_payld[181:0];
  assign S_SC_AW_1_REQ = S_SC_AW_req[0];
  assign S_SC_AW_1_SEND = S_SC_AW_send[0];
  assign S_SC_AW_recv[0] = S_SC_AW_1_RECV;
  assign S_SC_B_1_INFO = S_SC_B_info[0];
  assign S_SC_B_1_PAYLD = S_SC_B_payld[8:0];
  assign S_SC_B_1_REQ = S_SC_B_req[0];
  assign S_SC_B_1_SEND = S_SC_B_send[0];
  assign S_SC_B_recv[0] = S_SC_B_1_RECV;
  assign S_SC_R_1_INFO = S_SC_R_info[0];
  assign S_SC_R_1_PAYLD = S_SC_R_payld[54:0];
  assign S_SC_R_1_REQ = S_SC_R_req[0];
  assign S_SC_R_1_SEND = S_SC_R_send[0];
  assign S_SC_R_recv[0] = S_SC_R_1_RECV;
  assign S_SC_W_1_INFO = S_SC_W_info[0];
  assign S_SC_W_1_PAYLD = S_SC_W_payld[68:0];
  assign S_SC_W_1_REQ = S_SC_W_req[0];
  assign S_SC_W_1_SEND = S_SC_W_send[0];
  assign S_SC_W_recv[0] = S_SC_W_1_RECV;
  assign m07_ar_node_M_SC_RECV = M_SC_AR_recv[0];
  assign m07_aw_node_M_SC_RECV = M_SC_AW_recv[0];
  assign m07_b_node_M_SC_RECV = M_SC_B_recv[0];
  assign m07_r_node_M_SC_RECV = M_SC_R_recv[0];
  assign m07_w_node_M_SC_RECV = M_SC_W_recv[0];
  assign m_axi_aclk_1 = m_axi_aclk;
  assign m_axi_aresetn_1 = m_axi_aresetn;
  assign s_axi_aclk_1 = s_axi_aclk;
  assign s_axi_aresetn_1 = s_axi_aresetn;
  bd_afc3_m07arn_0 m07_ar_node
       (.m_sc_aclk(m_axi_aclk_1),
        .m_sc_aresetn(m_axi_aresetn_1),
        .m_sc_info(m07_ar_node_M_SC_INFO),
        .m_sc_payld(m07_ar_node_M_SC_PAYLD),
        .m_sc_recv(m07_ar_node_M_SC_RECV),
        .m_sc_req(m07_ar_node_M_SC_REQ),
        .m_sc_send(m07_ar_node_M_SC_SEND),
        .s_sc_aclk(s_axi_aclk_1),
        .s_sc_aresetn(s_axi_aresetn_1),
        .s_sc_info(S_SC_AR_1_INFO),
        .s_sc_payld(S_SC_AR_1_PAYLD),
        .s_sc_recv(S_SC_AR_1_RECV),
        .s_sc_req(S_SC_AR_1_REQ),
        .s_sc_send(S_SC_AR_1_SEND));
  bd_afc3_m07awn_0 m07_aw_node
       (.m_sc_aclk(m_axi_aclk_1),
        .m_sc_aresetn(m_axi_aresetn_1),
        .m_sc_info(m07_aw_node_M_SC_INFO),
        .m_sc_payld(m07_aw_node_M_SC_PAYLD),
        .m_sc_recv(m07_aw_node_M_SC_RECV),
        .m_sc_req(m07_aw_node_M_SC_REQ),
        .m_sc_send(m07_aw_node_M_SC_SEND),
        .s_sc_aclk(s_axi_aclk_1),
        .s_sc_aresetn(s_axi_aresetn_1),
        .s_sc_info(S_SC_AW_1_INFO),
        .s_sc_payld(S_SC_AW_1_PAYLD),
        .s_sc_recv(S_SC_AW_1_RECV),
        .s_sc_req(S_SC_AW_1_REQ),
        .s_sc_send(S_SC_AW_1_SEND));
  bd_afc3_m07bn_0 m07_b_node
       (.m_sc_aclk(s_axi_aclk_1),
        .m_sc_aresetn(s_axi_aresetn_1),
        .m_sc_info(m07_b_node_M_SC_INFO),
        .m_sc_payld(m07_b_node_M_SC_PAYLD),
        .m_sc_recv(m07_b_node_M_SC_RECV),
        .m_sc_req(m07_b_node_M_SC_REQ),
        .m_sc_send(m07_b_node_M_SC_SEND),
        .s_sc_aclk(m_axi_aclk_1),
        .s_sc_aresetn(m_axi_aresetn_1),
        .s_sc_info(S_SC_B_1_INFO),
        .s_sc_payld(S_SC_B_1_PAYLD),
        .s_sc_recv(S_SC_B_1_RECV),
        .s_sc_req(S_SC_B_1_REQ),
        .s_sc_send(S_SC_B_1_SEND));
  bd_afc3_m07rn_0 m07_r_node
       (.m_sc_aclk(s_axi_aclk_1),
        .m_sc_aresetn(s_axi_aresetn_1),
        .m_sc_info(m07_r_node_M_SC_INFO),
        .m_sc_payld(m07_r_node_M_SC_PAYLD),
        .m_sc_recv(m07_r_node_M_SC_RECV),
        .m_sc_req(m07_r_node_M_SC_REQ),
        .m_sc_send(m07_r_node_M_SC_SEND),
        .s_sc_aclk(m_axi_aclk_1),
        .s_sc_aresetn(m_axi_aresetn_1),
        .s_sc_info(S_SC_R_1_INFO),
        .s_sc_payld(S_SC_R_1_PAYLD),
        .s_sc_recv(S_SC_R_1_RECV),
        .s_sc_req(S_SC_R_1_REQ),
        .s_sc_send(S_SC_R_1_SEND));
  bd_afc3_m07wn_0 m07_w_node
       (.m_sc_aclk(m_axi_aclk_1),
        .m_sc_aresetn(m_axi_aresetn_1),
        .m_sc_info(m07_w_node_M_SC_INFO),
        .m_sc_payld(m07_w_node_M_SC_PAYLD),
        .m_sc_recv(m07_w_node_M_SC_RECV),
        .m_sc_req(m07_w_node_M_SC_REQ),
        .m_sc_send(m07_w_node_M_SC_SEND),
        .s_sc_aclk(s_axi_aclk_1),
        .s_sc_aresetn(s_axi_aresetn_1),
        .s_sc_info(S_SC_W_1_INFO),
        .s_sc_payld(S_SC_W_1_PAYLD),
        .s_sc_recv(S_SC_W_1_RECV),
        .s_sc_req(S_SC_W_1_REQ),
        .s_sc_send(S_SC_W_1_SEND));
endmodule

module m08_exit_pipeline_imp_NH9SMF
   (aclk,
    aresetn,
    m_axi_araddr,
    m_axi_arburst,
    m_axi_arcache,
    m_axi_arlen,
    m_axi_arlock,
    m_axi_arprot,
    m_axi_arqos,
    m_axi_arready,
    m_axi_arsize,
    m_axi_aruser,
    m_axi_arvalid,
    m_axi_awaddr,
    m_axi_awburst,
    m_axi_awcache,
    m_axi_awlen,
    m_axi_awlock,
    m_axi_awprot,
    m_axi_awqos,
    m_axi_awready,
    m_axi_awsize,
    m_axi_awuser,
    m_axi_awvalid,
    m_axi_bready,
    m_axi_bresp,
    m_axi_bvalid,
    m_axi_rdata,
    m_axi_rlast,
    m_axi_rready,
    m_axi_rresp,
    m_axi_rvalid,
    m_axi_wdata,
    m_axi_wlast,
    m_axi_wready,
    m_axi_wstrb,
    m_axi_wvalid,
    s_axi_araddr,
    s_axi_arcache,
    s_axi_arid,
    s_axi_arlen,
    s_axi_arlock,
    s_axi_arprot,
    s_axi_arqos,
    s_axi_arready,
    s_axi_aruser,
    s_axi_arvalid,
    s_axi_awaddr,
    s_axi_awcache,
    s_axi_awid,
    s_axi_awlen,
    s_axi_awlock,
    s_axi_awprot,
    s_axi_awqos,
    s_axi_awready,
    s_axi_awuser,
    s_axi_awvalid,
    s_axi_bid,
    s_axi_bready,
    s_axi_bresp,
    s_axi_buser,
    s_axi_bvalid,
    s_axi_rdata,
    s_axi_rid,
    s_axi_rlast,
    s_axi_rready,
    s_axi_rresp,
    s_axi_ruser,
    s_axi_rvalid,
    s_axi_wdata,
    s_axi_wlast,
    s_axi_wready,
    s_axi_wstrb,
    s_axi_wuser,
    s_axi_wvalid);
  input aclk;
  input aresetn;
  output [12:0]m_axi_araddr;
  output [1:0]m_axi_arburst;
  output [3:0]m_axi_arcache;
  output [7:0]m_axi_arlen;
  output [0:0]m_axi_arlock;
  output [2:0]m_axi_arprot;
  output [3:0]m_axi_arqos;
  input m_axi_arready;
  output [2:0]m_axi_arsize;
  output [15:0]m_axi_aruser;
  output m_axi_arvalid;
  output [12:0]m_axi_awaddr;
  output [1:0]m_axi_awburst;
  output [3:0]m_axi_awcache;
  output [7:0]m_axi_awlen;
  output [0:0]m_axi_awlock;
  output [2:0]m_axi_awprot;
  output [3:0]m_axi_awqos;
  input m_axi_awready;
  output [2:0]m_axi_awsize;
  output [15:0]m_axi_awuser;
  output m_axi_awvalid;
  output m_axi_bready;
  input [1:0]m_axi_bresp;
  input m_axi_bvalid;
  input [31:0]m_axi_rdata;
  input m_axi_rlast;
  output m_axi_rready;
  input [1:0]m_axi_rresp;
  input m_axi_rvalid;
  output [31:0]m_axi_wdata;
  output m_axi_wlast;
  input m_axi_wready;
  output [3:0]m_axi_wstrb;
  output m_axi_wvalid;
  input [12:0]s_axi_araddr;
  input [3:0]s_axi_arcache;
  input [2:0]s_axi_arid;
  input [7:0]s_axi_arlen;
  input [0:0]s_axi_arlock;
  input [2:0]s_axi_arprot;
  input [3:0]s_axi_arqos;
  output s_axi_arready;
  input [1023:0]s_axi_aruser;
  input s_axi_arvalid;
  input [12:0]s_axi_awaddr;
  input [3:0]s_axi_awcache;
  input [2:0]s_axi_awid;
  input [7:0]s_axi_awlen;
  input [0:0]s_axi_awlock;
  input [2:0]s_axi_awprot;
  input [3:0]s_axi_awqos;
  output s_axi_awready;
  input [1023:0]s_axi_awuser;
  input s_axi_awvalid;
  output [2:0]s_axi_bid;
  input s_axi_bready;
  output [1:0]s_axi_bresp;
  output [1023:0]s_axi_buser;
  output s_axi_bvalid;
  output [31:0]s_axi_rdata;
  output [2:0]s_axi_rid;
  output s_axi_rlast;
  input s_axi_rready;
  output [1:0]s_axi_rresp;
  output [1023:0]s_axi_ruser;
  output s_axi_rvalid;
  input [31:0]s_axi_wdata;
  input s_axi_wlast;
  output s_axi_wready;
  input [3:0]s_axi_wstrb;
  input [1023:0]s_axi_wuser;
  input s_axi_wvalid;

  wire aclk_1;
  wire aresetn_1;
  wire [12:0]m08_exit_M_AXI_ARADDR;
  wire [1:0]m08_exit_M_AXI_ARBURST;
  wire [3:0]m08_exit_M_AXI_ARCACHE;
  wire [7:0]m08_exit_M_AXI_ARLEN;
  wire [0:0]m08_exit_M_AXI_ARLOCK;
  wire [2:0]m08_exit_M_AXI_ARPROT;
  wire [3:0]m08_exit_M_AXI_ARQOS;
  wire m08_exit_M_AXI_ARREADY;
  wire [2:0]m08_exit_M_AXI_ARSIZE;
  wire [15:0]m08_exit_M_AXI_ARUSER;
  wire m08_exit_M_AXI_ARVALID;
  wire [12:0]m08_exit_M_AXI_AWADDR;
  wire [1:0]m08_exit_M_AXI_AWBURST;
  wire [3:0]m08_exit_M_AXI_AWCACHE;
  wire [7:0]m08_exit_M_AXI_AWLEN;
  wire [0:0]m08_exit_M_AXI_AWLOCK;
  wire [2:0]m08_exit_M_AXI_AWPROT;
  wire [3:0]m08_exit_M_AXI_AWQOS;
  wire m08_exit_M_AXI_AWREADY;
  wire [2:0]m08_exit_M_AXI_AWSIZE;
  wire [15:0]m08_exit_M_AXI_AWUSER;
  wire m08_exit_M_AXI_AWVALID;
  wire m08_exit_M_AXI_BREADY;
  wire [1:0]m08_exit_M_AXI_BRESP;
  wire m08_exit_M_AXI_BVALID;
  wire [31:0]m08_exit_M_AXI_RDATA;
  wire m08_exit_M_AXI_RLAST;
  wire m08_exit_M_AXI_RREADY;
  wire [1:0]m08_exit_M_AXI_RRESP;
  wire m08_exit_M_AXI_RVALID;
  wire [31:0]m08_exit_M_AXI_WDATA;
  wire m08_exit_M_AXI_WLAST;
  wire m08_exit_M_AXI_WREADY;
  wire [3:0]m08_exit_M_AXI_WSTRB;
  wire m08_exit_M_AXI_WVALID;
  wire [12:0]s_axi_1_ARADDR;
  wire [3:0]s_axi_1_ARCACHE;
  wire [2:0]s_axi_1_ARID;
  wire [7:0]s_axi_1_ARLEN;
  wire [0:0]s_axi_1_ARLOCK;
  wire [2:0]s_axi_1_ARPROT;
  wire [3:0]s_axi_1_ARQOS;
  wire s_axi_1_ARREADY;
  wire [1023:0]s_axi_1_ARUSER;
  wire s_axi_1_ARVALID;
  wire [12:0]s_axi_1_AWADDR;
  wire [3:0]s_axi_1_AWCACHE;
  wire [2:0]s_axi_1_AWID;
  wire [7:0]s_axi_1_AWLEN;
  wire [0:0]s_axi_1_AWLOCK;
  wire [2:0]s_axi_1_AWPROT;
  wire [3:0]s_axi_1_AWQOS;
  wire s_axi_1_AWREADY;
  wire [1023:0]s_axi_1_AWUSER;
  wire s_axi_1_AWVALID;
  wire [2:0]s_axi_1_BID;
  wire s_axi_1_BREADY;
  wire [1:0]s_axi_1_BRESP;
  wire [1023:0]s_axi_1_BUSER;
  wire s_axi_1_BVALID;
  wire [31:0]s_axi_1_RDATA;
  wire [2:0]s_axi_1_RID;
  wire s_axi_1_RLAST;
  wire s_axi_1_RREADY;
  wire [1:0]s_axi_1_RRESP;
  wire [1023:0]s_axi_1_RUSER;
  wire s_axi_1_RVALID;
  wire [31:0]s_axi_1_WDATA;
  wire s_axi_1_WLAST;
  wire s_axi_1_WREADY;
  wire [3:0]s_axi_1_WSTRB;
  wire [1023:0]s_axi_1_WUSER;
  wire s_axi_1_WVALID;

  assign aclk_1 = aclk;
  assign aresetn_1 = aresetn;
  assign m08_exit_M_AXI_ARREADY = m_axi_arready;
  assign m08_exit_M_AXI_AWREADY = m_axi_awready;
  assign m08_exit_M_AXI_BRESP = m_axi_bresp[1:0];
  assign m08_exit_M_AXI_BVALID = m_axi_bvalid;
  assign m08_exit_M_AXI_RDATA = m_axi_rdata[31:0];
  assign m08_exit_M_AXI_RLAST = m_axi_rlast;
  assign m08_exit_M_AXI_RRESP = m_axi_rresp[1:0];
  assign m08_exit_M_AXI_RVALID = m_axi_rvalid;
  assign m08_exit_M_AXI_WREADY = m_axi_wready;
  assign m_axi_araddr[12:0] = m08_exit_M_AXI_ARADDR;
  assign m_axi_arburst[1:0] = m08_exit_M_AXI_ARBURST;
  assign m_axi_arcache[3:0] = m08_exit_M_AXI_ARCACHE;
  assign m_axi_arlen[7:0] = m08_exit_M_AXI_ARLEN;
  assign m_axi_arlock[0] = m08_exit_M_AXI_ARLOCK;
  assign m_axi_arprot[2:0] = m08_exit_M_AXI_ARPROT;
  assign m_axi_arqos[3:0] = m08_exit_M_AXI_ARQOS;
  assign m_axi_arsize[2:0] = m08_exit_M_AXI_ARSIZE;
  assign m_axi_aruser[15:0] = m08_exit_M_AXI_ARUSER;
  assign m_axi_arvalid = m08_exit_M_AXI_ARVALID;
  assign m_axi_awaddr[12:0] = m08_exit_M_AXI_AWADDR;
  assign m_axi_awburst[1:0] = m08_exit_M_AXI_AWBURST;
  assign m_axi_awcache[3:0] = m08_exit_M_AXI_AWCACHE;
  assign m_axi_awlen[7:0] = m08_exit_M_AXI_AWLEN;
  assign m_axi_awlock[0] = m08_exit_M_AXI_AWLOCK;
  assign m_axi_awprot[2:0] = m08_exit_M_AXI_AWPROT;
  assign m_axi_awqos[3:0] = m08_exit_M_AXI_AWQOS;
  assign m_axi_awsize[2:0] = m08_exit_M_AXI_AWSIZE;
  assign m_axi_awuser[15:0] = m08_exit_M_AXI_AWUSER;
  assign m_axi_awvalid = m08_exit_M_AXI_AWVALID;
  assign m_axi_bready = m08_exit_M_AXI_BREADY;
  assign m_axi_rready = m08_exit_M_AXI_RREADY;
  assign m_axi_wdata[31:0] = m08_exit_M_AXI_WDATA;
  assign m_axi_wlast = m08_exit_M_AXI_WLAST;
  assign m_axi_wstrb[3:0] = m08_exit_M_AXI_WSTRB;
  assign m_axi_wvalid = m08_exit_M_AXI_WVALID;
  assign s_axi_1_ARADDR = s_axi_araddr[12:0];
  assign s_axi_1_ARCACHE = s_axi_arcache[3:0];
  assign s_axi_1_ARID = s_axi_arid[2:0];
  assign s_axi_1_ARLEN = s_axi_arlen[7:0];
  assign s_axi_1_ARLOCK = s_axi_arlock[0];
  assign s_axi_1_ARPROT = s_axi_arprot[2:0];
  assign s_axi_1_ARQOS = s_axi_arqos[3:0];
  assign s_axi_1_ARUSER = s_axi_aruser[1023:0];
  assign s_axi_1_ARVALID = s_axi_arvalid;
  assign s_axi_1_AWADDR = s_axi_awaddr[12:0];
  assign s_axi_1_AWCACHE = s_axi_awcache[3:0];
  assign s_axi_1_AWID = s_axi_awid[2:0];
  assign s_axi_1_AWLEN = s_axi_awlen[7:0];
  assign s_axi_1_AWLOCK = s_axi_awlock[0];
  assign s_axi_1_AWPROT = s_axi_awprot[2:0];
  assign s_axi_1_AWQOS = s_axi_awqos[3:0];
  assign s_axi_1_AWUSER = s_axi_awuser[1023:0];
  assign s_axi_1_AWVALID = s_axi_awvalid;
  assign s_axi_1_BREADY = s_axi_bready;
  assign s_axi_1_RREADY = s_axi_rready;
  assign s_axi_1_WDATA = s_axi_wdata[31:0];
  assign s_axi_1_WLAST = s_axi_wlast;
  assign s_axi_1_WSTRB = s_axi_wstrb[3:0];
  assign s_axi_1_WUSER = s_axi_wuser[1023:0];
  assign s_axi_1_WVALID = s_axi_wvalid;
  assign s_axi_arready = s_axi_1_ARREADY;
  assign s_axi_awready = s_axi_1_AWREADY;
  assign s_axi_bid[2:0] = s_axi_1_BID;
  assign s_axi_bresp[1:0] = s_axi_1_BRESP;
  assign s_axi_buser[1023:0] = s_axi_1_BUSER;
  assign s_axi_bvalid = s_axi_1_BVALID;
  assign s_axi_rdata[31:0] = s_axi_1_RDATA;
  assign s_axi_rid[2:0] = s_axi_1_RID;
  assign s_axi_rlast = s_axi_1_RLAST;
  assign s_axi_rresp[1:0] = s_axi_1_RRESP;
  assign s_axi_ruser[1023:0] = s_axi_1_RUSER;
  assign s_axi_rvalid = s_axi_1_RVALID;
  assign s_axi_wready = s_axi_1_WREADY;
  bd_afc3_m08e_0 m08_exit
       (.aclk(aclk_1),
        .aresetn(aresetn_1),
        .m_axi_araddr(m08_exit_M_AXI_ARADDR),
        .m_axi_arburst(m08_exit_M_AXI_ARBURST),
        .m_axi_arcache(m08_exit_M_AXI_ARCACHE),
        .m_axi_arlen(m08_exit_M_AXI_ARLEN),
        .m_axi_arlock(m08_exit_M_AXI_ARLOCK),
        .m_axi_arprot(m08_exit_M_AXI_ARPROT),
        .m_axi_arqos(m08_exit_M_AXI_ARQOS),
        .m_axi_arready(m08_exit_M_AXI_ARREADY),
        .m_axi_arsize(m08_exit_M_AXI_ARSIZE),
        .m_axi_aruser(m08_exit_M_AXI_ARUSER),
        .m_axi_arvalid(m08_exit_M_AXI_ARVALID),
        .m_axi_awaddr(m08_exit_M_AXI_AWADDR),
        .m_axi_awburst(m08_exit_M_AXI_AWBURST),
        .m_axi_awcache(m08_exit_M_AXI_AWCACHE),
        .m_axi_awlen(m08_exit_M_AXI_AWLEN),
        .m_axi_awlock(m08_exit_M_AXI_AWLOCK),
        .m_axi_awprot(m08_exit_M_AXI_AWPROT),
        .m_axi_awqos(m08_exit_M_AXI_AWQOS),
        .m_axi_awready(m08_exit_M_AXI_AWREADY),
        .m_axi_awsize(m08_exit_M_AXI_AWSIZE),
        .m_axi_awuser(m08_exit_M_AXI_AWUSER),
        .m_axi_awvalid(m08_exit_M_AXI_AWVALID),
        .m_axi_bready(m08_exit_M_AXI_BREADY),
        .m_axi_bresp(m08_exit_M_AXI_BRESP),
        .m_axi_bvalid(m08_exit_M_AXI_BVALID),
        .m_axi_rdata(m08_exit_M_AXI_RDATA),
        .m_axi_rlast(m08_exit_M_AXI_RLAST),
        .m_axi_rready(m08_exit_M_AXI_RREADY),
        .m_axi_rresp(m08_exit_M_AXI_RRESP),
        .m_axi_rvalid(m08_exit_M_AXI_RVALID),
        .m_axi_wdata(m08_exit_M_AXI_WDATA),
        .m_axi_wlast(m08_exit_M_AXI_WLAST),
        .m_axi_wready(m08_exit_M_AXI_WREADY),
        .m_axi_wstrb(m08_exit_M_AXI_WSTRB),
        .m_axi_wvalid(m08_exit_M_AXI_WVALID),
        .s_axi_araddr(s_axi_1_ARADDR),
        .s_axi_arcache(s_axi_1_ARCACHE),
        .s_axi_arid(s_axi_1_ARID),
        .s_axi_arlen(s_axi_1_ARLEN),
        .s_axi_arlock(s_axi_1_ARLOCK),
        .s_axi_arprot(s_axi_1_ARPROT),
        .s_axi_arqos(s_axi_1_ARQOS),
        .s_axi_arready(s_axi_1_ARREADY),
        .s_axi_aruser(s_axi_1_ARUSER),
        .s_axi_arvalid(s_axi_1_ARVALID),
        .s_axi_awaddr(s_axi_1_AWADDR),
        .s_axi_awcache(s_axi_1_AWCACHE),
        .s_axi_awid(s_axi_1_AWID),
        .s_axi_awlen(s_axi_1_AWLEN),
        .s_axi_awlock(s_axi_1_AWLOCK),
        .s_axi_awprot(s_axi_1_AWPROT),
        .s_axi_awqos(s_axi_1_AWQOS),
        .s_axi_awready(s_axi_1_AWREADY),
        .s_axi_awuser(s_axi_1_AWUSER),
        .s_axi_awvalid(s_axi_1_AWVALID),
        .s_axi_bid(s_axi_1_BID),
        .s_axi_bready(s_axi_1_BREADY),
        .s_axi_bresp(s_axi_1_BRESP),
        .s_axi_buser(s_axi_1_BUSER),
        .s_axi_bvalid(s_axi_1_BVALID),
        .s_axi_rdata(s_axi_1_RDATA),
        .s_axi_rid(s_axi_1_RID),
        .s_axi_rlast(s_axi_1_RLAST),
        .s_axi_rready(s_axi_1_RREADY),
        .s_axi_rresp(s_axi_1_RRESP),
        .s_axi_ruser(s_axi_1_RUSER),
        .s_axi_rvalid(s_axi_1_RVALID),
        .s_axi_wdata(s_axi_1_WDATA),
        .s_axi_wlast(s_axi_1_WLAST),
        .s_axi_wready(s_axi_1_WREADY),
        .s_axi_wstrb(s_axi_1_WSTRB),
        .s_axi_wuser(s_axi_1_WUSER),
        .s_axi_wvalid(s_axi_1_WVALID));
endmodule

module m08_nodes_imp_13L9VZX
   (M_SC_AR_info,
    M_SC_AR_payld,
    M_SC_AR_recv,
    M_SC_AR_req,
    M_SC_AR_send,
    M_SC_AW_info,
    M_SC_AW_payld,
    M_SC_AW_recv,
    M_SC_AW_req,
    M_SC_AW_send,
    M_SC_B_info,
    M_SC_B_payld,
    M_SC_B_recv,
    M_SC_B_req,
    M_SC_B_send,
    M_SC_R_info,
    M_SC_R_payld,
    M_SC_R_recv,
    M_SC_R_req,
    M_SC_R_send,
    M_SC_W_info,
    M_SC_W_payld,
    M_SC_W_recv,
    M_SC_W_req,
    M_SC_W_send,
    S_SC_AR_info,
    S_SC_AR_payld,
    S_SC_AR_recv,
    S_SC_AR_req,
    S_SC_AR_send,
    S_SC_AW_info,
    S_SC_AW_payld,
    S_SC_AW_recv,
    S_SC_AW_req,
    S_SC_AW_send,
    S_SC_B_info,
    S_SC_B_payld,
    S_SC_B_recv,
    S_SC_B_req,
    S_SC_B_send,
    S_SC_R_info,
    S_SC_R_payld,
    S_SC_R_recv,
    S_SC_R_req,
    S_SC_R_send,
    S_SC_W_info,
    S_SC_W_payld,
    S_SC_W_recv,
    S_SC_W_req,
    S_SC_W_send,
    m_axi_aclk,
    m_axi_aresetn,
    s_axi_aclk,
    s_axi_aresetn);
  output [0:0]M_SC_AR_info;
  output [181:0]M_SC_AR_payld;
  input [0:0]M_SC_AR_recv;
  output [0:0]M_SC_AR_req;
  output [0:0]M_SC_AR_send;
  output [0:0]M_SC_AW_info;
  output [181:0]M_SC_AW_payld;
  input [0:0]M_SC_AW_recv;
  output [0:0]M_SC_AW_req;
  output [0:0]M_SC_AW_send;
  output [0:0]M_SC_B_info;
  output [8:0]M_SC_B_payld;
  input [0:0]M_SC_B_recv;
  output [0:0]M_SC_B_req;
  output [0:0]M_SC_B_send;
  output [0:0]M_SC_R_info;
  output [54:0]M_SC_R_payld;
  input [0:0]M_SC_R_recv;
  output [0:0]M_SC_R_req;
  output [0:0]M_SC_R_send;
  output [0:0]M_SC_W_info;
  output [68:0]M_SC_W_payld;
  input [0:0]M_SC_W_recv;
  output [0:0]M_SC_W_req;
  output [0:0]M_SC_W_send;
  input [0:0]S_SC_AR_info;
  input [181:0]S_SC_AR_payld;
  output [0:0]S_SC_AR_recv;
  input [0:0]S_SC_AR_req;
  input [0:0]S_SC_AR_send;
  input [0:0]S_SC_AW_info;
  input [181:0]S_SC_AW_payld;
  output [0:0]S_SC_AW_recv;
  input [0:0]S_SC_AW_req;
  input [0:0]S_SC_AW_send;
  input [0:0]S_SC_B_info;
  input [8:0]S_SC_B_payld;
  output [0:0]S_SC_B_recv;
  input [0:0]S_SC_B_req;
  input [0:0]S_SC_B_send;
  input [0:0]S_SC_R_info;
  input [54:0]S_SC_R_payld;
  output [0:0]S_SC_R_recv;
  input [0:0]S_SC_R_req;
  input [0:0]S_SC_R_send;
  input [0:0]S_SC_W_info;
  input [68:0]S_SC_W_payld;
  output [0:0]S_SC_W_recv;
  input [0:0]S_SC_W_req;
  input [0:0]S_SC_W_send;
  input m_axi_aclk;
  input m_axi_aresetn;
  input s_axi_aclk;
  input s_axi_aresetn;

  wire [0:0]S_SC_AR_1_INFO;
  wire [181:0]S_SC_AR_1_PAYLD;
  wire [0:0]S_SC_AR_1_RECV;
  wire [0:0]S_SC_AR_1_REQ;
  wire [0:0]S_SC_AR_1_SEND;
  wire [0:0]S_SC_AW_1_INFO;
  wire [181:0]S_SC_AW_1_PAYLD;
  wire [0:0]S_SC_AW_1_RECV;
  wire [0:0]S_SC_AW_1_REQ;
  wire [0:0]S_SC_AW_1_SEND;
  wire [0:0]S_SC_B_1_INFO;
  wire [8:0]S_SC_B_1_PAYLD;
  wire [0:0]S_SC_B_1_RECV;
  wire [0:0]S_SC_B_1_REQ;
  wire [0:0]S_SC_B_1_SEND;
  wire [0:0]S_SC_R_1_INFO;
  wire [54:0]S_SC_R_1_PAYLD;
  wire [0:0]S_SC_R_1_RECV;
  wire [0:0]S_SC_R_1_REQ;
  wire [0:0]S_SC_R_1_SEND;
  wire [0:0]S_SC_W_1_INFO;
  wire [68:0]S_SC_W_1_PAYLD;
  wire [0:0]S_SC_W_1_RECV;
  wire [0:0]S_SC_W_1_REQ;
  wire [0:0]S_SC_W_1_SEND;
  wire [0:0]m08_ar_node_M_SC_INFO;
  wire [181:0]m08_ar_node_M_SC_PAYLD;
  wire [0:0]m08_ar_node_M_SC_RECV;
  wire [0:0]m08_ar_node_M_SC_REQ;
  wire [0:0]m08_ar_node_M_SC_SEND;
  wire [0:0]m08_aw_node_M_SC_INFO;
  wire [181:0]m08_aw_node_M_SC_PAYLD;
  wire [0:0]m08_aw_node_M_SC_RECV;
  wire [0:0]m08_aw_node_M_SC_REQ;
  wire [0:0]m08_aw_node_M_SC_SEND;
  wire [0:0]m08_b_node_M_SC_INFO;
  wire [8:0]m08_b_node_M_SC_PAYLD;
  wire [0:0]m08_b_node_M_SC_RECV;
  wire [0:0]m08_b_node_M_SC_REQ;
  wire [0:0]m08_b_node_M_SC_SEND;
  wire [0:0]m08_r_node_M_SC_INFO;
  wire [54:0]m08_r_node_M_SC_PAYLD;
  wire [0:0]m08_r_node_M_SC_RECV;
  wire [0:0]m08_r_node_M_SC_REQ;
  wire [0:0]m08_r_node_M_SC_SEND;
  wire [0:0]m08_w_node_M_SC_INFO;
  wire [68:0]m08_w_node_M_SC_PAYLD;
  wire [0:0]m08_w_node_M_SC_RECV;
  wire [0:0]m08_w_node_M_SC_REQ;
  wire [0:0]m08_w_node_M_SC_SEND;
  wire m_axi_aclk_1;
  wire m_axi_aresetn_1;
  wire s_axi_aclk_1;
  wire s_axi_aresetn_1;

  assign M_SC_AR_info[0] = m08_ar_node_M_SC_INFO;
  assign M_SC_AR_payld[181:0] = m08_ar_node_M_SC_PAYLD;
  assign M_SC_AR_req[0] = m08_ar_node_M_SC_REQ;
  assign M_SC_AR_send[0] = m08_ar_node_M_SC_SEND;
  assign M_SC_AW_info[0] = m08_aw_node_M_SC_INFO;
  assign M_SC_AW_payld[181:0] = m08_aw_node_M_SC_PAYLD;
  assign M_SC_AW_req[0] = m08_aw_node_M_SC_REQ;
  assign M_SC_AW_send[0] = m08_aw_node_M_SC_SEND;
  assign M_SC_B_info[0] = m08_b_node_M_SC_INFO;
  assign M_SC_B_payld[8:0] = m08_b_node_M_SC_PAYLD;
  assign M_SC_B_req[0] = m08_b_node_M_SC_REQ;
  assign M_SC_B_send[0] = m08_b_node_M_SC_SEND;
  assign M_SC_R_info[0] = m08_r_node_M_SC_INFO;
  assign M_SC_R_payld[54:0] = m08_r_node_M_SC_PAYLD;
  assign M_SC_R_req[0] = m08_r_node_M_SC_REQ;
  assign M_SC_R_send[0] = m08_r_node_M_SC_SEND;
  assign M_SC_W_info[0] = m08_w_node_M_SC_INFO;
  assign M_SC_W_payld[68:0] = m08_w_node_M_SC_PAYLD;
  assign M_SC_W_req[0] = m08_w_node_M_SC_REQ;
  assign M_SC_W_send[0] = m08_w_node_M_SC_SEND;
  assign S_SC_AR_1_INFO = S_SC_AR_info[0];
  assign S_SC_AR_1_PAYLD = S_SC_AR_payld[181:0];
  assign S_SC_AR_1_REQ = S_SC_AR_req[0];
  assign S_SC_AR_1_SEND = S_SC_AR_send[0];
  assign S_SC_AR_recv[0] = S_SC_AR_1_RECV;
  assign S_SC_AW_1_INFO = S_SC_AW_info[0];
  assign S_SC_AW_1_PAYLD = S_SC_AW_payld[181:0];
  assign S_SC_AW_1_REQ = S_SC_AW_req[0];
  assign S_SC_AW_1_SEND = S_SC_AW_send[0];
  assign S_SC_AW_recv[0] = S_SC_AW_1_RECV;
  assign S_SC_B_1_INFO = S_SC_B_info[0];
  assign S_SC_B_1_PAYLD = S_SC_B_payld[8:0];
  assign S_SC_B_1_REQ = S_SC_B_req[0];
  assign S_SC_B_1_SEND = S_SC_B_send[0];
  assign S_SC_B_recv[0] = S_SC_B_1_RECV;
  assign S_SC_R_1_INFO = S_SC_R_info[0];
  assign S_SC_R_1_PAYLD = S_SC_R_payld[54:0];
  assign S_SC_R_1_REQ = S_SC_R_req[0];
  assign S_SC_R_1_SEND = S_SC_R_send[0];
  assign S_SC_R_recv[0] = S_SC_R_1_RECV;
  assign S_SC_W_1_INFO = S_SC_W_info[0];
  assign S_SC_W_1_PAYLD = S_SC_W_payld[68:0];
  assign S_SC_W_1_REQ = S_SC_W_req[0];
  assign S_SC_W_1_SEND = S_SC_W_send[0];
  assign S_SC_W_recv[0] = S_SC_W_1_RECV;
  assign m08_ar_node_M_SC_RECV = M_SC_AR_recv[0];
  assign m08_aw_node_M_SC_RECV = M_SC_AW_recv[0];
  assign m08_b_node_M_SC_RECV = M_SC_B_recv[0];
  assign m08_r_node_M_SC_RECV = M_SC_R_recv[0];
  assign m08_w_node_M_SC_RECV = M_SC_W_recv[0];
  assign m_axi_aclk_1 = m_axi_aclk;
  assign m_axi_aresetn_1 = m_axi_aresetn;
  assign s_axi_aclk_1 = s_axi_aclk;
  assign s_axi_aresetn_1 = s_axi_aresetn;
  bd_afc3_m08arn_0 m08_ar_node
       (.m_sc_aclk(m_axi_aclk_1),
        .m_sc_aresetn(m_axi_aresetn_1),
        .m_sc_info(m08_ar_node_M_SC_INFO),
        .m_sc_payld(m08_ar_node_M_SC_PAYLD),
        .m_sc_recv(m08_ar_node_M_SC_RECV),
        .m_sc_req(m08_ar_node_M_SC_REQ),
        .m_sc_send(m08_ar_node_M_SC_SEND),
        .s_sc_aclk(s_axi_aclk_1),
        .s_sc_aresetn(s_axi_aresetn_1),
        .s_sc_info(S_SC_AR_1_INFO),
        .s_sc_payld(S_SC_AR_1_PAYLD),
        .s_sc_recv(S_SC_AR_1_RECV),
        .s_sc_req(S_SC_AR_1_REQ),
        .s_sc_send(S_SC_AR_1_SEND));
  bd_afc3_m08awn_0 m08_aw_node
       (.m_sc_aclk(m_axi_aclk_1),
        .m_sc_aresetn(m_axi_aresetn_1),
        .m_sc_info(m08_aw_node_M_SC_INFO),
        .m_sc_payld(m08_aw_node_M_SC_PAYLD),
        .m_sc_recv(m08_aw_node_M_SC_RECV),
        .m_sc_req(m08_aw_node_M_SC_REQ),
        .m_sc_send(m08_aw_node_M_SC_SEND),
        .s_sc_aclk(s_axi_aclk_1),
        .s_sc_aresetn(s_axi_aresetn_1),
        .s_sc_info(S_SC_AW_1_INFO),
        .s_sc_payld(S_SC_AW_1_PAYLD),
        .s_sc_recv(S_SC_AW_1_RECV),
        .s_sc_req(S_SC_AW_1_REQ),
        .s_sc_send(S_SC_AW_1_SEND));
  bd_afc3_m08bn_0 m08_b_node
       (.m_sc_aclk(s_axi_aclk_1),
        .m_sc_aresetn(s_axi_aresetn_1),
        .m_sc_info(m08_b_node_M_SC_INFO),
        .m_sc_payld(m08_b_node_M_SC_PAYLD),
        .m_sc_recv(m08_b_node_M_SC_RECV),
        .m_sc_req(m08_b_node_M_SC_REQ),
        .m_sc_send(m08_b_node_M_SC_SEND),
        .s_sc_aclk(m_axi_aclk_1),
        .s_sc_aresetn(m_axi_aresetn_1),
        .s_sc_info(S_SC_B_1_INFO),
        .s_sc_payld(S_SC_B_1_PAYLD),
        .s_sc_recv(S_SC_B_1_RECV),
        .s_sc_req(S_SC_B_1_REQ),
        .s_sc_send(S_SC_B_1_SEND));
  bd_afc3_m08rn_0 m08_r_node
       (.m_sc_aclk(s_axi_aclk_1),
        .m_sc_aresetn(s_axi_aresetn_1),
        .m_sc_info(m08_r_node_M_SC_INFO),
        .m_sc_payld(m08_r_node_M_SC_PAYLD),
        .m_sc_recv(m08_r_node_M_SC_RECV),
        .m_sc_req(m08_r_node_M_SC_REQ),
        .m_sc_send(m08_r_node_M_SC_SEND),
        .s_sc_aclk(m_axi_aclk_1),
        .s_sc_aresetn(m_axi_aresetn_1),
        .s_sc_info(S_SC_R_1_INFO),
        .s_sc_payld(S_SC_R_1_PAYLD),
        .s_sc_recv(S_SC_R_1_RECV),
        .s_sc_req(S_SC_R_1_REQ),
        .s_sc_send(S_SC_R_1_SEND));
  bd_afc3_m08wn_0 m08_w_node
       (.m_sc_aclk(m_axi_aclk_1),
        .m_sc_aresetn(m_axi_aresetn_1),
        .m_sc_info(m08_w_node_M_SC_INFO),
        .m_sc_payld(m08_w_node_M_SC_PAYLD),
        .m_sc_recv(m08_w_node_M_SC_RECV),
        .m_sc_req(m08_w_node_M_SC_REQ),
        .m_sc_send(m08_w_node_M_SC_SEND),
        .s_sc_aclk(s_axi_aclk_1),
        .s_sc_aresetn(s_axi_aresetn_1),
        .s_sc_info(S_SC_W_1_INFO),
        .s_sc_payld(S_SC_W_1_PAYLD),
        .s_sc_recv(S_SC_W_1_RECV),
        .s_sc_req(S_SC_W_1_REQ),
        .s_sc_send(S_SC_W_1_SEND));
endmodule

module m09_exit_pipeline_imp_ISDV53
   (aclk,
    aresetn,
    m_axi_araddr,
    m_axi_arburst,
    m_axi_arcache,
    m_axi_arlen,
    m_axi_arlock,
    m_axi_arprot,
    m_axi_arqos,
    m_axi_arready,
    m_axi_arsize,
    m_axi_aruser,
    m_axi_arvalid,
    m_axi_awaddr,
    m_axi_awburst,
    m_axi_awcache,
    m_axi_awlen,
    m_axi_awlock,
    m_axi_awprot,
    m_axi_awqos,
    m_axi_awready,
    m_axi_awsize,
    m_axi_awuser,
    m_axi_awvalid,
    m_axi_bready,
    m_axi_bresp,
    m_axi_bvalid,
    m_axi_rdata,
    m_axi_rlast,
    m_axi_rready,
    m_axi_rresp,
    m_axi_rvalid,
    m_axi_wdata,
    m_axi_wlast,
    m_axi_wready,
    m_axi_wstrb,
    m_axi_wvalid,
    s_axi_araddr,
    s_axi_arcache,
    s_axi_arid,
    s_axi_arlen,
    s_axi_arlock,
    s_axi_arprot,
    s_axi_arqos,
    s_axi_arready,
    s_axi_aruser,
    s_axi_arvalid,
    s_axi_awaddr,
    s_axi_awcache,
    s_axi_awid,
    s_axi_awlen,
    s_axi_awlock,
    s_axi_awprot,
    s_axi_awqos,
    s_axi_awready,
    s_axi_awuser,
    s_axi_awvalid,
    s_axi_bid,
    s_axi_bready,
    s_axi_bresp,
    s_axi_buser,
    s_axi_bvalid,
    s_axi_rdata,
    s_axi_rid,
    s_axi_rlast,
    s_axi_rready,
    s_axi_rresp,
    s_axi_ruser,
    s_axi_rvalid,
    s_axi_wdata,
    s_axi_wlast,
    s_axi_wready,
    s_axi_wstrb,
    s_axi_wuser,
    s_axi_wvalid);
  input aclk;
  input aresetn;
  output [12:0]m_axi_araddr;
  output [1:0]m_axi_arburst;
  output [3:0]m_axi_arcache;
  output [7:0]m_axi_arlen;
  output [0:0]m_axi_arlock;
  output [2:0]m_axi_arprot;
  output [3:0]m_axi_arqos;
  input m_axi_arready;
  output [2:0]m_axi_arsize;
  output [15:0]m_axi_aruser;
  output m_axi_arvalid;
  output [12:0]m_axi_awaddr;
  output [1:0]m_axi_awburst;
  output [3:0]m_axi_awcache;
  output [7:0]m_axi_awlen;
  output [0:0]m_axi_awlock;
  output [2:0]m_axi_awprot;
  output [3:0]m_axi_awqos;
  input m_axi_awready;
  output [2:0]m_axi_awsize;
  output [15:0]m_axi_awuser;
  output m_axi_awvalid;
  output m_axi_bready;
  input [1:0]m_axi_bresp;
  input m_axi_bvalid;
  input [31:0]m_axi_rdata;
  input m_axi_rlast;
  output m_axi_rready;
  input [1:0]m_axi_rresp;
  input m_axi_rvalid;
  output [31:0]m_axi_wdata;
  output m_axi_wlast;
  input m_axi_wready;
  output [3:0]m_axi_wstrb;
  output m_axi_wvalid;
  input [12:0]s_axi_araddr;
  input [3:0]s_axi_arcache;
  input [2:0]s_axi_arid;
  input [7:0]s_axi_arlen;
  input [0:0]s_axi_arlock;
  input [2:0]s_axi_arprot;
  input [3:0]s_axi_arqos;
  output s_axi_arready;
  input [1023:0]s_axi_aruser;
  input s_axi_arvalid;
  input [12:0]s_axi_awaddr;
  input [3:0]s_axi_awcache;
  input [2:0]s_axi_awid;
  input [7:0]s_axi_awlen;
  input [0:0]s_axi_awlock;
  input [2:0]s_axi_awprot;
  input [3:0]s_axi_awqos;
  output s_axi_awready;
  input [1023:0]s_axi_awuser;
  input s_axi_awvalid;
  output [2:0]s_axi_bid;
  input s_axi_bready;
  output [1:0]s_axi_bresp;
  output [1023:0]s_axi_buser;
  output s_axi_bvalid;
  output [31:0]s_axi_rdata;
  output [2:0]s_axi_rid;
  output s_axi_rlast;
  input s_axi_rready;
  output [1:0]s_axi_rresp;
  output [1023:0]s_axi_ruser;
  output s_axi_rvalid;
  input [31:0]s_axi_wdata;
  input s_axi_wlast;
  output s_axi_wready;
  input [3:0]s_axi_wstrb;
  input [1023:0]s_axi_wuser;
  input s_axi_wvalid;

  wire aclk_1;
  wire aresetn_1;
  wire [12:0]m09_exit_M_AXI_ARADDR;
  wire [1:0]m09_exit_M_AXI_ARBURST;
  wire [3:0]m09_exit_M_AXI_ARCACHE;
  wire [7:0]m09_exit_M_AXI_ARLEN;
  wire [0:0]m09_exit_M_AXI_ARLOCK;
  wire [2:0]m09_exit_M_AXI_ARPROT;
  wire [3:0]m09_exit_M_AXI_ARQOS;
  wire m09_exit_M_AXI_ARREADY;
  wire [2:0]m09_exit_M_AXI_ARSIZE;
  wire [15:0]m09_exit_M_AXI_ARUSER;
  wire m09_exit_M_AXI_ARVALID;
  wire [12:0]m09_exit_M_AXI_AWADDR;
  wire [1:0]m09_exit_M_AXI_AWBURST;
  wire [3:0]m09_exit_M_AXI_AWCACHE;
  wire [7:0]m09_exit_M_AXI_AWLEN;
  wire [0:0]m09_exit_M_AXI_AWLOCK;
  wire [2:0]m09_exit_M_AXI_AWPROT;
  wire [3:0]m09_exit_M_AXI_AWQOS;
  wire m09_exit_M_AXI_AWREADY;
  wire [2:0]m09_exit_M_AXI_AWSIZE;
  wire [15:0]m09_exit_M_AXI_AWUSER;
  wire m09_exit_M_AXI_AWVALID;
  wire m09_exit_M_AXI_BREADY;
  wire [1:0]m09_exit_M_AXI_BRESP;
  wire m09_exit_M_AXI_BVALID;
  wire [31:0]m09_exit_M_AXI_RDATA;
  wire m09_exit_M_AXI_RLAST;
  wire m09_exit_M_AXI_RREADY;
  wire [1:0]m09_exit_M_AXI_RRESP;
  wire m09_exit_M_AXI_RVALID;
  wire [31:0]m09_exit_M_AXI_WDATA;
  wire m09_exit_M_AXI_WLAST;
  wire m09_exit_M_AXI_WREADY;
  wire [3:0]m09_exit_M_AXI_WSTRB;
  wire m09_exit_M_AXI_WVALID;
  wire [12:0]s_axi_1_ARADDR;
  wire [3:0]s_axi_1_ARCACHE;
  wire [2:0]s_axi_1_ARID;
  wire [7:0]s_axi_1_ARLEN;
  wire [0:0]s_axi_1_ARLOCK;
  wire [2:0]s_axi_1_ARPROT;
  wire [3:0]s_axi_1_ARQOS;
  wire s_axi_1_ARREADY;
  wire [1023:0]s_axi_1_ARUSER;
  wire s_axi_1_ARVALID;
  wire [12:0]s_axi_1_AWADDR;
  wire [3:0]s_axi_1_AWCACHE;
  wire [2:0]s_axi_1_AWID;
  wire [7:0]s_axi_1_AWLEN;
  wire [0:0]s_axi_1_AWLOCK;
  wire [2:0]s_axi_1_AWPROT;
  wire [3:0]s_axi_1_AWQOS;
  wire s_axi_1_AWREADY;
  wire [1023:0]s_axi_1_AWUSER;
  wire s_axi_1_AWVALID;
  wire [2:0]s_axi_1_BID;
  wire s_axi_1_BREADY;
  wire [1:0]s_axi_1_BRESP;
  wire [1023:0]s_axi_1_BUSER;
  wire s_axi_1_BVALID;
  wire [31:0]s_axi_1_RDATA;
  wire [2:0]s_axi_1_RID;
  wire s_axi_1_RLAST;
  wire s_axi_1_RREADY;
  wire [1:0]s_axi_1_RRESP;
  wire [1023:0]s_axi_1_RUSER;
  wire s_axi_1_RVALID;
  wire [31:0]s_axi_1_WDATA;
  wire s_axi_1_WLAST;
  wire s_axi_1_WREADY;
  wire [3:0]s_axi_1_WSTRB;
  wire [1023:0]s_axi_1_WUSER;
  wire s_axi_1_WVALID;

  assign aclk_1 = aclk;
  assign aresetn_1 = aresetn;
  assign m09_exit_M_AXI_ARREADY = m_axi_arready;
  assign m09_exit_M_AXI_AWREADY = m_axi_awready;
  assign m09_exit_M_AXI_BRESP = m_axi_bresp[1:0];
  assign m09_exit_M_AXI_BVALID = m_axi_bvalid;
  assign m09_exit_M_AXI_RDATA = m_axi_rdata[31:0];
  assign m09_exit_M_AXI_RLAST = m_axi_rlast;
  assign m09_exit_M_AXI_RRESP = m_axi_rresp[1:0];
  assign m09_exit_M_AXI_RVALID = m_axi_rvalid;
  assign m09_exit_M_AXI_WREADY = m_axi_wready;
  assign m_axi_araddr[12:0] = m09_exit_M_AXI_ARADDR;
  assign m_axi_arburst[1:0] = m09_exit_M_AXI_ARBURST;
  assign m_axi_arcache[3:0] = m09_exit_M_AXI_ARCACHE;
  assign m_axi_arlen[7:0] = m09_exit_M_AXI_ARLEN;
  assign m_axi_arlock[0] = m09_exit_M_AXI_ARLOCK;
  assign m_axi_arprot[2:0] = m09_exit_M_AXI_ARPROT;
  assign m_axi_arqos[3:0] = m09_exit_M_AXI_ARQOS;
  assign m_axi_arsize[2:0] = m09_exit_M_AXI_ARSIZE;
  assign m_axi_aruser[15:0] = m09_exit_M_AXI_ARUSER;
  assign m_axi_arvalid = m09_exit_M_AXI_ARVALID;
  assign m_axi_awaddr[12:0] = m09_exit_M_AXI_AWADDR;
  assign m_axi_awburst[1:0] = m09_exit_M_AXI_AWBURST;
  assign m_axi_awcache[3:0] = m09_exit_M_AXI_AWCACHE;
  assign m_axi_awlen[7:0] = m09_exit_M_AXI_AWLEN;
  assign m_axi_awlock[0] = m09_exit_M_AXI_AWLOCK;
  assign m_axi_awprot[2:0] = m09_exit_M_AXI_AWPROT;
  assign m_axi_awqos[3:0] = m09_exit_M_AXI_AWQOS;
  assign m_axi_awsize[2:0] = m09_exit_M_AXI_AWSIZE;
  assign m_axi_awuser[15:0] = m09_exit_M_AXI_AWUSER;
  assign m_axi_awvalid = m09_exit_M_AXI_AWVALID;
  assign m_axi_bready = m09_exit_M_AXI_BREADY;
  assign m_axi_rready = m09_exit_M_AXI_RREADY;
  assign m_axi_wdata[31:0] = m09_exit_M_AXI_WDATA;
  assign m_axi_wlast = m09_exit_M_AXI_WLAST;
  assign m_axi_wstrb[3:0] = m09_exit_M_AXI_WSTRB;
  assign m_axi_wvalid = m09_exit_M_AXI_WVALID;
  assign s_axi_1_ARADDR = s_axi_araddr[12:0];
  assign s_axi_1_ARCACHE = s_axi_arcache[3:0];
  assign s_axi_1_ARID = s_axi_arid[2:0];
  assign s_axi_1_ARLEN = s_axi_arlen[7:0];
  assign s_axi_1_ARLOCK = s_axi_arlock[0];
  assign s_axi_1_ARPROT = s_axi_arprot[2:0];
  assign s_axi_1_ARQOS = s_axi_arqos[3:0];
  assign s_axi_1_ARUSER = s_axi_aruser[1023:0];
  assign s_axi_1_ARVALID = s_axi_arvalid;
  assign s_axi_1_AWADDR = s_axi_awaddr[12:0];
  assign s_axi_1_AWCACHE = s_axi_awcache[3:0];
  assign s_axi_1_AWID = s_axi_awid[2:0];
  assign s_axi_1_AWLEN = s_axi_awlen[7:0];
  assign s_axi_1_AWLOCK = s_axi_awlock[0];
  assign s_axi_1_AWPROT = s_axi_awprot[2:0];
  assign s_axi_1_AWQOS = s_axi_awqos[3:0];
  assign s_axi_1_AWUSER = s_axi_awuser[1023:0];
  assign s_axi_1_AWVALID = s_axi_awvalid;
  assign s_axi_1_BREADY = s_axi_bready;
  assign s_axi_1_RREADY = s_axi_rready;
  assign s_axi_1_WDATA = s_axi_wdata[31:0];
  assign s_axi_1_WLAST = s_axi_wlast;
  assign s_axi_1_WSTRB = s_axi_wstrb[3:0];
  assign s_axi_1_WUSER = s_axi_wuser[1023:0];
  assign s_axi_1_WVALID = s_axi_wvalid;
  assign s_axi_arready = s_axi_1_ARREADY;
  assign s_axi_awready = s_axi_1_AWREADY;
  assign s_axi_bid[2:0] = s_axi_1_BID;
  assign s_axi_bresp[1:0] = s_axi_1_BRESP;
  assign s_axi_buser[1023:0] = s_axi_1_BUSER;
  assign s_axi_bvalid = s_axi_1_BVALID;
  assign s_axi_rdata[31:0] = s_axi_1_RDATA;
  assign s_axi_rid[2:0] = s_axi_1_RID;
  assign s_axi_rlast = s_axi_1_RLAST;
  assign s_axi_rresp[1:0] = s_axi_1_RRESP;
  assign s_axi_ruser[1023:0] = s_axi_1_RUSER;
  assign s_axi_rvalid = s_axi_1_RVALID;
  assign s_axi_wready = s_axi_1_WREADY;
  bd_afc3_m09e_0 m09_exit
       (.aclk(aclk_1),
        .aresetn(aresetn_1),
        .m_axi_araddr(m09_exit_M_AXI_ARADDR),
        .m_axi_arburst(m09_exit_M_AXI_ARBURST),
        .m_axi_arcache(m09_exit_M_AXI_ARCACHE),
        .m_axi_arlen(m09_exit_M_AXI_ARLEN),
        .m_axi_arlock(m09_exit_M_AXI_ARLOCK),
        .m_axi_arprot(m09_exit_M_AXI_ARPROT),
        .m_axi_arqos(m09_exit_M_AXI_ARQOS),
        .m_axi_arready(m09_exit_M_AXI_ARREADY),
        .m_axi_arsize(m09_exit_M_AXI_ARSIZE),
        .m_axi_aruser(m09_exit_M_AXI_ARUSER),
        .m_axi_arvalid(m09_exit_M_AXI_ARVALID),
        .m_axi_awaddr(m09_exit_M_AXI_AWADDR),
        .m_axi_awburst(m09_exit_M_AXI_AWBURST),
        .m_axi_awcache(m09_exit_M_AXI_AWCACHE),
        .m_axi_awlen(m09_exit_M_AXI_AWLEN),
        .m_axi_awlock(m09_exit_M_AXI_AWLOCK),
        .m_axi_awprot(m09_exit_M_AXI_AWPROT),
        .m_axi_awqos(m09_exit_M_AXI_AWQOS),
        .m_axi_awready(m09_exit_M_AXI_AWREADY),
        .m_axi_awsize(m09_exit_M_AXI_AWSIZE),
        .m_axi_awuser(m09_exit_M_AXI_AWUSER),
        .m_axi_awvalid(m09_exit_M_AXI_AWVALID),
        .m_axi_bready(m09_exit_M_AXI_BREADY),
        .m_axi_bresp(m09_exit_M_AXI_BRESP),
        .m_axi_bvalid(m09_exit_M_AXI_BVALID),
        .m_axi_rdata(m09_exit_M_AXI_RDATA),
        .m_axi_rlast(m09_exit_M_AXI_RLAST),
        .m_axi_rready(m09_exit_M_AXI_RREADY),
        .m_axi_rresp(m09_exit_M_AXI_RRESP),
        .m_axi_rvalid(m09_exit_M_AXI_RVALID),
        .m_axi_wdata(m09_exit_M_AXI_WDATA),
        .m_axi_wlast(m09_exit_M_AXI_WLAST),
        .m_axi_wready(m09_exit_M_AXI_WREADY),
        .m_axi_wstrb(m09_exit_M_AXI_WSTRB),
        .m_axi_wvalid(m09_exit_M_AXI_WVALID),
        .s_axi_araddr(s_axi_1_ARADDR),
        .s_axi_arcache(s_axi_1_ARCACHE),
        .s_axi_arid(s_axi_1_ARID),
        .s_axi_arlen(s_axi_1_ARLEN),
        .s_axi_arlock(s_axi_1_ARLOCK),
        .s_axi_arprot(s_axi_1_ARPROT),
        .s_axi_arqos(s_axi_1_ARQOS),
        .s_axi_arready(s_axi_1_ARREADY),
        .s_axi_aruser(s_axi_1_ARUSER),
        .s_axi_arvalid(s_axi_1_ARVALID),
        .s_axi_awaddr(s_axi_1_AWADDR),
        .s_axi_awcache(s_axi_1_AWCACHE),
        .s_axi_awid(s_axi_1_AWID),
        .s_axi_awlen(s_axi_1_AWLEN),
        .s_axi_awlock(s_axi_1_AWLOCK),
        .s_axi_awprot(s_axi_1_AWPROT),
        .s_axi_awqos(s_axi_1_AWQOS),
        .s_axi_awready(s_axi_1_AWREADY),
        .s_axi_awuser(s_axi_1_AWUSER),
        .s_axi_awvalid(s_axi_1_AWVALID),
        .s_axi_bid(s_axi_1_BID),
        .s_axi_bready(s_axi_1_BREADY),
        .s_axi_bresp(s_axi_1_BRESP),
        .s_axi_buser(s_axi_1_BUSER),
        .s_axi_bvalid(s_axi_1_BVALID),
        .s_axi_rdata(s_axi_1_RDATA),
        .s_axi_rid(s_axi_1_RID),
        .s_axi_rlast(s_axi_1_RLAST),
        .s_axi_rready(s_axi_1_RREADY),
        .s_axi_rresp(s_axi_1_RRESP),
        .s_axi_ruser(s_axi_1_RUSER),
        .s_axi_rvalid(s_axi_1_RVALID),
        .s_axi_wdata(s_axi_1_WDATA),
        .s_axi_wlast(s_axi_1_WLAST),
        .s_axi_wready(s_axi_1_WREADY),
        .s_axi_wstrb(s_axi_1_WSTRB),
        .s_axi_wuser(s_axi_1_WUSER),
        .s_axi_wvalid(s_axi_1_WVALID));
endmodule

module m09_nodes_imp_5H9RUZ
   (M_SC_AR_info,
    M_SC_AR_payld,
    M_SC_AR_recv,
    M_SC_AR_req,
    M_SC_AR_send,
    M_SC_AW_info,
    M_SC_AW_payld,
    M_SC_AW_recv,
    M_SC_AW_req,
    M_SC_AW_send,
    M_SC_B_info,
    M_SC_B_payld,
    M_SC_B_recv,
    M_SC_B_req,
    M_SC_B_send,
    M_SC_R_info,
    M_SC_R_payld,
    M_SC_R_recv,
    M_SC_R_req,
    M_SC_R_send,
    M_SC_W_info,
    M_SC_W_payld,
    M_SC_W_recv,
    M_SC_W_req,
    M_SC_W_send,
    S_SC_AR_info,
    S_SC_AR_payld,
    S_SC_AR_recv,
    S_SC_AR_req,
    S_SC_AR_send,
    S_SC_AW_info,
    S_SC_AW_payld,
    S_SC_AW_recv,
    S_SC_AW_req,
    S_SC_AW_send,
    S_SC_B_info,
    S_SC_B_payld,
    S_SC_B_recv,
    S_SC_B_req,
    S_SC_B_send,
    S_SC_R_info,
    S_SC_R_payld,
    S_SC_R_recv,
    S_SC_R_req,
    S_SC_R_send,
    S_SC_W_info,
    S_SC_W_payld,
    S_SC_W_recv,
    S_SC_W_req,
    S_SC_W_send,
    m_axi_aclk,
    m_axi_aresetn,
    s_axi_aclk,
    s_axi_aresetn);
  output [0:0]M_SC_AR_info;
  output [181:0]M_SC_AR_payld;
  input [0:0]M_SC_AR_recv;
  output [0:0]M_SC_AR_req;
  output [0:0]M_SC_AR_send;
  output [0:0]M_SC_AW_info;
  output [181:0]M_SC_AW_payld;
  input [0:0]M_SC_AW_recv;
  output [0:0]M_SC_AW_req;
  output [0:0]M_SC_AW_send;
  output [0:0]M_SC_B_info;
  output [8:0]M_SC_B_payld;
  input [0:0]M_SC_B_recv;
  output [0:0]M_SC_B_req;
  output [0:0]M_SC_B_send;
  output [0:0]M_SC_R_info;
  output [54:0]M_SC_R_payld;
  input [0:0]M_SC_R_recv;
  output [0:0]M_SC_R_req;
  output [0:0]M_SC_R_send;
  output [0:0]M_SC_W_info;
  output [68:0]M_SC_W_payld;
  input [0:0]M_SC_W_recv;
  output [0:0]M_SC_W_req;
  output [0:0]M_SC_W_send;
  input [0:0]S_SC_AR_info;
  input [181:0]S_SC_AR_payld;
  output [0:0]S_SC_AR_recv;
  input [0:0]S_SC_AR_req;
  input [0:0]S_SC_AR_send;
  input [0:0]S_SC_AW_info;
  input [181:0]S_SC_AW_payld;
  output [0:0]S_SC_AW_recv;
  input [0:0]S_SC_AW_req;
  input [0:0]S_SC_AW_send;
  input [0:0]S_SC_B_info;
  input [8:0]S_SC_B_payld;
  output [0:0]S_SC_B_recv;
  input [0:0]S_SC_B_req;
  input [0:0]S_SC_B_send;
  input [0:0]S_SC_R_info;
  input [54:0]S_SC_R_payld;
  output [0:0]S_SC_R_recv;
  input [0:0]S_SC_R_req;
  input [0:0]S_SC_R_send;
  input [0:0]S_SC_W_info;
  input [68:0]S_SC_W_payld;
  output [0:0]S_SC_W_recv;
  input [0:0]S_SC_W_req;
  input [0:0]S_SC_W_send;
  input m_axi_aclk;
  input m_axi_aresetn;
  input s_axi_aclk;
  input s_axi_aresetn;

  wire [0:0]S_SC_AR_1_INFO;
  wire [181:0]S_SC_AR_1_PAYLD;
  wire [0:0]S_SC_AR_1_RECV;
  wire [0:0]S_SC_AR_1_REQ;
  wire [0:0]S_SC_AR_1_SEND;
  wire [0:0]S_SC_AW_1_INFO;
  wire [181:0]S_SC_AW_1_PAYLD;
  wire [0:0]S_SC_AW_1_RECV;
  wire [0:0]S_SC_AW_1_REQ;
  wire [0:0]S_SC_AW_1_SEND;
  wire [0:0]S_SC_B_1_INFO;
  wire [8:0]S_SC_B_1_PAYLD;
  wire [0:0]S_SC_B_1_RECV;
  wire [0:0]S_SC_B_1_REQ;
  wire [0:0]S_SC_B_1_SEND;
  wire [0:0]S_SC_R_1_INFO;
  wire [54:0]S_SC_R_1_PAYLD;
  wire [0:0]S_SC_R_1_RECV;
  wire [0:0]S_SC_R_1_REQ;
  wire [0:0]S_SC_R_1_SEND;
  wire [0:0]S_SC_W_1_INFO;
  wire [68:0]S_SC_W_1_PAYLD;
  wire [0:0]S_SC_W_1_RECV;
  wire [0:0]S_SC_W_1_REQ;
  wire [0:0]S_SC_W_1_SEND;
  wire [0:0]m09_ar_node_M_SC_INFO;
  wire [181:0]m09_ar_node_M_SC_PAYLD;
  wire [0:0]m09_ar_node_M_SC_RECV;
  wire [0:0]m09_ar_node_M_SC_REQ;
  wire [0:0]m09_ar_node_M_SC_SEND;
  wire [0:0]m09_aw_node_M_SC_INFO;
  wire [181:0]m09_aw_node_M_SC_PAYLD;
  wire [0:0]m09_aw_node_M_SC_RECV;
  wire [0:0]m09_aw_node_M_SC_REQ;
  wire [0:0]m09_aw_node_M_SC_SEND;
  wire [0:0]m09_b_node_M_SC_INFO;
  wire [8:0]m09_b_node_M_SC_PAYLD;
  wire [0:0]m09_b_node_M_SC_RECV;
  wire [0:0]m09_b_node_M_SC_REQ;
  wire [0:0]m09_b_node_M_SC_SEND;
  wire [0:0]m09_r_node_M_SC_INFO;
  wire [54:0]m09_r_node_M_SC_PAYLD;
  wire [0:0]m09_r_node_M_SC_RECV;
  wire [0:0]m09_r_node_M_SC_REQ;
  wire [0:0]m09_r_node_M_SC_SEND;
  wire [0:0]m09_w_node_M_SC_INFO;
  wire [68:0]m09_w_node_M_SC_PAYLD;
  wire [0:0]m09_w_node_M_SC_RECV;
  wire [0:0]m09_w_node_M_SC_REQ;
  wire [0:0]m09_w_node_M_SC_SEND;
  wire m_axi_aclk_1;
  wire m_axi_aresetn_1;
  wire s_axi_aclk_1;
  wire s_axi_aresetn_1;

  assign M_SC_AR_info[0] = m09_ar_node_M_SC_INFO;
  assign M_SC_AR_payld[181:0] = m09_ar_node_M_SC_PAYLD;
  assign M_SC_AR_req[0] = m09_ar_node_M_SC_REQ;
  assign M_SC_AR_send[0] = m09_ar_node_M_SC_SEND;
  assign M_SC_AW_info[0] = m09_aw_node_M_SC_INFO;
  assign M_SC_AW_payld[181:0] = m09_aw_node_M_SC_PAYLD;
  assign M_SC_AW_req[0] = m09_aw_node_M_SC_REQ;
  assign M_SC_AW_send[0] = m09_aw_node_M_SC_SEND;
  assign M_SC_B_info[0] = m09_b_node_M_SC_INFO;
  assign M_SC_B_payld[8:0] = m09_b_node_M_SC_PAYLD;
  assign M_SC_B_req[0] = m09_b_node_M_SC_REQ;
  assign M_SC_B_send[0] = m09_b_node_M_SC_SEND;
  assign M_SC_R_info[0] = m09_r_node_M_SC_INFO;
  assign M_SC_R_payld[54:0] = m09_r_node_M_SC_PAYLD;
  assign M_SC_R_req[0] = m09_r_node_M_SC_REQ;
  assign M_SC_R_send[0] = m09_r_node_M_SC_SEND;
  assign M_SC_W_info[0] = m09_w_node_M_SC_INFO;
  assign M_SC_W_payld[68:0] = m09_w_node_M_SC_PAYLD;
  assign M_SC_W_req[0] = m09_w_node_M_SC_REQ;
  assign M_SC_W_send[0] = m09_w_node_M_SC_SEND;
  assign S_SC_AR_1_INFO = S_SC_AR_info[0];
  assign S_SC_AR_1_PAYLD = S_SC_AR_payld[181:0];
  assign S_SC_AR_1_REQ = S_SC_AR_req[0];
  assign S_SC_AR_1_SEND = S_SC_AR_send[0];
  assign S_SC_AR_recv[0] = S_SC_AR_1_RECV;
  assign S_SC_AW_1_INFO = S_SC_AW_info[0];
  assign S_SC_AW_1_PAYLD = S_SC_AW_payld[181:0];
  assign S_SC_AW_1_REQ = S_SC_AW_req[0];
  assign S_SC_AW_1_SEND = S_SC_AW_send[0];
  assign S_SC_AW_recv[0] = S_SC_AW_1_RECV;
  assign S_SC_B_1_INFO = S_SC_B_info[0];
  assign S_SC_B_1_PAYLD = S_SC_B_payld[8:0];
  assign S_SC_B_1_REQ = S_SC_B_req[0];
  assign S_SC_B_1_SEND = S_SC_B_send[0];
  assign S_SC_B_recv[0] = S_SC_B_1_RECV;
  assign S_SC_R_1_INFO = S_SC_R_info[0];
  assign S_SC_R_1_PAYLD = S_SC_R_payld[54:0];
  assign S_SC_R_1_REQ = S_SC_R_req[0];
  assign S_SC_R_1_SEND = S_SC_R_send[0];
  assign S_SC_R_recv[0] = S_SC_R_1_RECV;
  assign S_SC_W_1_INFO = S_SC_W_info[0];
  assign S_SC_W_1_PAYLD = S_SC_W_payld[68:0];
  assign S_SC_W_1_REQ = S_SC_W_req[0];
  assign S_SC_W_1_SEND = S_SC_W_send[0];
  assign S_SC_W_recv[0] = S_SC_W_1_RECV;
  assign m09_ar_node_M_SC_RECV = M_SC_AR_recv[0];
  assign m09_aw_node_M_SC_RECV = M_SC_AW_recv[0];
  assign m09_b_node_M_SC_RECV = M_SC_B_recv[0];
  assign m09_r_node_M_SC_RECV = M_SC_R_recv[0];
  assign m09_w_node_M_SC_RECV = M_SC_W_recv[0];
  assign m_axi_aclk_1 = m_axi_aclk;
  assign m_axi_aresetn_1 = m_axi_aresetn;
  assign s_axi_aclk_1 = s_axi_aclk;
  assign s_axi_aresetn_1 = s_axi_aresetn;
  bd_afc3_m09arn_0 m09_ar_node
       (.m_sc_aclk(m_axi_aclk_1),
        .m_sc_aresetn(m_axi_aresetn_1),
        .m_sc_info(m09_ar_node_M_SC_INFO),
        .m_sc_payld(m09_ar_node_M_SC_PAYLD),
        .m_sc_recv(m09_ar_node_M_SC_RECV),
        .m_sc_req(m09_ar_node_M_SC_REQ),
        .m_sc_send(m09_ar_node_M_SC_SEND),
        .s_sc_aclk(s_axi_aclk_1),
        .s_sc_aresetn(s_axi_aresetn_1),
        .s_sc_info(S_SC_AR_1_INFO),
        .s_sc_payld(S_SC_AR_1_PAYLD),
        .s_sc_recv(S_SC_AR_1_RECV),
        .s_sc_req(S_SC_AR_1_REQ),
        .s_sc_send(S_SC_AR_1_SEND));
  bd_afc3_m09awn_0 m09_aw_node
       (.m_sc_aclk(m_axi_aclk_1),
        .m_sc_aresetn(m_axi_aresetn_1),
        .m_sc_info(m09_aw_node_M_SC_INFO),
        .m_sc_payld(m09_aw_node_M_SC_PAYLD),
        .m_sc_recv(m09_aw_node_M_SC_RECV),
        .m_sc_req(m09_aw_node_M_SC_REQ),
        .m_sc_send(m09_aw_node_M_SC_SEND),
        .s_sc_aclk(s_axi_aclk_1),
        .s_sc_aresetn(s_axi_aresetn_1),
        .s_sc_info(S_SC_AW_1_INFO),
        .s_sc_payld(S_SC_AW_1_PAYLD),
        .s_sc_recv(S_SC_AW_1_RECV),
        .s_sc_req(S_SC_AW_1_REQ),
        .s_sc_send(S_SC_AW_1_SEND));
  bd_afc3_m09bn_0 m09_b_node
       (.m_sc_aclk(s_axi_aclk_1),
        .m_sc_aresetn(s_axi_aresetn_1),
        .m_sc_info(m09_b_node_M_SC_INFO),
        .m_sc_payld(m09_b_node_M_SC_PAYLD),
        .m_sc_recv(m09_b_node_M_SC_RECV),
        .m_sc_req(m09_b_node_M_SC_REQ),
        .m_sc_send(m09_b_node_M_SC_SEND),
        .s_sc_aclk(m_axi_aclk_1),
        .s_sc_aresetn(m_axi_aresetn_1),
        .s_sc_info(S_SC_B_1_INFO),
        .s_sc_payld(S_SC_B_1_PAYLD),
        .s_sc_recv(S_SC_B_1_RECV),
        .s_sc_req(S_SC_B_1_REQ),
        .s_sc_send(S_SC_B_1_SEND));
  bd_afc3_m09rn_0 m09_r_node
       (.m_sc_aclk(s_axi_aclk_1),
        .m_sc_aresetn(s_axi_aresetn_1),
        .m_sc_info(m09_r_node_M_SC_INFO),
        .m_sc_payld(m09_r_node_M_SC_PAYLD),
        .m_sc_recv(m09_r_node_M_SC_RECV),
        .m_sc_req(m09_r_node_M_SC_REQ),
        .m_sc_send(m09_r_node_M_SC_SEND),
        .s_sc_aclk(m_axi_aclk_1),
        .s_sc_aresetn(m_axi_aresetn_1),
        .s_sc_info(S_SC_R_1_INFO),
        .s_sc_payld(S_SC_R_1_PAYLD),
        .s_sc_recv(S_SC_R_1_RECV),
        .s_sc_req(S_SC_R_1_REQ),
        .s_sc_send(S_SC_R_1_SEND));
  bd_afc3_m09wn_0 m09_w_node
       (.m_sc_aclk(m_axi_aclk_1),
        .m_sc_aresetn(m_axi_aresetn_1),
        .m_sc_info(m09_w_node_M_SC_INFO),
        .m_sc_payld(m09_w_node_M_SC_PAYLD),
        .m_sc_recv(m09_w_node_M_SC_RECV),
        .m_sc_req(m09_w_node_M_SC_REQ),
        .m_sc_send(m09_w_node_M_SC_SEND),
        .s_sc_aclk(s_axi_aclk_1),
        .s_sc_aresetn(s_axi_aresetn_1),
        .s_sc_info(S_SC_W_1_INFO),
        .s_sc_payld(S_SC_W_1_PAYLD),
        .s_sc_recv(S_SC_W_1_RECV),
        .s_sc_req(S_SC_W_1_REQ),
        .s_sc_send(S_SC_W_1_SEND));
endmodule

module m10_exit_pipeline_imp_WXIUB7
   (aclk,
    aresetn,
    m_axi_araddr,
    m_axi_arburst,
    m_axi_arcache,
    m_axi_arlen,
    m_axi_arlock,
    m_axi_arprot,
    m_axi_arqos,
    m_axi_arready,
    m_axi_arsize,
    m_axi_aruser,
    m_axi_arvalid,
    m_axi_awaddr,
    m_axi_awburst,
    m_axi_awcache,
    m_axi_awlen,
    m_axi_awlock,
    m_axi_awprot,
    m_axi_awqos,
    m_axi_awready,
    m_axi_awsize,
    m_axi_awuser,
    m_axi_awvalid,
    m_axi_bready,
    m_axi_bresp,
    m_axi_bvalid,
    m_axi_rdata,
    m_axi_rlast,
    m_axi_rready,
    m_axi_rresp,
    m_axi_rvalid,
    m_axi_wdata,
    m_axi_wlast,
    m_axi_wready,
    m_axi_wstrb,
    m_axi_wvalid,
    s_axi_araddr,
    s_axi_arcache,
    s_axi_arid,
    s_axi_arlen,
    s_axi_arlock,
    s_axi_arprot,
    s_axi_arqos,
    s_axi_arready,
    s_axi_aruser,
    s_axi_arvalid,
    s_axi_awaddr,
    s_axi_awcache,
    s_axi_awid,
    s_axi_awlen,
    s_axi_awlock,
    s_axi_awprot,
    s_axi_awqos,
    s_axi_awready,
    s_axi_awuser,
    s_axi_awvalid,
    s_axi_bid,
    s_axi_bready,
    s_axi_bresp,
    s_axi_buser,
    s_axi_bvalid,
    s_axi_rdata,
    s_axi_rid,
    s_axi_rlast,
    s_axi_rready,
    s_axi_rresp,
    s_axi_ruser,
    s_axi_rvalid,
    s_axi_wdata,
    s_axi_wlast,
    s_axi_wready,
    s_axi_wstrb,
    s_axi_wuser,
    s_axi_wvalid);
  input aclk;
  input aresetn;
  output [12:0]m_axi_araddr;
  output [1:0]m_axi_arburst;
  output [3:0]m_axi_arcache;
  output [7:0]m_axi_arlen;
  output [0:0]m_axi_arlock;
  output [2:0]m_axi_arprot;
  output [3:0]m_axi_arqos;
  input m_axi_arready;
  output [2:0]m_axi_arsize;
  output [15:0]m_axi_aruser;
  output m_axi_arvalid;
  output [12:0]m_axi_awaddr;
  output [1:0]m_axi_awburst;
  output [3:0]m_axi_awcache;
  output [7:0]m_axi_awlen;
  output [0:0]m_axi_awlock;
  output [2:0]m_axi_awprot;
  output [3:0]m_axi_awqos;
  input m_axi_awready;
  output [2:0]m_axi_awsize;
  output [15:0]m_axi_awuser;
  output m_axi_awvalid;
  output m_axi_bready;
  input [1:0]m_axi_bresp;
  input m_axi_bvalid;
  input [31:0]m_axi_rdata;
  input m_axi_rlast;
  output m_axi_rready;
  input [1:0]m_axi_rresp;
  input m_axi_rvalid;
  output [31:0]m_axi_wdata;
  output m_axi_wlast;
  input m_axi_wready;
  output [3:0]m_axi_wstrb;
  output m_axi_wvalid;
  input [12:0]s_axi_araddr;
  input [3:0]s_axi_arcache;
  input [2:0]s_axi_arid;
  input [7:0]s_axi_arlen;
  input [0:0]s_axi_arlock;
  input [2:0]s_axi_arprot;
  input [3:0]s_axi_arqos;
  output s_axi_arready;
  input [1023:0]s_axi_aruser;
  input s_axi_arvalid;
  input [12:0]s_axi_awaddr;
  input [3:0]s_axi_awcache;
  input [2:0]s_axi_awid;
  input [7:0]s_axi_awlen;
  input [0:0]s_axi_awlock;
  input [2:0]s_axi_awprot;
  input [3:0]s_axi_awqos;
  output s_axi_awready;
  input [1023:0]s_axi_awuser;
  input s_axi_awvalid;
  output [2:0]s_axi_bid;
  input s_axi_bready;
  output [1:0]s_axi_bresp;
  output [1023:0]s_axi_buser;
  output s_axi_bvalid;
  output [31:0]s_axi_rdata;
  output [2:0]s_axi_rid;
  output s_axi_rlast;
  input s_axi_rready;
  output [1:0]s_axi_rresp;
  output [1023:0]s_axi_ruser;
  output s_axi_rvalid;
  input [31:0]s_axi_wdata;
  input s_axi_wlast;
  output s_axi_wready;
  input [3:0]s_axi_wstrb;
  input [1023:0]s_axi_wuser;
  input s_axi_wvalid;

  wire aclk_1;
  wire aresetn_1;
  wire [12:0]m10_exit_M_AXI_ARADDR;
  wire [1:0]m10_exit_M_AXI_ARBURST;
  wire [3:0]m10_exit_M_AXI_ARCACHE;
  wire [7:0]m10_exit_M_AXI_ARLEN;
  wire [0:0]m10_exit_M_AXI_ARLOCK;
  wire [2:0]m10_exit_M_AXI_ARPROT;
  wire [3:0]m10_exit_M_AXI_ARQOS;
  wire m10_exit_M_AXI_ARREADY;
  wire [2:0]m10_exit_M_AXI_ARSIZE;
  wire [15:0]m10_exit_M_AXI_ARUSER;
  wire m10_exit_M_AXI_ARVALID;
  wire [12:0]m10_exit_M_AXI_AWADDR;
  wire [1:0]m10_exit_M_AXI_AWBURST;
  wire [3:0]m10_exit_M_AXI_AWCACHE;
  wire [7:0]m10_exit_M_AXI_AWLEN;
  wire [0:0]m10_exit_M_AXI_AWLOCK;
  wire [2:0]m10_exit_M_AXI_AWPROT;
  wire [3:0]m10_exit_M_AXI_AWQOS;
  wire m10_exit_M_AXI_AWREADY;
  wire [2:0]m10_exit_M_AXI_AWSIZE;
  wire [15:0]m10_exit_M_AXI_AWUSER;
  wire m10_exit_M_AXI_AWVALID;
  wire m10_exit_M_AXI_BREADY;
  wire [1:0]m10_exit_M_AXI_BRESP;
  wire m10_exit_M_AXI_BVALID;
  wire [31:0]m10_exit_M_AXI_RDATA;
  wire m10_exit_M_AXI_RLAST;
  wire m10_exit_M_AXI_RREADY;
  wire [1:0]m10_exit_M_AXI_RRESP;
  wire m10_exit_M_AXI_RVALID;
  wire [31:0]m10_exit_M_AXI_WDATA;
  wire m10_exit_M_AXI_WLAST;
  wire m10_exit_M_AXI_WREADY;
  wire [3:0]m10_exit_M_AXI_WSTRB;
  wire m10_exit_M_AXI_WVALID;
  wire [12:0]s_axi_1_ARADDR;
  wire [3:0]s_axi_1_ARCACHE;
  wire [2:0]s_axi_1_ARID;
  wire [7:0]s_axi_1_ARLEN;
  wire [0:0]s_axi_1_ARLOCK;
  wire [2:0]s_axi_1_ARPROT;
  wire [3:0]s_axi_1_ARQOS;
  wire s_axi_1_ARREADY;
  wire [1023:0]s_axi_1_ARUSER;
  wire s_axi_1_ARVALID;
  wire [12:0]s_axi_1_AWADDR;
  wire [3:0]s_axi_1_AWCACHE;
  wire [2:0]s_axi_1_AWID;
  wire [7:0]s_axi_1_AWLEN;
  wire [0:0]s_axi_1_AWLOCK;
  wire [2:0]s_axi_1_AWPROT;
  wire [3:0]s_axi_1_AWQOS;
  wire s_axi_1_AWREADY;
  wire [1023:0]s_axi_1_AWUSER;
  wire s_axi_1_AWVALID;
  wire [2:0]s_axi_1_BID;
  wire s_axi_1_BREADY;
  wire [1:0]s_axi_1_BRESP;
  wire [1023:0]s_axi_1_BUSER;
  wire s_axi_1_BVALID;
  wire [31:0]s_axi_1_RDATA;
  wire [2:0]s_axi_1_RID;
  wire s_axi_1_RLAST;
  wire s_axi_1_RREADY;
  wire [1:0]s_axi_1_RRESP;
  wire [1023:0]s_axi_1_RUSER;
  wire s_axi_1_RVALID;
  wire [31:0]s_axi_1_WDATA;
  wire s_axi_1_WLAST;
  wire s_axi_1_WREADY;
  wire [3:0]s_axi_1_WSTRB;
  wire [1023:0]s_axi_1_WUSER;
  wire s_axi_1_WVALID;

  assign aclk_1 = aclk;
  assign aresetn_1 = aresetn;
  assign m10_exit_M_AXI_ARREADY = m_axi_arready;
  assign m10_exit_M_AXI_AWREADY = m_axi_awready;
  assign m10_exit_M_AXI_BRESP = m_axi_bresp[1:0];
  assign m10_exit_M_AXI_BVALID = m_axi_bvalid;
  assign m10_exit_M_AXI_RDATA = m_axi_rdata[31:0];
  assign m10_exit_M_AXI_RLAST = m_axi_rlast;
  assign m10_exit_M_AXI_RRESP = m_axi_rresp[1:0];
  assign m10_exit_M_AXI_RVALID = m_axi_rvalid;
  assign m10_exit_M_AXI_WREADY = m_axi_wready;
  assign m_axi_araddr[12:0] = m10_exit_M_AXI_ARADDR;
  assign m_axi_arburst[1:0] = m10_exit_M_AXI_ARBURST;
  assign m_axi_arcache[3:0] = m10_exit_M_AXI_ARCACHE;
  assign m_axi_arlen[7:0] = m10_exit_M_AXI_ARLEN;
  assign m_axi_arlock[0] = m10_exit_M_AXI_ARLOCK;
  assign m_axi_arprot[2:0] = m10_exit_M_AXI_ARPROT;
  assign m_axi_arqos[3:0] = m10_exit_M_AXI_ARQOS;
  assign m_axi_arsize[2:0] = m10_exit_M_AXI_ARSIZE;
  assign m_axi_aruser[15:0] = m10_exit_M_AXI_ARUSER;
  assign m_axi_arvalid = m10_exit_M_AXI_ARVALID;
  assign m_axi_awaddr[12:0] = m10_exit_M_AXI_AWADDR;
  assign m_axi_awburst[1:0] = m10_exit_M_AXI_AWBURST;
  assign m_axi_awcache[3:0] = m10_exit_M_AXI_AWCACHE;
  assign m_axi_awlen[7:0] = m10_exit_M_AXI_AWLEN;
  assign m_axi_awlock[0] = m10_exit_M_AXI_AWLOCK;
  assign m_axi_awprot[2:0] = m10_exit_M_AXI_AWPROT;
  assign m_axi_awqos[3:0] = m10_exit_M_AXI_AWQOS;
  assign m_axi_awsize[2:0] = m10_exit_M_AXI_AWSIZE;
  assign m_axi_awuser[15:0] = m10_exit_M_AXI_AWUSER;
  assign m_axi_awvalid = m10_exit_M_AXI_AWVALID;
  assign m_axi_bready = m10_exit_M_AXI_BREADY;
  assign m_axi_rready = m10_exit_M_AXI_RREADY;
  assign m_axi_wdata[31:0] = m10_exit_M_AXI_WDATA;
  assign m_axi_wlast = m10_exit_M_AXI_WLAST;
  assign m_axi_wstrb[3:0] = m10_exit_M_AXI_WSTRB;
  assign m_axi_wvalid = m10_exit_M_AXI_WVALID;
  assign s_axi_1_ARADDR = s_axi_araddr[12:0];
  assign s_axi_1_ARCACHE = s_axi_arcache[3:0];
  assign s_axi_1_ARID = s_axi_arid[2:0];
  assign s_axi_1_ARLEN = s_axi_arlen[7:0];
  assign s_axi_1_ARLOCK = s_axi_arlock[0];
  assign s_axi_1_ARPROT = s_axi_arprot[2:0];
  assign s_axi_1_ARQOS = s_axi_arqos[3:0];
  assign s_axi_1_ARUSER = s_axi_aruser[1023:0];
  assign s_axi_1_ARVALID = s_axi_arvalid;
  assign s_axi_1_AWADDR = s_axi_awaddr[12:0];
  assign s_axi_1_AWCACHE = s_axi_awcache[3:0];
  assign s_axi_1_AWID = s_axi_awid[2:0];
  assign s_axi_1_AWLEN = s_axi_awlen[7:0];
  assign s_axi_1_AWLOCK = s_axi_awlock[0];
  assign s_axi_1_AWPROT = s_axi_awprot[2:0];
  assign s_axi_1_AWQOS = s_axi_awqos[3:0];
  assign s_axi_1_AWUSER = s_axi_awuser[1023:0];
  assign s_axi_1_AWVALID = s_axi_awvalid;
  assign s_axi_1_BREADY = s_axi_bready;
  assign s_axi_1_RREADY = s_axi_rready;
  assign s_axi_1_WDATA = s_axi_wdata[31:0];
  assign s_axi_1_WLAST = s_axi_wlast;
  assign s_axi_1_WSTRB = s_axi_wstrb[3:0];
  assign s_axi_1_WUSER = s_axi_wuser[1023:0];
  assign s_axi_1_WVALID = s_axi_wvalid;
  assign s_axi_arready = s_axi_1_ARREADY;
  assign s_axi_awready = s_axi_1_AWREADY;
  assign s_axi_bid[2:0] = s_axi_1_BID;
  assign s_axi_bresp[1:0] = s_axi_1_BRESP;
  assign s_axi_buser[1023:0] = s_axi_1_BUSER;
  assign s_axi_bvalid = s_axi_1_BVALID;
  assign s_axi_rdata[31:0] = s_axi_1_RDATA;
  assign s_axi_rid[2:0] = s_axi_1_RID;
  assign s_axi_rlast = s_axi_1_RLAST;
  assign s_axi_rresp[1:0] = s_axi_1_RRESP;
  assign s_axi_ruser[1023:0] = s_axi_1_RUSER;
  assign s_axi_rvalid = s_axi_1_RVALID;
  assign s_axi_wready = s_axi_1_WREADY;
  bd_afc3_m10e_0 m10_exit
       (.aclk(aclk_1),
        .aresetn(aresetn_1),
        .m_axi_araddr(m10_exit_M_AXI_ARADDR),
        .m_axi_arburst(m10_exit_M_AXI_ARBURST),
        .m_axi_arcache(m10_exit_M_AXI_ARCACHE),
        .m_axi_arlen(m10_exit_M_AXI_ARLEN),
        .m_axi_arlock(m10_exit_M_AXI_ARLOCK),
        .m_axi_arprot(m10_exit_M_AXI_ARPROT),
        .m_axi_arqos(m10_exit_M_AXI_ARQOS),
        .m_axi_arready(m10_exit_M_AXI_ARREADY),
        .m_axi_arsize(m10_exit_M_AXI_ARSIZE),
        .m_axi_aruser(m10_exit_M_AXI_ARUSER),
        .m_axi_arvalid(m10_exit_M_AXI_ARVALID),
        .m_axi_awaddr(m10_exit_M_AXI_AWADDR),
        .m_axi_awburst(m10_exit_M_AXI_AWBURST),
        .m_axi_awcache(m10_exit_M_AXI_AWCACHE),
        .m_axi_awlen(m10_exit_M_AXI_AWLEN),
        .m_axi_awlock(m10_exit_M_AXI_AWLOCK),
        .m_axi_awprot(m10_exit_M_AXI_AWPROT),
        .m_axi_awqos(m10_exit_M_AXI_AWQOS),
        .m_axi_awready(m10_exit_M_AXI_AWREADY),
        .m_axi_awsize(m10_exit_M_AXI_AWSIZE),
        .m_axi_awuser(m10_exit_M_AXI_AWUSER),
        .m_axi_awvalid(m10_exit_M_AXI_AWVALID),
        .m_axi_bready(m10_exit_M_AXI_BREADY),
        .m_axi_bresp(m10_exit_M_AXI_BRESP),
        .m_axi_bvalid(m10_exit_M_AXI_BVALID),
        .m_axi_rdata(m10_exit_M_AXI_RDATA),
        .m_axi_rlast(m10_exit_M_AXI_RLAST),
        .m_axi_rready(m10_exit_M_AXI_RREADY),
        .m_axi_rresp(m10_exit_M_AXI_RRESP),
        .m_axi_rvalid(m10_exit_M_AXI_RVALID),
        .m_axi_wdata(m10_exit_M_AXI_WDATA),
        .m_axi_wlast(m10_exit_M_AXI_WLAST),
        .m_axi_wready(m10_exit_M_AXI_WREADY),
        .m_axi_wstrb(m10_exit_M_AXI_WSTRB),
        .m_axi_wvalid(m10_exit_M_AXI_WVALID),
        .s_axi_araddr(s_axi_1_ARADDR),
        .s_axi_arcache(s_axi_1_ARCACHE),
        .s_axi_arid(s_axi_1_ARID),
        .s_axi_arlen(s_axi_1_ARLEN),
        .s_axi_arlock(s_axi_1_ARLOCK),
        .s_axi_arprot(s_axi_1_ARPROT),
        .s_axi_arqos(s_axi_1_ARQOS),
        .s_axi_arready(s_axi_1_ARREADY),
        .s_axi_aruser(s_axi_1_ARUSER),
        .s_axi_arvalid(s_axi_1_ARVALID),
        .s_axi_awaddr(s_axi_1_AWADDR),
        .s_axi_awcache(s_axi_1_AWCACHE),
        .s_axi_awid(s_axi_1_AWID),
        .s_axi_awlen(s_axi_1_AWLEN),
        .s_axi_awlock(s_axi_1_AWLOCK),
        .s_axi_awprot(s_axi_1_AWPROT),
        .s_axi_awqos(s_axi_1_AWQOS),
        .s_axi_awready(s_axi_1_AWREADY),
        .s_axi_awuser(s_axi_1_AWUSER),
        .s_axi_awvalid(s_axi_1_AWVALID),
        .s_axi_bid(s_axi_1_BID),
        .s_axi_bready(s_axi_1_BREADY),
        .s_axi_bresp(s_axi_1_BRESP),
        .s_axi_buser(s_axi_1_BUSER),
        .s_axi_bvalid(s_axi_1_BVALID),
        .s_axi_rdata(s_axi_1_RDATA),
        .s_axi_rid(s_axi_1_RID),
        .s_axi_rlast(s_axi_1_RLAST),
        .s_axi_rready(s_axi_1_RREADY),
        .s_axi_rresp(s_axi_1_RRESP),
        .s_axi_ruser(s_axi_1_RUSER),
        .s_axi_rvalid(s_axi_1_RVALID),
        .s_axi_wdata(s_axi_1_WDATA),
        .s_axi_wlast(s_axi_1_WLAST),
        .s_axi_wready(s_axi_1_WREADY),
        .s_axi_wstrb(s_axi_1_WSTRB),
        .s_axi_wuser(s_axi_1_WUSER),
        .s_axi_wvalid(s_axi_1_WVALID));
endmodule

module m10_nodes_imp_14P23N
   (M_SC_AR_info,
    M_SC_AR_payld,
    M_SC_AR_recv,
    M_SC_AR_req,
    M_SC_AR_send,
    M_SC_AW_info,
    M_SC_AW_payld,
    M_SC_AW_recv,
    M_SC_AW_req,
    M_SC_AW_send,
    M_SC_B_info,
    M_SC_B_payld,
    M_SC_B_recv,
    M_SC_B_req,
    M_SC_B_send,
    M_SC_R_info,
    M_SC_R_payld,
    M_SC_R_recv,
    M_SC_R_req,
    M_SC_R_send,
    M_SC_W_info,
    M_SC_W_payld,
    M_SC_W_recv,
    M_SC_W_req,
    M_SC_W_send,
    S_SC_AR_info,
    S_SC_AR_payld,
    S_SC_AR_recv,
    S_SC_AR_req,
    S_SC_AR_send,
    S_SC_AW_info,
    S_SC_AW_payld,
    S_SC_AW_recv,
    S_SC_AW_req,
    S_SC_AW_send,
    S_SC_B_info,
    S_SC_B_payld,
    S_SC_B_recv,
    S_SC_B_req,
    S_SC_B_send,
    S_SC_R_info,
    S_SC_R_payld,
    S_SC_R_recv,
    S_SC_R_req,
    S_SC_R_send,
    S_SC_W_info,
    S_SC_W_payld,
    S_SC_W_recv,
    S_SC_W_req,
    S_SC_W_send,
    m_axi_aclk,
    m_axi_aresetn,
    s_axi_aclk,
    s_axi_aresetn);
  output [0:0]M_SC_AR_info;
  output [181:0]M_SC_AR_payld;
  input [0:0]M_SC_AR_recv;
  output [0:0]M_SC_AR_req;
  output [0:0]M_SC_AR_send;
  output [0:0]M_SC_AW_info;
  output [181:0]M_SC_AW_payld;
  input [0:0]M_SC_AW_recv;
  output [0:0]M_SC_AW_req;
  output [0:0]M_SC_AW_send;
  output [0:0]M_SC_B_info;
  output [8:0]M_SC_B_payld;
  input [0:0]M_SC_B_recv;
  output [0:0]M_SC_B_req;
  output [0:0]M_SC_B_send;
  output [0:0]M_SC_R_info;
  output [54:0]M_SC_R_payld;
  input [0:0]M_SC_R_recv;
  output [0:0]M_SC_R_req;
  output [0:0]M_SC_R_send;
  output [0:0]M_SC_W_info;
  output [68:0]M_SC_W_payld;
  input [0:0]M_SC_W_recv;
  output [0:0]M_SC_W_req;
  output [0:0]M_SC_W_send;
  input [0:0]S_SC_AR_info;
  input [181:0]S_SC_AR_payld;
  output [0:0]S_SC_AR_recv;
  input [0:0]S_SC_AR_req;
  input [0:0]S_SC_AR_send;
  input [0:0]S_SC_AW_info;
  input [181:0]S_SC_AW_payld;
  output [0:0]S_SC_AW_recv;
  input [0:0]S_SC_AW_req;
  input [0:0]S_SC_AW_send;
  input [0:0]S_SC_B_info;
  input [8:0]S_SC_B_payld;
  output [0:0]S_SC_B_recv;
  input [0:0]S_SC_B_req;
  input [0:0]S_SC_B_send;
  input [0:0]S_SC_R_info;
  input [54:0]S_SC_R_payld;
  output [0:0]S_SC_R_recv;
  input [0:0]S_SC_R_req;
  input [0:0]S_SC_R_send;
  input [0:0]S_SC_W_info;
  input [68:0]S_SC_W_payld;
  output [0:0]S_SC_W_recv;
  input [0:0]S_SC_W_req;
  input [0:0]S_SC_W_send;
  input m_axi_aclk;
  input m_axi_aresetn;
  input s_axi_aclk;
  input s_axi_aresetn;

  wire [0:0]S_SC_AR_1_INFO;
  wire [181:0]S_SC_AR_1_PAYLD;
  wire [0:0]S_SC_AR_1_RECV;
  wire [0:0]S_SC_AR_1_REQ;
  wire [0:0]S_SC_AR_1_SEND;
  wire [0:0]S_SC_AW_1_INFO;
  wire [181:0]S_SC_AW_1_PAYLD;
  wire [0:0]S_SC_AW_1_RECV;
  wire [0:0]S_SC_AW_1_REQ;
  wire [0:0]S_SC_AW_1_SEND;
  wire [0:0]S_SC_B_1_INFO;
  wire [8:0]S_SC_B_1_PAYLD;
  wire [0:0]S_SC_B_1_RECV;
  wire [0:0]S_SC_B_1_REQ;
  wire [0:0]S_SC_B_1_SEND;
  wire [0:0]S_SC_R_1_INFO;
  wire [54:0]S_SC_R_1_PAYLD;
  wire [0:0]S_SC_R_1_RECV;
  wire [0:0]S_SC_R_1_REQ;
  wire [0:0]S_SC_R_1_SEND;
  wire [0:0]S_SC_W_1_INFO;
  wire [68:0]S_SC_W_1_PAYLD;
  wire [0:0]S_SC_W_1_RECV;
  wire [0:0]S_SC_W_1_REQ;
  wire [0:0]S_SC_W_1_SEND;
  wire [0:0]m10_ar_node_M_SC_INFO;
  wire [181:0]m10_ar_node_M_SC_PAYLD;
  wire [0:0]m10_ar_node_M_SC_RECV;
  wire [0:0]m10_ar_node_M_SC_REQ;
  wire [0:0]m10_ar_node_M_SC_SEND;
  wire [0:0]m10_aw_node_M_SC_INFO;
  wire [181:0]m10_aw_node_M_SC_PAYLD;
  wire [0:0]m10_aw_node_M_SC_RECV;
  wire [0:0]m10_aw_node_M_SC_REQ;
  wire [0:0]m10_aw_node_M_SC_SEND;
  wire [0:0]m10_b_node_M_SC_INFO;
  wire [8:0]m10_b_node_M_SC_PAYLD;
  wire [0:0]m10_b_node_M_SC_RECV;
  wire [0:0]m10_b_node_M_SC_REQ;
  wire [0:0]m10_b_node_M_SC_SEND;
  wire [0:0]m10_r_node_M_SC_INFO;
  wire [54:0]m10_r_node_M_SC_PAYLD;
  wire [0:0]m10_r_node_M_SC_RECV;
  wire [0:0]m10_r_node_M_SC_REQ;
  wire [0:0]m10_r_node_M_SC_SEND;
  wire [0:0]m10_w_node_M_SC_INFO;
  wire [68:0]m10_w_node_M_SC_PAYLD;
  wire [0:0]m10_w_node_M_SC_RECV;
  wire [0:0]m10_w_node_M_SC_REQ;
  wire [0:0]m10_w_node_M_SC_SEND;
  wire m_axi_aclk_1;
  wire m_axi_aresetn_1;
  wire s_axi_aclk_1;
  wire s_axi_aresetn_1;

  assign M_SC_AR_info[0] = m10_ar_node_M_SC_INFO;
  assign M_SC_AR_payld[181:0] = m10_ar_node_M_SC_PAYLD;
  assign M_SC_AR_req[0] = m10_ar_node_M_SC_REQ;
  assign M_SC_AR_send[0] = m10_ar_node_M_SC_SEND;
  assign M_SC_AW_info[0] = m10_aw_node_M_SC_INFO;
  assign M_SC_AW_payld[181:0] = m10_aw_node_M_SC_PAYLD;
  assign M_SC_AW_req[0] = m10_aw_node_M_SC_REQ;
  assign M_SC_AW_send[0] = m10_aw_node_M_SC_SEND;
  assign M_SC_B_info[0] = m10_b_node_M_SC_INFO;
  assign M_SC_B_payld[8:0] = m10_b_node_M_SC_PAYLD;
  assign M_SC_B_req[0] = m10_b_node_M_SC_REQ;
  assign M_SC_B_send[0] = m10_b_node_M_SC_SEND;
  assign M_SC_R_info[0] = m10_r_node_M_SC_INFO;
  assign M_SC_R_payld[54:0] = m10_r_node_M_SC_PAYLD;
  assign M_SC_R_req[0] = m10_r_node_M_SC_REQ;
  assign M_SC_R_send[0] = m10_r_node_M_SC_SEND;
  assign M_SC_W_info[0] = m10_w_node_M_SC_INFO;
  assign M_SC_W_payld[68:0] = m10_w_node_M_SC_PAYLD;
  assign M_SC_W_req[0] = m10_w_node_M_SC_REQ;
  assign M_SC_W_send[0] = m10_w_node_M_SC_SEND;
  assign S_SC_AR_1_INFO = S_SC_AR_info[0];
  assign S_SC_AR_1_PAYLD = S_SC_AR_payld[181:0];
  assign S_SC_AR_1_REQ = S_SC_AR_req[0];
  assign S_SC_AR_1_SEND = S_SC_AR_send[0];
  assign S_SC_AR_recv[0] = S_SC_AR_1_RECV;
  assign S_SC_AW_1_INFO = S_SC_AW_info[0];
  assign S_SC_AW_1_PAYLD = S_SC_AW_payld[181:0];
  assign S_SC_AW_1_REQ = S_SC_AW_req[0];
  assign S_SC_AW_1_SEND = S_SC_AW_send[0];
  assign S_SC_AW_recv[0] = S_SC_AW_1_RECV;
  assign S_SC_B_1_INFO = S_SC_B_info[0];
  assign S_SC_B_1_PAYLD = S_SC_B_payld[8:0];
  assign S_SC_B_1_REQ = S_SC_B_req[0];
  assign S_SC_B_1_SEND = S_SC_B_send[0];
  assign S_SC_B_recv[0] = S_SC_B_1_RECV;
  assign S_SC_R_1_INFO = S_SC_R_info[0];
  assign S_SC_R_1_PAYLD = S_SC_R_payld[54:0];
  assign S_SC_R_1_REQ = S_SC_R_req[0];
  assign S_SC_R_1_SEND = S_SC_R_send[0];
  assign S_SC_R_recv[0] = S_SC_R_1_RECV;
  assign S_SC_W_1_INFO = S_SC_W_info[0];
  assign S_SC_W_1_PAYLD = S_SC_W_payld[68:0];
  assign S_SC_W_1_REQ = S_SC_W_req[0];
  assign S_SC_W_1_SEND = S_SC_W_send[0];
  assign S_SC_W_recv[0] = S_SC_W_1_RECV;
  assign m10_ar_node_M_SC_RECV = M_SC_AR_recv[0];
  assign m10_aw_node_M_SC_RECV = M_SC_AW_recv[0];
  assign m10_b_node_M_SC_RECV = M_SC_B_recv[0];
  assign m10_r_node_M_SC_RECV = M_SC_R_recv[0];
  assign m10_w_node_M_SC_RECV = M_SC_W_recv[0];
  assign m_axi_aclk_1 = m_axi_aclk;
  assign m_axi_aresetn_1 = m_axi_aresetn;
  assign s_axi_aclk_1 = s_axi_aclk;
  assign s_axi_aresetn_1 = s_axi_aresetn;
  bd_afc3_m10arn_0 m10_ar_node
       (.m_sc_aclk(m_axi_aclk_1),
        .m_sc_aresetn(m_axi_aresetn_1),
        .m_sc_info(m10_ar_node_M_SC_INFO),
        .m_sc_payld(m10_ar_node_M_SC_PAYLD),
        .m_sc_recv(m10_ar_node_M_SC_RECV),
        .m_sc_req(m10_ar_node_M_SC_REQ),
        .m_sc_send(m10_ar_node_M_SC_SEND),
        .s_sc_aclk(s_axi_aclk_1),
        .s_sc_aresetn(s_axi_aresetn_1),
        .s_sc_info(S_SC_AR_1_INFO),
        .s_sc_payld(S_SC_AR_1_PAYLD),
        .s_sc_recv(S_SC_AR_1_RECV),
        .s_sc_req(S_SC_AR_1_REQ),
        .s_sc_send(S_SC_AR_1_SEND));
  bd_afc3_m10awn_0 m10_aw_node
       (.m_sc_aclk(m_axi_aclk_1),
        .m_sc_aresetn(m_axi_aresetn_1),
        .m_sc_info(m10_aw_node_M_SC_INFO),
        .m_sc_payld(m10_aw_node_M_SC_PAYLD),
        .m_sc_recv(m10_aw_node_M_SC_RECV),
        .m_sc_req(m10_aw_node_M_SC_REQ),
        .m_sc_send(m10_aw_node_M_SC_SEND),
        .s_sc_aclk(s_axi_aclk_1),
        .s_sc_aresetn(s_axi_aresetn_1),
        .s_sc_info(S_SC_AW_1_INFO),
        .s_sc_payld(S_SC_AW_1_PAYLD),
        .s_sc_recv(S_SC_AW_1_RECV),
        .s_sc_req(S_SC_AW_1_REQ),
        .s_sc_send(S_SC_AW_1_SEND));
  bd_afc3_m10bn_0 m10_b_node
       (.m_sc_aclk(s_axi_aclk_1),
        .m_sc_aresetn(s_axi_aresetn_1),
        .m_sc_info(m10_b_node_M_SC_INFO),
        .m_sc_payld(m10_b_node_M_SC_PAYLD),
        .m_sc_recv(m10_b_node_M_SC_RECV),
        .m_sc_req(m10_b_node_M_SC_REQ),
        .m_sc_send(m10_b_node_M_SC_SEND),
        .s_sc_aclk(m_axi_aclk_1),
        .s_sc_aresetn(m_axi_aresetn_1),
        .s_sc_info(S_SC_B_1_INFO),
        .s_sc_payld(S_SC_B_1_PAYLD),
        .s_sc_recv(S_SC_B_1_RECV),
        .s_sc_req(S_SC_B_1_REQ),
        .s_sc_send(S_SC_B_1_SEND));
  bd_afc3_m10rn_0 m10_r_node
       (.m_sc_aclk(s_axi_aclk_1),
        .m_sc_aresetn(s_axi_aresetn_1),
        .m_sc_info(m10_r_node_M_SC_INFO),
        .m_sc_payld(m10_r_node_M_SC_PAYLD),
        .m_sc_recv(m10_r_node_M_SC_RECV),
        .m_sc_req(m10_r_node_M_SC_REQ),
        .m_sc_send(m10_r_node_M_SC_SEND),
        .s_sc_aclk(m_axi_aclk_1),
        .s_sc_aresetn(m_axi_aresetn_1),
        .s_sc_info(S_SC_R_1_INFO),
        .s_sc_payld(S_SC_R_1_PAYLD),
        .s_sc_recv(S_SC_R_1_RECV),
        .s_sc_req(S_SC_R_1_REQ),
        .s_sc_send(S_SC_R_1_SEND));
  bd_afc3_m10wn_0 m10_w_node
       (.m_sc_aclk(m_axi_aclk_1),
        .m_sc_aresetn(m_axi_aresetn_1),
        .m_sc_info(m10_w_node_M_SC_INFO),
        .m_sc_payld(m10_w_node_M_SC_PAYLD),
        .m_sc_recv(m10_w_node_M_SC_RECV),
        .m_sc_req(m10_w_node_M_SC_REQ),
        .m_sc_send(m10_w_node_M_SC_SEND),
        .s_sc_aclk(s_axi_aclk_1),
        .s_sc_aresetn(s_axi_aresetn_1),
        .s_sc_info(S_SC_W_1_INFO),
        .s_sc_payld(S_SC_W_1_PAYLD),
        .s_sc_recv(S_SC_W_1_RECV),
        .s_sc_req(S_SC_W_1_REQ),
        .s_sc_send(S_SC_W_1_SEND));
endmodule

module m11_exit_pipeline_imp_R27DIR
   (aclk,
    aresetn,
    m_axi_araddr,
    m_axi_arburst,
    m_axi_arcache,
    m_axi_arlen,
    m_axi_arlock,
    m_axi_arprot,
    m_axi_arqos,
    m_axi_arready,
    m_axi_arsize,
    m_axi_aruser,
    m_axi_arvalid,
    m_axi_awaddr,
    m_axi_awburst,
    m_axi_awcache,
    m_axi_awlen,
    m_axi_awlock,
    m_axi_awprot,
    m_axi_awqos,
    m_axi_awready,
    m_axi_awsize,
    m_axi_awuser,
    m_axi_awvalid,
    m_axi_bready,
    m_axi_bresp,
    m_axi_bvalid,
    m_axi_rdata,
    m_axi_rlast,
    m_axi_rready,
    m_axi_rresp,
    m_axi_rvalid,
    m_axi_wdata,
    m_axi_wlast,
    m_axi_wready,
    m_axi_wstrb,
    m_axi_wvalid,
    s_axi_araddr,
    s_axi_arcache,
    s_axi_arid,
    s_axi_arlen,
    s_axi_arlock,
    s_axi_arprot,
    s_axi_arqos,
    s_axi_arready,
    s_axi_aruser,
    s_axi_arvalid,
    s_axi_awaddr,
    s_axi_awcache,
    s_axi_awid,
    s_axi_awlen,
    s_axi_awlock,
    s_axi_awprot,
    s_axi_awqos,
    s_axi_awready,
    s_axi_awuser,
    s_axi_awvalid,
    s_axi_bid,
    s_axi_bready,
    s_axi_bresp,
    s_axi_buser,
    s_axi_bvalid,
    s_axi_rdata,
    s_axi_rid,
    s_axi_rlast,
    s_axi_rready,
    s_axi_rresp,
    s_axi_ruser,
    s_axi_rvalid,
    s_axi_wdata,
    s_axi_wlast,
    s_axi_wready,
    s_axi_wstrb,
    s_axi_wuser,
    s_axi_wvalid);
  input aclk;
  input aresetn;
  output [12:0]m_axi_araddr;
  output [1:0]m_axi_arburst;
  output [3:0]m_axi_arcache;
  output [7:0]m_axi_arlen;
  output [0:0]m_axi_arlock;
  output [2:0]m_axi_arprot;
  output [3:0]m_axi_arqos;
  input m_axi_arready;
  output [2:0]m_axi_arsize;
  output [15:0]m_axi_aruser;
  output m_axi_arvalid;
  output [12:0]m_axi_awaddr;
  output [1:0]m_axi_awburst;
  output [3:0]m_axi_awcache;
  output [7:0]m_axi_awlen;
  output [0:0]m_axi_awlock;
  output [2:0]m_axi_awprot;
  output [3:0]m_axi_awqos;
  input m_axi_awready;
  output [2:0]m_axi_awsize;
  output [15:0]m_axi_awuser;
  output m_axi_awvalid;
  output m_axi_bready;
  input [1:0]m_axi_bresp;
  input m_axi_bvalid;
  input [31:0]m_axi_rdata;
  input m_axi_rlast;
  output m_axi_rready;
  input [1:0]m_axi_rresp;
  input m_axi_rvalid;
  output [31:0]m_axi_wdata;
  output m_axi_wlast;
  input m_axi_wready;
  output [3:0]m_axi_wstrb;
  output m_axi_wvalid;
  input [12:0]s_axi_araddr;
  input [3:0]s_axi_arcache;
  input [2:0]s_axi_arid;
  input [7:0]s_axi_arlen;
  input [0:0]s_axi_arlock;
  input [2:0]s_axi_arprot;
  input [3:0]s_axi_arqos;
  output s_axi_arready;
  input [1023:0]s_axi_aruser;
  input s_axi_arvalid;
  input [12:0]s_axi_awaddr;
  input [3:0]s_axi_awcache;
  input [2:0]s_axi_awid;
  input [7:0]s_axi_awlen;
  input [0:0]s_axi_awlock;
  input [2:0]s_axi_awprot;
  input [3:0]s_axi_awqos;
  output s_axi_awready;
  input [1023:0]s_axi_awuser;
  input s_axi_awvalid;
  output [2:0]s_axi_bid;
  input s_axi_bready;
  output [1:0]s_axi_bresp;
  output [1023:0]s_axi_buser;
  output s_axi_bvalid;
  output [31:0]s_axi_rdata;
  output [2:0]s_axi_rid;
  output s_axi_rlast;
  input s_axi_rready;
  output [1:0]s_axi_rresp;
  output [1023:0]s_axi_ruser;
  output s_axi_rvalid;
  input [31:0]s_axi_wdata;
  input s_axi_wlast;
  output s_axi_wready;
  input [3:0]s_axi_wstrb;
  input [1023:0]s_axi_wuser;
  input s_axi_wvalid;

  wire aclk_1;
  wire aresetn_1;
  wire [12:0]m11_exit_M_AXI_ARADDR;
  wire [1:0]m11_exit_M_AXI_ARBURST;
  wire [3:0]m11_exit_M_AXI_ARCACHE;
  wire [7:0]m11_exit_M_AXI_ARLEN;
  wire [0:0]m11_exit_M_AXI_ARLOCK;
  wire [2:0]m11_exit_M_AXI_ARPROT;
  wire [3:0]m11_exit_M_AXI_ARQOS;
  wire m11_exit_M_AXI_ARREADY;
  wire [2:0]m11_exit_M_AXI_ARSIZE;
  wire [15:0]m11_exit_M_AXI_ARUSER;
  wire m11_exit_M_AXI_ARVALID;
  wire [12:0]m11_exit_M_AXI_AWADDR;
  wire [1:0]m11_exit_M_AXI_AWBURST;
  wire [3:0]m11_exit_M_AXI_AWCACHE;
  wire [7:0]m11_exit_M_AXI_AWLEN;
  wire [0:0]m11_exit_M_AXI_AWLOCK;
  wire [2:0]m11_exit_M_AXI_AWPROT;
  wire [3:0]m11_exit_M_AXI_AWQOS;
  wire m11_exit_M_AXI_AWREADY;
  wire [2:0]m11_exit_M_AXI_AWSIZE;
  wire [15:0]m11_exit_M_AXI_AWUSER;
  wire m11_exit_M_AXI_AWVALID;
  wire m11_exit_M_AXI_BREADY;
  wire [1:0]m11_exit_M_AXI_BRESP;
  wire m11_exit_M_AXI_BVALID;
  wire [31:0]m11_exit_M_AXI_RDATA;
  wire m11_exit_M_AXI_RLAST;
  wire m11_exit_M_AXI_RREADY;
  wire [1:0]m11_exit_M_AXI_RRESP;
  wire m11_exit_M_AXI_RVALID;
  wire [31:0]m11_exit_M_AXI_WDATA;
  wire m11_exit_M_AXI_WLAST;
  wire m11_exit_M_AXI_WREADY;
  wire [3:0]m11_exit_M_AXI_WSTRB;
  wire m11_exit_M_AXI_WVALID;
  wire [12:0]s_axi_1_ARADDR;
  wire [3:0]s_axi_1_ARCACHE;
  wire [2:0]s_axi_1_ARID;
  wire [7:0]s_axi_1_ARLEN;
  wire [0:0]s_axi_1_ARLOCK;
  wire [2:0]s_axi_1_ARPROT;
  wire [3:0]s_axi_1_ARQOS;
  wire s_axi_1_ARREADY;
  wire [1023:0]s_axi_1_ARUSER;
  wire s_axi_1_ARVALID;
  wire [12:0]s_axi_1_AWADDR;
  wire [3:0]s_axi_1_AWCACHE;
  wire [2:0]s_axi_1_AWID;
  wire [7:0]s_axi_1_AWLEN;
  wire [0:0]s_axi_1_AWLOCK;
  wire [2:0]s_axi_1_AWPROT;
  wire [3:0]s_axi_1_AWQOS;
  wire s_axi_1_AWREADY;
  wire [1023:0]s_axi_1_AWUSER;
  wire s_axi_1_AWVALID;
  wire [2:0]s_axi_1_BID;
  wire s_axi_1_BREADY;
  wire [1:0]s_axi_1_BRESP;
  wire [1023:0]s_axi_1_BUSER;
  wire s_axi_1_BVALID;
  wire [31:0]s_axi_1_RDATA;
  wire [2:0]s_axi_1_RID;
  wire s_axi_1_RLAST;
  wire s_axi_1_RREADY;
  wire [1:0]s_axi_1_RRESP;
  wire [1023:0]s_axi_1_RUSER;
  wire s_axi_1_RVALID;
  wire [31:0]s_axi_1_WDATA;
  wire s_axi_1_WLAST;
  wire s_axi_1_WREADY;
  wire [3:0]s_axi_1_WSTRB;
  wire [1023:0]s_axi_1_WUSER;
  wire s_axi_1_WVALID;

  assign aclk_1 = aclk;
  assign aresetn_1 = aresetn;
  assign m11_exit_M_AXI_ARREADY = m_axi_arready;
  assign m11_exit_M_AXI_AWREADY = m_axi_awready;
  assign m11_exit_M_AXI_BRESP = m_axi_bresp[1:0];
  assign m11_exit_M_AXI_BVALID = m_axi_bvalid;
  assign m11_exit_M_AXI_RDATA = m_axi_rdata[31:0];
  assign m11_exit_M_AXI_RLAST = m_axi_rlast;
  assign m11_exit_M_AXI_RRESP = m_axi_rresp[1:0];
  assign m11_exit_M_AXI_RVALID = m_axi_rvalid;
  assign m11_exit_M_AXI_WREADY = m_axi_wready;
  assign m_axi_araddr[12:0] = m11_exit_M_AXI_ARADDR;
  assign m_axi_arburst[1:0] = m11_exit_M_AXI_ARBURST;
  assign m_axi_arcache[3:0] = m11_exit_M_AXI_ARCACHE;
  assign m_axi_arlen[7:0] = m11_exit_M_AXI_ARLEN;
  assign m_axi_arlock[0] = m11_exit_M_AXI_ARLOCK;
  assign m_axi_arprot[2:0] = m11_exit_M_AXI_ARPROT;
  assign m_axi_arqos[3:0] = m11_exit_M_AXI_ARQOS;
  assign m_axi_arsize[2:0] = m11_exit_M_AXI_ARSIZE;
  assign m_axi_aruser[15:0] = m11_exit_M_AXI_ARUSER;
  assign m_axi_arvalid = m11_exit_M_AXI_ARVALID;
  assign m_axi_awaddr[12:0] = m11_exit_M_AXI_AWADDR;
  assign m_axi_awburst[1:0] = m11_exit_M_AXI_AWBURST;
  assign m_axi_awcache[3:0] = m11_exit_M_AXI_AWCACHE;
  assign m_axi_awlen[7:0] = m11_exit_M_AXI_AWLEN;
  assign m_axi_awlock[0] = m11_exit_M_AXI_AWLOCK;
  assign m_axi_awprot[2:0] = m11_exit_M_AXI_AWPROT;
  assign m_axi_awqos[3:0] = m11_exit_M_AXI_AWQOS;
  assign m_axi_awsize[2:0] = m11_exit_M_AXI_AWSIZE;
  assign m_axi_awuser[15:0] = m11_exit_M_AXI_AWUSER;
  assign m_axi_awvalid = m11_exit_M_AXI_AWVALID;
  assign m_axi_bready = m11_exit_M_AXI_BREADY;
  assign m_axi_rready = m11_exit_M_AXI_RREADY;
  assign m_axi_wdata[31:0] = m11_exit_M_AXI_WDATA;
  assign m_axi_wlast = m11_exit_M_AXI_WLAST;
  assign m_axi_wstrb[3:0] = m11_exit_M_AXI_WSTRB;
  assign m_axi_wvalid = m11_exit_M_AXI_WVALID;
  assign s_axi_1_ARADDR = s_axi_araddr[12:0];
  assign s_axi_1_ARCACHE = s_axi_arcache[3:0];
  assign s_axi_1_ARID = s_axi_arid[2:0];
  assign s_axi_1_ARLEN = s_axi_arlen[7:0];
  assign s_axi_1_ARLOCK = s_axi_arlock[0];
  assign s_axi_1_ARPROT = s_axi_arprot[2:0];
  assign s_axi_1_ARQOS = s_axi_arqos[3:0];
  assign s_axi_1_ARUSER = s_axi_aruser[1023:0];
  assign s_axi_1_ARVALID = s_axi_arvalid;
  assign s_axi_1_AWADDR = s_axi_awaddr[12:0];
  assign s_axi_1_AWCACHE = s_axi_awcache[3:0];
  assign s_axi_1_AWID = s_axi_awid[2:0];
  assign s_axi_1_AWLEN = s_axi_awlen[7:0];
  assign s_axi_1_AWLOCK = s_axi_awlock[0];
  assign s_axi_1_AWPROT = s_axi_awprot[2:0];
  assign s_axi_1_AWQOS = s_axi_awqos[3:0];
  assign s_axi_1_AWUSER = s_axi_awuser[1023:0];
  assign s_axi_1_AWVALID = s_axi_awvalid;
  assign s_axi_1_BREADY = s_axi_bready;
  assign s_axi_1_RREADY = s_axi_rready;
  assign s_axi_1_WDATA = s_axi_wdata[31:0];
  assign s_axi_1_WLAST = s_axi_wlast;
  assign s_axi_1_WSTRB = s_axi_wstrb[3:0];
  assign s_axi_1_WUSER = s_axi_wuser[1023:0];
  assign s_axi_1_WVALID = s_axi_wvalid;
  assign s_axi_arready = s_axi_1_ARREADY;
  assign s_axi_awready = s_axi_1_AWREADY;
  assign s_axi_bid[2:0] = s_axi_1_BID;
  assign s_axi_bresp[1:0] = s_axi_1_BRESP;
  assign s_axi_buser[1023:0] = s_axi_1_BUSER;
  assign s_axi_bvalid = s_axi_1_BVALID;
  assign s_axi_rdata[31:0] = s_axi_1_RDATA;
  assign s_axi_rid[2:0] = s_axi_1_RID;
  assign s_axi_rlast = s_axi_1_RLAST;
  assign s_axi_rresp[1:0] = s_axi_1_RRESP;
  assign s_axi_ruser[1023:0] = s_axi_1_RUSER;
  assign s_axi_rvalid = s_axi_1_RVALID;
  assign s_axi_wready = s_axi_1_WREADY;
  bd_afc3_m11e_0 m11_exit
       (.aclk(aclk_1),
        .aresetn(aresetn_1),
        .m_axi_araddr(m11_exit_M_AXI_ARADDR),
        .m_axi_arburst(m11_exit_M_AXI_ARBURST),
        .m_axi_arcache(m11_exit_M_AXI_ARCACHE),
        .m_axi_arlen(m11_exit_M_AXI_ARLEN),
        .m_axi_arlock(m11_exit_M_AXI_ARLOCK),
        .m_axi_arprot(m11_exit_M_AXI_ARPROT),
        .m_axi_arqos(m11_exit_M_AXI_ARQOS),
        .m_axi_arready(m11_exit_M_AXI_ARREADY),
        .m_axi_arsize(m11_exit_M_AXI_ARSIZE),
        .m_axi_aruser(m11_exit_M_AXI_ARUSER),
        .m_axi_arvalid(m11_exit_M_AXI_ARVALID),
        .m_axi_awaddr(m11_exit_M_AXI_AWADDR),
        .m_axi_awburst(m11_exit_M_AXI_AWBURST),
        .m_axi_awcache(m11_exit_M_AXI_AWCACHE),
        .m_axi_awlen(m11_exit_M_AXI_AWLEN),
        .m_axi_awlock(m11_exit_M_AXI_AWLOCK),
        .m_axi_awprot(m11_exit_M_AXI_AWPROT),
        .m_axi_awqos(m11_exit_M_AXI_AWQOS),
        .m_axi_awready(m11_exit_M_AXI_AWREADY),
        .m_axi_awsize(m11_exit_M_AXI_AWSIZE),
        .m_axi_awuser(m11_exit_M_AXI_AWUSER),
        .m_axi_awvalid(m11_exit_M_AXI_AWVALID),
        .m_axi_bready(m11_exit_M_AXI_BREADY),
        .m_axi_bresp(m11_exit_M_AXI_BRESP),
        .m_axi_bvalid(m11_exit_M_AXI_BVALID),
        .m_axi_rdata(m11_exit_M_AXI_RDATA),
        .m_axi_rlast(m11_exit_M_AXI_RLAST),
        .m_axi_rready(m11_exit_M_AXI_RREADY),
        .m_axi_rresp(m11_exit_M_AXI_RRESP),
        .m_axi_rvalid(m11_exit_M_AXI_RVALID),
        .m_axi_wdata(m11_exit_M_AXI_WDATA),
        .m_axi_wlast(m11_exit_M_AXI_WLAST),
        .m_axi_wready(m11_exit_M_AXI_WREADY),
        .m_axi_wstrb(m11_exit_M_AXI_WSTRB),
        .m_axi_wvalid(m11_exit_M_AXI_WVALID),
        .s_axi_araddr(s_axi_1_ARADDR),
        .s_axi_arcache(s_axi_1_ARCACHE),
        .s_axi_arid(s_axi_1_ARID),
        .s_axi_arlen(s_axi_1_ARLEN),
        .s_axi_arlock(s_axi_1_ARLOCK),
        .s_axi_arprot(s_axi_1_ARPROT),
        .s_axi_arqos(s_axi_1_ARQOS),
        .s_axi_arready(s_axi_1_ARREADY),
        .s_axi_aruser(s_axi_1_ARUSER),
        .s_axi_arvalid(s_axi_1_ARVALID),
        .s_axi_awaddr(s_axi_1_AWADDR),
        .s_axi_awcache(s_axi_1_AWCACHE),
        .s_axi_awid(s_axi_1_AWID),
        .s_axi_awlen(s_axi_1_AWLEN),
        .s_axi_awlock(s_axi_1_AWLOCK),
        .s_axi_awprot(s_axi_1_AWPROT),
        .s_axi_awqos(s_axi_1_AWQOS),
        .s_axi_awready(s_axi_1_AWREADY),
        .s_axi_awuser(s_axi_1_AWUSER),
        .s_axi_awvalid(s_axi_1_AWVALID),
        .s_axi_bid(s_axi_1_BID),
        .s_axi_bready(s_axi_1_BREADY),
        .s_axi_bresp(s_axi_1_BRESP),
        .s_axi_buser(s_axi_1_BUSER),
        .s_axi_bvalid(s_axi_1_BVALID),
        .s_axi_rdata(s_axi_1_RDATA),
        .s_axi_rid(s_axi_1_RID),
        .s_axi_rlast(s_axi_1_RLAST),
        .s_axi_rready(s_axi_1_RREADY),
        .s_axi_rresp(s_axi_1_RRESP),
        .s_axi_ruser(s_axi_1_RUSER),
        .s_axi_rvalid(s_axi_1_RVALID),
        .s_axi_wdata(s_axi_1_WDATA),
        .s_axi_wlast(s_axi_1_WLAST),
        .s_axi_wready(s_axi_1_WREADY),
        .s_axi_wstrb(s_axi_1_WSTRB),
        .s_axi_wuser(s_axi_1_WUSER),
        .s_axi_wvalid(s_axi_1_WVALID));
endmodule

module m11_nodes_imp_16HES9H
   (M_SC_AR_info,
    M_SC_AR_payld,
    M_SC_AR_recv,
    M_SC_AR_req,
    M_SC_AR_send,
    M_SC_AW_info,
    M_SC_AW_payld,
    M_SC_AW_recv,
    M_SC_AW_req,
    M_SC_AW_send,
    M_SC_B_info,
    M_SC_B_payld,
    M_SC_B_recv,
    M_SC_B_req,
    M_SC_B_send,
    M_SC_R_info,
    M_SC_R_payld,
    M_SC_R_recv,
    M_SC_R_req,
    M_SC_R_send,
    M_SC_W_info,
    M_SC_W_payld,
    M_SC_W_recv,
    M_SC_W_req,
    M_SC_W_send,
    S_SC_AR_info,
    S_SC_AR_payld,
    S_SC_AR_recv,
    S_SC_AR_req,
    S_SC_AR_send,
    S_SC_AW_info,
    S_SC_AW_payld,
    S_SC_AW_recv,
    S_SC_AW_req,
    S_SC_AW_send,
    S_SC_B_info,
    S_SC_B_payld,
    S_SC_B_recv,
    S_SC_B_req,
    S_SC_B_send,
    S_SC_R_info,
    S_SC_R_payld,
    S_SC_R_recv,
    S_SC_R_req,
    S_SC_R_send,
    S_SC_W_info,
    S_SC_W_payld,
    S_SC_W_recv,
    S_SC_W_req,
    S_SC_W_send,
    m_axi_aclk,
    m_axi_aresetn,
    s_axi_aclk,
    s_axi_aresetn);
  output [0:0]M_SC_AR_info;
  output [181:0]M_SC_AR_payld;
  input [0:0]M_SC_AR_recv;
  output [0:0]M_SC_AR_req;
  output [0:0]M_SC_AR_send;
  output [0:0]M_SC_AW_info;
  output [181:0]M_SC_AW_payld;
  input [0:0]M_SC_AW_recv;
  output [0:0]M_SC_AW_req;
  output [0:0]M_SC_AW_send;
  output [0:0]M_SC_B_info;
  output [8:0]M_SC_B_payld;
  input [0:0]M_SC_B_recv;
  output [0:0]M_SC_B_req;
  output [0:0]M_SC_B_send;
  output [0:0]M_SC_R_info;
  output [54:0]M_SC_R_payld;
  input [0:0]M_SC_R_recv;
  output [0:0]M_SC_R_req;
  output [0:0]M_SC_R_send;
  output [0:0]M_SC_W_info;
  output [68:0]M_SC_W_payld;
  input [0:0]M_SC_W_recv;
  output [0:0]M_SC_W_req;
  output [0:0]M_SC_W_send;
  input [0:0]S_SC_AR_info;
  input [181:0]S_SC_AR_payld;
  output [0:0]S_SC_AR_recv;
  input [0:0]S_SC_AR_req;
  input [0:0]S_SC_AR_send;
  input [0:0]S_SC_AW_info;
  input [181:0]S_SC_AW_payld;
  output [0:0]S_SC_AW_recv;
  input [0:0]S_SC_AW_req;
  input [0:0]S_SC_AW_send;
  input [0:0]S_SC_B_info;
  input [8:0]S_SC_B_payld;
  output [0:0]S_SC_B_recv;
  input [0:0]S_SC_B_req;
  input [0:0]S_SC_B_send;
  input [0:0]S_SC_R_info;
  input [54:0]S_SC_R_payld;
  output [0:0]S_SC_R_recv;
  input [0:0]S_SC_R_req;
  input [0:0]S_SC_R_send;
  input [0:0]S_SC_W_info;
  input [68:0]S_SC_W_payld;
  output [0:0]S_SC_W_recv;
  input [0:0]S_SC_W_req;
  input [0:0]S_SC_W_send;
  input m_axi_aclk;
  input m_axi_aresetn;
  input s_axi_aclk;
  input s_axi_aresetn;

  wire [0:0]S_SC_AR_1_INFO;
  wire [181:0]S_SC_AR_1_PAYLD;
  wire [0:0]S_SC_AR_1_RECV;
  wire [0:0]S_SC_AR_1_REQ;
  wire [0:0]S_SC_AR_1_SEND;
  wire [0:0]S_SC_AW_1_INFO;
  wire [181:0]S_SC_AW_1_PAYLD;
  wire [0:0]S_SC_AW_1_RECV;
  wire [0:0]S_SC_AW_1_REQ;
  wire [0:0]S_SC_AW_1_SEND;
  wire [0:0]S_SC_B_1_INFO;
  wire [8:0]S_SC_B_1_PAYLD;
  wire [0:0]S_SC_B_1_RECV;
  wire [0:0]S_SC_B_1_REQ;
  wire [0:0]S_SC_B_1_SEND;
  wire [0:0]S_SC_R_1_INFO;
  wire [54:0]S_SC_R_1_PAYLD;
  wire [0:0]S_SC_R_1_RECV;
  wire [0:0]S_SC_R_1_REQ;
  wire [0:0]S_SC_R_1_SEND;
  wire [0:0]S_SC_W_1_INFO;
  wire [68:0]S_SC_W_1_PAYLD;
  wire [0:0]S_SC_W_1_RECV;
  wire [0:0]S_SC_W_1_REQ;
  wire [0:0]S_SC_W_1_SEND;
  wire [0:0]m11_ar_node_M_SC_INFO;
  wire [181:0]m11_ar_node_M_SC_PAYLD;
  wire [0:0]m11_ar_node_M_SC_RECV;
  wire [0:0]m11_ar_node_M_SC_REQ;
  wire [0:0]m11_ar_node_M_SC_SEND;
  wire [0:0]m11_aw_node_M_SC_INFO;
  wire [181:0]m11_aw_node_M_SC_PAYLD;
  wire [0:0]m11_aw_node_M_SC_RECV;
  wire [0:0]m11_aw_node_M_SC_REQ;
  wire [0:0]m11_aw_node_M_SC_SEND;
  wire [0:0]m11_b_node_M_SC_INFO;
  wire [8:0]m11_b_node_M_SC_PAYLD;
  wire [0:0]m11_b_node_M_SC_RECV;
  wire [0:0]m11_b_node_M_SC_REQ;
  wire [0:0]m11_b_node_M_SC_SEND;
  wire [0:0]m11_r_node_M_SC_INFO;
  wire [54:0]m11_r_node_M_SC_PAYLD;
  wire [0:0]m11_r_node_M_SC_RECV;
  wire [0:0]m11_r_node_M_SC_REQ;
  wire [0:0]m11_r_node_M_SC_SEND;
  wire [0:0]m11_w_node_M_SC_INFO;
  wire [68:0]m11_w_node_M_SC_PAYLD;
  wire [0:0]m11_w_node_M_SC_RECV;
  wire [0:0]m11_w_node_M_SC_REQ;
  wire [0:0]m11_w_node_M_SC_SEND;
  wire m_axi_aclk_1;
  wire m_axi_aresetn_1;
  wire s_axi_aclk_1;
  wire s_axi_aresetn_1;

  assign M_SC_AR_info[0] = m11_ar_node_M_SC_INFO;
  assign M_SC_AR_payld[181:0] = m11_ar_node_M_SC_PAYLD;
  assign M_SC_AR_req[0] = m11_ar_node_M_SC_REQ;
  assign M_SC_AR_send[0] = m11_ar_node_M_SC_SEND;
  assign M_SC_AW_info[0] = m11_aw_node_M_SC_INFO;
  assign M_SC_AW_payld[181:0] = m11_aw_node_M_SC_PAYLD;
  assign M_SC_AW_req[0] = m11_aw_node_M_SC_REQ;
  assign M_SC_AW_send[0] = m11_aw_node_M_SC_SEND;
  assign M_SC_B_info[0] = m11_b_node_M_SC_INFO;
  assign M_SC_B_payld[8:0] = m11_b_node_M_SC_PAYLD;
  assign M_SC_B_req[0] = m11_b_node_M_SC_REQ;
  assign M_SC_B_send[0] = m11_b_node_M_SC_SEND;
  assign M_SC_R_info[0] = m11_r_node_M_SC_INFO;
  assign M_SC_R_payld[54:0] = m11_r_node_M_SC_PAYLD;
  assign M_SC_R_req[0] = m11_r_node_M_SC_REQ;
  assign M_SC_R_send[0] = m11_r_node_M_SC_SEND;
  assign M_SC_W_info[0] = m11_w_node_M_SC_INFO;
  assign M_SC_W_payld[68:0] = m11_w_node_M_SC_PAYLD;
  assign M_SC_W_req[0] = m11_w_node_M_SC_REQ;
  assign M_SC_W_send[0] = m11_w_node_M_SC_SEND;
  assign S_SC_AR_1_INFO = S_SC_AR_info[0];
  assign S_SC_AR_1_PAYLD = S_SC_AR_payld[181:0];
  assign S_SC_AR_1_REQ = S_SC_AR_req[0];
  assign S_SC_AR_1_SEND = S_SC_AR_send[0];
  assign S_SC_AR_recv[0] = S_SC_AR_1_RECV;
  assign S_SC_AW_1_INFO = S_SC_AW_info[0];
  assign S_SC_AW_1_PAYLD = S_SC_AW_payld[181:0];
  assign S_SC_AW_1_REQ = S_SC_AW_req[0];
  assign S_SC_AW_1_SEND = S_SC_AW_send[0];
  assign S_SC_AW_recv[0] = S_SC_AW_1_RECV;
  assign S_SC_B_1_INFO = S_SC_B_info[0];
  assign S_SC_B_1_PAYLD = S_SC_B_payld[8:0];
  assign S_SC_B_1_REQ = S_SC_B_req[0];
  assign S_SC_B_1_SEND = S_SC_B_send[0];
  assign S_SC_B_recv[0] = S_SC_B_1_RECV;
  assign S_SC_R_1_INFO = S_SC_R_info[0];
  assign S_SC_R_1_PAYLD = S_SC_R_payld[54:0];
  assign S_SC_R_1_REQ = S_SC_R_req[0];
  assign S_SC_R_1_SEND = S_SC_R_send[0];
  assign S_SC_R_recv[0] = S_SC_R_1_RECV;
  assign S_SC_W_1_INFO = S_SC_W_info[0];
  assign S_SC_W_1_PAYLD = S_SC_W_payld[68:0];
  assign S_SC_W_1_REQ = S_SC_W_req[0];
  assign S_SC_W_1_SEND = S_SC_W_send[0];
  assign S_SC_W_recv[0] = S_SC_W_1_RECV;
  assign m11_ar_node_M_SC_RECV = M_SC_AR_recv[0];
  assign m11_aw_node_M_SC_RECV = M_SC_AW_recv[0];
  assign m11_b_node_M_SC_RECV = M_SC_B_recv[0];
  assign m11_r_node_M_SC_RECV = M_SC_R_recv[0];
  assign m11_w_node_M_SC_RECV = M_SC_W_recv[0];
  assign m_axi_aclk_1 = m_axi_aclk;
  assign m_axi_aresetn_1 = m_axi_aresetn;
  assign s_axi_aclk_1 = s_axi_aclk;
  assign s_axi_aresetn_1 = s_axi_aresetn;
  bd_afc3_m11arn_0 m11_ar_node
       (.m_sc_aclk(m_axi_aclk_1),
        .m_sc_aresetn(m_axi_aresetn_1),
        .m_sc_info(m11_ar_node_M_SC_INFO),
        .m_sc_payld(m11_ar_node_M_SC_PAYLD),
        .m_sc_recv(m11_ar_node_M_SC_RECV),
        .m_sc_req(m11_ar_node_M_SC_REQ),
        .m_sc_send(m11_ar_node_M_SC_SEND),
        .s_sc_aclk(s_axi_aclk_1),
        .s_sc_aresetn(s_axi_aresetn_1),
        .s_sc_info(S_SC_AR_1_INFO),
        .s_sc_payld(S_SC_AR_1_PAYLD),
        .s_sc_recv(S_SC_AR_1_RECV),
        .s_sc_req(S_SC_AR_1_REQ),
        .s_sc_send(S_SC_AR_1_SEND));
  bd_afc3_m11awn_0 m11_aw_node
       (.m_sc_aclk(m_axi_aclk_1),
        .m_sc_aresetn(m_axi_aresetn_1),
        .m_sc_info(m11_aw_node_M_SC_INFO),
        .m_sc_payld(m11_aw_node_M_SC_PAYLD),
        .m_sc_recv(m11_aw_node_M_SC_RECV),
        .m_sc_req(m11_aw_node_M_SC_REQ),
        .m_sc_send(m11_aw_node_M_SC_SEND),
        .s_sc_aclk(s_axi_aclk_1),
        .s_sc_aresetn(s_axi_aresetn_1),
        .s_sc_info(S_SC_AW_1_INFO),
        .s_sc_payld(S_SC_AW_1_PAYLD),
        .s_sc_recv(S_SC_AW_1_RECV),
        .s_sc_req(S_SC_AW_1_REQ),
        .s_sc_send(S_SC_AW_1_SEND));
  bd_afc3_m11bn_0 m11_b_node
       (.m_sc_aclk(s_axi_aclk_1),
        .m_sc_aresetn(s_axi_aresetn_1),
        .m_sc_info(m11_b_node_M_SC_INFO),
        .m_sc_payld(m11_b_node_M_SC_PAYLD),
        .m_sc_recv(m11_b_node_M_SC_RECV),
        .m_sc_req(m11_b_node_M_SC_REQ),
        .m_sc_send(m11_b_node_M_SC_SEND),
        .s_sc_aclk(m_axi_aclk_1),
        .s_sc_aresetn(m_axi_aresetn_1),
        .s_sc_info(S_SC_B_1_INFO),
        .s_sc_payld(S_SC_B_1_PAYLD),
        .s_sc_recv(S_SC_B_1_RECV),
        .s_sc_req(S_SC_B_1_REQ),
        .s_sc_send(S_SC_B_1_SEND));
  bd_afc3_m11rn_0 m11_r_node
       (.m_sc_aclk(s_axi_aclk_1),
        .m_sc_aresetn(s_axi_aresetn_1),
        .m_sc_info(m11_r_node_M_SC_INFO),
        .m_sc_payld(m11_r_node_M_SC_PAYLD),
        .m_sc_recv(m11_r_node_M_SC_RECV),
        .m_sc_req(m11_r_node_M_SC_REQ),
        .m_sc_send(m11_r_node_M_SC_SEND),
        .s_sc_aclk(m_axi_aclk_1),
        .s_sc_aresetn(m_axi_aresetn_1),
        .s_sc_info(S_SC_R_1_INFO),
        .s_sc_payld(S_SC_R_1_PAYLD),
        .s_sc_recv(S_SC_R_1_RECV),
        .s_sc_req(S_SC_R_1_REQ),
        .s_sc_send(S_SC_R_1_SEND));
  bd_afc3_m11wn_0 m11_w_node
       (.m_sc_aclk(m_axi_aclk_1),
        .m_sc_aresetn(m_axi_aresetn_1),
        .m_sc_info(m11_w_node_M_SC_INFO),
        .m_sc_payld(m11_w_node_M_SC_PAYLD),
        .m_sc_recv(m11_w_node_M_SC_RECV),
        .m_sc_req(m11_w_node_M_SC_REQ),
        .m_sc_send(m11_w_node_M_SC_SEND),
        .s_sc_aclk(s_axi_aclk_1),
        .s_sc_aresetn(s_axi_aresetn_1),
        .s_sc_info(S_SC_W_1_INFO),
        .s_sc_payld(S_SC_W_1_PAYLD),
        .s_sc_recv(S_SC_W_1_RECV),
        .s_sc_req(S_SC_W_1_REQ),
        .s_sc_send(S_SC_W_1_SEND));
endmodule

module m12_exit_pipeline_imp_OOZ04Z
   (aclk,
    aresetn,
    m_axi_araddr,
    m_axi_arprot,
    m_axi_arready,
    m_axi_arvalid,
    m_axi_awaddr,
    m_axi_awprot,
    m_axi_awready,
    m_axi_awvalid,
    m_axi_bready,
    m_axi_bresp,
    m_axi_bvalid,
    m_axi_rdata,
    m_axi_rready,
    m_axi_rresp,
    m_axi_rvalid,
    m_axi_wdata,
    m_axi_wready,
    m_axi_wstrb,
    m_axi_wvalid,
    s_axi_araddr,
    s_axi_arcache,
    s_axi_arid,
    s_axi_arlen,
    s_axi_arlock,
    s_axi_arprot,
    s_axi_arqos,
    s_axi_arready,
    s_axi_aruser,
    s_axi_arvalid,
    s_axi_awaddr,
    s_axi_awcache,
    s_axi_awid,
    s_axi_awlen,
    s_axi_awlock,
    s_axi_awprot,
    s_axi_awqos,
    s_axi_awready,
    s_axi_awuser,
    s_axi_awvalid,
    s_axi_bid,
    s_axi_bready,
    s_axi_bresp,
    s_axi_buser,
    s_axi_bvalid,
    s_axi_rdata,
    s_axi_rid,
    s_axi_rlast,
    s_axi_rready,
    s_axi_rresp,
    s_axi_ruser,
    s_axi_rvalid,
    s_axi_wdata,
    s_axi_wlast,
    s_axi_wready,
    s_axi_wstrb,
    s_axi_wuser,
    s_axi_wvalid);
  input aclk;
  input aresetn;
  output [4:0]m_axi_araddr;
  output [2:0]m_axi_arprot;
  input m_axi_arready;
  output m_axi_arvalid;
  output [4:0]m_axi_awaddr;
  output [2:0]m_axi_awprot;
  input m_axi_awready;
  output m_axi_awvalid;
  output m_axi_bready;
  input [1:0]m_axi_bresp;
  input m_axi_bvalid;
  input [31:0]m_axi_rdata;
  output m_axi_rready;
  input [1:0]m_axi_rresp;
  input m_axi_rvalid;
  output [31:0]m_axi_wdata;
  input m_axi_wready;
  output [3:0]m_axi_wstrb;
  output m_axi_wvalid;
  input [4:0]s_axi_araddr;
  input [3:0]s_axi_arcache;
  input [2:0]s_axi_arid;
  input [7:0]s_axi_arlen;
  input [0:0]s_axi_arlock;
  input [2:0]s_axi_arprot;
  input [3:0]s_axi_arqos;
  output s_axi_arready;
  input [1023:0]s_axi_aruser;
  input s_axi_arvalid;
  input [4:0]s_axi_awaddr;
  input [3:0]s_axi_awcache;
  input [2:0]s_axi_awid;
  input [7:0]s_axi_awlen;
  input [0:0]s_axi_awlock;
  input [2:0]s_axi_awprot;
  input [3:0]s_axi_awqos;
  output s_axi_awready;
  input [1023:0]s_axi_awuser;
  input s_axi_awvalid;
  output [2:0]s_axi_bid;
  input s_axi_bready;
  output [1:0]s_axi_bresp;
  output [1023:0]s_axi_buser;
  output s_axi_bvalid;
  output [31:0]s_axi_rdata;
  output [2:0]s_axi_rid;
  output s_axi_rlast;
  input s_axi_rready;
  output [1:0]s_axi_rresp;
  output [1023:0]s_axi_ruser;
  output s_axi_rvalid;
  input [31:0]s_axi_wdata;
  input s_axi_wlast;
  output s_axi_wready;
  input [3:0]s_axi_wstrb;
  input [1023:0]s_axi_wuser;
  input s_axi_wvalid;

  wire aclk_1;
  wire aresetn_1;
  wire [4:0]m12_exit_M_AXI_ARADDR;
  wire [2:0]m12_exit_M_AXI_ARPROT;
  wire m12_exit_M_AXI_ARREADY;
  wire m12_exit_M_AXI_ARVALID;
  wire [4:0]m12_exit_M_AXI_AWADDR;
  wire [2:0]m12_exit_M_AXI_AWPROT;
  wire m12_exit_M_AXI_AWREADY;
  wire m12_exit_M_AXI_AWVALID;
  wire m12_exit_M_AXI_BREADY;
  wire [1:0]m12_exit_M_AXI_BRESP;
  wire m12_exit_M_AXI_BVALID;
  wire [31:0]m12_exit_M_AXI_RDATA;
  wire m12_exit_M_AXI_RREADY;
  wire [1:0]m12_exit_M_AXI_RRESP;
  wire m12_exit_M_AXI_RVALID;
  wire [31:0]m12_exit_M_AXI_WDATA;
  wire m12_exit_M_AXI_WREADY;
  wire [3:0]m12_exit_M_AXI_WSTRB;
  wire m12_exit_M_AXI_WVALID;
  wire [4:0]s_axi_1_ARADDR;
  wire [3:0]s_axi_1_ARCACHE;
  wire [2:0]s_axi_1_ARID;
  wire [7:0]s_axi_1_ARLEN;
  wire [0:0]s_axi_1_ARLOCK;
  wire [2:0]s_axi_1_ARPROT;
  wire [3:0]s_axi_1_ARQOS;
  wire s_axi_1_ARREADY;
  wire [1023:0]s_axi_1_ARUSER;
  wire s_axi_1_ARVALID;
  wire [4:0]s_axi_1_AWADDR;
  wire [3:0]s_axi_1_AWCACHE;
  wire [2:0]s_axi_1_AWID;
  wire [7:0]s_axi_1_AWLEN;
  wire [0:0]s_axi_1_AWLOCK;
  wire [2:0]s_axi_1_AWPROT;
  wire [3:0]s_axi_1_AWQOS;
  wire s_axi_1_AWREADY;
  wire [1023:0]s_axi_1_AWUSER;
  wire s_axi_1_AWVALID;
  wire [2:0]s_axi_1_BID;
  wire s_axi_1_BREADY;
  wire [1:0]s_axi_1_BRESP;
  wire [1023:0]s_axi_1_BUSER;
  wire s_axi_1_BVALID;
  wire [31:0]s_axi_1_RDATA;
  wire [2:0]s_axi_1_RID;
  wire s_axi_1_RLAST;
  wire s_axi_1_RREADY;
  wire [1:0]s_axi_1_RRESP;
  wire [1023:0]s_axi_1_RUSER;
  wire s_axi_1_RVALID;
  wire [31:0]s_axi_1_WDATA;
  wire s_axi_1_WLAST;
  wire s_axi_1_WREADY;
  wire [3:0]s_axi_1_WSTRB;
  wire [1023:0]s_axi_1_WUSER;
  wire s_axi_1_WVALID;

  assign aclk_1 = aclk;
  assign aresetn_1 = aresetn;
  assign m12_exit_M_AXI_ARREADY = m_axi_arready;
  assign m12_exit_M_AXI_AWREADY = m_axi_awready;
  assign m12_exit_M_AXI_BRESP = m_axi_bresp[1:0];
  assign m12_exit_M_AXI_BVALID = m_axi_bvalid;
  assign m12_exit_M_AXI_RDATA = m_axi_rdata[31:0];
  assign m12_exit_M_AXI_RRESP = m_axi_rresp[1:0];
  assign m12_exit_M_AXI_RVALID = m_axi_rvalid;
  assign m12_exit_M_AXI_WREADY = m_axi_wready;
  assign m_axi_araddr[4:0] = m12_exit_M_AXI_ARADDR;
  assign m_axi_arprot[2:0] = m12_exit_M_AXI_ARPROT;
  assign m_axi_arvalid = m12_exit_M_AXI_ARVALID;
  assign m_axi_awaddr[4:0] = m12_exit_M_AXI_AWADDR;
  assign m_axi_awprot[2:0] = m12_exit_M_AXI_AWPROT;
  assign m_axi_awvalid = m12_exit_M_AXI_AWVALID;
  assign m_axi_bready = m12_exit_M_AXI_BREADY;
  assign m_axi_rready = m12_exit_M_AXI_RREADY;
  assign m_axi_wdata[31:0] = m12_exit_M_AXI_WDATA;
  assign m_axi_wstrb[3:0] = m12_exit_M_AXI_WSTRB;
  assign m_axi_wvalid = m12_exit_M_AXI_WVALID;
  assign s_axi_1_ARADDR = s_axi_araddr[4:0];
  assign s_axi_1_ARCACHE = s_axi_arcache[3:0];
  assign s_axi_1_ARID = s_axi_arid[2:0];
  assign s_axi_1_ARLEN = s_axi_arlen[7:0];
  assign s_axi_1_ARLOCK = s_axi_arlock[0];
  assign s_axi_1_ARPROT = s_axi_arprot[2:0];
  assign s_axi_1_ARQOS = s_axi_arqos[3:0];
  assign s_axi_1_ARUSER = s_axi_aruser[1023:0];
  assign s_axi_1_ARVALID = s_axi_arvalid;
  assign s_axi_1_AWADDR = s_axi_awaddr[4:0];
  assign s_axi_1_AWCACHE = s_axi_awcache[3:0];
  assign s_axi_1_AWID = s_axi_awid[2:0];
  assign s_axi_1_AWLEN = s_axi_awlen[7:0];
  assign s_axi_1_AWLOCK = s_axi_awlock[0];
  assign s_axi_1_AWPROT = s_axi_awprot[2:0];
  assign s_axi_1_AWQOS = s_axi_awqos[3:0];
  assign s_axi_1_AWUSER = s_axi_awuser[1023:0];
  assign s_axi_1_AWVALID = s_axi_awvalid;
  assign s_axi_1_BREADY = s_axi_bready;
  assign s_axi_1_RREADY = s_axi_rready;
  assign s_axi_1_WDATA = s_axi_wdata[31:0];
  assign s_axi_1_WLAST = s_axi_wlast;
  assign s_axi_1_WSTRB = s_axi_wstrb[3:0];
  assign s_axi_1_WUSER = s_axi_wuser[1023:0];
  assign s_axi_1_WVALID = s_axi_wvalid;
  assign s_axi_arready = s_axi_1_ARREADY;
  assign s_axi_awready = s_axi_1_AWREADY;
  assign s_axi_bid[2:0] = s_axi_1_BID;
  assign s_axi_bresp[1:0] = s_axi_1_BRESP;
  assign s_axi_buser[1023:0] = s_axi_1_BUSER;
  assign s_axi_bvalid = s_axi_1_BVALID;
  assign s_axi_rdata[31:0] = s_axi_1_RDATA;
  assign s_axi_rid[2:0] = s_axi_1_RID;
  assign s_axi_rlast = s_axi_1_RLAST;
  assign s_axi_rresp[1:0] = s_axi_1_RRESP;
  assign s_axi_ruser[1023:0] = s_axi_1_RUSER;
  assign s_axi_rvalid = s_axi_1_RVALID;
  assign s_axi_wready = s_axi_1_WREADY;
  bd_afc3_m12e_0 m12_exit
       (.aclk(aclk_1),
        .aresetn(aresetn_1),
        .m_axi_araddr(m12_exit_M_AXI_ARADDR),
        .m_axi_arprot(m12_exit_M_AXI_ARPROT),
        .m_axi_arready(m12_exit_M_AXI_ARREADY),
        .m_axi_arvalid(m12_exit_M_AXI_ARVALID),
        .m_axi_awaddr(m12_exit_M_AXI_AWADDR),
        .m_axi_awprot(m12_exit_M_AXI_AWPROT),
        .m_axi_awready(m12_exit_M_AXI_AWREADY),
        .m_axi_awvalid(m12_exit_M_AXI_AWVALID),
        .m_axi_bready(m12_exit_M_AXI_BREADY),
        .m_axi_bresp(m12_exit_M_AXI_BRESP),
        .m_axi_bvalid(m12_exit_M_AXI_BVALID),
        .m_axi_rdata(m12_exit_M_AXI_RDATA),
        .m_axi_rready(m12_exit_M_AXI_RREADY),
        .m_axi_rresp(m12_exit_M_AXI_RRESP),
        .m_axi_rvalid(m12_exit_M_AXI_RVALID),
        .m_axi_wdata(m12_exit_M_AXI_WDATA),
        .m_axi_wready(m12_exit_M_AXI_WREADY),
        .m_axi_wstrb(m12_exit_M_AXI_WSTRB),
        .m_axi_wvalid(m12_exit_M_AXI_WVALID),
        .s_axi_araddr(s_axi_1_ARADDR),
        .s_axi_arcache(s_axi_1_ARCACHE),
        .s_axi_arid(s_axi_1_ARID),
        .s_axi_arlen(s_axi_1_ARLEN),
        .s_axi_arlock(s_axi_1_ARLOCK),
        .s_axi_arprot(s_axi_1_ARPROT),
        .s_axi_arqos(s_axi_1_ARQOS),
        .s_axi_arready(s_axi_1_ARREADY),
        .s_axi_aruser(s_axi_1_ARUSER),
        .s_axi_arvalid(s_axi_1_ARVALID),
        .s_axi_awaddr(s_axi_1_AWADDR),
        .s_axi_awcache(s_axi_1_AWCACHE),
        .s_axi_awid(s_axi_1_AWID),
        .s_axi_awlen(s_axi_1_AWLEN),
        .s_axi_awlock(s_axi_1_AWLOCK),
        .s_axi_awprot(s_axi_1_AWPROT),
        .s_axi_awqos(s_axi_1_AWQOS),
        .s_axi_awready(s_axi_1_AWREADY),
        .s_axi_awuser(s_axi_1_AWUSER),
        .s_axi_awvalid(s_axi_1_AWVALID),
        .s_axi_bid(s_axi_1_BID),
        .s_axi_bready(s_axi_1_BREADY),
        .s_axi_bresp(s_axi_1_BRESP),
        .s_axi_buser(s_axi_1_BUSER),
        .s_axi_bvalid(s_axi_1_BVALID),
        .s_axi_rdata(s_axi_1_RDATA),
        .s_axi_rid(s_axi_1_RID),
        .s_axi_rlast(s_axi_1_RLAST),
        .s_axi_rready(s_axi_1_RREADY),
        .s_axi_rresp(s_axi_1_RRESP),
        .s_axi_ruser(s_axi_1_RUSER),
        .s_axi_rvalid(s_axi_1_RVALID),
        .s_axi_wdata(s_axi_1_WDATA),
        .s_axi_wlast(s_axi_1_WLAST),
        .s_axi_wready(s_axi_1_WREADY),
        .s_axi_wstrb(s_axi_1_WSTRB),
        .s_axi_wuser(s_axi_1_WUSER),
        .s_axi_wvalid(s_axi_1_WVALID));
endmodule

module m12_nodes_imp_1RO9IKU
   (M_SC_AR_info,
    M_SC_AR_payld,
    M_SC_AR_recv,
    M_SC_AR_req,
    M_SC_AR_send,
    M_SC_AW_info,
    M_SC_AW_payld,
    M_SC_AW_recv,
    M_SC_AW_req,
    M_SC_AW_send,
    M_SC_B_info,
    M_SC_B_payld,
    M_SC_B_recv,
    M_SC_B_req,
    M_SC_B_send,
    M_SC_R_info,
    M_SC_R_payld,
    M_SC_R_recv,
    M_SC_R_req,
    M_SC_R_send,
    M_SC_W_info,
    M_SC_W_payld,
    M_SC_W_recv,
    M_SC_W_req,
    M_SC_W_send,
    S_SC_AR_info,
    S_SC_AR_payld,
    S_SC_AR_recv,
    S_SC_AR_req,
    S_SC_AR_send,
    S_SC_AW_info,
    S_SC_AW_payld,
    S_SC_AW_recv,
    S_SC_AW_req,
    S_SC_AW_send,
    S_SC_B_info,
    S_SC_B_payld,
    S_SC_B_recv,
    S_SC_B_req,
    S_SC_B_send,
    S_SC_R_info,
    S_SC_R_payld,
    S_SC_R_recv,
    S_SC_R_req,
    S_SC_R_send,
    S_SC_W_info,
    S_SC_W_payld,
    S_SC_W_recv,
    S_SC_W_req,
    S_SC_W_send,
    m_axi_aclk,
    m_axi_aresetn,
    s_axi_aclk,
    s_axi_aresetn);
  output [0:0]M_SC_AR_info;
  output [181:0]M_SC_AR_payld;
  input [0:0]M_SC_AR_recv;
  output [0:0]M_SC_AR_req;
  output [0:0]M_SC_AR_send;
  output [0:0]M_SC_AW_info;
  output [181:0]M_SC_AW_payld;
  input [0:0]M_SC_AW_recv;
  output [0:0]M_SC_AW_req;
  output [0:0]M_SC_AW_send;
  output [0:0]M_SC_B_info;
  output [8:0]M_SC_B_payld;
  input [0:0]M_SC_B_recv;
  output [0:0]M_SC_B_req;
  output [0:0]M_SC_B_send;
  output [0:0]M_SC_R_info;
  output [54:0]M_SC_R_payld;
  input [0:0]M_SC_R_recv;
  output [0:0]M_SC_R_req;
  output [0:0]M_SC_R_send;
  output [0:0]M_SC_W_info;
  output [68:0]M_SC_W_payld;
  input [0:0]M_SC_W_recv;
  output [0:0]M_SC_W_req;
  output [0:0]M_SC_W_send;
  input [0:0]S_SC_AR_info;
  input [181:0]S_SC_AR_payld;
  output [0:0]S_SC_AR_recv;
  input [0:0]S_SC_AR_req;
  input [0:0]S_SC_AR_send;
  input [0:0]S_SC_AW_info;
  input [181:0]S_SC_AW_payld;
  output [0:0]S_SC_AW_recv;
  input [0:0]S_SC_AW_req;
  input [0:0]S_SC_AW_send;
  input [0:0]S_SC_B_info;
  input [8:0]S_SC_B_payld;
  output [0:0]S_SC_B_recv;
  input [0:0]S_SC_B_req;
  input [0:0]S_SC_B_send;
  input [0:0]S_SC_R_info;
  input [54:0]S_SC_R_payld;
  output [0:0]S_SC_R_recv;
  input [0:0]S_SC_R_req;
  input [0:0]S_SC_R_send;
  input [0:0]S_SC_W_info;
  input [68:0]S_SC_W_payld;
  output [0:0]S_SC_W_recv;
  input [0:0]S_SC_W_req;
  input [0:0]S_SC_W_send;
  input m_axi_aclk;
  input m_axi_aresetn;
  input s_axi_aclk;
  input s_axi_aresetn;

  wire [0:0]S_SC_AR_1_INFO;
  wire [181:0]S_SC_AR_1_PAYLD;
  wire [0:0]S_SC_AR_1_RECV;
  wire [0:0]S_SC_AR_1_REQ;
  wire [0:0]S_SC_AR_1_SEND;
  wire [0:0]S_SC_AW_1_INFO;
  wire [181:0]S_SC_AW_1_PAYLD;
  wire [0:0]S_SC_AW_1_RECV;
  wire [0:0]S_SC_AW_1_REQ;
  wire [0:0]S_SC_AW_1_SEND;
  wire [0:0]S_SC_B_1_INFO;
  wire [8:0]S_SC_B_1_PAYLD;
  wire [0:0]S_SC_B_1_RECV;
  wire [0:0]S_SC_B_1_REQ;
  wire [0:0]S_SC_B_1_SEND;
  wire [0:0]S_SC_R_1_INFO;
  wire [54:0]S_SC_R_1_PAYLD;
  wire [0:0]S_SC_R_1_RECV;
  wire [0:0]S_SC_R_1_REQ;
  wire [0:0]S_SC_R_1_SEND;
  wire [0:0]S_SC_W_1_INFO;
  wire [68:0]S_SC_W_1_PAYLD;
  wire [0:0]S_SC_W_1_RECV;
  wire [0:0]S_SC_W_1_REQ;
  wire [0:0]S_SC_W_1_SEND;
  wire [0:0]m12_ar_node_M_SC_INFO;
  wire [181:0]m12_ar_node_M_SC_PAYLD;
  wire [0:0]m12_ar_node_M_SC_RECV;
  wire [0:0]m12_ar_node_M_SC_REQ;
  wire [0:0]m12_ar_node_M_SC_SEND;
  wire [0:0]m12_aw_node_M_SC_INFO;
  wire [181:0]m12_aw_node_M_SC_PAYLD;
  wire [0:0]m12_aw_node_M_SC_RECV;
  wire [0:0]m12_aw_node_M_SC_REQ;
  wire [0:0]m12_aw_node_M_SC_SEND;
  wire [0:0]m12_b_node_M_SC_INFO;
  wire [8:0]m12_b_node_M_SC_PAYLD;
  wire [0:0]m12_b_node_M_SC_RECV;
  wire [0:0]m12_b_node_M_SC_REQ;
  wire [0:0]m12_b_node_M_SC_SEND;
  wire [0:0]m12_r_node_M_SC_INFO;
  wire [54:0]m12_r_node_M_SC_PAYLD;
  wire [0:0]m12_r_node_M_SC_RECV;
  wire [0:0]m12_r_node_M_SC_REQ;
  wire [0:0]m12_r_node_M_SC_SEND;
  wire [0:0]m12_w_node_M_SC_INFO;
  wire [68:0]m12_w_node_M_SC_PAYLD;
  wire [0:0]m12_w_node_M_SC_RECV;
  wire [0:0]m12_w_node_M_SC_REQ;
  wire [0:0]m12_w_node_M_SC_SEND;
  wire m_axi_aclk_1;
  wire m_axi_aresetn_1;
  wire s_axi_aclk_1;
  wire s_axi_aresetn_1;

  assign M_SC_AR_info[0] = m12_ar_node_M_SC_INFO;
  assign M_SC_AR_payld[181:0] = m12_ar_node_M_SC_PAYLD;
  assign M_SC_AR_req[0] = m12_ar_node_M_SC_REQ;
  assign M_SC_AR_send[0] = m12_ar_node_M_SC_SEND;
  assign M_SC_AW_info[0] = m12_aw_node_M_SC_INFO;
  assign M_SC_AW_payld[181:0] = m12_aw_node_M_SC_PAYLD;
  assign M_SC_AW_req[0] = m12_aw_node_M_SC_REQ;
  assign M_SC_AW_send[0] = m12_aw_node_M_SC_SEND;
  assign M_SC_B_info[0] = m12_b_node_M_SC_INFO;
  assign M_SC_B_payld[8:0] = m12_b_node_M_SC_PAYLD;
  assign M_SC_B_req[0] = m12_b_node_M_SC_REQ;
  assign M_SC_B_send[0] = m12_b_node_M_SC_SEND;
  assign M_SC_R_info[0] = m12_r_node_M_SC_INFO;
  assign M_SC_R_payld[54:0] = m12_r_node_M_SC_PAYLD;
  assign M_SC_R_req[0] = m12_r_node_M_SC_REQ;
  assign M_SC_R_send[0] = m12_r_node_M_SC_SEND;
  assign M_SC_W_info[0] = m12_w_node_M_SC_INFO;
  assign M_SC_W_payld[68:0] = m12_w_node_M_SC_PAYLD;
  assign M_SC_W_req[0] = m12_w_node_M_SC_REQ;
  assign M_SC_W_send[0] = m12_w_node_M_SC_SEND;
  assign S_SC_AR_1_INFO = S_SC_AR_info[0];
  assign S_SC_AR_1_PAYLD = S_SC_AR_payld[181:0];
  assign S_SC_AR_1_REQ = S_SC_AR_req[0];
  assign S_SC_AR_1_SEND = S_SC_AR_send[0];
  assign S_SC_AR_recv[0] = S_SC_AR_1_RECV;
  assign S_SC_AW_1_INFO = S_SC_AW_info[0];
  assign S_SC_AW_1_PAYLD = S_SC_AW_payld[181:0];
  assign S_SC_AW_1_REQ = S_SC_AW_req[0];
  assign S_SC_AW_1_SEND = S_SC_AW_send[0];
  assign S_SC_AW_recv[0] = S_SC_AW_1_RECV;
  assign S_SC_B_1_INFO = S_SC_B_info[0];
  assign S_SC_B_1_PAYLD = S_SC_B_payld[8:0];
  assign S_SC_B_1_REQ = S_SC_B_req[0];
  assign S_SC_B_1_SEND = S_SC_B_send[0];
  assign S_SC_B_recv[0] = S_SC_B_1_RECV;
  assign S_SC_R_1_INFO = S_SC_R_info[0];
  assign S_SC_R_1_PAYLD = S_SC_R_payld[54:0];
  assign S_SC_R_1_REQ = S_SC_R_req[0];
  assign S_SC_R_1_SEND = S_SC_R_send[0];
  assign S_SC_R_recv[0] = S_SC_R_1_RECV;
  assign S_SC_W_1_INFO = S_SC_W_info[0];
  assign S_SC_W_1_PAYLD = S_SC_W_payld[68:0];
  assign S_SC_W_1_REQ = S_SC_W_req[0];
  assign S_SC_W_1_SEND = S_SC_W_send[0];
  assign S_SC_W_recv[0] = S_SC_W_1_RECV;
  assign m12_ar_node_M_SC_RECV = M_SC_AR_recv[0];
  assign m12_aw_node_M_SC_RECV = M_SC_AW_recv[0];
  assign m12_b_node_M_SC_RECV = M_SC_B_recv[0];
  assign m12_r_node_M_SC_RECV = M_SC_R_recv[0];
  assign m12_w_node_M_SC_RECV = M_SC_W_recv[0];
  assign m_axi_aclk_1 = m_axi_aclk;
  assign m_axi_aresetn_1 = m_axi_aresetn;
  assign s_axi_aclk_1 = s_axi_aclk;
  assign s_axi_aresetn_1 = s_axi_aresetn;
  bd_afc3_m12arn_0 m12_ar_node
       (.m_sc_aclk(m_axi_aclk_1),
        .m_sc_aresetn(m_axi_aresetn_1),
        .m_sc_info(m12_ar_node_M_SC_INFO),
        .m_sc_payld(m12_ar_node_M_SC_PAYLD),
        .m_sc_recv(m12_ar_node_M_SC_RECV),
        .m_sc_req(m12_ar_node_M_SC_REQ),
        .m_sc_send(m12_ar_node_M_SC_SEND),
        .s_sc_aclk(s_axi_aclk_1),
        .s_sc_aresetn(s_axi_aresetn_1),
        .s_sc_info(S_SC_AR_1_INFO),
        .s_sc_payld(S_SC_AR_1_PAYLD),
        .s_sc_recv(S_SC_AR_1_RECV),
        .s_sc_req(S_SC_AR_1_REQ),
        .s_sc_send(S_SC_AR_1_SEND));
  bd_afc3_m12awn_0 m12_aw_node
       (.m_sc_aclk(m_axi_aclk_1),
        .m_sc_aresetn(m_axi_aresetn_1),
        .m_sc_info(m12_aw_node_M_SC_INFO),
        .m_sc_payld(m12_aw_node_M_SC_PAYLD),
        .m_sc_recv(m12_aw_node_M_SC_RECV),
        .m_sc_req(m12_aw_node_M_SC_REQ),
        .m_sc_send(m12_aw_node_M_SC_SEND),
        .s_sc_aclk(s_axi_aclk_1),
        .s_sc_aresetn(s_axi_aresetn_1),
        .s_sc_info(S_SC_AW_1_INFO),
        .s_sc_payld(S_SC_AW_1_PAYLD),
        .s_sc_recv(S_SC_AW_1_RECV),
        .s_sc_req(S_SC_AW_1_REQ),
        .s_sc_send(S_SC_AW_1_SEND));
  bd_afc3_m12bn_0 m12_b_node
       (.m_sc_aclk(s_axi_aclk_1),
        .m_sc_aresetn(s_axi_aresetn_1),
        .m_sc_info(m12_b_node_M_SC_INFO),
        .m_sc_payld(m12_b_node_M_SC_PAYLD),
        .m_sc_recv(m12_b_node_M_SC_RECV),
        .m_sc_req(m12_b_node_M_SC_REQ),
        .m_sc_send(m12_b_node_M_SC_SEND),
        .s_sc_aclk(m_axi_aclk_1),
        .s_sc_aresetn(m_axi_aresetn_1),
        .s_sc_info(S_SC_B_1_INFO),
        .s_sc_payld(S_SC_B_1_PAYLD),
        .s_sc_recv(S_SC_B_1_RECV),
        .s_sc_req(S_SC_B_1_REQ),
        .s_sc_send(S_SC_B_1_SEND));
  bd_afc3_m12rn_0 m12_r_node
       (.m_sc_aclk(s_axi_aclk_1),
        .m_sc_aresetn(s_axi_aresetn_1),
        .m_sc_info(m12_r_node_M_SC_INFO),
        .m_sc_payld(m12_r_node_M_SC_PAYLD),
        .m_sc_recv(m12_r_node_M_SC_RECV),
        .m_sc_req(m12_r_node_M_SC_REQ),
        .m_sc_send(m12_r_node_M_SC_SEND),
        .s_sc_aclk(m_axi_aclk_1),
        .s_sc_aresetn(m_axi_aresetn_1),
        .s_sc_info(S_SC_R_1_INFO),
        .s_sc_payld(S_SC_R_1_PAYLD),
        .s_sc_recv(S_SC_R_1_RECV),
        .s_sc_req(S_SC_R_1_REQ),
        .s_sc_send(S_SC_R_1_SEND));
  bd_afc3_m12wn_0 m12_w_node
       (.m_sc_aclk(m_axi_aclk_1),
        .m_sc_aresetn(m_axi_aresetn_1),
        .m_sc_info(m12_w_node_M_SC_INFO),
        .m_sc_payld(m12_w_node_M_SC_PAYLD),
        .m_sc_recv(m12_w_node_M_SC_RECV),
        .m_sc_req(m12_w_node_M_SC_REQ),
        .m_sc_send(m12_w_node_M_SC_SEND),
        .s_sc_aclk(s_axi_aclk_1),
        .s_sc_aresetn(s_axi_aresetn_1),
        .s_sc_info(S_SC_W_1_INFO),
        .s_sc_payld(S_SC_W_1_PAYLD),
        .s_sc_recv(S_SC_W_1_RECV),
        .s_sc_req(S_SC_W_1_REQ),
        .s_sc_send(S_SC_W_1_SEND));
endmodule

module m13_exit_pipeline_imp_M5HYUR
   (aclk,
    aresetn,
    m_axi_araddr,
    m_axi_arprot,
    m_axi_arready,
    m_axi_arvalid,
    m_axi_awaddr,
    m_axi_awprot,
    m_axi_awready,
    m_axi_awvalid,
    m_axi_bready,
    m_axi_bresp,
    m_axi_bvalid,
    m_axi_rdata,
    m_axi_rready,
    m_axi_rresp,
    m_axi_rvalid,
    m_axi_wdata,
    m_axi_wready,
    m_axi_wstrb,
    m_axi_wvalid,
    s_axi_araddr,
    s_axi_arcache,
    s_axi_arid,
    s_axi_arlen,
    s_axi_arlock,
    s_axi_arprot,
    s_axi_arqos,
    s_axi_arready,
    s_axi_aruser,
    s_axi_arvalid,
    s_axi_awaddr,
    s_axi_awcache,
    s_axi_awid,
    s_axi_awlen,
    s_axi_awlock,
    s_axi_awprot,
    s_axi_awqos,
    s_axi_awready,
    s_axi_awuser,
    s_axi_awvalid,
    s_axi_bid,
    s_axi_bready,
    s_axi_bresp,
    s_axi_buser,
    s_axi_bvalid,
    s_axi_rdata,
    s_axi_rid,
    s_axi_rlast,
    s_axi_rready,
    s_axi_rresp,
    s_axi_ruser,
    s_axi_rvalid,
    s_axi_wdata,
    s_axi_wlast,
    s_axi_wready,
    s_axi_wstrb,
    s_axi_wuser,
    s_axi_wvalid);
  input aclk;
  input aresetn;
  output [4:0]m_axi_araddr;
  output [2:0]m_axi_arprot;
  input m_axi_arready;
  output m_axi_arvalid;
  output [4:0]m_axi_awaddr;
  output [2:0]m_axi_awprot;
  input m_axi_awready;
  output m_axi_awvalid;
  output m_axi_bready;
  input [1:0]m_axi_bresp;
  input m_axi_bvalid;
  input [31:0]m_axi_rdata;
  output m_axi_rready;
  input [1:0]m_axi_rresp;
  input m_axi_rvalid;
  output [31:0]m_axi_wdata;
  input m_axi_wready;
  output [3:0]m_axi_wstrb;
  output m_axi_wvalid;
  input [4:0]s_axi_araddr;
  input [3:0]s_axi_arcache;
  input [2:0]s_axi_arid;
  input [7:0]s_axi_arlen;
  input [0:0]s_axi_arlock;
  input [2:0]s_axi_arprot;
  input [3:0]s_axi_arqos;
  output s_axi_arready;
  input [1023:0]s_axi_aruser;
  input s_axi_arvalid;
  input [4:0]s_axi_awaddr;
  input [3:0]s_axi_awcache;
  input [2:0]s_axi_awid;
  input [7:0]s_axi_awlen;
  input [0:0]s_axi_awlock;
  input [2:0]s_axi_awprot;
  input [3:0]s_axi_awqos;
  output s_axi_awready;
  input [1023:0]s_axi_awuser;
  input s_axi_awvalid;
  output [2:0]s_axi_bid;
  input s_axi_bready;
  output [1:0]s_axi_bresp;
  output [1023:0]s_axi_buser;
  output s_axi_bvalid;
  output [31:0]s_axi_rdata;
  output [2:0]s_axi_rid;
  output s_axi_rlast;
  input s_axi_rready;
  output [1:0]s_axi_rresp;
  output [1023:0]s_axi_ruser;
  output s_axi_rvalid;
  input [31:0]s_axi_wdata;
  input s_axi_wlast;
  output s_axi_wready;
  input [3:0]s_axi_wstrb;
  input [1023:0]s_axi_wuser;
  input s_axi_wvalid;

  wire aclk_1;
  wire aresetn_1;
  wire [4:0]m13_exit_M_AXI_ARADDR;
  wire [2:0]m13_exit_M_AXI_ARPROT;
  wire m13_exit_M_AXI_ARREADY;
  wire m13_exit_M_AXI_ARVALID;
  wire [4:0]m13_exit_M_AXI_AWADDR;
  wire [2:0]m13_exit_M_AXI_AWPROT;
  wire m13_exit_M_AXI_AWREADY;
  wire m13_exit_M_AXI_AWVALID;
  wire m13_exit_M_AXI_BREADY;
  wire [1:0]m13_exit_M_AXI_BRESP;
  wire m13_exit_M_AXI_BVALID;
  wire [31:0]m13_exit_M_AXI_RDATA;
  wire m13_exit_M_AXI_RREADY;
  wire [1:0]m13_exit_M_AXI_RRESP;
  wire m13_exit_M_AXI_RVALID;
  wire [31:0]m13_exit_M_AXI_WDATA;
  wire m13_exit_M_AXI_WREADY;
  wire [3:0]m13_exit_M_AXI_WSTRB;
  wire m13_exit_M_AXI_WVALID;
  wire [4:0]s_axi_1_ARADDR;
  wire [3:0]s_axi_1_ARCACHE;
  wire [2:0]s_axi_1_ARID;
  wire [7:0]s_axi_1_ARLEN;
  wire [0:0]s_axi_1_ARLOCK;
  wire [2:0]s_axi_1_ARPROT;
  wire [3:0]s_axi_1_ARQOS;
  wire s_axi_1_ARREADY;
  wire [1023:0]s_axi_1_ARUSER;
  wire s_axi_1_ARVALID;
  wire [4:0]s_axi_1_AWADDR;
  wire [3:0]s_axi_1_AWCACHE;
  wire [2:0]s_axi_1_AWID;
  wire [7:0]s_axi_1_AWLEN;
  wire [0:0]s_axi_1_AWLOCK;
  wire [2:0]s_axi_1_AWPROT;
  wire [3:0]s_axi_1_AWQOS;
  wire s_axi_1_AWREADY;
  wire [1023:0]s_axi_1_AWUSER;
  wire s_axi_1_AWVALID;
  wire [2:0]s_axi_1_BID;
  wire s_axi_1_BREADY;
  wire [1:0]s_axi_1_BRESP;
  wire [1023:0]s_axi_1_BUSER;
  wire s_axi_1_BVALID;
  wire [31:0]s_axi_1_RDATA;
  wire [2:0]s_axi_1_RID;
  wire s_axi_1_RLAST;
  wire s_axi_1_RREADY;
  wire [1:0]s_axi_1_RRESP;
  wire [1023:0]s_axi_1_RUSER;
  wire s_axi_1_RVALID;
  wire [31:0]s_axi_1_WDATA;
  wire s_axi_1_WLAST;
  wire s_axi_1_WREADY;
  wire [3:0]s_axi_1_WSTRB;
  wire [1023:0]s_axi_1_WUSER;
  wire s_axi_1_WVALID;

  assign aclk_1 = aclk;
  assign aresetn_1 = aresetn;
  assign m13_exit_M_AXI_ARREADY = m_axi_arready;
  assign m13_exit_M_AXI_AWREADY = m_axi_awready;
  assign m13_exit_M_AXI_BRESP = m_axi_bresp[1:0];
  assign m13_exit_M_AXI_BVALID = m_axi_bvalid;
  assign m13_exit_M_AXI_RDATA = m_axi_rdata[31:0];
  assign m13_exit_M_AXI_RRESP = m_axi_rresp[1:0];
  assign m13_exit_M_AXI_RVALID = m_axi_rvalid;
  assign m13_exit_M_AXI_WREADY = m_axi_wready;
  assign m_axi_araddr[4:0] = m13_exit_M_AXI_ARADDR;
  assign m_axi_arprot[2:0] = m13_exit_M_AXI_ARPROT;
  assign m_axi_arvalid = m13_exit_M_AXI_ARVALID;
  assign m_axi_awaddr[4:0] = m13_exit_M_AXI_AWADDR;
  assign m_axi_awprot[2:0] = m13_exit_M_AXI_AWPROT;
  assign m_axi_awvalid = m13_exit_M_AXI_AWVALID;
  assign m_axi_bready = m13_exit_M_AXI_BREADY;
  assign m_axi_rready = m13_exit_M_AXI_RREADY;
  assign m_axi_wdata[31:0] = m13_exit_M_AXI_WDATA;
  assign m_axi_wstrb[3:0] = m13_exit_M_AXI_WSTRB;
  assign m_axi_wvalid = m13_exit_M_AXI_WVALID;
  assign s_axi_1_ARADDR = s_axi_araddr[4:0];
  assign s_axi_1_ARCACHE = s_axi_arcache[3:0];
  assign s_axi_1_ARID = s_axi_arid[2:0];
  assign s_axi_1_ARLEN = s_axi_arlen[7:0];
  assign s_axi_1_ARLOCK = s_axi_arlock[0];
  assign s_axi_1_ARPROT = s_axi_arprot[2:0];
  assign s_axi_1_ARQOS = s_axi_arqos[3:0];
  assign s_axi_1_ARUSER = s_axi_aruser[1023:0];
  assign s_axi_1_ARVALID = s_axi_arvalid;
  assign s_axi_1_AWADDR = s_axi_awaddr[4:0];
  assign s_axi_1_AWCACHE = s_axi_awcache[3:0];
  assign s_axi_1_AWID = s_axi_awid[2:0];
  assign s_axi_1_AWLEN = s_axi_awlen[7:0];
  assign s_axi_1_AWLOCK = s_axi_awlock[0];
  assign s_axi_1_AWPROT = s_axi_awprot[2:0];
  assign s_axi_1_AWQOS = s_axi_awqos[3:0];
  assign s_axi_1_AWUSER = s_axi_awuser[1023:0];
  assign s_axi_1_AWVALID = s_axi_awvalid;
  assign s_axi_1_BREADY = s_axi_bready;
  assign s_axi_1_RREADY = s_axi_rready;
  assign s_axi_1_WDATA = s_axi_wdata[31:0];
  assign s_axi_1_WLAST = s_axi_wlast;
  assign s_axi_1_WSTRB = s_axi_wstrb[3:0];
  assign s_axi_1_WUSER = s_axi_wuser[1023:0];
  assign s_axi_1_WVALID = s_axi_wvalid;
  assign s_axi_arready = s_axi_1_ARREADY;
  assign s_axi_awready = s_axi_1_AWREADY;
  assign s_axi_bid[2:0] = s_axi_1_BID;
  assign s_axi_bresp[1:0] = s_axi_1_BRESP;
  assign s_axi_buser[1023:0] = s_axi_1_BUSER;
  assign s_axi_bvalid = s_axi_1_BVALID;
  assign s_axi_rdata[31:0] = s_axi_1_RDATA;
  assign s_axi_rid[2:0] = s_axi_1_RID;
  assign s_axi_rlast = s_axi_1_RLAST;
  assign s_axi_rresp[1:0] = s_axi_1_RRESP;
  assign s_axi_ruser[1023:0] = s_axi_1_RUSER;
  assign s_axi_rvalid = s_axi_1_RVALID;
  assign s_axi_wready = s_axi_1_WREADY;
  bd_afc3_m13e_0 m13_exit
       (.aclk(aclk_1),
        .aresetn(aresetn_1),
        .m_axi_araddr(m13_exit_M_AXI_ARADDR),
        .m_axi_arprot(m13_exit_M_AXI_ARPROT),
        .m_axi_arready(m13_exit_M_AXI_ARREADY),
        .m_axi_arvalid(m13_exit_M_AXI_ARVALID),
        .m_axi_awaddr(m13_exit_M_AXI_AWADDR),
        .m_axi_awprot(m13_exit_M_AXI_AWPROT),
        .m_axi_awready(m13_exit_M_AXI_AWREADY),
        .m_axi_awvalid(m13_exit_M_AXI_AWVALID),
        .m_axi_bready(m13_exit_M_AXI_BREADY),
        .m_axi_bresp(m13_exit_M_AXI_BRESP),
        .m_axi_bvalid(m13_exit_M_AXI_BVALID),
        .m_axi_rdata(m13_exit_M_AXI_RDATA),
        .m_axi_rready(m13_exit_M_AXI_RREADY),
        .m_axi_rresp(m13_exit_M_AXI_RRESP),
        .m_axi_rvalid(m13_exit_M_AXI_RVALID),
        .m_axi_wdata(m13_exit_M_AXI_WDATA),
        .m_axi_wready(m13_exit_M_AXI_WREADY),
        .m_axi_wstrb(m13_exit_M_AXI_WSTRB),
        .m_axi_wvalid(m13_exit_M_AXI_WVALID),
        .s_axi_araddr(s_axi_1_ARADDR),
        .s_axi_arcache(s_axi_1_ARCACHE),
        .s_axi_arid(s_axi_1_ARID),
        .s_axi_arlen(s_axi_1_ARLEN),
        .s_axi_arlock(s_axi_1_ARLOCK),
        .s_axi_arprot(s_axi_1_ARPROT),
        .s_axi_arqos(s_axi_1_ARQOS),
        .s_axi_arready(s_axi_1_ARREADY),
        .s_axi_aruser(s_axi_1_ARUSER),
        .s_axi_arvalid(s_axi_1_ARVALID),
        .s_axi_awaddr(s_axi_1_AWADDR),
        .s_axi_awcache(s_axi_1_AWCACHE),
        .s_axi_awid(s_axi_1_AWID),
        .s_axi_awlen(s_axi_1_AWLEN),
        .s_axi_awlock(s_axi_1_AWLOCK),
        .s_axi_awprot(s_axi_1_AWPROT),
        .s_axi_awqos(s_axi_1_AWQOS),
        .s_axi_awready(s_axi_1_AWREADY),
        .s_axi_awuser(s_axi_1_AWUSER),
        .s_axi_awvalid(s_axi_1_AWVALID),
        .s_axi_bid(s_axi_1_BID),
        .s_axi_bready(s_axi_1_BREADY),
        .s_axi_bresp(s_axi_1_BRESP),
        .s_axi_buser(s_axi_1_BUSER),
        .s_axi_bvalid(s_axi_1_BVALID),
        .s_axi_rdata(s_axi_1_RDATA),
        .s_axi_rid(s_axi_1_RID),
        .s_axi_rlast(s_axi_1_RLAST),
        .s_axi_rready(s_axi_1_RREADY),
        .s_axi_rresp(s_axi_1_RRESP),
        .s_axi_ruser(s_axi_1_RUSER),
        .s_axi_rvalid(s_axi_1_RVALID),
        .s_axi_wdata(s_axi_1_WDATA),
        .s_axi_wlast(s_axi_1_WLAST),
        .s_axi_wready(s_axi_1_WREADY),
        .s_axi_wstrb(s_axi_1_WSTRB),
        .s_axi_wuser(s_axi_1_WUSER),
        .s_axi_wvalid(s_axi_1_WVALID));
endmodule

module m13_nodes_imp_XF60JC
   (M_SC_AR_info,
    M_SC_AR_payld,
    M_SC_AR_recv,
    M_SC_AR_req,
    M_SC_AR_send,
    M_SC_AW_info,
    M_SC_AW_payld,
    M_SC_AW_recv,
    M_SC_AW_req,
    M_SC_AW_send,
    M_SC_B_info,
    M_SC_B_payld,
    M_SC_B_recv,
    M_SC_B_req,
    M_SC_B_send,
    M_SC_R_info,
    M_SC_R_payld,
    M_SC_R_recv,
    M_SC_R_req,
    M_SC_R_send,
    M_SC_W_info,
    M_SC_W_payld,
    M_SC_W_recv,
    M_SC_W_req,
    M_SC_W_send,
    S_SC_AR_info,
    S_SC_AR_payld,
    S_SC_AR_recv,
    S_SC_AR_req,
    S_SC_AR_send,
    S_SC_AW_info,
    S_SC_AW_payld,
    S_SC_AW_recv,
    S_SC_AW_req,
    S_SC_AW_send,
    S_SC_B_info,
    S_SC_B_payld,
    S_SC_B_recv,
    S_SC_B_req,
    S_SC_B_send,
    S_SC_R_info,
    S_SC_R_payld,
    S_SC_R_recv,
    S_SC_R_req,
    S_SC_R_send,
    S_SC_W_info,
    S_SC_W_payld,
    S_SC_W_recv,
    S_SC_W_req,
    S_SC_W_send,
    m_axi_aclk,
    m_axi_aresetn,
    s_axi_aclk,
    s_axi_aresetn);
  output [0:0]M_SC_AR_info;
  output [181:0]M_SC_AR_payld;
  input [0:0]M_SC_AR_recv;
  output [0:0]M_SC_AR_req;
  output [0:0]M_SC_AR_send;
  output [0:0]M_SC_AW_info;
  output [181:0]M_SC_AW_payld;
  input [0:0]M_SC_AW_recv;
  output [0:0]M_SC_AW_req;
  output [0:0]M_SC_AW_send;
  output [0:0]M_SC_B_info;
  output [8:0]M_SC_B_payld;
  input [0:0]M_SC_B_recv;
  output [0:0]M_SC_B_req;
  output [0:0]M_SC_B_send;
  output [0:0]M_SC_R_info;
  output [54:0]M_SC_R_payld;
  input [0:0]M_SC_R_recv;
  output [0:0]M_SC_R_req;
  output [0:0]M_SC_R_send;
  output [0:0]M_SC_W_info;
  output [68:0]M_SC_W_payld;
  input [0:0]M_SC_W_recv;
  output [0:0]M_SC_W_req;
  output [0:0]M_SC_W_send;
  input [0:0]S_SC_AR_info;
  input [181:0]S_SC_AR_payld;
  output [0:0]S_SC_AR_recv;
  input [0:0]S_SC_AR_req;
  input [0:0]S_SC_AR_send;
  input [0:0]S_SC_AW_info;
  input [181:0]S_SC_AW_payld;
  output [0:0]S_SC_AW_recv;
  input [0:0]S_SC_AW_req;
  input [0:0]S_SC_AW_send;
  input [0:0]S_SC_B_info;
  input [8:0]S_SC_B_payld;
  output [0:0]S_SC_B_recv;
  input [0:0]S_SC_B_req;
  input [0:0]S_SC_B_send;
  input [0:0]S_SC_R_info;
  input [54:0]S_SC_R_payld;
  output [0:0]S_SC_R_recv;
  input [0:0]S_SC_R_req;
  input [0:0]S_SC_R_send;
  input [0:0]S_SC_W_info;
  input [68:0]S_SC_W_payld;
  output [0:0]S_SC_W_recv;
  input [0:0]S_SC_W_req;
  input [0:0]S_SC_W_send;
  input m_axi_aclk;
  input m_axi_aresetn;
  input s_axi_aclk;
  input s_axi_aresetn;

  wire [0:0]S_SC_AR_1_INFO;
  wire [181:0]S_SC_AR_1_PAYLD;
  wire [0:0]S_SC_AR_1_RECV;
  wire [0:0]S_SC_AR_1_REQ;
  wire [0:0]S_SC_AR_1_SEND;
  wire [0:0]S_SC_AW_1_INFO;
  wire [181:0]S_SC_AW_1_PAYLD;
  wire [0:0]S_SC_AW_1_RECV;
  wire [0:0]S_SC_AW_1_REQ;
  wire [0:0]S_SC_AW_1_SEND;
  wire [0:0]S_SC_B_1_INFO;
  wire [8:0]S_SC_B_1_PAYLD;
  wire [0:0]S_SC_B_1_RECV;
  wire [0:0]S_SC_B_1_REQ;
  wire [0:0]S_SC_B_1_SEND;
  wire [0:0]S_SC_R_1_INFO;
  wire [54:0]S_SC_R_1_PAYLD;
  wire [0:0]S_SC_R_1_RECV;
  wire [0:0]S_SC_R_1_REQ;
  wire [0:0]S_SC_R_1_SEND;
  wire [0:0]S_SC_W_1_INFO;
  wire [68:0]S_SC_W_1_PAYLD;
  wire [0:0]S_SC_W_1_RECV;
  wire [0:0]S_SC_W_1_REQ;
  wire [0:0]S_SC_W_1_SEND;
  wire [0:0]m13_ar_node_M_SC_INFO;
  wire [181:0]m13_ar_node_M_SC_PAYLD;
  wire [0:0]m13_ar_node_M_SC_RECV;
  wire [0:0]m13_ar_node_M_SC_REQ;
  wire [0:0]m13_ar_node_M_SC_SEND;
  wire [0:0]m13_aw_node_M_SC_INFO;
  wire [181:0]m13_aw_node_M_SC_PAYLD;
  wire [0:0]m13_aw_node_M_SC_RECV;
  wire [0:0]m13_aw_node_M_SC_REQ;
  wire [0:0]m13_aw_node_M_SC_SEND;
  wire [0:0]m13_b_node_M_SC_INFO;
  wire [8:0]m13_b_node_M_SC_PAYLD;
  wire [0:0]m13_b_node_M_SC_RECV;
  wire [0:0]m13_b_node_M_SC_REQ;
  wire [0:0]m13_b_node_M_SC_SEND;
  wire [0:0]m13_r_node_M_SC_INFO;
  wire [54:0]m13_r_node_M_SC_PAYLD;
  wire [0:0]m13_r_node_M_SC_RECV;
  wire [0:0]m13_r_node_M_SC_REQ;
  wire [0:0]m13_r_node_M_SC_SEND;
  wire [0:0]m13_w_node_M_SC_INFO;
  wire [68:0]m13_w_node_M_SC_PAYLD;
  wire [0:0]m13_w_node_M_SC_RECV;
  wire [0:0]m13_w_node_M_SC_REQ;
  wire [0:0]m13_w_node_M_SC_SEND;
  wire m_axi_aclk_1;
  wire m_axi_aresetn_1;
  wire s_axi_aclk_1;
  wire s_axi_aresetn_1;

  assign M_SC_AR_info[0] = m13_ar_node_M_SC_INFO;
  assign M_SC_AR_payld[181:0] = m13_ar_node_M_SC_PAYLD;
  assign M_SC_AR_req[0] = m13_ar_node_M_SC_REQ;
  assign M_SC_AR_send[0] = m13_ar_node_M_SC_SEND;
  assign M_SC_AW_info[0] = m13_aw_node_M_SC_INFO;
  assign M_SC_AW_payld[181:0] = m13_aw_node_M_SC_PAYLD;
  assign M_SC_AW_req[0] = m13_aw_node_M_SC_REQ;
  assign M_SC_AW_send[0] = m13_aw_node_M_SC_SEND;
  assign M_SC_B_info[0] = m13_b_node_M_SC_INFO;
  assign M_SC_B_payld[8:0] = m13_b_node_M_SC_PAYLD;
  assign M_SC_B_req[0] = m13_b_node_M_SC_REQ;
  assign M_SC_B_send[0] = m13_b_node_M_SC_SEND;
  assign M_SC_R_info[0] = m13_r_node_M_SC_INFO;
  assign M_SC_R_payld[54:0] = m13_r_node_M_SC_PAYLD;
  assign M_SC_R_req[0] = m13_r_node_M_SC_REQ;
  assign M_SC_R_send[0] = m13_r_node_M_SC_SEND;
  assign M_SC_W_info[0] = m13_w_node_M_SC_INFO;
  assign M_SC_W_payld[68:0] = m13_w_node_M_SC_PAYLD;
  assign M_SC_W_req[0] = m13_w_node_M_SC_REQ;
  assign M_SC_W_send[0] = m13_w_node_M_SC_SEND;
  assign S_SC_AR_1_INFO = S_SC_AR_info[0];
  assign S_SC_AR_1_PAYLD = S_SC_AR_payld[181:0];
  assign S_SC_AR_1_REQ = S_SC_AR_req[0];
  assign S_SC_AR_1_SEND = S_SC_AR_send[0];
  assign S_SC_AR_recv[0] = S_SC_AR_1_RECV;
  assign S_SC_AW_1_INFO = S_SC_AW_info[0];
  assign S_SC_AW_1_PAYLD = S_SC_AW_payld[181:0];
  assign S_SC_AW_1_REQ = S_SC_AW_req[0];
  assign S_SC_AW_1_SEND = S_SC_AW_send[0];
  assign S_SC_AW_recv[0] = S_SC_AW_1_RECV;
  assign S_SC_B_1_INFO = S_SC_B_info[0];
  assign S_SC_B_1_PAYLD = S_SC_B_payld[8:0];
  assign S_SC_B_1_REQ = S_SC_B_req[0];
  assign S_SC_B_1_SEND = S_SC_B_send[0];
  assign S_SC_B_recv[0] = S_SC_B_1_RECV;
  assign S_SC_R_1_INFO = S_SC_R_info[0];
  assign S_SC_R_1_PAYLD = S_SC_R_payld[54:0];
  assign S_SC_R_1_REQ = S_SC_R_req[0];
  assign S_SC_R_1_SEND = S_SC_R_send[0];
  assign S_SC_R_recv[0] = S_SC_R_1_RECV;
  assign S_SC_W_1_INFO = S_SC_W_info[0];
  assign S_SC_W_1_PAYLD = S_SC_W_payld[68:0];
  assign S_SC_W_1_REQ = S_SC_W_req[0];
  assign S_SC_W_1_SEND = S_SC_W_send[0];
  assign S_SC_W_recv[0] = S_SC_W_1_RECV;
  assign m13_ar_node_M_SC_RECV = M_SC_AR_recv[0];
  assign m13_aw_node_M_SC_RECV = M_SC_AW_recv[0];
  assign m13_b_node_M_SC_RECV = M_SC_B_recv[0];
  assign m13_r_node_M_SC_RECV = M_SC_R_recv[0];
  assign m13_w_node_M_SC_RECV = M_SC_W_recv[0];
  assign m_axi_aclk_1 = m_axi_aclk;
  assign m_axi_aresetn_1 = m_axi_aresetn;
  assign s_axi_aclk_1 = s_axi_aclk;
  assign s_axi_aresetn_1 = s_axi_aresetn;
  bd_afc3_m13arn_0 m13_ar_node
       (.m_sc_aclk(m_axi_aclk_1),
        .m_sc_aresetn(m_axi_aresetn_1),
        .m_sc_info(m13_ar_node_M_SC_INFO),
        .m_sc_payld(m13_ar_node_M_SC_PAYLD),
        .m_sc_recv(m13_ar_node_M_SC_RECV),
        .m_sc_req(m13_ar_node_M_SC_REQ),
        .m_sc_send(m13_ar_node_M_SC_SEND),
        .s_sc_aclk(s_axi_aclk_1),
        .s_sc_aresetn(s_axi_aresetn_1),
        .s_sc_info(S_SC_AR_1_INFO),
        .s_sc_payld(S_SC_AR_1_PAYLD),
        .s_sc_recv(S_SC_AR_1_RECV),
        .s_sc_req(S_SC_AR_1_REQ),
        .s_sc_send(S_SC_AR_1_SEND));
  bd_afc3_m13awn_0 m13_aw_node
       (.m_sc_aclk(m_axi_aclk_1),
        .m_sc_aresetn(m_axi_aresetn_1),
        .m_sc_info(m13_aw_node_M_SC_INFO),
        .m_sc_payld(m13_aw_node_M_SC_PAYLD),
        .m_sc_recv(m13_aw_node_M_SC_RECV),
        .m_sc_req(m13_aw_node_M_SC_REQ),
        .m_sc_send(m13_aw_node_M_SC_SEND),
        .s_sc_aclk(s_axi_aclk_1),
        .s_sc_aresetn(s_axi_aresetn_1),
        .s_sc_info(S_SC_AW_1_INFO),
        .s_sc_payld(S_SC_AW_1_PAYLD),
        .s_sc_recv(S_SC_AW_1_RECV),
        .s_sc_req(S_SC_AW_1_REQ),
        .s_sc_send(S_SC_AW_1_SEND));
  bd_afc3_m13bn_0 m13_b_node
       (.m_sc_aclk(s_axi_aclk_1),
        .m_sc_aresetn(s_axi_aresetn_1),
        .m_sc_info(m13_b_node_M_SC_INFO),
        .m_sc_payld(m13_b_node_M_SC_PAYLD),
        .m_sc_recv(m13_b_node_M_SC_RECV),
        .m_sc_req(m13_b_node_M_SC_REQ),
        .m_sc_send(m13_b_node_M_SC_SEND),
        .s_sc_aclk(m_axi_aclk_1),
        .s_sc_aresetn(m_axi_aresetn_1),
        .s_sc_info(S_SC_B_1_INFO),
        .s_sc_payld(S_SC_B_1_PAYLD),
        .s_sc_recv(S_SC_B_1_RECV),
        .s_sc_req(S_SC_B_1_REQ),
        .s_sc_send(S_SC_B_1_SEND));
  bd_afc3_m13rn_0 m13_r_node
       (.m_sc_aclk(s_axi_aclk_1),
        .m_sc_aresetn(s_axi_aresetn_1),
        .m_sc_info(m13_r_node_M_SC_INFO),
        .m_sc_payld(m13_r_node_M_SC_PAYLD),
        .m_sc_recv(m13_r_node_M_SC_RECV),
        .m_sc_req(m13_r_node_M_SC_REQ),
        .m_sc_send(m13_r_node_M_SC_SEND),
        .s_sc_aclk(m_axi_aclk_1),
        .s_sc_aresetn(m_axi_aresetn_1),
        .s_sc_info(S_SC_R_1_INFO),
        .s_sc_payld(S_SC_R_1_PAYLD),
        .s_sc_recv(S_SC_R_1_RECV),
        .s_sc_req(S_SC_R_1_REQ),
        .s_sc_send(S_SC_R_1_SEND));
  bd_afc3_m13wn_0 m13_w_node
       (.m_sc_aclk(m_axi_aclk_1),
        .m_sc_aresetn(m_axi_aresetn_1),
        .m_sc_info(m13_w_node_M_SC_INFO),
        .m_sc_payld(m13_w_node_M_SC_PAYLD),
        .m_sc_recv(m13_w_node_M_SC_RECV),
        .m_sc_req(m13_w_node_M_SC_REQ),
        .m_sc_send(m13_w_node_M_SC_SEND),
        .s_sc_aclk(s_axi_aclk_1),
        .s_sc_aresetn(s_axi_aresetn_1),
        .s_sc_info(S_SC_W_1_INFO),
        .s_sc_payld(S_SC_W_1_PAYLD),
        .s_sc_recv(S_SC_W_1_RECV),
        .s_sc_req(S_SC_W_1_REQ),
        .s_sc_send(S_SC_W_1_SEND));
endmodule

module m14_exit_pipeline_imp_BO2XGZ
   (aclk,
    aresetn,
    m_axi_araddr,
    m_axi_arprot,
    m_axi_arready,
    m_axi_arvalid,
    m_axi_awaddr,
    m_axi_awprot,
    m_axi_awready,
    m_axi_awvalid,
    m_axi_bready,
    m_axi_bresp,
    m_axi_bvalid,
    m_axi_rdata,
    m_axi_rready,
    m_axi_rresp,
    m_axi_rvalid,
    m_axi_wdata,
    m_axi_wready,
    m_axi_wstrb,
    m_axi_wvalid,
    s_axi_araddr,
    s_axi_arcache,
    s_axi_arid,
    s_axi_arlen,
    s_axi_arlock,
    s_axi_arprot,
    s_axi_arqos,
    s_axi_arready,
    s_axi_aruser,
    s_axi_arvalid,
    s_axi_awaddr,
    s_axi_awcache,
    s_axi_awid,
    s_axi_awlen,
    s_axi_awlock,
    s_axi_awprot,
    s_axi_awqos,
    s_axi_awready,
    s_axi_awuser,
    s_axi_awvalid,
    s_axi_bid,
    s_axi_bready,
    s_axi_bresp,
    s_axi_buser,
    s_axi_bvalid,
    s_axi_rdata,
    s_axi_rid,
    s_axi_rlast,
    s_axi_rready,
    s_axi_rresp,
    s_axi_ruser,
    s_axi_rvalid,
    s_axi_wdata,
    s_axi_wlast,
    s_axi_wready,
    s_axi_wstrb,
    s_axi_wuser,
    s_axi_wvalid);
  input aclk;
  input aresetn;
  output [4:0]m_axi_araddr;
  output [2:0]m_axi_arprot;
  input m_axi_arready;
  output m_axi_arvalid;
  output [4:0]m_axi_awaddr;
  output [2:0]m_axi_awprot;
  input m_axi_awready;
  output m_axi_awvalid;
  output m_axi_bready;
  input [1:0]m_axi_bresp;
  input m_axi_bvalid;
  input [31:0]m_axi_rdata;
  output m_axi_rready;
  input [1:0]m_axi_rresp;
  input m_axi_rvalid;
  output [31:0]m_axi_wdata;
  input m_axi_wready;
  output [3:0]m_axi_wstrb;
  output m_axi_wvalid;
  input [4:0]s_axi_araddr;
  input [3:0]s_axi_arcache;
  input [2:0]s_axi_arid;
  input [7:0]s_axi_arlen;
  input [0:0]s_axi_arlock;
  input [2:0]s_axi_arprot;
  input [3:0]s_axi_arqos;
  output s_axi_arready;
  input [1023:0]s_axi_aruser;
  input s_axi_arvalid;
  input [4:0]s_axi_awaddr;
  input [3:0]s_axi_awcache;
  input [2:0]s_axi_awid;
  input [7:0]s_axi_awlen;
  input [0:0]s_axi_awlock;
  input [2:0]s_axi_awprot;
  input [3:0]s_axi_awqos;
  output s_axi_awready;
  input [1023:0]s_axi_awuser;
  input s_axi_awvalid;
  output [2:0]s_axi_bid;
  input s_axi_bready;
  output [1:0]s_axi_bresp;
  output [1023:0]s_axi_buser;
  output s_axi_bvalid;
  output [31:0]s_axi_rdata;
  output [2:0]s_axi_rid;
  output s_axi_rlast;
  input s_axi_rready;
  output [1:0]s_axi_rresp;
  output [1023:0]s_axi_ruser;
  output s_axi_rvalid;
  input [31:0]s_axi_wdata;
  input s_axi_wlast;
  output s_axi_wready;
  input [3:0]s_axi_wstrb;
  input [1023:0]s_axi_wuser;
  input s_axi_wvalid;

  wire aclk_1;
  wire aresetn_1;
  wire [4:0]m14_exit_M_AXI_ARADDR;
  wire [2:0]m14_exit_M_AXI_ARPROT;
  wire m14_exit_M_AXI_ARREADY;
  wire m14_exit_M_AXI_ARVALID;
  wire [4:0]m14_exit_M_AXI_AWADDR;
  wire [2:0]m14_exit_M_AXI_AWPROT;
  wire m14_exit_M_AXI_AWREADY;
  wire m14_exit_M_AXI_AWVALID;
  wire m14_exit_M_AXI_BREADY;
  wire [1:0]m14_exit_M_AXI_BRESP;
  wire m14_exit_M_AXI_BVALID;
  wire [31:0]m14_exit_M_AXI_RDATA;
  wire m14_exit_M_AXI_RREADY;
  wire [1:0]m14_exit_M_AXI_RRESP;
  wire m14_exit_M_AXI_RVALID;
  wire [31:0]m14_exit_M_AXI_WDATA;
  wire m14_exit_M_AXI_WREADY;
  wire [3:0]m14_exit_M_AXI_WSTRB;
  wire m14_exit_M_AXI_WVALID;
  wire [4:0]s_axi_1_ARADDR;
  wire [3:0]s_axi_1_ARCACHE;
  wire [2:0]s_axi_1_ARID;
  wire [7:0]s_axi_1_ARLEN;
  wire [0:0]s_axi_1_ARLOCK;
  wire [2:0]s_axi_1_ARPROT;
  wire [3:0]s_axi_1_ARQOS;
  wire s_axi_1_ARREADY;
  wire [1023:0]s_axi_1_ARUSER;
  wire s_axi_1_ARVALID;
  wire [4:0]s_axi_1_AWADDR;
  wire [3:0]s_axi_1_AWCACHE;
  wire [2:0]s_axi_1_AWID;
  wire [7:0]s_axi_1_AWLEN;
  wire [0:0]s_axi_1_AWLOCK;
  wire [2:0]s_axi_1_AWPROT;
  wire [3:0]s_axi_1_AWQOS;
  wire s_axi_1_AWREADY;
  wire [1023:0]s_axi_1_AWUSER;
  wire s_axi_1_AWVALID;
  wire [2:0]s_axi_1_BID;
  wire s_axi_1_BREADY;
  wire [1:0]s_axi_1_BRESP;
  wire [1023:0]s_axi_1_BUSER;
  wire s_axi_1_BVALID;
  wire [31:0]s_axi_1_RDATA;
  wire [2:0]s_axi_1_RID;
  wire s_axi_1_RLAST;
  wire s_axi_1_RREADY;
  wire [1:0]s_axi_1_RRESP;
  wire [1023:0]s_axi_1_RUSER;
  wire s_axi_1_RVALID;
  wire [31:0]s_axi_1_WDATA;
  wire s_axi_1_WLAST;
  wire s_axi_1_WREADY;
  wire [3:0]s_axi_1_WSTRB;
  wire [1023:0]s_axi_1_WUSER;
  wire s_axi_1_WVALID;

  assign aclk_1 = aclk;
  assign aresetn_1 = aresetn;
  assign m14_exit_M_AXI_ARREADY = m_axi_arready;
  assign m14_exit_M_AXI_AWREADY = m_axi_awready;
  assign m14_exit_M_AXI_BRESP = m_axi_bresp[1:0];
  assign m14_exit_M_AXI_BVALID = m_axi_bvalid;
  assign m14_exit_M_AXI_RDATA = m_axi_rdata[31:0];
  assign m14_exit_M_AXI_RRESP = m_axi_rresp[1:0];
  assign m14_exit_M_AXI_RVALID = m_axi_rvalid;
  assign m14_exit_M_AXI_WREADY = m_axi_wready;
  assign m_axi_araddr[4:0] = m14_exit_M_AXI_ARADDR;
  assign m_axi_arprot[2:0] = m14_exit_M_AXI_ARPROT;
  assign m_axi_arvalid = m14_exit_M_AXI_ARVALID;
  assign m_axi_awaddr[4:0] = m14_exit_M_AXI_AWADDR;
  assign m_axi_awprot[2:0] = m14_exit_M_AXI_AWPROT;
  assign m_axi_awvalid = m14_exit_M_AXI_AWVALID;
  assign m_axi_bready = m14_exit_M_AXI_BREADY;
  assign m_axi_rready = m14_exit_M_AXI_RREADY;
  assign m_axi_wdata[31:0] = m14_exit_M_AXI_WDATA;
  assign m_axi_wstrb[3:0] = m14_exit_M_AXI_WSTRB;
  assign m_axi_wvalid = m14_exit_M_AXI_WVALID;
  assign s_axi_1_ARADDR = s_axi_araddr[4:0];
  assign s_axi_1_ARCACHE = s_axi_arcache[3:0];
  assign s_axi_1_ARID = s_axi_arid[2:0];
  assign s_axi_1_ARLEN = s_axi_arlen[7:0];
  assign s_axi_1_ARLOCK = s_axi_arlock[0];
  assign s_axi_1_ARPROT = s_axi_arprot[2:0];
  assign s_axi_1_ARQOS = s_axi_arqos[3:0];
  assign s_axi_1_ARUSER = s_axi_aruser[1023:0];
  assign s_axi_1_ARVALID = s_axi_arvalid;
  assign s_axi_1_AWADDR = s_axi_awaddr[4:0];
  assign s_axi_1_AWCACHE = s_axi_awcache[3:0];
  assign s_axi_1_AWID = s_axi_awid[2:0];
  assign s_axi_1_AWLEN = s_axi_awlen[7:0];
  assign s_axi_1_AWLOCK = s_axi_awlock[0];
  assign s_axi_1_AWPROT = s_axi_awprot[2:0];
  assign s_axi_1_AWQOS = s_axi_awqos[3:0];
  assign s_axi_1_AWUSER = s_axi_awuser[1023:0];
  assign s_axi_1_AWVALID = s_axi_awvalid;
  assign s_axi_1_BREADY = s_axi_bready;
  assign s_axi_1_RREADY = s_axi_rready;
  assign s_axi_1_WDATA = s_axi_wdata[31:0];
  assign s_axi_1_WLAST = s_axi_wlast;
  assign s_axi_1_WSTRB = s_axi_wstrb[3:0];
  assign s_axi_1_WUSER = s_axi_wuser[1023:0];
  assign s_axi_1_WVALID = s_axi_wvalid;
  assign s_axi_arready = s_axi_1_ARREADY;
  assign s_axi_awready = s_axi_1_AWREADY;
  assign s_axi_bid[2:0] = s_axi_1_BID;
  assign s_axi_bresp[1:0] = s_axi_1_BRESP;
  assign s_axi_buser[1023:0] = s_axi_1_BUSER;
  assign s_axi_bvalid = s_axi_1_BVALID;
  assign s_axi_rdata[31:0] = s_axi_1_RDATA;
  assign s_axi_rid[2:0] = s_axi_1_RID;
  assign s_axi_rlast = s_axi_1_RLAST;
  assign s_axi_rresp[1:0] = s_axi_1_RRESP;
  assign s_axi_ruser[1023:0] = s_axi_1_RUSER;
  assign s_axi_rvalid = s_axi_1_RVALID;
  assign s_axi_wready = s_axi_1_WREADY;
  bd_afc3_m14e_0 m14_exit
       (.aclk(aclk_1),
        .aresetn(aresetn_1),
        .m_axi_araddr(m14_exit_M_AXI_ARADDR),
        .m_axi_arprot(m14_exit_M_AXI_ARPROT),
        .m_axi_arready(m14_exit_M_AXI_ARREADY),
        .m_axi_arvalid(m14_exit_M_AXI_ARVALID),
        .m_axi_awaddr(m14_exit_M_AXI_AWADDR),
        .m_axi_awprot(m14_exit_M_AXI_AWPROT),
        .m_axi_awready(m14_exit_M_AXI_AWREADY),
        .m_axi_awvalid(m14_exit_M_AXI_AWVALID),
        .m_axi_bready(m14_exit_M_AXI_BREADY),
        .m_axi_bresp(m14_exit_M_AXI_BRESP),
        .m_axi_bvalid(m14_exit_M_AXI_BVALID),
        .m_axi_rdata(m14_exit_M_AXI_RDATA),
        .m_axi_rready(m14_exit_M_AXI_RREADY),
        .m_axi_rresp(m14_exit_M_AXI_RRESP),
        .m_axi_rvalid(m14_exit_M_AXI_RVALID),
        .m_axi_wdata(m14_exit_M_AXI_WDATA),
        .m_axi_wready(m14_exit_M_AXI_WREADY),
        .m_axi_wstrb(m14_exit_M_AXI_WSTRB),
        .m_axi_wvalid(m14_exit_M_AXI_WVALID),
        .s_axi_araddr(s_axi_1_ARADDR),
        .s_axi_arcache(s_axi_1_ARCACHE),
        .s_axi_arid(s_axi_1_ARID),
        .s_axi_arlen(s_axi_1_ARLEN),
        .s_axi_arlock(s_axi_1_ARLOCK),
        .s_axi_arprot(s_axi_1_ARPROT),
        .s_axi_arqos(s_axi_1_ARQOS),
        .s_axi_arready(s_axi_1_ARREADY),
        .s_axi_aruser(s_axi_1_ARUSER),
        .s_axi_arvalid(s_axi_1_ARVALID),
        .s_axi_awaddr(s_axi_1_AWADDR),
        .s_axi_awcache(s_axi_1_AWCACHE),
        .s_axi_awid(s_axi_1_AWID),
        .s_axi_awlen(s_axi_1_AWLEN),
        .s_axi_awlock(s_axi_1_AWLOCK),
        .s_axi_awprot(s_axi_1_AWPROT),
        .s_axi_awqos(s_axi_1_AWQOS),
        .s_axi_awready(s_axi_1_AWREADY),
        .s_axi_awuser(s_axi_1_AWUSER),
        .s_axi_awvalid(s_axi_1_AWVALID),
        .s_axi_bid(s_axi_1_BID),
        .s_axi_bready(s_axi_1_BREADY),
        .s_axi_bresp(s_axi_1_BRESP),
        .s_axi_buser(s_axi_1_BUSER),
        .s_axi_bvalid(s_axi_1_BVALID),
        .s_axi_rdata(s_axi_1_RDATA),
        .s_axi_rid(s_axi_1_RID),
        .s_axi_rlast(s_axi_1_RLAST),
        .s_axi_rready(s_axi_1_RREADY),
        .s_axi_rresp(s_axi_1_RRESP),
        .s_axi_ruser(s_axi_1_RUSER),
        .s_axi_rvalid(s_axi_1_RVALID),
        .s_axi_wdata(s_axi_1_WDATA),
        .s_axi_wlast(s_axi_1_WLAST),
        .s_axi_wready(s_axi_1_WREADY),
        .s_axi_wstrb(s_axi_1_WSTRB),
        .s_axi_wuser(s_axi_1_WUSER),
        .s_axi_wvalid(s_axi_1_WVALID));
endmodule

module m14_nodes_imp_893QIG
   (M_SC_AR_info,
    M_SC_AR_payld,
    M_SC_AR_recv,
    M_SC_AR_req,
    M_SC_AR_send,
    M_SC_AW_info,
    M_SC_AW_payld,
    M_SC_AW_recv,
    M_SC_AW_req,
    M_SC_AW_send,
    M_SC_B_info,
    M_SC_B_payld,
    M_SC_B_recv,
    M_SC_B_req,
    M_SC_B_send,
    M_SC_R_info,
    M_SC_R_payld,
    M_SC_R_recv,
    M_SC_R_req,
    M_SC_R_send,
    M_SC_W_info,
    M_SC_W_payld,
    M_SC_W_recv,
    M_SC_W_req,
    M_SC_W_send,
    S_SC_AR_info,
    S_SC_AR_payld,
    S_SC_AR_recv,
    S_SC_AR_req,
    S_SC_AR_send,
    S_SC_AW_info,
    S_SC_AW_payld,
    S_SC_AW_recv,
    S_SC_AW_req,
    S_SC_AW_send,
    S_SC_B_info,
    S_SC_B_payld,
    S_SC_B_recv,
    S_SC_B_req,
    S_SC_B_send,
    S_SC_R_info,
    S_SC_R_payld,
    S_SC_R_recv,
    S_SC_R_req,
    S_SC_R_send,
    S_SC_W_info,
    S_SC_W_payld,
    S_SC_W_recv,
    S_SC_W_req,
    S_SC_W_send,
    m_axi_aclk,
    m_axi_aresetn,
    s_axi_aclk,
    s_axi_aresetn);
  output [0:0]M_SC_AR_info;
  output [181:0]M_SC_AR_payld;
  input [0:0]M_SC_AR_recv;
  output [0:0]M_SC_AR_req;
  output [0:0]M_SC_AR_send;
  output [0:0]M_SC_AW_info;
  output [181:0]M_SC_AW_payld;
  input [0:0]M_SC_AW_recv;
  output [0:0]M_SC_AW_req;
  output [0:0]M_SC_AW_send;
  output [0:0]M_SC_B_info;
  output [8:0]M_SC_B_payld;
  input [0:0]M_SC_B_recv;
  output [0:0]M_SC_B_req;
  output [0:0]M_SC_B_send;
  output [0:0]M_SC_R_info;
  output [54:0]M_SC_R_payld;
  input [0:0]M_SC_R_recv;
  output [0:0]M_SC_R_req;
  output [0:0]M_SC_R_send;
  output [0:0]M_SC_W_info;
  output [68:0]M_SC_W_payld;
  input [0:0]M_SC_W_recv;
  output [0:0]M_SC_W_req;
  output [0:0]M_SC_W_send;
  input [0:0]S_SC_AR_info;
  input [181:0]S_SC_AR_payld;
  output [0:0]S_SC_AR_recv;
  input [0:0]S_SC_AR_req;
  input [0:0]S_SC_AR_send;
  input [0:0]S_SC_AW_info;
  input [181:0]S_SC_AW_payld;
  output [0:0]S_SC_AW_recv;
  input [0:0]S_SC_AW_req;
  input [0:0]S_SC_AW_send;
  input [0:0]S_SC_B_info;
  input [8:0]S_SC_B_payld;
  output [0:0]S_SC_B_recv;
  input [0:0]S_SC_B_req;
  input [0:0]S_SC_B_send;
  input [0:0]S_SC_R_info;
  input [54:0]S_SC_R_payld;
  output [0:0]S_SC_R_recv;
  input [0:0]S_SC_R_req;
  input [0:0]S_SC_R_send;
  input [0:0]S_SC_W_info;
  input [68:0]S_SC_W_payld;
  output [0:0]S_SC_W_recv;
  input [0:0]S_SC_W_req;
  input [0:0]S_SC_W_send;
  input m_axi_aclk;
  input m_axi_aresetn;
  input s_axi_aclk;
  input s_axi_aresetn;

  wire [0:0]S_SC_AR_1_INFO;
  wire [181:0]S_SC_AR_1_PAYLD;
  wire [0:0]S_SC_AR_1_RECV;
  wire [0:0]S_SC_AR_1_REQ;
  wire [0:0]S_SC_AR_1_SEND;
  wire [0:0]S_SC_AW_1_INFO;
  wire [181:0]S_SC_AW_1_PAYLD;
  wire [0:0]S_SC_AW_1_RECV;
  wire [0:0]S_SC_AW_1_REQ;
  wire [0:0]S_SC_AW_1_SEND;
  wire [0:0]S_SC_B_1_INFO;
  wire [8:0]S_SC_B_1_PAYLD;
  wire [0:0]S_SC_B_1_RECV;
  wire [0:0]S_SC_B_1_REQ;
  wire [0:0]S_SC_B_1_SEND;
  wire [0:0]S_SC_R_1_INFO;
  wire [54:0]S_SC_R_1_PAYLD;
  wire [0:0]S_SC_R_1_RECV;
  wire [0:0]S_SC_R_1_REQ;
  wire [0:0]S_SC_R_1_SEND;
  wire [0:0]S_SC_W_1_INFO;
  wire [68:0]S_SC_W_1_PAYLD;
  wire [0:0]S_SC_W_1_RECV;
  wire [0:0]S_SC_W_1_REQ;
  wire [0:0]S_SC_W_1_SEND;
  wire [0:0]m14_ar_node_M_SC_INFO;
  wire [181:0]m14_ar_node_M_SC_PAYLD;
  wire [0:0]m14_ar_node_M_SC_RECV;
  wire [0:0]m14_ar_node_M_SC_REQ;
  wire [0:0]m14_ar_node_M_SC_SEND;
  wire [0:0]m14_aw_node_M_SC_INFO;
  wire [181:0]m14_aw_node_M_SC_PAYLD;
  wire [0:0]m14_aw_node_M_SC_RECV;
  wire [0:0]m14_aw_node_M_SC_REQ;
  wire [0:0]m14_aw_node_M_SC_SEND;
  wire [0:0]m14_b_node_M_SC_INFO;
  wire [8:0]m14_b_node_M_SC_PAYLD;
  wire [0:0]m14_b_node_M_SC_RECV;
  wire [0:0]m14_b_node_M_SC_REQ;
  wire [0:0]m14_b_node_M_SC_SEND;
  wire [0:0]m14_r_node_M_SC_INFO;
  wire [54:0]m14_r_node_M_SC_PAYLD;
  wire [0:0]m14_r_node_M_SC_RECV;
  wire [0:0]m14_r_node_M_SC_REQ;
  wire [0:0]m14_r_node_M_SC_SEND;
  wire [0:0]m14_w_node_M_SC_INFO;
  wire [68:0]m14_w_node_M_SC_PAYLD;
  wire [0:0]m14_w_node_M_SC_RECV;
  wire [0:0]m14_w_node_M_SC_REQ;
  wire [0:0]m14_w_node_M_SC_SEND;
  wire m_axi_aclk_1;
  wire m_axi_aresetn_1;
  wire s_axi_aclk_1;
  wire s_axi_aresetn_1;

  assign M_SC_AR_info[0] = m14_ar_node_M_SC_INFO;
  assign M_SC_AR_payld[181:0] = m14_ar_node_M_SC_PAYLD;
  assign M_SC_AR_req[0] = m14_ar_node_M_SC_REQ;
  assign M_SC_AR_send[0] = m14_ar_node_M_SC_SEND;
  assign M_SC_AW_info[0] = m14_aw_node_M_SC_INFO;
  assign M_SC_AW_payld[181:0] = m14_aw_node_M_SC_PAYLD;
  assign M_SC_AW_req[0] = m14_aw_node_M_SC_REQ;
  assign M_SC_AW_send[0] = m14_aw_node_M_SC_SEND;
  assign M_SC_B_info[0] = m14_b_node_M_SC_INFO;
  assign M_SC_B_payld[8:0] = m14_b_node_M_SC_PAYLD;
  assign M_SC_B_req[0] = m14_b_node_M_SC_REQ;
  assign M_SC_B_send[0] = m14_b_node_M_SC_SEND;
  assign M_SC_R_info[0] = m14_r_node_M_SC_INFO;
  assign M_SC_R_payld[54:0] = m14_r_node_M_SC_PAYLD;
  assign M_SC_R_req[0] = m14_r_node_M_SC_REQ;
  assign M_SC_R_send[0] = m14_r_node_M_SC_SEND;
  assign M_SC_W_info[0] = m14_w_node_M_SC_INFO;
  assign M_SC_W_payld[68:0] = m14_w_node_M_SC_PAYLD;
  assign M_SC_W_req[0] = m14_w_node_M_SC_REQ;
  assign M_SC_W_send[0] = m14_w_node_M_SC_SEND;
  assign S_SC_AR_1_INFO = S_SC_AR_info[0];
  assign S_SC_AR_1_PAYLD = S_SC_AR_payld[181:0];
  assign S_SC_AR_1_REQ = S_SC_AR_req[0];
  assign S_SC_AR_1_SEND = S_SC_AR_send[0];
  assign S_SC_AR_recv[0] = S_SC_AR_1_RECV;
  assign S_SC_AW_1_INFO = S_SC_AW_info[0];
  assign S_SC_AW_1_PAYLD = S_SC_AW_payld[181:0];
  assign S_SC_AW_1_REQ = S_SC_AW_req[0];
  assign S_SC_AW_1_SEND = S_SC_AW_send[0];
  assign S_SC_AW_recv[0] = S_SC_AW_1_RECV;
  assign S_SC_B_1_INFO = S_SC_B_info[0];
  assign S_SC_B_1_PAYLD = S_SC_B_payld[8:0];
  assign S_SC_B_1_REQ = S_SC_B_req[0];
  assign S_SC_B_1_SEND = S_SC_B_send[0];
  assign S_SC_B_recv[0] = S_SC_B_1_RECV;
  assign S_SC_R_1_INFO = S_SC_R_info[0];
  assign S_SC_R_1_PAYLD = S_SC_R_payld[54:0];
  assign S_SC_R_1_REQ = S_SC_R_req[0];
  assign S_SC_R_1_SEND = S_SC_R_send[0];
  assign S_SC_R_recv[0] = S_SC_R_1_RECV;
  assign S_SC_W_1_INFO = S_SC_W_info[0];
  assign S_SC_W_1_PAYLD = S_SC_W_payld[68:0];
  assign S_SC_W_1_REQ = S_SC_W_req[0];
  assign S_SC_W_1_SEND = S_SC_W_send[0];
  assign S_SC_W_recv[0] = S_SC_W_1_RECV;
  assign m14_ar_node_M_SC_RECV = M_SC_AR_recv[0];
  assign m14_aw_node_M_SC_RECV = M_SC_AW_recv[0];
  assign m14_b_node_M_SC_RECV = M_SC_B_recv[0];
  assign m14_r_node_M_SC_RECV = M_SC_R_recv[0];
  assign m14_w_node_M_SC_RECV = M_SC_W_recv[0];
  assign m_axi_aclk_1 = m_axi_aclk;
  assign m_axi_aresetn_1 = m_axi_aresetn;
  assign s_axi_aclk_1 = s_axi_aclk;
  assign s_axi_aresetn_1 = s_axi_aresetn;
  bd_afc3_m14arn_0 m14_ar_node
       (.m_sc_aclk(m_axi_aclk_1),
        .m_sc_aresetn(m_axi_aresetn_1),
        .m_sc_info(m14_ar_node_M_SC_INFO),
        .m_sc_payld(m14_ar_node_M_SC_PAYLD),
        .m_sc_recv(m14_ar_node_M_SC_RECV),
        .m_sc_req(m14_ar_node_M_SC_REQ),
        .m_sc_send(m14_ar_node_M_SC_SEND),
        .s_sc_aclk(s_axi_aclk_1),
        .s_sc_aresetn(s_axi_aresetn_1),
        .s_sc_info(S_SC_AR_1_INFO),
        .s_sc_payld(S_SC_AR_1_PAYLD),
        .s_sc_recv(S_SC_AR_1_RECV),
        .s_sc_req(S_SC_AR_1_REQ),
        .s_sc_send(S_SC_AR_1_SEND));
  bd_afc3_m14awn_0 m14_aw_node
       (.m_sc_aclk(m_axi_aclk_1),
        .m_sc_aresetn(m_axi_aresetn_1),
        .m_sc_info(m14_aw_node_M_SC_INFO),
        .m_sc_payld(m14_aw_node_M_SC_PAYLD),
        .m_sc_recv(m14_aw_node_M_SC_RECV),
        .m_sc_req(m14_aw_node_M_SC_REQ),
        .m_sc_send(m14_aw_node_M_SC_SEND),
        .s_sc_aclk(s_axi_aclk_1),
        .s_sc_aresetn(s_axi_aresetn_1),
        .s_sc_info(S_SC_AW_1_INFO),
        .s_sc_payld(S_SC_AW_1_PAYLD),
        .s_sc_recv(S_SC_AW_1_RECV),
        .s_sc_req(S_SC_AW_1_REQ),
        .s_sc_send(S_SC_AW_1_SEND));
  bd_afc3_m14bn_0 m14_b_node
       (.m_sc_aclk(s_axi_aclk_1),
        .m_sc_aresetn(s_axi_aresetn_1),
        .m_sc_info(m14_b_node_M_SC_INFO),
        .m_sc_payld(m14_b_node_M_SC_PAYLD),
        .m_sc_recv(m14_b_node_M_SC_RECV),
        .m_sc_req(m14_b_node_M_SC_REQ),
        .m_sc_send(m14_b_node_M_SC_SEND),
        .s_sc_aclk(m_axi_aclk_1),
        .s_sc_aresetn(m_axi_aresetn_1),
        .s_sc_info(S_SC_B_1_INFO),
        .s_sc_payld(S_SC_B_1_PAYLD),
        .s_sc_recv(S_SC_B_1_RECV),
        .s_sc_req(S_SC_B_1_REQ),
        .s_sc_send(S_SC_B_1_SEND));
  bd_afc3_m14rn_0 m14_r_node
       (.m_sc_aclk(s_axi_aclk_1),
        .m_sc_aresetn(s_axi_aresetn_1),
        .m_sc_info(m14_r_node_M_SC_INFO),
        .m_sc_payld(m14_r_node_M_SC_PAYLD),
        .m_sc_recv(m14_r_node_M_SC_RECV),
        .m_sc_req(m14_r_node_M_SC_REQ),
        .m_sc_send(m14_r_node_M_SC_SEND),
        .s_sc_aclk(m_axi_aclk_1),
        .s_sc_aresetn(m_axi_aresetn_1),
        .s_sc_info(S_SC_R_1_INFO),
        .s_sc_payld(S_SC_R_1_PAYLD),
        .s_sc_recv(S_SC_R_1_RECV),
        .s_sc_req(S_SC_R_1_REQ),
        .s_sc_send(S_SC_R_1_SEND));
  bd_afc3_m14wn_0 m14_w_node
       (.m_sc_aclk(m_axi_aclk_1),
        .m_sc_aresetn(m_axi_aresetn_1),
        .m_sc_info(m14_w_node_M_SC_INFO),
        .m_sc_payld(m14_w_node_M_SC_PAYLD),
        .m_sc_recv(m14_w_node_M_SC_RECV),
        .m_sc_req(m14_w_node_M_SC_REQ),
        .m_sc_send(m14_w_node_M_SC_SEND),
        .s_sc_aclk(s_axi_aclk_1),
        .s_sc_aresetn(s_axi_aresetn_1),
        .s_sc_info(S_SC_W_1_INFO),
        .s_sc_payld(S_SC_W_1_PAYLD),
        .s_sc_recv(S_SC_W_1_RECV),
        .s_sc_req(S_SC_W_1_REQ),
        .s_sc_send(S_SC_W_1_SEND));
endmodule

module m15_exit_pipeline_imp_GYT4C3
   (aclk,
    aresetn,
    m_axi_araddr,
    m_axi_arprot,
    m_axi_arready,
    m_axi_arvalid,
    m_axi_awaddr,
    m_axi_awprot,
    m_axi_awready,
    m_axi_awvalid,
    m_axi_bready,
    m_axi_bresp,
    m_axi_bvalid,
    m_axi_rdata,
    m_axi_rready,
    m_axi_rresp,
    m_axi_rvalid,
    m_axi_wdata,
    m_axi_wready,
    m_axi_wstrb,
    m_axi_wvalid,
    s_axi_araddr,
    s_axi_arcache,
    s_axi_arid,
    s_axi_arlen,
    s_axi_arlock,
    s_axi_arprot,
    s_axi_arqos,
    s_axi_arready,
    s_axi_aruser,
    s_axi_arvalid,
    s_axi_awaddr,
    s_axi_awcache,
    s_axi_awid,
    s_axi_awlen,
    s_axi_awlock,
    s_axi_awprot,
    s_axi_awqos,
    s_axi_awready,
    s_axi_awuser,
    s_axi_awvalid,
    s_axi_bid,
    s_axi_bready,
    s_axi_bresp,
    s_axi_buser,
    s_axi_bvalid,
    s_axi_rdata,
    s_axi_rid,
    s_axi_rlast,
    s_axi_rready,
    s_axi_rresp,
    s_axi_ruser,
    s_axi_rvalid,
    s_axi_wdata,
    s_axi_wlast,
    s_axi_wready,
    s_axi_wstrb,
    s_axi_wuser,
    s_axi_wvalid);
  input aclk;
  input aresetn;
  output [4:0]m_axi_araddr;
  output [2:0]m_axi_arprot;
  input m_axi_arready;
  output m_axi_arvalid;
  output [4:0]m_axi_awaddr;
  output [2:0]m_axi_awprot;
  input m_axi_awready;
  output m_axi_awvalid;
  output m_axi_bready;
  input [1:0]m_axi_bresp;
  input m_axi_bvalid;
  input [31:0]m_axi_rdata;
  output m_axi_rready;
  input [1:0]m_axi_rresp;
  input m_axi_rvalid;
  output [31:0]m_axi_wdata;
  input m_axi_wready;
  output [3:0]m_axi_wstrb;
  output m_axi_wvalid;
  input [4:0]s_axi_araddr;
  input [3:0]s_axi_arcache;
  input [2:0]s_axi_arid;
  input [7:0]s_axi_arlen;
  input [0:0]s_axi_arlock;
  input [2:0]s_axi_arprot;
  input [3:0]s_axi_arqos;
  output s_axi_arready;
  input [1023:0]s_axi_aruser;
  input s_axi_arvalid;
  input [4:0]s_axi_awaddr;
  input [3:0]s_axi_awcache;
  input [2:0]s_axi_awid;
  input [7:0]s_axi_awlen;
  input [0:0]s_axi_awlock;
  input [2:0]s_axi_awprot;
  input [3:0]s_axi_awqos;
  output s_axi_awready;
  input [1023:0]s_axi_awuser;
  input s_axi_awvalid;
  output [2:0]s_axi_bid;
  input s_axi_bready;
  output [1:0]s_axi_bresp;
  output [1023:0]s_axi_buser;
  output s_axi_bvalid;
  output [31:0]s_axi_rdata;
  output [2:0]s_axi_rid;
  output s_axi_rlast;
  input s_axi_rready;
  output [1:0]s_axi_rresp;
  output [1023:0]s_axi_ruser;
  output s_axi_rvalid;
  input [31:0]s_axi_wdata;
  input s_axi_wlast;
  output s_axi_wready;
  input [3:0]s_axi_wstrb;
  input [1023:0]s_axi_wuser;
  input s_axi_wvalid;

  wire aclk_1;
  wire aresetn_1;
  wire [4:0]m15_exit_M_AXI_ARADDR;
  wire [2:0]m15_exit_M_AXI_ARPROT;
  wire m15_exit_M_AXI_ARREADY;
  wire m15_exit_M_AXI_ARVALID;
  wire [4:0]m15_exit_M_AXI_AWADDR;
  wire [2:0]m15_exit_M_AXI_AWPROT;
  wire m15_exit_M_AXI_AWREADY;
  wire m15_exit_M_AXI_AWVALID;
  wire m15_exit_M_AXI_BREADY;
  wire [1:0]m15_exit_M_AXI_BRESP;
  wire m15_exit_M_AXI_BVALID;
  wire [31:0]m15_exit_M_AXI_RDATA;
  wire m15_exit_M_AXI_RREADY;
  wire [1:0]m15_exit_M_AXI_RRESP;
  wire m15_exit_M_AXI_RVALID;
  wire [31:0]m15_exit_M_AXI_WDATA;
  wire m15_exit_M_AXI_WREADY;
  wire [3:0]m15_exit_M_AXI_WSTRB;
  wire m15_exit_M_AXI_WVALID;
  wire [4:0]s_axi_1_ARADDR;
  wire [3:0]s_axi_1_ARCACHE;
  wire [2:0]s_axi_1_ARID;
  wire [7:0]s_axi_1_ARLEN;
  wire [0:0]s_axi_1_ARLOCK;
  wire [2:0]s_axi_1_ARPROT;
  wire [3:0]s_axi_1_ARQOS;
  wire s_axi_1_ARREADY;
  wire [1023:0]s_axi_1_ARUSER;
  wire s_axi_1_ARVALID;
  wire [4:0]s_axi_1_AWADDR;
  wire [3:0]s_axi_1_AWCACHE;
  wire [2:0]s_axi_1_AWID;
  wire [7:0]s_axi_1_AWLEN;
  wire [0:0]s_axi_1_AWLOCK;
  wire [2:0]s_axi_1_AWPROT;
  wire [3:0]s_axi_1_AWQOS;
  wire s_axi_1_AWREADY;
  wire [1023:0]s_axi_1_AWUSER;
  wire s_axi_1_AWVALID;
  wire [2:0]s_axi_1_BID;
  wire s_axi_1_BREADY;
  wire [1:0]s_axi_1_BRESP;
  wire [1023:0]s_axi_1_BUSER;
  wire s_axi_1_BVALID;
  wire [31:0]s_axi_1_RDATA;
  wire [2:0]s_axi_1_RID;
  wire s_axi_1_RLAST;
  wire s_axi_1_RREADY;
  wire [1:0]s_axi_1_RRESP;
  wire [1023:0]s_axi_1_RUSER;
  wire s_axi_1_RVALID;
  wire [31:0]s_axi_1_WDATA;
  wire s_axi_1_WLAST;
  wire s_axi_1_WREADY;
  wire [3:0]s_axi_1_WSTRB;
  wire [1023:0]s_axi_1_WUSER;
  wire s_axi_1_WVALID;

  assign aclk_1 = aclk;
  assign aresetn_1 = aresetn;
  assign m15_exit_M_AXI_ARREADY = m_axi_arready;
  assign m15_exit_M_AXI_AWREADY = m_axi_awready;
  assign m15_exit_M_AXI_BRESP = m_axi_bresp[1:0];
  assign m15_exit_M_AXI_BVALID = m_axi_bvalid;
  assign m15_exit_M_AXI_RDATA = m_axi_rdata[31:0];
  assign m15_exit_M_AXI_RRESP = m_axi_rresp[1:0];
  assign m15_exit_M_AXI_RVALID = m_axi_rvalid;
  assign m15_exit_M_AXI_WREADY = m_axi_wready;
  assign m_axi_araddr[4:0] = m15_exit_M_AXI_ARADDR;
  assign m_axi_arprot[2:0] = m15_exit_M_AXI_ARPROT;
  assign m_axi_arvalid = m15_exit_M_AXI_ARVALID;
  assign m_axi_awaddr[4:0] = m15_exit_M_AXI_AWADDR;
  assign m_axi_awprot[2:0] = m15_exit_M_AXI_AWPROT;
  assign m_axi_awvalid = m15_exit_M_AXI_AWVALID;
  assign m_axi_bready = m15_exit_M_AXI_BREADY;
  assign m_axi_rready = m15_exit_M_AXI_RREADY;
  assign m_axi_wdata[31:0] = m15_exit_M_AXI_WDATA;
  assign m_axi_wstrb[3:0] = m15_exit_M_AXI_WSTRB;
  assign m_axi_wvalid = m15_exit_M_AXI_WVALID;
  assign s_axi_1_ARADDR = s_axi_araddr[4:0];
  assign s_axi_1_ARCACHE = s_axi_arcache[3:0];
  assign s_axi_1_ARID = s_axi_arid[2:0];
  assign s_axi_1_ARLEN = s_axi_arlen[7:0];
  assign s_axi_1_ARLOCK = s_axi_arlock[0];
  assign s_axi_1_ARPROT = s_axi_arprot[2:0];
  assign s_axi_1_ARQOS = s_axi_arqos[3:0];
  assign s_axi_1_ARUSER = s_axi_aruser[1023:0];
  assign s_axi_1_ARVALID = s_axi_arvalid;
  assign s_axi_1_AWADDR = s_axi_awaddr[4:0];
  assign s_axi_1_AWCACHE = s_axi_awcache[3:0];
  assign s_axi_1_AWID = s_axi_awid[2:0];
  assign s_axi_1_AWLEN = s_axi_awlen[7:0];
  assign s_axi_1_AWLOCK = s_axi_awlock[0];
  assign s_axi_1_AWPROT = s_axi_awprot[2:0];
  assign s_axi_1_AWQOS = s_axi_awqos[3:0];
  assign s_axi_1_AWUSER = s_axi_awuser[1023:0];
  assign s_axi_1_AWVALID = s_axi_awvalid;
  assign s_axi_1_BREADY = s_axi_bready;
  assign s_axi_1_RREADY = s_axi_rready;
  assign s_axi_1_WDATA = s_axi_wdata[31:0];
  assign s_axi_1_WLAST = s_axi_wlast;
  assign s_axi_1_WSTRB = s_axi_wstrb[3:0];
  assign s_axi_1_WUSER = s_axi_wuser[1023:0];
  assign s_axi_1_WVALID = s_axi_wvalid;
  assign s_axi_arready = s_axi_1_ARREADY;
  assign s_axi_awready = s_axi_1_AWREADY;
  assign s_axi_bid[2:0] = s_axi_1_BID;
  assign s_axi_bresp[1:0] = s_axi_1_BRESP;
  assign s_axi_buser[1023:0] = s_axi_1_BUSER;
  assign s_axi_bvalid = s_axi_1_BVALID;
  assign s_axi_rdata[31:0] = s_axi_1_RDATA;
  assign s_axi_rid[2:0] = s_axi_1_RID;
  assign s_axi_rlast = s_axi_1_RLAST;
  assign s_axi_rresp[1:0] = s_axi_1_RRESP;
  assign s_axi_ruser[1023:0] = s_axi_1_RUSER;
  assign s_axi_rvalid = s_axi_1_RVALID;
  assign s_axi_wready = s_axi_1_WREADY;
  bd_afc3_m15e_0 m15_exit
       (.aclk(aclk_1),
        .aresetn(aresetn_1),
        .m_axi_araddr(m15_exit_M_AXI_ARADDR),
        .m_axi_arprot(m15_exit_M_AXI_ARPROT),
        .m_axi_arready(m15_exit_M_AXI_ARREADY),
        .m_axi_arvalid(m15_exit_M_AXI_ARVALID),
        .m_axi_awaddr(m15_exit_M_AXI_AWADDR),
        .m_axi_awprot(m15_exit_M_AXI_AWPROT),
        .m_axi_awready(m15_exit_M_AXI_AWREADY),
        .m_axi_awvalid(m15_exit_M_AXI_AWVALID),
        .m_axi_bready(m15_exit_M_AXI_BREADY),
        .m_axi_bresp(m15_exit_M_AXI_BRESP),
        .m_axi_bvalid(m15_exit_M_AXI_BVALID),
        .m_axi_rdata(m15_exit_M_AXI_RDATA),
        .m_axi_rready(m15_exit_M_AXI_RREADY),
        .m_axi_rresp(m15_exit_M_AXI_RRESP),
        .m_axi_rvalid(m15_exit_M_AXI_RVALID),
        .m_axi_wdata(m15_exit_M_AXI_WDATA),
        .m_axi_wready(m15_exit_M_AXI_WREADY),
        .m_axi_wstrb(m15_exit_M_AXI_WSTRB),
        .m_axi_wvalid(m15_exit_M_AXI_WVALID),
        .s_axi_araddr(s_axi_1_ARADDR),
        .s_axi_arcache(s_axi_1_ARCACHE),
        .s_axi_arid(s_axi_1_ARID),
        .s_axi_arlen(s_axi_1_ARLEN),
        .s_axi_arlock(s_axi_1_ARLOCK),
        .s_axi_arprot(s_axi_1_ARPROT),
        .s_axi_arqos(s_axi_1_ARQOS),
        .s_axi_arready(s_axi_1_ARREADY),
        .s_axi_aruser(s_axi_1_ARUSER),
        .s_axi_arvalid(s_axi_1_ARVALID),
        .s_axi_awaddr(s_axi_1_AWADDR),
        .s_axi_awcache(s_axi_1_AWCACHE),
        .s_axi_awid(s_axi_1_AWID),
        .s_axi_awlen(s_axi_1_AWLEN),
        .s_axi_awlock(s_axi_1_AWLOCK),
        .s_axi_awprot(s_axi_1_AWPROT),
        .s_axi_awqos(s_axi_1_AWQOS),
        .s_axi_awready(s_axi_1_AWREADY),
        .s_axi_awuser(s_axi_1_AWUSER),
        .s_axi_awvalid(s_axi_1_AWVALID),
        .s_axi_bid(s_axi_1_BID),
        .s_axi_bready(s_axi_1_BREADY),
        .s_axi_bresp(s_axi_1_BRESP),
        .s_axi_buser(s_axi_1_BUSER),
        .s_axi_bvalid(s_axi_1_BVALID),
        .s_axi_rdata(s_axi_1_RDATA),
        .s_axi_rid(s_axi_1_RID),
        .s_axi_rlast(s_axi_1_RLAST),
        .s_axi_rready(s_axi_1_RREADY),
        .s_axi_rresp(s_axi_1_RRESP),
        .s_axi_ruser(s_axi_1_RUSER),
        .s_axi_rvalid(s_axi_1_RVALID),
        .s_axi_wdata(s_axi_1_WDATA),
        .s_axi_wlast(s_axi_1_WLAST),
        .s_axi_wready(s_axi_1_WREADY),
        .s_axi_wstrb(s_axi_1_WSTRB),
        .s_axi_wuser(s_axi_1_WUSER),
        .s_axi_wvalid(s_axi_1_WVALID));
endmodule

module m15_nodes_imp_ZPHG26
   (M_SC_AR_info,
    M_SC_AR_payld,
    M_SC_AR_recv,
    M_SC_AR_req,
    M_SC_AR_send,
    M_SC_AW_info,
    M_SC_AW_payld,
    M_SC_AW_recv,
    M_SC_AW_req,
    M_SC_AW_send,
    M_SC_B_info,
    M_SC_B_payld,
    M_SC_B_recv,
    M_SC_B_req,
    M_SC_B_send,
    M_SC_R_info,
    M_SC_R_payld,
    M_SC_R_recv,
    M_SC_R_req,
    M_SC_R_send,
    M_SC_W_info,
    M_SC_W_payld,
    M_SC_W_recv,
    M_SC_W_req,
    M_SC_W_send,
    S_SC_AR_info,
    S_SC_AR_payld,
    S_SC_AR_recv,
    S_SC_AR_req,
    S_SC_AR_send,
    S_SC_AW_info,
    S_SC_AW_payld,
    S_SC_AW_recv,
    S_SC_AW_req,
    S_SC_AW_send,
    S_SC_B_info,
    S_SC_B_payld,
    S_SC_B_recv,
    S_SC_B_req,
    S_SC_B_send,
    S_SC_R_info,
    S_SC_R_payld,
    S_SC_R_recv,
    S_SC_R_req,
    S_SC_R_send,
    S_SC_W_info,
    S_SC_W_payld,
    S_SC_W_recv,
    S_SC_W_req,
    S_SC_W_send,
    m_axi_aclk,
    m_axi_aresetn,
    s_axi_aclk,
    s_axi_aresetn);
  output [0:0]M_SC_AR_info;
  output [181:0]M_SC_AR_payld;
  input [0:0]M_SC_AR_recv;
  output [0:0]M_SC_AR_req;
  output [0:0]M_SC_AR_send;
  output [0:0]M_SC_AW_info;
  output [181:0]M_SC_AW_payld;
  input [0:0]M_SC_AW_recv;
  output [0:0]M_SC_AW_req;
  output [0:0]M_SC_AW_send;
  output [0:0]M_SC_B_info;
  output [8:0]M_SC_B_payld;
  input [0:0]M_SC_B_recv;
  output [0:0]M_SC_B_req;
  output [0:0]M_SC_B_send;
  output [0:0]M_SC_R_info;
  output [54:0]M_SC_R_payld;
  input [0:0]M_SC_R_recv;
  output [0:0]M_SC_R_req;
  output [0:0]M_SC_R_send;
  output [0:0]M_SC_W_info;
  output [68:0]M_SC_W_payld;
  input [0:0]M_SC_W_recv;
  output [0:0]M_SC_W_req;
  output [0:0]M_SC_W_send;
  input [0:0]S_SC_AR_info;
  input [181:0]S_SC_AR_payld;
  output [0:0]S_SC_AR_recv;
  input [0:0]S_SC_AR_req;
  input [0:0]S_SC_AR_send;
  input [0:0]S_SC_AW_info;
  input [181:0]S_SC_AW_payld;
  output [0:0]S_SC_AW_recv;
  input [0:0]S_SC_AW_req;
  input [0:0]S_SC_AW_send;
  input [0:0]S_SC_B_info;
  input [8:0]S_SC_B_payld;
  output [0:0]S_SC_B_recv;
  input [0:0]S_SC_B_req;
  input [0:0]S_SC_B_send;
  input [0:0]S_SC_R_info;
  input [54:0]S_SC_R_payld;
  output [0:0]S_SC_R_recv;
  input [0:0]S_SC_R_req;
  input [0:0]S_SC_R_send;
  input [0:0]S_SC_W_info;
  input [68:0]S_SC_W_payld;
  output [0:0]S_SC_W_recv;
  input [0:0]S_SC_W_req;
  input [0:0]S_SC_W_send;
  input m_axi_aclk;
  input m_axi_aresetn;
  input s_axi_aclk;
  input s_axi_aresetn;

  wire [0:0]S_SC_AR_1_INFO;
  wire [181:0]S_SC_AR_1_PAYLD;
  wire [0:0]S_SC_AR_1_RECV;
  wire [0:0]S_SC_AR_1_REQ;
  wire [0:0]S_SC_AR_1_SEND;
  wire [0:0]S_SC_AW_1_INFO;
  wire [181:0]S_SC_AW_1_PAYLD;
  wire [0:0]S_SC_AW_1_RECV;
  wire [0:0]S_SC_AW_1_REQ;
  wire [0:0]S_SC_AW_1_SEND;
  wire [0:0]S_SC_B_1_INFO;
  wire [8:0]S_SC_B_1_PAYLD;
  wire [0:0]S_SC_B_1_RECV;
  wire [0:0]S_SC_B_1_REQ;
  wire [0:0]S_SC_B_1_SEND;
  wire [0:0]S_SC_R_1_INFO;
  wire [54:0]S_SC_R_1_PAYLD;
  wire [0:0]S_SC_R_1_RECV;
  wire [0:0]S_SC_R_1_REQ;
  wire [0:0]S_SC_R_1_SEND;
  wire [0:0]S_SC_W_1_INFO;
  wire [68:0]S_SC_W_1_PAYLD;
  wire [0:0]S_SC_W_1_RECV;
  wire [0:0]S_SC_W_1_REQ;
  wire [0:0]S_SC_W_1_SEND;
  wire [0:0]m15_ar_node_M_SC_INFO;
  wire [181:0]m15_ar_node_M_SC_PAYLD;
  wire [0:0]m15_ar_node_M_SC_RECV;
  wire [0:0]m15_ar_node_M_SC_REQ;
  wire [0:0]m15_ar_node_M_SC_SEND;
  wire [0:0]m15_aw_node_M_SC_INFO;
  wire [181:0]m15_aw_node_M_SC_PAYLD;
  wire [0:0]m15_aw_node_M_SC_RECV;
  wire [0:0]m15_aw_node_M_SC_REQ;
  wire [0:0]m15_aw_node_M_SC_SEND;
  wire [0:0]m15_b_node_M_SC_INFO;
  wire [8:0]m15_b_node_M_SC_PAYLD;
  wire [0:0]m15_b_node_M_SC_RECV;
  wire [0:0]m15_b_node_M_SC_REQ;
  wire [0:0]m15_b_node_M_SC_SEND;
  wire [0:0]m15_r_node_M_SC_INFO;
  wire [54:0]m15_r_node_M_SC_PAYLD;
  wire [0:0]m15_r_node_M_SC_RECV;
  wire [0:0]m15_r_node_M_SC_REQ;
  wire [0:0]m15_r_node_M_SC_SEND;
  wire [0:0]m15_w_node_M_SC_INFO;
  wire [68:0]m15_w_node_M_SC_PAYLD;
  wire [0:0]m15_w_node_M_SC_RECV;
  wire [0:0]m15_w_node_M_SC_REQ;
  wire [0:0]m15_w_node_M_SC_SEND;
  wire m_axi_aclk_1;
  wire m_axi_aresetn_1;
  wire s_axi_aclk_1;
  wire s_axi_aresetn_1;

  assign M_SC_AR_info[0] = m15_ar_node_M_SC_INFO;
  assign M_SC_AR_payld[181:0] = m15_ar_node_M_SC_PAYLD;
  assign M_SC_AR_req[0] = m15_ar_node_M_SC_REQ;
  assign M_SC_AR_send[0] = m15_ar_node_M_SC_SEND;
  assign M_SC_AW_info[0] = m15_aw_node_M_SC_INFO;
  assign M_SC_AW_payld[181:0] = m15_aw_node_M_SC_PAYLD;
  assign M_SC_AW_req[0] = m15_aw_node_M_SC_REQ;
  assign M_SC_AW_send[0] = m15_aw_node_M_SC_SEND;
  assign M_SC_B_info[0] = m15_b_node_M_SC_INFO;
  assign M_SC_B_payld[8:0] = m15_b_node_M_SC_PAYLD;
  assign M_SC_B_req[0] = m15_b_node_M_SC_REQ;
  assign M_SC_B_send[0] = m15_b_node_M_SC_SEND;
  assign M_SC_R_info[0] = m15_r_node_M_SC_INFO;
  assign M_SC_R_payld[54:0] = m15_r_node_M_SC_PAYLD;
  assign M_SC_R_req[0] = m15_r_node_M_SC_REQ;
  assign M_SC_R_send[0] = m15_r_node_M_SC_SEND;
  assign M_SC_W_info[0] = m15_w_node_M_SC_INFO;
  assign M_SC_W_payld[68:0] = m15_w_node_M_SC_PAYLD;
  assign M_SC_W_req[0] = m15_w_node_M_SC_REQ;
  assign M_SC_W_send[0] = m15_w_node_M_SC_SEND;
  assign S_SC_AR_1_INFO = S_SC_AR_info[0];
  assign S_SC_AR_1_PAYLD = S_SC_AR_payld[181:0];
  assign S_SC_AR_1_REQ = S_SC_AR_req[0];
  assign S_SC_AR_1_SEND = S_SC_AR_send[0];
  assign S_SC_AR_recv[0] = S_SC_AR_1_RECV;
  assign S_SC_AW_1_INFO = S_SC_AW_info[0];
  assign S_SC_AW_1_PAYLD = S_SC_AW_payld[181:0];
  assign S_SC_AW_1_REQ = S_SC_AW_req[0];
  assign S_SC_AW_1_SEND = S_SC_AW_send[0];
  assign S_SC_AW_recv[0] = S_SC_AW_1_RECV;
  assign S_SC_B_1_INFO = S_SC_B_info[0];
  assign S_SC_B_1_PAYLD = S_SC_B_payld[8:0];
  assign S_SC_B_1_REQ = S_SC_B_req[0];
  assign S_SC_B_1_SEND = S_SC_B_send[0];
  assign S_SC_B_recv[0] = S_SC_B_1_RECV;
  assign S_SC_R_1_INFO = S_SC_R_info[0];
  assign S_SC_R_1_PAYLD = S_SC_R_payld[54:0];
  assign S_SC_R_1_REQ = S_SC_R_req[0];
  assign S_SC_R_1_SEND = S_SC_R_send[0];
  assign S_SC_R_recv[0] = S_SC_R_1_RECV;
  assign S_SC_W_1_INFO = S_SC_W_info[0];
  assign S_SC_W_1_PAYLD = S_SC_W_payld[68:0];
  assign S_SC_W_1_REQ = S_SC_W_req[0];
  assign S_SC_W_1_SEND = S_SC_W_send[0];
  assign S_SC_W_recv[0] = S_SC_W_1_RECV;
  assign m15_ar_node_M_SC_RECV = M_SC_AR_recv[0];
  assign m15_aw_node_M_SC_RECV = M_SC_AW_recv[0];
  assign m15_b_node_M_SC_RECV = M_SC_B_recv[0];
  assign m15_r_node_M_SC_RECV = M_SC_R_recv[0];
  assign m15_w_node_M_SC_RECV = M_SC_W_recv[0];
  assign m_axi_aclk_1 = m_axi_aclk;
  assign m_axi_aresetn_1 = m_axi_aresetn;
  assign s_axi_aclk_1 = s_axi_aclk;
  assign s_axi_aresetn_1 = s_axi_aresetn;
  bd_afc3_m15arn_0 m15_ar_node
       (.m_sc_aclk(m_axi_aclk_1),
        .m_sc_aresetn(m_axi_aresetn_1),
        .m_sc_info(m15_ar_node_M_SC_INFO),
        .m_sc_payld(m15_ar_node_M_SC_PAYLD),
        .m_sc_recv(m15_ar_node_M_SC_RECV),
        .m_sc_req(m15_ar_node_M_SC_REQ),
        .m_sc_send(m15_ar_node_M_SC_SEND),
        .s_sc_aclk(s_axi_aclk_1),
        .s_sc_aresetn(s_axi_aresetn_1),
        .s_sc_info(S_SC_AR_1_INFO),
        .s_sc_payld(S_SC_AR_1_PAYLD),
        .s_sc_recv(S_SC_AR_1_RECV),
        .s_sc_req(S_SC_AR_1_REQ),
        .s_sc_send(S_SC_AR_1_SEND));
  bd_afc3_m15awn_0 m15_aw_node
       (.m_sc_aclk(m_axi_aclk_1),
        .m_sc_aresetn(m_axi_aresetn_1),
        .m_sc_info(m15_aw_node_M_SC_INFO),
        .m_sc_payld(m15_aw_node_M_SC_PAYLD),
        .m_sc_recv(m15_aw_node_M_SC_RECV),
        .m_sc_req(m15_aw_node_M_SC_REQ),
        .m_sc_send(m15_aw_node_M_SC_SEND),
        .s_sc_aclk(s_axi_aclk_1),
        .s_sc_aresetn(s_axi_aresetn_1),
        .s_sc_info(S_SC_AW_1_INFO),
        .s_sc_payld(S_SC_AW_1_PAYLD),
        .s_sc_recv(S_SC_AW_1_RECV),
        .s_sc_req(S_SC_AW_1_REQ),
        .s_sc_send(S_SC_AW_1_SEND));
  bd_afc3_m15bn_0 m15_b_node
       (.m_sc_aclk(s_axi_aclk_1),
        .m_sc_aresetn(s_axi_aresetn_1),
        .m_sc_info(m15_b_node_M_SC_INFO),
        .m_sc_payld(m15_b_node_M_SC_PAYLD),
        .m_sc_recv(m15_b_node_M_SC_RECV),
        .m_sc_req(m15_b_node_M_SC_REQ),
        .m_sc_send(m15_b_node_M_SC_SEND),
        .s_sc_aclk(m_axi_aclk_1),
        .s_sc_aresetn(m_axi_aresetn_1),
        .s_sc_info(S_SC_B_1_INFO),
        .s_sc_payld(S_SC_B_1_PAYLD),
        .s_sc_recv(S_SC_B_1_RECV),
        .s_sc_req(S_SC_B_1_REQ),
        .s_sc_send(S_SC_B_1_SEND));
  bd_afc3_m15rn_0 m15_r_node
       (.m_sc_aclk(s_axi_aclk_1),
        .m_sc_aresetn(s_axi_aresetn_1),
        .m_sc_info(m15_r_node_M_SC_INFO),
        .m_sc_payld(m15_r_node_M_SC_PAYLD),
        .m_sc_recv(m15_r_node_M_SC_RECV),
        .m_sc_req(m15_r_node_M_SC_REQ),
        .m_sc_send(m15_r_node_M_SC_SEND),
        .s_sc_aclk(m_axi_aclk_1),
        .s_sc_aresetn(m_axi_aresetn_1),
        .s_sc_info(S_SC_R_1_INFO),
        .s_sc_payld(S_SC_R_1_PAYLD),
        .s_sc_recv(S_SC_R_1_RECV),
        .s_sc_req(S_SC_R_1_REQ),
        .s_sc_send(S_SC_R_1_SEND));
  bd_afc3_m15wn_0 m15_w_node
       (.m_sc_aclk(m_axi_aclk_1),
        .m_sc_aresetn(m_axi_aresetn_1),
        .m_sc_info(m15_w_node_M_SC_INFO),
        .m_sc_payld(m15_w_node_M_SC_PAYLD),
        .m_sc_recv(m15_w_node_M_SC_RECV),
        .m_sc_req(m15_w_node_M_SC_REQ),
        .m_sc_send(m15_w_node_M_SC_SEND),
        .s_sc_aclk(s_axi_aclk_1),
        .s_sc_aresetn(s_axi_aresetn_1),
        .s_sc_info(S_SC_W_1_INFO),
        .s_sc_payld(S_SC_W_1_PAYLD),
        .s_sc_recv(S_SC_W_1_RECV),
        .s_sc_req(S_SC_W_1_REQ),
        .s_sc_send(S_SC_W_1_SEND));
endmodule

module m16_exit_pipeline_imp_17NQER
   (aclk,
    aresetn,
    m_axi_araddr,
    m_axi_arprot,
    m_axi_arready,
    m_axi_arvalid,
    m_axi_awaddr,
    m_axi_awprot,
    m_axi_awready,
    m_axi_awvalid,
    m_axi_bready,
    m_axi_bresp,
    m_axi_bvalid,
    m_axi_rdata,
    m_axi_rready,
    m_axi_rresp,
    m_axi_rvalid,
    m_axi_wdata,
    m_axi_wready,
    m_axi_wstrb,
    m_axi_wvalid,
    s_axi_araddr,
    s_axi_arcache,
    s_axi_arid,
    s_axi_arlen,
    s_axi_arlock,
    s_axi_arprot,
    s_axi_arqos,
    s_axi_arready,
    s_axi_aruser,
    s_axi_arvalid,
    s_axi_awaddr,
    s_axi_awcache,
    s_axi_awid,
    s_axi_awlen,
    s_axi_awlock,
    s_axi_awprot,
    s_axi_awqos,
    s_axi_awready,
    s_axi_awuser,
    s_axi_awvalid,
    s_axi_bid,
    s_axi_bready,
    s_axi_bresp,
    s_axi_buser,
    s_axi_bvalid,
    s_axi_rdata,
    s_axi_rid,
    s_axi_rlast,
    s_axi_rready,
    s_axi_rresp,
    s_axi_ruser,
    s_axi_rvalid,
    s_axi_wdata,
    s_axi_wlast,
    s_axi_wready,
    s_axi_wstrb,
    s_axi_wuser,
    s_axi_wvalid);
  input aclk;
  input aresetn;
  output [4:0]m_axi_araddr;
  output [2:0]m_axi_arprot;
  input m_axi_arready;
  output m_axi_arvalid;
  output [4:0]m_axi_awaddr;
  output [2:0]m_axi_awprot;
  input m_axi_awready;
  output m_axi_awvalid;
  output m_axi_bready;
  input [1:0]m_axi_bresp;
  input m_axi_bvalid;
  input [31:0]m_axi_rdata;
  output m_axi_rready;
  input [1:0]m_axi_rresp;
  input m_axi_rvalid;
  output [31:0]m_axi_wdata;
  input m_axi_wready;
  output [3:0]m_axi_wstrb;
  output m_axi_wvalid;
  input [4:0]s_axi_araddr;
  input [3:0]s_axi_arcache;
  input [2:0]s_axi_arid;
  input [7:0]s_axi_arlen;
  input [0:0]s_axi_arlock;
  input [2:0]s_axi_arprot;
  input [3:0]s_axi_arqos;
  output s_axi_arready;
  input [1023:0]s_axi_aruser;
  input s_axi_arvalid;
  input [4:0]s_axi_awaddr;
  input [3:0]s_axi_awcache;
  input [2:0]s_axi_awid;
  input [7:0]s_axi_awlen;
  input [0:0]s_axi_awlock;
  input [2:0]s_axi_awprot;
  input [3:0]s_axi_awqos;
  output s_axi_awready;
  input [1023:0]s_axi_awuser;
  input s_axi_awvalid;
  output [2:0]s_axi_bid;
  input s_axi_bready;
  output [1:0]s_axi_bresp;
  output [1023:0]s_axi_buser;
  output s_axi_bvalid;
  output [31:0]s_axi_rdata;
  output [2:0]s_axi_rid;
  output s_axi_rlast;
  input s_axi_rready;
  output [1:0]s_axi_rresp;
  output [1023:0]s_axi_ruser;
  output s_axi_rvalid;
  input [31:0]s_axi_wdata;
  input s_axi_wlast;
  output s_axi_wready;
  input [3:0]s_axi_wstrb;
  input [1023:0]s_axi_wuser;
  input s_axi_wvalid;

  wire aclk_1;
  wire aresetn_1;
  wire [4:0]m16_exit_M_AXI_ARADDR;
  wire [2:0]m16_exit_M_AXI_ARPROT;
  wire m16_exit_M_AXI_ARREADY;
  wire m16_exit_M_AXI_ARVALID;
  wire [4:0]m16_exit_M_AXI_AWADDR;
  wire [2:0]m16_exit_M_AXI_AWPROT;
  wire m16_exit_M_AXI_AWREADY;
  wire m16_exit_M_AXI_AWVALID;
  wire m16_exit_M_AXI_BREADY;
  wire [1:0]m16_exit_M_AXI_BRESP;
  wire m16_exit_M_AXI_BVALID;
  wire [31:0]m16_exit_M_AXI_RDATA;
  wire m16_exit_M_AXI_RREADY;
  wire [1:0]m16_exit_M_AXI_RRESP;
  wire m16_exit_M_AXI_RVALID;
  wire [31:0]m16_exit_M_AXI_WDATA;
  wire m16_exit_M_AXI_WREADY;
  wire [3:0]m16_exit_M_AXI_WSTRB;
  wire m16_exit_M_AXI_WVALID;
  wire [4:0]s_axi_1_ARADDR;
  wire [3:0]s_axi_1_ARCACHE;
  wire [2:0]s_axi_1_ARID;
  wire [7:0]s_axi_1_ARLEN;
  wire [0:0]s_axi_1_ARLOCK;
  wire [2:0]s_axi_1_ARPROT;
  wire [3:0]s_axi_1_ARQOS;
  wire s_axi_1_ARREADY;
  wire [1023:0]s_axi_1_ARUSER;
  wire s_axi_1_ARVALID;
  wire [4:0]s_axi_1_AWADDR;
  wire [3:0]s_axi_1_AWCACHE;
  wire [2:0]s_axi_1_AWID;
  wire [7:0]s_axi_1_AWLEN;
  wire [0:0]s_axi_1_AWLOCK;
  wire [2:0]s_axi_1_AWPROT;
  wire [3:0]s_axi_1_AWQOS;
  wire s_axi_1_AWREADY;
  wire [1023:0]s_axi_1_AWUSER;
  wire s_axi_1_AWVALID;
  wire [2:0]s_axi_1_BID;
  wire s_axi_1_BREADY;
  wire [1:0]s_axi_1_BRESP;
  wire [1023:0]s_axi_1_BUSER;
  wire s_axi_1_BVALID;
  wire [31:0]s_axi_1_RDATA;
  wire [2:0]s_axi_1_RID;
  wire s_axi_1_RLAST;
  wire s_axi_1_RREADY;
  wire [1:0]s_axi_1_RRESP;
  wire [1023:0]s_axi_1_RUSER;
  wire s_axi_1_RVALID;
  wire [31:0]s_axi_1_WDATA;
  wire s_axi_1_WLAST;
  wire s_axi_1_WREADY;
  wire [3:0]s_axi_1_WSTRB;
  wire [1023:0]s_axi_1_WUSER;
  wire s_axi_1_WVALID;

  assign aclk_1 = aclk;
  assign aresetn_1 = aresetn;
  assign m16_exit_M_AXI_ARREADY = m_axi_arready;
  assign m16_exit_M_AXI_AWREADY = m_axi_awready;
  assign m16_exit_M_AXI_BRESP = m_axi_bresp[1:0];
  assign m16_exit_M_AXI_BVALID = m_axi_bvalid;
  assign m16_exit_M_AXI_RDATA = m_axi_rdata[31:0];
  assign m16_exit_M_AXI_RRESP = m_axi_rresp[1:0];
  assign m16_exit_M_AXI_RVALID = m_axi_rvalid;
  assign m16_exit_M_AXI_WREADY = m_axi_wready;
  assign m_axi_araddr[4:0] = m16_exit_M_AXI_ARADDR;
  assign m_axi_arprot[2:0] = m16_exit_M_AXI_ARPROT;
  assign m_axi_arvalid = m16_exit_M_AXI_ARVALID;
  assign m_axi_awaddr[4:0] = m16_exit_M_AXI_AWADDR;
  assign m_axi_awprot[2:0] = m16_exit_M_AXI_AWPROT;
  assign m_axi_awvalid = m16_exit_M_AXI_AWVALID;
  assign m_axi_bready = m16_exit_M_AXI_BREADY;
  assign m_axi_rready = m16_exit_M_AXI_RREADY;
  assign m_axi_wdata[31:0] = m16_exit_M_AXI_WDATA;
  assign m_axi_wstrb[3:0] = m16_exit_M_AXI_WSTRB;
  assign m_axi_wvalid = m16_exit_M_AXI_WVALID;
  assign s_axi_1_ARADDR = s_axi_araddr[4:0];
  assign s_axi_1_ARCACHE = s_axi_arcache[3:0];
  assign s_axi_1_ARID = s_axi_arid[2:0];
  assign s_axi_1_ARLEN = s_axi_arlen[7:0];
  assign s_axi_1_ARLOCK = s_axi_arlock[0];
  assign s_axi_1_ARPROT = s_axi_arprot[2:0];
  assign s_axi_1_ARQOS = s_axi_arqos[3:0];
  assign s_axi_1_ARUSER = s_axi_aruser[1023:0];
  assign s_axi_1_ARVALID = s_axi_arvalid;
  assign s_axi_1_AWADDR = s_axi_awaddr[4:0];
  assign s_axi_1_AWCACHE = s_axi_awcache[3:0];
  assign s_axi_1_AWID = s_axi_awid[2:0];
  assign s_axi_1_AWLEN = s_axi_awlen[7:0];
  assign s_axi_1_AWLOCK = s_axi_awlock[0];
  assign s_axi_1_AWPROT = s_axi_awprot[2:0];
  assign s_axi_1_AWQOS = s_axi_awqos[3:0];
  assign s_axi_1_AWUSER = s_axi_awuser[1023:0];
  assign s_axi_1_AWVALID = s_axi_awvalid;
  assign s_axi_1_BREADY = s_axi_bready;
  assign s_axi_1_RREADY = s_axi_rready;
  assign s_axi_1_WDATA = s_axi_wdata[31:0];
  assign s_axi_1_WLAST = s_axi_wlast;
  assign s_axi_1_WSTRB = s_axi_wstrb[3:0];
  assign s_axi_1_WUSER = s_axi_wuser[1023:0];
  assign s_axi_1_WVALID = s_axi_wvalid;
  assign s_axi_arready = s_axi_1_ARREADY;
  assign s_axi_awready = s_axi_1_AWREADY;
  assign s_axi_bid[2:0] = s_axi_1_BID;
  assign s_axi_bresp[1:0] = s_axi_1_BRESP;
  assign s_axi_buser[1023:0] = s_axi_1_BUSER;
  assign s_axi_bvalid = s_axi_1_BVALID;
  assign s_axi_rdata[31:0] = s_axi_1_RDATA;
  assign s_axi_rid[2:0] = s_axi_1_RID;
  assign s_axi_rlast = s_axi_1_RLAST;
  assign s_axi_rresp[1:0] = s_axi_1_RRESP;
  assign s_axi_ruser[1023:0] = s_axi_1_RUSER;
  assign s_axi_rvalid = s_axi_1_RVALID;
  assign s_axi_wready = s_axi_1_WREADY;
  bd_afc3_m16e_0 m16_exit
       (.aclk(aclk_1),
        .aresetn(aresetn_1),
        .m_axi_araddr(m16_exit_M_AXI_ARADDR),
        .m_axi_arprot(m16_exit_M_AXI_ARPROT),
        .m_axi_arready(m16_exit_M_AXI_ARREADY),
        .m_axi_arvalid(m16_exit_M_AXI_ARVALID),
        .m_axi_awaddr(m16_exit_M_AXI_AWADDR),
        .m_axi_awprot(m16_exit_M_AXI_AWPROT),
        .m_axi_awready(m16_exit_M_AXI_AWREADY),
        .m_axi_awvalid(m16_exit_M_AXI_AWVALID),
        .m_axi_bready(m16_exit_M_AXI_BREADY),
        .m_axi_bresp(m16_exit_M_AXI_BRESP),
        .m_axi_bvalid(m16_exit_M_AXI_BVALID),
        .m_axi_rdata(m16_exit_M_AXI_RDATA),
        .m_axi_rready(m16_exit_M_AXI_RREADY),
        .m_axi_rresp(m16_exit_M_AXI_RRESP),
        .m_axi_rvalid(m16_exit_M_AXI_RVALID),
        .m_axi_wdata(m16_exit_M_AXI_WDATA),
        .m_axi_wready(m16_exit_M_AXI_WREADY),
        .m_axi_wstrb(m16_exit_M_AXI_WSTRB),
        .m_axi_wvalid(m16_exit_M_AXI_WVALID),
        .s_axi_araddr(s_axi_1_ARADDR),
        .s_axi_arcache(s_axi_1_ARCACHE),
        .s_axi_arid(s_axi_1_ARID),
        .s_axi_arlen(s_axi_1_ARLEN),
        .s_axi_arlock(s_axi_1_ARLOCK),
        .s_axi_arprot(s_axi_1_ARPROT),
        .s_axi_arqos(s_axi_1_ARQOS),
        .s_axi_arready(s_axi_1_ARREADY),
        .s_axi_aruser(s_axi_1_ARUSER),
        .s_axi_arvalid(s_axi_1_ARVALID),
        .s_axi_awaddr(s_axi_1_AWADDR),
        .s_axi_awcache(s_axi_1_AWCACHE),
        .s_axi_awid(s_axi_1_AWID),
        .s_axi_awlen(s_axi_1_AWLEN),
        .s_axi_awlock(s_axi_1_AWLOCK),
        .s_axi_awprot(s_axi_1_AWPROT),
        .s_axi_awqos(s_axi_1_AWQOS),
        .s_axi_awready(s_axi_1_AWREADY),
        .s_axi_awuser(s_axi_1_AWUSER),
        .s_axi_awvalid(s_axi_1_AWVALID),
        .s_axi_bid(s_axi_1_BID),
        .s_axi_bready(s_axi_1_BREADY),
        .s_axi_bresp(s_axi_1_BRESP),
        .s_axi_buser(s_axi_1_BUSER),
        .s_axi_bvalid(s_axi_1_BVALID),
        .s_axi_rdata(s_axi_1_RDATA),
        .s_axi_rid(s_axi_1_RID),
        .s_axi_rlast(s_axi_1_RLAST),
        .s_axi_rready(s_axi_1_RREADY),
        .s_axi_rresp(s_axi_1_RRESP),
        .s_axi_ruser(s_axi_1_RUSER),
        .s_axi_rvalid(s_axi_1_RVALID),
        .s_axi_wdata(s_axi_1_WDATA),
        .s_axi_wlast(s_axi_1_WLAST),
        .s_axi_wready(s_axi_1_WREADY),
        .s_axi_wstrb(s_axi_1_WSTRB),
        .s_axi_wuser(s_axi_1_WUSER),
        .s_axi_wvalid(s_axi_1_WVALID));
endmodule

module m16_nodes_imp_1Y5AUDX
   (M_SC_AR_info,
    M_SC_AR_payld,
    M_SC_AR_recv,
    M_SC_AR_req,
    M_SC_AR_send,
    M_SC_AW_info,
    M_SC_AW_payld,
    M_SC_AW_recv,
    M_SC_AW_req,
    M_SC_AW_send,
    M_SC_B_info,
    M_SC_B_payld,
    M_SC_B_recv,
    M_SC_B_req,
    M_SC_B_send,
    M_SC_R_info,
    M_SC_R_payld,
    M_SC_R_recv,
    M_SC_R_req,
    M_SC_R_send,
    M_SC_W_info,
    M_SC_W_payld,
    M_SC_W_recv,
    M_SC_W_req,
    M_SC_W_send,
    S_SC_AR_info,
    S_SC_AR_payld,
    S_SC_AR_recv,
    S_SC_AR_req,
    S_SC_AR_send,
    S_SC_AW_info,
    S_SC_AW_payld,
    S_SC_AW_recv,
    S_SC_AW_req,
    S_SC_AW_send,
    S_SC_B_info,
    S_SC_B_payld,
    S_SC_B_recv,
    S_SC_B_req,
    S_SC_B_send,
    S_SC_R_info,
    S_SC_R_payld,
    S_SC_R_recv,
    S_SC_R_req,
    S_SC_R_send,
    S_SC_W_info,
    S_SC_W_payld,
    S_SC_W_recv,
    S_SC_W_req,
    S_SC_W_send,
    m_axi_aclk,
    m_axi_aresetn,
    s_axi_aclk,
    s_axi_aresetn);
  output [0:0]M_SC_AR_info;
  output [181:0]M_SC_AR_payld;
  input [0:0]M_SC_AR_recv;
  output [0:0]M_SC_AR_req;
  output [0:0]M_SC_AR_send;
  output [0:0]M_SC_AW_info;
  output [181:0]M_SC_AW_payld;
  input [0:0]M_SC_AW_recv;
  output [0:0]M_SC_AW_req;
  output [0:0]M_SC_AW_send;
  output [0:0]M_SC_B_info;
  output [8:0]M_SC_B_payld;
  input [0:0]M_SC_B_recv;
  output [0:0]M_SC_B_req;
  output [0:0]M_SC_B_send;
  output [0:0]M_SC_R_info;
  output [54:0]M_SC_R_payld;
  input [0:0]M_SC_R_recv;
  output [0:0]M_SC_R_req;
  output [0:0]M_SC_R_send;
  output [0:0]M_SC_W_info;
  output [68:0]M_SC_W_payld;
  input [0:0]M_SC_W_recv;
  output [0:0]M_SC_W_req;
  output [0:0]M_SC_W_send;
  input [0:0]S_SC_AR_info;
  input [181:0]S_SC_AR_payld;
  output [0:0]S_SC_AR_recv;
  input [0:0]S_SC_AR_req;
  input [0:0]S_SC_AR_send;
  input [0:0]S_SC_AW_info;
  input [181:0]S_SC_AW_payld;
  output [0:0]S_SC_AW_recv;
  input [0:0]S_SC_AW_req;
  input [0:0]S_SC_AW_send;
  input [0:0]S_SC_B_info;
  input [8:0]S_SC_B_payld;
  output [0:0]S_SC_B_recv;
  input [0:0]S_SC_B_req;
  input [0:0]S_SC_B_send;
  input [0:0]S_SC_R_info;
  input [54:0]S_SC_R_payld;
  output [0:0]S_SC_R_recv;
  input [0:0]S_SC_R_req;
  input [0:0]S_SC_R_send;
  input [0:0]S_SC_W_info;
  input [68:0]S_SC_W_payld;
  output [0:0]S_SC_W_recv;
  input [0:0]S_SC_W_req;
  input [0:0]S_SC_W_send;
  input m_axi_aclk;
  input m_axi_aresetn;
  input s_axi_aclk;
  input s_axi_aresetn;

  wire [0:0]S_SC_AR_1_INFO;
  wire [181:0]S_SC_AR_1_PAYLD;
  wire [0:0]S_SC_AR_1_RECV;
  wire [0:0]S_SC_AR_1_REQ;
  wire [0:0]S_SC_AR_1_SEND;
  wire [0:0]S_SC_AW_1_INFO;
  wire [181:0]S_SC_AW_1_PAYLD;
  wire [0:0]S_SC_AW_1_RECV;
  wire [0:0]S_SC_AW_1_REQ;
  wire [0:0]S_SC_AW_1_SEND;
  wire [0:0]S_SC_B_1_INFO;
  wire [8:0]S_SC_B_1_PAYLD;
  wire [0:0]S_SC_B_1_RECV;
  wire [0:0]S_SC_B_1_REQ;
  wire [0:0]S_SC_B_1_SEND;
  wire [0:0]S_SC_R_1_INFO;
  wire [54:0]S_SC_R_1_PAYLD;
  wire [0:0]S_SC_R_1_RECV;
  wire [0:0]S_SC_R_1_REQ;
  wire [0:0]S_SC_R_1_SEND;
  wire [0:0]S_SC_W_1_INFO;
  wire [68:0]S_SC_W_1_PAYLD;
  wire [0:0]S_SC_W_1_RECV;
  wire [0:0]S_SC_W_1_REQ;
  wire [0:0]S_SC_W_1_SEND;
  wire [0:0]m16_ar_node_M_SC_INFO;
  wire [181:0]m16_ar_node_M_SC_PAYLD;
  wire [0:0]m16_ar_node_M_SC_RECV;
  wire [0:0]m16_ar_node_M_SC_REQ;
  wire [0:0]m16_ar_node_M_SC_SEND;
  wire [0:0]m16_aw_node_M_SC_INFO;
  wire [181:0]m16_aw_node_M_SC_PAYLD;
  wire [0:0]m16_aw_node_M_SC_RECV;
  wire [0:0]m16_aw_node_M_SC_REQ;
  wire [0:0]m16_aw_node_M_SC_SEND;
  wire [0:0]m16_b_node_M_SC_INFO;
  wire [8:0]m16_b_node_M_SC_PAYLD;
  wire [0:0]m16_b_node_M_SC_RECV;
  wire [0:0]m16_b_node_M_SC_REQ;
  wire [0:0]m16_b_node_M_SC_SEND;
  wire [0:0]m16_r_node_M_SC_INFO;
  wire [54:0]m16_r_node_M_SC_PAYLD;
  wire [0:0]m16_r_node_M_SC_RECV;
  wire [0:0]m16_r_node_M_SC_REQ;
  wire [0:0]m16_r_node_M_SC_SEND;
  wire [0:0]m16_w_node_M_SC_INFO;
  wire [68:0]m16_w_node_M_SC_PAYLD;
  wire [0:0]m16_w_node_M_SC_RECV;
  wire [0:0]m16_w_node_M_SC_REQ;
  wire [0:0]m16_w_node_M_SC_SEND;
  wire m_axi_aclk_1;
  wire m_axi_aresetn_1;
  wire s_axi_aclk_1;
  wire s_axi_aresetn_1;

  assign M_SC_AR_info[0] = m16_ar_node_M_SC_INFO;
  assign M_SC_AR_payld[181:0] = m16_ar_node_M_SC_PAYLD;
  assign M_SC_AR_req[0] = m16_ar_node_M_SC_REQ;
  assign M_SC_AR_send[0] = m16_ar_node_M_SC_SEND;
  assign M_SC_AW_info[0] = m16_aw_node_M_SC_INFO;
  assign M_SC_AW_payld[181:0] = m16_aw_node_M_SC_PAYLD;
  assign M_SC_AW_req[0] = m16_aw_node_M_SC_REQ;
  assign M_SC_AW_send[0] = m16_aw_node_M_SC_SEND;
  assign M_SC_B_info[0] = m16_b_node_M_SC_INFO;
  assign M_SC_B_payld[8:0] = m16_b_node_M_SC_PAYLD;
  assign M_SC_B_req[0] = m16_b_node_M_SC_REQ;
  assign M_SC_B_send[0] = m16_b_node_M_SC_SEND;
  assign M_SC_R_info[0] = m16_r_node_M_SC_INFO;
  assign M_SC_R_payld[54:0] = m16_r_node_M_SC_PAYLD;
  assign M_SC_R_req[0] = m16_r_node_M_SC_REQ;
  assign M_SC_R_send[0] = m16_r_node_M_SC_SEND;
  assign M_SC_W_info[0] = m16_w_node_M_SC_INFO;
  assign M_SC_W_payld[68:0] = m16_w_node_M_SC_PAYLD;
  assign M_SC_W_req[0] = m16_w_node_M_SC_REQ;
  assign M_SC_W_send[0] = m16_w_node_M_SC_SEND;
  assign S_SC_AR_1_INFO = S_SC_AR_info[0];
  assign S_SC_AR_1_PAYLD = S_SC_AR_payld[181:0];
  assign S_SC_AR_1_REQ = S_SC_AR_req[0];
  assign S_SC_AR_1_SEND = S_SC_AR_send[0];
  assign S_SC_AR_recv[0] = S_SC_AR_1_RECV;
  assign S_SC_AW_1_INFO = S_SC_AW_info[0];
  assign S_SC_AW_1_PAYLD = S_SC_AW_payld[181:0];
  assign S_SC_AW_1_REQ = S_SC_AW_req[0];
  assign S_SC_AW_1_SEND = S_SC_AW_send[0];
  assign S_SC_AW_recv[0] = S_SC_AW_1_RECV;
  assign S_SC_B_1_INFO = S_SC_B_info[0];
  assign S_SC_B_1_PAYLD = S_SC_B_payld[8:0];
  assign S_SC_B_1_REQ = S_SC_B_req[0];
  assign S_SC_B_1_SEND = S_SC_B_send[0];
  assign S_SC_B_recv[0] = S_SC_B_1_RECV;
  assign S_SC_R_1_INFO = S_SC_R_info[0];
  assign S_SC_R_1_PAYLD = S_SC_R_payld[54:0];
  assign S_SC_R_1_REQ = S_SC_R_req[0];
  assign S_SC_R_1_SEND = S_SC_R_send[0];
  assign S_SC_R_recv[0] = S_SC_R_1_RECV;
  assign S_SC_W_1_INFO = S_SC_W_info[0];
  assign S_SC_W_1_PAYLD = S_SC_W_payld[68:0];
  assign S_SC_W_1_REQ = S_SC_W_req[0];
  assign S_SC_W_1_SEND = S_SC_W_send[0];
  assign S_SC_W_recv[0] = S_SC_W_1_RECV;
  assign m16_ar_node_M_SC_RECV = M_SC_AR_recv[0];
  assign m16_aw_node_M_SC_RECV = M_SC_AW_recv[0];
  assign m16_b_node_M_SC_RECV = M_SC_B_recv[0];
  assign m16_r_node_M_SC_RECV = M_SC_R_recv[0];
  assign m16_w_node_M_SC_RECV = M_SC_W_recv[0];
  assign m_axi_aclk_1 = m_axi_aclk;
  assign m_axi_aresetn_1 = m_axi_aresetn;
  assign s_axi_aclk_1 = s_axi_aclk;
  assign s_axi_aresetn_1 = s_axi_aresetn;
  bd_afc3_m16arn_0 m16_ar_node
       (.m_sc_aclk(m_axi_aclk_1),
        .m_sc_aresetn(m_axi_aresetn_1),
        .m_sc_info(m16_ar_node_M_SC_INFO),
        .m_sc_payld(m16_ar_node_M_SC_PAYLD),
        .m_sc_recv(m16_ar_node_M_SC_RECV),
        .m_sc_req(m16_ar_node_M_SC_REQ),
        .m_sc_send(m16_ar_node_M_SC_SEND),
        .s_sc_aclk(s_axi_aclk_1),
        .s_sc_aresetn(s_axi_aresetn_1),
        .s_sc_info(S_SC_AR_1_INFO),
        .s_sc_payld(S_SC_AR_1_PAYLD),
        .s_sc_recv(S_SC_AR_1_RECV),
        .s_sc_req(S_SC_AR_1_REQ),
        .s_sc_send(S_SC_AR_1_SEND));
  bd_afc3_m16awn_0 m16_aw_node
       (.m_sc_aclk(m_axi_aclk_1),
        .m_sc_aresetn(m_axi_aresetn_1),
        .m_sc_info(m16_aw_node_M_SC_INFO),
        .m_sc_payld(m16_aw_node_M_SC_PAYLD),
        .m_sc_recv(m16_aw_node_M_SC_RECV),
        .m_sc_req(m16_aw_node_M_SC_REQ),
        .m_sc_send(m16_aw_node_M_SC_SEND),
        .s_sc_aclk(s_axi_aclk_1),
        .s_sc_aresetn(s_axi_aresetn_1),
        .s_sc_info(S_SC_AW_1_INFO),
        .s_sc_payld(S_SC_AW_1_PAYLD),
        .s_sc_recv(S_SC_AW_1_RECV),
        .s_sc_req(S_SC_AW_1_REQ),
        .s_sc_send(S_SC_AW_1_SEND));
  bd_afc3_m16bn_0 m16_b_node
       (.m_sc_aclk(s_axi_aclk_1),
        .m_sc_aresetn(s_axi_aresetn_1),
        .m_sc_info(m16_b_node_M_SC_INFO),
        .m_sc_payld(m16_b_node_M_SC_PAYLD),
        .m_sc_recv(m16_b_node_M_SC_RECV),
        .m_sc_req(m16_b_node_M_SC_REQ),
        .m_sc_send(m16_b_node_M_SC_SEND),
        .s_sc_aclk(m_axi_aclk_1),
        .s_sc_aresetn(m_axi_aresetn_1),
        .s_sc_info(S_SC_B_1_INFO),
        .s_sc_payld(S_SC_B_1_PAYLD),
        .s_sc_recv(S_SC_B_1_RECV),
        .s_sc_req(S_SC_B_1_REQ),
        .s_sc_send(S_SC_B_1_SEND));
  bd_afc3_m16rn_0 m16_r_node
       (.m_sc_aclk(s_axi_aclk_1),
        .m_sc_aresetn(s_axi_aresetn_1),
        .m_sc_info(m16_r_node_M_SC_INFO),
        .m_sc_payld(m16_r_node_M_SC_PAYLD),
        .m_sc_recv(m16_r_node_M_SC_RECV),
        .m_sc_req(m16_r_node_M_SC_REQ),
        .m_sc_send(m16_r_node_M_SC_SEND),
        .s_sc_aclk(m_axi_aclk_1),
        .s_sc_aresetn(m_axi_aresetn_1),
        .s_sc_info(S_SC_R_1_INFO),
        .s_sc_payld(S_SC_R_1_PAYLD),
        .s_sc_recv(S_SC_R_1_RECV),
        .s_sc_req(S_SC_R_1_REQ),
        .s_sc_send(S_SC_R_1_SEND));
  bd_afc3_m16wn_0 m16_w_node
       (.m_sc_aclk(m_axi_aclk_1),
        .m_sc_aresetn(m_axi_aresetn_1),
        .m_sc_info(m16_w_node_M_SC_INFO),
        .m_sc_payld(m16_w_node_M_SC_PAYLD),
        .m_sc_recv(m16_w_node_M_SC_RECV),
        .m_sc_req(m16_w_node_M_SC_REQ),
        .m_sc_send(m16_w_node_M_SC_SEND),
        .s_sc_aclk(s_axi_aclk_1),
        .s_sc_aresetn(s_axi_aresetn_1),
        .s_sc_info(S_SC_W_1_INFO),
        .s_sc_payld(S_SC_W_1_PAYLD),
        .s_sc_recv(S_SC_W_1_RECV),
        .s_sc_req(S_SC_W_1_REQ),
        .s_sc_send(S_SC_W_1_SEND));
endmodule

module m17_exit_pipeline_imp_5EEUNN
   (aclk,
    aresetn,
    m_axi_araddr,
    m_axi_arprot,
    m_axi_arready,
    m_axi_arvalid,
    m_axi_awaddr,
    m_axi_awprot,
    m_axi_awready,
    m_axi_awvalid,
    m_axi_bready,
    m_axi_bresp,
    m_axi_bvalid,
    m_axi_rdata,
    m_axi_rready,
    m_axi_rresp,
    m_axi_rvalid,
    m_axi_wdata,
    m_axi_wready,
    m_axi_wstrb,
    m_axi_wvalid,
    s_axi_araddr,
    s_axi_arcache,
    s_axi_arid,
    s_axi_arlen,
    s_axi_arlock,
    s_axi_arprot,
    s_axi_arqos,
    s_axi_arready,
    s_axi_aruser,
    s_axi_arvalid,
    s_axi_awaddr,
    s_axi_awcache,
    s_axi_awid,
    s_axi_awlen,
    s_axi_awlock,
    s_axi_awprot,
    s_axi_awqos,
    s_axi_awready,
    s_axi_awuser,
    s_axi_awvalid,
    s_axi_bid,
    s_axi_bready,
    s_axi_bresp,
    s_axi_buser,
    s_axi_bvalid,
    s_axi_rdata,
    s_axi_rid,
    s_axi_rlast,
    s_axi_rready,
    s_axi_rresp,
    s_axi_ruser,
    s_axi_rvalid,
    s_axi_wdata,
    s_axi_wlast,
    s_axi_wready,
    s_axi_wstrb,
    s_axi_wuser,
    s_axi_wvalid);
  input aclk;
  input aresetn;
  output [4:0]m_axi_araddr;
  output [2:0]m_axi_arprot;
  input m_axi_arready;
  output m_axi_arvalid;
  output [4:0]m_axi_awaddr;
  output [2:0]m_axi_awprot;
  input m_axi_awready;
  output m_axi_awvalid;
  output m_axi_bready;
  input [1:0]m_axi_bresp;
  input m_axi_bvalid;
  input [31:0]m_axi_rdata;
  output m_axi_rready;
  input [1:0]m_axi_rresp;
  input m_axi_rvalid;
  output [31:0]m_axi_wdata;
  input m_axi_wready;
  output [3:0]m_axi_wstrb;
  output m_axi_wvalid;
  input [4:0]s_axi_araddr;
  input [3:0]s_axi_arcache;
  input [2:0]s_axi_arid;
  input [7:0]s_axi_arlen;
  input [0:0]s_axi_arlock;
  input [2:0]s_axi_arprot;
  input [3:0]s_axi_arqos;
  output s_axi_arready;
  input [1023:0]s_axi_aruser;
  input s_axi_arvalid;
  input [4:0]s_axi_awaddr;
  input [3:0]s_axi_awcache;
  input [2:0]s_axi_awid;
  input [7:0]s_axi_awlen;
  input [0:0]s_axi_awlock;
  input [2:0]s_axi_awprot;
  input [3:0]s_axi_awqos;
  output s_axi_awready;
  input [1023:0]s_axi_awuser;
  input s_axi_awvalid;
  output [2:0]s_axi_bid;
  input s_axi_bready;
  output [1:0]s_axi_bresp;
  output [1023:0]s_axi_buser;
  output s_axi_bvalid;
  output [31:0]s_axi_rdata;
  output [2:0]s_axi_rid;
  output s_axi_rlast;
  input s_axi_rready;
  output [1:0]s_axi_rresp;
  output [1023:0]s_axi_ruser;
  output s_axi_rvalid;
  input [31:0]s_axi_wdata;
  input s_axi_wlast;
  output s_axi_wready;
  input [3:0]s_axi_wstrb;
  input [1023:0]s_axi_wuser;
  input s_axi_wvalid;

  wire aclk_1;
  wire aresetn_1;
  wire [4:0]m17_exit_M_AXI_ARADDR;
  wire [2:0]m17_exit_M_AXI_ARPROT;
  wire m17_exit_M_AXI_ARREADY;
  wire m17_exit_M_AXI_ARVALID;
  wire [4:0]m17_exit_M_AXI_AWADDR;
  wire [2:0]m17_exit_M_AXI_AWPROT;
  wire m17_exit_M_AXI_AWREADY;
  wire m17_exit_M_AXI_AWVALID;
  wire m17_exit_M_AXI_BREADY;
  wire [1:0]m17_exit_M_AXI_BRESP;
  wire m17_exit_M_AXI_BVALID;
  wire [31:0]m17_exit_M_AXI_RDATA;
  wire m17_exit_M_AXI_RREADY;
  wire [1:0]m17_exit_M_AXI_RRESP;
  wire m17_exit_M_AXI_RVALID;
  wire [31:0]m17_exit_M_AXI_WDATA;
  wire m17_exit_M_AXI_WREADY;
  wire [3:0]m17_exit_M_AXI_WSTRB;
  wire m17_exit_M_AXI_WVALID;
  wire [4:0]s_axi_1_ARADDR;
  wire [3:0]s_axi_1_ARCACHE;
  wire [2:0]s_axi_1_ARID;
  wire [7:0]s_axi_1_ARLEN;
  wire [0:0]s_axi_1_ARLOCK;
  wire [2:0]s_axi_1_ARPROT;
  wire [3:0]s_axi_1_ARQOS;
  wire s_axi_1_ARREADY;
  wire [1023:0]s_axi_1_ARUSER;
  wire s_axi_1_ARVALID;
  wire [4:0]s_axi_1_AWADDR;
  wire [3:0]s_axi_1_AWCACHE;
  wire [2:0]s_axi_1_AWID;
  wire [7:0]s_axi_1_AWLEN;
  wire [0:0]s_axi_1_AWLOCK;
  wire [2:0]s_axi_1_AWPROT;
  wire [3:0]s_axi_1_AWQOS;
  wire s_axi_1_AWREADY;
  wire [1023:0]s_axi_1_AWUSER;
  wire s_axi_1_AWVALID;
  wire [2:0]s_axi_1_BID;
  wire s_axi_1_BREADY;
  wire [1:0]s_axi_1_BRESP;
  wire [1023:0]s_axi_1_BUSER;
  wire s_axi_1_BVALID;
  wire [31:0]s_axi_1_RDATA;
  wire [2:0]s_axi_1_RID;
  wire s_axi_1_RLAST;
  wire s_axi_1_RREADY;
  wire [1:0]s_axi_1_RRESP;
  wire [1023:0]s_axi_1_RUSER;
  wire s_axi_1_RVALID;
  wire [31:0]s_axi_1_WDATA;
  wire s_axi_1_WLAST;
  wire s_axi_1_WREADY;
  wire [3:0]s_axi_1_WSTRB;
  wire [1023:0]s_axi_1_WUSER;
  wire s_axi_1_WVALID;

  assign aclk_1 = aclk;
  assign aresetn_1 = aresetn;
  assign m17_exit_M_AXI_ARREADY = m_axi_arready;
  assign m17_exit_M_AXI_AWREADY = m_axi_awready;
  assign m17_exit_M_AXI_BRESP = m_axi_bresp[1:0];
  assign m17_exit_M_AXI_BVALID = m_axi_bvalid;
  assign m17_exit_M_AXI_RDATA = m_axi_rdata[31:0];
  assign m17_exit_M_AXI_RRESP = m_axi_rresp[1:0];
  assign m17_exit_M_AXI_RVALID = m_axi_rvalid;
  assign m17_exit_M_AXI_WREADY = m_axi_wready;
  assign m_axi_araddr[4:0] = m17_exit_M_AXI_ARADDR;
  assign m_axi_arprot[2:0] = m17_exit_M_AXI_ARPROT;
  assign m_axi_arvalid = m17_exit_M_AXI_ARVALID;
  assign m_axi_awaddr[4:0] = m17_exit_M_AXI_AWADDR;
  assign m_axi_awprot[2:0] = m17_exit_M_AXI_AWPROT;
  assign m_axi_awvalid = m17_exit_M_AXI_AWVALID;
  assign m_axi_bready = m17_exit_M_AXI_BREADY;
  assign m_axi_rready = m17_exit_M_AXI_RREADY;
  assign m_axi_wdata[31:0] = m17_exit_M_AXI_WDATA;
  assign m_axi_wstrb[3:0] = m17_exit_M_AXI_WSTRB;
  assign m_axi_wvalid = m17_exit_M_AXI_WVALID;
  assign s_axi_1_ARADDR = s_axi_araddr[4:0];
  assign s_axi_1_ARCACHE = s_axi_arcache[3:0];
  assign s_axi_1_ARID = s_axi_arid[2:0];
  assign s_axi_1_ARLEN = s_axi_arlen[7:0];
  assign s_axi_1_ARLOCK = s_axi_arlock[0];
  assign s_axi_1_ARPROT = s_axi_arprot[2:0];
  assign s_axi_1_ARQOS = s_axi_arqos[3:0];
  assign s_axi_1_ARUSER = s_axi_aruser[1023:0];
  assign s_axi_1_ARVALID = s_axi_arvalid;
  assign s_axi_1_AWADDR = s_axi_awaddr[4:0];
  assign s_axi_1_AWCACHE = s_axi_awcache[3:0];
  assign s_axi_1_AWID = s_axi_awid[2:0];
  assign s_axi_1_AWLEN = s_axi_awlen[7:0];
  assign s_axi_1_AWLOCK = s_axi_awlock[0];
  assign s_axi_1_AWPROT = s_axi_awprot[2:0];
  assign s_axi_1_AWQOS = s_axi_awqos[3:0];
  assign s_axi_1_AWUSER = s_axi_awuser[1023:0];
  assign s_axi_1_AWVALID = s_axi_awvalid;
  assign s_axi_1_BREADY = s_axi_bready;
  assign s_axi_1_RREADY = s_axi_rready;
  assign s_axi_1_WDATA = s_axi_wdata[31:0];
  assign s_axi_1_WLAST = s_axi_wlast;
  assign s_axi_1_WSTRB = s_axi_wstrb[3:0];
  assign s_axi_1_WUSER = s_axi_wuser[1023:0];
  assign s_axi_1_WVALID = s_axi_wvalid;
  assign s_axi_arready = s_axi_1_ARREADY;
  assign s_axi_awready = s_axi_1_AWREADY;
  assign s_axi_bid[2:0] = s_axi_1_BID;
  assign s_axi_bresp[1:0] = s_axi_1_BRESP;
  assign s_axi_buser[1023:0] = s_axi_1_BUSER;
  assign s_axi_bvalid = s_axi_1_BVALID;
  assign s_axi_rdata[31:0] = s_axi_1_RDATA;
  assign s_axi_rid[2:0] = s_axi_1_RID;
  assign s_axi_rlast = s_axi_1_RLAST;
  assign s_axi_rresp[1:0] = s_axi_1_RRESP;
  assign s_axi_ruser[1023:0] = s_axi_1_RUSER;
  assign s_axi_rvalid = s_axi_1_RVALID;
  assign s_axi_wready = s_axi_1_WREADY;
  bd_afc3_m17e_0 m17_exit
       (.aclk(aclk_1),
        .aresetn(aresetn_1),
        .m_axi_araddr(m17_exit_M_AXI_ARADDR),
        .m_axi_arprot(m17_exit_M_AXI_ARPROT),
        .m_axi_arready(m17_exit_M_AXI_ARREADY),
        .m_axi_arvalid(m17_exit_M_AXI_ARVALID),
        .m_axi_awaddr(m17_exit_M_AXI_AWADDR),
        .m_axi_awprot(m17_exit_M_AXI_AWPROT),
        .m_axi_awready(m17_exit_M_AXI_AWREADY),
        .m_axi_awvalid(m17_exit_M_AXI_AWVALID),
        .m_axi_bready(m17_exit_M_AXI_BREADY),
        .m_axi_bresp(m17_exit_M_AXI_BRESP),
        .m_axi_bvalid(m17_exit_M_AXI_BVALID),
        .m_axi_rdata(m17_exit_M_AXI_RDATA),
        .m_axi_rready(m17_exit_M_AXI_RREADY),
        .m_axi_rresp(m17_exit_M_AXI_RRESP),
        .m_axi_rvalid(m17_exit_M_AXI_RVALID),
        .m_axi_wdata(m17_exit_M_AXI_WDATA),
        .m_axi_wready(m17_exit_M_AXI_WREADY),
        .m_axi_wstrb(m17_exit_M_AXI_WSTRB),
        .m_axi_wvalid(m17_exit_M_AXI_WVALID),
        .s_axi_araddr(s_axi_1_ARADDR),
        .s_axi_arcache(s_axi_1_ARCACHE),
        .s_axi_arid(s_axi_1_ARID),
        .s_axi_arlen(s_axi_1_ARLEN),
        .s_axi_arlock(s_axi_1_ARLOCK),
        .s_axi_arprot(s_axi_1_ARPROT),
        .s_axi_arqos(s_axi_1_ARQOS),
        .s_axi_arready(s_axi_1_ARREADY),
        .s_axi_aruser(s_axi_1_ARUSER),
        .s_axi_arvalid(s_axi_1_ARVALID),
        .s_axi_awaddr(s_axi_1_AWADDR),
        .s_axi_awcache(s_axi_1_AWCACHE),
        .s_axi_awid(s_axi_1_AWID),
        .s_axi_awlen(s_axi_1_AWLEN),
        .s_axi_awlock(s_axi_1_AWLOCK),
        .s_axi_awprot(s_axi_1_AWPROT),
        .s_axi_awqos(s_axi_1_AWQOS),
        .s_axi_awready(s_axi_1_AWREADY),
        .s_axi_awuser(s_axi_1_AWUSER),
        .s_axi_awvalid(s_axi_1_AWVALID),
        .s_axi_bid(s_axi_1_BID),
        .s_axi_bready(s_axi_1_BREADY),
        .s_axi_bresp(s_axi_1_BRESP),
        .s_axi_buser(s_axi_1_BUSER),
        .s_axi_bvalid(s_axi_1_BVALID),
        .s_axi_rdata(s_axi_1_RDATA),
        .s_axi_rid(s_axi_1_RID),
        .s_axi_rlast(s_axi_1_RLAST),
        .s_axi_rready(s_axi_1_RREADY),
        .s_axi_rresp(s_axi_1_RRESP),
        .s_axi_ruser(s_axi_1_RUSER),
        .s_axi_rvalid(s_axi_1_RVALID),
        .s_axi_wdata(s_axi_1_WDATA),
        .s_axi_wlast(s_axi_1_WLAST),
        .s_axi_wready(s_axi_1_WREADY),
        .s_axi_wstrb(s_axi_1_WSTRB),
        .s_axi_wuser(s_axi_1_WUSER),
        .s_axi_wvalid(s_axi_1_WVALID));
endmodule

module m17_nodes_imp_R5MBDV
   (M_SC_AR_info,
    M_SC_AR_payld,
    M_SC_AR_recv,
    M_SC_AR_req,
    M_SC_AR_send,
    M_SC_AW_info,
    M_SC_AW_payld,
    M_SC_AW_recv,
    M_SC_AW_req,
    M_SC_AW_send,
    M_SC_B_info,
    M_SC_B_payld,
    M_SC_B_recv,
    M_SC_B_req,
    M_SC_B_send,
    M_SC_R_info,
    M_SC_R_payld,
    M_SC_R_recv,
    M_SC_R_req,
    M_SC_R_send,
    M_SC_W_info,
    M_SC_W_payld,
    M_SC_W_recv,
    M_SC_W_req,
    M_SC_W_send,
    S_SC_AR_info,
    S_SC_AR_payld,
    S_SC_AR_recv,
    S_SC_AR_req,
    S_SC_AR_send,
    S_SC_AW_info,
    S_SC_AW_payld,
    S_SC_AW_recv,
    S_SC_AW_req,
    S_SC_AW_send,
    S_SC_B_info,
    S_SC_B_payld,
    S_SC_B_recv,
    S_SC_B_req,
    S_SC_B_send,
    S_SC_R_info,
    S_SC_R_payld,
    S_SC_R_recv,
    S_SC_R_req,
    S_SC_R_send,
    S_SC_W_info,
    S_SC_W_payld,
    S_SC_W_recv,
    S_SC_W_req,
    S_SC_W_send,
    m_axi_aclk,
    m_axi_aresetn,
    s_axi_aclk,
    s_axi_aresetn);
  output [0:0]M_SC_AR_info;
  output [181:0]M_SC_AR_payld;
  input [0:0]M_SC_AR_recv;
  output [0:0]M_SC_AR_req;
  output [0:0]M_SC_AR_send;
  output [0:0]M_SC_AW_info;
  output [181:0]M_SC_AW_payld;
  input [0:0]M_SC_AW_recv;
  output [0:0]M_SC_AW_req;
  output [0:0]M_SC_AW_send;
  output [0:0]M_SC_B_info;
  output [8:0]M_SC_B_payld;
  input [0:0]M_SC_B_recv;
  output [0:0]M_SC_B_req;
  output [0:0]M_SC_B_send;
  output [0:0]M_SC_R_info;
  output [54:0]M_SC_R_payld;
  input [0:0]M_SC_R_recv;
  output [0:0]M_SC_R_req;
  output [0:0]M_SC_R_send;
  output [0:0]M_SC_W_info;
  output [68:0]M_SC_W_payld;
  input [0:0]M_SC_W_recv;
  output [0:0]M_SC_W_req;
  output [0:0]M_SC_W_send;
  input [0:0]S_SC_AR_info;
  input [181:0]S_SC_AR_payld;
  output [0:0]S_SC_AR_recv;
  input [0:0]S_SC_AR_req;
  input [0:0]S_SC_AR_send;
  input [0:0]S_SC_AW_info;
  input [181:0]S_SC_AW_payld;
  output [0:0]S_SC_AW_recv;
  input [0:0]S_SC_AW_req;
  input [0:0]S_SC_AW_send;
  input [0:0]S_SC_B_info;
  input [8:0]S_SC_B_payld;
  output [0:0]S_SC_B_recv;
  input [0:0]S_SC_B_req;
  input [0:0]S_SC_B_send;
  input [0:0]S_SC_R_info;
  input [54:0]S_SC_R_payld;
  output [0:0]S_SC_R_recv;
  input [0:0]S_SC_R_req;
  input [0:0]S_SC_R_send;
  input [0:0]S_SC_W_info;
  input [68:0]S_SC_W_payld;
  output [0:0]S_SC_W_recv;
  input [0:0]S_SC_W_req;
  input [0:0]S_SC_W_send;
  input m_axi_aclk;
  input m_axi_aresetn;
  input s_axi_aclk;
  input s_axi_aresetn;

  wire [0:0]S_SC_AR_1_INFO;
  wire [181:0]S_SC_AR_1_PAYLD;
  wire [0:0]S_SC_AR_1_RECV;
  wire [0:0]S_SC_AR_1_REQ;
  wire [0:0]S_SC_AR_1_SEND;
  wire [0:0]S_SC_AW_1_INFO;
  wire [181:0]S_SC_AW_1_PAYLD;
  wire [0:0]S_SC_AW_1_RECV;
  wire [0:0]S_SC_AW_1_REQ;
  wire [0:0]S_SC_AW_1_SEND;
  wire [0:0]S_SC_B_1_INFO;
  wire [8:0]S_SC_B_1_PAYLD;
  wire [0:0]S_SC_B_1_RECV;
  wire [0:0]S_SC_B_1_REQ;
  wire [0:0]S_SC_B_1_SEND;
  wire [0:0]S_SC_R_1_INFO;
  wire [54:0]S_SC_R_1_PAYLD;
  wire [0:0]S_SC_R_1_RECV;
  wire [0:0]S_SC_R_1_REQ;
  wire [0:0]S_SC_R_1_SEND;
  wire [0:0]S_SC_W_1_INFO;
  wire [68:0]S_SC_W_1_PAYLD;
  wire [0:0]S_SC_W_1_RECV;
  wire [0:0]S_SC_W_1_REQ;
  wire [0:0]S_SC_W_1_SEND;
  wire [0:0]m17_ar_node_M_SC_INFO;
  wire [181:0]m17_ar_node_M_SC_PAYLD;
  wire [0:0]m17_ar_node_M_SC_RECV;
  wire [0:0]m17_ar_node_M_SC_REQ;
  wire [0:0]m17_ar_node_M_SC_SEND;
  wire [0:0]m17_aw_node_M_SC_INFO;
  wire [181:0]m17_aw_node_M_SC_PAYLD;
  wire [0:0]m17_aw_node_M_SC_RECV;
  wire [0:0]m17_aw_node_M_SC_REQ;
  wire [0:0]m17_aw_node_M_SC_SEND;
  wire [0:0]m17_b_node_M_SC_INFO;
  wire [8:0]m17_b_node_M_SC_PAYLD;
  wire [0:0]m17_b_node_M_SC_RECV;
  wire [0:0]m17_b_node_M_SC_REQ;
  wire [0:0]m17_b_node_M_SC_SEND;
  wire [0:0]m17_r_node_M_SC_INFO;
  wire [54:0]m17_r_node_M_SC_PAYLD;
  wire [0:0]m17_r_node_M_SC_RECV;
  wire [0:0]m17_r_node_M_SC_REQ;
  wire [0:0]m17_r_node_M_SC_SEND;
  wire [0:0]m17_w_node_M_SC_INFO;
  wire [68:0]m17_w_node_M_SC_PAYLD;
  wire [0:0]m17_w_node_M_SC_RECV;
  wire [0:0]m17_w_node_M_SC_REQ;
  wire [0:0]m17_w_node_M_SC_SEND;
  wire m_axi_aclk_1;
  wire m_axi_aresetn_1;
  wire s_axi_aclk_1;
  wire s_axi_aresetn_1;

  assign M_SC_AR_info[0] = m17_ar_node_M_SC_INFO;
  assign M_SC_AR_payld[181:0] = m17_ar_node_M_SC_PAYLD;
  assign M_SC_AR_req[0] = m17_ar_node_M_SC_REQ;
  assign M_SC_AR_send[0] = m17_ar_node_M_SC_SEND;
  assign M_SC_AW_info[0] = m17_aw_node_M_SC_INFO;
  assign M_SC_AW_payld[181:0] = m17_aw_node_M_SC_PAYLD;
  assign M_SC_AW_req[0] = m17_aw_node_M_SC_REQ;
  assign M_SC_AW_send[0] = m17_aw_node_M_SC_SEND;
  assign M_SC_B_info[0] = m17_b_node_M_SC_INFO;
  assign M_SC_B_payld[8:0] = m17_b_node_M_SC_PAYLD;
  assign M_SC_B_req[0] = m17_b_node_M_SC_REQ;
  assign M_SC_B_send[0] = m17_b_node_M_SC_SEND;
  assign M_SC_R_info[0] = m17_r_node_M_SC_INFO;
  assign M_SC_R_payld[54:0] = m17_r_node_M_SC_PAYLD;
  assign M_SC_R_req[0] = m17_r_node_M_SC_REQ;
  assign M_SC_R_send[0] = m17_r_node_M_SC_SEND;
  assign M_SC_W_info[0] = m17_w_node_M_SC_INFO;
  assign M_SC_W_payld[68:0] = m17_w_node_M_SC_PAYLD;
  assign M_SC_W_req[0] = m17_w_node_M_SC_REQ;
  assign M_SC_W_send[0] = m17_w_node_M_SC_SEND;
  assign S_SC_AR_1_INFO = S_SC_AR_info[0];
  assign S_SC_AR_1_PAYLD = S_SC_AR_payld[181:0];
  assign S_SC_AR_1_REQ = S_SC_AR_req[0];
  assign S_SC_AR_1_SEND = S_SC_AR_send[0];
  assign S_SC_AR_recv[0] = S_SC_AR_1_RECV;
  assign S_SC_AW_1_INFO = S_SC_AW_info[0];
  assign S_SC_AW_1_PAYLD = S_SC_AW_payld[181:0];
  assign S_SC_AW_1_REQ = S_SC_AW_req[0];
  assign S_SC_AW_1_SEND = S_SC_AW_send[0];
  assign S_SC_AW_recv[0] = S_SC_AW_1_RECV;
  assign S_SC_B_1_INFO = S_SC_B_info[0];
  assign S_SC_B_1_PAYLD = S_SC_B_payld[8:0];
  assign S_SC_B_1_REQ = S_SC_B_req[0];
  assign S_SC_B_1_SEND = S_SC_B_send[0];
  assign S_SC_B_recv[0] = S_SC_B_1_RECV;
  assign S_SC_R_1_INFO = S_SC_R_info[0];
  assign S_SC_R_1_PAYLD = S_SC_R_payld[54:0];
  assign S_SC_R_1_REQ = S_SC_R_req[0];
  assign S_SC_R_1_SEND = S_SC_R_send[0];
  assign S_SC_R_recv[0] = S_SC_R_1_RECV;
  assign S_SC_W_1_INFO = S_SC_W_info[0];
  assign S_SC_W_1_PAYLD = S_SC_W_payld[68:0];
  assign S_SC_W_1_REQ = S_SC_W_req[0];
  assign S_SC_W_1_SEND = S_SC_W_send[0];
  assign S_SC_W_recv[0] = S_SC_W_1_RECV;
  assign m17_ar_node_M_SC_RECV = M_SC_AR_recv[0];
  assign m17_aw_node_M_SC_RECV = M_SC_AW_recv[0];
  assign m17_b_node_M_SC_RECV = M_SC_B_recv[0];
  assign m17_r_node_M_SC_RECV = M_SC_R_recv[0];
  assign m17_w_node_M_SC_RECV = M_SC_W_recv[0];
  assign m_axi_aclk_1 = m_axi_aclk;
  assign m_axi_aresetn_1 = m_axi_aresetn;
  assign s_axi_aclk_1 = s_axi_aclk;
  assign s_axi_aresetn_1 = s_axi_aresetn;
  bd_afc3_m17arn_0 m17_ar_node
       (.m_sc_aclk(m_axi_aclk_1),
        .m_sc_aresetn(m_axi_aresetn_1),
        .m_sc_info(m17_ar_node_M_SC_INFO),
        .m_sc_payld(m17_ar_node_M_SC_PAYLD),
        .m_sc_recv(m17_ar_node_M_SC_RECV),
        .m_sc_req(m17_ar_node_M_SC_REQ),
        .m_sc_send(m17_ar_node_M_SC_SEND),
        .s_sc_aclk(s_axi_aclk_1),
        .s_sc_aresetn(s_axi_aresetn_1),
        .s_sc_info(S_SC_AR_1_INFO),
        .s_sc_payld(S_SC_AR_1_PAYLD),
        .s_sc_recv(S_SC_AR_1_RECV),
        .s_sc_req(S_SC_AR_1_REQ),
        .s_sc_send(S_SC_AR_1_SEND));
  bd_afc3_m17awn_0 m17_aw_node
       (.m_sc_aclk(m_axi_aclk_1),
        .m_sc_aresetn(m_axi_aresetn_1),
        .m_sc_info(m17_aw_node_M_SC_INFO),
        .m_sc_payld(m17_aw_node_M_SC_PAYLD),
        .m_sc_recv(m17_aw_node_M_SC_RECV),
        .m_sc_req(m17_aw_node_M_SC_REQ),
        .m_sc_send(m17_aw_node_M_SC_SEND),
        .s_sc_aclk(s_axi_aclk_1),
        .s_sc_aresetn(s_axi_aresetn_1),
        .s_sc_info(S_SC_AW_1_INFO),
        .s_sc_payld(S_SC_AW_1_PAYLD),
        .s_sc_recv(S_SC_AW_1_RECV),
        .s_sc_req(S_SC_AW_1_REQ),
        .s_sc_send(S_SC_AW_1_SEND));
  bd_afc3_m17bn_0 m17_b_node
       (.m_sc_aclk(s_axi_aclk_1),
        .m_sc_aresetn(s_axi_aresetn_1),
        .m_sc_info(m17_b_node_M_SC_INFO),
        .m_sc_payld(m17_b_node_M_SC_PAYLD),
        .m_sc_recv(m17_b_node_M_SC_RECV),
        .m_sc_req(m17_b_node_M_SC_REQ),
        .m_sc_send(m17_b_node_M_SC_SEND),
        .s_sc_aclk(m_axi_aclk_1),
        .s_sc_aresetn(m_axi_aresetn_1),
        .s_sc_info(S_SC_B_1_INFO),
        .s_sc_payld(S_SC_B_1_PAYLD),
        .s_sc_recv(S_SC_B_1_RECV),
        .s_sc_req(S_SC_B_1_REQ),
        .s_sc_send(S_SC_B_1_SEND));
  bd_afc3_m17rn_0 m17_r_node
       (.m_sc_aclk(s_axi_aclk_1),
        .m_sc_aresetn(s_axi_aresetn_1),
        .m_sc_info(m17_r_node_M_SC_INFO),
        .m_sc_payld(m17_r_node_M_SC_PAYLD),
        .m_sc_recv(m17_r_node_M_SC_RECV),
        .m_sc_req(m17_r_node_M_SC_REQ),
        .m_sc_send(m17_r_node_M_SC_SEND),
        .s_sc_aclk(m_axi_aclk_1),
        .s_sc_aresetn(m_axi_aresetn_1),
        .s_sc_info(S_SC_R_1_INFO),
        .s_sc_payld(S_SC_R_1_PAYLD),
        .s_sc_recv(S_SC_R_1_RECV),
        .s_sc_req(S_SC_R_1_REQ),
        .s_sc_send(S_SC_R_1_SEND));
  bd_afc3_m17wn_0 m17_w_node
       (.m_sc_aclk(m_axi_aclk_1),
        .m_sc_aresetn(m_axi_aresetn_1),
        .m_sc_info(m17_w_node_M_SC_INFO),
        .m_sc_payld(m17_w_node_M_SC_PAYLD),
        .m_sc_recv(m17_w_node_M_SC_RECV),
        .m_sc_req(m17_w_node_M_SC_REQ),
        .m_sc_send(m17_w_node_M_SC_SEND),
        .s_sc_aclk(s_axi_aclk_1),
        .s_sc_aresetn(s_axi_aresetn_1),
        .s_sc_info(S_SC_W_1_INFO),
        .s_sc_payld(S_SC_W_1_PAYLD),
        .s_sc_recv(S_SC_W_1_RECV),
        .s_sc_req(S_SC_W_1_REQ),
        .s_sc_send(S_SC_W_1_SEND));
endmodule

module m18_exit_pipeline_imp_1LOW837
   (aclk,
    aresetn,
    m_axi_araddr,
    m_axi_arprot,
    m_axi_arready,
    m_axi_arvalid,
    m_axi_awaddr,
    m_axi_awprot,
    m_axi_awready,
    m_axi_awvalid,
    m_axi_bready,
    m_axi_bresp,
    m_axi_bvalid,
    m_axi_rdata,
    m_axi_rready,
    m_axi_rresp,
    m_axi_rvalid,
    m_axi_wdata,
    m_axi_wready,
    m_axi_wstrb,
    m_axi_wvalid,
    s_axi_araddr,
    s_axi_arcache,
    s_axi_arid,
    s_axi_arlen,
    s_axi_arlock,
    s_axi_arprot,
    s_axi_arqos,
    s_axi_arready,
    s_axi_aruser,
    s_axi_arvalid,
    s_axi_awaddr,
    s_axi_awcache,
    s_axi_awid,
    s_axi_awlen,
    s_axi_awlock,
    s_axi_awprot,
    s_axi_awqos,
    s_axi_awready,
    s_axi_awuser,
    s_axi_awvalid,
    s_axi_bid,
    s_axi_bready,
    s_axi_bresp,
    s_axi_buser,
    s_axi_bvalid,
    s_axi_rdata,
    s_axi_rid,
    s_axi_rlast,
    s_axi_rready,
    s_axi_rresp,
    s_axi_ruser,
    s_axi_rvalid,
    s_axi_wdata,
    s_axi_wlast,
    s_axi_wready,
    s_axi_wstrb,
    s_axi_wuser,
    s_axi_wvalid);
  input aclk;
  input aresetn;
  output [4:0]m_axi_araddr;
  output [2:0]m_axi_arprot;
  input m_axi_arready;
  output m_axi_arvalid;
  output [4:0]m_axi_awaddr;
  output [2:0]m_axi_awprot;
  input m_axi_awready;
  output m_axi_awvalid;
  output m_axi_bready;
  input [1:0]m_axi_bresp;
  input m_axi_bvalid;
  input [31:0]m_axi_rdata;
  output m_axi_rready;
  input [1:0]m_axi_rresp;
  input m_axi_rvalid;
  output [31:0]m_axi_wdata;
  input m_axi_wready;
  output [3:0]m_axi_wstrb;
  output m_axi_wvalid;
  input [4:0]s_axi_araddr;
  input [3:0]s_axi_arcache;
  input [2:0]s_axi_arid;
  input [7:0]s_axi_arlen;
  input [0:0]s_axi_arlock;
  input [2:0]s_axi_arprot;
  input [3:0]s_axi_arqos;
  output s_axi_arready;
  input [1023:0]s_axi_aruser;
  input s_axi_arvalid;
  input [4:0]s_axi_awaddr;
  input [3:0]s_axi_awcache;
  input [2:0]s_axi_awid;
  input [7:0]s_axi_awlen;
  input [0:0]s_axi_awlock;
  input [2:0]s_axi_awprot;
  input [3:0]s_axi_awqos;
  output s_axi_awready;
  input [1023:0]s_axi_awuser;
  input s_axi_awvalid;
  output [2:0]s_axi_bid;
  input s_axi_bready;
  output [1:0]s_axi_bresp;
  output [1023:0]s_axi_buser;
  output s_axi_bvalid;
  output [31:0]s_axi_rdata;
  output [2:0]s_axi_rid;
  output s_axi_rlast;
  input s_axi_rready;
  output [1:0]s_axi_rresp;
  output [1023:0]s_axi_ruser;
  output s_axi_rvalid;
  input [31:0]s_axi_wdata;
  input s_axi_wlast;
  output s_axi_wready;
  input [3:0]s_axi_wstrb;
  input [1023:0]s_axi_wuser;
  input s_axi_wvalid;

  wire aclk_1;
  wire aresetn_1;
  wire [4:0]m18_exit_M_AXI_ARADDR;
  wire [2:0]m18_exit_M_AXI_ARPROT;
  wire m18_exit_M_AXI_ARREADY;
  wire m18_exit_M_AXI_ARVALID;
  wire [4:0]m18_exit_M_AXI_AWADDR;
  wire [2:0]m18_exit_M_AXI_AWPROT;
  wire m18_exit_M_AXI_AWREADY;
  wire m18_exit_M_AXI_AWVALID;
  wire m18_exit_M_AXI_BREADY;
  wire [1:0]m18_exit_M_AXI_BRESP;
  wire m18_exit_M_AXI_BVALID;
  wire [31:0]m18_exit_M_AXI_RDATA;
  wire m18_exit_M_AXI_RREADY;
  wire [1:0]m18_exit_M_AXI_RRESP;
  wire m18_exit_M_AXI_RVALID;
  wire [31:0]m18_exit_M_AXI_WDATA;
  wire m18_exit_M_AXI_WREADY;
  wire [3:0]m18_exit_M_AXI_WSTRB;
  wire m18_exit_M_AXI_WVALID;
  wire [4:0]s_axi_1_ARADDR;
  wire [3:0]s_axi_1_ARCACHE;
  wire [2:0]s_axi_1_ARID;
  wire [7:0]s_axi_1_ARLEN;
  wire [0:0]s_axi_1_ARLOCK;
  wire [2:0]s_axi_1_ARPROT;
  wire [3:0]s_axi_1_ARQOS;
  wire s_axi_1_ARREADY;
  wire [1023:0]s_axi_1_ARUSER;
  wire s_axi_1_ARVALID;
  wire [4:0]s_axi_1_AWADDR;
  wire [3:0]s_axi_1_AWCACHE;
  wire [2:0]s_axi_1_AWID;
  wire [7:0]s_axi_1_AWLEN;
  wire [0:0]s_axi_1_AWLOCK;
  wire [2:0]s_axi_1_AWPROT;
  wire [3:0]s_axi_1_AWQOS;
  wire s_axi_1_AWREADY;
  wire [1023:0]s_axi_1_AWUSER;
  wire s_axi_1_AWVALID;
  wire [2:0]s_axi_1_BID;
  wire s_axi_1_BREADY;
  wire [1:0]s_axi_1_BRESP;
  wire [1023:0]s_axi_1_BUSER;
  wire s_axi_1_BVALID;
  wire [31:0]s_axi_1_RDATA;
  wire [2:0]s_axi_1_RID;
  wire s_axi_1_RLAST;
  wire s_axi_1_RREADY;
  wire [1:0]s_axi_1_RRESP;
  wire [1023:0]s_axi_1_RUSER;
  wire s_axi_1_RVALID;
  wire [31:0]s_axi_1_WDATA;
  wire s_axi_1_WLAST;
  wire s_axi_1_WREADY;
  wire [3:0]s_axi_1_WSTRB;
  wire [1023:0]s_axi_1_WUSER;
  wire s_axi_1_WVALID;

  assign aclk_1 = aclk;
  assign aresetn_1 = aresetn;
  assign m18_exit_M_AXI_ARREADY = m_axi_arready;
  assign m18_exit_M_AXI_AWREADY = m_axi_awready;
  assign m18_exit_M_AXI_BRESP = m_axi_bresp[1:0];
  assign m18_exit_M_AXI_BVALID = m_axi_bvalid;
  assign m18_exit_M_AXI_RDATA = m_axi_rdata[31:0];
  assign m18_exit_M_AXI_RRESP = m_axi_rresp[1:0];
  assign m18_exit_M_AXI_RVALID = m_axi_rvalid;
  assign m18_exit_M_AXI_WREADY = m_axi_wready;
  assign m_axi_araddr[4:0] = m18_exit_M_AXI_ARADDR;
  assign m_axi_arprot[2:0] = m18_exit_M_AXI_ARPROT;
  assign m_axi_arvalid = m18_exit_M_AXI_ARVALID;
  assign m_axi_awaddr[4:0] = m18_exit_M_AXI_AWADDR;
  assign m_axi_awprot[2:0] = m18_exit_M_AXI_AWPROT;
  assign m_axi_awvalid = m18_exit_M_AXI_AWVALID;
  assign m_axi_bready = m18_exit_M_AXI_BREADY;
  assign m_axi_rready = m18_exit_M_AXI_RREADY;
  assign m_axi_wdata[31:0] = m18_exit_M_AXI_WDATA;
  assign m_axi_wstrb[3:0] = m18_exit_M_AXI_WSTRB;
  assign m_axi_wvalid = m18_exit_M_AXI_WVALID;
  assign s_axi_1_ARADDR = s_axi_araddr[4:0];
  assign s_axi_1_ARCACHE = s_axi_arcache[3:0];
  assign s_axi_1_ARID = s_axi_arid[2:0];
  assign s_axi_1_ARLEN = s_axi_arlen[7:0];
  assign s_axi_1_ARLOCK = s_axi_arlock[0];
  assign s_axi_1_ARPROT = s_axi_arprot[2:0];
  assign s_axi_1_ARQOS = s_axi_arqos[3:0];
  assign s_axi_1_ARUSER = s_axi_aruser[1023:0];
  assign s_axi_1_ARVALID = s_axi_arvalid;
  assign s_axi_1_AWADDR = s_axi_awaddr[4:0];
  assign s_axi_1_AWCACHE = s_axi_awcache[3:0];
  assign s_axi_1_AWID = s_axi_awid[2:0];
  assign s_axi_1_AWLEN = s_axi_awlen[7:0];
  assign s_axi_1_AWLOCK = s_axi_awlock[0];
  assign s_axi_1_AWPROT = s_axi_awprot[2:0];
  assign s_axi_1_AWQOS = s_axi_awqos[3:0];
  assign s_axi_1_AWUSER = s_axi_awuser[1023:0];
  assign s_axi_1_AWVALID = s_axi_awvalid;
  assign s_axi_1_BREADY = s_axi_bready;
  assign s_axi_1_RREADY = s_axi_rready;
  assign s_axi_1_WDATA = s_axi_wdata[31:0];
  assign s_axi_1_WLAST = s_axi_wlast;
  assign s_axi_1_WSTRB = s_axi_wstrb[3:0];
  assign s_axi_1_WUSER = s_axi_wuser[1023:0];
  assign s_axi_1_WVALID = s_axi_wvalid;
  assign s_axi_arready = s_axi_1_ARREADY;
  assign s_axi_awready = s_axi_1_AWREADY;
  assign s_axi_bid[2:0] = s_axi_1_BID;
  assign s_axi_bresp[1:0] = s_axi_1_BRESP;
  assign s_axi_buser[1023:0] = s_axi_1_BUSER;
  assign s_axi_bvalid = s_axi_1_BVALID;
  assign s_axi_rdata[31:0] = s_axi_1_RDATA;
  assign s_axi_rid[2:0] = s_axi_1_RID;
  assign s_axi_rlast = s_axi_1_RLAST;
  assign s_axi_rresp[1:0] = s_axi_1_RRESP;
  assign s_axi_ruser[1023:0] = s_axi_1_RUSER;
  assign s_axi_rvalid = s_axi_1_RVALID;
  assign s_axi_wready = s_axi_1_WREADY;
  bd_afc3_m18e_0 m18_exit
       (.aclk(aclk_1),
        .aresetn(aresetn_1),
        .m_axi_araddr(m18_exit_M_AXI_ARADDR),
        .m_axi_arprot(m18_exit_M_AXI_ARPROT),
        .m_axi_arready(m18_exit_M_AXI_ARREADY),
        .m_axi_arvalid(m18_exit_M_AXI_ARVALID),
        .m_axi_awaddr(m18_exit_M_AXI_AWADDR),
        .m_axi_awprot(m18_exit_M_AXI_AWPROT),
        .m_axi_awready(m18_exit_M_AXI_AWREADY),
        .m_axi_awvalid(m18_exit_M_AXI_AWVALID),
        .m_axi_bready(m18_exit_M_AXI_BREADY),
        .m_axi_bresp(m18_exit_M_AXI_BRESP),
        .m_axi_bvalid(m18_exit_M_AXI_BVALID),
        .m_axi_rdata(m18_exit_M_AXI_RDATA),
        .m_axi_rready(m18_exit_M_AXI_RREADY),
        .m_axi_rresp(m18_exit_M_AXI_RRESP),
        .m_axi_rvalid(m18_exit_M_AXI_RVALID),
        .m_axi_wdata(m18_exit_M_AXI_WDATA),
        .m_axi_wready(m18_exit_M_AXI_WREADY),
        .m_axi_wstrb(m18_exit_M_AXI_WSTRB),
        .m_axi_wvalid(m18_exit_M_AXI_WVALID),
        .s_axi_araddr(s_axi_1_ARADDR),
        .s_axi_arcache(s_axi_1_ARCACHE),
        .s_axi_arid(s_axi_1_ARID),
        .s_axi_arlen(s_axi_1_ARLEN),
        .s_axi_arlock(s_axi_1_ARLOCK),
        .s_axi_arprot(s_axi_1_ARPROT),
        .s_axi_arqos(s_axi_1_ARQOS),
        .s_axi_arready(s_axi_1_ARREADY),
        .s_axi_aruser(s_axi_1_ARUSER),
        .s_axi_arvalid(s_axi_1_ARVALID),
        .s_axi_awaddr(s_axi_1_AWADDR),
        .s_axi_awcache(s_axi_1_AWCACHE),
        .s_axi_awid(s_axi_1_AWID),
        .s_axi_awlen(s_axi_1_AWLEN),
        .s_axi_awlock(s_axi_1_AWLOCK),
        .s_axi_awprot(s_axi_1_AWPROT),
        .s_axi_awqos(s_axi_1_AWQOS),
        .s_axi_awready(s_axi_1_AWREADY),
        .s_axi_awuser(s_axi_1_AWUSER),
        .s_axi_awvalid(s_axi_1_AWVALID),
        .s_axi_bid(s_axi_1_BID),
        .s_axi_bready(s_axi_1_BREADY),
        .s_axi_bresp(s_axi_1_BRESP),
        .s_axi_buser(s_axi_1_BUSER),
        .s_axi_bvalid(s_axi_1_BVALID),
        .s_axi_rdata(s_axi_1_RDATA),
        .s_axi_rid(s_axi_1_RID),
        .s_axi_rlast(s_axi_1_RLAST),
        .s_axi_rready(s_axi_1_RREADY),
        .s_axi_rresp(s_axi_1_RRESP),
        .s_axi_ruser(s_axi_1_RUSER),
        .s_axi_rvalid(s_axi_1_RVALID),
        .s_axi_wdata(s_axi_1_WDATA),
        .s_axi_wlast(s_axi_1_WLAST),
        .s_axi_wready(s_axi_1_WREADY),
        .s_axi_wstrb(s_axi_1_WSTRB),
        .s_axi_wuser(s_axi_1_WUSER),
        .s_axi_wvalid(s_axi_1_WVALID));
endmodule

module m18_nodes_imp_FCC91X
   (M_SC_AR_info,
    M_SC_AR_payld,
    M_SC_AR_recv,
    M_SC_AR_req,
    M_SC_AR_send,
    M_SC_AW_info,
    M_SC_AW_payld,
    M_SC_AW_recv,
    M_SC_AW_req,
    M_SC_AW_send,
    M_SC_B_info,
    M_SC_B_payld,
    M_SC_B_recv,
    M_SC_B_req,
    M_SC_B_send,
    M_SC_R_info,
    M_SC_R_payld,
    M_SC_R_recv,
    M_SC_R_req,
    M_SC_R_send,
    M_SC_W_info,
    M_SC_W_payld,
    M_SC_W_recv,
    M_SC_W_req,
    M_SC_W_send,
    S_SC_AR_info,
    S_SC_AR_payld,
    S_SC_AR_recv,
    S_SC_AR_req,
    S_SC_AR_send,
    S_SC_AW_info,
    S_SC_AW_payld,
    S_SC_AW_recv,
    S_SC_AW_req,
    S_SC_AW_send,
    S_SC_B_info,
    S_SC_B_payld,
    S_SC_B_recv,
    S_SC_B_req,
    S_SC_B_send,
    S_SC_R_info,
    S_SC_R_payld,
    S_SC_R_recv,
    S_SC_R_req,
    S_SC_R_send,
    S_SC_W_info,
    S_SC_W_payld,
    S_SC_W_recv,
    S_SC_W_req,
    S_SC_W_send,
    m_axi_aclk,
    m_axi_aresetn,
    s_axi_aclk,
    s_axi_aresetn);
  output [0:0]M_SC_AR_info;
  output [181:0]M_SC_AR_payld;
  input [0:0]M_SC_AR_recv;
  output [0:0]M_SC_AR_req;
  output [0:0]M_SC_AR_send;
  output [0:0]M_SC_AW_info;
  output [181:0]M_SC_AW_payld;
  input [0:0]M_SC_AW_recv;
  output [0:0]M_SC_AW_req;
  output [0:0]M_SC_AW_send;
  output [0:0]M_SC_B_info;
  output [8:0]M_SC_B_payld;
  input [0:0]M_SC_B_recv;
  output [0:0]M_SC_B_req;
  output [0:0]M_SC_B_send;
  output [0:0]M_SC_R_info;
  output [54:0]M_SC_R_payld;
  input [0:0]M_SC_R_recv;
  output [0:0]M_SC_R_req;
  output [0:0]M_SC_R_send;
  output [0:0]M_SC_W_info;
  output [68:0]M_SC_W_payld;
  input [0:0]M_SC_W_recv;
  output [0:0]M_SC_W_req;
  output [0:0]M_SC_W_send;
  input [0:0]S_SC_AR_info;
  input [181:0]S_SC_AR_payld;
  output [0:0]S_SC_AR_recv;
  input [0:0]S_SC_AR_req;
  input [0:0]S_SC_AR_send;
  input [0:0]S_SC_AW_info;
  input [181:0]S_SC_AW_payld;
  output [0:0]S_SC_AW_recv;
  input [0:0]S_SC_AW_req;
  input [0:0]S_SC_AW_send;
  input [0:0]S_SC_B_info;
  input [8:0]S_SC_B_payld;
  output [0:0]S_SC_B_recv;
  input [0:0]S_SC_B_req;
  input [0:0]S_SC_B_send;
  input [0:0]S_SC_R_info;
  input [54:0]S_SC_R_payld;
  output [0:0]S_SC_R_recv;
  input [0:0]S_SC_R_req;
  input [0:0]S_SC_R_send;
  input [0:0]S_SC_W_info;
  input [68:0]S_SC_W_payld;
  output [0:0]S_SC_W_recv;
  input [0:0]S_SC_W_req;
  input [0:0]S_SC_W_send;
  input m_axi_aclk;
  input m_axi_aresetn;
  input s_axi_aclk;
  input s_axi_aresetn;

  wire [0:0]S_SC_AR_1_INFO;
  wire [181:0]S_SC_AR_1_PAYLD;
  wire [0:0]S_SC_AR_1_RECV;
  wire [0:0]S_SC_AR_1_REQ;
  wire [0:0]S_SC_AR_1_SEND;
  wire [0:0]S_SC_AW_1_INFO;
  wire [181:0]S_SC_AW_1_PAYLD;
  wire [0:0]S_SC_AW_1_RECV;
  wire [0:0]S_SC_AW_1_REQ;
  wire [0:0]S_SC_AW_1_SEND;
  wire [0:0]S_SC_B_1_INFO;
  wire [8:0]S_SC_B_1_PAYLD;
  wire [0:0]S_SC_B_1_RECV;
  wire [0:0]S_SC_B_1_REQ;
  wire [0:0]S_SC_B_1_SEND;
  wire [0:0]S_SC_R_1_INFO;
  wire [54:0]S_SC_R_1_PAYLD;
  wire [0:0]S_SC_R_1_RECV;
  wire [0:0]S_SC_R_1_REQ;
  wire [0:0]S_SC_R_1_SEND;
  wire [0:0]S_SC_W_1_INFO;
  wire [68:0]S_SC_W_1_PAYLD;
  wire [0:0]S_SC_W_1_RECV;
  wire [0:0]S_SC_W_1_REQ;
  wire [0:0]S_SC_W_1_SEND;
  wire [0:0]m18_ar_node_M_SC_INFO;
  wire [181:0]m18_ar_node_M_SC_PAYLD;
  wire [0:0]m18_ar_node_M_SC_RECV;
  wire [0:0]m18_ar_node_M_SC_REQ;
  wire [0:0]m18_ar_node_M_SC_SEND;
  wire [0:0]m18_aw_node_M_SC_INFO;
  wire [181:0]m18_aw_node_M_SC_PAYLD;
  wire [0:0]m18_aw_node_M_SC_RECV;
  wire [0:0]m18_aw_node_M_SC_REQ;
  wire [0:0]m18_aw_node_M_SC_SEND;
  wire [0:0]m18_b_node_M_SC_INFO;
  wire [8:0]m18_b_node_M_SC_PAYLD;
  wire [0:0]m18_b_node_M_SC_RECV;
  wire [0:0]m18_b_node_M_SC_REQ;
  wire [0:0]m18_b_node_M_SC_SEND;
  wire [0:0]m18_r_node_M_SC_INFO;
  wire [54:0]m18_r_node_M_SC_PAYLD;
  wire [0:0]m18_r_node_M_SC_RECV;
  wire [0:0]m18_r_node_M_SC_REQ;
  wire [0:0]m18_r_node_M_SC_SEND;
  wire [0:0]m18_w_node_M_SC_INFO;
  wire [68:0]m18_w_node_M_SC_PAYLD;
  wire [0:0]m18_w_node_M_SC_RECV;
  wire [0:0]m18_w_node_M_SC_REQ;
  wire [0:0]m18_w_node_M_SC_SEND;
  wire m_axi_aclk_1;
  wire m_axi_aresetn_1;
  wire s_axi_aclk_1;
  wire s_axi_aresetn_1;

  assign M_SC_AR_info[0] = m18_ar_node_M_SC_INFO;
  assign M_SC_AR_payld[181:0] = m18_ar_node_M_SC_PAYLD;
  assign M_SC_AR_req[0] = m18_ar_node_M_SC_REQ;
  assign M_SC_AR_send[0] = m18_ar_node_M_SC_SEND;
  assign M_SC_AW_info[0] = m18_aw_node_M_SC_INFO;
  assign M_SC_AW_payld[181:0] = m18_aw_node_M_SC_PAYLD;
  assign M_SC_AW_req[0] = m18_aw_node_M_SC_REQ;
  assign M_SC_AW_send[0] = m18_aw_node_M_SC_SEND;
  assign M_SC_B_info[0] = m18_b_node_M_SC_INFO;
  assign M_SC_B_payld[8:0] = m18_b_node_M_SC_PAYLD;
  assign M_SC_B_req[0] = m18_b_node_M_SC_REQ;
  assign M_SC_B_send[0] = m18_b_node_M_SC_SEND;
  assign M_SC_R_info[0] = m18_r_node_M_SC_INFO;
  assign M_SC_R_payld[54:0] = m18_r_node_M_SC_PAYLD;
  assign M_SC_R_req[0] = m18_r_node_M_SC_REQ;
  assign M_SC_R_send[0] = m18_r_node_M_SC_SEND;
  assign M_SC_W_info[0] = m18_w_node_M_SC_INFO;
  assign M_SC_W_payld[68:0] = m18_w_node_M_SC_PAYLD;
  assign M_SC_W_req[0] = m18_w_node_M_SC_REQ;
  assign M_SC_W_send[0] = m18_w_node_M_SC_SEND;
  assign S_SC_AR_1_INFO = S_SC_AR_info[0];
  assign S_SC_AR_1_PAYLD = S_SC_AR_payld[181:0];
  assign S_SC_AR_1_REQ = S_SC_AR_req[0];
  assign S_SC_AR_1_SEND = S_SC_AR_send[0];
  assign S_SC_AR_recv[0] = S_SC_AR_1_RECV;
  assign S_SC_AW_1_INFO = S_SC_AW_info[0];
  assign S_SC_AW_1_PAYLD = S_SC_AW_payld[181:0];
  assign S_SC_AW_1_REQ = S_SC_AW_req[0];
  assign S_SC_AW_1_SEND = S_SC_AW_send[0];
  assign S_SC_AW_recv[0] = S_SC_AW_1_RECV;
  assign S_SC_B_1_INFO = S_SC_B_info[0];
  assign S_SC_B_1_PAYLD = S_SC_B_payld[8:0];
  assign S_SC_B_1_REQ = S_SC_B_req[0];
  assign S_SC_B_1_SEND = S_SC_B_send[0];
  assign S_SC_B_recv[0] = S_SC_B_1_RECV;
  assign S_SC_R_1_INFO = S_SC_R_info[0];
  assign S_SC_R_1_PAYLD = S_SC_R_payld[54:0];
  assign S_SC_R_1_REQ = S_SC_R_req[0];
  assign S_SC_R_1_SEND = S_SC_R_send[0];
  assign S_SC_R_recv[0] = S_SC_R_1_RECV;
  assign S_SC_W_1_INFO = S_SC_W_info[0];
  assign S_SC_W_1_PAYLD = S_SC_W_payld[68:0];
  assign S_SC_W_1_REQ = S_SC_W_req[0];
  assign S_SC_W_1_SEND = S_SC_W_send[0];
  assign S_SC_W_recv[0] = S_SC_W_1_RECV;
  assign m18_ar_node_M_SC_RECV = M_SC_AR_recv[0];
  assign m18_aw_node_M_SC_RECV = M_SC_AW_recv[0];
  assign m18_b_node_M_SC_RECV = M_SC_B_recv[0];
  assign m18_r_node_M_SC_RECV = M_SC_R_recv[0];
  assign m18_w_node_M_SC_RECV = M_SC_W_recv[0];
  assign m_axi_aclk_1 = m_axi_aclk;
  assign m_axi_aresetn_1 = m_axi_aresetn;
  assign s_axi_aclk_1 = s_axi_aclk;
  assign s_axi_aresetn_1 = s_axi_aresetn;
  bd_afc3_m18arn_0 m18_ar_node
       (.m_sc_aclk(m_axi_aclk_1),
        .m_sc_aresetn(m_axi_aresetn_1),
        .m_sc_info(m18_ar_node_M_SC_INFO),
        .m_sc_payld(m18_ar_node_M_SC_PAYLD),
        .m_sc_recv(m18_ar_node_M_SC_RECV),
        .m_sc_req(m18_ar_node_M_SC_REQ),
        .m_sc_send(m18_ar_node_M_SC_SEND),
        .s_sc_aclk(s_axi_aclk_1),
        .s_sc_aresetn(s_axi_aresetn_1),
        .s_sc_info(S_SC_AR_1_INFO),
        .s_sc_payld(S_SC_AR_1_PAYLD),
        .s_sc_recv(S_SC_AR_1_RECV),
        .s_sc_req(S_SC_AR_1_REQ),
        .s_sc_send(S_SC_AR_1_SEND));
  bd_afc3_m18awn_0 m18_aw_node
       (.m_sc_aclk(m_axi_aclk_1),
        .m_sc_aresetn(m_axi_aresetn_1),
        .m_sc_info(m18_aw_node_M_SC_INFO),
        .m_sc_payld(m18_aw_node_M_SC_PAYLD),
        .m_sc_recv(m18_aw_node_M_SC_RECV),
        .m_sc_req(m18_aw_node_M_SC_REQ),
        .m_sc_send(m18_aw_node_M_SC_SEND),
        .s_sc_aclk(s_axi_aclk_1),
        .s_sc_aresetn(s_axi_aresetn_1),
        .s_sc_info(S_SC_AW_1_INFO),
        .s_sc_payld(S_SC_AW_1_PAYLD),
        .s_sc_recv(S_SC_AW_1_RECV),
        .s_sc_req(S_SC_AW_1_REQ),
        .s_sc_send(S_SC_AW_1_SEND));
  bd_afc3_m18bn_0 m18_b_node
       (.m_sc_aclk(s_axi_aclk_1),
        .m_sc_aresetn(s_axi_aresetn_1),
        .m_sc_info(m18_b_node_M_SC_INFO),
        .m_sc_payld(m18_b_node_M_SC_PAYLD),
        .m_sc_recv(m18_b_node_M_SC_RECV),
        .m_sc_req(m18_b_node_M_SC_REQ),
        .m_sc_send(m18_b_node_M_SC_SEND),
        .s_sc_aclk(m_axi_aclk_1),
        .s_sc_aresetn(m_axi_aresetn_1),
        .s_sc_info(S_SC_B_1_INFO),
        .s_sc_payld(S_SC_B_1_PAYLD),
        .s_sc_recv(S_SC_B_1_RECV),
        .s_sc_req(S_SC_B_1_REQ),
        .s_sc_send(S_SC_B_1_SEND));
  bd_afc3_m18rn_0 m18_r_node
       (.m_sc_aclk(s_axi_aclk_1),
        .m_sc_aresetn(s_axi_aresetn_1),
        .m_sc_info(m18_r_node_M_SC_INFO),
        .m_sc_payld(m18_r_node_M_SC_PAYLD),
        .m_sc_recv(m18_r_node_M_SC_RECV),
        .m_sc_req(m18_r_node_M_SC_REQ),
        .m_sc_send(m18_r_node_M_SC_SEND),
        .s_sc_aclk(m_axi_aclk_1),
        .s_sc_aresetn(m_axi_aresetn_1),
        .s_sc_info(S_SC_R_1_INFO),
        .s_sc_payld(S_SC_R_1_PAYLD),
        .s_sc_recv(S_SC_R_1_RECV),
        .s_sc_req(S_SC_R_1_REQ),
        .s_sc_send(S_SC_R_1_SEND));
  bd_afc3_m18wn_0 m18_w_node
       (.m_sc_aclk(m_axi_aclk_1),
        .m_sc_aresetn(m_axi_aresetn_1),
        .m_sc_info(m18_w_node_M_SC_INFO),
        .m_sc_payld(m18_w_node_M_SC_PAYLD),
        .m_sc_recv(m18_w_node_M_SC_RECV),
        .m_sc_req(m18_w_node_M_SC_REQ),
        .m_sc_send(m18_w_node_M_SC_SEND),
        .s_sc_aclk(s_axi_aclk_1),
        .s_sc_aresetn(s_axi_aresetn_1),
        .s_sc_info(S_SC_W_1_INFO),
        .s_sc_payld(S_SC_W_1_PAYLD),
        .s_sc_recv(S_SC_W_1_RECV),
        .s_sc_req(S_SC_W_1_REQ),
        .s_sc_send(S_SC_W_1_SEND));
endmodule

module m19_exit_pipeline_imp_1O58VUB
   (aclk,
    aresetn,
    m_axi_araddr,
    m_axi_arprot,
    m_axi_arready,
    m_axi_arvalid,
    m_axi_awaddr,
    m_axi_awprot,
    m_axi_awready,
    m_axi_awvalid,
    m_axi_bready,
    m_axi_bresp,
    m_axi_bvalid,
    m_axi_rdata,
    m_axi_rready,
    m_axi_rresp,
    m_axi_rvalid,
    m_axi_wdata,
    m_axi_wready,
    m_axi_wstrb,
    m_axi_wvalid,
    s_axi_araddr,
    s_axi_arcache,
    s_axi_arid,
    s_axi_arlen,
    s_axi_arlock,
    s_axi_arprot,
    s_axi_arqos,
    s_axi_arready,
    s_axi_aruser,
    s_axi_arvalid,
    s_axi_awaddr,
    s_axi_awcache,
    s_axi_awid,
    s_axi_awlen,
    s_axi_awlock,
    s_axi_awprot,
    s_axi_awqos,
    s_axi_awready,
    s_axi_awuser,
    s_axi_awvalid,
    s_axi_bid,
    s_axi_bready,
    s_axi_bresp,
    s_axi_buser,
    s_axi_bvalid,
    s_axi_rdata,
    s_axi_rid,
    s_axi_rlast,
    s_axi_rready,
    s_axi_rresp,
    s_axi_ruser,
    s_axi_rvalid,
    s_axi_wdata,
    s_axi_wlast,
    s_axi_wready,
    s_axi_wstrb,
    s_axi_wuser,
    s_axi_wvalid);
  input aclk;
  input aresetn;
  output [4:0]m_axi_araddr;
  output [2:0]m_axi_arprot;
  input m_axi_arready;
  output m_axi_arvalid;
  output [4:0]m_axi_awaddr;
  output [2:0]m_axi_awprot;
  input m_axi_awready;
  output m_axi_awvalid;
  output m_axi_bready;
  input [1:0]m_axi_bresp;
  input m_axi_bvalid;
  input [31:0]m_axi_rdata;
  output m_axi_rready;
  input [1:0]m_axi_rresp;
  input m_axi_rvalid;
  output [31:0]m_axi_wdata;
  input m_axi_wready;
  output [3:0]m_axi_wstrb;
  output m_axi_wvalid;
  input [4:0]s_axi_araddr;
  input [3:0]s_axi_arcache;
  input [2:0]s_axi_arid;
  input [7:0]s_axi_arlen;
  input [0:0]s_axi_arlock;
  input [2:0]s_axi_arprot;
  input [3:0]s_axi_arqos;
  output s_axi_arready;
  input [1023:0]s_axi_aruser;
  input s_axi_arvalid;
  input [4:0]s_axi_awaddr;
  input [3:0]s_axi_awcache;
  input [2:0]s_axi_awid;
  input [7:0]s_axi_awlen;
  input [0:0]s_axi_awlock;
  input [2:0]s_axi_awprot;
  input [3:0]s_axi_awqos;
  output s_axi_awready;
  input [1023:0]s_axi_awuser;
  input s_axi_awvalid;
  output [2:0]s_axi_bid;
  input s_axi_bready;
  output [1:0]s_axi_bresp;
  output [1023:0]s_axi_buser;
  output s_axi_bvalid;
  output [31:0]s_axi_rdata;
  output [2:0]s_axi_rid;
  output s_axi_rlast;
  input s_axi_rready;
  output [1:0]s_axi_rresp;
  output [1023:0]s_axi_ruser;
  output s_axi_rvalid;
  input [31:0]s_axi_wdata;
  input s_axi_wlast;
  output s_axi_wready;
  input [3:0]s_axi_wstrb;
  input [1023:0]s_axi_wuser;
  input s_axi_wvalid;

  wire aclk_1;
  wire aresetn_1;
  wire [4:0]m19_exit_M_AXI_ARADDR;
  wire [2:0]m19_exit_M_AXI_ARPROT;
  wire m19_exit_M_AXI_ARREADY;
  wire m19_exit_M_AXI_ARVALID;
  wire [4:0]m19_exit_M_AXI_AWADDR;
  wire [2:0]m19_exit_M_AXI_AWPROT;
  wire m19_exit_M_AXI_AWREADY;
  wire m19_exit_M_AXI_AWVALID;
  wire m19_exit_M_AXI_BREADY;
  wire [1:0]m19_exit_M_AXI_BRESP;
  wire m19_exit_M_AXI_BVALID;
  wire [31:0]m19_exit_M_AXI_RDATA;
  wire m19_exit_M_AXI_RREADY;
  wire [1:0]m19_exit_M_AXI_RRESP;
  wire m19_exit_M_AXI_RVALID;
  wire [31:0]m19_exit_M_AXI_WDATA;
  wire m19_exit_M_AXI_WREADY;
  wire [3:0]m19_exit_M_AXI_WSTRB;
  wire m19_exit_M_AXI_WVALID;
  wire [4:0]s_axi_1_ARADDR;
  wire [3:0]s_axi_1_ARCACHE;
  wire [2:0]s_axi_1_ARID;
  wire [7:0]s_axi_1_ARLEN;
  wire [0:0]s_axi_1_ARLOCK;
  wire [2:0]s_axi_1_ARPROT;
  wire [3:0]s_axi_1_ARQOS;
  wire s_axi_1_ARREADY;
  wire [1023:0]s_axi_1_ARUSER;
  wire s_axi_1_ARVALID;
  wire [4:0]s_axi_1_AWADDR;
  wire [3:0]s_axi_1_AWCACHE;
  wire [2:0]s_axi_1_AWID;
  wire [7:0]s_axi_1_AWLEN;
  wire [0:0]s_axi_1_AWLOCK;
  wire [2:0]s_axi_1_AWPROT;
  wire [3:0]s_axi_1_AWQOS;
  wire s_axi_1_AWREADY;
  wire [1023:0]s_axi_1_AWUSER;
  wire s_axi_1_AWVALID;
  wire [2:0]s_axi_1_BID;
  wire s_axi_1_BREADY;
  wire [1:0]s_axi_1_BRESP;
  wire [1023:0]s_axi_1_BUSER;
  wire s_axi_1_BVALID;
  wire [31:0]s_axi_1_RDATA;
  wire [2:0]s_axi_1_RID;
  wire s_axi_1_RLAST;
  wire s_axi_1_RREADY;
  wire [1:0]s_axi_1_RRESP;
  wire [1023:0]s_axi_1_RUSER;
  wire s_axi_1_RVALID;
  wire [31:0]s_axi_1_WDATA;
  wire s_axi_1_WLAST;
  wire s_axi_1_WREADY;
  wire [3:0]s_axi_1_WSTRB;
  wire [1023:0]s_axi_1_WUSER;
  wire s_axi_1_WVALID;

  assign aclk_1 = aclk;
  assign aresetn_1 = aresetn;
  assign m19_exit_M_AXI_ARREADY = m_axi_arready;
  assign m19_exit_M_AXI_AWREADY = m_axi_awready;
  assign m19_exit_M_AXI_BRESP = m_axi_bresp[1:0];
  assign m19_exit_M_AXI_BVALID = m_axi_bvalid;
  assign m19_exit_M_AXI_RDATA = m_axi_rdata[31:0];
  assign m19_exit_M_AXI_RRESP = m_axi_rresp[1:0];
  assign m19_exit_M_AXI_RVALID = m_axi_rvalid;
  assign m19_exit_M_AXI_WREADY = m_axi_wready;
  assign m_axi_araddr[4:0] = m19_exit_M_AXI_ARADDR;
  assign m_axi_arprot[2:0] = m19_exit_M_AXI_ARPROT;
  assign m_axi_arvalid = m19_exit_M_AXI_ARVALID;
  assign m_axi_awaddr[4:0] = m19_exit_M_AXI_AWADDR;
  assign m_axi_awprot[2:0] = m19_exit_M_AXI_AWPROT;
  assign m_axi_awvalid = m19_exit_M_AXI_AWVALID;
  assign m_axi_bready = m19_exit_M_AXI_BREADY;
  assign m_axi_rready = m19_exit_M_AXI_RREADY;
  assign m_axi_wdata[31:0] = m19_exit_M_AXI_WDATA;
  assign m_axi_wstrb[3:0] = m19_exit_M_AXI_WSTRB;
  assign m_axi_wvalid = m19_exit_M_AXI_WVALID;
  assign s_axi_1_ARADDR = s_axi_araddr[4:0];
  assign s_axi_1_ARCACHE = s_axi_arcache[3:0];
  assign s_axi_1_ARID = s_axi_arid[2:0];
  assign s_axi_1_ARLEN = s_axi_arlen[7:0];
  assign s_axi_1_ARLOCK = s_axi_arlock[0];
  assign s_axi_1_ARPROT = s_axi_arprot[2:0];
  assign s_axi_1_ARQOS = s_axi_arqos[3:0];
  assign s_axi_1_ARUSER = s_axi_aruser[1023:0];
  assign s_axi_1_ARVALID = s_axi_arvalid;
  assign s_axi_1_AWADDR = s_axi_awaddr[4:0];
  assign s_axi_1_AWCACHE = s_axi_awcache[3:0];
  assign s_axi_1_AWID = s_axi_awid[2:0];
  assign s_axi_1_AWLEN = s_axi_awlen[7:0];
  assign s_axi_1_AWLOCK = s_axi_awlock[0];
  assign s_axi_1_AWPROT = s_axi_awprot[2:0];
  assign s_axi_1_AWQOS = s_axi_awqos[3:0];
  assign s_axi_1_AWUSER = s_axi_awuser[1023:0];
  assign s_axi_1_AWVALID = s_axi_awvalid;
  assign s_axi_1_BREADY = s_axi_bready;
  assign s_axi_1_RREADY = s_axi_rready;
  assign s_axi_1_WDATA = s_axi_wdata[31:0];
  assign s_axi_1_WLAST = s_axi_wlast;
  assign s_axi_1_WSTRB = s_axi_wstrb[3:0];
  assign s_axi_1_WUSER = s_axi_wuser[1023:0];
  assign s_axi_1_WVALID = s_axi_wvalid;
  assign s_axi_arready = s_axi_1_ARREADY;
  assign s_axi_awready = s_axi_1_AWREADY;
  assign s_axi_bid[2:0] = s_axi_1_BID;
  assign s_axi_bresp[1:0] = s_axi_1_BRESP;
  assign s_axi_buser[1023:0] = s_axi_1_BUSER;
  assign s_axi_bvalid = s_axi_1_BVALID;
  assign s_axi_rdata[31:0] = s_axi_1_RDATA;
  assign s_axi_rid[2:0] = s_axi_1_RID;
  assign s_axi_rlast = s_axi_1_RLAST;
  assign s_axi_rresp[1:0] = s_axi_1_RRESP;
  assign s_axi_ruser[1023:0] = s_axi_1_RUSER;
  assign s_axi_rvalid = s_axi_1_RVALID;
  assign s_axi_wready = s_axi_1_WREADY;
  bd_afc3_m19e_0 m19_exit
       (.aclk(aclk_1),
        .aresetn(aresetn_1),
        .m_axi_araddr(m19_exit_M_AXI_ARADDR),
        .m_axi_arprot(m19_exit_M_AXI_ARPROT),
        .m_axi_arready(m19_exit_M_AXI_ARREADY),
        .m_axi_arvalid(m19_exit_M_AXI_ARVALID),
        .m_axi_awaddr(m19_exit_M_AXI_AWADDR),
        .m_axi_awprot(m19_exit_M_AXI_AWPROT),
        .m_axi_awready(m19_exit_M_AXI_AWREADY),
        .m_axi_awvalid(m19_exit_M_AXI_AWVALID),
        .m_axi_bready(m19_exit_M_AXI_BREADY),
        .m_axi_bresp(m19_exit_M_AXI_BRESP),
        .m_axi_bvalid(m19_exit_M_AXI_BVALID),
        .m_axi_rdata(m19_exit_M_AXI_RDATA),
        .m_axi_rready(m19_exit_M_AXI_RREADY),
        .m_axi_rresp(m19_exit_M_AXI_RRESP),
        .m_axi_rvalid(m19_exit_M_AXI_RVALID),
        .m_axi_wdata(m19_exit_M_AXI_WDATA),
        .m_axi_wready(m19_exit_M_AXI_WREADY),
        .m_axi_wstrb(m19_exit_M_AXI_WSTRB),
        .m_axi_wvalid(m19_exit_M_AXI_WVALID),
        .s_axi_araddr(s_axi_1_ARADDR),
        .s_axi_arcache(s_axi_1_ARCACHE),
        .s_axi_arid(s_axi_1_ARID),
        .s_axi_arlen(s_axi_1_ARLEN),
        .s_axi_arlock(s_axi_1_ARLOCK),
        .s_axi_arprot(s_axi_1_ARPROT),
        .s_axi_arqos(s_axi_1_ARQOS),
        .s_axi_arready(s_axi_1_ARREADY),
        .s_axi_aruser(s_axi_1_ARUSER),
        .s_axi_arvalid(s_axi_1_ARVALID),
        .s_axi_awaddr(s_axi_1_AWADDR),
        .s_axi_awcache(s_axi_1_AWCACHE),
        .s_axi_awid(s_axi_1_AWID),
        .s_axi_awlen(s_axi_1_AWLEN),
        .s_axi_awlock(s_axi_1_AWLOCK),
        .s_axi_awprot(s_axi_1_AWPROT),
        .s_axi_awqos(s_axi_1_AWQOS),
        .s_axi_awready(s_axi_1_AWREADY),
        .s_axi_awuser(s_axi_1_AWUSER),
        .s_axi_awvalid(s_axi_1_AWVALID),
        .s_axi_bid(s_axi_1_BID),
        .s_axi_bready(s_axi_1_BREADY),
        .s_axi_bresp(s_axi_1_BRESP),
        .s_axi_buser(s_axi_1_BUSER),
        .s_axi_bvalid(s_axi_1_BVALID),
        .s_axi_rdata(s_axi_1_RDATA),
        .s_axi_rid(s_axi_1_RID),
        .s_axi_rlast(s_axi_1_RLAST),
        .s_axi_rready(s_axi_1_RREADY),
        .s_axi_rresp(s_axi_1_RRESP),
        .s_axi_ruser(s_axi_1_RUSER),
        .s_axi_rvalid(s_axi_1_RVALID),
        .s_axi_wdata(s_axi_1_WDATA),
        .s_axi_wlast(s_axi_1_WLAST),
        .s_axi_wready(s_axi_1_WREADY),
        .s_axi_wstrb(s_axi_1_WSTRB),
        .s_axi_wuser(s_axi_1_WUSER),
        .s_axi_wvalid(s_axi_1_WVALID));
endmodule

module m19_nodes_imp_1B8QI03
   (M_SC_AR_info,
    M_SC_AR_payld,
    M_SC_AR_recv,
    M_SC_AR_req,
    M_SC_AR_send,
    M_SC_AW_info,
    M_SC_AW_payld,
    M_SC_AW_recv,
    M_SC_AW_req,
    M_SC_AW_send,
    M_SC_B_info,
    M_SC_B_payld,
    M_SC_B_recv,
    M_SC_B_req,
    M_SC_B_send,
    M_SC_R_info,
    M_SC_R_payld,
    M_SC_R_recv,
    M_SC_R_req,
    M_SC_R_send,
    M_SC_W_info,
    M_SC_W_payld,
    M_SC_W_recv,
    M_SC_W_req,
    M_SC_W_send,
    S_SC_AR_info,
    S_SC_AR_payld,
    S_SC_AR_recv,
    S_SC_AR_req,
    S_SC_AR_send,
    S_SC_AW_info,
    S_SC_AW_payld,
    S_SC_AW_recv,
    S_SC_AW_req,
    S_SC_AW_send,
    S_SC_B_info,
    S_SC_B_payld,
    S_SC_B_recv,
    S_SC_B_req,
    S_SC_B_send,
    S_SC_R_info,
    S_SC_R_payld,
    S_SC_R_recv,
    S_SC_R_req,
    S_SC_R_send,
    S_SC_W_info,
    S_SC_W_payld,
    S_SC_W_recv,
    S_SC_W_req,
    S_SC_W_send,
    m_axi_aclk,
    m_axi_aresetn,
    s_axi_aclk,
    s_axi_aresetn);
  output [0:0]M_SC_AR_info;
  output [181:0]M_SC_AR_payld;
  input [0:0]M_SC_AR_recv;
  output [0:0]M_SC_AR_req;
  output [0:0]M_SC_AR_send;
  output [0:0]M_SC_AW_info;
  output [181:0]M_SC_AW_payld;
  input [0:0]M_SC_AW_recv;
  output [0:0]M_SC_AW_req;
  output [0:0]M_SC_AW_send;
  output [0:0]M_SC_B_info;
  output [8:0]M_SC_B_payld;
  input [0:0]M_SC_B_recv;
  output [0:0]M_SC_B_req;
  output [0:0]M_SC_B_send;
  output [0:0]M_SC_R_info;
  output [54:0]M_SC_R_payld;
  input [0:0]M_SC_R_recv;
  output [0:0]M_SC_R_req;
  output [0:0]M_SC_R_send;
  output [0:0]M_SC_W_info;
  output [68:0]M_SC_W_payld;
  input [0:0]M_SC_W_recv;
  output [0:0]M_SC_W_req;
  output [0:0]M_SC_W_send;
  input [0:0]S_SC_AR_info;
  input [181:0]S_SC_AR_payld;
  output [0:0]S_SC_AR_recv;
  input [0:0]S_SC_AR_req;
  input [0:0]S_SC_AR_send;
  input [0:0]S_SC_AW_info;
  input [181:0]S_SC_AW_payld;
  output [0:0]S_SC_AW_recv;
  input [0:0]S_SC_AW_req;
  input [0:0]S_SC_AW_send;
  input [0:0]S_SC_B_info;
  input [8:0]S_SC_B_payld;
  output [0:0]S_SC_B_recv;
  input [0:0]S_SC_B_req;
  input [0:0]S_SC_B_send;
  input [0:0]S_SC_R_info;
  input [54:0]S_SC_R_payld;
  output [0:0]S_SC_R_recv;
  input [0:0]S_SC_R_req;
  input [0:0]S_SC_R_send;
  input [0:0]S_SC_W_info;
  input [68:0]S_SC_W_payld;
  output [0:0]S_SC_W_recv;
  input [0:0]S_SC_W_req;
  input [0:0]S_SC_W_send;
  input m_axi_aclk;
  input m_axi_aresetn;
  input s_axi_aclk;
  input s_axi_aresetn;

  wire [0:0]S_SC_AR_1_INFO;
  wire [181:0]S_SC_AR_1_PAYLD;
  wire [0:0]S_SC_AR_1_RECV;
  wire [0:0]S_SC_AR_1_REQ;
  wire [0:0]S_SC_AR_1_SEND;
  wire [0:0]S_SC_AW_1_INFO;
  wire [181:0]S_SC_AW_1_PAYLD;
  wire [0:0]S_SC_AW_1_RECV;
  wire [0:0]S_SC_AW_1_REQ;
  wire [0:0]S_SC_AW_1_SEND;
  wire [0:0]S_SC_B_1_INFO;
  wire [8:0]S_SC_B_1_PAYLD;
  wire [0:0]S_SC_B_1_RECV;
  wire [0:0]S_SC_B_1_REQ;
  wire [0:0]S_SC_B_1_SEND;
  wire [0:0]S_SC_R_1_INFO;
  wire [54:0]S_SC_R_1_PAYLD;
  wire [0:0]S_SC_R_1_RECV;
  wire [0:0]S_SC_R_1_REQ;
  wire [0:0]S_SC_R_1_SEND;
  wire [0:0]S_SC_W_1_INFO;
  wire [68:0]S_SC_W_1_PAYLD;
  wire [0:0]S_SC_W_1_RECV;
  wire [0:0]S_SC_W_1_REQ;
  wire [0:0]S_SC_W_1_SEND;
  wire [0:0]m19_ar_node_M_SC_INFO;
  wire [181:0]m19_ar_node_M_SC_PAYLD;
  wire [0:0]m19_ar_node_M_SC_RECV;
  wire [0:0]m19_ar_node_M_SC_REQ;
  wire [0:0]m19_ar_node_M_SC_SEND;
  wire [0:0]m19_aw_node_M_SC_INFO;
  wire [181:0]m19_aw_node_M_SC_PAYLD;
  wire [0:0]m19_aw_node_M_SC_RECV;
  wire [0:0]m19_aw_node_M_SC_REQ;
  wire [0:0]m19_aw_node_M_SC_SEND;
  wire [0:0]m19_b_node_M_SC_INFO;
  wire [8:0]m19_b_node_M_SC_PAYLD;
  wire [0:0]m19_b_node_M_SC_RECV;
  wire [0:0]m19_b_node_M_SC_REQ;
  wire [0:0]m19_b_node_M_SC_SEND;
  wire [0:0]m19_r_node_M_SC_INFO;
  wire [54:0]m19_r_node_M_SC_PAYLD;
  wire [0:0]m19_r_node_M_SC_RECV;
  wire [0:0]m19_r_node_M_SC_REQ;
  wire [0:0]m19_r_node_M_SC_SEND;
  wire [0:0]m19_w_node_M_SC_INFO;
  wire [68:0]m19_w_node_M_SC_PAYLD;
  wire [0:0]m19_w_node_M_SC_RECV;
  wire [0:0]m19_w_node_M_SC_REQ;
  wire [0:0]m19_w_node_M_SC_SEND;
  wire m_axi_aclk_1;
  wire m_axi_aresetn_1;
  wire s_axi_aclk_1;
  wire s_axi_aresetn_1;

  assign M_SC_AR_info[0] = m19_ar_node_M_SC_INFO;
  assign M_SC_AR_payld[181:0] = m19_ar_node_M_SC_PAYLD;
  assign M_SC_AR_req[0] = m19_ar_node_M_SC_REQ;
  assign M_SC_AR_send[0] = m19_ar_node_M_SC_SEND;
  assign M_SC_AW_info[0] = m19_aw_node_M_SC_INFO;
  assign M_SC_AW_payld[181:0] = m19_aw_node_M_SC_PAYLD;
  assign M_SC_AW_req[0] = m19_aw_node_M_SC_REQ;
  assign M_SC_AW_send[0] = m19_aw_node_M_SC_SEND;
  assign M_SC_B_info[0] = m19_b_node_M_SC_INFO;
  assign M_SC_B_payld[8:0] = m19_b_node_M_SC_PAYLD;
  assign M_SC_B_req[0] = m19_b_node_M_SC_REQ;
  assign M_SC_B_send[0] = m19_b_node_M_SC_SEND;
  assign M_SC_R_info[0] = m19_r_node_M_SC_INFO;
  assign M_SC_R_payld[54:0] = m19_r_node_M_SC_PAYLD;
  assign M_SC_R_req[0] = m19_r_node_M_SC_REQ;
  assign M_SC_R_send[0] = m19_r_node_M_SC_SEND;
  assign M_SC_W_info[0] = m19_w_node_M_SC_INFO;
  assign M_SC_W_payld[68:0] = m19_w_node_M_SC_PAYLD;
  assign M_SC_W_req[0] = m19_w_node_M_SC_REQ;
  assign M_SC_W_send[0] = m19_w_node_M_SC_SEND;
  assign S_SC_AR_1_INFO = S_SC_AR_info[0];
  assign S_SC_AR_1_PAYLD = S_SC_AR_payld[181:0];
  assign S_SC_AR_1_REQ = S_SC_AR_req[0];
  assign S_SC_AR_1_SEND = S_SC_AR_send[0];
  assign S_SC_AR_recv[0] = S_SC_AR_1_RECV;
  assign S_SC_AW_1_INFO = S_SC_AW_info[0];
  assign S_SC_AW_1_PAYLD = S_SC_AW_payld[181:0];
  assign S_SC_AW_1_REQ = S_SC_AW_req[0];
  assign S_SC_AW_1_SEND = S_SC_AW_send[0];
  assign S_SC_AW_recv[0] = S_SC_AW_1_RECV;
  assign S_SC_B_1_INFO = S_SC_B_info[0];
  assign S_SC_B_1_PAYLD = S_SC_B_payld[8:0];
  assign S_SC_B_1_REQ = S_SC_B_req[0];
  assign S_SC_B_1_SEND = S_SC_B_send[0];
  assign S_SC_B_recv[0] = S_SC_B_1_RECV;
  assign S_SC_R_1_INFO = S_SC_R_info[0];
  assign S_SC_R_1_PAYLD = S_SC_R_payld[54:0];
  assign S_SC_R_1_REQ = S_SC_R_req[0];
  assign S_SC_R_1_SEND = S_SC_R_send[0];
  assign S_SC_R_recv[0] = S_SC_R_1_RECV;
  assign S_SC_W_1_INFO = S_SC_W_info[0];
  assign S_SC_W_1_PAYLD = S_SC_W_payld[68:0];
  assign S_SC_W_1_REQ = S_SC_W_req[0];
  assign S_SC_W_1_SEND = S_SC_W_send[0];
  assign S_SC_W_recv[0] = S_SC_W_1_RECV;
  assign m19_ar_node_M_SC_RECV = M_SC_AR_recv[0];
  assign m19_aw_node_M_SC_RECV = M_SC_AW_recv[0];
  assign m19_b_node_M_SC_RECV = M_SC_B_recv[0];
  assign m19_r_node_M_SC_RECV = M_SC_R_recv[0];
  assign m19_w_node_M_SC_RECV = M_SC_W_recv[0];
  assign m_axi_aclk_1 = m_axi_aclk;
  assign m_axi_aresetn_1 = m_axi_aresetn;
  assign s_axi_aclk_1 = s_axi_aclk;
  assign s_axi_aresetn_1 = s_axi_aresetn;
  bd_afc3_m19arn_0 m19_ar_node
       (.m_sc_aclk(m_axi_aclk_1),
        .m_sc_aresetn(m_axi_aresetn_1),
        .m_sc_info(m19_ar_node_M_SC_INFO),
        .m_sc_payld(m19_ar_node_M_SC_PAYLD),
        .m_sc_recv(m19_ar_node_M_SC_RECV),
        .m_sc_req(m19_ar_node_M_SC_REQ),
        .m_sc_send(m19_ar_node_M_SC_SEND),
        .s_sc_aclk(s_axi_aclk_1),
        .s_sc_aresetn(s_axi_aresetn_1),
        .s_sc_info(S_SC_AR_1_INFO),
        .s_sc_payld(S_SC_AR_1_PAYLD),
        .s_sc_recv(S_SC_AR_1_RECV),
        .s_sc_req(S_SC_AR_1_REQ),
        .s_sc_send(S_SC_AR_1_SEND));
  bd_afc3_m19awn_0 m19_aw_node
       (.m_sc_aclk(m_axi_aclk_1),
        .m_sc_aresetn(m_axi_aresetn_1),
        .m_sc_info(m19_aw_node_M_SC_INFO),
        .m_sc_payld(m19_aw_node_M_SC_PAYLD),
        .m_sc_recv(m19_aw_node_M_SC_RECV),
        .m_sc_req(m19_aw_node_M_SC_REQ),
        .m_sc_send(m19_aw_node_M_SC_SEND),
        .s_sc_aclk(s_axi_aclk_1),
        .s_sc_aresetn(s_axi_aresetn_1),
        .s_sc_info(S_SC_AW_1_INFO),
        .s_sc_payld(S_SC_AW_1_PAYLD),
        .s_sc_recv(S_SC_AW_1_RECV),
        .s_sc_req(S_SC_AW_1_REQ),
        .s_sc_send(S_SC_AW_1_SEND));
  bd_afc3_m19bn_0 m19_b_node
       (.m_sc_aclk(s_axi_aclk_1),
        .m_sc_aresetn(s_axi_aresetn_1),
        .m_sc_info(m19_b_node_M_SC_INFO),
        .m_sc_payld(m19_b_node_M_SC_PAYLD),
        .m_sc_recv(m19_b_node_M_SC_RECV),
        .m_sc_req(m19_b_node_M_SC_REQ),
        .m_sc_send(m19_b_node_M_SC_SEND),
        .s_sc_aclk(m_axi_aclk_1),
        .s_sc_aresetn(m_axi_aresetn_1),
        .s_sc_info(S_SC_B_1_INFO),
        .s_sc_payld(S_SC_B_1_PAYLD),
        .s_sc_recv(S_SC_B_1_RECV),
        .s_sc_req(S_SC_B_1_REQ),
        .s_sc_send(S_SC_B_1_SEND));
  bd_afc3_m19rn_0 m19_r_node
       (.m_sc_aclk(s_axi_aclk_1),
        .m_sc_aresetn(s_axi_aresetn_1),
        .m_sc_info(m19_r_node_M_SC_INFO),
        .m_sc_payld(m19_r_node_M_SC_PAYLD),
        .m_sc_recv(m19_r_node_M_SC_RECV),
        .m_sc_req(m19_r_node_M_SC_REQ),
        .m_sc_send(m19_r_node_M_SC_SEND),
        .s_sc_aclk(m_axi_aclk_1),
        .s_sc_aresetn(m_axi_aresetn_1),
        .s_sc_info(S_SC_R_1_INFO),
        .s_sc_payld(S_SC_R_1_PAYLD),
        .s_sc_recv(S_SC_R_1_RECV),
        .s_sc_req(S_SC_R_1_REQ),
        .s_sc_send(S_SC_R_1_SEND));
  bd_afc3_m19wn_0 m19_w_node
       (.m_sc_aclk(m_axi_aclk_1),
        .m_sc_aresetn(m_axi_aresetn_1),
        .m_sc_info(m19_w_node_M_SC_INFO),
        .m_sc_payld(m19_w_node_M_SC_PAYLD),
        .m_sc_recv(m19_w_node_M_SC_RECV),
        .m_sc_req(m19_w_node_M_SC_REQ),
        .m_sc_send(m19_w_node_M_SC_SEND),
        .s_sc_aclk(s_axi_aclk_1),
        .s_sc_aresetn(s_axi_aresetn_1),
        .s_sc_info(S_SC_W_1_INFO),
        .s_sc_payld(S_SC_W_1_PAYLD),
        .s_sc_recv(S_SC_W_1_RECV),
        .s_sc_req(S_SC_W_1_REQ),
        .s_sc_send(S_SC_W_1_SEND));
endmodule

module m20_exit_pipeline_imp_2WR7Y
   (aclk,
    aresetn,
    m_axi_araddr,
    m_axi_arprot,
    m_axi_arready,
    m_axi_arvalid,
    m_axi_awaddr,
    m_axi_awprot,
    m_axi_awready,
    m_axi_awvalid,
    m_axi_bready,
    m_axi_bresp,
    m_axi_bvalid,
    m_axi_rdata,
    m_axi_rready,
    m_axi_rresp,
    m_axi_rvalid,
    m_axi_wdata,
    m_axi_wready,
    m_axi_wstrb,
    m_axi_wvalid,
    s_axi_araddr,
    s_axi_arcache,
    s_axi_arid,
    s_axi_arlen,
    s_axi_arlock,
    s_axi_arprot,
    s_axi_arqos,
    s_axi_arready,
    s_axi_aruser,
    s_axi_arvalid,
    s_axi_awaddr,
    s_axi_awcache,
    s_axi_awid,
    s_axi_awlen,
    s_axi_awlock,
    s_axi_awprot,
    s_axi_awqos,
    s_axi_awready,
    s_axi_awuser,
    s_axi_awvalid,
    s_axi_bid,
    s_axi_bready,
    s_axi_bresp,
    s_axi_buser,
    s_axi_bvalid,
    s_axi_rdata,
    s_axi_rid,
    s_axi_rlast,
    s_axi_rready,
    s_axi_rresp,
    s_axi_ruser,
    s_axi_rvalid,
    s_axi_wdata,
    s_axi_wlast,
    s_axi_wready,
    s_axi_wstrb,
    s_axi_wuser,
    s_axi_wvalid);
  input aclk;
  input aresetn;
  output [4:0]m_axi_araddr;
  output [2:0]m_axi_arprot;
  input m_axi_arready;
  output m_axi_arvalid;
  output [4:0]m_axi_awaddr;
  output [2:0]m_axi_awprot;
  input m_axi_awready;
  output m_axi_awvalid;
  output m_axi_bready;
  input [1:0]m_axi_bresp;
  input m_axi_bvalid;
  input [31:0]m_axi_rdata;
  output m_axi_rready;
  input [1:0]m_axi_rresp;
  input m_axi_rvalid;
  output [31:0]m_axi_wdata;
  input m_axi_wready;
  output [3:0]m_axi_wstrb;
  output m_axi_wvalid;
  input [4:0]s_axi_araddr;
  input [3:0]s_axi_arcache;
  input [2:0]s_axi_arid;
  input [7:0]s_axi_arlen;
  input [0:0]s_axi_arlock;
  input [2:0]s_axi_arprot;
  input [3:0]s_axi_arqos;
  output s_axi_arready;
  input [1023:0]s_axi_aruser;
  input s_axi_arvalid;
  input [4:0]s_axi_awaddr;
  input [3:0]s_axi_awcache;
  input [2:0]s_axi_awid;
  input [7:0]s_axi_awlen;
  input [0:0]s_axi_awlock;
  input [2:0]s_axi_awprot;
  input [3:0]s_axi_awqos;
  output s_axi_awready;
  input [1023:0]s_axi_awuser;
  input s_axi_awvalid;
  output [2:0]s_axi_bid;
  input s_axi_bready;
  output [1:0]s_axi_bresp;
  output [1023:0]s_axi_buser;
  output s_axi_bvalid;
  output [31:0]s_axi_rdata;
  output [2:0]s_axi_rid;
  output s_axi_rlast;
  input s_axi_rready;
  output [1:0]s_axi_rresp;
  output [1023:0]s_axi_ruser;
  output s_axi_rvalid;
  input [31:0]s_axi_wdata;
  input s_axi_wlast;
  output s_axi_wready;
  input [3:0]s_axi_wstrb;
  input [1023:0]s_axi_wuser;
  input s_axi_wvalid;

  wire aclk_1;
  wire aresetn_1;
  wire [4:0]m20_exit_M_AXI_ARADDR;
  wire [2:0]m20_exit_M_AXI_ARPROT;
  wire m20_exit_M_AXI_ARREADY;
  wire m20_exit_M_AXI_ARVALID;
  wire [4:0]m20_exit_M_AXI_AWADDR;
  wire [2:0]m20_exit_M_AXI_AWPROT;
  wire m20_exit_M_AXI_AWREADY;
  wire m20_exit_M_AXI_AWVALID;
  wire m20_exit_M_AXI_BREADY;
  wire [1:0]m20_exit_M_AXI_BRESP;
  wire m20_exit_M_AXI_BVALID;
  wire [31:0]m20_exit_M_AXI_RDATA;
  wire m20_exit_M_AXI_RREADY;
  wire [1:0]m20_exit_M_AXI_RRESP;
  wire m20_exit_M_AXI_RVALID;
  wire [31:0]m20_exit_M_AXI_WDATA;
  wire m20_exit_M_AXI_WREADY;
  wire [3:0]m20_exit_M_AXI_WSTRB;
  wire m20_exit_M_AXI_WVALID;
  wire [4:0]s_axi_1_ARADDR;
  wire [3:0]s_axi_1_ARCACHE;
  wire [2:0]s_axi_1_ARID;
  wire [7:0]s_axi_1_ARLEN;
  wire [0:0]s_axi_1_ARLOCK;
  wire [2:0]s_axi_1_ARPROT;
  wire [3:0]s_axi_1_ARQOS;
  wire s_axi_1_ARREADY;
  wire [1023:0]s_axi_1_ARUSER;
  wire s_axi_1_ARVALID;
  wire [4:0]s_axi_1_AWADDR;
  wire [3:0]s_axi_1_AWCACHE;
  wire [2:0]s_axi_1_AWID;
  wire [7:0]s_axi_1_AWLEN;
  wire [0:0]s_axi_1_AWLOCK;
  wire [2:0]s_axi_1_AWPROT;
  wire [3:0]s_axi_1_AWQOS;
  wire s_axi_1_AWREADY;
  wire [1023:0]s_axi_1_AWUSER;
  wire s_axi_1_AWVALID;
  wire [2:0]s_axi_1_BID;
  wire s_axi_1_BREADY;
  wire [1:0]s_axi_1_BRESP;
  wire [1023:0]s_axi_1_BUSER;
  wire s_axi_1_BVALID;
  wire [31:0]s_axi_1_RDATA;
  wire [2:0]s_axi_1_RID;
  wire s_axi_1_RLAST;
  wire s_axi_1_RREADY;
  wire [1:0]s_axi_1_RRESP;
  wire [1023:0]s_axi_1_RUSER;
  wire s_axi_1_RVALID;
  wire [31:0]s_axi_1_WDATA;
  wire s_axi_1_WLAST;
  wire s_axi_1_WREADY;
  wire [3:0]s_axi_1_WSTRB;
  wire [1023:0]s_axi_1_WUSER;
  wire s_axi_1_WVALID;

  assign aclk_1 = aclk;
  assign aresetn_1 = aresetn;
  assign m20_exit_M_AXI_ARREADY = m_axi_arready;
  assign m20_exit_M_AXI_AWREADY = m_axi_awready;
  assign m20_exit_M_AXI_BRESP = m_axi_bresp[1:0];
  assign m20_exit_M_AXI_BVALID = m_axi_bvalid;
  assign m20_exit_M_AXI_RDATA = m_axi_rdata[31:0];
  assign m20_exit_M_AXI_RRESP = m_axi_rresp[1:0];
  assign m20_exit_M_AXI_RVALID = m_axi_rvalid;
  assign m20_exit_M_AXI_WREADY = m_axi_wready;
  assign m_axi_araddr[4:0] = m20_exit_M_AXI_ARADDR;
  assign m_axi_arprot[2:0] = m20_exit_M_AXI_ARPROT;
  assign m_axi_arvalid = m20_exit_M_AXI_ARVALID;
  assign m_axi_awaddr[4:0] = m20_exit_M_AXI_AWADDR;
  assign m_axi_awprot[2:0] = m20_exit_M_AXI_AWPROT;
  assign m_axi_awvalid = m20_exit_M_AXI_AWVALID;
  assign m_axi_bready = m20_exit_M_AXI_BREADY;
  assign m_axi_rready = m20_exit_M_AXI_RREADY;
  assign m_axi_wdata[31:0] = m20_exit_M_AXI_WDATA;
  assign m_axi_wstrb[3:0] = m20_exit_M_AXI_WSTRB;
  assign m_axi_wvalid = m20_exit_M_AXI_WVALID;
  assign s_axi_1_ARADDR = s_axi_araddr[4:0];
  assign s_axi_1_ARCACHE = s_axi_arcache[3:0];
  assign s_axi_1_ARID = s_axi_arid[2:0];
  assign s_axi_1_ARLEN = s_axi_arlen[7:0];
  assign s_axi_1_ARLOCK = s_axi_arlock[0];
  assign s_axi_1_ARPROT = s_axi_arprot[2:0];
  assign s_axi_1_ARQOS = s_axi_arqos[3:0];
  assign s_axi_1_ARUSER = s_axi_aruser[1023:0];
  assign s_axi_1_ARVALID = s_axi_arvalid;
  assign s_axi_1_AWADDR = s_axi_awaddr[4:0];
  assign s_axi_1_AWCACHE = s_axi_awcache[3:0];
  assign s_axi_1_AWID = s_axi_awid[2:0];
  assign s_axi_1_AWLEN = s_axi_awlen[7:0];
  assign s_axi_1_AWLOCK = s_axi_awlock[0];
  assign s_axi_1_AWPROT = s_axi_awprot[2:0];
  assign s_axi_1_AWQOS = s_axi_awqos[3:0];
  assign s_axi_1_AWUSER = s_axi_awuser[1023:0];
  assign s_axi_1_AWVALID = s_axi_awvalid;
  assign s_axi_1_BREADY = s_axi_bready;
  assign s_axi_1_RREADY = s_axi_rready;
  assign s_axi_1_WDATA = s_axi_wdata[31:0];
  assign s_axi_1_WLAST = s_axi_wlast;
  assign s_axi_1_WSTRB = s_axi_wstrb[3:0];
  assign s_axi_1_WUSER = s_axi_wuser[1023:0];
  assign s_axi_1_WVALID = s_axi_wvalid;
  assign s_axi_arready = s_axi_1_ARREADY;
  assign s_axi_awready = s_axi_1_AWREADY;
  assign s_axi_bid[2:0] = s_axi_1_BID;
  assign s_axi_bresp[1:0] = s_axi_1_BRESP;
  assign s_axi_buser[1023:0] = s_axi_1_BUSER;
  assign s_axi_bvalid = s_axi_1_BVALID;
  assign s_axi_rdata[31:0] = s_axi_1_RDATA;
  assign s_axi_rid[2:0] = s_axi_1_RID;
  assign s_axi_rlast = s_axi_1_RLAST;
  assign s_axi_rresp[1:0] = s_axi_1_RRESP;
  assign s_axi_ruser[1023:0] = s_axi_1_RUSER;
  assign s_axi_rvalid = s_axi_1_RVALID;
  assign s_axi_wready = s_axi_1_WREADY;
  bd_afc3_m20e_0 m20_exit
       (.aclk(aclk_1),
        .aresetn(aresetn_1),
        .m_axi_araddr(m20_exit_M_AXI_ARADDR),
        .m_axi_arprot(m20_exit_M_AXI_ARPROT),
        .m_axi_arready(m20_exit_M_AXI_ARREADY),
        .m_axi_arvalid(m20_exit_M_AXI_ARVALID),
        .m_axi_awaddr(m20_exit_M_AXI_AWADDR),
        .m_axi_awprot(m20_exit_M_AXI_AWPROT),
        .m_axi_awready(m20_exit_M_AXI_AWREADY),
        .m_axi_awvalid(m20_exit_M_AXI_AWVALID),
        .m_axi_bready(m20_exit_M_AXI_BREADY),
        .m_axi_bresp(m20_exit_M_AXI_BRESP),
        .m_axi_bvalid(m20_exit_M_AXI_BVALID),
        .m_axi_rdata(m20_exit_M_AXI_RDATA),
        .m_axi_rready(m20_exit_M_AXI_RREADY),
        .m_axi_rresp(m20_exit_M_AXI_RRESP),
        .m_axi_rvalid(m20_exit_M_AXI_RVALID),
        .m_axi_wdata(m20_exit_M_AXI_WDATA),
        .m_axi_wready(m20_exit_M_AXI_WREADY),
        .m_axi_wstrb(m20_exit_M_AXI_WSTRB),
        .m_axi_wvalid(m20_exit_M_AXI_WVALID),
        .s_axi_araddr(s_axi_1_ARADDR),
        .s_axi_arcache(s_axi_1_ARCACHE),
        .s_axi_arid(s_axi_1_ARID),
        .s_axi_arlen(s_axi_1_ARLEN),
        .s_axi_arlock(s_axi_1_ARLOCK),
        .s_axi_arprot(s_axi_1_ARPROT),
        .s_axi_arqos(s_axi_1_ARQOS),
        .s_axi_arready(s_axi_1_ARREADY),
        .s_axi_aruser(s_axi_1_ARUSER),
        .s_axi_arvalid(s_axi_1_ARVALID),
        .s_axi_awaddr(s_axi_1_AWADDR),
        .s_axi_awcache(s_axi_1_AWCACHE),
        .s_axi_awid(s_axi_1_AWID),
        .s_axi_awlen(s_axi_1_AWLEN),
        .s_axi_awlock(s_axi_1_AWLOCK),
        .s_axi_awprot(s_axi_1_AWPROT),
        .s_axi_awqos(s_axi_1_AWQOS),
        .s_axi_awready(s_axi_1_AWREADY),
        .s_axi_awuser(s_axi_1_AWUSER),
        .s_axi_awvalid(s_axi_1_AWVALID),
        .s_axi_bid(s_axi_1_BID),
        .s_axi_bready(s_axi_1_BREADY),
        .s_axi_bresp(s_axi_1_BRESP),
        .s_axi_buser(s_axi_1_BUSER),
        .s_axi_bvalid(s_axi_1_BVALID),
        .s_axi_rdata(s_axi_1_RDATA),
        .s_axi_rid(s_axi_1_RID),
        .s_axi_rlast(s_axi_1_RLAST),
        .s_axi_rready(s_axi_1_RREADY),
        .s_axi_rresp(s_axi_1_RRESP),
        .s_axi_ruser(s_axi_1_RUSER),
        .s_axi_rvalid(s_axi_1_RVALID),
        .s_axi_wdata(s_axi_1_WDATA),
        .s_axi_wlast(s_axi_1_WLAST),
        .s_axi_wready(s_axi_1_WREADY),
        .s_axi_wstrb(s_axi_1_WSTRB),
        .s_axi_wuser(s_axi_1_WUSER),
        .s_axi_wvalid(s_axi_1_WVALID));
endmodule

module m20_nodes_imp_5Y47FE
   (M_SC_AR_info,
    M_SC_AR_payld,
    M_SC_AR_recv,
    M_SC_AR_req,
    M_SC_AR_send,
    M_SC_AW_info,
    M_SC_AW_payld,
    M_SC_AW_recv,
    M_SC_AW_req,
    M_SC_AW_send,
    M_SC_B_info,
    M_SC_B_payld,
    M_SC_B_recv,
    M_SC_B_req,
    M_SC_B_send,
    M_SC_R_info,
    M_SC_R_payld,
    M_SC_R_recv,
    M_SC_R_req,
    M_SC_R_send,
    M_SC_W_info,
    M_SC_W_payld,
    M_SC_W_recv,
    M_SC_W_req,
    M_SC_W_send,
    S_SC_AR_info,
    S_SC_AR_payld,
    S_SC_AR_recv,
    S_SC_AR_req,
    S_SC_AR_send,
    S_SC_AW_info,
    S_SC_AW_payld,
    S_SC_AW_recv,
    S_SC_AW_req,
    S_SC_AW_send,
    S_SC_B_info,
    S_SC_B_payld,
    S_SC_B_recv,
    S_SC_B_req,
    S_SC_B_send,
    S_SC_R_info,
    S_SC_R_payld,
    S_SC_R_recv,
    S_SC_R_req,
    S_SC_R_send,
    S_SC_W_info,
    S_SC_W_payld,
    S_SC_W_recv,
    S_SC_W_req,
    S_SC_W_send,
    m_axi_aclk,
    m_axi_aresetn,
    s_axi_aclk,
    s_axi_aresetn);
  output [0:0]M_SC_AR_info;
  output [181:0]M_SC_AR_payld;
  input [0:0]M_SC_AR_recv;
  output [0:0]M_SC_AR_req;
  output [0:0]M_SC_AR_send;
  output [0:0]M_SC_AW_info;
  output [181:0]M_SC_AW_payld;
  input [0:0]M_SC_AW_recv;
  output [0:0]M_SC_AW_req;
  output [0:0]M_SC_AW_send;
  output [0:0]M_SC_B_info;
  output [8:0]M_SC_B_payld;
  input [0:0]M_SC_B_recv;
  output [0:0]M_SC_B_req;
  output [0:0]M_SC_B_send;
  output [0:0]M_SC_R_info;
  output [54:0]M_SC_R_payld;
  input [0:0]M_SC_R_recv;
  output [0:0]M_SC_R_req;
  output [0:0]M_SC_R_send;
  output [0:0]M_SC_W_info;
  output [68:0]M_SC_W_payld;
  input [0:0]M_SC_W_recv;
  output [0:0]M_SC_W_req;
  output [0:0]M_SC_W_send;
  input [0:0]S_SC_AR_info;
  input [181:0]S_SC_AR_payld;
  output [0:0]S_SC_AR_recv;
  input [0:0]S_SC_AR_req;
  input [0:0]S_SC_AR_send;
  input [0:0]S_SC_AW_info;
  input [181:0]S_SC_AW_payld;
  output [0:0]S_SC_AW_recv;
  input [0:0]S_SC_AW_req;
  input [0:0]S_SC_AW_send;
  input [0:0]S_SC_B_info;
  input [8:0]S_SC_B_payld;
  output [0:0]S_SC_B_recv;
  input [0:0]S_SC_B_req;
  input [0:0]S_SC_B_send;
  input [0:0]S_SC_R_info;
  input [54:0]S_SC_R_payld;
  output [0:0]S_SC_R_recv;
  input [0:0]S_SC_R_req;
  input [0:0]S_SC_R_send;
  input [0:0]S_SC_W_info;
  input [68:0]S_SC_W_payld;
  output [0:0]S_SC_W_recv;
  input [0:0]S_SC_W_req;
  input [0:0]S_SC_W_send;
  input m_axi_aclk;
  input m_axi_aresetn;
  input s_axi_aclk;
  input s_axi_aresetn;

  wire [0:0]S_SC_AR_1_INFO;
  wire [181:0]S_SC_AR_1_PAYLD;
  wire [0:0]S_SC_AR_1_RECV;
  wire [0:0]S_SC_AR_1_REQ;
  wire [0:0]S_SC_AR_1_SEND;
  wire [0:0]S_SC_AW_1_INFO;
  wire [181:0]S_SC_AW_1_PAYLD;
  wire [0:0]S_SC_AW_1_RECV;
  wire [0:0]S_SC_AW_1_REQ;
  wire [0:0]S_SC_AW_1_SEND;
  wire [0:0]S_SC_B_1_INFO;
  wire [8:0]S_SC_B_1_PAYLD;
  wire [0:0]S_SC_B_1_RECV;
  wire [0:0]S_SC_B_1_REQ;
  wire [0:0]S_SC_B_1_SEND;
  wire [0:0]S_SC_R_1_INFO;
  wire [54:0]S_SC_R_1_PAYLD;
  wire [0:0]S_SC_R_1_RECV;
  wire [0:0]S_SC_R_1_REQ;
  wire [0:0]S_SC_R_1_SEND;
  wire [0:0]S_SC_W_1_INFO;
  wire [68:0]S_SC_W_1_PAYLD;
  wire [0:0]S_SC_W_1_RECV;
  wire [0:0]S_SC_W_1_REQ;
  wire [0:0]S_SC_W_1_SEND;
  wire [0:0]m20_ar_node_M_SC_INFO;
  wire [181:0]m20_ar_node_M_SC_PAYLD;
  wire [0:0]m20_ar_node_M_SC_RECV;
  wire [0:0]m20_ar_node_M_SC_REQ;
  wire [0:0]m20_ar_node_M_SC_SEND;
  wire [0:0]m20_aw_node_M_SC_INFO;
  wire [181:0]m20_aw_node_M_SC_PAYLD;
  wire [0:0]m20_aw_node_M_SC_RECV;
  wire [0:0]m20_aw_node_M_SC_REQ;
  wire [0:0]m20_aw_node_M_SC_SEND;
  wire [0:0]m20_b_node_M_SC_INFO;
  wire [8:0]m20_b_node_M_SC_PAYLD;
  wire [0:0]m20_b_node_M_SC_RECV;
  wire [0:0]m20_b_node_M_SC_REQ;
  wire [0:0]m20_b_node_M_SC_SEND;
  wire [0:0]m20_r_node_M_SC_INFO;
  wire [54:0]m20_r_node_M_SC_PAYLD;
  wire [0:0]m20_r_node_M_SC_RECV;
  wire [0:0]m20_r_node_M_SC_REQ;
  wire [0:0]m20_r_node_M_SC_SEND;
  wire [0:0]m20_w_node_M_SC_INFO;
  wire [68:0]m20_w_node_M_SC_PAYLD;
  wire [0:0]m20_w_node_M_SC_RECV;
  wire [0:0]m20_w_node_M_SC_REQ;
  wire [0:0]m20_w_node_M_SC_SEND;
  wire m_axi_aclk_1;
  wire m_axi_aresetn_1;
  wire s_axi_aclk_1;
  wire s_axi_aresetn_1;

  assign M_SC_AR_info[0] = m20_ar_node_M_SC_INFO;
  assign M_SC_AR_payld[181:0] = m20_ar_node_M_SC_PAYLD;
  assign M_SC_AR_req[0] = m20_ar_node_M_SC_REQ;
  assign M_SC_AR_send[0] = m20_ar_node_M_SC_SEND;
  assign M_SC_AW_info[0] = m20_aw_node_M_SC_INFO;
  assign M_SC_AW_payld[181:0] = m20_aw_node_M_SC_PAYLD;
  assign M_SC_AW_req[0] = m20_aw_node_M_SC_REQ;
  assign M_SC_AW_send[0] = m20_aw_node_M_SC_SEND;
  assign M_SC_B_info[0] = m20_b_node_M_SC_INFO;
  assign M_SC_B_payld[8:0] = m20_b_node_M_SC_PAYLD;
  assign M_SC_B_req[0] = m20_b_node_M_SC_REQ;
  assign M_SC_B_send[0] = m20_b_node_M_SC_SEND;
  assign M_SC_R_info[0] = m20_r_node_M_SC_INFO;
  assign M_SC_R_payld[54:0] = m20_r_node_M_SC_PAYLD;
  assign M_SC_R_req[0] = m20_r_node_M_SC_REQ;
  assign M_SC_R_send[0] = m20_r_node_M_SC_SEND;
  assign M_SC_W_info[0] = m20_w_node_M_SC_INFO;
  assign M_SC_W_payld[68:0] = m20_w_node_M_SC_PAYLD;
  assign M_SC_W_req[0] = m20_w_node_M_SC_REQ;
  assign M_SC_W_send[0] = m20_w_node_M_SC_SEND;
  assign S_SC_AR_1_INFO = S_SC_AR_info[0];
  assign S_SC_AR_1_PAYLD = S_SC_AR_payld[181:0];
  assign S_SC_AR_1_REQ = S_SC_AR_req[0];
  assign S_SC_AR_1_SEND = S_SC_AR_send[0];
  assign S_SC_AR_recv[0] = S_SC_AR_1_RECV;
  assign S_SC_AW_1_INFO = S_SC_AW_info[0];
  assign S_SC_AW_1_PAYLD = S_SC_AW_payld[181:0];
  assign S_SC_AW_1_REQ = S_SC_AW_req[0];
  assign S_SC_AW_1_SEND = S_SC_AW_send[0];
  assign S_SC_AW_recv[0] = S_SC_AW_1_RECV;
  assign S_SC_B_1_INFO = S_SC_B_info[0];
  assign S_SC_B_1_PAYLD = S_SC_B_payld[8:0];
  assign S_SC_B_1_REQ = S_SC_B_req[0];
  assign S_SC_B_1_SEND = S_SC_B_send[0];
  assign S_SC_B_recv[0] = S_SC_B_1_RECV;
  assign S_SC_R_1_INFO = S_SC_R_info[0];
  assign S_SC_R_1_PAYLD = S_SC_R_payld[54:0];
  assign S_SC_R_1_REQ = S_SC_R_req[0];
  assign S_SC_R_1_SEND = S_SC_R_send[0];
  assign S_SC_R_recv[0] = S_SC_R_1_RECV;
  assign S_SC_W_1_INFO = S_SC_W_info[0];
  assign S_SC_W_1_PAYLD = S_SC_W_payld[68:0];
  assign S_SC_W_1_REQ = S_SC_W_req[0];
  assign S_SC_W_1_SEND = S_SC_W_send[0];
  assign S_SC_W_recv[0] = S_SC_W_1_RECV;
  assign m20_ar_node_M_SC_RECV = M_SC_AR_recv[0];
  assign m20_aw_node_M_SC_RECV = M_SC_AW_recv[0];
  assign m20_b_node_M_SC_RECV = M_SC_B_recv[0];
  assign m20_r_node_M_SC_RECV = M_SC_R_recv[0];
  assign m20_w_node_M_SC_RECV = M_SC_W_recv[0];
  assign m_axi_aclk_1 = m_axi_aclk;
  assign m_axi_aresetn_1 = m_axi_aresetn;
  assign s_axi_aclk_1 = s_axi_aclk;
  assign s_axi_aresetn_1 = s_axi_aresetn;
  bd_afc3_m20arn_0 m20_ar_node
       (.m_sc_aclk(m_axi_aclk_1),
        .m_sc_aresetn(m_axi_aresetn_1),
        .m_sc_info(m20_ar_node_M_SC_INFO),
        .m_sc_payld(m20_ar_node_M_SC_PAYLD),
        .m_sc_recv(m20_ar_node_M_SC_RECV),
        .m_sc_req(m20_ar_node_M_SC_REQ),
        .m_sc_send(m20_ar_node_M_SC_SEND),
        .s_sc_aclk(s_axi_aclk_1),
        .s_sc_aresetn(s_axi_aresetn_1),
        .s_sc_info(S_SC_AR_1_INFO),
        .s_sc_payld(S_SC_AR_1_PAYLD),
        .s_sc_recv(S_SC_AR_1_RECV),
        .s_sc_req(S_SC_AR_1_REQ),
        .s_sc_send(S_SC_AR_1_SEND));
  bd_afc3_m20awn_0 m20_aw_node
       (.m_sc_aclk(m_axi_aclk_1),
        .m_sc_aresetn(m_axi_aresetn_1),
        .m_sc_info(m20_aw_node_M_SC_INFO),
        .m_sc_payld(m20_aw_node_M_SC_PAYLD),
        .m_sc_recv(m20_aw_node_M_SC_RECV),
        .m_sc_req(m20_aw_node_M_SC_REQ),
        .m_sc_send(m20_aw_node_M_SC_SEND),
        .s_sc_aclk(s_axi_aclk_1),
        .s_sc_aresetn(s_axi_aresetn_1),
        .s_sc_info(S_SC_AW_1_INFO),
        .s_sc_payld(S_SC_AW_1_PAYLD),
        .s_sc_recv(S_SC_AW_1_RECV),
        .s_sc_req(S_SC_AW_1_REQ),
        .s_sc_send(S_SC_AW_1_SEND));
  bd_afc3_m20bn_0 m20_b_node
       (.m_sc_aclk(s_axi_aclk_1),
        .m_sc_aresetn(s_axi_aresetn_1),
        .m_sc_info(m20_b_node_M_SC_INFO),
        .m_sc_payld(m20_b_node_M_SC_PAYLD),
        .m_sc_recv(m20_b_node_M_SC_RECV),
        .m_sc_req(m20_b_node_M_SC_REQ),
        .m_sc_send(m20_b_node_M_SC_SEND),
        .s_sc_aclk(m_axi_aclk_1),
        .s_sc_aresetn(m_axi_aresetn_1),
        .s_sc_info(S_SC_B_1_INFO),
        .s_sc_payld(S_SC_B_1_PAYLD),
        .s_sc_recv(S_SC_B_1_RECV),
        .s_sc_req(S_SC_B_1_REQ),
        .s_sc_send(S_SC_B_1_SEND));
  bd_afc3_m20rn_0 m20_r_node
       (.m_sc_aclk(s_axi_aclk_1),
        .m_sc_aresetn(s_axi_aresetn_1),
        .m_sc_info(m20_r_node_M_SC_INFO),
        .m_sc_payld(m20_r_node_M_SC_PAYLD),
        .m_sc_recv(m20_r_node_M_SC_RECV),
        .m_sc_req(m20_r_node_M_SC_REQ),
        .m_sc_send(m20_r_node_M_SC_SEND),
        .s_sc_aclk(m_axi_aclk_1),
        .s_sc_aresetn(m_axi_aresetn_1),
        .s_sc_info(S_SC_R_1_INFO),
        .s_sc_payld(S_SC_R_1_PAYLD),
        .s_sc_recv(S_SC_R_1_RECV),
        .s_sc_req(S_SC_R_1_REQ),
        .s_sc_send(S_SC_R_1_SEND));
  bd_afc3_m20wn_0 m20_w_node
       (.m_sc_aclk(m_axi_aclk_1),
        .m_sc_aresetn(m_axi_aresetn_1),
        .m_sc_info(m20_w_node_M_SC_INFO),
        .m_sc_payld(m20_w_node_M_SC_PAYLD),
        .m_sc_recv(m20_w_node_M_SC_RECV),
        .m_sc_req(m20_w_node_M_SC_REQ),
        .m_sc_send(m20_w_node_M_SC_SEND),
        .s_sc_aclk(s_axi_aclk_1),
        .s_sc_aresetn(s_axi_aresetn_1),
        .s_sc_info(S_SC_W_1_INFO),
        .s_sc_payld(S_SC_W_1_PAYLD),
        .s_sc_recv(S_SC_W_1_RECV),
        .s_sc_req(S_SC_W_1_REQ),
        .s_sc_send(S_SC_W_1_SEND));
endmodule

module m21_exit_pipeline_imp_6HLO9A
   (aclk,
    aresetn,
    m_axi_araddr,
    m_axi_arprot,
    m_axi_arready,
    m_axi_arvalid,
    m_axi_awaddr,
    m_axi_awprot,
    m_axi_awready,
    m_axi_awvalid,
    m_axi_bready,
    m_axi_bresp,
    m_axi_bvalid,
    m_axi_rdata,
    m_axi_rready,
    m_axi_rresp,
    m_axi_rvalid,
    m_axi_wdata,
    m_axi_wready,
    m_axi_wstrb,
    m_axi_wvalid,
    s_axi_araddr,
    s_axi_arcache,
    s_axi_arid,
    s_axi_arlen,
    s_axi_arlock,
    s_axi_arprot,
    s_axi_arqos,
    s_axi_arready,
    s_axi_aruser,
    s_axi_arvalid,
    s_axi_awaddr,
    s_axi_awcache,
    s_axi_awid,
    s_axi_awlen,
    s_axi_awlock,
    s_axi_awprot,
    s_axi_awqos,
    s_axi_awready,
    s_axi_awuser,
    s_axi_awvalid,
    s_axi_bid,
    s_axi_bready,
    s_axi_bresp,
    s_axi_buser,
    s_axi_bvalid,
    s_axi_rdata,
    s_axi_rid,
    s_axi_rlast,
    s_axi_rready,
    s_axi_rresp,
    s_axi_ruser,
    s_axi_rvalid,
    s_axi_wdata,
    s_axi_wlast,
    s_axi_wready,
    s_axi_wstrb,
    s_axi_wuser,
    s_axi_wvalid);
  input aclk;
  input aresetn;
  output [4:0]m_axi_araddr;
  output [2:0]m_axi_arprot;
  input m_axi_arready;
  output m_axi_arvalid;
  output [4:0]m_axi_awaddr;
  output [2:0]m_axi_awprot;
  input m_axi_awready;
  output m_axi_awvalid;
  output m_axi_bready;
  input [1:0]m_axi_bresp;
  input m_axi_bvalid;
  input [31:0]m_axi_rdata;
  output m_axi_rready;
  input [1:0]m_axi_rresp;
  input m_axi_rvalid;
  output [31:0]m_axi_wdata;
  input m_axi_wready;
  output [3:0]m_axi_wstrb;
  output m_axi_wvalid;
  input [4:0]s_axi_araddr;
  input [3:0]s_axi_arcache;
  input [2:0]s_axi_arid;
  input [7:0]s_axi_arlen;
  input [0:0]s_axi_arlock;
  input [2:0]s_axi_arprot;
  input [3:0]s_axi_arqos;
  output s_axi_arready;
  input [1023:0]s_axi_aruser;
  input s_axi_arvalid;
  input [4:0]s_axi_awaddr;
  input [3:0]s_axi_awcache;
  input [2:0]s_axi_awid;
  input [7:0]s_axi_awlen;
  input [0:0]s_axi_awlock;
  input [2:0]s_axi_awprot;
  input [3:0]s_axi_awqos;
  output s_axi_awready;
  input [1023:0]s_axi_awuser;
  input s_axi_awvalid;
  output [2:0]s_axi_bid;
  input s_axi_bready;
  output [1:0]s_axi_bresp;
  output [1023:0]s_axi_buser;
  output s_axi_bvalid;
  output [31:0]s_axi_rdata;
  output [2:0]s_axi_rid;
  output s_axi_rlast;
  input s_axi_rready;
  output [1:0]s_axi_rresp;
  output [1023:0]s_axi_ruser;
  output s_axi_rvalid;
  input [31:0]s_axi_wdata;
  input s_axi_wlast;
  output s_axi_wready;
  input [3:0]s_axi_wstrb;
  input [1023:0]s_axi_wuser;
  input s_axi_wvalid;

  wire aclk_1;
  wire aresetn_1;
  wire [4:0]m21_exit_M_AXI_ARADDR;
  wire [2:0]m21_exit_M_AXI_ARPROT;
  wire m21_exit_M_AXI_ARREADY;
  wire m21_exit_M_AXI_ARVALID;
  wire [4:0]m21_exit_M_AXI_AWADDR;
  wire [2:0]m21_exit_M_AXI_AWPROT;
  wire m21_exit_M_AXI_AWREADY;
  wire m21_exit_M_AXI_AWVALID;
  wire m21_exit_M_AXI_BREADY;
  wire [1:0]m21_exit_M_AXI_BRESP;
  wire m21_exit_M_AXI_BVALID;
  wire [31:0]m21_exit_M_AXI_RDATA;
  wire m21_exit_M_AXI_RREADY;
  wire [1:0]m21_exit_M_AXI_RRESP;
  wire m21_exit_M_AXI_RVALID;
  wire [31:0]m21_exit_M_AXI_WDATA;
  wire m21_exit_M_AXI_WREADY;
  wire [3:0]m21_exit_M_AXI_WSTRB;
  wire m21_exit_M_AXI_WVALID;
  wire [4:0]s_axi_1_ARADDR;
  wire [3:0]s_axi_1_ARCACHE;
  wire [2:0]s_axi_1_ARID;
  wire [7:0]s_axi_1_ARLEN;
  wire [0:0]s_axi_1_ARLOCK;
  wire [2:0]s_axi_1_ARPROT;
  wire [3:0]s_axi_1_ARQOS;
  wire s_axi_1_ARREADY;
  wire [1023:0]s_axi_1_ARUSER;
  wire s_axi_1_ARVALID;
  wire [4:0]s_axi_1_AWADDR;
  wire [3:0]s_axi_1_AWCACHE;
  wire [2:0]s_axi_1_AWID;
  wire [7:0]s_axi_1_AWLEN;
  wire [0:0]s_axi_1_AWLOCK;
  wire [2:0]s_axi_1_AWPROT;
  wire [3:0]s_axi_1_AWQOS;
  wire s_axi_1_AWREADY;
  wire [1023:0]s_axi_1_AWUSER;
  wire s_axi_1_AWVALID;
  wire [2:0]s_axi_1_BID;
  wire s_axi_1_BREADY;
  wire [1:0]s_axi_1_BRESP;
  wire [1023:0]s_axi_1_BUSER;
  wire s_axi_1_BVALID;
  wire [31:0]s_axi_1_RDATA;
  wire [2:0]s_axi_1_RID;
  wire s_axi_1_RLAST;
  wire s_axi_1_RREADY;
  wire [1:0]s_axi_1_RRESP;
  wire [1023:0]s_axi_1_RUSER;
  wire s_axi_1_RVALID;
  wire [31:0]s_axi_1_WDATA;
  wire s_axi_1_WLAST;
  wire s_axi_1_WREADY;
  wire [3:0]s_axi_1_WSTRB;
  wire [1023:0]s_axi_1_WUSER;
  wire s_axi_1_WVALID;

  assign aclk_1 = aclk;
  assign aresetn_1 = aresetn;
  assign m21_exit_M_AXI_ARREADY = m_axi_arready;
  assign m21_exit_M_AXI_AWREADY = m_axi_awready;
  assign m21_exit_M_AXI_BRESP = m_axi_bresp[1:0];
  assign m21_exit_M_AXI_BVALID = m_axi_bvalid;
  assign m21_exit_M_AXI_RDATA = m_axi_rdata[31:0];
  assign m21_exit_M_AXI_RRESP = m_axi_rresp[1:0];
  assign m21_exit_M_AXI_RVALID = m_axi_rvalid;
  assign m21_exit_M_AXI_WREADY = m_axi_wready;
  assign m_axi_araddr[4:0] = m21_exit_M_AXI_ARADDR;
  assign m_axi_arprot[2:0] = m21_exit_M_AXI_ARPROT;
  assign m_axi_arvalid = m21_exit_M_AXI_ARVALID;
  assign m_axi_awaddr[4:0] = m21_exit_M_AXI_AWADDR;
  assign m_axi_awprot[2:0] = m21_exit_M_AXI_AWPROT;
  assign m_axi_awvalid = m21_exit_M_AXI_AWVALID;
  assign m_axi_bready = m21_exit_M_AXI_BREADY;
  assign m_axi_rready = m21_exit_M_AXI_RREADY;
  assign m_axi_wdata[31:0] = m21_exit_M_AXI_WDATA;
  assign m_axi_wstrb[3:0] = m21_exit_M_AXI_WSTRB;
  assign m_axi_wvalid = m21_exit_M_AXI_WVALID;
  assign s_axi_1_ARADDR = s_axi_araddr[4:0];
  assign s_axi_1_ARCACHE = s_axi_arcache[3:0];
  assign s_axi_1_ARID = s_axi_arid[2:0];
  assign s_axi_1_ARLEN = s_axi_arlen[7:0];
  assign s_axi_1_ARLOCK = s_axi_arlock[0];
  assign s_axi_1_ARPROT = s_axi_arprot[2:0];
  assign s_axi_1_ARQOS = s_axi_arqos[3:0];
  assign s_axi_1_ARUSER = s_axi_aruser[1023:0];
  assign s_axi_1_ARVALID = s_axi_arvalid;
  assign s_axi_1_AWADDR = s_axi_awaddr[4:0];
  assign s_axi_1_AWCACHE = s_axi_awcache[3:0];
  assign s_axi_1_AWID = s_axi_awid[2:0];
  assign s_axi_1_AWLEN = s_axi_awlen[7:0];
  assign s_axi_1_AWLOCK = s_axi_awlock[0];
  assign s_axi_1_AWPROT = s_axi_awprot[2:0];
  assign s_axi_1_AWQOS = s_axi_awqos[3:0];
  assign s_axi_1_AWUSER = s_axi_awuser[1023:0];
  assign s_axi_1_AWVALID = s_axi_awvalid;
  assign s_axi_1_BREADY = s_axi_bready;
  assign s_axi_1_RREADY = s_axi_rready;
  assign s_axi_1_WDATA = s_axi_wdata[31:0];
  assign s_axi_1_WLAST = s_axi_wlast;
  assign s_axi_1_WSTRB = s_axi_wstrb[3:0];
  assign s_axi_1_WUSER = s_axi_wuser[1023:0];
  assign s_axi_1_WVALID = s_axi_wvalid;
  assign s_axi_arready = s_axi_1_ARREADY;
  assign s_axi_awready = s_axi_1_AWREADY;
  assign s_axi_bid[2:0] = s_axi_1_BID;
  assign s_axi_bresp[1:0] = s_axi_1_BRESP;
  assign s_axi_buser[1023:0] = s_axi_1_BUSER;
  assign s_axi_bvalid = s_axi_1_BVALID;
  assign s_axi_rdata[31:0] = s_axi_1_RDATA;
  assign s_axi_rid[2:0] = s_axi_1_RID;
  assign s_axi_rlast = s_axi_1_RLAST;
  assign s_axi_rresp[1:0] = s_axi_1_RRESP;
  assign s_axi_ruser[1023:0] = s_axi_1_RUSER;
  assign s_axi_rvalid = s_axi_1_RVALID;
  assign s_axi_wready = s_axi_1_WREADY;
  bd_afc3_m21e_0 m21_exit
       (.aclk(aclk_1),
        .aresetn(aresetn_1),
        .m_axi_araddr(m21_exit_M_AXI_ARADDR),
        .m_axi_arprot(m21_exit_M_AXI_ARPROT),
        .m_axi_arready(m21_exit_M_AXI_ARREADY),
        .m_axi_arvalid(m21_exit_M_AXI_ARVALID),
        .m_axi_awaddr(m21_exit_M_AXI_AWADDR),
        .m_axi_awprot(m21_exit_M_AXI_AWPROT),
        .m_axi_awready(m21_exit_M_AXI_AWREADY),
        .m_axi_awvalid(m21_exit_M_AXI_AWVALID),
        .m_axi_bready(m21_exit_M_AXI_BREADY),
        .m_axi_bresp(m21_exit_M_AXI_BRESP),
        .m_axi_bvalid(m21_exit_M_AXI_BVALID),
        .m_axi_rdata(m21_exit_M_AXI_RDATA),
        .m_axi_rready(m21_exit_M_AXI_RREADY),
        .m_axi_rresp(m21_exit_M_AXI_RRESP),
        .m_axi_rvalid(m21_exit_M_AXI_RVALID),
        .m_axi_wdata(m21_exit_M_AXI_WDATA),
        .m_axi_wready(m21_exit_M_AXI_WREADY),
        .m_axi_wstrb(m21_exit_M_AXI_WSTRB),
        .m_axi_wvalid(m21_exit_M_AXI_WVALID),
        .s_axi_araddr(s_axi_1_ARADDR),
        .s_axi_arcache(s_axi_1_ARCACHE),
        .s_axi_arid(s_axi_1_ARID),
        .s_axi_arlen(s_axi_1_ARLEN),
        .s_axi_arlock(s_axi_1_ARLOCK),
        .s_axi_arprot(s_axi_1_ARPROT),
        .s_axi_arqos(s_axi_1_ARQOS),
        .s_axi_arready(s_axi_1_ARREADY),
        .s_axi_aruser(s_axi_1_ARUSER),
        .s_axi_arvalid(s_axi_1_ARVALID),
        .s_axi_awaddr(s_axi_1_AWADDR),
        .s_axi_awcache(s_axi_1_AWCACHE),
        .s_axi_awid(s_axi_1_AWID),
        .s_axi_awlen(s_axi_1_AWLEN),
        .s_axi_awlock(s_axi_1_AWLOCK),
        .s_axi_awprot(s_axi_1_AWPROT),
        .s_axi_awqos(s_axi_1_AWQOS),
        .s_axi_awready(s_axi_1_AWREADY),
        .s_axi_awuser(s_axi_1_AWUSER),
        .s_axi_awvalid(s_axi_1_AWVALID),
        .s_axi_bid(s_axi_1_BID),
        .s_axi_bready(s_axi_1_BREADY),
        .s_axi_bresp(s_axi_1_BRESP),
        .s_axi_buser(s_axi_1_BUSER),
        .s_axi_bvalid(s_axi_1_BVALID),
        .s_axi_rdata(s_axi_1_RDATA),
        .s_axi_rid(s_axi_1_RID),
        .s_axi_rlast(s_axi_1_RLAST),
        .s_axi_rready(s_axi_1_RREADY),
        .s_axi_rresp(s_axi_1_RRESP),
        .s_axi_ruser(s_axi_1_RUSER),
        .s_axi_rvalid(s_axi_1_RVALID),
        .s_axi_wdata(s_axi_1_WDATA),
        .s_axi_wlast(s_axi_1_WLAST),
        .s_axi_wready(s_axi_1_WREADY),
        .s_axi_wstrb(s_axi_1_WSTRB),
        .s_axi_wuser(s_axi_1_WUSER),
        .s_axi_wvalid(s_axi_1_WVALID));
endmodule

module m21_nodes_imp_11U89V0
   (M_SC_AR_info,
    M_SC_AR_payld,
    M_SC_AR_recv,
    M_SC_AR_req,
    M_SC_AR_send,
    M_SC_AW_info,
    M_SC_AW_payld,
    M_SC_AW_recv,
    M_SC_AW_req,
    M_SC_AW_send,
    M_SC_B_info,
    M_SC_B_payld,
    M_SC_B_recv,
    M_SC_B_req,
    M_SC_B_send,
    M_SC_R_info,
    M_SC_R_payld,
    M_SC_R_recv,
    M_SC_R_req,
    M_SC_R_send,
    M_SC_W_info,
    M_SC_W_payld,
    M_SC_W_recv,
    M_SC_W_req,
    M_SC_W_send,
    S_SC_AR_info,
    S_SC_AR_payld,
    S_SC_AR_recv,
    S_SC_AR_req,
    S_SC_AR_send,
    S_SC_AW_info,
    S_SC_AW_payld,
    S_SC_AW_recv,
    S_SC_AW_req,
    S_SC_AW_send,
    S_SC_B_info,
    S_SC_B_payld,
    S_SC_B_recv,
    S_SC_B_req,
    S_SC_B_send,
    S_SC_R_info,
    S_SC_R_payld,
    S_SC_R_recv,
    S_SC_R_req,
    S_SC_R_send,
    S_SC_W_info,
    S_SC_W_payld,
    S_SC_W_recv,
    S_SC_W_req,
    S_SC_W_send,
    m_axi_aclk,
    m_axi_aresetn,
    s_axi_aclk,
    s_axi_aresetn);
  output [0:0]M_SC_AR_info;
  output [181:0]M_SC_AR_payld;
  input [0:0]M_SC_AR_recv;
  output [0:0]M_SC_AR_req;
  output [0:0]M_SC_AR_send;
  output [0:0]M_SC_AW_info;
  output [181:0]M_SC_AW_payld;
  input [0:0]M_SC_AW_recv;
  output [0:0]M_SC_AW_req;
  output [0:0]M_SC_AW_send;
  output [0:0]M_SC_B_info;
  output [8:0]M_SC_B_payld;
  input [0:0]M_SC_B_recv;
  output [0:0]M_SC_B_req;
  output [0:0]M_SC_B_send;
  output [0:0]M_SC_R_info;
  output [54:0]M_SC_R_payld;
  input [0:0]M_SC_R_recv;
  output [0:0]M_SC_R_req;
  output [0:0]M_SC_R_send;
  output [0:0]M_SC_W_info;
  output [68:0]M_SC_W_payld;
  input [0:0]M_SC_W_recv;
  output [0:0]M_SC_W_req;
  output [0:0]M_SC_W_send;
  input [0:0]S_SC_AR_info;
  input [181:0]S_SC_AR_payld;
  output [0:0]S_SC_AR_recv;
  input [0:0]S_SC_AR_req;
  input [0:0]S_SC_AR_send;
  input [0:0]S_SC_AW_info;
  input [181:0]S_SC_AW_payld;
  output [0:0]S_SC_AW_recv;
  input [0:0]S_SC_AW_req;
  input [0:0]S_SC_AW_send;
  input [0:0]S_SC_B_info;
  input [8:0]S_SC_B_payld;
  output [0:0]S_SC_B_recv;
  input [0:0]S_SC_B_req;
  input [0:0]S_SC_B_send;
  input [0:0]S_SC_R_info;
  input [54:0]S_SC_R_payld;
  output [0:0]S_SC_R_recv;
  input [0:0]S_SC_R_req;
  input [0:0]S_SC_R_send;
  input [0:0]S_SC_W_info;
  input [68:0]S_SC_W_payld;
  output [0:0]S_SC_W_recv;
  input [0:0]S_SC_W_req;
  input [0:0]S_SC_W_send;
  input m_axi_aclk;
  input m_axi_aresetn;
  input s_axi_aclk;
  input s_axi_aresetn;

  wire [0:0]S_SC_AR_1_INFO;
  wire [181:0]S_SC_AR_1_PAYLD;
  wire [0:0]S_SC_AR_1_RECV;
  wire [0:0]S_SC_AR_1_REQ;
  wire [0:0]S_SC_AR_1_SEND;
  wire [0:0]S_SC_AW_1_INFO;
  wire [181:0]S_SC_AW_1_PAYLD;
  wire [0:0]S_SC_AW_1_RECV;
  wire [0:0]S_SC_AW_1_REQ;
  wire [0:0]S_SC_AW_1_SEND;
  wire [0:0]S_SC_B_1_INFO;
  wire [8:0]S_SC_B_1_PAYLD;
  wire [0:0]S_SC_B_1_RECV;
  wire [0:0]S_SC_B_1_REQ;
  wire [0:0]S_SC_B_1_SEND;
  wire [0:0]S_SC_R_1_INFO;
  wire [54:0]S_SC_R_1_PAYLD;
  wire [0:0]S_SC_R_1_RECV;
  wire [0:0]S_SC_R_1_REQ;
  wire [0:0]S_SC_R_1_SEND;
  wire [0:0]S_SC_W_1_INFO;
  wire [68:0]S_SC_W_1_PAYLD;
  wire [0:0]S_SC_W_1_RECV;
  wire [0:0]S_SC_W_1_REQ;
  wire [0:0]S_SC_W_1_SEND;
  wire [0:0]m21_ar_node_M_SC_INFO;
  wire [181:0]m21_ar_node_M_SC_PAYLD;
  wire [0:0]m21_ar_node_M_SC_RECV;
  wire [0:0]m21_ar_node_M_SC_REQ;
  wire [0:0]m21_ar_node_M_SC_SEND;
  wire [0:0]m21_aw_node_M_SC_INFO;
  wire [181:0]m21_aw_node_M_SC_PAYLD;
  wire [0:0]m21_aw_node_M_SC_RECV;
  wire [0:0]m21_aw_node_M_SC_REQ;
  wire [0:0]m21_aw_node_M_SC_SEND;
  wire [0:0]m21_b_node_M_SC_INFO;
  wire [8:0]m21_b_node_M_SC_PAYLD;
  wire [0:0]m21_b_node_M_SC_RECV;
  wire [0:0]m21_b_node_M_SC_REQ;
  wire [0:0]m21_b_node_M_SC_SEND;
  wire [0:0]m21_r_node_M_SC_INFO;
  wire [54:0]m21_r_node_M_SC_PAYLD;
  wire [0:0]m21_r_node_M_SC_RECV;
  wire [0:0]m21_r_node_M_SC_REQ;
  wire [0:0]m21_r_node_M_SC_SEND;
  wire [0:0]m21_w_node_M_SC_INFO;
  wire [68:0]m21_w_node_M_SC_PAYLD;
  wire [0:0]m21_w_node_M_SC_RECV;
  wire [0:0]m21_w_node_M_SC_REQ;
  wire [0:0]m21_w_node_M_SC_SEND;
  wire m_axi_aclk_1;
  wire m_axi_aresetn_1;
  wire s_axi_aclk_1;
  wire s_axi_aresetn_1;

  assign M_SC_AR_info[0] = m21_ar_node_M_SC_INFO;
  assign M_SC_AR_payld[181:0] = m21_ar_node_M_SC_PAYLD;
  assign M_SC_AR_req[0] = m21_ar_node_M_SC_REQ;
  assign M_SC_AR_send[0] = m21_ar_node_M_SC_SEND;
  assign M_SC_AW_info[0] = m21_aw_node_M_SC_INFO;
  assign M_SC_AW_payld[181:0] = m21_aw_node_M_SC_PAYLD;
  assign M_SC_AW_req[0] = m21_aw_node_M_SC_REQ;
  assign M_SC_AW_send[0] = m21_aw_node_M_SC_SEND;
  assign M_SC_B_info[0] = m21_b_node_M_SC_INFO;
  assign M_SC_B_payld[8:0] = m21_b_node_M_SC_PAYLD;
  assign M_SC_B_req[0] = m21_b_node_M_SC_REQ;
  assign M_SC_B_send[0] = m21_b_node_M_SC_SEND;
  assign M_SC_R_info[0] = m21_r_node_M_SC_INFO;
  assign M_SC_R_payld[54:0] = m21_r_node_M_SC_PAYLD;
  assign M_SC_R_req[0] = m21_r_node_M_SC_REQ;
  assign M_SC_R_send[0] = m21_r_node_M_SC_SEND;
  assign M_SC_W_info[0] = m21_w_node_M_SC_INFO;
  assign M_SC_W_payld[68:0] = m21_w_node_M_SC_PAYLD;
  assign M_SC_W_req[0] = m21_w_node_M_SC_REQ;
  assign M_SC_W_send[0] = m21_w_node_M_SC_SEND;
  assign S_SC_AR_1_INFO = S_SC_AR_info[0];
  assign S_SC_AR_1_PAYLD = S_SC_AR_payld[181:0];
  assign S_SC_AR_1_REQ = S_SC_AR_req[0];
  assign S_SC_AR_1_SEND = S_SC_AR_send[0];
  assign S_SC_AR_recv[0] = S_SC_AR_1_RECV;
  assign S_SC_AW_1_INFO = S_SC_AW_info[0];
  assign S_SC_AW_1_PAYLD = S_SC_AW_payld[181:0];
  assign S_SC_AW_1_REQ = S_SC_AW_req[0];
  assign S_SC_AW_1_SEND = S_SC_AW_send[0];
  assign S_SC_AW_recv[0] = S_SC_AW_1_RECV;
  assign S_SC_B_1_INFO = S_SC_B_info[0];
  assign S_SC_B_1_PAYLD = S_SC_B_payld[8:0];
  assign S_SC_B_1_REQ = S_SC_B_req[0];
  assign S_SC_B_1_SEND = S_SC_B_send[0];
  assign S_SC_B_recv[0] = S_SC_B_1_RECV;
  assign S_SC_R_1_INFO = S_SC_R_info[0];
  assign S_SC_R_1_PAYLD = S_SC_R_payld[54:0];
  assign S_SC_R_1_REQ = S_SC_R_req[0];
  assign S_SC_R_1_SEND = S_SC_R_send[0];
  assign S_SC_R_recv[0] = S_SC_R_1_RECV;
  assign S_SC_W_1_INFO = S_SC_W_info[0];
  assign S_SC_W_1_PAYLD = S_SC_W_payld[68:0];
  assign S_SC_W_1_REQ = S_SC_W_req[0];
  assign S_SC_W_1_SEND = S_SC_W_send[0];
  assign S_SC_W_recv[0] = S_SC_W_1_RECV;
  assign m21_ar_node_M_SC_RECV = M_SC_AR_recv[0];
  assign m21_aw_node_M_SC_RECV = M_SC_AW_recv[0];
  assign m21_b_node_M_SC_RECV = M_SC_B_recv[0];
  assign m21_r_node_M_SC_RECV = M_SC_R_recv[0];
  assign m21_w_node_M_SC_RECV = M_SC_W_recv[0];
  assign m_axi_aclk_1 = m_axi_aclk;
  assign m_axi_aresetn_1 = m_axi_aresetn;
  assign s_axi_aclk_1 = s_axi_aclk;
  assign s_axi_aresetn_1 = s_axi_aresetn;
  bd_afc3_m21arn_0 m21_ar_node
       (.m_sc_aclk(m_axi_aclk_1),
        .m_sc_aresetn(m_axi_aresetn_1),
        .m_sc_info(m21_ar_node_M_SC_INFO),
        .m_sc_payld(m21_ar_node_M_SC_PAYLD),
        .m_sc_recv(m21_ar_node_M_SC_RECV),
        .m_sc_req(m21_ar_node_M_SC_REQ),
        .m_sc_send(m21_ar_node_M_SC_SEND),
        .s_sc_aclk(s_axi_aclk_1),
        .s_sc_aresetn(s_axi_aresetn_1),
        .s_sc_info(S_SC_AR_1_INFO),
        .s_sc_payld(S_SC_AR_1_PAYLD),
        .s_sc_recv(S_SC_AR_1_RECV),
        .s_sc_req(S_SC_AR_1_REQ),
        .s_sc_send(S_SC_AR_1_SEND));
  bd_afc3_m21awn_0 m21_aw_node
       (.m_sc_aclk(m_axi_aclk_1),
        .m_sc_aresetn(m_axi_aresetn_1),
        .m_sc_info(m21_aw_node_M_SC_INFO),
        .m_sc_payld(m21_aw_node_M_SC_PAYLD),
        .m_sc_recv(m21_aw_node_M_SC_RECV),
        .m_sc_req(m21_aw_node_M_SC_REQ),
        .m_sc_send(m21_aw_node_M_SC_SEND),
        .s_sc_aclk(s_axi_aclk_1),
        .s_sc_aresetn(s_axi_aresetn_1),
        .s_sc_info(S_SC_AW_1_INFO),
        .s_sc_payld(S_SC_AW_1_PAYLD),
        .s_sc_recv(S_SC_AW_1_RECV),
        .s_sc_req(S_SC_AW_1_REQ),
        .s_sc_send(S_SC_AW_1_SEND));
  bd_afc3_m21bn_0 m21_b_node
       (.m_sc_aclk(s_axi_aclk_1),
        .m_sc_aresetn(s_axi_aresetn_1),
        .m_sc_info(m21_b_node_M_SC_INFO),
        .m_sc_payld(m21_b_node_M_SC_PAYLD),
        .m_sc_recv(m21_b_node_M_SC_RECV),
        .m_sc_req(m21_b_node_M_SC_REQ),
        .m_sc_send(m21_b_node_M_SC_SEND),
        .s_sc_aclk(m_axi_aclk_1),
        .s_sc_aresetn(m_axi_aresetn_1),
        .s_sc_info(S_SC_B_1_INFO),
        .s_sc_payld(S_SC_B_1_PAYLD),
        .s_sc_recv(S_SC_B_1_RECV),
        .s_sc_req(S_SC_B_1_REQ),
        .s_sc_send(S_SC_B_1_SEND));
  bd_afc3_m21rn_0 m21_r_node
       (.m_sc_aclk(s_axi_aclk_1),
        .m_sc_aresetn(s_axi_aresetn_1),
        .m_sc_info(m21_r_node_M_SC_INFO),
        .m_sc_payld(m21_r_node_M_SC_PAYLD),
        .m_sc_recv(m21_r_node_M_SC_RECV),
        .m_sc_req(m21_r_node_M_SC_REQ),
        .m_sc_send(m21_r_node_M_SC_SEND),
        .s_sc_aclk(m_axi_aclk_1),
        .s_sc_aresetn(m_axi_aresetn_1),
        .s_sc_info(S_SC_R_1_INFO),
        .s_sc_payld(S_SC_R_1_PAYLD),
        .s_sc_recv(S_SC_R_1_RECV),
        .s_sc_req(S_SC_R_1_REQ),
        .s_sc_send(S_SC_R_1_SEND));
  bd_afc3_m21wn_0 m21_w_node
       (.m_sc_aclk(m_axi_aclk_1),
        .m_sc_aresetn(m_axi_aresetn_1),
        .m_sc_info(m21_w_node_M_SC_INFO),
        .m_sc_payld(m21_w_node_M_SC_PAYLD),
        .m_sc_recv(m21_w_node_M_SC_RECV),
        .m_sc_req(m21_w_node_M_SC_REQ),
        .m_sc_send(m21_w_node_M_SC_SEND),
        .s_sc_aclk(s_axi_aclk_1),
        .s_sc_aresetn(s_axi_aresetn_1),
        .s_sc_info(S_SC_W_1_INFO),
        .s_sc_payld(S_SC_W_1_PAYLD),
        .s_sc_recv(S_SC_W_1_RECV),
        .s_sc_req(S_SC_W_1_REQ),
        .s_sc_send(S_SC_W_1_SEND));
endmodule

module m22_exit_pipeline_imp_CSIC7I
   (aclk,
    aresetn,
    m_axi_araddr,
    m_axi_arprot,
    m_axi_arready,
    m_axi_arvalid,
    m_axi_awaddr,
    m_axi_awprot,
    m_axi_awready,
    m_axi_awvalid,
    m_axi_bready,
    m_axi_bresp,
    m_axi_bvalid,
    m_axi_rdata,
    m_axi_rready,
    m_axi_rresp,
    m_axi_rvalid,
    m_axi_wdata,
    m_axi_wready,
    m_axi_wstrb,
    m_axi_wvalid,
    s_axi_araddr,
    s_axi_arcache,
    s_axi_arid,
    s_axi_arlen,
    s_axi_arlock,
    s_axi_arprot,
    s_axi_arqos,
    s_axi_arready,
    s_axi_aruser,
    s_axi_arvalid,
    s_axi_awaddr,
    s_axi_awcache,
    s_axi_awid,
    s_axi_awlen,
    s_axi_awlock,
    s_axi_awprot,
    s_axi_awqos,
    s_axi_awready,
    s_axi_awuser,
    s_axi_awvalid,
    s_axi_bid,
    s_axi_bready,
    s_axi_bresp,
    s_axi_buser,
    s_axi_bvalid,
    s_axi_rdata,
    s_axi_rid,
    s_axi_rlast,
    s_axi_rready,
    s_axi_rresp,
    s_axi_ruser,
    s_axi_rvalid,
    s_axi_wdata,
    s_axi_wlast,
    s_axi_wready,
    s_axi_wstrb,
    s_axi_wuser,
    s_axi_wvalid);
  input aclk;
  input aresetn;
  output [4:0]m_axi_araddr;
  output [2:0]m_axi_arprot;
  input m_axi_arready;
  output m_axi_arvalid;
  output [4:0]m_axi_awaddr;
  output [2:0]m_axi_awprot;
  input m_axi_awready;
  output m_axi_awvalid;
  output m_axi_bready;
  input [1:0]m_axi_bresp;
  input m_axi_bvalid;
  input [31:0]m_axi_rdata;
  output m_axi_rready;
  input [1:0]m_axi_rresp;
  input m_axi_rvalid;
  output [31:0]m_axi_wdata;
  input m_axi_wready;
  output [3:0]m_axi_wstrb;
  output m_axi_wvalid;
  input [4:0]s_axi_araddr;
  input [3:0]s_axi_arcache;
  input [2:0]s_axi_arid;
  input [7:0]s_axi_arlen;
  input [0:0]s_axi_arlock;
  input [2:0]s_axi_arprot;
  input [3:0]s_axi_arqos;
  output s_axi_arready;
  input [1023:0]s_axi_aruser;
  input s_axi_arvalid;
  input [4:0]s_axi_awaddr;
  input [3:0]s_axi_awcache;
  input [2:0]s_axi_awid;
  input [7:0]s_axi_awlen;
  input [0:0]s_axi_awlock;
  input [2:0]s_axi_awprot;
  input [3:0]s_axi_awqos;
  output s_axi_awready;
  input [1023:0]s_axi_awuser;
  input s_axi_awvalid;
  output [2:0]s_axi_bid;
  input s_axi_bready;
  output [1:0]s_axi_bresp;
  output [1023:0]s_axi_buser;
  output s_axi_bvalid;
  output [31:0]s_axi_rdata;
  output [2:0]s_axi_rid;
  output s_axi_rlast;
  input s_axi_rready;
  output [1:0]s_axi_rresp;
  output [1023:0]s_axi_ruser;
  output s_axi_rvalid;
  input [31:0]s_axi_wdata;
  input s_axi_wlast;
  output s_axi_wready;
  input [3:0]s_axi_wstrb;
  input [1023:0]s_axi_wuser;
  input s_axi_wvalid;

  wire aclk_1;
  wire aresetn_1;
  wire [4:0]m22_exit_M_AXI_ARADDR;
  wire [2:0]m22_exit_M_AXI_ARPROT;
  wire m22_exit_M_AXI_ARREADY;
  wire m22_exit_M_AXI_ARVALID;
  wire [4:0]m22_exit_M_AXI_AWADDR;
  wire [2:0]m22_exit_M_AXI_AWPROT;
  wire m22_exit_M_AXI_AWREADY;
  wire m22_exit_M_AXI_AWVALID;
  wire m22_exit_M_AXI_BREADY;
  wire [1:0]m22_exit_M_AXI_BRESP;
  wire m22_exit_M_AXI_BVALID;
  wire [31:0]m22_exit_M_AXI_RDATA;
  wire m22_exit_M_AXI_RREADY;
  wire [1:0]m22_exit_M_AXI_RRESP;
  wire m22_exit_M_AXI_RVALID;
  wire [31:0]m22_exit_M_AXI_WDATA;
  wire m22_exit_M_AXI_WREADY;
  wire [3:0]m22_exit_M_AXI_WSTRB;
  wire m22_exit_M_AXI_WVALID;
  wire [4:0]s_axi_1_ARADDR;
  wire [3:0]s_axi_1_ARCACHE;
  wire [2:0]s_axi_1_ARID;
  wire [7:0]s_axi_1_ARLEN;
  wire [0:0]s_axi_1_ARLOCK;
  wire [2:0]s_axi_1_ARPROT;
  wire [3:0]s_axi_1_ARQOS;
  wire s_axi_1_ARREADY;
  wire [1023:0]s_axi_1_ARUSER;
  wire s_axi_1_ARVALID;
  wire [4:0]s_axi_1_AWADDR;
  wire [3:0]s_axi_1_AWCACHE;
  wire [2:0]s_axi_1_AWID;
  wire [7:0]s_axi_1_AWLEN;
  wire [0:0]s_axi_1_AWLOCK;
  wire [2:0]s_axi_1_AWPROT;
  wire [3:0]s_axi_1_AWQOS;
  wire s_axi_1_AWREADY;
  wire [1023:0]s_axi_1_AWUSER;
  wire s_axi_1_AWVALID;
  wire [2:0]s_axi_1_BID;
  wire s_axi_1_BREADY;
  wire [1:0]s_axi_1_BRESP;
  wire [1023:0]s_axi_1_BUSER;
  wire s_axi_1_BVALID;
  wire [31:0]s_axi_1_RDATA;
  wire [2:0]s_axi_1_RID;
  wire s_axi_1_RLAST;
  wire s_axi_1_RREADY;
  wire [1:0]s_axi_1_RRESP;
  wire [1023:0]s_axi_1_RUSER;
  wire s_axi_1_RVALID;
  wire [31:0]s_axi_1_WDATA;
  wire s_axi_1_WLAST;
  wire s_axi_1_WREADY;
  wire [3:0]s_axi_1_WSTRB;
  wire [1023:0]s_axi_1_WUSER;
  wire s_axi_1_WVALID;

  assign aclk_1 = aclk;
  assign aresetn_1 = aresetn;
  assign m22_exit_M_AXI_ARREADY = m_axi_arready;
  assign m22_exit_M_AXI_AWREADY = m_axi_awready;
  assign m22_exit_M_AXI_BRESP = m_axi_bresp[1:0];
  assign m22_exit_M_AXI_BVALID = m_axi_bvalid;
  assign m22_exit_M_AXI_RDATA = m_axi_rdata[31:0];
  assign m22_exit_M_AXI_RRESP = m_axi_rresp[1:0];
  assign m22_exit_M_AXI_RVALID = m_axi_rvalid;
  assign m22_exit_M_AXI_WREADY = m_axi_wready;
  assign m_axi_araddr[4:0] = m22_exit_M_AXI_ARADDR;
  assign m_axi_arprot[2:0] = m22_exit_M_AXI_ARPROT;
  assign m_axi_arvalid = m22_exit_M_AXI_ARVALID;
  assign m_axi_awaddr[4:0] = m22_exit_M_AXI_AWADDR;
  assign m_axi_awprot[2:0] = m22_exit_M_AXI_AWPROT;
  assign m_axi_awvalid = m22_exit_M_AXI_AWVALID;
  assign m_axi_bready = m22_exit_M_AXI_BREADY;
  assign m_axi_rready = m22_exit_M_AXI_RREADY;
  assign m_axi_wdata[31:0] = m22_exit_M_AXI_WDATA;
  assign m_axi_wstrb[3:0] = m22_exit_M_AXI_WSTRB;
  assign m_axi_wvalid = m22_exit_M_AXI_WVALID;
  assign s_axi_1_ARADDR = s_axi_araddr[4:0];
  assign s_axi_1_ARCACHE = s_axi_arcache[3:0];
  assign s_axi_1_ARID = s_axi_arid[2:0];
  assign s_axi_1_ARLEN = s_axi_arlen[7:0];
  assign s_axi_1_ARLOCK = s_axi_arlock[0];
  assign s_axi_1_ARPROT = s_axi_arprot[2:0];
  assign s_axi_1_ARQOS = s_axi_arqos[3:0];
  assign s_axi_1_ARUSER = s_axi_aruser[1023:0];
  assign s_axi_1_ARVALID = s_axi_arvalid;
  assign s_axi_1_AWADDR = s_axi_awaddr[4:0];
  assign s_axi_1_AWCACHE = s_axi_awcache[3:0];
  assign s_axi_1_AWID = s_axi_awid[2:0];
  assign s_axi_1_AWLEN = s_axi_awlen[7:0];
  assign s_axi_1_AWLOCK = s_axi_awlock[0];
  assign s_axi_1_AWPROT = s_axi_awprot[2:0];
  assign s_axi_1_AWQOS = s_axi_awqos[3:0];
  assign s_axi_1_AWUSER = s_axi_awuser[1023:0];
  assign s_axi_1_AWVALID = s_axi_awvalid;
  assign s_axi_1_BREADY = s_axi_bready;
  assign s_axi_1_RREADY = s_axi_rready;
  assign s_axi_1_WDATA = s_axi_wdata[31:0];
  assign s_axi_1_WLAST = s_axi_wlast;
  assign s_axi_1_WSTRB = s_axi_wstrb[3:0];
  assign s_axi_1_WUSER = s_axi_wuser[1023:0];
  assign s_axi_1_WVALID = s_axi_wvalid;
  assign s_axi_arready = s_axi_1_ARREADY;
  assign s_axi_awready = s_axi_1_AWREADY;
  assign s_axi_bid[2:0] = s_axi_1_BID;
  assign s_axi_bresp[1:0] = s_axi_1_BRESP;
  assign s_axi_buser[1023:0] = s_axi_1_BUSER;
  assign s_axi_bvalid = s_axi_1_BVALID;
  assign s_axi_rdata[31:0] = s_axi_1_RDATA;
  assign s_axi_rid[2:0] = s_axi_1_RID;
  assign s_axi_rlast = s_axi_1_RLAST;
  assign s_axi_rresp[1:0] = s_axi_1_RRESP;
  assign s_axi_ruser[1023:0] = s_axi_1_RUSER;
  assign s_axi_rvalid = s_axi_1_RVALID;
  assign s_axi_wready = s_axi_1_WREADY;
  bd_afc3_m22e_0 m22_exit
       (.aclk(aclk_1),
        .aresetn(aresetn_1),
        .m_axi_araddr(m22_exit_M_AXI_ARADDR),
        .m_axi_arprot(m22_exit_M_AXI_ARPROT),
        .m_axi_arready(m22_exit_M_AXI_ARREADY),
        .m_axi_arvalid(m22_exit_M_AXI_ARVALID),
        .m_axi_awaddr(m22_exit_M_AXI_AWADDR),
        .m_axi_awprot(m22_exit_M_AXI_AWPROT),
        .m_axi_awready(m22_exit_M_AXI_AWREADY),
        .m_axi_awvalid(m22_exit_M_AXI_AWVALID),
        .m_axi_bready(m22_exit_M_AXI_BREADY),
        .m_axi_bresp(m22_exit_M_AXI_BRESP),
        .m_axi_bvalid(m22_exit_M_AXI_BVALID),
        .m_axi_rdata(m22_exit_M_AXI_RDATA),
        .m_axi_rready(m22_exit_M_AXI_RREADY),
        .m_axi_rresp(m22_exit_M_AXI_RRESP),
        .m_axi_rvalid(m22_exit_M_AXI_RVALID),
        .m_axi_wdata(m22_exit_M_AXI_WDATA),
        .m_axi_wready(m22_exit_M_AXI_WREADY),
        .m_axi_wstrb(m22_exit_M_AXI_WSTRB),
        .m_axi_wvalid(m22_exit_M_AXI_WVALID),
        .s_axi_araddr(s_axi_1_ARADDR),
        .s_axi_arcache(s_axi_1_ARCACHE),
        .s_axi_arid(s_axi_1_ARID),
        .s_axi_arlen(s_axi_1_ARLEN),
        .s_axi_arlock(s_axi_1_ARLOCK),
        .s_axi_arprot(s_axi_1_ARPROT),
        .s_axi_arqos(s_axi_1_ARQOS),
        .s_axi_arready(s_axi_1_ARREADY),
        .s_axi_aruser(s_axi_1_ARUSER),
        .s_axi_arvalid(s_axi_1_ARVALID),
        .s_axi_awaddr(s_axi_1_AWADDR),
        .s_axi_awcache(s_axi_1_AWCACHE),
        .s_axi_awid(s_axi_1_AWID),
        .s_axi_awlen(s_axi_1_AWLEN),
        .s_axi_awlock(s_axi_1_AWLOCK),
        .s_axi_awprot(s_axi_1_AWPROT),
        .s_axi_awqos(s_axi_1_AWQOS),
        .s_axi_awready(s_axi_1_AWREADY),
        .s_axi_awuser(s_axi_1_AWUSER),
        .s_axi_awvalid(s_axi_1_AWVALID),
        .s_axi_bid(s_axi_1_BID),
        .s_axi_bready(s_axi_1_BREADY),
        .s_axi_bresp(s_axi_1_BRESP),
        .s_axi_buser(s_axi_1_BUSER),
        .s_axi_bvalid(s_axi_1_BVALID),
        .s_axi_rdata(s_axi_1_RDATA),
        .s_axi_rid(s_axi_1_RID),
        .s_axi_rlast(s_axi_1_RLAST),
        .s_axi_rready(s_axi_1_RREADY),
        .s_axi_rresp(s_axi_1_RRESP),
        .s_axi_ruser(s_axi_1_RUSER),
        .s_axi_rvalid(s_axi_1_RVALID),
        .s_axi_wdata(s_axi_1_WDATA),
        .s_axi_wlast(s_axi_1_WLAST),
        .s_axi_wready(s_axi_1_WREADY),
        .s_axi_wstrb(s_axi_1_WSTRB),
        .s_axi_wuser(s_axi_1_WUSER),
        .s_axi_wvalid(s_axi_1_WVALID));
endmodule

module m22_nodes_imp_1VPARSN
   (M_SC_AR_info,
    M_SC_AR_payld,
    M_SC_AR_recv,
    M_SC_AR_req,
    M_SC_AR_send,
    M_SC_AW_info,
    M_SC_AW_payld,
    M_SC_AW_recv,
    M_SC_AW_req,
    M_SC_AW_send,
    M_SC_B_info,
    M_SC_B_payld,
    M_SC_B_recv,
    M_SC_B_req,
    M_SC_B_send,
    M_SC_R_info,
    M_SC_R_payld,
    M_SC_R_recv,
    M_SC_R_req,
    M_SC_R_send,
    M_SC_W_info,
    M_SC_W_payld,
    M_SC_W_recv,
    M_SC_W_req,
    M_SC_W_send,
    S_SC_AR_info,
    S_SC_AR_payld,
    S_SC_AR_recv,
    S_SC_AR_req,
    S_SC_AR_send,
    S_SC_AW_info,
    S_SC_AW_payld,
    S_SC_AW_recv,
    S_SC_AW_req,
    S_SC_AW_send,
    S_SC_B_info,
    S_SC_B_payld,
    S_SC_B_recv,
    S_SC_B_req,
    S_SC_B_send,
    S_SC_R_info,
    S_SC_R_payld,
    S_SC_R_recv,
    S_SC_R_req,
    S_SC_R_send,
    S_SC_W_info,
    S_SC_W_payld,
    S_SC_W_recv,
    S_SC_W_req,
    S_SC_W_send,
    m_axi_aclk,
    m_axi_aresetn,
    s_axi_aclk,
    s_axi_aresetn);
  output [0:0]M_SC_AR_info;
  output [181:0]M_SC_AR_payld;
  input [0:0]M_SC_AR_recv;
  output [0:0]M_SC_AR_req;
  output [0:0]M_SC_AR_send;
  output [0:0]M_SC_AW_info;
  output [181:0]M_SC_AW_payld;
  input [0:0]M_SC_AW_recv;
  output [0:0]M_SC_AW_req;
  output [0:0]M_SC_AW_send;
  output [0:0]M_SC_B_info;
  output [8:0]M_SC_B_payld;
  input [0:0]M_SC_B_recv;
  output [0:0]M_SC_B_req;
  output [0:0]M_SC_B_send;
  output [0:0]M_SC_R_info;
  output [54:0]M_SC_R_payld;
  input [0:0]M_SC_R_recv;
  output [0:0]M_SC_R_req;
  output [0:0]M_SC_R_send;
  output [0:0]M_SC_W_info;
  output [68:0]M_SC_W_payld;
  input [0:0]M_SC_W_recv;
  output [0:0]M_SC_W_req;
  output [0:0]M_SC_W_send;
  input [0:0]S_SC_AR_info;
  input [181:0]S_SC_AR_payld;
  output [0:0]S_SC_AR_recv;
  input [0:0]S_SC_AR_req;
  input [0:0]S_SC_AR_send;
  input [0:0]S_SC_AW_info;
  input [181:0]S_SC_AW_payld;
  output [0:0]S_SC_AW_recv;
  input [0:0]S_SC_AW_req;
  input [0:0]S_SC_AW_send;
  input [0:0]S_SC_B_info;
  input [8:0]S_SC_B_payld;
  output [0:0]S_SC_B_recv;
  input [0:0]S_SC_B_req;
  input [0:0]S_SC_B_send;
  input [0:0]S_SC_R_info;
  input [54:0]S_SC_R_payld;
  output [0:0]S_SC_R_recv;
  input [0:0]S_SC_R_req;
  input [0:0]S_SC_R_send;
  input [0:0]S_SC_W_info;
  input [68:0]S_SC_W_payld;
  output [0:0]S_SC_W_recv;
  input [0:0]S_SC_W_req;
  input [0:0]S_SC_W_send;
  input m_axi_aclk;
  input m_axi_aresetn;
  input s_axi_aclk;
  input s_axi_aresetn;

  wire [0:0]S_SC_AR_1_INFO;
  wire [181:0]S_SC_AR_1_PAYLD;
  wire [0:0]S_SC_AR_1_RECV;
  wire [0:0]S_SC_AR_1_REQ;
  wire [0:0]S_SC_AR_1_SEND;
  wire [0:0]S_SC_AW_1_INFO;
  wire [181:0]S_SC_AW_1_PAYLD;
  wire [0:0]S_SC_AW_1_RECV;
  wire [0:0]S_SC_AW_1_REQ;
  wire [0:0]S_SC_AW_1_SEND;
  wire [0:0]S_SC_B_1_INFO;
  wire [8:0]S_SC_B_1_PAYLD;
  wire [0:0]S_SC_B_1_RECV;
  wire [0:0]S_SC_B_1_REQ;
  wire [0:0]S_SC_B_1_SEND;
  wire [0:0]S_SC_R_1_INFO;
  wire [54:0]S_SC_R_1_PAYLD;
  wire [0:0]S_SC_R_1_RECV;
  wire [0:0]S_SC_R_1_REQ;
  wire [0:0]S_SC_R_1_SEND;
  wire [0:0]S_SC_W_1_INFO;
  wire [68:0]S_SC_W_1_PAYLD;
  wire [0:0]S_SC_W_1_RECV;
  wire [0:0]S_SC_W_1_REQ;
  wire [0:0]S_SC_W_1_SEND;
  wire [0:0]m22_ar_node_M_SC_INFO;
  wire [181:0]m22_ar_node_M_SC_PAYLD;
  wire [0:0]m22_ar_node_M_SC_RECV;
  wire [0:0]m22_ar_node_M_SC_REQ;
  wire [0:0]m22_ar_node_M_SC_SEND;
  wire [0:0]m22_aw_node_M_SC_INFO;
  wire [181:0]m22_aw_node_M_SC_PAYLD;
  wire [0:0]m22_aw_node_M_SC_RECV;
  wire [0:0]m22_aw_node_M_SC_REQ;
  wire [0:0]m22_aw_node_M_SC_SEND;
  wire [0:0]m22_b_node_M_SC_INFO;
  wire [8:0]m22_b_node_M_SC_PAYLD;
  wire [0:0]m22_b_node_M_SC_RECV;
  wire [0:0]m22_b_node_M_SC_REQ;
  wire [0:0]m22_b_node_M_SC_SEND;
  wire [0:0]m22_r_node_M_SC_INFO;
  wire [54:0]m22_r_node_M_SC_PAYLD;
  wire [0:0]m22_r_node_M_SC_RECV;
  wire [0:0]m22_r_node_M_SC_REQ;
  wire [0:0]m22_r_node_M_SC_SEND;
  wire [0:0]m22_w_node_M_SC_INFO;
  wire [68:0]m22_w_node_M_SC_PAYLD;
  wire [0:0]m22_w_node_M_SC_RECV;
  wire [0:0]m22_w_node_M_SC_REQ;
  wire [0:0]m22_w_node_M_SC_SEND;
  wire m_axi_aclk_1;
  wire m_axi_aresetn_1;
  wire s_axi_aclk_1;
  wire s_axi_aresetn_1;

  assign M_SC_AR_info[0] = m22_ar_node_M_SC_INFO;
  assign M_SC_AR_payld[181:0] = m22_ar_node_M_SC_PAYLD;
  assign M_SC_AR_req[0] = m22_ar_node_M_SC_REQ;
  assign M_SC_AR_send[0] = m22_ar_node_M_SC_SEND;
  assign M_SC_AW_info[0] = m22_aw_node_M_SC_INFO;
  assign M_SC_AW_payld[181:0] = m22_aw_node_M_SC_PAYLD;
  assign M_SC_AW_req[0] = m22_aw_node_M_SC_REQ;
  assign M_SC_AW_send[0] = m22_aw_node_M_SC_SEND;
  assign M_SC_B_info[0] = m22_b_node_M_SC_INFO;
  assign M_SC_B_payld[8:0] = m22_b_node_M_SC_PAYLD;
  assign M_SC_B_req[0] = m22_b_node_M_SC_REQ;
  assign M_SC_B_send[0] = m22_b_node_M_SC_SEND;
  assign M_SC_R_info[0] = m22_r_node_M_SC_INFO;
  assign M_SC_R_payld[54:0] = m22_r_node_M_SC_PAYLD;
  assign M_SC_R_req[0] = m22_r_node_M_SC_REQ;
  assign M_SC_R_send[0] = m22_r_node_M_SC_SEND;
  assign M_SC_W_info[0] = m22_w_node_M_SC_INFO;
  assign M_SC_W_payld[68:0] = m22_w_node_M_SC_PAYLD;
  assign M_SC_W_req[0] = m22_w_node_M_SC_REQ;
  assign M_SC_W_send[0] = m22_w_node_M_SC_SEND;
  assign S_SC_AR_1_INFO = S_SC_AR_info[0];
  assign S_SC_AR_1_PAYLD = S_SC_AR_payld[181:0];
  assign S_SC_AR_1_REQ = S_SC_AR_req[0];
  assign S_SC_AR_1_SEND = S_SC_AR_send[0];
  assign S_SC_AR_recv[0] = S_SC_AR_1_RECV;
  assign S_SC_AW_1_INFO = S_SC_AW_info[0];
  assign S_SC_AW_1_PAYLD = S_SC_AW_payld[181:0];
  assign S_SC_AW_1_REQ = S_SC_AW_req[0];
  assign S_SC_AW_1_SEND = S_SC_AW_send[0];
  assign S_SC_AW_recv[0] = S_SC_AW_1_RECV;
  assign S_SC_B_1_INFO = S_SC_B_info[0];
  assign S_SC_B_1_PAYLD = S_SC_B_payld[8:0];
  assign S_SC_B_1_REQ = S_SC_B_req[0];
  assign S_SC_B_1_SEND = S_SC_B_send[0];
  assign S_SC_B_recv[0] = S_SC_B_1_RECV;
  assign S_SC_R_1_INFO = S_SC_R_info[0];
  assign S_SC_R_1_PAYLD = S_SC_R_payld[54:0];
  assign S_SC_R_1_REQ = S_SC_R_req[0];
  assign S_SC_R_1_SEND = S_SC_R_send[0];
  assign S_SC_R_recv[0] = S_SC_R_1_RECV;
  assign S_SC_W_1_INFO = S_SC_W_info[0];
  assign S_SC_W_1_PAYLD = S_SC_W_payld[68:0];
  assign S_SC_W_1_REQ = S_SC_W_req[0];
  assign S_SC_W_1_SEND = S_SC_W_send[0];
  assign S_SC_W_recv[0] = S_SC_W_1_RECV;
  assign m22_ar_node_M_SC_RECV = M_SC_AR_recv[0];
  assign m22_aw_node_M_SC_RECV = M_SC_AW_recv[0];
  assign m22_b_node_M_SC_RECV = M_SC_B_recv[0];
  assign m22_r_node_M_SC_RECV = M_SC_R_recv[0];
  assign m22_w_node_M_SC_RECV = M_SC_W_recv[0];
  assign m_axi_aclk_1 = m_axi_aclk;
  assign m_axi_aresetn_1 = m_axi_aresetn;
  assign s_axi_aclk_1 = s_axi_aclk;
  assign s_axi_aresetn_1 = s_axi_aresetn;
  bd_afc3_m22arn_0 m22_ar_node
       (.m_sc_aclk(m_axi_aclk_1),
        .m_sc_aresetn(m_axi_aresetn_1),
        .m_sc_info(m22_ar_node_M_SC_INFO),
        .m_sc_payld(m22_ar_node_M_SC_PAYLD),
        .m_sc_recv(m22_ar_node_M_SC_RECV),
        .m_sc_req(m22_ar_node_M_SC_REQ),
        .m_sc_send(m22_ar_node_M_SC_SEND),
        .s_sc_aclk(s_axi_aclk_1),
        .s_sc_aresetn(s_axi_aresetn_1),
        .s_sc_info(S_SC_AR_1_INFO),
        .s_sc_payld(S_SC_AR_1_PAYLD),
        .s_sc_recv(S_SC_AR_1_RECV),
        .s_sc_req(S_SC_AR_1_REQ),
        .s_sc_send(S_SC_AR_1_SEND));
  bd_afc3_m22awn_0 m22_aw_node
       (.m_sc_aclk(m_axi_aclk_1),
        .m_sc_aresetn(m_axi_aresetn_1),
        .m_sc_info(m22_aw_node_M_SC_INFO),
        .m_sc_payld(m22_aw_node_M_SC_PAYLD),
        .m_sc_recv(m22_aw_node_M_SC_RECV),
        .m_sc_req(m22_aw_node_M_SC_REQ),
        .m_sc_send(m22_aw_node_M_SC_SEND),
        .s_sc_aclk(s_axi_aclk_1),
        .s_sc_aresetn(s_axi_aresetn_1),
        .s_sc_info(S_SC_AW_1_INFO),
        .s_sc_payld(S_SC_AW_1_PAYLD),
        .s_sc_recv(S_SC_AW_1_RECV),
        .s_sc_req(S_SC_AW_1_REQ),
        .s_sc_send(S_SC_AW_1_SEND));
  bd_afc3_m22bn_0 m22_b_node
       (.m_sc_aclk(s_axi_aclk_1),
        .m_sc_aresetn(s_axi_aresetn_1),
        .m_sc_info(m22_b_node_M_SC_INFO),
        .m_sc_payld(m22_b_node_M_SC_PAYLD),
        .m_sc_recv(m22_b_node_M_SC_RECV),
        .m_sc_req(m22_b_node_M_SC_REQ),
        .m_sc_send(m22_b_node_M_SC_SEND),
        .s_sc_aclk(m_axi_aclk_1),
        .s_sc_aresetn(m_axi_aresetn_1),
        .s_sc_info(S_SC_B_1_INFO),
        .s_sc_payld(S_SC_B_1_PAYLD),
        .s_sc_recv(S_SC_B_1_RECV),
        .s_sc_req(S_SC_B_1_REQ),
        .s_sc_send(S_SC_B_1_SEND));
  bd_afc3_m22rn_0 m22_r_node
       (.m_sc_aclk(s_axi_aclk_1),
        .m_sc_aresetn(s_axi_aresetn_1),
        .m_sc_info(m22_r_node_M_SC_INFO),
        .m_sc_payld(m22_r_node_M_SC_PAYLD),
        .m_sc_recv(m22_r_node_M_SC_RECV),
        .m_sc_req(m22_r_node_M_SC_REQ),
        .m_sc_send(m22_r_node_M_SC_SEND),
        .s_sc_aclk(m_axi_aclk_1),
        .s_sc_aresetn(m_axi_aresetn_1),
        .s_sc_info(S_SC_R_1_INFO),
        .s_sc_payld(S_SC_R_1_PAYLD),
        .s_sc_recv(S_SC_R_1_RECV),
        .s_sc_req(S_SC_R_1_REQ),
        .s_sc_send(S_SC_R_1_SEND));
  bd_afc3_m22wn_0 m22_w_node
       (.m_sc_aclk(m_axi_aclk_1),
        .m_sc_aresetn(m_axi_aresetn_1),
        .m_sc_info(m22_w_node_M_SC_INFO),
        .m_sc_payld(m22_w_node_M_SC_PAYLD),
        .m_sc_recv(m22_w_node_M_SC_RECV),
        .m_sc_req(m22_w_node_M_SC_REQ),
        .m_sc_send(m22_w_node_M_SC_SEND),
        .s_sc_aclk(s_axi_aclk_1),
        .s_sc_aresetn(s_axi_aresetn_1),
        .s_sc_info(S_SC_W_1_INFO),
        .s_sc_payld(S_SC_W_1_PAYLD),
        .s_sc_recv(S_SC_W_1_RECV),
        .s_sc_req(S_SC_W_1_REQ),
        .s_sc_send(S_SC_W_1_SEND));
endmodule

module m23_exit_pipeline_imp_FVBFKE
   (aclk,
    aresetn,
    m_axi_araddr,
    m_axi_arprot,
    m_axi_arready,
    m_axi_arvalid,
    m_axi_awaddr,
    m_axi_awprot,
    m_axi_awready,
    m_axi_awvalid,
    m_axi_bready,
    m_axi_bresp,
    m_axi_bvalid,
    m_axi_rdata,
    m_axi_rready,
    m_axi_rresp,
    m_axi_rvalid,
    m_axi_wdata,
    m_axi_wready,
    m_axi_wstrb,
    m_axi_wvalid,
    s_axi_araddr,
    s_axi_arcache,
    s_axi_arid,
    s_axi_arlen,
    s_axi_arlock,
    s_axi_arprot,
    s_axi_arqos,
    s_axi_arready,
    s_axi_aruser,
    s_axi_arvalid,
    s_axi_awaddr,
    s_axi_awcache,
    s_axi_awid,
    s_axi_awlen,
    s_axi_awlock,
    s_axi_awprot,
    s_axi_awqos,
    s_axi_awready,
    s_axi_awuser,
    s_axi_awvalid,
    s_axi_bid,
    s_axi_bready,
    s_axi_bresp,
    s_axi_buser,
    s_axi_bvalid,
    s_axi_rdata,
    s_axi_rid,
    s_axi_rlast,
    s_axi_rready,
    s_axi_rresp,
    s_axi_ruser,
    s_axi_rvalid,
    s_axi_wdata,
    s_axi_wlast,
    s_axi_wready,
    s_axi_wstrb,
    s_axi_wuser,
    s_axi_wvalid);
  input aclk;
  input aresetn;
  output [4:0]m_axi_araddr;
  output [2:0]m_axi_arprot;
  input m_axi_arready;
  output m_axi_arvalid;
  output [4:0]m_axi_awaddr;
  output [2:0]m_axi_awprot;
  input m_axi_awready;
  output m_axi_awvalid;
  output m_axi_bready;
  input [1:0]m_axi_bresp;
  input m_axi_bvalid;
  input [31:0]m_axi_rdata;
  output m_axi_rready;
  input [1:0]m_axi_rresp;
  input m_axi_rvalid;
  output [31:0]m_axi_wdata;
  input m_axi_wready;
  output [3:0]m_axi_wstrb;
  output m_axi_wvalid;
  input [4:0]s_axi_araddr;
  input [3:0]s_axi_arcache;
  input [2:0]s_axi_arid;
  input [7:0]s_axi_arlen;
  input [0:0]s_axi_arlock;
  input [2:0]s_axi_arprot;
  input [3:0]s_axi_arqos;
  output s_axi_arready;
  input [1023:0]s_axi_aruser;
  input s_axi_arvalid;
  input [4:0]s_axi_awaddr;
  input [3:0]s_axi_awcache;
  input [2:0]s_axi_awid;
  input [7:0]s_axi_awlen;
  input [0:0]s_axi_awlock;
  input [2:0]s_axi_awprot;
  input [3:0]s_axi_awqos;
  output s_axi_awready;
  input [1023:0]s_axi_awuser;
  input s_axi_awvalid;
  output [2:0]s_axi_bid;
  input s_axi_bready;
  output [1:0]s_axi_bresp;
  output [1023:0]s_axi_buser;
  output s_axi_bvalid;
  output [31:0]s_axi_rdata;
  output [2:0]s_axi_rid;
  output s_axi_rlast;
  input s_axi_rready;
  output [1:0]s_axi_rresp;
  output [1023:0]s_axi_ruser;
  output s_axi_rvalid;
  input [31:0]s_axi_wdata;
  input s_axi_wlast;
  output s_axi_wready;
  input [3:0]s_axi_wstrb;
  input [1023:0]s_axi_wuser;
  input s_axi_wvalid;

  wire aclk_1;
  wire aresetn_1;
  wire [4:0]m23_exit_M_AXI_ARADDR;
  wire [2:0]m23_exit_M_AXI_ARPROT;
  wire m23_exit_M_AXI_ARREADY;
  wire m23_exit_M_AXI_ARVALID;
  wire [4:0]m23_exit_M_AXI_AWADDR;
  wire [2:0]m23_exit_M_AXI_AWPROT;
  wire m23_exit_M_AXI_AWREADY;
  wire m23_exit_M_AXI_AWVALID;
  wire m23_exit_M_AXI_BREADY;
  wire [1:0]m23_exit_M_AXI_BRESP;
  wire m23_exit_M_AXI_BVALID;
  wire [31:0]m23_exit_M_AXI_RDATA;
  wire m23_exit_M_AXI_RREADY;
  wire [1:0]m23_exit_M_AXI_RRESP;
  wire m23_exit_M_AXI_RVALID;
  wire [31:0]m23_exit_M_AXI_WDATA;
  wire m23_exit_M_AXI_WREADY;
  wire [3:0]m23_exit_M_AXI_WSTRB;
  wire m23_exit_M_AXI_WVALID;
  wire [4:0]s_axi_1_ARADDR;
  wire [3:0]s_axi_1_ARCACHE;
  wire [2:0]s_axi_1_ARID;
  wire [7:0]s_axi_1_ARLEN;
  wire [0:0]s_axi_1_ARLOCK;
  wire [2:0]s_axi_1_ARPROT;
  wire [3:0]s_axi_1_ARQOS;
  wire s_axi_1_ARREADY;
  wire [1023:0]s_axi_1_ARUSER;
  wire s_axi_1_ARVALID;
  wire [4:0]s_axi_1_AWADDR;
  wire [3:0]s_axi_1_AWCACHE;
  wire [2:0]s_axi_1_AWID;
  wire [7:0]s_axi_1_AWLEN;
  wire [0:0]s_axi_1_AWLOCK;
  wire [2:0]s_axi_1_AWPROT;
  wire [3:0]s_axi_1_AWQOS;
  wire s_axi_1_AWREADY;
  wire [1023:0]s_axi_1_AWUSER;
  wire s_axi_1_AWVALID;
  wire [2:0]s_axi_1_BID;
  wire s_axi_1_BREADY;
  wire [1:0]s_axi_1_BRESP;
  wire [1023:0]s_axi_1_BUSER;
  wire s_axi_1_BVALID;
  wire [31:0]s_axi_1_RDATA;
  wire [2:0]s_axi_1_RID;
  wire s_axi_1_RLAST;
  wire s_axi_1_RREADY;
  wire [1:0]s_axi_1_RRESP;
  wire [1023:0]s_axi_1_RUSER;
  wire s_axi_1_RVALID;
  wire [31:0]s_axi_1_WDATA;
  wire s_axi_1_WLAST;
  wire s_axi_1_WREADY;
  wire [3:0]s_axi_1_WSTRB;
  wire [1023:0]s_axi_1_WUSER;
  wire s_axi_1_WVALID;

  assign aclk_1 = aclk;
  assign aresetn_1 = aresetn;
  assign m23_exit_M_AXI_ARREADY = m_axi_arready;
  assign m23_exit_M_AXI_AWREADY = m_axi_awready;
  assign m23_exit_M_AXI_BRESP = m_axi_bresp[1:0];
  assign m23_exit_M_AXI_BVALID = m_axi_bvalid;
  assign m23_exit_M_AXI_RDATA = m_axi_rdata[31:0];
  assign m23_exit_M_AXI_RRESP = m_axi_rresp[1:0];
  assign m23_exit_M_AXI_RVALID = m_axi_rvalid;
  assign m23_exit_M_AXI_WREADY = m_axi_wready;
  assign m_axi_araddr[4:0] = m23_exit_M_AXI_ARADDR;
  assign m_axi_arprot[2:0] = m23_exit_M_AXI_ARPROT;
  assign m_axi_arvalid = m23_exit_M_AXI_ARVALID;
  assign m_axi_awaddr[4:0] = m23_exit_M_AXI_AWADDR;
  assign m_axi_awprot[2:0] = m23_exit_M_AXI_AWPROT;
  assign m_axi_awvalid = m23_exit_M_AXI_AWVALID;
  assign m_axi_bready = m23_exit_M_AXI_BREADY;
  assign m_axi_rready = m23_exit_M_AXI_RREADY;
  assign m_axi_wdata[31:0] = m23_exit_M_AXI_WDATA;
  assign m_axi_wstrb[3:0] = m23_exit_M_AXI_WSTRB;
  assign m_axi_wvalid = m23_exit_M_AXI_WVALID;
  assign s_axi_1_ARADDR = s_axi_araddr[4:0];
  assign s_axi_1_ARCACHE = s_axi_arcache[3:0];
  assign s_axi_1_ARID = s_axi_arid[2:0];
  assign s_axi_1_ARLEN = s_axi_arlen[7:0];
  assign s_axi_1_ARLOCK = s_axi_arlock[0];
  assign s_axi_1_ARPROT = s_axi_arprot[2:0];
  assign s_axi_1_ARQOS = s_axi_arqos[3:0];
  assign s_axi_1_ARUSER = s_axi_aruser[1023:0];
  assign s_axi_1_ARVALID = s_axi_arvalid;
  assign s_axi_1_AWADDR = s_axi_awaddr[4:0];
  assign s_axi_1_AWCACHE = s_axi_awcache[3:0];
  assign s_axi_1_AWID = s_axi_awid[2:0];
  assign s_axi_1_AWLEN = s_axi_awlen[7:0];
  assign s_axi_1_AWLOCK = s_axi_awlock[0];
  assign s_axi_1_AWPROT = s_axi_awprot[2:0];
  assign s_axi_1_AWQOS = s_axi_awqos[3:0];
  assign s_axi_1_AWUSER = s_axi_awuser[1023:0];
  assign s_axi_1_AWVALID = s_axi_awvalid;
  assign s_axi_1_BREADY = s_axi_bready;
  assign s_axi_1_RREADY = s_axi_rready;
  assign s_axi_1_WDATA = s_axi_wdata[31:0];
  assign s_axi_1_WLAST = s_axi_wlast;
  assign s_axi_1_WSTRB = s_axi_wstrb[3:0];
  assign s_axi_1_WUSER = s_axi_wuser[1023:0];
  assign s_axi_1_WVALID = s_axi_wvalid;
  assign s_axi_arready = s_axi_1_ARREADY;
  assign s_axi_awready = s_axi_1_AWREADY;
  assign s_axi_bid[2:0] = s_axi_1_BID;
  assign s_axi_bresp[1:0] = s_axi_1_BRESP;
  assign s_axi_buser[1023:0] = s_axi_1_BUSER;
  assign s_axi_bvalid = s_axi_1_BVALID;
  assign s_axi_rdata[31:0] = s_axi_1_RDATA;
  assign s_axi_rid[2:0] = s_axi_1_RID;
  assign s_axi_rlast = s_axi_1_RLAST;
  assign s_axi_rresp[1:0] = s_axi_1_RRESP;
  assign s_axi_ruser[1023:0] = s_axi_1_RUSER;
  assign s_axi_rvalid = s_axi_1_RVALID;
  assign s_axi_wready = s_axi_1_WREADY;
  bd_afc3_m23e_0 m23_exit
       (.aclk(aclk_1),
        .aresetn(aresetn_1),
        .m_axi_araddr(m23_exit_M_AXI_ARADDR),
        .m_axi_arprot(m23_exit_M_AXI_ARPROT),
        .m_axi_arready(m23_exit_M_AXI_ARREADY),
        .m_axi_arvalid(m23_exit_M_AXI_ARVALID),
        .m_axi_awaddr(m23_exit_M_AXI_AWADDR),
        .m_axi_awprot(m23_exit_M_AXI_AWPROT),
        .m_axi_awready(m23_exit_M_AXI_AWREADY),
        .m_axi_awvalid(m23_exit_M_AXI_AWVALID),
        .m_axi_bready(m23_exit_M_AXI_BREADY),
        .m_axi_bresp(m23_exit_M_AXI_BRESP),
        .m_axi_bvalid(m23_exit_M_AXI_BVALID),
        .m_axi_rdata(m23_exit_M_AXI_RDATA),
        .m_axi_rready(m23_exit_M_AXI_RREADY),
        .m_axi_rresp(m23_exit_M_AXI_RRESP),
        .m_axi_rvalid(m23_exit_M_AXI_RVALID),
        .m_axi_wdata(m23_exit_M_AXI_WDATA),
        .m_axi_wready(m23_exit_M_AXI_WREADY),
        .m_axi_wstrb(m23_exit_M_AXI_WSTRB),
        .m_axi_wvalid(m23_exit_M_AXI_WVALID),
        .s_axi_araddr(s_axi_1_ARADDR),
        .s_axi_arcache(s_axi_1_ARCACHE),
        .s_axi_arid(s_axi_1_ARID),
        .s_axi_arlen(s_axi_1_ARLEN),
        .s_axi_arlock(s_axi_1_ARLOCK),
        .s_axi_arprot(s_axi_1_ARPROT),
        .s_axi_arqos(s_axi_1_ARQOS),
        .s_axi_arready(s_axi_1_ARREADY),
        .s_axi_aruser(s_axi_1_ARUSER),
        .s_axi_arvalid(s_axi_1_ARVALID),
        .s_axi_awaddr(s_axi_1_AWADDR),
        .s_axi_awcache(s_axi_1_AWCACHE),
        .s_axi_awid(s_axi_1_AWID),
        .s_axi_awlen(s_axi_1_AWLEN),
        .s_axi_awlock(s_axi_1_AWLOCK),
        .s_axi_awprot(s_axi_1_AWPROT),
        .s_axi_awqos(s_axi_1_AWQOS),
        .s_axi_awready(s_axi_1_AWREADY),
        .s_axi_awuser(s_axi_1_AWUSER),
        .s_axi_awvalid(s_axi_1_AWVALID),
        .s_axi_bid(s_axi_1_BID),
        .s_axi_bready(s_axi_1_BREADY),
        .s_axi_bresp(s_axi_1_BRESP),
        .s_axi_buser(s_axi_1_BUSER),
        .s_axi_bvalid(s_axi_1_BVALID),
        .s_axi_rdata(s_axi_1_RDATA),
        .s_axi_rid(s_axi_1_RID),
        .s_axi_rlast(s_axi_1_RLAST),
        .s_axi_rready(s_axi_1_RREADY),
        .s_axi_rresp(s_axi_1_RRESP),
        .s_axi_ruser(s_axi_1_RUSER),
        .s_axi_rvalid(s_axi_1_RVALID),
        .s_axi_wdata(s_axi_1_WDATA),
        .s_axi_wlast(s_axi_1_WLAST),
        .s_axi_wready(s_axi_1_WREADY),
        .s_axi_wstrb(s_axi_1_WSTRB),
        .s_axi_wuser(s_axi_1_WUSER),
        .s_axi_wvalid(s_axi_1_WVALID));
endmodule

module m23_nodes_imp_T5E05D
   (M_SC_AR_info,
    M_SC_AR_payld,
    M_SC_AR_recv,
    M_SC_AR_req,
    M_SC_AR_send,
    M_SC_AW_info,
    M_SC_AW_payld,
    M_SC_AW_recv,
    M_SC_AW_req,
    M_SC_AW_send,
    M_SC_B_info,
    M_SC_B_payld,
    M_SC_B_recv,
    M_SC_B_req,
    M_SC_B_send,
    M_SC_R_info,
    M_SC_R_payld,
    M_SC_R_recv,
    M_SC_R_req,
    M_SC_R_send,
    M_SC_W_info,
    M_SC_W_payld,
    M_SC_W_recv,
    M_SC_W_req,
    M_SC_W_send,
    S_SC_AR_info,
    S_SC_AR_payld,
    S_SC_AR_recv,
    S_SC_AR_req,
    S_SC_AR_send,
    S_SC_AW_info,
    S_SC_AW_payld,
    S_SC_AW_recv,
    S_SC_AW_req,
    S_SC_AW_send,
    S_SC_B_info,
    S_SC_B_payld,
    S_SC_B_recv,
    S_SC_B_req,
    S_SC_B_send,
    S_SC_R_info,
    S_SC_R_payld,
    S_SC_R_recv,
    S_SC_R_req,
    S_SC_R_send,
    S_SC_W_info,
    S_SC_W_payld,
    S_SC_W_recv,
    S_SC_W_req,
    S_SC_W_send,
    m_axi_aclk,
    m_axi_aresetn,
    s_axi_aclk,
    s_axi_aresetn);
  output [0:0]M_SC_AR_info;
  output [181:0]M_SC_AR_payld;
  input [0:0]M_SC_AR_recv;
  output [0:0]M_SC_AR_req;
  output [0:0]M_SC_AR_send;
  output [0:0]M_SC_AW_info;
  output [181:0]M_SC_AW_payld;
  input [0:0]M_SC_AW_recv;
  output [0:0]M_SC_AW_req;
  output [0:0]M_SC_AW_send;
  output [0:0]M_SC_B_info;
  output [8:0]M_SC_B_payld;
  input [0:0]M_SC_B_recv;
  output [0:0]M_SC_B_req;
  output [0:0]M_SC_B_send;
  output [0:0]M_SC_R_info;
  output [54:0]M_SC_R_payld;
  input [0:0]M_SC_R_recv;
  output [0:0]M_SC_R_req;
  output [0:0]M_SC_R_send;
  output [0:0]M_SC_W_info;
  output [68:0]M_SC_W_payld;
  input [0:0]M_SC_W_recv;
  output [0:0]M_SC_W_req;
  output [0:0]M_SC_W_send;
  input [0:0]S_SC_AR_info;
  input [181:0]S_SC_AR_payld;
  output [0:0]S_SC_AR_recv;
  input [0:0]S_SC_AR_req;
  input [0:0]S_SC_AR_send;
  input [0:0]S_SC_AW_info;
  input [181:0]S_SC_AW_payld;
  output [0:0]S_SC_AW_recv;
  input [0:0]S_SC_AW_req;
  input [0:0]S_SC_AW_send;
  input [0:0]S_SC_B_info;
  input [8:0]S_SC_B_payld;
  output [0:0]S_SC_B_recv;
  input [0:0]S_SC_B_req;
  input [0:0]S_SC_B_send;
  input [0:0]S_SC_R_info;
  input [54:0]S_SC_R_payld;
  output [0:0]S_SC_R_recv;
  input [0:0]S_SC_R_req;
  input [0:0]S_SC_R_send;
  input [0:0]S_SC_W_info;
  input [68:0]S_SC_W_payld;
  output [0:0]S_SC_W_recv;
  input [0:0]S_SC_W_req;
  input [0:0]S_SC_W_send;
  input m_axi_aclk;
  input m_axi_aresetn;
  input s_axi_aclk;
  input s_axi_aresetn;

  wire [0:0]S_SC_AR_1_INFO;
  wire [181:0]S_SC_AR_1_PAYLD;
  wire [0:0]S_SC_AR_1_RECV;
  wire [0:0]S_SC_AR_1_REQ;
  wire [0:0]S_SC_AR_1_SEND;
  wire [0:0]S_SC_AW_1_INFO;
  wire [181:0]S_SC_AW_1_PAYLD;
  wire [0:0]S_SC_AW_1_RECV;
  wire [0:0]S_SC_AW_1_REQ;
  wire [0:0]S_SC_AW_1_SEND;
  wire [0:0]S_SC_B_1_INFO;
  wire [8:0]S_SC_B_1_PAYLD;
  wire [0:0]S_SC_B_1_RECV;
  wire [0:0]S_SC_B_1_REQ;
  wire [0:0]S_SC_B_1_SEND;
  wire [0:0]S_SC_R_1_INFO;
  wire [54:0]S_SC_R_1_PAYLD;
  wire [0:0]S_SC_R_1_RECV;
  wire [0:0]S_SC_R_1_REQ;
  wire [0:0]S_SC_R_1_SEND;
  wire [0:0]S_SC_W_1_INFO;
  wire [68:0]S_SC_W_1_PAYLD;
  wire [0:0]S_SC_W_1_RECV;
  wire [0:0]S_SC_W_1_REQ;
  wire [0:0]S_SC_W_1_SEND;
  wire [0:0]m23_ar_node_M_SC_INFO;
  wire [181:0]m23_ar_node_M_SC_PAYLD;
  wire [0:0]m23_ar_node_M_SC_RECV;
  wire [0:0]m23_ar_node_M_SC_REQ;
  wire [0:0]m23_ar_node_M_SC_SEND;
  wire [0:0]m23_aw_node_M_SC_INFO;
  wire [181:0]m23_aw_node_M_SC_PAYLD;
  wire [0:0]m23_aw_node_M_SC_RECV;
  wire [0:0]m23_aw_node_M_SC_REQ;
  wire [0:0]m23_aw_node_M_SC_SEND;
  wire [0:0]m23_b_node_M_SC_INFO;
  wire [8:0]m23_b_node_M_SC_PAYLD;
  wire [0:0]m23_b_node_M_SC_RECV;
  wire [0:0]m23_b_node_M_SC_REQ;
  wire [0:0]m23_b_node_M_SC_SEND;
  wire [0:0]m23_r_node_M_SC_INFO;
  wire [54:0]m23_r_node_M_SC_PAYLD;
  wire [0:0]m23_r_node_M_SC_RECV;
  wire [0:0]m23_r_node_M_SC_REQ;
  wire [0:0]m23_r_node_M_SC_SEND;
  wire [0:0]m23_w_node_M_SC_INFO;
  wire [68:0]m23_w_node_M_SC_PAYLD;
  wire [0:0]m23_w_node_M_SC_RECV;
  wire [0:0]m23_w_node_M_SC_REQ;
  wire [0:0]m23_w_node_M_SC_SEND;
  wire m_axi_aclk_1;
  wire m_axi_aresetn_1;
  wire s_axi_aclk_1;
  wire s_axi_aresetn_1;

  assign M_SC_AR_info[0] = m23_ar_node_M_SC_INFO;
  assign M_SC_AR_payld[181:0] = m23_ar_node_M_SC_PAYLD;
  assign M_SC_AR_req[0] = m23_ar_node_M_SC_REQ;
  assign M_SC_AR_send[0] = m23_ar_node_M_SC_SEND;
  assign M_SC_AW_info[0] = m23_aw_node_M_SC_INFO;
  assign M_SC_AW_payld[181:0] = m23_aw_node_M_SC_PAYLD;
  assign M_SC_AW_req[0] = m23_aw_node_M_SC_REQ;
  assign M_SC_AW_send[0] = m23_aw_node_M_SC_SEND;
  assign M_SC_B_info[0] = m23_b_node_M_SC_INFO;
  assign M_SC_B_payld[8:0] = m23_b_node_M_SC_PAYLD;
  assign M_SC_B_req[0] = m23_b_node_M_SC_REQ;
  assign M_SC_B_send[0] = m23_b_node_M_SC_SEND;
  assign M_SC_R_info[0] = m23_r_node_M_SC_INFO;
  assign M_SC_R_payld[54:0] = m23_r_node_M_SC_PAYLD;
  assign M_SC_R_req[0] = m23_r_node_M_SC_REQ;
  assign M_SC_R_send[0] = m23_r_node_M_SC_SEND;
  assign M_SC_W_info[0] = m23_w_node_M_SC_INFO;
  assign M_SC_W_payld[68:0] = m23_w_node_M_SC_PAYLD;
  assign M_SC_W_req[0] = m23_w_node_M_SC_REQ;
  assign M_SC_W_send[0] = m23_w_node_M_SC_SEND;
  assign S_SC_AR_1_INFO = S_SC_AR_info[0];
  assign S_SC_AR_1_PAYLD = S_SC_AR_payld[181:0];
  assign S_SC_AR_1_REQ = S_SC_AR_req[0];
  assign S_SC_AR_1_SEND = S_SC_AR_send[0];
  assign S_SC_AR_recv[0] = S_SC_AR_1_RECV;
  assign S_SC_AW_1_INFO = S_SC_AW_info[0];
  assign S_SC_AW_1_PAYLD = S_SC_AW_payld[181:0];
  assign S_SC_AW_1_REQ = S_SC_AW_req[0];
  assign S_SC_AW_1_SEND = S_SC_AW_send[0];
  assign S_SC_AW_recv[0] = S_SC_AW_1_RECV;
  assign S_SC_B_1_INFO = S_SC_B_info[0];
  assign S_SC_B_1_PAYLD = S_SC_B_payld[8:0];
  assign S_SC_B_1_REQ = S_SC_B_req[0];
  assign S_SC_B_1_SEND = S_SC_B_send[0];
  assign S_SC_B_recv[0] = S_SC_B_1_RECV;
  assign S_SC_R_1_INFO = S_SC_R_info[0];
  assign S_SC_R_1_PAYLD = S_SC_R_payld[54:0];
  assign S_SC_R_1_REQ = S_SC_R_req[0];
  assign S_SC_R_1_SEND = S_SC_R_send[0];
  assign S_SC_R_recv[0] = S_SC_R_1_RECV;
  assign S_SC_W_1_INFO = S_SC_W_info[0];
  assign S_SC_W_1_PAYLD = S_SC_W_payld[68:0];
  assign S_SC_W_1_REQ = S_SC_W_req[0];
  assign S_SC_W_1_SEND = S_SC_W_send[0];
  assign S_SC_W_recv[0] = S_SC_W_1_RECV;
  assign m23_ar_node_M_SC_RECV = M_SC_AR_recv[0];
  assign m23_aw_node_M_SC_RECV = M_SC_AW_recv[0];
  assign m23_b_node_M_SC_RECV = M_SC_B_recv[0];
  assign m23_r_node_M_SC_RECV = M_SC_R_recv[0];
  assign m23_w_node_M_SC_RECV = M_SC_W_recv[0];
  assign m_axi_aclk_1 = m_axi_aclk;
  assign m_axi_aresetn_1 = m_axi_aresetn;
  assign s_axi_aclk_1 = s_axi_aclk;
  assign s_axi_aresetn_1 = s_axi_aresetn;
  bd_afc3_m23arn_0 m23_ar_node
       (.m_sc_aclk(m_axi_aclk_1),
        .m_sc_aresetn(m_axi_aresetn_1),
        .m_sc_info(m23_ar_node_M_SC_INFO),
        .m_sc_payld(m23_ar_node_M_SC_PAYLD),
        .m_sc_recv(m23_ar_node_M_SC_RECV),
        .m_sc_req(m23_ar_node_M_SC_REQ),
        .m_sc_send(m23_ar_node_M_SC_SEND),
        .s_sc_aclk(s_axi_aclk_1),
        .s_sc_aresetn(s_axi_aresetn_1),
        .s_sc_info(S_SC_AR_1_INFO),
        .s_sc_payld(S_SC_AR_1_PAYLD),
        .s_sc_recv(S_SC_AR_1_RECV),
        .s_sc_req(S_SC_AR_1_REQ),
        .s_sc_send(S_SC_AR_1_SEND));
  bd_afc3_m23awn_0 m23_aw_node
       (.m_sc_aclk(m_axi_aclk_1),
        .m_sc_aresetn(m_axi_aresetn_1),
        .m_sc_info(m23_aw_node_M_SC_INFO),
        .m_sc_payld(m23_aw_node_M_SC_PAYLD),
        .m_sc_recv(m23_aw_node_M_SC_RECV),
        .m_sc_req(m23_aw_node_M_SC_REQ),
        .m_sc_send(m23_aw_node_M_SC_SEND),
        .s_sc_aclk(s_axi_aclk_1),
        .s_sc_aresetn(s_axi_aresetn_1),
        .s_sc_info(S_SC_AW_1_INFO),
        .s_sc_payld(S_SC_AW_1_PAYLD),
        .s_sc_recv(S_SC_AW_1_RECV),
        .s_sc_req(S_SC_AW_1_REQ),
        .s_sc_send(S_SC_AW_1_SEND));
  bd_afc3_m23bn_0 m23_b_node
       (.m_sc_aclk(s_axi_aclk_1),
        .m_sc_aresetn(s_axi_aresetn_1),
        .m_sc_info(m23_b_node_M_SC_INFO),
        .m_sc_payld(m23_b_node_M_SC_PAYLD),
        .m_sc_recv(m23_b_node_M_SC_RECV),
        .m_sc_req(m23_b_node_M_SC_REQ),
        .m_sc_send(m23_b_node_M_SC_SEND),
        .s_sc_aclk(m_axi_aclk_1),
        .s_sc_aresetn(m_axi_aresetn_1),
        .s_sc_info(S_SC_B_1_INFO),
        .s_sc_payld(S_SC_B_1_PAYLD),
        .s_sc_recv(S_SC_B_1_RECV),
        .s_sc_req(S_SC_B_1_REQ),
        .s_sc_send(S_SC_B_1_SEND));
  bd_afc3_m23rn_0 m23_r_node
       (.m_sc_aclk(s_axi_aclk_1),
        .m_sc_aresetn(s_axi_aresetn_1),
        .m_sc_info(m23_r_node_M_SC_INFO),
        .m_sc_payld(m23_r_node_M_SC_PAYLD),
        .m_sc_recv(m23_r_node_M_SC_RECV),
        .m_sc_req(m23_r_node_M_SC_REQ),
        .m_sc_send(m23_r_node_M_SC_SEND),
        .s_sc_aclk(m_axi_aclk_1),
        .s_sc_aresetn(m_axi_aresetn_1),
        .s_sc_info(S_SC_R_1_INFO),
        .s_sc_payld(S_SC_R_1_PAYLD),
        .s_sc_recv(S_SC_R_1_RECV),
        .s_sc_req(S_SC_R_1_REQ),
        .s_sc_send(S_SC_R_1_SEND));
  bd_afc3_m23wn_0 m23_w_node
       (.m_sc_aclk(m_axi_aclk_1),
        .m_sc_aresetn(m_axi_aresetn_1),
        .m_sc_info(m23_w_node_M_SC_INFO),
        .m_sc_payld(m23_w_node_M_SC_PAYLD),
        .m_sc_recv(m23_w_node_M_SC_RECV),
        .m_sc_req(m23_w_node_M_SC_REQ),
        .m_sc_send(m23_w_node_M_SC_SEND),
        .s_sc_aclk(s_axi_aclk_1),
        .s_sc_aresetn(s_axi_aresetn_1),
        .s_sc_info(S_SC_W_1_INFO),
        .s_sc_payld(S_SC_W_1_PAYLD),
        .s_sc_recv(S_SC_W_1_RECV),
        .s_sc_req(S_SC_W_1_REQ),
        .s_sc_send(S_SC_W_1_SEND));
endmodule

module m24_exit_pipeline_imp_PS4QTQ
   (aclk,
    aresetn,
    m_axi_araddr,
    m_axi_arprot,
    m_axi_arready,
    m_axi_arvalid,
    m_axi_awaddr,
    m_axi_awprot,
    m_axi_awready,
    m_axi_awvalid,
    m_axi_bready,
    m_axi_bresp,
    m_axi_bvalid,
    m_axi_rdata,
    m_axi_rready,
    m_axi_rresp,
    m_axi_rvalid,
    m_axi_wdata,
    m_axi_wready,
    m_axi_wstrb,
    m_axi_wvalid,
    s_axi_araddr,
    s_axi_arcache,
    s_axi_arid,
    s_axi_arlen,
    s_axi_arlock,
    s_axi_arprot,
    s_axi_arqos,
    s_axi_arready,
    s_axi_aruser,
    s_axi_arvalid,
    s_axi_awaddr,
    s_axi_awcache,
    s_axi_awid,
    s_axi_awlen,
    s_axi_awlock,
    s_axi_awprot,
    s_axi_awqos,
    s_axi_awready,
    s_axi_awuser,
    s_axi_awvalid,
    s_axi_bid,
    s_axi_bready,
    s_axi_bresp,
    s_axi_buser,
    s_axi_bvalid,
    s_axi_rdata,
    s_axi_rid,
    s_axi_rlast,
    s_axi_rready,
    s_axi_rresp,
    s_axi_ruser,
    s_axi_rvalid,
    s_axi_wdata,
    s_axi_wlast,
    s_axi_wready,
    s_axi_wstrb,
    s_axi_wuser,
    s_axi_wvalid);
  input aclk;
  input aresetn;
  output [9:0]m_axi_araddr;
  output [2:0]m_axi_arprot;
  input m_axi_arready;
  output m_axi_arvalid;
  output [9:0]m_axi_awaddr;
  output [2:0]m_axi_awprot;
  input m_axi_awready;
  output m_axi_awvalid;
  output m_axi_bready;
  input [1:0]m_axi_bresp;
  input m_axi_bvalid;
  input [31:0]m_axi_rdata;
  output m_axi_rready;
  input [1:0]m_axi_rresp;
  input m_axi_rvalid;
  output [31:0]m_axi_wdata;
  input m_axi_wready;
  output [3:0]m_axi_wstrb;
  output m_axi_wvalid;
  input [9:0]s_axi_araddr;
  input [3:0]s_axi_arcache;
  input [2:0]s_axi_arid;
  input [7:0]s_axi_arlen;
  input [0:0]s_axi_arlock;
  input [2:0]s_axi_arprot;
  input [3:0]s_axi_arqos;
  output s_axi_arready;
  input [1023:0]s_axi_aruser;
  input s_axi_arvalid;
  input [9:0]s_axi_awaddr;
  input [3:0]s_axi_awcache;
  input [2:0]s_axi_awid;
  input [7:0]s_axi_awlen;
  input [0:0]s_axi_awlock;
  input [2:0]s_axi_awprot;
  input [3:0]s_axi_awqos;
  output s_axi_awready;
  input [1023:0]s_axi_awuser;
  input s_axi_awvalid;
  output [2:0]s_axi_bid;
  input s_axi_bready;
  output [1:0]s_axi_bresp;
  output [1023:0]s_axi_buser;
  output s_axi_bvalid;
  output [31:0]s_axi_rdata;
  output [2:0]s_axi_rid;
  output s_axi_rlast;
  input s_axi_rready;
  output [1:0]s_axi_rresp;
  output [1023:0]s_axi_ruser;
  output s_axi_rvalid;
  input [31:0]s_axi_wdata;
  input s_axi_wlast;
  output s_axi_wready;
  input [3:0]s_axi_wstrb;
  input [1023:0]s_axi_wuser;
  input s_axi_wvalid;

  wire aclk_1;
  wire aresetn_1;
  wire [9:0]m24_exit_M_AXI_ARADDR;
  wire [2:0]m24_exit_M_AXI_ARPROT;
  wire m24_exit_M_AXI_ARREADY;
  wire m24_exit_M_AXI_ARVALID;
  wire [9:0]m24_exit_M_AXI_AWADDR;
  wire [2:0]m24_exit_M_AXI_AWPROT;
  wire m24_exit_M_AXI_AWREADY;
  wire m24_exit_M_AXI_AWVALID;
  wire m24_exit_M_AXI_BREADY;
  wire [1:0]m24_exit_M_AXI_BRESP;
  wire m24_exit_M_AXI_BVALID;
  wire [31:0]m24_exit_M_AXI_RDATA;
  wire m24_exit_M_AXI_RREADY;
  wire [1:0]m24_exit_M_AXI_RRESP;
  wire m24_exit_M_AXI_RVALID;
  wire [31:0]m24_exit_M_AXI_WDATA;
  wire m24_exit_M_AXI_WREADY;
  wire [3:0]m24_exit_M_AXI_WSTRB;
  wire m24_exit_M_AXI_WVALID;
  wire [9:0]s_axi_1_ARADDR;
  wire [3:0]s_axi_1_ARCACHE;
  wire [2:0]s_axi_1_ARID;
  wire [7:0]s_axi_1_ARLEN;
  wire [0:0]s_axi_1_ARLOCK;
  wire [2:0]s_axi_1_ARPROT;
  wire [3:0]s_axi_1_ARQOS;
  wire s_axi_1_ARREADY;
  wire [1023:0]s_axi_1_ARUSER;
  wire s_axi_1_ARVALID;
  wire [9:0]s_axi_1_AWADDR;
  wire [3:0]s_axi_1_AWCACHE;
  wire [2:0]s_axi_1_AWID;
  wire [7:0]s_axi_1_AWLEN;
  wire [0:0]s_axi_1_AWLOCK;
  wire [2:0]s_axi_1_AWPROT;
  wire [3:0]s_axi_1_AWQOS;
  wire s_axi_1_AWREADY;
  wire [1023:0]s_axi_1_AWUSER;
  wire s_axi_1_AWVALID;
  wire [2:0]s_axi_1_BID;
  wire s_axi_1_BREADY;
  wire [1:0]s_axi_1_BRESP;
  wire [1023:0]s_axi_1_BUSER;
  wire s_axi_1_BVALID;
  wire [31:0]s_axi_1_RDATA;
  wire [2:0]s_axi_1_RID;
  wire s_axi_1_RLAST;
  wire s_axi_1_RREADY;
  wire [1:0]s_axi_1_RRESP;
  wire [1023:0]s_axi_1_RUSER;
  wire s_axi_1_RVALID;
  wire [31:0]s_axi_1_WDATA;
  wire s_axi_1_WLAST;
  wire s_axi_1_WREADY;
  wire [3:0]s_axi_1_WSTRB;
  wire [1023:0]s_axi_1_WUSER;
  wire s_axi_1_WVALID;

  assign aclk_1 = aclk;
  assign aresetn_1 = aresetn;
  assign m24_exit_M_AXI_ARREADY = m_axi_arready;
  assign m24_exit_M_AXI_AWREADY = m_axi_awready;
  assign m24_exit_M_AXI_BRESP = m_axi_bresp[1:0];
  assign m24_exit_M_AXI_BVALID = m_axi_bvalid;
  assign m24_exit_M_AXI_RDATA = m_axi_rdata[31:0];
  assign m24_exit_M_AXI_RRESP = m_axi_rresp[1:0];
  assign m24_exit_M_AXI_RVALID = m_axi_rvalid;
  assign m24_exit_M_AXI_WREADY = m_axi_wready;
  assign m_axi_araddr[9:0] = m24_exit_M_AXI_ARADDR;
  assign m_axi_arprot[2:0] = m24_exit_M_AXI_ARPROT;
  assign m_axi_arvalid = m24_exit_M_AXI_ARVALID;
  assign m_axi_awaddr[9:0] = m24_exit_M_AXI_AWADDR;
  assign m_axi_awprot[2:0] = m24_exit_M_AXI_AWPROT;
  assign m_axi_awvalid = m24_exit_M_AXI_AWVALID;
  assign m_axi_bready = m24_exit_M_AXI_BREADY;
  assign m_axi_rready = m24_exit_M_AXI_RREADY;
  assign m_axi_wdata[31:0] = m24_exit_M_AXI_WDATA;
  assign m_axi_wstrb[3:0] = m24_exit_M_AXI_WSTRB;
  assign m_axi_wvalid = m24_exit_M_AXI_WVALID;
  assign s_axi_1_ARADDR = s_axi_araddr[9:0];
  assign s_axi_1_ARCACHE = s_axi_arcache[3:0];
  assign s_axi_1_ARID = s_axi_arid[2:0];
  assign s_axi_1_ARLEN = s_axi_arlen[7:0];
  assign s_axi_1_ARLOCK = s_axi_arlock[0];
  assign s_axi_1_ARPROT = s_axi_arprot[2:0];
  assign s_axi_1_ARQOS = s_axi_arqos[3:0];
  assign s_axi_1_ARUSER = s_axi_aruser[1023:0];
  assign s_axi_1_ARVALID = s_axi_arvalid;
  assign s_axi_1_AWADDR = s_axi_awaddr[9:0];
  assign s_axi_1_AWCACHE = s_axi_awcache[3:0];
  assign s_axi_1_AWID = s_axi_awid[2:0];
  assign s_axi_1_AWLEN = s_axi_awlen[7:0];
  assign s_axi_1_AWLOCK = s_axi_awlock[0];
  assign s_axi_1_AWPROT = s_axi_awprot[2:0];
  assign s_axi_1_AWQOS = s_axi_awqos[3:0];
  assign s_axi_1_AWUSER = s_axi_awuser[1023:0];
  assign s_axi_1_AWVALID = s_axi_awvalid;
  assign s_axi_1_BREADY = s_axi_bready;
  assign s_axi_1_RREADY = s_axi_rready;
  assign s_axi_1_WDATA = s_axi_wdata[31:0];
  assign s_axi_1_WLAST = s_axi_wlast;
  assign s_axi_1_WSTRB = s_axi_wstrb[3:0];
  assign s_axi_1_WUSER = s_axi_wuser[1023:0];
  assign s_axi_1_WVALID = s_axi_wvalid;
  assign s_axi_arready = s_axi_1_ARREADY;
  assign s_axi_awready = s_axi_1_AWREADY;
  assign s_axi_bid[2:0] = s_axi_1_BID;
  assign s_axi_bresp[1:0] = s_axi_1_BRESP;
  assign s_axi_buser[1023:0] = s_axi_1_BUSER;
  assign s_axi_bvalid = s_axi_1_BVALID;
  assign s_axi_rdata[31:0] = s_axi_1_RDATA;
  assign s_axi_rid[2:0] = s_axi_1_RID;
  assign s_axi_rlast = s_axi_1_RLAST;
  assign s_axi_rresp[1:0] = s_axi_1_RRESP;
  assign s_axi_ruser[1023:0] = s_axi_1_RUSER;
  assign s_axi_rvalid = s_axi_1_RVALID;
  assign s_axi_wready = s_axi_1_WREADY;
  bd_afc3_m24e_0 m24_exit
       (.aclk(aclk_1),
        .aresetn(aresetn_1),
        .m_axi_araddr(m24_exit_M_AXI_ARADDR),
        .m_axi_arprot(m24_exit_M_AXI_ARPROT),
        .m_axi_arready(m24_exit_M_AXI_ARREADY),
        .m_axi_arvalid(m24_exit_M_AXI_ARVALID),
        .m_axi_awaddr(m24_exit_M_AXI_AWADDR),
        .m_axi_awprot(m24_exit_M_AXI_AWPROT),
        .m_axi_awready(m24_exit_M_AXI_AWREADY),
        .m_axi_awvalid(m24_exit_M_AXI_AWVALID),
        .m_axi_bready(m24_exit_M_AXI_BREADY),
        .m_axi_bresp(m24_exit_M_AXI_BRESP),
        .m_axi_bvalid(m24_exit_M_AXI_BVALID),
        .m_axi_rdata(m24_exit_M_AXI_RDATA),
        .m_axi_rready(m24_exit_M_AXI_RREADY),
        .m_axi_rresp(m24_exit_M_AXI_RRESP),
        .m_axi_rvalid(m24_exit_M_AXI_RVALID),
        .m_axi_wdata(m24_exit_M_AXI_WDATA),
        .m_axi_wready(m24_exit_M_AXI_WREADY),
        .m_axi_wstrb(m24_exit_M_AXI_WSTRB),
        .m_axi_wvalid(m24_exit_M_AXI_WVALID),
        .s_axi_araddr(s_axi_1_ARADDR),
        .s_axi_arcache(s_axi_1_ARCACHE),
        .s_axi_arid(s_axi_1_ARID),
        .s_axi_arlen(s_axi_1_ARLEN),
        .s_axi_arlock(s_axi_1_ARLOCK),
        .s_axi_arprot(s_axi_1_ARPROT),
        .s_axi_arqos(s_axi_1_ARQOS),
        .s_axi_arready(s_axi_1_ARREADY),
        .s_axi_aruser(s_axi_1_ARUSER),
        .s_axi_arvalid(s_axi_1_ARVALID),
        .s_axi_awaddr(s_axi_1_AWADDR),
        .s_axi_awcache(s_axi_1_AWCACHE),
        .s_axi_awid(s_axi_1_AWID),
        .s_axi_awlen(s_axi_1_AWLEN),
        .s_axi_awlock(s_axi_1_AWLOCK),
        .s_axi_awprot(s_axi_1_AWPROT),
        .s_axi_awqos(s_axi_1_AWQOS),
        .s_axi_awready(s_axi_1_AWREADY),
        .s_axi_awuser(s_axi_1_AWUSER),
        .s_axi_awvalid(s_axi_1_AWVALID),
        .s_axi_bid(s_axi_1_BID),
        .s_axi_bready(s_axi_1_BREADY),
        .s_axi_bresp(s_axi_1_BRESP),
        .s_axi_buser(s_axi_1_BUSER),
        .s_axi_bvalid(s_axi_1_BVALID),
        .s_axi_rdata(s_axi_1_RDATA),
        .s_axi_rid(s_axi_1_RID),
        .s_axi_rlast(s_axi_1_RLAST),
        .s_axi_rready(s_axi_1_RREADY),
        .s_axi_rresp(s_axi_1_RRESP),
        .s_axi_ruser(s_axi_1_RUSER),
        .s_axi_rvalid(s_axi_1_RVALID),
        .s_axi_wdata(s_axi_1_WDATA),
        .s_axi_wlast(s_axi_1_WLAST),
        .s_axi_wready(s_axi_1_WREADY),
        .s_axi_wstrb(s_axi_1_WSTRB),
        .s_axi_wuser(s_axi_1_WUSER),
        .s_axi_wvalid(s_axi_1_WVALID));
endmodule

module m24_nodes_imp_3JH6RL
   (M_SC_AR_info,
    M_SC_AR_payld,
    M_SC_AR_recv,
    M_SC_AR_req,
    M_SC_AR_send,
    M_SC_AW_info,
    M_SC_AW_payld,
    M_SC_AW_recv,
    M_SC_AW_req,
    M_SC_AW_send,
    M_SC_B_info,
    M_SC_B_payld,
    M_SC_B_recv,
    M_SC_B_req,
    M_SC_B_send,
    M_SC_R_info,
    M_SC_R_payld,
    M_SC_R_recv,
    M_SC_R_req,
    M_SC_R_send,
    M_SC_W_info,
    M_SC_W_payld,
    M_SC_W_recv,
    M_SC_W_req,
    M_SC_W_send,
    S_SC_AR_info,
    S_SC_AR_payld,
    S_SC_AR_recv,
    S_SC_AR_req,
    S_SC_AR_send,
    S_SC_AW_info,
    S_SC_AW_payld,
    S_SC_AW_recv,
    S_SC_AW_req,
    S_SC_AW_send,
    S_SC_B_info,
    S_SC_B_payld,
    S_SC_B_recv,
    S_SC_B_req,
    S_SC_B_send,
    S_SC_R_info,
    S_SC_R_payld,
    S_SC_R_recv,
    S_SC_R_req,
    S_SC_R_send,
    S_SC_W_info,
    S_SC_W_payld,
    S_SC_W_recv,
    S_SC_W_req,
    S_SC_W_send,
    m_axi_aclk,
    m_axi_aresetn,
    s_axi_aclk,
    s_axi_aresetn);
  output [0:0]M_SC_AR_info;
  output [181:0]M_SC_AR_payld;
  input [0:0]M_SC_AR_recv;
  output [0:0]M_SC_AR_req;
  output [0:0]M_SC_AR_send;
  output [0:0]M_SC_AW_info;
  output [181:0]M_SC_AW_payld;
  input [0:0]M_SC_AW_recv;
  output [0:0]M_SC_AW_req;
  output [0:0]M_SC_AW_send;
  output [0:0]M_SC_B_info;
  output [8:0]M_SC_B_payld;
  input [0:0]M_SC_B_recv;
  output [0:0]M_SC_B_req;
  output [0:0]M_SC_B_send;
  output [0:0]M_SC_R_info;
  output [54:0]M_SC_R_payld;
  input [0:0]M_SC_R_recv;
  output [0:0]M_SC_R_req;
  output [0:0]M_SC_R_send;
  output [0:0]M_SC_W_info;
  output [68:0]M_SC_W_payld;
  input [0:0]M_SC_W_recv;
  output [0:0]M_SC_W_req;
  output [0:0]M_SC_W_send;
  input [0:0]S_SC_AR_info;
  input [181:0]S_SC_AR_payld;
  output [0:0]S_SC_AR_recv;
  input [0:0]S_SC_AR_req;
  input [0:0]S_SC_AR_send;
  input [0:0]S_SC_AW_info;
  input [181:0]S_SC_AW_payld;
  output [0:0]S_SC_AW_recv;
  input [0:0]S_SC_AW_req;
  input [0:0]S_SC_AW_send;
  input [0:0]S_SC_B_info;
  input [8:0]S_SC_B_payld;
  output [0:0]S_SC_B_recv;
  input [0:0]S_SC_B_req;
  input [0:0]S_SC_B_send;
  input [0:0]S_SC_R_info;
  input [54:0]S_SC_R_payld;
  output [0:0]S_SC_R_recv;
  input [0:0]S_SC_R_req;
  input [0:0]S_SC_R_send;
  input [0:0]S_SC_W_info;
  input [68:0]S_SC_W_payld;
  output [0:0]S_SC_W_recv;
  input [0:0]S_SC_W_req;
  input [0:0]S_SC_W_send;
  input m_axi_aclk;
  input m_axi_aresetn;
  input s_axi_aclk;
  input s_axi_aresetn;

  wire [0:0]S_SC_AR_1_INFO;
  wire [181:0]S_SC_AR_1_PAYLD;
  wire [0:0]S_SC_AR_1_RECV;
  wire [0:0]S_SC_AR_1_REQ;
  wire [0:0]S_SC_AR_1_SEND;
  wire [0:0]S_SC_AW_1_INFO;
  wire [181:0]S_SC_AW_1_PAYLD;
  wire [0:0]S_SC_AW_1_RECV;
  wire [0:0]S_SC_AW_1_REQ;
  wire [0:0]S_SC_AW_1_SEND;
  wire [0:0]S_SC_B_1_INFO;
  wire [8:0]S_SC_B_1_PAYLD;
  wire [0:0]S_SC_B_1_RECV;
  wire [0:0]S_SC_B_1_REQ;
  wire [0:0]S_SC_B_1_SEND;
  wire [0:0]S_SC_R_1_INFO;
  wire [54:0]S_SC_R_1_PAYLD;
  wire [0:0]S_SC_R_1_RECV;
  wire [0:0]S_SC_R_1_REQ;
  wire [0:0]S_SC_R_1_SEND;
  wire [0:0]S_SC_W_1_INFO;
  wire [68:0]S_SC_W_1_PAYLD;
  wire [0:0]S_SC_W_1_RECV;
  wire [0:0]S_SC_W_1_REQ;
  wire [0:0]S_SC_W_1_SEND;
  wire [0:0]m24_ar_node_M_SC_INFO;
  wire [181:0]m24_ar_node_M_SC_PAYLD;
  wire [0:0]m24_ar_node_M_SC_RECV;
  wire [0:0]m24_ar_node_M_SC_REQ;
  wire [0:0]m24_ar_node_M_SC_SEND;
  wire [0:0]m24_aw_node_M_SC_INFO;
  wire [181:0]m24_aw_node_M_SC_PAYLD;
  wire [0:0]m24_aw_node_M_SC_RECV;
  wire [0:0]m24_aw_node_M_SC_REQ;
  wire [0:0]m24_aw_node_M_SC_SEND;
  wire [0:0]m24_b_node_M_SC_INFO;
  wire [8:0]m24_b_node_M_SC_PAYLD;
  wire [0:0]m24_b_node_M_SC_RECV;
  wire [0:0]m24_b_node_M_SC_REQ;
  wire [0:0]m24_b_node_M_SC_SEND;
  wire [0:0]m24_r_node_M_SC_INFO;
  wire [54:0]m24_r_node_M_SC_PAYLD;
  wire [0:0]m24_r_node_M_SC_RECV;
  wire [0:0]m24_r_node_M_SC_REQ;
  wire [0:0]m24_r_node_M_SC_SEND;
  wire [0:0]m24_w_node_M_SC_INFO;
  wire [68:0]m24_w_node_M_SC_PAYLD;
  wire [0:0]m24_w_node_M_SC_RECV;
  wire [0:0]m24_w_node_M_SC_REQ;
  wire [0:0]m24_w_node_M_SC_SEND;
  wire m_axi_aclk_1;
  wire m_axi_aresetn_1;
  wire s_axi_aclk_1;
  wire s_axi_aresetn_1;

  assign M_SC_AR_info[0] = m24_ar_node_M_SC_INFO;
  assign M_SC_AR_payld[181:0] = m24_ar_node_M_SC_PAYLD;
  assign M_SC_AR_req[0] = m24_ar_node_M_SC_REQ;
  assign M_SC_AR_send[0] = m24_ar_node_M_SC_SEND;
  assign M_SC_AW_info[0] = m24_aw_node_M_SC_INFO;
  assign M_SC_AW_payld[181:0] = m24_aw_node_M_SC_PAYLD;
  assign M_SC_AW_req[0] = m24_aw_node_M_SC_REQ;
  assign M_SC_AW_send[0] = m24_aw_node_M_SC_SEND;
  assign M_SC_B_info[0] = m24_b_node_M_SC_INFO;
  assign M_SC_B_payld[8:0] = m24_b_node_M_SC_PAYLD;
  assign M_SC_B_req[0] = m24_b_node_M_SC_REQ;
  assign M_SC_B_send[0] = m24_b_node_M_SC_SEND;
  assign M_SC_R_info[0] = m24_r_node_M_SC_INFO;
  assign M_SC_R_payld[54:0] = m24_r_node_M_SC_PAYLD;
  assign M_SC_R_req[0] = m24_r_node_M_SC_REQ;
  assign M_SC_R_send[0] = m24_r_node_M_SC_SEND;
  assign M_SC_W_info[0] = m24_w_node_M_SC_INFO;
  assign M_SC_W_payld[68:0] = m24_w_node_M_SC_PAYLD;
  assign M_SC_W_req[0] = m24_w_node_M_SC_REQ;
  assign M_SC_W_send[0] = m24_w_node_M_SC_SEND;
  assign S_SC_AR_1_INFO = S_SC_AR_info[0];
  assign S_SC_AR_1_PAYLD = S_SC_AR_payld[181:0];
  assign S_SC_AR_1_REQ = S_SC_AR_req[0];
  assign S_SC_AR_1_SEND = S_SC_AR_send[0];
  assign S_SC_AR_recv[0] = S_SC_AR_1_RECV;
  assign S_SC_AW_1_INFO = S_SC_AW_info[0];
  assign S_SC_AW_1_PAYLD = S_SC_AW_payld[181:0];
  assign S_SC_AW_1_REQ = S_SC_AW_req[0];
  assign S_SC_AW_1_SEND = S_SC_AW_send[0];
  assign S_SC_AW_recv[0] = S_SC_AW_1_RECV;
  assign S_SC_B_1_INFO = S_SC_B_info[0];
  assign S_SC_B_1_PAYLD = S_SC_B_payld[8:0];
  assign S_SC_B_1_REQ = S_SC_B_req[0];
  assign S_SC_B_1_SEND = S_SC_B_send[0];
  assign S_SC_B_recv[0] = S_SC_B_1_RECV;
  assign S_SC_R_1_INFO = S_SC_R_info[0];
  assign S_SC_R_1_PAYLD = S_SC_R_payld[54:0];
  assign S_SC_R_1_REQ = S_SC_R_req[0];
  assign S_SC_R_1_SEND = S_SC_R_send[0];
  assign S_SC_R_recv[0] = S_SC_R_1_RECV;
  assign S_SC_W_1_INFO = S_SC_W_info[0];
  assign S_SC_W_1_PAYLD = S_SC_W_payld[68:0];
  assign S_SC_W_1_REQ = S_SC_W_req[0];
  assign S_SC_W_1_SEND = S_SC_W_send[0];
  assign S_SC_W_recv[0] = S_SC_W_1_RECV;
  assign m24_ar_node_M_SC_RECV = M_SC_AR_recv[0];
  assign m24_aw_node_M_SC_RECV = M_SC_AW_recv[0];
  assign m24_b_node_M_SC_RECV = M_SC_B_recv[0];
  assign m24_r_node_M_SC_RECV = M_SC_R_recv[0];
  assign m24_w_node_M_SC_RECV = M_SC_W_recv[0];
  assign m_axi_aclk_1 = m_axi_aclk;
  assign m_axi_aresetn_1 = m_axi_aresetn;
  assign s_axi_aclk_1 = s_axi_aclk;
  assign s_axi_aresetn_1 = s_axi_aresetn;
  bd_afc3_m24arn_0 m24_ar_node
       (.m_sc_aclk(m_axi_aclk_1),
        .m_sc_aresetn(m_axi_aresetn_1),
        .m_sc_info(m24_ar_node_M_SC_INFO),
        .m_sc_payld(m24_ar_node_M_SC_PAYLD),
        .m_sc_recv(m24_ar_node_M_SC_RECV),
        .m_sc_req(m24_ar_node_M_SC_REQ),
        .m_sc_send(m24_ar_node_M_SC_SEND),
        .s_sc_aclk(s_axi_aclk_1),
        .s_sc_aresetn(s_axi_aresetn_1),
        .s_sc_info(S_SC_AR_1_INFO),
        .s_sc_payld(S_SC_AR_1_PAYLD),
        .s_sc_recv(S_SC_AR_1_RECV),
        .s_sc_req(S_SC_AR_1_REQ),
        .s_sc_send(S_SC_AR_1_SEND));
  bd_afc3_m24awn_0 m24_aw_node
       (.m_sc_aclk(m_axi_aclk_1),
        .m_sc_aresetn(m_axi_aresetn_1),
        .m_sc_info(m24_aw_node_M_SC_INFO),
        .m_sc_payld(m24_aw_node_M_SC_PAYLD),
        .m_sc_recv(m24_aw_node_M_SC_RECV),
        .m_sc_req(m24_aw_node_M_SC_REQ),
        .m_sc_send(m24_aw_node_M_SC_SEND),
        .s_sc_aclk(s_axi_aclk_1),
        .s_sc_aresetn(s_axi_aresetn_1),
        .s_sc_info(S_SC_AW_1_INFO),
        .s_sc_payld(S_SC_AW_1_PAYLD),
        .s_sc_recv(S_SC_AW_1_RECV),
        .s_sc_req(S_SC_AW_1_REQ),
        .s_sc_send(S_SC_AW_1_SEND));
  bd_afc3_m24bn_0 m24_b_node
       (.m_sc_aclk(s_axi_aclk_1),
        .m_sc_aresetn(s_axi_aresetn_1),
        .m_sc_info(m24_b_node_M_SC_INFO),
        .m_sc_payld(m24_b_node_M_SC_PAYLD),
        .m_sc_recv(m24_b_node_M_SC_RECV),
        .m_sc_req(m24_b_node_M_SC_REQ),
        .m_sc_send(m24_b_node_M_SC_SEND),
        .s_sc_aclk(m_axi_aclk_1),
        .s_sc_aresetn(m_axi_aresetn_1),
        .s_sc_info(S_SC_B_1_INFO),
        .s_sc_payld(S_SC_B_1_PAYLD),
        .s_sc_recv(S_SC_B_1_RECV),
        .s_sc_req(S_SC_B_1_REQ),
        .s_sc_send(S_SC_B_1_SEND));
  bd_afc3_m24rn_0 m24_r_node
       (.m_sc_aclk(s_axi_aclk_1),
        .m_sc_aresetn(s_axi_aresetn_1),
        .m_sc_info(m24_r_node_M_SC_INFO),
        .m_sc_payld(m24_r_node_M_SC_PAYLD),
        .m_sc_recv(m24_r_node_M_SC_RECV),
        .m_sc_req(m24_r_node_M_SC_REQ),
        .m_sc_send(m24_r_node_M_SC_SEND),
        .s_sc_aclk(m_axi_aclk_1),
        .s_sc_aresetn(m_axi_aresetn_1),
        .s_sc_info(S_SC_R_1_INFO),
        .s_sc_payld(S_SC_R_1_PAYLD),
        .s_sc_recv(S_SC_R_1_RECV),
        .s_sc_req(S_SC_R_1_REQ),
        .s_sc_send(S_SC_R_1_SEND));
  bd_afc3_m24wn_0 m24_w_node
       (.m_sc_aclk(m_axi_aclk_1),
        .m_sc_aresetn(m_axi_aresetn_1),
        .m_sc_info(m24_w_node_M_SC_INFO),
        .m_sc_payld(m24_w_node_M_SC_PAYLD),
        .m_sc_recv(m24_w_node_M_SC_RECV),
        .m_sc_req(m24_w_node_M_SC_REQ),
        .m_sc_send(m24_w_node_M_SC_SEND),
        .s_sc_aclk(s_axi_aclk_1),
        .s_sc_aresetn(s_axi_aresetn_1),
        .s_sc_info(S_SC_W_1_INFO),
        .s_sc_payld(S_SC_W_1_PAYLD),
        .s_sc_recv(S_SC_W_1_RECV),
        .s_sc_req(S_SC_W_1_REQ),
        .s_sc_send(S_SC_W_1_SEND));
endmodule

module m25_exit_pipeline_imp_L0S07I
   (aclk,
    aresetn,
    m_axi_araddr,
    m_axi_arprot,
    m_axi_arready,
    m_axi_arvalid,
    m_axi_awaddr,
    m_axi_awprot,
    m_axi_awready,
    m_axi_awvalid,
    m_axi_bready,
    m_axi_bresp,
    m_axi_bvalid,
    m_axi_rdata,
    m_axi_rready,
    m_axi_rresp,
    m_axi_rvalid,
    m_axi_wdata,
    m_axi_wready,
    m_axi_wstrb,
    m_axi_wvalid,
    s_axi_araddr,
    s_axi_arcache,
    s_axi_arid,
    s_axi_arlen,
    s_axi_arlock,
    s_axi_arprot,
    s_axi_arqos,
    s_axi_arready,
    s_axi_aruser,
    s_axi_arvalid,
    s_axi_awaddr,
    s_axi_awcache,
    s_axi_awid,
    s_axi_awlen,
    s_axi_awlock,
    s_axi_awprot,
    s_axi_awqos,
    s_axi_awready,
    s_axi_awuser,
    s_axi_awvalid,
    s_axi_bid,
    s_axi_bready,
    s_axi_bresp,
    s_axi_buser,
    s_axi_bvalid,
    s_axi_rdata,
    s_axi_rid,
    s_axi_rlast,
    s_axi_rready,
    s_axi_rresp,
    s_axi_ruser,
    s_axi_rvalid,
    s_axi_wdata,
    s_axi_wlast,
    s_axi_wready,
    s_axi_wstrb,
    s_axi_wuser,
    s_axi_wvalid);
  input aclk;
  input aresetn;
  output [9:0]m_axi_araddr;
  output [2:0]m_axi_arprot;
  input m_axi_arready;
  output m_axi_arvalid;
  output [9:0]m_axi_awaddr;
  output [2:0]m_axi_awprot;
  input m_axi_awready;
  output m_axi_awvalid;
  output m_axi_bready;
  input [1:0]m_axi_bresp;
  input m_axi_bvalid;
  input [31:0]m_axi_rdata;
  output m_axi_rready;
  input [1:0]m_axi_rresp;
  input m_axi_rvalid;
  output [31:0]m_axi_wdata;
  input m_axi_wready;
  output [3:0]m_axi_wstrb;
  output m_axi_wvalid;
  input [9:0]s_axi_araddr;
  input [3:0]s_axi_arcache;
  input [2:0]s_axi_arid;
  input [7:0]s_axi_arlen;
  input [0:0]s_axi_arlock;
  input [2:0]s_axi_arprot;
  input [3:0]s_axi_arqos;
  output s_axi_arready;
  input [1023:0]s_axi_aruser;
  input s_axi_arvalid;
  input [9:0]s_axi_awaddr;
  input [3:0]s_axi_awcache;
  input [2:0]s_axi_awid;
  input [7:0]s_axi_awlen;
  input [0:0]s_axi_awlock;
  input [2:0]s_axi_awprot;
  input [3:0]s_axi_awqos;
  output s_axi_awready;
  input [1023:0]s_axi_awuser;
  input s_axi_awvalid;
  output [2:0]s_axi_bid;
  input s_axi_bready;
  output [1:0]s_axi_bresp;
  output [1023:0]s_axi_buser;
  output s_axi_bvalid;
  output [31:0]s_axi_rdata;
  output [2:0]s_axi_rid;
  output s_axi_rlast;
  input s_axi_rready;
  output [1:0]s_axi_rresp;
  output [1023:0]s_axi_ruser;
  output s_axi_rvalid;
  input [31:0]s_axi_wdata;
  input s_axi_wlast;
  output s_axi_wready;
  input [3:0]s_axi_wstrb;
  input [1023:0]s_axi_wuser;
  input s_axi_wvalid;

  wire aclk_1;
  wire aresetn_1;
  wire [9:0]m25_exit_M_AXI_ARADDR;
  wire [2:0]m25_exit_M_AXI_ARPROT;
  wire m25_exit_M_AXI_ARREADY;
  wire m25_exit_M_AXI_ARVALID;
  wire [9:0]m25_exit_M_AXI_AWADDR;
  wire [2:0]m25_exit_M_AXI_AWPROT;
  wire m25_exit_M_AXI_AWREADY;
  wire m25_exit_M_AXI_AWVALID;
  wire m25_exit_M_AXI_BREADY;
  wire [1:0]m25_exit_M_AXI_BRESP;
  wire m25_exit_M_AXI_BVALID;
  wire [31:0]m25_exit_M_AXI_RDATA;
  wire m25_exit_M_AXI_RREADY;
  wire [1:0]m25_exit_M_AXI_RRESP;
  wire m25_exit_M_AXI_RVALID;
  wire [31:0]m25_exit_M_AXI_WDATA;
  wire m25_exit_M_AXI_WREADY;
  wire [3:0]m25_exit_M_AXI_WSTRB;
  wire m25_exit_M_AXI_WVALID;
  wire [9:0]s_axi_1_ARADDR;
  wire [3:0]s_axi_1_ARCACHE;
  wire [2:0]s_axi_1_ARID;
  wire [7:0]s_axi_1_ARLEN;
  wire [0:0]s_axi_1_ARLOCK;
  wire [2:0]s_axi_1_ARPROT;
  wire [3:0]s_axi_1_ARQOS;
  wire s_axi_1_ARREADY;
  wire [1023:0]s_axi_1_ARUSER;
  wire s_axi_1_ARVALID;
  wire [9:0]s_axi_1_AWADDR;
  wire [3:0]s_axi_1_AWCACHE;
  wire [2:0]s_axi_1_AWID;
  wire [7:0]s_axi_1_AWLEN;
  wire [0:0]s_axi_1_AWLOCK;
  wire [2:0]s_axi_1_AWPROT;
  wire [3:0]s_axi_1_AWQOS;
  wire s_axi_1_AWREADY;
  wire [1023:0]s_axi_1_AWUSER;
  wire s_axi_1_AWVALID;
  wire [2:0]s_axi_1_BID;
  wire s_axi_1_BREADY;
  wire [1:0]s_axi_1_BRESP;
  wire [1023:0]s_axi_1_BUSER;
  wire s_axi_1_BVALID;
  wire [31:0]s_axi_1_RDATA;
  wire [2:0]s_axi_1_RID;
  wire s_axi_1_RLAST;
  wire s_axi_1_RREADY;
  wire [1:0]s_axi_1_RRESP;
  wire [1023:0]s_axi_1_RUSER;
  wire s_axi_1_RVALID;
  wire [31:0]s_axi_1_WDATA;
  wire s_axi_1_WLAST;
  wire s_axi_1_WREADY;
  wire [3:0]s_axi_1_WSTRB;
  wire [1023:0]s_axi_1_WUSER;
  wire s_axi_1_WVALID;

  assign aclk_1 = aclk;
  assign aresetn_1 = aresetn;
  assign m25_exit_M_AXI_ARREADY = m_axi_arready;
  assign m25_exit_M_AXI_AWREADY = m_axi_awready;
  assign m25_exit_M_AXI_BRESP = m_axi_bresp[1:0];
  assign m25_exit_M_AXI_BVALID = m_axi_bvalid;
  assign m25_exit_M_AXI_RDATA = m_axi_rdata[31:0];
  assign m25_exit_M_AXI_RRESP = m_axi_rresp[1:0];
  assign m25_exit_M_AXI_RVALID = m_axi_rvalid;
  assign m25_exit_M_AXI_WREADY = m_axi_wready;
  assign m_axi_araddr[9:0] = m25_exit_M_AXI_ARADDR;
  assign m_axi_arprot[2:0] = m25_exit_M_AXI_ARPROT;
  assign m_axi_arvalid = m25_exit_M_AXI_ARVALID;
  assign m_axi_awaddr[9:0] = m25_exit_M_AXI_AWADDR;
  assign m_axi_awprot[2:0] = m25_exit_M_AXI_AWPROT;
  assign m_axi_awvalid = m25_exit_M_AXI_AWVALID;
  assign m_axi_bready = m25_exit_M_AXI_BREADY;
  assign m_axi_rready = m25_exit_M_AXI_RREADY;
  assign m_axi_wdata[31:0] = m25_exit_M_AXI_WDATA;
  assign m_axi_wstrb[3:0] = m25_exit_M_AXI_WSTRB;
  assign m_axi_wvalid = m25_exit_M_AXI_WVALID;
  assign s_axi_1_ARADDR = s_axi_araddr[9:0];
  assign s_axi_1_ARCACHE = s_axi_arcache[3:0];
  assign s_axi_1_ARID = s_axi_arid[2:0];
  assign s_axi_1_ARLEN = s_axi_arlen[7:0];
  assign s_axi_1_ARLOCK = s_axi_arlock[0];
  assign s_axi_1_ARPROT = s_axi_arprot[2:0];
  assign s_axi_1_ARQOS = s_axi_arqos[3:0];
  assign s_axi_1_ARUSER = s_axi_aruser[1023:0];
  assign s_axi_1_ARVALID = s_axi_arvalid;
  assign s_axi_1_AWADDR = s_axi_awaddr[9:0];
  assign s_axi_1_AWCACHE = s_axi_awcache[3:0];
  assign s_axi_1_AWID = s_axi_awid[2:0];
  assign s_axi_1_AWLEN = s_axi_awlen[7:0];
  assign s_axi_1_AWLOCK = s_axi_awlock[0];
  assign s_axi_1_AWPROT = s_axi_awprot[2:0];
  assign s_axi_1_AWQOS = s_axi_awqos[3:0];
  assign s_axi_1_AWUSER = s_axi_awuser[1023:0];
  assign s_axi_1_AWVALID = s_axi_awvalid;
  assign s_axi_1_BREADY = s_axi_bready;
  assign s_axi_1_RREADY = s_axi_rready;
  assign s_axi_1_WDATA = s_axi_wdata[31:0];
  assign s_axi_1_WLAST = s_axi_wlast;
  assign s_axi_1_WSTRB = s_axi_wstrb[3:0];
  assign s_axi_1_WUSER = s_axi_wuser[1023:0];
  assign s_axi_1_WVALID = s_axi_wvalid;
  assign s_axi_arready = s_axi_1_ARREADY;
  assign s_axi_awready = s_axi_1_AWREADY;
  assign s_axi_bid[2:0] = s_axi_1_BID;
  assign s_axi_bresp[1:0] = s_axi_1_BRESP;
  assign s_axi_buser[1023:0] = s_axi_1_BUSER;
  assign s_axi_bvalid = s_axi_1_BVALID;
  assign s_axi_rdata[31:0] = s_axi_1_RDATA;
  assign s_axi_rid[2:0] = s_axi_1_RID;
  assign s_axi_rlast = s_axi_1_RLAST;
  assign s_axi_rresp[1:0] = s_axi_1_RRESP;
  assign s_axi_ruser[1023:0] = s_axi_1_RUSER;
  assign s_axi_rvalid = s_axi_1_RVALID;
  assign s_axi_wready = s_axi_1_WREADY;
  bd_afc3_m25e_0 m25_exit
       (.aclk(aclk_1),
        .aresetn(aresetn_1),
        .m_axi_araddr(m25_exit_M_AXI_ARADDR),
        .m_axi_arprot(m25_exit_M_AXI_ARPROT),
        .m_axi_arready(m25_exit_M_AXI_ARREADY),
        .m_axi_arvalid(m25_exit_M_AXI_ARVALID),
        .m_axi_awaddr(m25_exit_M_AXI_AWADDR),
        .m_axi_awprot(m25_exit_M_AXI_AWPROT),
        .m_axi_awready(m25_exit_M_AXI_AWREADY),
        .m_axi_awvalid(m25_exit_M_AXI_AWVALID),
        .m_axi_bready(m25_exit_M_AXI_BREADY),
        .m_axi_bresp(m25_exit_M_AXI_BRESP),
        .m_axi_bvalid(m25_exit_M_AXI_BVALID),
        .m_axi_rdata(m25_exit_M_AXI_RDATA),
        .m_axi_rready(m25_exit_M_AXI_RREADY),
        .m_axi_rresp(m25_exit_M_AXI_RRESP),
        .m_axi_rvalid(m25_exit_M_AXI_RVALID),
        .m_axi_wdata(m25_exit_M_AXI_WDATA),
        .m_axi_wready(m25_exit_M_AXI_WREADY),
        .m_axi_wstrb(m25_exit_M_AXI_WSTRB),
        .m_axi_wvalid(m25_exit_M_AXI_WVALID),
        .s_axi_araddr(s_axi_1_ARADDR),
        .s_axi_arcache(s_axi_1_ARCACHE),
        .s_axi_arid(s_axi_1_ARID),
        .s_axi_arlen(s_axi_1_ARLEN),
        .s_axi_arlock(s_axi_1_ARLOCK),
        .s_axi_arprot(s_axi_1_ARPROT),
        .s_axi_arqos(s_axi_1_ARQOS),
        .s_axi_arready(s_axi_1_ARREADY),
        .s_axi_aruser(s_axi_1_ARUSER),
        .s_axi_arvalid(s_axi_1_ARVALID),
        .s_axi_awaddr(s_axi_1_AWADDR),
        .s_axi_awcache(s_axi_1_AWCACHE),
        .s_axi_awid(s_axi_1_AWID),
        .s_axi_awlen(s_axi_1_AWLEN),
        .s_axi_awlock(s_axi_1_AWLOCK),
        .s_axi_awprot(s_axi_1_AWPROT),
        .s_axi_awqos(s_axi_1_AWQOS),
        .s_axi_awready(s_axi_1_AWREADY),
        .s_axi_awuser(s_axi_1_AWUSER),
        .s_axi_awvalid(s_axi_1_AWVALID),
        .s_axi_bid(s_axi_1_BID),
        .s_axi_bready(s_axi_1_BREADY),
        .s_axi_bresp(s_axi_1_BRESP),
        .s_axi_buser(s_axi_1_BUSER),
        .s_axi_bvalid(s_axi_1_BVALID),
        .s_axi_rdata(s_axi_1_RDATA),
        .s_axi_rid(s_axi_1_RID),
        .s_axi_rlast(s_axi_1_RLAST),
        .s_axi_rready(s_axi_1_RREADY),
        .s_axi_rresp(s_axi_1_RRESP),
        .s_axi_ruser(s_axi_1_RUSER),
        .s_axi_rvalid(s_axi_1_RVALID),
        .s_axi_wdata(s_axi_1_WDATA),
        .s_axi_wlast(s_axi_1_WLAST),
        .s_axi_wready(s_axi_1_WREADY),
        .s_axi_wstrb(s_axi_1_WSTRB),
        .s_axi_wuser(s_axi_1_WUSER),
        .s_axi_wvalid(s_axi_1_WVALID));
endmodule

module m25_nodes_imp_14GD1X3
   (M_SC_AR_info,
    M_SC_AR_payld,
    M_SC_AR_recv,
    M_SC_AR_req,
    M_SC_AR_send,
    M_SC_AW_info,
    M_SC_AW_payld,
    M_SC_AW_recv,
    M_SC_AW_req,
    M_SC_AW_send,
    M_SC_B_info,
    M_SC_B_payld,
    M_SC_B_recv,
    M_SC_B_req,
    M_SC_B_send,
    M_SC_R_info,
    M_SC_R_payld,
    M_SC_R_recv,
    M_SC_R_req,
    M_SC_R_send,
    M_SC_W_info,
    M_SC_W_payld,
    M_SC_W_recv,
    M_SC_W_req,
    M_SC_W_send,
    S_SC_AR_info,
    S_SC_AR_payld,
    S_SC_AR_recv,
    S_SC_AR_req,
    S_SC_AR_send,
    S_SC_AW_info,
    S_SC_AW_payld,
    S_SC_AW_recv,
    S_SC_AW_req,
    S_SC_AW_send,
    S_SC_B_info,
    S_SC_B_payld,
    S_SC_B_recv,
    S_SC_B_req,
    S_SC_B_send,
    S_SC_R_info,
    S_SC_R_payld,
    S_SC_R_recv,
    S_SC_R_req,
    S_SC_R_send,
    S_SC_W_info,
    S_SC_W_payld,
    S_SC_W_recv,
    S_SC_W_req,
    S_SC_W_send,
    m_axi_aclk,
    m_axi_aresetn,
    s_axi_aclk,
    s_axi_aresetn);
  output [0:0]M_SC_AR_info;
  output [181:0]M_SC_AR_payld;
  input [0:0]M_SC_AR_recv;
  output [0:0]M_SC_AR_req;
  output [0:0]M_SC_AR_send;
  output [0:0]M_SC_AW_info;
  output [181:0]M_SC_AW_payld;
  input [0:0]M_SC_AW_recv;
  output [0:0]M_SC_AW_req;
  output [0:0]M_SC_AW_send;
  output [0:0]M_SC_B_info;
  output [8:0]M_SC_B_payld;
  input [0:0]M_SC_B_recv;
  output [0:0]M_SC_B_req;
  output [0:0]M_SC_B_send;
  output [0:0]M_SC_R_info;
  output [54:0]M_SC_R_payld;
  input [0:0]M_SC_R_recv;
  output [0:0]M_SC_R_req;
  output [0:0]M_SC_R_send;
  output [0:0]M_SC_W_info;
  output [68:0]M_SC_W_payld;
  input [0:0]M_SC_W_recv;
  output [0:0]M_SC_W_req;
  output [0:0]M_SC_W_send;
  input [0:0]S_SC_AR_info;
  input [181:0]S_SC_AR_payld;
  output [0:0]S_SC_AR_recv;
  input [0:0]S_SC_AR_req;
  input [0:0]S_SC_AR_send;
  input [0:0]S_SC_AW_info;
  input [181:0]S_SC_AW_payld;
  output [0:0]S_SC_AW_recv;
  input [0:0]S_SC_AW_req;
  input [0:0]S_SC_AW_send;
  input [0:0]S_SC_B_info;
  input [8:0]S_SC_B_payld;
  output [0:0]S_SC_B_recv;
  input [0:0]S_SC_B_req;
  input [0:0]S_SC_B_send;
  input [0:0]S_SC_R_info;
  input [54:0]S_SC_R_payld;
  output [0:0]S_SC_R_recv;
  input [0:0]S_SC_R_req;
  input [0:0]S_SC_R_send;
  input [0:0]S_SC_W_info;
  input [68:0]S_SC_W_payld;
  output [0:0]S_SC_W_recv;
  input [0:0]S_SC_W_req;
  input [0:0]S_SC_W_send;
  input m_axi_aclk;
  input m_axi_aresetn;
  input s_axi_aclk;
  input s_axi_aresetn;

  wire [0:0]S_SC_AR_1_INFO;
  wire [181:0]S_SC_AR_1_PAYLD;
  wire [0:0]S_SC_AR_1_RECV;
  wire [0:0]S_SC_AR_1_REQ;
  wire [0:0]S_SC_AR_1_SEND;
  wire [0:0]S_SC_AW_1_INFO;
  wire [181:0]S_SC_AW_1_PAYLD;
  wire [0:0]S_SC_AW_1_RECV;
  wire [0:0]S_SC_AW_1_REQ;
  wire [0:0]S_SC_AW_1_SEND;
  wire [0:0]S_SC_B_1_INFO;
  wire [8:0]S_SC_B_1_PAYLD;
  wire [0:0]S_SC_B_1_RECV;
  wire [0:0]S_SC_B_1_REQ;
  wire [0:0]S_SC_B_1_SEND;
  wire [0:0]S_SC_R_1_INFO;
  wire [54:0]S_SC_R_1_PAYLD;
  wire [0:0]S_SC_R_1_RECV;
  wire [0:0]S_SC_R_1_REQ;
  wire [0:0]S_SC_R_1_SEND;
  wire [0:0]S_SC_W_1_INFO;
  wire [68:0]S_SC_W_1_PAYLD;
  wire [0:0]S_SC_W_1_RECV;
  wire [0:0]S_SC_W_1_REQ;
  wire [0:0]S_SC_W_1_SEND;
  wire [0:0]m25_ar_node_M_SC_INFO;
  wire [181:0]m25_ar_node_M_SC_PAYLD;
  wire [0:0]m25_ar_node_M_SC_RECV;
  wire [0:0]m25_ar_node_M_SC_REQ;
  wire [0:0]m25_ar_node_M_SC_SEND;
  wire [0:0]m25_aw_node_M_SC_INFO;
  wire [181:0]m25_aw_node_M_SC_PAYLD;
  wire [0:0]m25_aw_node_M_SC_RECV;
  wire [0:0]m25_aw_node_M_SC_REQ;
  wire [0:0]m25_aw_node_M_SC_SEND;
  wire [0:0]m25_b_node_M_SC_INFO;
  wire [8:0]m25_b_node_M_SC_PAYLD;
  wire [0:0]m25_b_node_M_SC_RECV;
  wire [0:0]m25_b_node_M_SC_REQ;
  wire [0:0]m25_b_node_M_SC_SEND;
  wire [0:0]m25_r_node_M_SC_INFO;
  wire [54:0]m25_r_node_M_SC_PAYLD;
  wire [0:0]m25_r_node_M_SC_RECV;
  wire [0:0]m25_r_node_M_SC_REQ;
  wire [0:0]m25_r_node_M_SC_SEND;
  wire [0:0]m25_w_node_M_SC_INFO;
  wire [68:0]m25_w_node_M_SC_PAYLD;
  wire [0:0]m25_w_node_M_SC_RECV;
  wire [0:0]m25_w_node_M_SC_REQ;
  wire [0:0]m25_w_node_M_SC_SEND;
  wire m_axi_aclk_1;
  wire m_axi_aresetn_1;
  wire s_axi_aclk_1;
  wire s_axi_aresetn_1;

  assign M_SC_AR_info[0] = m25_ar_node_M_SC_INFO;
  assign M_SC_AR_payld[181:0] = m25_ar_node_M_SC_PAYLD;
  assign M_SC_AR_req[0] = m25_ar_node_M_SC_REQ;
  assign M_SC_AR_send[0] = m25_ar_node_M_SC_SEND;
  assign M_SC_AW_info[0] = m25_aw_node_M_SC_INFO;
  assign M_SC_AW_payld[181:0] = m25_aw_node_M_SC_PAYLD;
  assign M_SC_AW_req[0] = m25_aw_node_M_SC_REQ;
  assign M_SC_AW_send[0] = m25_aw_node_M_SC_SEND;
  assign M_SC_B_info[0] = m25_b_node_M_SC_INFO;
  assign M_SC_B_payld[8:0] = m25_b_node_M_SC_PAYLD;
  assign M_SC_B_req[0] = m25_b_node_M_SC_REQ;
  assign M_SC_B_send[0] = m25_b_node_M_SC_SEND;
  assign M_SC_R_info[0] = m25_r_node_M_SC_INFO;
  assign M_SC_R_payld[54:0] = m25_r_node_M_SC_PAYLD;
  assign M_SC_R_req[0] = m25_r_node_M_SC_REQ;
  assign M_SC_R_send[0] = m25_r_node_M_SC_SEND;
  assign M_SC_W_info[0] = m25_w_node_M_SC_INFO;
  assign M_SC_W_payld[68:0] = m25_w_node_M_SC_PAYLD;
  assign M_SC_W_req[0] = m25_w_node_M_SC_REQ;
  assign M_SC_W_send[0] = m25_w_node_M_SC_SEND;
  assign S_SC_AR_1_INFO = S_SC_AR_info[0];
  assign S_SC_AR_1_PAYLD = S_SC_AR_payld[181:0];
  assign S_SC_AR_1_REQ = S_SC_AR_req[0];
  assign S_SC_AR_1_SEND = S_SC_AR_send[0];
  assign S_SC_AR_recv[0] = S_SC_AR_1_RECV;
  assign S_SC_AW_1_INFO = S_SC_AW_info[0];
  assign S_SC_AW_1_PAYLD = S_SC_AW_payld[181:0];
  assign S_SC_AW_1_REQ = S_SC_AW_req[0];
  assign S_SC_AW_1_SEND = S_SC_AW_send[0];
  assign S_SC_AW_recv[0] = S_SC_AW_1_RECV;
  assign S_SC_B_1_INFO = S_SC_B_info[0];
  assign S_SC_B_1_PAYLD = S_SC_B_payld[8:0];
  assign S_SC_B_1_REQ = S_SC_B_req[0];
  assign S_SC_B_1_SEND = S_SC_B_send[0];
  assign S_SC_B_recv[0] = S_SC_B_1_RECV;
  assign S_SC_R_1_INFO = S_SC_R_info[0];
  assign S_SC_R_1_PAYLD = S_SC_R_payld[54:0];
  assign S_SC_R_1_REQ = S_SC_R_req[0];
  assign S_SC_R_1_SEND = S_SC_R_send[0];
  assign S_SC_R_recv[0] = S_SC_R_1_RECV;
  assign S_SC_W_1_INFO = S_SC_W_info[0];
  assign S_SC_W_1_PAYLD = S_SC_W_payld[68:0];
  assign S_SC_W_1_REQ = S_SC_W_req[0];
  assign S_SC_W_1_SEND = S_SC_W_send[0];
  assign S_SC_W_recv[0] = S_SC_W_1_RECV;
  assign m25_ar_node_M_SC_RECV = M_SC_AR_recv[0];
  assign m25_aw_node_M_SC_RECV = M_SC_AW_recv[0];
  assign m25_b_node_M_SC_RECV = M_SC_B_recv[0];
  assign m25_r_node_M_SC_RECV = M_SC_R_recv[0];
  assign m25_w_node_M_SC_RECV = M_SC_W_recv[0];
  assign m_axi_aclk_1 = m_axi_aclk;
  assign m_axi_aresetn_1 = m_axi_aresetn;
  assign s_axi_aclk_1 = s_axi_aclk;
  assign s_axi_aresetn_1 = s_axi_aresetn;
  bd_afc3_m25arn_0 m25_ar_node
       (.m_sc_aclk(m_axi_aclk_1),
        .m_sc_aresetn(m_axi_aresetn_1),
        .m_sc_info(m25_ar_node_M_SC_INFO),
        .m_sc_payld(m25_ar_node_M_SC_PAYLD),
        .m_sc_recv(m25_ar_node_M_SC_RECV),
        .m_sc_req(m25_ar_node_M_SC_REQ),
        .m_sc_send(m25_ar_node_M_SC_SEND),
        .s_sc_aclk(s_axi_aclk_1),
        .s_sc_aresetn(s_axi_aresetn_1),
        .s_sc_info(S_SC_AR_1_INFO),
        .s_sc_payld(S_SC_AR_1_PAYLD),
        .s_sc_recv(S_SC_AR_1_RECV),
        .s_sc_req(S_SC_AR_1_REQ),
        .s_sc_send(S_SC_AR_1_SEND));
  bd_afc3_m25awn_0 m25_aw_node
       (.m_sc_aclk(m_axi_aclk_1),
        .m_sc_aresetn(m_axi_aresetn_1),
        .m_sc_info(m25_aw_node_M_SC_INFO),
        .m_sc_payld(m25_aw_node_M_SC_PAYLD),
        .m_sc_recv(m25_aw_node_M_SC_RECV),
        .m_sc_req(m25_aw_node_M_SC_REQ),
        .m_sc_send(m25_aw_node_M_SC_SEND),
        .s_sc_aclk(s_axi_aclk_1),
        .s_sc_aresetn(s_axi_aresetn_1),
        .s_sc_info(S_SC_AW_1_INFO),
        .s_sc_payld(S_SC_AW_1_PAYLD),
        .s_sc_recv(S_SC_AW_1_RECV),
        .s_sc_req(S_SC_AW_1_REQ),
        .s_sc_send(S_SC_AW_1_SEND));
  bd_afc3_m25bn_0 m25_b_node
       (.m_sc_aclk(s_axi_aclk_1),
        .m_sc_aresetn(s_axi_aresetn_1),
        .m_sc_info(m25_b_node_M_SC_INFO),
        .m_sc_payld(m25_b_node_M_SC_PAYLD),
        .m_sc_recv(m25_b_node_M_SC_RECV),
        .m_sc_req(m25_b_node_M_SC_REQ),
        .m_sc_send(m25_b_node_M_SC_SEND),
        .s_sc_aclk(m_axi_aclk_1),
        .s_sc_aresetn(m_axi_aresetn_1),
        .s_sc_info(S_SC_B_1_INFO),
        .s_sc_payld(S_SC_B_1_PAYLD),
        .s_sc_recv(S_SC_B_1_RECV),
        .s_sc_req(S_SC_B_1_REQ),
        .s_sc_send(S_SC_B_1_SEND));
  bd_afc3_m25rn_0 m25_r_node
       (.m_sc_aclk(s_axi_aclk_1),
        .m_sc_aresetn(s_axi_aresetn_1),
        .m_sc_info(m25_r_node_M_SC_INFO),
        .m_sc_payld(m25_r_node_M_SC_PAYLD),
        .m_sc_recv(m25_r_node_M_SC_RECV),
        .m_sc_req(m25_r_node_M_SC_REQ),
        .m_sc_send(m25_r_node_M_SC_SEND),
        .s_sc_aclk(m_axi_aclk_1),
        .s_sc_aresetn(m_axi_aresetn_1),
        .s_sc_info(S_SC_R_1_INFO),
        .s_sc_payld(S_SC_R_1_PAYLD),
        .s_sc_recv(S_SC_R_1_RECV),
        .s_sc_req(S_SC_R_1_REQ),
        .s_sc_send(S_SC_R_1_SEND));
  bd_afc3_m25wn_0 m25_w_node
       (.m_sc_aclk(m_axi_aclk_1),
        .m_sc_aresetn(m_axi_aresetn_1),
        .m_sc_info(m25_w_node_M_SC_INFO),
        .m_sc_payld(m25_w_node_M_SC_PAYLD),
        .m_sc_recv(m25_w_node_M_SC_RECV),
        .m_sc_req(m25_w_node_M_SC_REQ),
        .m_sc_send(m25_w_node_M_SC_SEND),
        .s_sc_aclk(s_axi_aclk_1),
        .s_sc_aresetn(s_axi_aresetn_1),
        .s_sc_info(S_SC_W_1_INFO),
        .s_sc_payld(S_SC_W_1_PAYLD),
        .s_sc_recv(S_SC_W_1_RECV),
        .s_sc_req(S_SC_W_1_REQ),
        .s_sc_send(S_SC_W_1_SEND));
endmodule

module m26_exit_pipeline_imp_VU1HLA
   (aclk,
    aresetn,
    m_axi_araddr,
    m_axi_arprot,
    m_axi_arready,
    m_axi_arvalid,
    m_axi_awaddr,
    m_axi_awprot,
    m_axi_awready,
    m_axi_awvalid,
    m_axi_bready,
    m_axi_bresp,
    m_axi_bvalid,
    m_axi_rdata,
    m_axi_rready,
    m_axi_rresp,
    m_axi_rvalid,
    m_axi_wdata,
    m_axi_wready,
    m_axi_wstrb,
    m_axi_wvalid,
    s_axi_araddr,
    s_axi_arcache,
    s_axi_arid,
    s_axi_arlen,
    s_axi_arlock,
    s_axi_arprot,
    s_axi_arqos,
    s_axi_arready,
    s_axi_aruser,
    s_axi_arvalid,
    s_axi_awaddr,
    s_axi_awcache,
    s_axi_awid,
    s_axi_awlen,
    s_axi_awlock,
    s_axi_awprot,
    s_axi_awqos,
    s_axi_awready,
    s_axi_awuser,
    s_axi_awvalid,
    s_axi_bid,
    s_axi_bready,
    s_axi_bresp,
    s_axi_buser,
    s_axi_bvalid,
    s_axi_rdata,
    s_axi_rid,
    s_axi_rlast,
    s_axi_rready,
    s_axi_rresp,
    s_axi_ruser,
    s_axi_rvalid,
    s_axi_wdata,
    s_axi_wlast,
    s_axi_wready,
    s_axi_wstrb,
    s_axi_wuser,
    s_axi_wvalid);
  input aclk;
  input aresetn;
  output [9:0]m_axi_araddr;
  output [2:0]m_axi_arprot;
  input m_axi_arready;
  output m_axi_arvalid;
  output [9:0]m_axi_awaddr;
  output [2:0]m_axi_awprot;
  input m_axi_awready;
  output m_axi_awvalid;
  output m_axi_bready;
  input [1:0]m_axi_bresp;
  input m_axi_bvalid;
  input [31:0]m_axi_rdata;
  output m_axi_rready;
  input [1:0]m_axi_rresp;
  input m_axi_rvalid;
  output [31:0]m_axi_wdata;
  input m_axi_wready;
  output [3:0]m_axi_wstrb;
  output m_axi_wvalid;
  input [9:0]s_axi_araddr;
  input [3:0]s_axi_arcache;
  input [2:0]s_axi_arid;
  input [7:0]s_axi_arlen;
  input [0:0]s_axi_arlock;
  input [2:0]s_axi_arprot;
  input [3:0]s_axi_arqos;
  output s_axi_arready;
  input [1023:0]s_axi_aruser;
  input s_axi_arvalid;
  input [9:0]s_axi_awaddr;
  input [3:0]s_axi_awcache;
  input [2:0]s_axi_awid;
  input [7:0]s_axi_awlen;
  input [0:0]s_axi_awlock;
  input [2:0]s_axi_awprot;
  input [3:0]s_axi_awqos;
  output s_axi_awready;
  input [1023:0]s_axi_awuser;
  input s_axi_awvalid;
  output [2:0]s_axi_bid;
  input s_axi_bready;
  output [1:0]s_axi_bresp;
  output [1023:0]s_axi_buser;
  output s_axi_bvalid;
  output [31:0]s_axi_rdata;
  output [2:0]s_axi_rid;
  output s_axi_rlast;
  input s_axi_rready;
  output [1:0]s_axi_rresp;
  output [1023:0]s_axi_ruser;
  output s_axi_rvalid;
  input [31:0]s_axi_wdata;
  input s_axi_wlast;
  output s_axi_wready;
  input [3:0]s_axi_wstrb;
  input [1023:0]s_axi_wuser;
  input s_axi_wvalid;

  wire aclk_1;
  wire aresetn_1;
  wire [9:0]m26_exit_M_AXI_ARADDR;
  wire [2:0]m26_exit_M_AXI_ARPROT;
  wire m26_exit_M_AXI_ARREADY;
  wire m26_exit_M_AXI_ARVALID;
  wire [9:0]m26_exit_M_AXI_AWADDR;
  wire [2:0]m26_exit_M_AXI_AWPROT;
  wire m26_exit_M_AXI_AWREADY;
  wire m26_exit_M_AXI_AWVALID;
  wire m26_exit_M_AXI_BREADY;
  wire [1:0]m26_exit_M_AXI_BRESP;
  wire m26_exit_M_AXI_BVALID;
  wire [31:0]m26_exit_M_AXI_RDATA;
  wire m26_exit_M_AXI_RREADY;
  wire [1:0]m26_exit_M_AXI_RRESP;
  wire m26_exit_M_AXI_RVALID;
  wire [31:0]m26_exit_M_AXI_WDATA;
  wire m26_exit_M_AXI_WREADY;
  wire [3:0]m26_exit_M_AXI_WSTRB;
  wire m26_exit_M_AXI_WVALID;
  wire [9:0]s_axi_1_ARADDR;
  wire [3:0]s_axi_1_ARCACHE;
  wire [2:0]s_axi_1_ARID;
  wire [7:0]s_axi_1_ARLEN;
  wire [0:0]s_axi_1_ARLOCK;
  wire [2:0]s_axi_1_ARPROT;
  wire [3:0]s_axi_1_ARQOS;
  wire s_axi_1_ARREADY;
  wire [1023:0]s_axi_1_ARUSER;
  wire s_axi_1_ARVALID;
  wire [9:0]s_axi_1_AWADDR;
  wire [3:0]s_axi_1_AWCACHE;
  wire [2:0]s_axi_1_AWID;
  wire [7:0]s_axi_1_AWLEN;
  wire [0:0]s_axi_1_AWLOCK;
  wire [2:0]s_axi_1_AWPROT;
  wire [3:0]s_axi_1_AWQOS;
  wire s_axi_1_AWREADY;
  wire [1023:0]s_axi_1_AWUSER;
  wire s_axi_1_AWVALID;
  wire [2:0]s_axi_1_BID;
  wire s_axi_1_BREADY;
  wire [1:0]s_axi_1_BRESP;
  wire [1023:0]s_axi_1_BUSER;
  wire s_axi_1_BVALID;
  wire [31:0]s_axi_1_RDATA;
  wire [2:0]s_axi_1_RID;
  wire s_axi_1_RLAST;
  wire s_axi_1_RREADY;
  wire [1:0]s_axi_1_RRESP;
  wire [1023:0]s_axi_1_RUSER;
  wire s_axi_1_RVALID;
  wire [31:0]s_axi_1_WDATA;
  wire s_axi_1_WLAST;
  wire s_axi_1_WREADY;
  wire [3:0]s_axi_1_WSTRB;
  wire [1023:0]s_axi_1_WUSER;
  wire s_axi_1_WVALID;

  assign aclk_1 = aclk;
  assign aresetn_1 = aresetn;
  assign m26_exit_M_AXI_ARREADY = m_axi_arready;
  assign m26_exit_M_AXI_AWREADY = m_axi_awready;
  assign m26_exit_M_AXI_BRESP = m_axi_bresp[1:0];
  assign m26_exit_M_AXI_BVALID = m_axi_bvalid;
  assign m26_exit_M_AXI_RDATA = m_axi_rdata[31:0];
  assign m26_exit_M_AXI_RRESP = m_axi_rresp[1:0];
  assign m26_exit_M_AXI_RVALID = m_axi_rvalid;
  assign m26_exit_M_AXI_WREADY = m_axi_wready;
  assign m_axi_araddr[9:0] = m26_exit_M_AXI_ARADDR;
  assign m_axi_arprot[2:0] = m26_exit_M_AXI_ARPROT;
  assign m_axi_arvalid = m26_exit_M_AXI_ARVALID;
  assign m_axi_awaddr[9:0] = m26_exit_M_AXI_AWADDR;
  assign m_axi_awprot[2:0] = m26_exit_M_AXI_AWPROT;
  assign m_axi_awvalid = m26_exit_M_AXI_AWVALID;
  assign m_axi_bready = m26_exit_M_AXI_BREADY;
  assign m_axi_rready = m26_exit_M_AXI_RREADY;
  assign m_axi_wdata[31:0] = m26_exit_M_AXI_WDATA;
  assign m_axi_wstrb[3:0] = m26_exit_M_AXI_WSTRB;
  assign m_axi_wvalid = m26_exit_M_AXI_WVALID;
  assign s_axi_1_ARADDR = s_axi_araddr[9:0];
  assign s_axi_1_ARCACHE = s_axi_arcache[3:0];
  assign s_axi_1_ARID = s_axi_arid[2:0];
  assign s_axi_1_ARLEN = s_axi_arlen[7:0];
  assign s_axi_1_ARLOCK = s_axi_arlock[0];
  assign s_axi_1_ARPROT = s_axi_arprot[2:0];
  assign s_axi_1_ARQOS = s_axi_arqos[3:0];
  assign s_axi_1_ARUSER = s_axi_aruser[1023:0];
  assign s_axi_1_ARVALID = s_axi_arvalid;
  assign s_axi_1_AWADDR = s_axi_awaddr[9:0];
  assign s_axi_1_AWCACHE = s_axi_awcache[3:0];
  assign s_axi_1_AWID = s_axi_awid[2:0];
  assign s_axi_1_AWLEN = s_axi_awlen[7:0];
  assign s_axi_1_AWLOCK = s_axi_awlock[0];
  assign s_axi_1_AWPROT = s_axi_awprot[2:0];
  assign s_axi_1_AWQOS = s_axi_awqos[3:0];
  assign s_axi_1_AWUSER = s_axi_awuser[1023:0];
  assign s_axi_1_AWVALID = s_axi_awvalid;
  assign s_axi_1_BREADY = s_axi_bready;
  assign s_axi_1_RREADY = s_axi_rready;
  assign s_axi_1_WDATA = s_axi_wdata[31:0];
  assign s_axi_1_WLAST = s_axi_wlast;
  assign s_axi_1_WSTRB = s_axi_wstrb[3:0];
  assign s_axi_1_WUSER = s_axi_wuser[1023:0];
  assign s_axi_1_WVALID = s_axi_wvalid;
  assign s_axi_arready = s_axi_1_ARREADY;
  assign s_axi_awready = s_axi_1_AWREADY;
  assign s_axi_bid[2:0] = s_axi_1_BID;
  assign s_axi_bresp[1:0] = s_axi_1_BRESP;
  assign s_axi_buser[1023:0] = s_axi_1_BUSER;
  assign s_axi_bvalid = s_axi_1_BVALID;
  assign s_axi_rdata[31:0] = s_axi_1_RDATA;
  assign s_axi_rid[2:0] = s_axi_1_RID;
  assign s_axi_rlast = s_axi_1_RLAST;
  assign s_axi_rresp[1:0] = s_axi_1_RRESP;
  assign s_axi_ruser[1023:0] = s_axi_1_RUSER;
  assign s_axi_rvalid = s_axi_1_RVALID;
  assign s_axi_wready = s_axi_1_WREADY;
  bd_afc3_m26e_0 m26_exit
       (.aclk(aclk_1),
        .aresetn(aresetn_1),
        .m_axi_araddr(m26_exit_M_AXI_ARADDR),
        .m_axi_arprot(m26_exit_M_AXI_ARPROT),
        .m_axi_arready(m26_exit_M_AXI_ARREADY),
        .m_axi_arvalid(m26_exit_M_AXI_ARVALID),
        .m_axi_awaddr(m26_exit_M_AXI_AWADDR),
        .m_axi_awprot(m26_exit_M_AXI_AWPROT),
        .m_axi_awready(m26_exit_M_AXI_AWREADY),
        .m_axi_awvalid(m26_exit_M_AXI_AWVALID),
        .m_axi_bready(m26_exit_M_AXI_BREADY),
        .m_axi_bresp(m26_exit_M_AXI_BRESP),
        .m_axi_bvalid(m26_exit_M_AXI_BVALID),
        .m_axi_rdata(m26_exit_M_AXI_RDATA),
        .m_axi_rready(m26_exit_M_AXI_RREADY),
        .m_axi_rresp(m26_exit_M_AXI_RRESP),
        .m_axi_rvalid(m26_exit_M_AXI_RVALID),
        .m_axi_wdata(m26_exit_M_AXI_WDATA),
        .m_axi_wready(m26_exit_M_AXI_WREADY),
        .m_axi_wstrb(m26_exit_M_AXI_WSTRB),
        .m_axi_wvalid(m26_exit_M_AXI_WVALID),
        .s_axi_araddr(s_axi_1_ARADDR),
        .s_axi_arcache(s_axi_1_ARCACHE),
        .s_axi_arid(s_axi_1_ARID),
        .s_axi_arlen(s_axi_1_ARLEN),
        .s_axi_arlock(s_axi_1_ARLOCK),
        .s_axi_arprot(s_axi_1_ARPROT),
        .s_axi_arqos(s_axi_1_ARQOS),
        .s_axi_arready(s_axi_1_ARREADY),
        .s_axi_aruser(s_axi_1_ARUSER),
        .s_axi_arvalid(s_axi_1_ARVALID),
        .s_axi_awaddr(s_axi_1_AWADDR),
        .s_axi_awcache(s_axi_1_AWCACHE),
        .s_axi_awid(s_axi_1_AWID),
        .s_axi_awlen(s_axi_1_AWLEN),
        .s_axi_awlock(s_axi_1_AWLOCK),
        .s_axi_awprot(s_axi_1_AWPROT),
        .s_axi_awqos(s_axi_1_AWQOS),
        .s_axi_awready(s_axi_1_AWREADY),
        .s_axi_awuser(s_axi_1_AWUSER),
        .s_axi_awvalid(s_axi_1_AWVALID),
        .s_axi_bid(s_axi_1_BID),
        .s_axi_bready(s_axi_1_BREADY),
        .s_axi_bresp(s_axi_1_BRESP),
        .s_axi_buser(s_axi_1_BUSER),
        .s_axi_bvalid(s_axi_1_BVALID),
        .s_axi_rdata(s_axi_1_RDATA),
        .s_axi_rid(s_axi_1_RID),
        .s_axi_rlast(s_axi_1_RLAST),
        .s_axi_rready(s_axi_1_RREADY),
        .s_axi_rresp(s_axi_1_RRESP),
        .s_axi_ruser(s_axi_1_RUSER),
        .s_axi_rvalid(s_axi_1_RVALID),
        .s_axi_wdata(s_axi_1_WDATA),
        .s_axi_wlast(s_axi_1_WLAST),
        .s_axi_wready(s_axi_1_WREADY),
        .s_axi_wstrb(s_axi_1_WSTRB),
        .s_axi_wuser(s_axi_1_WUSER),
        .s_axi_wvalid(s_axi_1_WVALID));
endmodule

module m26_nodes_imp_1TY4018
   (M_SC_AR_info,
    M_SC_AR_payld,
    M_SC_AR_recv,
    M_SC_AR_req,
    M_SC_AR_send,
    M_SC_AW_info,
    M_SC_AW_payld,
    M_SC_AW_recv,
    M_SC_AW_req,
    M_SC_AW_send,
    M_SC_B_info,
    M_SC_B_payld,
    M_SC_B_recv,
    M_SC_B_req,
    M_SC_B_send,
    M_SC_R_info,
    M_SC_R_payld,
    M_SC_R_recv,
    M_SC_R_req,
    M_SC_R_send,
    M_SC_W_info,
    M_SC_W_payld,
    M_SC_W_recv,
    M_SC_W_req,
    M_SC_W_send,
    S_SC_AR_info,
    S_SC_AR_payld,
    S_SC_AR_recv,
    S_SC_AR_req,
    S_SC_AR_send,
    S_SC_AW_info,
    S_SC_AW_payld,
    S_SC_AW_recv,
    S_SC_AW_req,
    S_SC_AW_send,
    S_SC_B_info,
    S_SC_B_payld,
    S_SC_B_recv,
    S_SC_B_req,
    S_SC_B_send,
    S_SC_R_info,
    S_SC_R_payld,
    S_SC_R_recv,
    S_SC_R_req,
    S_SC_R_send,
    S_SC_W_info,
    S_SC_W_payld,
    S_SC_W_recv,
    S_SC_W_req,
    S_SC_W_send,
    m_axi_aclk,
    m_axi_aresetn,
    s_axi_aclk,
    s_axi_aresetn);
  output [0:0]M_SC_AR_info;
  output [181:0]M_SC_AR_payld;
  input [0:0]M_SC_AR_recv;
  output [0:0]M_SC_AR_req;
  output [0:0]M_SC_AR_send;
  output [0:0]M_SC_AW_info;
  output [181:0]M_SC_AW_payld;
  input [0:0]M_SC_AW_recv;
  output [0:0]M_SC_AW_req;
  output [0:0]M_SC_AW_send;
  output [0:0]M_SC_B_info;
  output [8:0]M_SC_B_payld;
  input [0:0]M_SC_B_recv;
  output [0:0]M_SC_B_req;
  output [0:0]M_SC_B_send;
  output [0:0]M_SC_R_info;
  output [54:0]M_SC_R_payld;
  input [0:0]M_SC_R_recv;
  output [0:0]M_SC_R_req;
  output [0:0]M_SC_R_send;
  output [0:0]M_SC_W_info;
  output [68:0]M_SC_W_payld;
  input [0:0]M_SC_W_recv;
  output [0:0]M_SC_W_req;
  output [0:0]M_SC_W_send;
  input [0:0]S_SC_AR_info;
  input [181:0]S_SC_AR_payld;
  output [0:0]S_SC_AR_recv;
  input [0:0]S_SC_AR_req;
  input [0:0]S_SC_AR_send;
  input [0:0]S_SC_AW_info;
  input [181:0]S_SC_AW_payld;
  output [0:0]S_SC_AW_recv;
  input [0:0]S_SC_AW_req;
  input [0:0]S_SC_AW_send;
  input [0:0]S_SC_B_info;
  input [8:0]S_SC_B_payld;
  output [0:0]S_SC_B_recv;
  input [0:0]S_SC_B_req;
  input [0:0]S_SC_B_send;
  input [0:0]S_SC_R_info;
  input [54:0]S_SC_R_payld;
  output [0:0]S_SC_R_recv;
  input [0:0]S_SC_R_req;
  input [0:0]S_SC_R_send;
  input [0:0]S_SC_W_info;
  input [68:0]S_SC_W_payld;
  output [0:0]S_SC_W_recv;
  input [0:0]S_SC_W_req;
  input [0:0]S_SC_W_send;
  input m_axi_aclk;
  input m_axi_aresetn;
  input s_axi_aclk;
  input s_axi_aresetn;

  wire [0:0]S_SC_AR_1_INFO;
  wire [181:0]S_SC_AR_1_PAYLD;
  wire [0:0]S_SC_AR_1_RECV;
  wire [0:0]S_SC_AR_1_REQ;
  wire [0:0]S_SC_AR_1_SEND;
  wire [0:0]S_SC_AW_1_INFO;
  wire [181:0]S_SC_AW_1_PAYLD;
  wire [0:0]S_SC_AW_1_RECV;
  wire [0:0]S_SC_AW_1_REQ;
  wire [0:0]S_SC_AW_1_SEND;
  wire [0:0]S_SC_B_1_INFO;
  wire [8:0]S_SC_B_1_PAYLD;
  wire [0:0]S_SC_B_1_RECV;
  wire [0:0]S_SC_B_1_REQ;
  wire [0:0]S_SC_B_1_SEND;
  wire [0:0]S_SC_R_1_INFO;
  wire [54:0]S_SC_R_1_PAYLD;
  wire [0:0]S_SC_R_1_RECV;
  wire [0:0]S_SC_R_1_REQ;
  wire [0:0]S_SC_R_1_SEND;
  wire [0:0]S_SC_W_1_INFO;
  wire [68:0]S_SC_W_1_PAYLD;
  wire [0:0]S_SC_W_1_RECV;
  wire [0:0]S_SC_W_1_REQ;
  wire [0:0]S_SC_W_1_SEND;
  wire [0:0]m26_ar_node_M_SC_INFO;
  wire [181:0]m26_ar_node_M_SC_PAYLD;
  wire [0:0]m26_ar_node_M_SC_RECV;
  wire [0:0]m26_ar_node_M_SC_REQ;
  wire [0:0]m26_ar_node_M_SC_SEND;
  wire [0:0]m26_aw_node_M_SC_INFO;
  wire [181:0]m26_aw_node_M_SC_PAYLD;
  wire [0:0]m26_aw_node_M_SC_RECV;
  wire [0:0]m26_aw_node_M_SC_REQ;
  wire [0:0]m26_aw_node_M_SC_SEND;
  wire [0:0]m26_b_node_M_SC_INFO;
  wire [8:0]m26_b_node_M_SC_PAYLD;
  wire [0:0]m26_b_node_M_SC_RECV;
  wire [0:0]m26_b_node_M_SC_REQ;
  wire [0:0]m26_b_node_M_SC_SEND;
  wire [0:0]m26_r_node_M_SC_INFO;
  wire [54:0]m26_r_node_M_SC_PAYLD;
  wire [0:0]m26_r_node_M_SC_RECV;
  wire [0:0]m26_r_node_M_SC_REQ;
  wire [0:0]m26_r_node_M_SC_SEND;
  wire [0:0]m26_w_node_M_SC_INFO;
  wire [68:0]m26_w_node_M_SC_PAYLD;
  wire [0:0]m26_w_node_M_SC_RECV;
  wire [0:0]m26_w_node_M_SC_REQ;
  wire [0:0]m26_w_node_M_SC_SEND;
  wire m_axi_aclk_1;
  wire m_axi_aresetn_1;
  wire s_axi_aclk_1;
  wire s_axi_aresetn_1;

  assign M_SC_AR_info[0] = m26_ar_node_M_SC_INFO;
  assign M_SC_AR_payld[181:0] = m26_ar_node_M_SC_PAYLD;
  assign M_SC_AR_req[0] = m26_ar_node_M_SC_REQ;
  assign M_SC_AR_send[0] = m26_ar_node_M_SC_SEND;
  assign M_SC_AW_info[0] = m26_aw_node_M_SC_INFO;
  assign M_SC_AW_payld[181:0] = m26_aw_node_M_SC_PAYLD;
  assign M_SC_AW_req[0] = m26_aw_node_M_SC_REQ;
  assign M_SC_AW_send[0] = m26_aw_node_M_SC_SEND;
  assign M_SC_B_info[0] = m26_b_node_M_SC_INFO;
  assign M_SC_B_payld[8:0] = m26_b_node_M_SC_PAYLD;
  assign M_SC_B_req[0] = m26_b_node_M_SC_REQ;
  assign M_SC_B_send[0] = m26_b_node_M_SC_SEND;
  assign M_SC_R_info[0] = m26_r_node_M_SC_INFO;
  assign M_SC_R_payld[54:0] = m26_r_node_M_SC_PAYLD;
  assign M_SC_R_req[0] = m26_r_node_M_SC_REQ;
  assign M_SC_R_send[0] = m26_r_node_M_SC_SEND;
  assign M_SC_W_info[0] = m26_w_node_M_SC_INFO;
  assign M_SC_W_payld[68:0] = m26_w_node_M_SC_PAYLD;
  assign M_SC_W_req[0] = m26_w_node_M_SC_REQ;
  assign M_SC_W_send[0] = m26_w_node_M_SC_SEND;
  assign S_SC_AR_1_INFO = S_SC_AR_info[0];
  assign S_SC_AR_1_PAYLD = S_SC_AR_payld[181:0];
  assign S_SC_AR_1_REQ = S_SC_AR_req[0];
  assign S_SC_AR_1_SEND = S_SC_AR_send[0];
  assign S_SC_AR_recv[0] = S_SC_AR_1_RECV;
  assign S_SC_AW_1_INFO = S_SC_AW_info[0];
  assign S_SC_AW_1_PAYLD = S_SC_AW_payld[181:0];
  assign S_SC_AW_1_REQ = S_SC_AW_req[0];
  assign S_SC_AW_1_SEND = S_SC_AW_send[0];
  assign S_SC_AW_recv[0] = S_SC_AW_1_RECV;
  assign S_SC_B_1_INFO = S_SC_B_info[0];
  assign S_SC_B_1_PAYLD = S_SC_B_payld[8:0];
  assign S_SC_B_1_REQ = S_SC_B_req[0];
  assign S_SC_B_1_SEND = S_SC_B_send[0];
  assign S_SC_B_recv[0] = S_SC_B_1_RECV;
  assign S_SC_R_1_INFO = S_SC_R_info[0];
  assign S_SC_R_1_PAYLD = S_SC_R_payld[54:0];
  assign S_SC_R_1_REQ = S_SC_R_req[0];
  assign S_SC_R_1_SEND = S_SC_R_send[0];
  assign S_SC_R_recv[0] = S_SC_R_1_RECV;
  assign S_SC_W_1_INFO = S_SC_W_info[0];
  assign S_SC_W_1_PAYLD = S_SC_W_payld[68:0];
  assign S_SC_W_1_REQ = S_SC_W_req[0];
  assign S_SC_W_1_SEND = S_SC_W_send[0];
  assign S_SC_W_recv[0] = S_SC_W_1_RECV;
  assign m26_ar_node_M_SC_RECV = M_SC_AR_recv[0];
  assign m26_aw_node_M_SC_RECV = M_SC_AW_recv[0];
  assign m26_b_node_M_SC_RECV = M_SC_B_recv[0];
  assign m26_r_node_M_SC_RECV = M_SC_R_recv[0];
  assign m26_w_node_M_SC_RECV = M_SC_W_recv[0];
  assign m_axi_aclk_1 = m_axi_aclk;
  assign m_axi_aresetn_1 = m_axi_aresetn;
  assign s_axi_aclk_1 = s_axi_aclk;
  assign s_axi_aresetn_1 = s_axi_aresetn;
  bd_afc3_m26arn_0 m26_ar_node
       (.m_sc_aclk(m_axi_aclk_1),
        .m_sc_aresetn(m_axi_aresetn_1),
        .m_sc_info(m26_ar_node_M_SC_INFO),
        .m_sc_payld(m26_ar_node_M_SC_PAYLD),
        .m_sc_recv(m26_ar_node_M_SC_RECV),
        .m_sc_req(m26_ar_node_M_SC_REQ),
        .m_sc_send(m26_ar_node_M_SC_SEND),
        .s_sc_aclk(s_axi_aclk_1),
        .s_sc_aresetn(s_axi_aresetn_1),
        .s_sc_info(S_SC_AR_1_INFO),
        .s_sc_payld(S_SC_AR_1_PAYLD),
        .s_sc_recv(S_SC_AR_1_RECV),
        .s_sc_req(S_SC_AR_1_REQ),
        .s_sc_send(S_SC_AR_1_SEND));
  bd_afc3_m26awn_0 m26_aw_node
       (.m_sc_aclk(m_axi_aclk_1),
        .m_sc_aresetn(m_axi_aresetn_1),
        .m_sc_info(m26_aw_node_M_SC_INFO),
        .m_sc_payld(m26_aw_node_M_SC_PAYLD),
        .m_sc_recv(m26_aw_node_M_SC_RECV),
        .m_sc_req(m26_aw_node_M_SC_REQ),
        .m_sc_send(m26_aw_node_M_SC_SEND),
        .s_sc_aclk(s_axi_aclk_1),
        .s_sc_aresetn(s_axi_aresetn_1),
        .s_sc_info(S_SC_AW_1_INFO),
        .s_sc_payld(S_SC_AW_1_PAYLD),
        .s_sc_recv(S_SC_AW_1_RECV),
        .s_sc_req(S_SC_AW_1_REQ),
        .s_sc_send(S_SC_AW_1_SEND));
  bd_afc3_m26bn_0 m26_b_node
       (.m_sc_aclk(s_axi_aclk_1),
        .m_sc_aresetn(s_axi_aresetn_1),
        .m_sc_info(m26_b_node_M_SC_INFO),
        .m_sc_payld(m26_b_node_M_SC_PAYLD),
        .m_sc_recv(m26_b_node_M_SC_RECV),
        .m_sc_req(m26_b_node_M_SC_REQ),
        .m_sc_send(m26_b_node_M_SC_SEND),
        .s_sc_aclk(m_axi_aclk_1),
        .s_sc_aresetn(m_axi_aresetn_1),
        .s_sc_info(S_SC_B_1_INFO),
        .s_sc_payld(S_SC_B_1_PAYLD),
        .s_sc_recv(S_SC_B_1_RECV),
        .s_sc_req(S_SC_B_1_REQ),
        .s_sc_send(S_SC_B_1_SEND));
  bd_afc3_m26rn_0 m26_r_node
       (.m_sc_aclk(s_axi_aclk_1),
        .m_sc_aresetn(s_axi_aresetn_1),
        .m_sc_info(m26_r_node_M_SC_INFO),
        .m_sc_payld(m26_r_node_M_SC_PAYLD),
        .m_sc_recv(m26_r_node_M_SC_RECV),
        .m_sc_req(m26_r_node_M_SC_REQ),
        .m_sc_send(m26_r_node_M_SC_SEND),
        .s_sc_aclk(m_axi_aclk_1),
        .s_sc_aresetn(m_axi_aresetn_1),
        .s_sc_info(S_SC_R_1_INFO),
        .s_sc_payld(S_SC_R_1_PAYLD),
        .s_sc_recv(S_SC_R_1_RECV),
        .s_sc_req(S_SC_R_1_REQ),
        .s_sc_send(S_SC_R_1_SEND));
  bd_afc3_m26wn_0 m26_w_node
       (.m_sc_aclk(m_axi_aclk_1),
        .m_sc_aresetn(m_axi_aresetn_1),
        .m_sc_info(m26_w_node_M_SC_INFO),
        .m_sc_payld(m26_w_node_M_SC_PAYLD),
        .m_sc_recv(m26_w_node_M_SC_RECV),
        .m_sc_req(m26_w_node_M_SC_REQ),
        .m_sc_send(m26_w_node_M_SC_SEND),
        .s_sc_aclk(s_axi_aclk_1),
        .s_sc_aresetn(s_axi_aresetn_1),
        .s_sc_info(S_SC_W_1_INFO),
        .s_sc_payld(S_SC_W_1_PAYLD),
        .s_sc_recv(S_SC_W_1_RECV),
        .s_sc_req(S_SC_W_1_REQ),
        .s_sc_send(S_SC_W_1_SEND));
endmodule

module m27_exit_pipeline_imp_S6MFF2
   (aclk,
    aresetn,
    m_axi_araddr,
    m_axi_arprot,
    m_axi_arready,
    m_axi_arvalid,
    m_axi_awaddr,
    m_axi_awprot,
    m_axi_awready,
    m_axi_awvalid,
    m_axi_bready,
    m_axi_bresp,
    m_axi_bvalid,
    m_axi_rdata,
    m_axi_rready,
    m_axi_rresp,
    m_axi_rvalid,
    m_axi_wdata,
    m_axi_wready,
    m_axi_wstrb,
    m_axi_wvalid,
    s_axi_araddr,
    s_axi_arcache,
    s_axi_arid,
    s_axi_arlen,
    s_axi_arlock,
    s_axi_arprot,
    s_axi_arqos,
    s_axi_arready,
    s_axi_aruser,
    s_axi_arvalid,
    s_axi_awaddr,
    s_axi_awcache,
    s_axi_awid,
    s_axi_awlen,
    s_axi_awlock,
    s_axi_awprot,
    s_axi_awqos,
    s_axi_awready,
    s_axi_awuser,
    s_axi_awvalid,
    s_axi_bid,
    s_axi_bready,
    s_axi_bresp,
    s_axi_buser,
    s_axi_bvalid,
    s_axi_rdata,
    s_axi_rid,
    s_axi_rlast,
    s_axi_rready,
    s_axi_rresp,
    s_axi_ruser,
    s_axi_rvalid,
    s_axi_wdata,
    s_axi_wlast,
    s_axi_wready,
    s_axi_wstrb,
    s_axi_wuser,
    s_axi_wvalid);
  input aclk;
  input aresetn;
  output [9:0]m_axi_araddr;
  output [2:0]m_axi_arprot;
  input m_axi_arready;
  output m_axi_arvalid;
  output [9:0]m_axi_awaddr;
  output [2:0]m_axi_awprot;
  input m_axi_awready;
  output m_axi_awvalid;
  output m_axi_bready;
  input [1:0]m_axi_bresp;
  input m_axi_bvalid;
  input [31:0]m_axi_rdata;
  output m_axi_rready;
  input [1:0]m_axi_rresp;
  input m_axi_rvalid;
  output [31:0]m_axi_wdata;
  input m_axi_wready;
  output [3:0]m_axi_wstrb;
  output m_axi_wvalid;
  input [9:0]s_axi_araddr;
  input [3:0]s_axi_arcache;
  input [2:0]s_axi_arid;
  input [7:0]s_axi_arlen;
  input [0:0]s_axi_arlock;
  input [2:0]s_axi_arprot;
  input [3:0]s_axi_arqos;
  output s_axi_arready;
  input [1023:0]s_axi_aruser;
  input s_axi_arvalid;
  input [9:0]s_axi_awaddr;
  input [3:0]s_axi_awcache;
  input [2:0]s_axi_awid;
  input [7:0]s_axi_awlen;
  input [0:0]s_axi_awlock;
  input [2:0]s_axi_awprot;
  input [3:0]s_axi_awqos;
  output s_axi_awready;
  input [1023:0]s_axi_awuser;
  input s_axi_awvalid;
  output [2:0]s_axi_bid;
  input s_axi_bready;
  output [1:0]s_axi_bresp;
  output [1023:0]s_axi_buser;
  output s_axi_bvalid;
  output [31:0]s_axi_rdata;
  output [2:0]s_axi_rid;
  output s_axi_rlast;
  input s_axi_rready;
  output [1:0]s_axi_rresp;
  output [1023:0]s_axi_ruser;
  output s_axi_rvalid;
  input [31:0]s_axi_wdata;
  input s_axi_wlast;
  output s_axi_wready;
  input [3:0]s_axi_wstrb;
  input [1023:0]s_axi_wuser;
  input s_axi_wvalid;

  wire aclk_1;
  wire aresetn_1;
  wire [9:0]m27_exit_M_AXI_ARADDR;
  wire [2:0]m27_exit_M_AXI_ARPROT;
  wire m27_exit_M_AXI_ARREADY;
  wire m27_exit_M_AXI_ARVALID;
  wire [9:0]m27_exit_M_AXI_AWADDR;
  wire [2:0]m27_exit_M_AXI_AWPROT;
  wire m27_exit_M_AXI_AWREADY;
  wire m27_exit_M_AXI_AWVALID;
  wire m27_exit_M_AXI_BREADY;
  wire [1:0]m27_exit_M_AXI_BRESP;
  wire m27_exit_M_AXI_BVALID;
  wire [31:0]m27_exit_M_AXI_RDATA;
  wire m27_exit_M_AXI_RREADY;
  wire [1:0]m27_exit_M_AXI_RRESP;
  wire m27_exit_M_AXI_RVALID;
  wire [31:0]m27_exit_M_AXI_WDATA;
  wire m27_exit_M_AXI_WREADY;
  wire [3:0]m27_exit_M_AXI_WSTRB;
  wire m27_exit_M_AXI_WVALID;
  wire [9:0]s_axi_1_ARADDR;
  wire [3:0]s_axi_1_ARCACHE;
  wire [2:0]s_axi_1_ARID;
  wire [7:0]s_axi_1_ARLEN;
  wire [0:0]s_axi_1_ARLOCK;
  wire [2:0]s_axi_1_ARPROT;
  wire [3:0]s_axi_1_ARQOS;
  wire s_axi_1_ARREADY;
  wire [1023:0]s_axi_1_ARUSER;
  wire s_axi_1_ARVALID;
  wire [9:0]s_axi_1_AWADDR;
  wire [3:0]s_axi_1_AWCACHE;
  wire [2:0]s_axi_1_AWID;
  wire [7:0]s_axi_1_AWLEN;
  wire [0:0]s_axi_1_AWLOCK;
  wire [2:0]s_axi_1_AWPROT;
  wire [3:0]s_axi_1_AWQOS;
  wire s_axi_1_AWREADY;
  wire [1023:0]s_axi_1_AWUSER;
  wire s_axi_1_AWVALID;
  wire [2:0]s_axi_1_BID;
  wire s_axi_1_BREADY;
  wire [1:0]s_axi_1_BRESP;
  wire [1023:0]s_axi_1_BUSER;
  wire s_axi_1_BVALID;
  wire [31:0]s_axi_1_RDATA;
  wire [2:0]s_axi_1_RID;
  wire s_axi_1_RLAST;
  wire s_axi_1_RREADY;
  wire [1:0]s_axi_1_RRESP;
  wire [1023:0]s_axi_1_RUSER;
  wire s_axi_1_RVALID;
  wire [31:0]s_axi_1_WDATA;
  wire s_axi_1_WLAST;
  wire s_axi_1_WREADY;
  wire [3:0]s_axi_1_WSTRB;
  wire [1023:0]s_axi_1_WUSER;
  wire s_axi_1_WVALID;

  assign aclk_1 = aclk;
  assign aresetn_1 = aresetn;
  assign m27_exit_M_AXI_ARREADY = m_axi_arready;
  assign m27_exit_M_AXI_AWREADY = m_axi_awready;
  assign m27_exit_M_AXI_BRESP = m_axi_bresp[1:0];
  assign m27_exit_M_AXI_BVALID = m_axi_bvalid;
  assign m27_exit_M_AXI_RDATA = m_axi_rdata[31:0];
  assign m27_exit_M_AXI_RRESP = m_axi_rresp[1:0];
  assign m27_exit_M_AXI_RVALID = m_axi_rvalid;
  assign m27_exit_M_AXI_WREADY = m_axi_wready;
  assign m_axi_araddr[9:0] = m27_exit_M_AXI_ARADDR;
  assign m_axi_arprot[2:0] = m27_exit_M_AXI_ARPROT;
  assign m_axi_arvalid = m27_exit_M_AXI_ARVALID;
  assign m_axi_awaddr[9:0] = m27_exit_M_AXI_AWADDR;
  assign m_axi_awprot[2:0] = m27_exit_M_AXI_AWPROT;
  assign m_axi_awvalid = m27_exit_M_AXI_AWVALID;
  assign m_axi_bready = m27_exit_M_AXI_BREADY;
  assign m_axi_rready = m27_exit_M_AXI_RREADY;
  assign m_axi_wdata[31:0] = m27_exit_M_AXI_WDATA;
  assign m_axi_wstrb[3:0] = m27_exit_M_AXI_WSTRB;
  assign m_axi_wvalid = m27_exit_M_AXI_WVALID;
  assign s_axi_1_ARADDR = s_axi_araddr[9:0];
  assign s_axi_1_ARCACHE = s_axi_arcache[3:0];
  assign s_axi_1_ARID = s_axi_arid[2:0];
  assign s_axi_1_ARLEN = s_axi_arlen[7:0];
  assign s_axi_1_ARLOCK = s_axi_arlock[0];
  assign s_axi_1_ARPROT = s_axi_arprot[2:0];
  assign s_axi_1_ARQOS = s_axi_arqos[3:0];
  assign s_axi_1_ARUSER = s_axi_aruser[1023:0];
  assign s_axi_1_ARVALID = s_axi_arvalid;
  assign s_axi_1_AWADDR = s_axi_awaddr[9:0];
  assign s_axi_1_AWCACHE = s_axi_awcache[3:0];
  assign s_axi_1_AWID = s_axi_awid[2:0];
  assign s_axi_1_AWLEN = s_axi_awlen[7:0];
  assign s_axi_1_AWLOCK = s_axi_awlock[0];
  assign s_axi_1_AWPROT = s_axi_awprot[2:0];
  assign s_axi_1_AWQOS = s_axi_awqos[3:0];
  assign s_axi_1_AWUSER = s_axi_awuser[1023:0];
  assign s_axi_1_AWVALID = s_axi_awvalid;
  assign s_axi_1_BREADY = s_axi_bready;
  assign s_axi_1_RREADY = s_axi_rready;
  assign s_axi_1_WDATA = s_axi_wdata[31:0];
  assign s_axi_1_WLAST = s_axi_wlast;
  assign s_axi_1_WSTRB = s_axi_wstrb[3:0];
  assign s_axi_1_WUSER = s_axi_wuser[1023:0];
  assign s_axi_1_WVALID = s_axi_wvalid;
  assign s_axi_arready = s_axi_1_ARREADY;
  assign s_axi_awready = s_axi_1_AWREADY;
  assign s_axi_bid[2:0] = s_axi_1_BID;
  assign s_axi_bresp[1:0] = s_axi_1_BRESP;
  assign s_axi_buser[1023:0] = s_axi_1_BUSER;
  assign s_axi_bvalid = s_axi_1_BVALID;
  assign s_axi_rdata[31:0] = s_axi_1_RDATA;
  assign s_axi_rid[2:0] = s_axi_1_RID;
  assign s_axi_rlast = s_axi_1_RLAST;
  assign s_axi_rresp[1:0] = s_axi_1_RRESP;
  assign s_axi_ruser[1023:0] = s_axi_1_RUSER;
  assign s_axi_rvalid = s_axi_1_RVALID;
  assign s_axi_wready = s_axi_1_WREADY;
  bd_afc3_m27e_0 m27_exit
       (.aclk(aclk_1),
        .aresetn(aresetn_1),
        .m_axi_araddr(m27_exit_M_AXI_ARADDR),
        .m_axi_arprot(m27_exit_M_AXI_ARPROT),
        .m_axi_arready(m27_exit_M_AXI_ARREADY),
        .m_axi_arvalid(m27_exit_M_AXI_ARVALID),
        .m_axi_awaddr(m27_exit_M_AXI_AWADDR),
        .m_axi_awprot(m27_exit_M_AXI_AWPROT),
        .m_axi_awready(m27_exit_M_AXI_AWREADY),
        .m_axi_awvalid(m27_exit_M_AXI_AWVALID),
        .m_axi_bready(m27_exit_M_AXI_BREADY),
        .m_axi_bresp(m27_exit_M_AXI_BRESP),
        .m_axi_bvalid(m27_exit_M_AXI_BVALID),
        .m_axi_rdata(m27_exit_M_AXI_RDATA),
        .m_axi_rready(m27_exit_M_AXI_RREADY),
        .m_axi_rresp(m27_exit_M_AXI_RRESP),
        .m_axi_rvalid(m27_exit_M_AXI_RVALID),
        .m_axi_wdata(m27_exit_M_AXI_WDATA),
        .m_axi_wready(m27_exit_M_AXI_WREADY),
        .m_axi_wstrb(m27_exit_M_AXI_WSTRB),
        .m_axi_wvalid(m27_exit_M_AXI_WVALID),
        .s_axi_araddr(s_axi_1_ARADDR),
        .s_axi_arcache(s_axi_1_ARCACHE),
        .s_axi_arid(s_axi_1_ARID),
        .s_axi_arlen(s_axi_1_ARLEN),
        .s_axi_arlock(s_axi_1_ARLOCK),
        .s_axi_arprot(s_axi_1_ARPROT),
        .s_axi_arqos(s_axi_1_ARQOS),
        .s_axi_arready(s_axi_1_ARREADY),
        .s_axi_aruser(s_axi_1_ARUSER),
        .s_axi_arvalid(s_axi_1_ARVALID),
        .s_axi_awaddr(s_axi_1_AWADDR),
        .s_axi_awcache(s_axi_1_AWCACHE),
        .s_axi_awid(s_axi_1_AWID),
        .s_axi_awlen(s_axi_1_AWLEN),
        .s_axi_awlock(s_axi_1_AWLOCK),
        .s_axi_awprot(s_axi_1_AWPROT),
        .s_axi_awqos(s_axi_1_AWQOS),
        .s_axi_awready(s_axi_1_AWREADY),
        .s_axi_awuser(s_axi_1_AWUSER),
        .s_axi_awvalid(s_axi_1_AWVALID),
        .s_axi_bid(s_axi_1_BID),
        .s_axi_bready(s_axi_1_BREADY),
        .s_axi_bresp(s_axi_1_BRESP),
        .s_axi_buser(s_axi_1_BUSER),
        .s_axi_bvalid(s_axi_1_BVALID),
        .s_axi_rdata(s_axi_1_RDATA),
        .s_axi_rid(s_axi_1_RID),
        .s_axi_rlast(s_axi_1_RLAST),
        .s_axi_rready(s_axi_1_RREADY),
        .s_axi_rresp(s_axi_1_RRESP),
        .s_axi_ruser(s_axi_1_RUSER),
        .s_axi_rvalid(s_axi_1_RVALID),
        .s_axi_wdata(s_axi_1_WDATA),
        .s_axi_wlast(s_axi_1_WLAST),
        .s_axi_wready(s_axi_1_WREADY),
        .s_axi_wstrb(s_axi_1_WSTRB),
        .s_axi_wuser(s_axi_1_WUSER),
        .s_axi_wvalid(s_axi_1_WVALID));
endmodule

module m27_nodes_imp_V92F6I
   (M_SC_AR_info,
    M_SC_AR_payld,
    M_SC_AR_recv,
    M_SC_AR_req,
    M_SC_AR_send,
    M_SC_AW_info,
    M_SC_AW_payld,
    M_SC_AW_recv,
    M_SC_AW_req,
    M_SC_AW_send,
    M_SC_B_info,
    M_SC_B_payld,
    M_SC_B_recv,
    M_SC_B_req,
    M_SC_B_send,
    M_SC_R_info,
    M_SC_R_payld,
    M_SC_R_recv,
    M_SC_R_req,
    M_SC_R_send,
    M_SC_W_info,
    M_SC_W_payld,
    M_SC_W_recv,
    M_SC_W_req,
    M_SC_W_send,
    S_SC_AR_info,
    S_SC_AR_payld,
    S_SC_AR_recv,
    S_SC_AR_req,
    S_SC_AR_send,
    S_SC_AW_info,
    S_SC_AW_payld,
    S_SC_AW_recv,
    S_SC_AW_req,
    S_SC_AW_send,
    S_SC_B_info,
    S_SC_B_payld,
    S_SC_B_recv,
    S_SC_B_req,
    S_SC_B_send,
    S_SC_R_info,
    S_SC_R_payld,
    S_SC_R_recv,
    S_SC_R_req,
    S_SC_R_send,
    S_SC_W_info,
    S_SC_W_payld,
    S_SC_W_recv,
    S_SC_W_req,
    S_SC_W_send,
    m_axi_aclk,
    m_axi_aresetn,
    s_axi_aclk,
    s_axi_aresetn);
  output [0:0]M_SC_AR_info;
  output [181:0]M_SC_AR_payld;
  input [0:0]M_SC_AR_recv;
  output [0:0]M_SC_AR_req;
  output [0:0]M_SC_AR_send;
  output [0:0]M_SC_AW_info;
  output [181:0]M_SC_AW_payld;
  input [0:0]M_SC_AW_recv;
  output [0:0]M_SC_AW_req;
  output [0:0]M_SC_AW_send;
  output [0:0]M_SC_B_info;
  output [8:0]M_SC_B_payld;
  input [0:0]M_SC_B_recv;
  output [0:0]M_SC_B_req;
  output [0:0]M_SC_B_send;
  output [0:0]M_SC_R_info;
  output [54:0]M_SC_R_payld;
  input [0:0]M_SC_R_recv;
  output [0:0]M_SC_R_req;
  output [0:0]M_SC_R_send;
  output [0:0]M_SC_W_info;
  output [68:0]M_SC_W_payld;
  input [0:0]M_SC_W_recv;
  output [0:0]M_SC_W_req;
  output [0:0]M_SC_W_send;
  input [0:0]S_SC_AR_info;
  input [181:0]S_SC_AR_payld;
  output [0:0]S_SC_AR_recv;
  input [0:0]S_SC_AR_req;
  input [0:0]S_SC_AR_send;
  input [0:0]S_SC_AW_info;
  input [181:0]S_SC_AW_payld;
  output [0:0]S_SC_AW_recv;
  input [0:0]S_SC_AW_req;
  input [0:0]S_SC_AW_send;
  input [0:0]S_SC_B_info;
  input [8:0]S_SC_B_payld;
  output [0:0]S_SC_B_recv;
  input [0:0]S_SC_B_req;
  input [0:0]S_SC_B_send;
  input [0:0]S_SC_R_info;
  input [54:0]S_SC_R_payld;
  output [0:0]S_SC_R_recv;
  input [0:0]S_SC_R_req;
  input [0:0]S_SC_R_send;
  input [0:0]S_SC_W_info;
  input [68:0]S_SC_W_payld;
  output [0:0]S_SC_W_recv;
  input [0:0]S_SC_W_req;
  input [0:0]S_SC_W_send;
  input m_axi_aclk;
  input m_axi_aresetn;
  input s_axi_aclk;
  input s_axi_aresetn;

  wire [0:0]S_SC_AR_1_INFO;
  wire [181:0]S_SC_AR_1_PAYLD;
  wire [0:0]S_SC_AR_1_RECV;
  wire [0:0]S_SC_AR_1_REQ;
  wire [0:0]S_SC_AR_1_SEND;
  wire [0:0]S_SC_AW_1_INFO;
  wire [181:0]S_SC_AW_1_PAYLD;
  wire [0:0]S_SC_AW_1_RECV;
  wire [0:0]S_SC_AW_1_REQ;
  wire [0:0]S_SC_AW_1_SEND;
  wire [0:0]S_SC_B_1_INFO;
  wire [8:0]S_SC_B_1_PAYLD;
  wire [0:0]S_SC_B_1_RECV;
  wire [0:0]S_SC_B_1_REQ;
  wire [0:0]S_SC_B_1_SEND;
  wire [0:0]S_SC_R_1_INFO;
  wire [54:0]S_SC_R_1_PAYLD;
  wire [0:0]S_SC_R_1_RECV;
  wire [0:0]S_SC_R_1_REQ;
  wire [0:0]S_SC_R_1_SEND;
  wire [0:0]S_SC_W_1_INFO;
  wire [68:0]S_SC_W_1_PAYLD;
  wire [0:0]S_SC_W_1_RECV;
  wire [0:0]S_SC_W_1_REQ;
  wire [0:0]S_SC_W_1_SEND;
  wire [0:0]m27_ar_node_M_SC_INFO;
  wire [181:0]m27_ar_node_M_SC_PAYLD;
  wire [0:0]m27_ar_node_M_SC_RECV;
  wire [0:0]m27_ar_node_M_SC_REQ;
  wire [0:0]m27_ar_node_M_SC_SEND;
  wire [0:0]m27_aw_node_M_SC_INFO;
  wire [181:0]m27_aw_node_M_SC_PAYLD;
  wire [0:0]m27_aw_node_M_SC_RECV;
  wire [0:0]m27_aw_node_M_SC_REQ;
  wire [0:0]m27_aw_node_M_SC_SEND;
  wire [0:0]m27_b_node_M_SC_INFO;
  wire [8:0]m27_b_node_M_SC_PAYLD;
  wire [0:0]m27_b_node_M_SC_RECV;
  wire [0:0]m27_b_node_M_SC_REQ;
  wire [0:0]m27_b_node_M_SC_SEND;
  wire [0:0]m27_r_node_M_SC_INFO;
  wire [54:0]m27_r_node_M_SC_PAYLD;
  wire [0:0]m27_r_node_M_SC_RECV;
  wire [0:0]m27_r_node_M_SC_REQ;
  wire [0:0]m27_r_node_M_SC_SEND;
  wire [0:0]m27_w_node_M_SC_INFO;
  wire [68:0]m27_w_node_M_SC_PAYLD;
  wire [0:0]m27_w_node_M_SC_RECV;
  wire [0:0]m27_w_node_M_SC_REQ;
  wire [0:0]m27_w_node_M_SC_SEND;
  wire m_axi_aclk_1;
  wire m_axi_aresetn_1;
  wire s_axi_aclk_1;
  wire s_axi_aresetn_1;

  assign M_SC_AR_info[0] = m27_ar_node_M_SC_INFO;
  assign M_SC_AR_payld[181:0] = m27_ar_node_M_SC_PAYLD;
  assign M_SC_AR_req[0] = m27_ar_node_M_SC_REQ;
  assign M_SC_AR_send[0] = m27_ar_node_M_SC_SEND;
  assign M_SC_AW_info[0] = m27_aw_node_M_SC_INFO;
  assign M_SC_AW_payld[181:0] = m27_aw_node_M_SC_PAYLD;
  assign M_SC_AW_req[0] = m27_aw_node_M_SC_REQ;
  assign M_SC_AW_send[0] = m27_aw_node_M_SC_SEND;
  assign M_SC_B_info[0] = m27_b_node_M_SC_INFO;
  assign M_SC_B_payld[8:0] = m27_b_node_M_SC_PAYLD;
  assign M_SC_B_req[0] = m27_b_node_M_SC_REQ;
  assign M_SC_B_send[0] = m27_b_node_M_SC_SEND;
  assign M_SC_R_info[0] = m27_r_node_M_SC_INFO;
  assign M_SC_R_payld[54:0] = m27_r_node_M_SC_PAYLD;
  assign M_SC_R_req[0] = m27_r_node_M_SC_REQ;
  assign M_SC_R_send[0] = m27_r_node_M_SC_SEND;
  assign M_SC_W_info[0] = m27_w_node_M_SC_INFO;
  assign M_SC_W_payld[68:0] = m27_w_node_M_SC_PAYLD;
  assign M_SC_W_req[0] = m27_w_node_M_SC_REQ;
  assign M_SC_W_send[0] = m27_w_node_M_SC_SEND;
  assign S_SC_AR_1_INFO = S_SC_AR_info[0];
  assign S_SC_AR_1_PAYLD = S_SC_AR_payld[181:0];
  assign S_SC_AR_1_REQ = S_SC_AR_req[0];
  assign S_SC_AR_1_SEND = S_SC_AR_send[0];
  assign S_SC_AR_recv[0] = S_SC_AR_1_RECV;
  assign S_SC_AW_1_INFO = S_SC_AW_info[0];
  assign S_SC_AW_1_PAYLD = S_SC_AW_payld[181:0];
  assign S_SC_AW_1_REQ = S_SC_AW_req[0];
  assign S_SC_AW_1_SEND = S_SC_AW_send[0];
  assign S_SC_AW_recv[0] = S_SC_AW_1_RECV;
  assign S_SC_B_1_INFO = S_SC_B_info[0];
  assign S_SC_B_1_PAYLD = S_SC_B_payld[8:0];
  assign S_SC_B_1_REQ = S_SC_B_req[0];
  assign S_SC_B_1_SEND = S_SC_B_send[0];
  assign S_SC_B_recv[0] = S_SC_B_1_RECV;
  assign S_SC_R_1_INFO = S_SC_R_info[0];
  assign S_SC_R_1_PAYLD = S_SC_R_payld[54:0];
  assign S_SC_R_1_REQ = S_SC_R_req[0];
  assign S_SC_R_1_SEND = S_SC_R_send[0];
  assign S_SC_R_recv[0] = S_SC_R_1_RECV;
  assign S_SC_W_1_INFO = S_SC_W_info[0];
  assign S_SC_W_1_PAYLD = S_SC_W_payld[68:0];
  assign S_SC_W_1_REQ = S_SC_W_req[0];
  assign S_SC_W_1_SEND = S_SC_W_send[0];
  assign S_SC_W_recv[0] = S_SC_W_1_RECV;
  assign m27_ar_node_M_SC_RECV = M_SC_AR_recv[0];
  assign m27_aw_node_M_SC_RECV = M_SC_AW_recv[0];
  assign m27_b_node_M_SC_RECV = M_SC_B_recv[0];
  assign m27_r_node_M_SC_RECV = M_SC_R_recv[0];
  assign m27_w_node_M_SC_RECV = M_SC_W_recv[0];
  assign m_axi_aclk_1 = m_axi_aclk;
  assign m_axi_aresetn_1 = m_axi_aresetn;
  assign s_axi_aclk_1 = s_axi_aclk;
  assign s_axi_aresetn_1 = s_axi_aresetn;
  bd_afc3_m27arn_0 m27_ar_node
       (.m_sc_aclk(m_axi_aclk_1),
        .m_sc_aresetn(m_axi_aresetn_1),
        .m_sc_info(m27_ar_node_M_SC_INFO),
        .m_sc_payld(m27_ar_node_M_SC_PAYLD),
        .m_sc_recv(m27_ar_node_M_SC_RECV),
        .m_sc_req(m27_ar_node_M_SC_REQ),
        .m_sc_send(m27_ar_node_M_SC_SEND),
        .s_sc_aclk(s_axi_aclk_1),
        .s_sc_aresetn(s_axi_aresetn_1),
        .s_sc_info(S_SC_AR_1_INFO),
        .s_sc_payld(S_SC_AR_1_PAYLD),
        .s_sc_recv(S_SC_AR_1_RECV),
        .s_sc_req(S_SC_AR_1_REQ),
        .s_sc_send(S_SC_AR_1_SEND));
  bd_afc3_m27awn_0 m27_aw_node
       (.m_sc_aclk(m_axi_aclk_1),
        .m_sc_aresetn(m_axi_aresetn_1),
        .m_sc_info(m27_aw_node_M_SC_INFO),
        .m_sc_payld(m27_aw_node_M_SC_PAYLD),
        .m_sc_recv(m27_aw_node_M_SC_RECV),
        .m_sc_req(m27_aw_node_M_SC_REQ),
        .m_sc_send(m27_aw_node_M_SC_SEND),
        .s_sc_aclk(s_axi_aclk_1),
        .s_sc_aresetn(s_axi_aresetn_1),
        .s_sc_info(S_SC_AW_1_INFO),
        .s_sc_payld(S_SC_AW_1_PAYLD),
        .s_sc_recv(S_SC_AW_1_RECV),
        .s_sc_req(S_SC_AW_1_REQ),
        .s_sc_send(S_SC_AW_1_SEND));
  bd_afc3_m27bn_0 m27_b_node
       (.m_sc_aclk(s_axi_aclk_1),
        .m_sc_aresetn(s_axi_aresetn_1),
        .m_sc_info(m27_b_node_M_SC_INFO),
        .m_sc_payld(m27_b_node_M_SC_PAYLD),
        .m_sc_recv(m27_b_node_M_SC_RECV),
        .m_sc_req(m27_b_node_M_SC_REQ),
        .m_sc_send(m27_b_node_M_SC_SEND),
        .s_sc_aclk(m_axi_aclk_1),
        .s_sc_aresetn(m_axi_aresetn_1),
        .s_sc_info(S_SC_B_1_INFO),
        .s_sc_payld(S_SC_B_1_PAYLD),
        .s_sc_recv(S_SC_B_1_RECV),
        .s_sc_req(S_SC_B_1_REQ),
        .s_sc_send(S_SC_B_1_SEND));
  bd_afc3_m27rn_0 m27_r_node
       (.m_sc_aclk(s_axi_aclk_1),
        .m_sc_aresetn(s_axi_aresetn_1),
        .m_sc_info(m27_r_node_M_SC_INFO),
        .m_sc_payld(m27_r_node_M_SC_PAYLD),
        .m_sc_recv(m27_r_node_M_SC_RECV),
        .m_sc_req(m27_r_node_M_SC_REQ),
        .m_sc_send(m27_r_node_M_SC_SEND),
        .s_sc_aclk(m_axi_aclk_1),
        .s_sc_aresetn(m_axi_aresetn_1),
        .s_sc_info(S_SC_R_1_INFO),
        .s_sc_payld(S_SC_R_1_PAYLD),
        .s_sc_recv(S_SC_R_1_RECV),
        .s_sc_req(S_SC_R_1_REQ),
        .s_sc_send(S_SC_R_1_SEND));
  bd_afc3_m27wn_0 m27_w_node
       (.m_sc_aclk(m_axi_aclk_1),
        .m_sc_aresetn(m_axi_aresetn_1),
        .m_sc_info(m27_w_node_M_SC_INFO),
        .m_sc_payld(m27_w_node_M_SC_PAYLD),
        .m_sc_recv(m27_w_node_M_SC_RECV),
        .m_sc_req(m27_w_node_M_SC_REQ),
        .m_sc_send(m27_w_node_M_SC_SEND),
        .s_sc_aclk(s_axi_aclk_1),
        .s_sc_aresetn(s_axi_aresetn_1),
        .s_sc_info(S_SC_W_1_INFO),
        .s_sc_payld(S_SC_W_1_PAYLD),
        .s_sc_recv(S_SC_W_1_RECV),
        .s_sc_req(S_SC_W_1_REQ),
        .s_sc_send(S_SC_W_1_SEND));
endmodule

module m28_exit_pipeline_imp_1FCAITQ
   (aclk,
    aresetn,
    m_axi_araddr,
    m_axi_arprot,
    m_axi_arready,
    m_axi_arvalid,
    m_axi_awaddr,
    m_axi_awprot,
    m_axi_awready,
    m_axi_awvalid,
    m_axi_bready,
    m_axi_bresp,
    m_axi_bvalid,
    m_axi_rdata,
    m_axi_rready,
    m_axi_rresp,
    m_axi_rvalid,
    m_axi_wdata,
    m_axi_wready,
    m_axi_wstrb,
    m_axi_wvalid,
    s_axi_araddr,
    s_axi_arcache,
    s_axi_arid,
    s_axi_arlen,
    s_axi_arlock,
    s_axi_arprot,
    s_axi_arqos,
    s_axi_arready,
    s_axi_aruser,
    s_axi_arvalid,
    s_axi_awaddr,
    s_axi_awcache,
    s_axi_awid,
    s_axi_awlen,
    s_axi_awlock,
    s_axi_awprot,
    s_axi_awqos,
    s_axi_awready,
    s_axi_awuser,
    s_axi_awvalid,
    s_axi_bid,
    s_axi_bready,
    s_axi_bresp,
    s_axi_buser,
    s_axi_bvalid,
    s_axi_rdata,
    s_axi_rid,
    s_axi_rlast,
    s_axi_rready,
    s_axi_rresp,
    s_axi_ruser,
    s_axi_rvalid,
    s_axi_wdata,
    s_axi_wlast,
    s_axi_wready,
    s_axi_wstrb,
    s_axi_wuser,
    s_axi_wvalid);
  input aclk;
  input aresetn;
  output [9:0]m_axi_araddr;
  output [2:0]m_axi_arprot;
  input m_axi_arready;
  output m_axi_arvalid;
  output [9:0]m_axi_awaddr;
  output [2:0]m_axi_awprot;
  input m_axi_awready;
  output m_axi_awvalid;
  output m_axi_bready;
  input [1:0]m_axi_bresp;
  input m_axi_bvalid;
  input [31:0]m_axi_rdata;
  output m_axi_rready;
  input [1:0]m_axi_rresp;
  input m_axi_rvalid;
  output [31:0]m_axi_wdata;
  input m_axi_wready;
  output [3:0]m_axi_wstrb;
  output m_axi_wvalid;
  input [9:0]s_axi_araddr;
  input [3:0]s_axi_arcache;
  input [2:0]s_axi_arid;
  input [7:0]s_axi_arlen;
  input [0:0]s_axi_arlock;
  input [2:0]s_axi_arprot;
  input [3:0]s_axi_arqos;
  output s_axi_arready;
  input [1023:0]s_axi_aruser;
  input s_axi_arvalid;
  input [9:0]s_axi_awaddr;
  input [3:0]s_axi_awcache;
  input [2:0]s_axi_awid;
  input [7:0]s_axi_awlen;
  input [0:0]s_axi_awlock;
  input [2:0]s_axi_awprot;
  input [3:0]s_axi_awqos;
  output s_axi_awready;
  input [1023:0]s_axi_awuser;
  input s_axi_awvalid;
  output [2:0]s_axi_bid;
  input s_axi_bready;
  output [1:0]s_axi_bresp;
  output [1023:0]s_axi_buser;
  output s_axi_bvalid;
  output [31:0]s_axi_rdata;
  output [2:0]s_axi_rid;
  output s_axi_rlast;
  input s_axi_rready;
  output [1:0]s_axi_rresp;
  output [1023:0]s_axi_ruser;
  output s_axi_rvalid;
  input [31:0]s_axi_wdata;
  input s_axi_wlast;
  output s_axi_wready;
  input [3:0]s_axi_wstrb;
  input [1023:0]s_axi_wuser;
  input s_axi_wvalid;

  wire aclk_1;
  wire aresetn_1;
  wire [9:0]m28_exit_M_AXI_ARADDR;
  wire [2:0]m28_exit_M_AXI_ARPROT;
  wire m28_exit_M_AXI_ARREADY;
  wire m28_exit_M_AXI_ARVALID;
  wire [9:0]m28_exit_M_AXI_AWADDR;
  wire [2:0]m28_exit_M_AXI_AWPROT;
  wire m28_exit_M_AXI_AWREADY;
  wire m28_exit_M_AXI_AWVALID;
  wire m28_exit_M_AXI_BREADY;
  wire [1:0]m28_exit_M_AXI_BRESP;
  wire m28_exit_M_AXI_BVALID;
  wire [31:0]m28_exit_M_AXI_RDATA;
  wire m28_exit_M_AXI_RREADY;
  wire [1:0]m28_exit_M_AXI_RRESP;
  wire m28_exit_M_AXI_RVALID;
  wire [31:0]m28_exit_M_AXI_WDATA;
  wire m28_exit_M_AXI_WREADY;
  wire [3:0]m28_exit_M_AXI_WSTRB;
  wire m28_exit_M_AXI_WVALID;
  wire [9:0]s_axi_1_ARADDR;
  wire [3:0]s_axi_1_ARCACHE;
  wire [2:0]s_axi_1_ARID;
  wire [7:0]s_axi_1_ARLEN;
  wire [0:0]s_axi_1_ARLOCK;
  wire [2:0]s_axi_1_ARPROT;
  wire [3:0]s_axi_1_ARQOS;
  wire s_axi_1_ARREADY;
  wire [1023:0]s_axi_1_ARUSER;
  wire s_axi_1_ARVALID;
  wire [9:0]s_axi_1_AWADDR;
  wire [3:0]s_axi_1_AWCACHE;
  wire [2:0]s_axi_1_AWID;
  wire [7:0]s_axi_1_AWLEN;
  wire [0:0]s_axi_1_AWLOCK;
  wire [2:0]s_axi_1_AWPROT;
  wire [3:0]s_axi_1_AWQOS;
  wire s_axi_1_AWREADY;
  wire [1023:0]s_axi_1_AWUSER;
  wire s_axi_1_AWVALID;
  wire [2:0]s_axi_1_BID;
  wire s_axi_1_BREADY;
  wire [1:0]s_axi_1_BRESP;
  wire [1023:0]s_axi_1_BUSER;
  wire s_axi_1_BVALID;
  wire [31:0]s_axi_1_RDATA;
  wire [2:0]s_axi_1_RID;
  wire s_axi_1_RLAST;
  wire s_axi_1_RREADY;
  wire [1:0]s_axi_1_RRESP;
  wire [1023:0]s_axi_1_RUSER;
  wire s_axi_1_RVALID;
  wire [31:0]s_axi_1_WDATA;
  wire s_axi_1_WLAST;
  wire s_axi_1_WREADY;
  wire [3:0]s_axi_1_WSTRB;
  wire [1023:0]s_axi_1_WUSER;
  wire s_axi_1_WVALID;

  assign aclk_1 = aclk;
  assign aresetn_1 = aresetn;
  assign m28_exit_M_AXI_ARREADY = m_axi_arready;
  assign m28_exit_M_AXI_AWREADY = m_axi_awready;
  assign m28_exit_M_AXI_BRESP = m_axi_bresp[1:0];
  assign m28_exit_M_AXI_BVALID = m_axi_bvalid;
  assign m28_exit_M_AXI_RDATA = m_axi_rdata[31:0];
  assign m28_exit_M_AXI_RRESP = m_axi_rresp[1:0];
  assign m28_exit_M_AXI_RVALID = m_axi_rvalid;
  assign m28_exit_M_AXI_WREADY = m_axi_wready;
  assign m_axi_araddr[9:0] = m28_exit_M_AXI_ARADDR;
  assign m_axi_arprot[2:0] = m28_exit_M_AXI_ARPROT;
  assign m_axi_arvalid = m28_exit_M_AXI_ARVALID;
  assign m_axi_awaddr[9:0] = m28_exit_M_AXI_AWADDR;
  assign m_axi_awprot[2:0] = m28_exit_M_AXI_AWPROT;
  assign m_axi_awvalid = m28_exit_M_AXI_AWVALID;
  assign m_axi_bready = m28_exit_M_AXI_BREADY;
  assign m_axi_rready = m28_exit_M_AXI_RREADY;
  assign m_axi_wdata[31:0] = m28_exit_M_AXI_WDATA;
  assign m_axi_wstrb[3:0] = m28_exit_M_AXI_WSTRB;
  assign m_axi_wvalid = m28_exit_M_AXI_WVALID;
  assign s_axi_1_ARADDR = s_axi_araddr[9:0];
  assign s_axi_1_ARCACHE = s_axi_arcache[3:0];
  assign s_axi_1_ARID = s_axi_arid[2:0];
  assign s_axi_1_ARLEN = s_axi_arlen[7:0];
  assign s_axi_1_ARLOCK = s_axi_arlock[0];
  assign s_axi_1_ARPROT = s_axi_arprot[2:0];
  assign s_axi_1_ARQOS = s_axi_arqos[3:0];
  assign s_axi_1_ARUSER = s_axi_aruser[1023:0];
  assign s_axi_1_ARVALID = s_axi_arvalid;
  assign s_axi_1_AWADDR = s_axi_awaddr[9:0];
  assign s_axi_1_AWCACHE = s_axi_awcache[3:0];
  assign s_axi_1_AWID = s_axi_awid[2:0];
  assign s_axi_1_AWLEN = s_axi_awlen[7:0];
  assign s_axi_1_AWLOCK = s_axi_awlock[0];
  assign s_axi_1_AWPROT = s_axi_awprot[2:0];
  assign s_axi_1_AWQOS = s_axi_awqos[3:0];
  assign s_axi_1_AWUSER = s_axi_awuser[1023:0];
  assign s_axi_1_AWVALID = s_axi_awvalid;
  assign s_axi_1_BREADY = s_axi_bready;
  assign s_axi_1_RREADY = s_axi_rready;
  assign s_axi_1_WDATA = s_axi_wdata[31:0];
  assign s_axi_1_WLAST = s_axi_wlast;
  assign s_axi_1_WSTRB = s_axi_wstrb[3:0];
  assign s_axi_1_WUSER = s_axi_wuser[1023:0];
  assign s_axi_1_WVALID = s_axi_wvalid;
  assign s_axi_arready = s_axi_1_ARREADY;
  assign s_axi_awready = s_axi_1_AWREADY;
  assign s_axi_bid[2:0] = s_axi_1_BID;
  assign s_axi_bresp[1:0] = s_axi_1_BRESP;
  assign s_axi_buser[1023:0] = s_axi_1_BUSER;
  assign s_axi_bvalid = s_axi_1_BVALID;
  assign s_axi_rdata[31:0] = s_axi_1_RDATA;
  assign s_axi_rid[2:0] = s_axi_1_RID;
  assign s_axi_rlast = s_axi_1_RLAST;
  assign s_axi_rresp[1:0] = s_axi_1_RRESP;
  assign s_axi_ruser[1023:0] = s_axi_1_RUSER;
  assign s_axi_rvalid = s_axi_1_RVALID;
  assign s_axi_wready = s_axi_1_WREADY;
  bd_afc3_m28e_0 m28_exit
       (.aclk(aclk_1),
        .aresetn(aresetn_1),
        .m_axi_araddr(m28_exit_M_AXI_ARADDR),
        .m_axi_arprot(m28_exit_M_AXI_ARPROT),
        .m_axi_arready(m28_exit_M_AXI_ARREADY),
        .m_axi_arvalid(m28_exit_M_AXI_ARVALID),
        .m_axi_awaddr(m28_exit_M_AXI_AWADDR),
        .m_axi_awprot(m28_exit_M_AXI_AWPROT),
        .m_axi_awready(m28_exit_M_AXI_AWREADY),
        .m_axi_awvalid(m28_exit_M_AXI_AWVALID),
        .m_axi_bready(m28_exit_M_AXI_BREADY),
        .m_axi_bresp(m28_exit_M_AXI_BRESP),
        .m_axi_bvalid(m28_exit_M_AXI_BVALID),
        .m_axi_rdata(m28_exit_M_AXI_RDATA),
        .m_axi_rready(m28_exit_M_AXI_RREADY),
        .m_axi_rresp(m28_exit_M_AXI_RRESP),
        .m_axi_rvalid(m28_exit_M_AXI_RVALID),
        .m_axi_wdata(m28_exit_M_AXI_WDATA),
        .m_axi_wready(m28_exit_M_AXI_WREADY),
        .m_axi_wstrb(m28_exit_M_AXI_WSTRB),
        .m_axi_wvalid(m28_exit_M_AXI_WVALID),
        .s_axi_araddr(s_axi_1_ARADDR),
        .s_axi_arcache(s_axi_1_ARCACHE),
        .s_axi_arid(s_axi_1_ARID),
        .s_axi_arlen(s_axi_1_ARLEN),
        .s_axi_arlock(s_axi_1_ARLOCK),
        .s_axi_arprot(s_axi_1_ARPROT),
        .s_axi_arqos(s_axi_1_ARQOS),
        .s_axi_arready(s_axi_1_ARREADY),
        .s_axi_aruser(s_axi_1_ARUSER),
        .s_axi_arvalid(s_axi_1_ARVALID),
        .s_axi_awaddr(s_axi_1_AWADDR),
        .s_axi_awcache(s_axi_1_AWCACHE),
        .s_axi_awid(s_axi_1_AWID),
        .s_axi_awlen(s_axi_1_AWLEN),
        .s_axi_awlock(s_axi_1_AWLOCK),
        .s_axi_awprot(s_axi_1_AWPROT),
        .s_axi_awqos(s_axi_1_AWQOS),
        .s_axi_awready(s_axi_1_AWREADY),
        .s_axi_awuser(s_axi_1_AWUSER),
        .s_axi_awvalid(s_axi_1_AWVALID),
        .s_axi_bid(s_axi_1_BID),
        .s_axi_bready(s_axi_1_BREADY),
        .s_axi_bresp(s_axi_1_BRESP),
        .s_axi_buser(s_axi_1_BUSER),
        .s_axi_bvalid(s_axi_1_BVALID),
        .s_axi_rdata(s_axi_1_RDATA),
        .s_axi_rid(s_axi_1_RID),
        .s_axi_rlast(s_axi_1_RLAST),
        .s_axi_rready(s_axi_1_RREADY),
        .s_axi_rresp(s_axi_1_RRESP),
        .s_axi_ruser(s_axi_1_RUSER),
        .s_axi_rvalid(s_axi_1_RVALID),
        .s_axi_wdata(s_axi_1_WDATA),
        .s_axi_wlast(s_axi_1_WLAST),
        .s_axi_wready(s_axi_1_WREADY),
        .s_axi_wstrb(s_axi_1_WSTRB),
        .s_axi_wuser(s_axi_1_WUSER),
        .s_axi_wvalid(s_axi_1_WVALID));
endmodule

module m28_nodes_imp_ALP6LO
   (M_SC_AR_info,
    M_SC_AR_payld,
    M_SC_AR_recv,
    M_SC_AR_req,
    M_SC_AR_send,
    M_SC_AW_info,
    M_SC_AW_payld,
    M_SC_AW_recv,
    M_SC_AW_req,
    M_SC_AW_send,
    M_SC_B_info,
    M_SC_B_payld,
    M_SC_B_recv,
    M_SC_B_req,
    M_SC_B_send,
    M_SC_R_info,
    M_SC_R_payld,
    M_SC_R_recv,
    M_SC_R_req,
    M_SC_R_send,
    M_SC_W_info,
    M_SC_W_payld,
    M_SC_W_recv,
    M_SC_W_req,
    M_SC_W_send,
    S_SC_AR_info,
    S_SC_AR_payld,
    S_SC_AR_recv,
    S_SC_AR_req,
    S_SC_AR_send,
    S_SC_AW_info,
    S_SC_AW_payld,
    S_SC_AW_recv,
    S_SC_AW_req,
    S_SC_AW_send,
    S_SC_B_info,
    S_SC_B_payld,
    S_SC_B_recv,
    S_SC_B_req,
    S_SC_B_send,
    S_SC_R_info,
    S_SC_R_payld,
    S_SC_R_recv,
    S_SC_R_req,
    S_SC_R_send,
    S_SC_W_info,
    S_SC_W_payld,
    S_SC_W_recv,
    S_SC_W_req,
    S_SC_W_send,
    m_axi_aclk,
    m_axi_aresetn,
    s_axi_aclk,
    s_axi_aresetn);
  output [0:0]M_SC_AR_info;
  output [181:0]M_SC_AR_payld;
  input [0:0]M_SC_AR_recv;
  output [0:0]M_SC_AR_req;
  output [0:0]M_SC_AR_send;
  output [0:0]M_SC_AW_info;
  output [181:0]M_SC_AW_payld;
  input [0:0]M_SC_AW_recv;
  output [0:0]M_SC_AW_req;
  output [0:0]M_SC_AW_send;
  output [0:0]M_SC_B_info;
  output [8:0]M_SC_B_payld;
  input [0:0]M_SC_B_recv;
  output [0:0]M_SC_B_req;
  output [0:0]M_SC_B_send;
  output [0:0]M_SC_R_info;
  output [54:0]M_SC_R_payld;
  input [0:0]M_SC_R_recv;
  output [0:0]M_SC_R_req;
  output [0:0]M_SC_R_send;
  output [0:0]M_SC_W_info;
  output [68:0]M_SC_W_payld;
  input [0:0]M_SC_W_recv;
  output [0:0]M_SC_W_req;
  output [0:0]M_SC_W_send;
  input [0:0]S_SC_AR_info;
  input [181:0]S_SC_AR_payld;
  output [0:0]S_SC_AR_recv;
  input [0:0]S_SC_AR_req;
  input [0:0]S_SC_AR_send;
  input [0:0]S_SC_AW_info;
  input [181:0]S_SC_AW_payld;
  output [0:0]S_SC_AW_recv;
  input [0:0]S_SC_AW_req;
  input [0:0]S_SC_AW_send;
  input [0:0]S_SC_B_info;
  input [8:0]S_SC_B_payld;
  output [0:0]S_SC_B_recv;
  input [0:0]S_SC_B_req;
  input [0:0]S_SC_B_send;
  input [0:0]S_SC_R_info;
  input [54:0]S_SC_R_payld;
  output [0:0]S_SC_R_recv;
  input [0:0]S_SC_R_req;
  input [0:0]S_SC_R_send;
  input [0:0]S_SC_W_info;
  input [68:0]S_SC_W_payld;
  output [0:0]S_SC_W_recv;
  input [0:0]S_SC_W_req;
  input [0:0]S_SC_W_send;
  input m_axi_aclk;
  input m_axi_aresetn;
  input s_axi_aclk;
  input s_axi_aresetn;

  wire [0:0]S_SC_AR_1_INFO;
  wire [181:0]S_SC_AR_1_PAYLD;
  wire [0:0]S_SC_AR_1_RECV;
  wire [0:0]S_SC_AR_1_REQ;
  wire [0:0]S_SC_AR_1_SEND;
  wire [0:0]S_SC_AW_1_INFO;
  wire [181:0]S_SC_AW_1_PAYLD;
  wire [0:0]S_SC_AW_1_RECV;
  wire [0:0]S_SC_AW_1_REQ;
  wire [0:0]S_SC_AW_1_SEND;
  wire [0:0]S_SC_B_1_INFO;
  wire [8:0]S_SC_B_1_PAYLD;
  wire [0:0]S_SC_B_1_RECV;
  wire [0:0]S_SC_B_1_REQ;
  wire [0:0]S_SC_B_1_SEND;
  wire [0:0]S_SC_R_1_INFO;
  wire [54:0]S_SC_R_1_PAYLD;
  wire [0:0]S_SC_R_1_RECV;
  wire [0:0]S_SC_R_1_REQ;
  wire [0:0]S_SC_R_1_SEND;
  wire [0:0]S_SC_W_1_INFO;
  wire [68:0]S_SC_W_1_PAYLD;
  wire [0:0]S_SC_W_1_RECV;
  wire [0:0]S_SC_W_1_REQ;
  wire [0:0]S_SC_W_1_SEND;
  wire [0:0]m28_ar_node_M_SC_INFO;
  wire [181:0]m28_ar_node_M_SC_PAYLD;
  wire [0:0]m28_ar_node_M_SC_RECV;
  wire [0:0]m28_ar_node_M_SC_REQ;
  wire [0:0]m28_ar_node_M_SC_SEND;
  wire [0:0]m28_aw_node_M_SC_INFO;
  wire [181:0]m28_aw_node_M_SC_PAYLD;
  wire [0:0]m28_aw_node_M_SC_RECV;
  wire [0:0]m28_aw_node_M_SC_REQ;
  wire [0:0]m28_aw_node_M_SC_SEND;
  wire [0:0]m28_b_node_M_SC_INFO;
  wire [8:0]m28_b_node_M_SC_PAYLD;
  wire [0:0]m28_b_node_M_SC_RECV;
  wire [0:0]m28_b_node_M_SC_REQ;
  wire [0:0]m28_b_node_M_SC_SEND;
  wire [0:0]m28_r_node_M_SC_INFO;
  wire [54:0]m28_r_node_M_SC_PAYLD;
  wire [0:0]m28_r_node_M_SC_RECV;
  wire [0:0]m28_r_node_M_SC_REQ;
  wire [0:0]m28_r_node_M_SC_SEND;
  wire [0:0]m28_w_node_M_SC_INFO;
  wire [68:0]m28_w_node_M_SC_PAYLD;
  wire [0:0]m28_w_node_M_SC_RECV;
  wire [0:0]m28_w_node_M_SC_REQ;
  wire [0:0]m28_w_node_M_SC_SEND;
  wire m_axi_aclk_1;
  wire m_axi_aresetn_1;
  wire s_axi_aclk_1;
  wire s_axi_aresetn_1;

  assign M_SC_AR_info[0] = m28_ar_node_M_SC_INFO;
  assign M_SC_AR_payld[181:0] = m28_ar_node_M_SC_PAYLD;
  assign M_SC_AR_req[0] = m28_ar_node_M_SC_REQ;
  assign M_SC_AR_send[0] = m28_ar_node_M_SC_SEND;
  assign M_SC_AW_info[0] = m28_aw_node_M_SC_INFO;
  assign M_SC_AW_payld[181:0] = m28_aw_node_M_SC_PAYLD;
  assign M_SC_AW_req[0] = m28_aw_node_M_SC_REQ;
  assign M_SC_AW_send[0] = m28_aw_node_M_SC_SEND;
  assign M_SC_B_info[0] = m28_b_node_M_SC_INFO;
  assign M_SC_B_payld[8:0] = m28_b_node_M_SC_PAYLD;
  assign M_SC_B_req[0] = m28_b_node_M_SC_REQ;
  assign M_SC_B_send[0] = m28_b_node_M_SC_SEND;
  assign M_SC_R_info[0] = m28_r_node_M_SC_INFO;
  assign M_SC_R_payld[54:0] = m28_r_node_M_SC_PAYLD;
  assign M_SC_R_req[0] = m28_r_node_M_SC_REQ;
  assign M_SC_R_send[0] = m28_r_node_M_SC_SEND;
  assign M_SC_W_info[0] = m28_w_node_M_SC_INFO;
  assign M_SC_W_payld[68:0] = m28_w_node_M_SC_PAYLD;
  assign M_SC_W_req[0] = m28_w_node_M_SC_REQ;
  assign M_SC_W_send[0] = m28_w_node_M_SC_SEND;
  assign S_SC_AR_1_INFO = S_SC_AR_info[0];
  assign S_SC_AR_1_PAYLD = S_SC_AR_payld[181:0];
  assign S_SC_AR_1_REQ = S_SC_AR_req[0];
  assign S_SC_AR_1_SEND = S_SC_AR_send[0];
  assign S_SC_AR_recv[0] = S_SC_AR_1_RECV;
  assign S_SC_AW_1_INFO = S_SC_AW_info[0];
  assign S_SC_AW_1_PAYLD = S_SC_AW_payld[181:0];
  assign S_SC_AW_1_REQ = S_SC_AW_req[0];
  assign S_SC_AW_1_SEND = S_SC_AW_send[0];
  assign S_SC_AW_recv[0] = S_SC_AW_1_RECV;
  assign S_SC_B_1_INFO = S_SC_B_info[0];
  assign S_SC_B_1_PAYLD = S_SC_B_payld[8:0];
  assign S_SC_B_1_REQ = S_SC_B_req[0];
  assign S_SC_B_1_SEND = S_SC_B_send[0];
  assign S_SC_B_recv[0] = S_SC_B_1_RECV;
  assign S_SC_R_1_INFO = S_SC_R_info[0];
  assign S_SC_R_1_PAYLD = S_SC_R_payld[54:0];
  assign S_SC_R_1_REQ = S_SC_R_req[0];
  assign S_SC_R_1_SEND = S_SC_R_send[0];
  assign S_SC_R_recv[0] = S_SC_R_1_RECV;
  assign S_SC_W_1_INFO = S_SC_W_info[0];
  assign S_SC_W_1_PAYLD = S_SC_W_payld[68:0];
  assign S_SC_W_1_REQ = S_SC_W_req[0];
  assign S_SC_W_1_SEND = S_SC_W_send[0];
  assign S_SC_W_recv[0] = S_SC_W_1_RECV;
  assign m28_ar_node_M_SC_RECV = M_SC_AR_recv[0];
  assign m28_aw_node_M_SC_RECV = M_SC_AW_recv[0];
  assign m28_b_node_M_SC_RECV = M_SC_B_recv[0];
  assign m28_r_node_M_SC_RECV = M_SC_R_recv[0];
  assign m28_w_node_M_SC_RECV = M_SC_W_recv[0];
  assign m_axi_aclk_1 = m_axi_aclk;
  assign m_axi_aresetn_1 = m_axi_aresetn;
  assign s_axi_aclk_1 = s_axi_aclk;
  assign s_axi_aresetn_1 = s_axi_aresetn;
  bd_afc3_m28arn_0 m28_ar_node
       (.m_sc_aclk(m_axi_aclk_1),
        .m_sc_aresetn(m_axi_aresetn_1),
        .m_sc_info(m28_ar_node_M_SC_INFO),
        .m_sc_payld(m28_ar_node_M_SC_PAYLD),
        .m_sc_recv(m28_ar_node_M_SC_RECV),
        .m_sc_req(m28_ar_node_M_SC_REQ),
        .m_sc_send(m28_ar_node_M_SC_SEND),
        .s_sc_aclk(s_axi_aclk_1),
        .s_sc_aresetn(s_axi_aresetn_1),
        .s_sc_info(S_SC_AR_1_INFO),
        .s_sc_payld(S_SC_AR_1_PAYLD),
        .s_sc_recv(S_SC_AR_1_RECV),
        .s_sc_req(S_SC_AR_1_REQ),
        .s_sc_send(S_SC_AR_1_SEND));
  bd_afc3_m28awn_0 m28_aw_node
       (.m_sc_aclk(m_axi_aclk_1),
        .m_sc_aresetn(m_axi_aresetn_1),
        .m_sc_info(m28_aw_node_M_SC_INFO),
        .m_sc_payld(m28_aw_node_M_SC_PAYLD),
        .m_sc_recv(m28_aw_node_M_SC_RECV),
        .m_sc_req(m28_aw_node_M_SC_REQ),
        .m_sc_send(m28_aw_node_M_SC_SEND),
        .s_sc_aclk(s_axi_aclk_1),
        .s_sc_aresetn(s_axi_aresetn_1),
        .s_sc_info(S_SC_AW_1_INFO),
        .s_sc_payld(S_SC_AW_1_PAYLD),
        .s_sc_recv(S_SC_AW_1_RECV),
        .s_sc_req(S_SC_AW_1_REQ),
        .s_sc_send(S_SC_AW_1_SEND));
  bd_afc3_m28bn_0 m28_b_node
       (.m_sc_aclk(s_axi_aclk_1),
        .m_sc_aresetn(s_axi_aresetn_1),
        .m_sc_info(m28_b_node_M_SC_INFO),
        .m_sc_payld(m28_b_node_M_SC_PAYLD),
        .m_sc_recv(m28_b_node_M_SC_RECV),
        .m_sc_req(m28_b_node_M_SC_REQ),
        .m_sc_send(m28_b_node_M_SC_SEND),
        .s_sc_aclk(m_axi_aclk_1),
        .s_sc_aresetn(m_axi_aresetn_1),
        .s_sc_info(S_SC_B_1_INFO),
        .s_sc_payld(S_SC_B_1_PAYLD),
        .s_sc_recv(S_SC_B_1_RECV),
        .s_sc_req(S_SC_B_1_REQ),
        .s_sc_send(S_SC_B_1_SEND));
  bd_afc3_m28rn_0 m28_r_node
       (.m_sc_aclk(s_axi_aclk_1),
        .m_sc_aresetn(s_axi_aresetn_1),
        .m_sc_info(m28_r_node_M_SC_INFO),
        .m_sc_payld(m28_r_node_M_SC_PAYLD),
        .m_sc_recv(m28_r_node_M_SC_RECV),
        .m_sc_req(m28_r_node_M_SC_REQ),
        .m_sc_send(m28_r_node_M_SC_SEND),
        .s_sc_aclk(m_axi_aclk_1),
        .s_sc_aresetn(m_axi_aresetn_1),
        .s_sc_info(S_SC_R_1_INFO),
        .s_sc_payld(S_SC_R_1_PAYLD),
        .s_sc_recv(S_SC_R_1_RECV),
        .s_sc_req(S_SC_R_1_REQ),
        .s_sc_send(S_SC_R_1_SEND));
  bd_afc3_m28wn_0 m28_w_node
       (.m_sc_aclk(m_axi_aclk_1),
        .m_sc_aresetn(m_axi_aresetn_1),
        .m_sc_info(m28_w_node_M_SC_INFO),
        .m_sc_payld(m28_w_node_M_SC_PAYLD),
        .m_sc_recv(m28_w_node_M_SC_RECV),
        .m_sc_req(m28_w_node_M_SC_REQ),
        .m_sc_send(m28_w_node_M_SC_SEND),
        .s_sc_aclk(s_axi_aclk_1),
        .s_sc_aresetn(s_axi_aresetn_1),
        .s_sc_info(S_SC_W_1_INFO),
        .s_sc_payld(S_SC_W_1_PAYLD),
        .s_sc_recv(S_SC_W_1_RECV),
        .s_sc_req(S_SC_W_1_REQ),
        .s_sc_send(S_SC_W_1_SEND));
endmodule

module m29_exit_pipeline_imp_1CBCUMM
   (aclk,
    aresetn,
    m_axi_araddr,
    m_axi_arprot,
    m_axi_arready,
    m_axi_arvalid,
    m_axi_awaddr,
    m_axi_awprot,
    m_axi_awready,
    m_axi_awvalid,
    m_axi_bready,
    m_axi_bresp,
    m_axi_bvalid,
    m_axi_rdata,
    m_axi_rready,
    m_axi_rresp,
    m_axi_rvalid,
    m_axi_wdata,
    m_axi_wready,
    m_axi_wstrb,
    m_axi_wvalid,
    s_axi_araddr,
    s_axi_arcache,
    s_axi_arid,
    s_axi_arlen,
    s_axi_arlock,
    s_axi_arprot,
    s_axi_arqos,
    s_axi_arready,
    s_axi_aruser,
    s_axi_arvalid,
    s_axi_awaddr,
    s_axi_awcache,
    s_axi_awid,
    s_axi_awlen,
    s_axi_awlock,
    s_axi_awprot,
    s_axi_awqos,
    s_axi_awready,
    s_axi_awuser,
    s_axi_awvalid,
    s_axi_bid,
    s_axi_bready,
    s_axi_bresp,
    s_axi_buser,
    s_axi_bvalid,
    s_axi_rdata,
    s_axi_rid,
    s_axi_rlast,
    s_axi_rready,
    s_axi_rresp,
    s_axi_ruser,
    s_axi_rvalid,
    s_axi_wdata,
    s_axi_wlast,
    s_axi_wready,
    s_axi_wstrb,
    s_axi_wuser,
    s_axi_wvalid);
  input aclk;
  input aresetn;
  output [9:0]m_axi_araddr;
  output [2:0]m_axi_arprot;
  input m_axi_arready;
  output m_axi_arvalid;
  output [9:0]m_axi_awaddr;
  output [2:0]m_axi_awprot;
  input m_axi_awready;
  output m_axi_awvalid;
  output m_axi_bready;
  input [1:0]m_axi_bresp;
  input m_axi_bvalid;
  input [31:0]m_axi_rdata;
  output m_axi_rready;
  input [1:0]m_axi_rresp;
  input m_axi_rvalid;
  output [31:0]m_axi_wdata;
  input m_axi_wready;
  output [3:0]m_axi_wstrb;
  output m_axi_wvalid;
  input [9:0]s_axi_araddr;
  input [3:0]s_axi_arcache;
  input [2:0]s_axi_arid;
  input [7:0]s_axi_arlen;
  input [0:0]s_axi_arlock;
  input [2:0]s_axi_arprot;
  input [3:0]s_axi_arqos;
  output s_axi_arready;
  input [1023:0]s_axi_aruser;
  input s_axi_arvalid;
  input [9:0]s_axi_awaddr;
  input [3:0]s_axi_awcache;
  input [2:0]s_axi_awid;
  input [7:0]s_axi_awlen;
  input [0:0]s_axi_awlock;
  input [2:0]s_axi_awprot;
  input [3:0]s_axi_awqos;
  output s_axi_awready;
  input [1023:0]s_axi_awuser;
  input s_axi_awvalid;
  output [2:0]s_axi_bid;
  input s_axi_bready;
  output [1:0]s_axi_bresp;
  output [1023:0]s_axi_buser;
  output s_axi_bvalid;
  output [31:0]s_axi_rdata;
  output [2:0]s_axi_rid;
  output s_axi_rlast;
  input s_axi_rready;
  output [1:0]s_axi_rresp;
  output [1023:0]s_axi_ruser;
  output s_axi_rvalid;
  input [31:0]s_axi_wdata;
  input s_axi_wlast;
  output s_axi_wready;
  input [3:0]s_axi_wstrb;
  input [1023:0]s_axi_wuser;
  input s_axi_wvalid;

  wire aclk_1;
  wire aresetn_1;
  wire [9:0]m29_exit_M_AXI_ARADDR;
  wire [2:0]m29_exit_M_AXI_ARPROT;
  wire m29_exit_M_AXI_ARREADY;
  wire m29_exit_M_AXI_ARVALID;
  wire [9:0]m29_exit_M_AXI_AWADDR;
  wire [2:0]m29_exit_M_AXI_AWPROT;
  wire m29_exit_M_AXI_AWREADY;
  wire m29_exit_M_AXI_AWVALID;
  wire m29_exit_M_AXI_BREADY;
  wire [1:0]m29_exit_M_AXI_BRESP;
  wire m29_exit_M_AXI_BVALID;
  wire [31:0]m29_exit_M_AXI_RDATA;
  wire m29_exit_M_AXI_RREADY;
  wire [1:0]m29_exit_M_AXI_RRESP;
  wire m29_exit_M_AXI_RVALID;
  wire [31:0]m29_exit_M_AXI_WDATA;
  wire m29_exit_M_AXI_WREADY;
  wire [3:0]m29_exit_M_AXI_WSTRB;
  wire m29_exit_M_AXI_WVALID;
  wire [9:0]s_axi_1_ARADDR;
  wire [3:0]s_axi_1_ARCACHE;
  wire [2:0]s_axi_1_ARID;
  wire [7:0]s_axi_1_ARLEN;
  wire [0:0]s_axi_1_ARLOCK;
  wire [2:0]s_axi_1_ARPROT;
  wire [3:0]s_axi_1_ARQOS;
  wire s_axi_1_ARREADY;
  wire [1023:0]s_axi_1_ARUSER;
  wire s_axi_1_ARVALID;
  wire [9:0]s_axi_1_AWADDR;
  wire [3:0]s_axi_1_AWCACHE;
  wire [2:0]s_axi_1_AWID;
  wire [7:0]s_axi_1_AWLEN;
  wire [0:0]s_axi_1_AWLOCK;
  wire [2:0]s_axi_1_AWPROT;
  wire [3:0]s_axi_1_AWQOS;
  wire s_axi_1_AWREADY;
  wire [1023:0]s_axi_1_AWUSER;
  wire s_axi_1_AWVALID;
  wire [2:0]s_axi_1_BID;
  wire s_axi_1_BREADY;
  wire [1:0]s_axi_1_BRESP;
  wire [1023:0]s_axi_1_BUSER;
  wire s_axi_1_BVALID;
  wire [31:0]s_axi_1_RDATA;
  wire [2:0]s_axi_1_RID;
  wire s_axi_1_RLAST;
  wire s_axi_1_RREADY;
  wire [1:0]s_axi_1_RRESP;
  wire [1023:0]s_axi_1_RUSER;
  wire s_axi_1_RVALID;
  wire [31:0]s_axi_1_WDATA;
  wire s_axi_1_WLAST;
  wire s_axi_1_WREADY;
  wire [3:0]s_axi_1_WSTRB;
  wire [1023:0]s_axi_1_WUSER;
  wire s_axi_1_WVALID;

  assign aclk_1 = aclk;
  assign aresetn_1 = aresetn;
  assign m29_exit_M_AXI_ARREADY = m_axi_arready;
  assign m29_exit_M_AXI_AWREADY = m_axi_awready;
  assign m29_exit_M_AXI_BRESP = m_axi_bresp[1:0];
  assign m29_exit_M_AXI_BVALID = m_axi_bvalid;
  assign m29_exit_M_AXI_RDATA = m_axi_rdata[31:0];
  assign m29_exit_M_AXI_RRESP = m_axi_rresp[1:0];
  assign m29_exit_M_AXI_RVALID = m_axi_rvalid;
  assign m29_exit_M_AXI_WREADY = m_axi_wready;
  assign m_axi_araddr[9:0] = m29_exit_M_AXI_ARADDR;
  assign m_axi_arprot[2:0] = m29_exit_M_AXI_ARPROT;
  assign m_axi_arvalid = m29_exit_M_AXI_ARVALID;
  assign m_axi_awaddr[9:0] = m29_exit_M_AXI_AWADDR;
  assign m_axi_awprot[2:0] = m29_exit_M_AXI_AWPROT;
  assign m_axi_awvalid = m29_exit_M_AXI_AWVALID;
  assign m_axi_bready = m29_exit_M_AXI_BREADY;
  assign m_axi_rready = m29_exit_M_AXI_RREADY;
  assign m_axi_wdata[31:0] = m29_exit_M_AXI_WDATA;
  assign m_axi_wstrb[3:0] = m29_exit_M_AXI_WSTRB;
  assign m_axi_wvalid = m29_exit_M_AXI_WVALID;
  assign s_axi_1_ARADDR = s_axi_araddr[9:0];
  assign s_axi_1_ARCACHE = s_axi_arcache[3:0];
  assign s_axi_1_ARID = s_axi_arid[2:0];
  assign s_axi_1_ARLEN = s_axi_arlen[7:0];
  assign s_axi_1_ARLOCK = s_axi_arlock[0];
  assign s_axi_1_ARPROT = s_axi_arprot[2:0];
  assign s_axi_1_ARQOS = s_axi_arqos[3:0];
  assign s_axi_1_ARUSER = s_axi_aruser[1023:0];
  assign s_axi_1_ARVALID = s_axi_arvalid;
  assign s_axi_1_AWADDR = s_axi_awaddr[9:0];
  assign s_axi_1_AWCACHE = s_axi_awcache[3:0];
  assign s_axi_1_AWID = s_axi_awid[2:0];
  assign s_axi_1_AWLEN = s_axi_awlen[7:0];
  assign s_axi_1_AWLOCK = s_axi_awlock[0];
  assign s_axi_1_AWPROT = s_axi_awprot[2:0];
  assign s_axi_1_AWQOS = s_axi_awqos[3:0];
  assign s_axi_1_AWUSER = s_axi_awuser[1023:0];
  assign s_axi_1_AWVALID = s_axi_awvalid;
  assign s_axi_1_BREADY = s_axi_bready;
  assign s_axi_1_RREADY = s_axi_rready;
  assign s_axi_1_WDATA = s_axi_wdata[31:0];
  assign s_axi_1_WLAST = s_axi_wlast;
  assign s_axi_1_WSTRB = s_axi_wstrb[3:0];
  assign s_axi_1_WUSER = s_axi_wuser[1023:0];
  assign s_axi_1_WVALID = s_axi_wvalid;
  assign s_axi_arready = s_axi_1_ARREADY;
  assign s_axi_awready = s_axi_1_AWREADY;
  assign s_axi_bid[2:0] = s_axi_1_BID;
  assign s_axi_bresp[1:0] = s_axi_1_BRESP;
  assign s_axi_buser[1023:0] = s_axi_1_BUSER;
  assign s_axi_bvalid = s_axi_1_BVALID;
  assign s_axi_rdata[31:0] = s_axi_1_RDATA;
  assign s_axi_rid[2:0] = s_axi_1_RID;
  assign s_axi_rlast = s_axi_1_RLAST;
  assign s_axi_rresp[1:0] = s_axi_1_RRESP;
  assign s_axi_ruser[1023:0] = s_axi_1_RUSER;
  assign s_axi_rvalid = s_axi_1_RVALID;
  assign s_axi_wready = s_axi_1_WREADY;
  bd_afc3_m29e_0 m29_exit
       (.aclk(aclk_1),
        .aresetn(aresetn_1),
        .m_axi_araddr(m29_exit_M_AXI_ARADDR),
        .m_axi_arprot(m29_exit_M_AXI_ARPROT),
        .m_axi_arready(m29_exit_M_AXI_ARREADY),
        .m_axi_arvalid(m29_exit_M_AXI_ARVALID),
        .m_axi_awaddr(m29_exit_M_AXI_AWADDR),
        .m_axi_awprot(m29_exit_M_AXI_AWPROT),
        .m_axi_awready(m29_exit_M_AXI_AWREADY),
        .m_axi_awvalid(m29_exit_M_AXI_AWVALID),
        .m_axi_bready(m29_exit_M_AXI_BREADY),
        .m_axi_bresp(m29_exit_M_AXI_BRESP),
        .m_axi_bvalid(m29_exit_M_AXI_BVALID),
        .m_axi_rdata(m29_exit_M_AXI_RDATA),
        .m_axi_rready(m29_exit_M_AXI_RREADY),
        .m_axi_rresp(m29_exit_M_AXI_RRESP),
        .m_axi_rvalid(m29_exit_M_AXI_RVALID),
        .m_axi_wdata(m29_exit_M_AXI_WDATA),
        .m_axi_wready(m29_exit_M_AXI_WREADY),
        .m_axi_wstrb(m29_exit_M_AXI_WSTRB),
        .m_axi_wvalid(m29_exit_M_AXI_WVALID),
        .s_axi_araddr(s_axi_1_ARADDR),
        .s_axi_arcache(s_axi_1_ARCACHE),
        .s_axi_arid(s_axi_1_ARID),
        .s_axi_arlen(s_axi_1_ARLEN),
        .s_axi_arlock(s_axi_1_ARLOCK),
        .s_axi_arprot(s_axi_1_ARPROT),
        .s_axi_arqos(s_axi_1_ARQOS),
        .s_axi_arready(s_axi_1_ARREADY),
        .s_axi_aruser(s_axi_1_ARUSER),
        .s_axi_arvalid(s_axi_1_ARVALID),
        .s_axi_awaddr(s_axi_1_AWADDR),
        .s_axi_awcache(s_axi_1_AWCACHE),
        .s_axi_awid(s_axi_1_AWID),
        .s_axi_awlen(s_axi_1_AWLEN),
        .s_axi_awlock(s_axi_1_AWLOCK),
        .s_axi_awprot(s_axi_1_AWPROT),
        .s_axi_awqos(s_axi_1_AWQOS),
        .s_axi_awready(s_axi_1_AWREADY),
        .s_axi_awuser(s_axi_1_AWUSER),
        .s_axi_awvalid(s_axi_1_AWVALID),
        .s_axi_bid(s_axi_1_BID),
        .s_axi_bready(s_axi_1_BREADY),
        .s_axi_bresp(s_axi_1_BRESP),
        .s_axi_buser(s_axi_1_BUSER),
        .s_axi_bvalid(s_axi_1_BVALID),
        .s_axi_rdata(s_axi_1_RDATA),
        .s_axi_rid(s_axi_1_RID),
        .s_axi_rlast(s_axi_1_RLAST),
        .s_axi_rready(s_axi_1_RREADY),
        .s_axi_rresp(s_axi_1_RRESP),
        .s_axi_ruser(s_axi_1_RUSER),
        .s_axi_rvalid(s_axi_1_RVALID),
        .s_axi_wdata(s_axi_1_WDATA),
        .s_axi_wlast(s_axi_1_WLAST),
        .s_axi_wready(s_axi_1_WREADY),
        .s_axi_wstrb(s_axi_1_WSTRB),
        .s_axi_wuser(s_axi_1_WUSER),
        .s_axi_wvalid(s_axi_1_WVALID));
endmodule

module m29_nodes_imp_1FY4Q8Q
   (M_SC_AR_info,
    M_SC_AR_payld,
    M_SC_AR_recv,
    M_SC_AR_req,
    M_SC_AR_send,
    M_SC_AW_info,
    M_SC_AW_payld,
    M_SC_AW_recv,
    M_SC_AW_req,
    M_SC_AW_send,
    M_SC_B_info,
    M_SC_B_payld,
    M_SC_B_recv,
    M_SC_B_req,
    M_SC_B_send,
    M_SC_R_info,
    M_SC_R_payld,
    M_SC_R_recv,
    M_SC_R_req,
    M_SC_R_send,
    M_SC_W_info,
    M_SC_W_payld,
    M_SC_W_recv,
    M_SC_W_req,
    M_SC_W_send,
    S_SC_AR_info,
    S_SC_AR_payld,
    S_SC_AR_recv,
    S_SC_AR_req,
    S_SC_AR_send,
    S_SC_AW_info,
    S_SC_AW_payld,
    S_SC_AW_recv,
    S_SC_AW_req,
    S_SC_AW_send,
    S_SC_B_info,
    S_SC_B_payld,
    S_SC_B_recv,
    S_SC_B_req,
    S_SC_B_send,
    S_SC_R_info,
    S_SC_R_payld,
    S_SC_R_recv,
    S_SC_R_req,
    S_SC_R_send,
    S_SC_W_info,
    S_SC_W_payld,
    S_SC_W_recv,
    S_SC_W_req,
    S_SC_W_send,
    m_axi_aclk,
    m_axi_aresetn,
    s_axi_aclk,
    s_axi_aresetn);
  output [0:0]M_SC_AR_info;
  output [181:0]M_SC_AR_payld;
  input [0:0]M_SC_AR_recv;
  output [0:0]M_SC_AR_req;
  output [0:0]M_SC_AR_send;
  output [0:0]M_SC_AW_info;
  output [181:0]M_SC_AW_payld;
  input [0:0]M_SC_AW_recv;
  output [0:0]M_SC_AW_req;
  output [0:0]M_SC_AW_send;
  output [0:0]M_SC_B_info;
  output [8:0]M_SC_B_payld;
  input [0:0]M_SC_B_recv;
  output [0:0]M_SC_B_req;
  output [0:0]M_SC_B_send;
  output [0:0]M_SC_R_info;
  output [54:0]M_SC_R_payld;
  input [0:0]M_SC_R_recv;
  output [0:0]M_SC_R_req;
  output [0:0]M_SC_R_send;
  output [0:0]M_SC_W_info;
  output [68:0]M_SC_W_payld;
  input [0:0]M_SC_W_recv;
  output [0:0]M_SC_W_req;
  output [0:0]M_SC_W_send;
  input [0:0]S_SC_AR_info;
  input [181:0]S_SC_AR_payld;
  output [0:0]S_SC_AR_recv;
  input [0:0]S_SC_AR_req;
  input [0:0]S_SC_AR_send;
  input [0:0]S_SC_AW_info;
  input [181:0]S_SC_AW_payld;
  output [0:0]S_SC_AW_recv;
  input [0:0]S_SC_AW_req;
  input [0:0]S_SC_AW_send;
  input [0:0]S_SC_B_info;
  input [8:0]S_SC_B_payld;
  output [0:0]S_SC_B_recv;
  input [0:0]S_SC_B_req;
  input [0:0]S_SC_B_send;
  input [0:0]S_SC_R_info;
  input [54:0]S_SC_R_payld;
  output [0:0]S_SC_R_recv;
  input [0:0]S_SC_R_req;
  input [0:0]S_SC_R_send;
  input [0:0]S_SC_W_info;
  input [68:0]S_SC_W_payld;
  output [0:0]S_SC_W_recv;
  input [0:0]S_SC_W_req;
  input [0:0]S_SC_W_send;
  input m_axi_aclk;
  input m_axi_aresetn;
  input s_axi_aclk;
  input s_axi_aresetn;

  wire [0:0]S_SC_AR_1_INFO;
  wire [181:0]S_SC_AR_1_PAYLD;
  wire [0:0]S_SC_AR_1_RECV;
  wire [0:0]S_SC_AR_1_REQ;
  wire [0:0]S_SC_AR_1_SEND;
  wire [0:0]S_SC_AW_1_INFO;
  wire [181:0]S_SC_AW_1_PAYLD;
  wire [0:0]S_SC_AW_1_RECV;
  wire [0:0]S_SC_AW_1_REQ;
  wire [0:0]S_SC_AW_1_SEND;
  wire [0:0]S_SC_B_1_INFO;
  wire [8:0]S_SC_B_1_PAYLD;
  wire [0:0]S_SC_B_1_RECV;
  wire [0:0]S_SC_B_1_REQ;
  wire [0:0]S_SC_B_1_SEND;
  wire [0:0]S_SC_R_1_INFO;
  wire [54:0]S_SC_R_1_PAYLD;
  wire [0:0]S_SC_R_1_RECV;
  wire [0:0]S_SC_R_1_REQ;
  wire [0:0]S_SC_R_1_SEND;
  wire [0:0]S_SC_W_1_INFO;
  wire [68:0]S_SC_W_1_PAYLD;
  wire [0:0]S_SC_W_1_RECV;
  wire [0:0]S_SC_W_1_REQ;
  wire [0:0]S_SC_W_1_SEND;
  wire [0:0]m29_ar_node_M_SC_INFO;
  wire [181:0]m29_ar_node_M_SC_PAYLD;
  wire [0:0]m29_ar_node_M_SC_RECV;
  wire [0:0]m29_ar_node_M_SC_REQ;
  wire [0:0]m29_ar_node_M_SC_SEND;
  wire [0:0]m29_aw_node_M_SC_INFO;
  wire [181:0]m29_aw_node_M_SC_PAYLD;
  wire [0:0]m29_aw_node_M_SC_RECV;
  wire [0:0]m29_aw_node_M_SC_REQ;
  wire [0:0]m29_aw_node_M_SC_SEND;
  wire [0:0]m29_b_node_M_SC_INFO;
  wire [8:0]m29_b_node_M_SC_PAYLD;
  wire [0:0]m29_b_node_M_SC_RECV;
  wire [0:0]m29_b_node_M_SC_REQ;
  wire [0:0]m29_b_node_M_SC_SEND;
  wire [0:0]m29_r_node_M_SC_INFO;
  wire [54:0]m29_r_node_M_SC_PAYLD;
  wire [0:0]m29_r_node_M_SC_RECV;
  wire [0:0]m29_r_node_M_SC_REQ;
  wire [0:0]m29_r_node_M_SC_SEND;
  wire [0:0]m29_w_node_M_SC_INFO;
  wire [68:0]m29_w_node_M_SC_PAYLD;
  wire [0:0]m29_w_node_M_SC_RECV;
  wire [0:0]m29_w_node_M_SC_REQ;
  wire [0:0]m29_w_node_M_SC_SEND;
  wire m_axi_aclk_1;
  wire m_axi_aresetn_1;
  wire s_axi_aclk_1;
  wire s_axi_aresetn_1;

  assign M_SC_AR_info[0] = m29_ar_node_M_SC_INFO;
  assign M_SC_AR_payld[181:0] = m29_ar_node_M_SC_PAYLD;
  assign M_SC_AR_req[0] = m29_ar_node_M_SC_REQ;
  assign M_SC_AR_send[0] = m29_ar_node_M_SC_SEND;
  assign M_SC_AW_info[0] = m29_aw_node_M_SC_INFO;
  assign M_SC_AW_payld[181:0] = m29_aw_node_M_SC_PAYLD;
  assign M_SC_AW_req[0] = m29_aw_node_M_SC_REQ;
  assign M_SC_AW_send[0] = m29_aw_node_M_SC_SEND;
  assign M_SC_B_info[0] = m29_b_node_M_SC_INFO;
  assign M_SC_B_payld[8:0] = m29_b_node_M_SC_PAYLD;
  assign M_SC_B_req[0] = m29_b_node_M_SC_REQ;
  assign M_SC_B_send[0] = m29_b_node_M_SC_SEND;
  assign M_SC_R_info[0] = m29_r_node_M_SC_INFO;
  assign M_SC_R_payld[54:0] = m29_r_node_M_SC_PAYLD;
  assign M_SC_R_req[0] = m29_r_node_M_SC_REQ;
  assign M_SC_R_send[0] = m29_r_node_M_SC_SEND;
  assign M_SC_W_info[0] = m29_w_node_M_SC_INFO;
  assign M_SC_W_payld[68:0] = m29_w_node_M_SC_PAYLD;
  assign M_SC_W_req[0] = m29_w_node_M_SC_REQ;
  assign M_SC_W_send[0] = m29_w_node_M_SC_SEND;
  assign S_SC_AR_1_INFO = S_SC_AR_info[0];
  assign S_SC_AR_1_PAYLD = S_SC_AR_payld[181:0];
  assign S_SC_AR_1_REQ = S_SC_AR_req[0];
  assign S_SC_AR_1_SEND = S_SC_AR_send[0];
  assign S_SC_AR_recv[0] = S_SC_AR_1_RECV;
  assign S_SC_AW_1_INFO = S_SC_AW_info[0];
  assign S_SC_AW_1_PAYLD = S_SC_AW_payld[181:0];
  assign S_SC_AW_1_REQ = S_SC_AW_req[0];
  assign S_SC_AW_1_SEND = S_SC_AW_send[0];
  assign S_SC_AW_recv[0] = S_SC_AW_1_RECV;
  assign S_SC_B_1_INFO = S_SC_B_info[0];
  assign S_SC_B_1_PAYLD = S_SC_B_payld[8:0];
  assign S_SC_B_1_REQ = S_SC_B_req[0];
  assign S_SC_B_1_SEND = S_SC_B_send[0];
  assign S_SC_B_recv[0] = S_SC_B_1_RECV;
  assign S_SC_R_1_INFO = S_SC_R_info[0];
  assign S_SC_R_1_PAYLD = S_SC_R_payld[54:0];
  assign S_SC_R_1_REQ = S_SC_R_req[0];
  assign S_SC_R_1_SEND = S_SC_R_send[0];
  assign S_SC_R_recv[0] = S_SC_R_1_RECV;
  assign S_SC_W_1_INFO = S_SC_W_info[0];
  assign S_SC_W_1_PAYLD = S_SC_W_payld[68:0];
  assign S_SC_W_1_REQ = S_SC_W_req[0];
  assign S_SC_W_1_SEND = S_SC_W_send[0];
  assign S_SC_W_recv[0] = S_SC_W_1_RECV;
  assign m29_ar_node_M_SC_RECV = M_SC_AR_recv[0];
  assign m29_aw_node_M_SC_RECV = M_SC_AW_recv[0];
  assign m29_b_node_M_SC_RECV = M_SC_B_recv[0];
  assign m29_r_node_M_SC_RECV = M_SC_R_recv[0];
  assign m29_w_node_M_SC_RECV = M_SC_W_recv[0];
  assign m_axi_aclk_1 = m_axi_aclk;
  assign m_axi_aresetn_1 = m_axi_aresetn;
  assign s_axi_aclk_1 = s_axi_aclk;
  assign s_axi_aresetn_1 = s_axi_aresetn;
  bd_afc3_m29arn_0 m29_ar_node
       (.m_sc_aclk(m_axi_aclk_1),
        .m_sc_aresetn(m_axi_aresetn_1),
        .m_sc_info(m29_ar_node_M_SC_INFO),
        .m_sc_payld(m29_ar_node_M_SC_PAYLD),
        .m_sc_recv(m29_ar_node_M_SC_RECV),
        .m_sc_req(m29_ar_node_M_SC_REQ),
        .m_sc_send(m29_ar_node_M_SC_SEND),
        .s_sc_aclk(s_axi_aclk_1),
        .s_sc_aresetn(s_axi_aresetn_1),
        .s_sc_info(S_SC_AR_1_INFO),
        .s_sc_payld(S_SC_AR_1_PAYLD),
        .s_sc_recv(S_SC_AR_1_RECV),
        .s_sc_req(S_SC_AR_1_REQ),
        .s_sc_send(S_SC_AR_1_SEND));
  bd_afc3_m29awn_0 m29_aw_node
       (.m_sc_aclk(m_axi_aclk_1),
        .m_sc_aresetn(m_axi_aresetn_1),
        .m_sc_info(m29_aw_node_M_SC_INFO),
        .m_sc_payld(m29_aw_node_M_SC_PAYLD),
        .m_sc_recv(m29_aw_node_M_SC_RECV),
        .m_sc_req(m29_aw_node_M_SC_REQ),
        .m_sc_send(m29_aw_node_M_SC_SEND),
        .s_sc_aclk(s_axi_aclk_1),
        .s_sc_aresetn(s_axi_aresetn_1),
        .s_sc_info(S_SC_AW_1_INFO),
        .s_sc_payld(S_SC_AW_1_PAYLD),
        .s_sc_recv(S_SC_AW_1_RECV),
        .s_sc_req(S_SC_AW_1_REQ),
        .s_sc_send(S_SC_AW_1_SEND));
  bd_afc3_m29bn_0 m29_b_node
       (.m_sc_aclk(s_axi_aclk_1),
        .m_sc_aresetn(s_axi_aresetn_1),
        .m_sc_info(m29_b_node_M_SC_INFO),
        .m_sc_payld(m29_b_node_M_SC_PAYLD),
        .m_sc_recv(m29_b_node_M_SC_RECV),
        .m_sc_req(m29_b_node_M_SC_REQ),
        .m_sc_send(m29_b_node_M_SC_SEND),
        .s_sc_aclk(m_axi_aclk_1),
        .s_sc_aresetn(m_axi_aresetn_1),
        .s_sc_info(S_SC_B_1_INFO),
        .s_sc_payld(S_SC_B_1_PAYLD),
        .s_sc_recv(S_SC_B_1_RECV),
        .s_sc_req(S_SC_B_1_REQ),
        .s_sc_send(S_SC_B_1_SEND));
  bd_afc3_m29rn_0 m29_r_node
       (.m_sc_aclk(s_axi_aclk_1),
        .m_sc_aresetn(s_axi_aresetn_1),
        .m_sc_info(m29_r_node_M_SC_INFO),
        .m_sc_payld(m29_r_node_M_SC_PAYLD),
        .m_sc_recv(m29_r_node_M_SC_RECV),
        .m_sc_req(m29_r_node_M_SC_REQ),
        .m_sc_send(m29_r_node_M_SC_SEND),
        .s_sc_aclk(m_axi_aclk_1),
        .s_sc_aresetn(m_axi_aresetn_1),
        .s_sc_info(S_SC_R_1_INFO),
        .s_sc_payld(S_SC_R_1_PAYLD),
        .s_sc_recv(S_SC_R_1_RECV),
        .s_sc_req(S_SC_R_1_REQ),
        .s_sc_send(S_SC_R_1_SEND));
  bd_afc3_m29wn_0 m29_w_node
       (.m_sc_aclk(m_axi_aclk_1),
        .m_sc_aresetn(m_axi_aresetn_1),
        .m_sc_info(m29_w_node_M_SC_INFO),
        .m_sc_payld(m29_w_node_M_SC_PAYLD),
        .m_sc_recv(m29_w_node_M_SC_RECV),
        .m_sc_req(m29_w_node_M_SC_REQ),
        .m_sc_send(m29_w_node_M_SC_SEND),
        .s_sc_aclk(s_axi_aclk_1),
        .s_sc_aresetn(s_axi_aresetn_1),
        .s_sc_info(S_SC_W_1_INFO),
        .s_sc_payld(S_SC_W_1_PAYLD),
        .s_sc_recv(S_SC_W_1_RECV),
        .s_sc_req(S_SC_W_1_REQ),
        .s_sc_send(S_SC_W_1_SEND));
endmodule

module m30_exit_pipeline_imp_172HSM2
   (aclk,
    aresetn,
    m_axi_araddr,
    m_axi_arprot,
    m_axi_arready,
    m_axi_arvalid,
    m_axi_awaddr,
    m_axi_awprot,
    m_axi_awready,
    m_axi_awvalid,
    m_axi_bready,
    m_axi_bresp,
    m_axi_bvalid,
    m_axi_rdata,
    m_axi_rready,
    m_axi_rresp,
    m_axi_rvalid,
    m_axi_wdata,
    m_axi_wready,
    m_axi_wstrb,
    m_axi_wvalid,
    s_axi_araddr,
    s_axi_arcache,
    s_axi_arid,
    s_axi_arlen,
    s_axi_arlock,
    s_axi_arprot,
    s_axi_arqos,
    s_axi_arready,
    s_axi_aruser,
    s_axi_arvalid,
    s_axi_awaddr,
    s_axi_awcache,
    s_axi_awid,
    s_axi_awlen,
    s_axi_awlock,
    s_axi_awprot,
    s_axi_awqos,
    s_axi_awready,
    s_axi_awuser,
    s_axi_awvalid,
    s_axi_bid,
    s_axi_bready,
    s_axi_bresp,
    s_axi_buser,
    s_axi_bvalid,
    s_axi_rdata,
    s_axi_rid,
    s_axi_rlast,
    s_axi_rready,
    s_axi_rresp,
    s_axi_ruser,
    s_axi_rvalid,
    s_axi_wdata,
    s_axi_wlast,
    s_axi_wready,
    s_axi_wstrb,
    s_axi_wuser,
    s_axi_wvalid);
  input aclk;
  input aresetn;
  output [9:0]m_axi_araddr;
  output [2:0]m_axi_arprot;
  input m_axi_arready;
  output m_axi_arvalid;
  output [9:0]m_axi_awaddr;
  output [2:0]m_axi_awprot;
  input m_axi_awready;
  output m_axi_awvalid;
  output m_axi_bready;
  input [1:0]m_axi_bresp;
  input m_axi_bvalid;
  input [31:0]m_axi_rdata;
  output m_axi_rready;
  input [1:0]m_axi_rresp;
  input m_axi_rvalid;
  output [31:0]m_axi_wdata;
  input m_axi_wready;
  output [3:0]m_axi_wstrb;
  output m_axi_wvalid;
  input [9:0]s_axi_araddr;
  input [3:0]s_axi_arcache;
  input [2:0]s_axi_arid;
  input [7:0]s_axi_arlen;
  input [0:0]s_axi_arlock;
  input [2:0]s_axi_arprot;
  input [3:0]s_axi_arqos;
  output s_axi_arready;
  input [1023:0]s_axi_aruser;
  input s_axi_arvalid;
  input [9:0]s_axi_awaddr;
  input [3:0]s_axi_awcache;
  input [2:0]s_axi_awid;
  input [7:0]s_axi_awlen;
  input [0:0]s_axi_awlock;
  input [2:0]s_axi_awprot;
  input [3:0]s_axi_awqos;
  output s_axi_awready;
  input [1023:0]s_axi_awuser;
  input s_axi_awvalid;
  output [2:0]s_axi_bid;
  input s_axi_bready;
  output [1:0]s_axi_bresp;
  output [1023:0]s_axi_buser;
  output s_axi_bvalid;
  output [31:0]s_axi_rdata;
  output [2:0]s_axi_rid;
  output s_axi_rlast;
  input s_axi_rready;
  output [1:0]s_axi_rresp;
  output [1023:0]s_axi_ruser;
  output s_axi_rvalid;
  input [31:0]s_axi_wdata;
  input s_axi_wlast;
  output s_axi_wready;
  input [3:0]s_axi_wstrb;
  input [1023:0]s_axi_wuser;
  input s_axi_wvalid;

  wire aclk_1;
  wire aresetn_1;
  wire [9:0]m30_exit_M_AXI_ARADDR;
  wire [2:0]m30_exit_M_AXI_ARPROT;
  wire m30_exit_M_AXI_ARREADY;
  wire m30_exit_M_AXI_ARVALID;
  wire [9:0]m30_exit_M_AXI_AWADDR;
  wire [2:0]m30_exit_M_AXI_AWPROT;
  wire m30_exit_M_AXI_AWREADY;
  wire m30_exit_M_AXI_AWVALID;
  wire m30_exit_M_AXI_BREADY;
  wire [1:0]m30_exit_M_AXI_BRESP;
  wire m30_exit_M_AXI_BVALID;
  wire [31:0]m30_exit_M_AXI_RDATA;
  wire m30_exit_M_AXI_RREADY;
  wire [1:0]m30_exit_M_AXI_RRESP;
  wire m30_exit_M_AXI_RVALID;
  wire [31:0]m30_exit_M_AXI_WDATA;
  wire m30_exit_M_AXI_WREADY;
  wire [3:0]m30_exit_M_AXI_WSTRB;
  wire m30_exit_M_AXI_WVALID;
  wire [9:0]s_axi_1_ARADDR;
  wire [3:0]s_axi_1_ARCACHE;
  wire [2:0]s_axi_1_ARID;
  wire [7:0]s_axi_1_ARLEN;
  wire [0:0]s_axi_1_ARLOCK;
  wire [2:0]s_axi_1_ARPROT;
  wire [3:0]s_axi_1_ARQOS;
  wire s_axi_1_ARREADY;
  wire [1023:0]s_axi_1_ARUSER;
  wire s_axi_1_ARVALID;
  wire [9:0]s_axi_1_AWADDR;
  wire [3:0]s_axi_1_AWCACHE;
  wire [2:0]s_axi_1_AWID;
  wire [7:0]s_axi_1_AWLEN;
  wire [0:0]s_axi_1_AWLOCK;
  wire [2:0]s_axi_1_AWPROT;
  wire [3:0]s_axi_1_AWQOS;
  wire s_axi_1_AWREADY;
  wire [1023:0]s_axi_1_AWUSER;
  wire s_axi_1_AWVALID;
  wire [2:0]s_axi_1_BID;
  wire s_axi_1_BREADY;
  wire [1:0]s_axi_1_BRESP;
  wire [1023:0]s_axi_1_BUSER;
  wire s_axi_1_BVALID;
  wire [31:0]s_axi_1_RDATA;
  wire [2:0]s_axi_1_RID;
  wire s_axi_1_RLAST;
  wire s_axi_1_RREADY;
  wire [1:0]s_axi_1_RRESP;
  wire [1023:0]s_axi_1_RUSER;
  wire s_axi_1_RVALID;
  wire [31:0]s_axi_1_WDATA;
  wire s_axi_1_WLAST;
  wire s_axi_1_WREADY;
  wire [3:0]s_axi_1_WSTRB;
  wire [1023:0]s_axi_1_WUSER;
  wire s_axi_1_WVALID;

  assign aclk_1 = aclk;
  assign aresetn_1 = aresetn;
  assign m30_exit_M_AXI_ARREADY = m_axi_arready;
  assign m30_exit_M_AXI_AWREADY = m_axi_awready;
  assign m30_exit_M_AXI_BRESP = m_axi_bresp[1:0];
  assign m30_exit_M_AXI_BVALID = m_axi_bvalid;
  assign m30_exit_M_AXI_RDATA = m_axi_rdata[31:0];
  assign m30_exit_M_AXI_RRESP = m_axi_rresp[1:0];
  assign m30_exit_M_AXI_RVALID = m_axi_rvalid;
  assign m30_exit_M_AXI_WREADY = m_axi_wready;
  assign m_axi_araddr[9:0] = m30_exit_M_AXI_ARADDR;
  assign m_axi_arprot[2:0] = m30_exit_M_AXI_ARPROT;
  assign m_axi_arvalid = m30_exit_M_AXI_ARVALID;
  assign m_axi_awaddr[9:0] = m30_exit_M_AXI_AWADDR;
  assign m_axi_awprot[2:0] = m30_exit_M_AXI_AWPROT;
  assign m_axi_awvalid = m30_exit_M_AXI_AWVALID;
  assign m_axi_bready = m30_exit_M_AXI_BREADY;
  assign m_axi_rready = m30_exit_M_AXI_RREADY;
  assign m_axi_wdata[31:0] = m30_exit_M_AXI_WDATA;
  assign m_axi_wstrb[3:0] = m30_exit_M_AXI_WSTRB;
  assign m_axi_wvalid = m30_exit_M_AXI_WVALID;
  assign s_axi_1_ARADDR = s_axi_araddr[9:0];
  assign s_axi_1_ARCACHE = s_axi_arcache[3:0];
  assign s_axi_1_ARID = s_axi_arid[2:0];
  assign s_axi_1_ARLEN = s_axi_arlen[7:0];
  assign s_axi_1_ARLOCK = s_axi_arlock[0];
  assign s_axi_1_ARPROT = s_axi_arprot[2:0];
  assign s_axi_1_ARQOS = s_axi_arqos[3:0];
  assign s_axi_1_ARUSER = s_axi_aruser[1023:0];
  assign s_axi_1_ARVALID = s_axi_arvalid;
  assign s_axi_1_AWADDR = s_axi_awaddr[9:0];
  assign s_axi_1_AWCACHE = s_axi_awcache[3:0];
  assign s_axi_1_AWID = s_axi_awid[2:0];
  assign s_axi_1_AWLEN = s_axi_awlen[7:0];
  assign s_axi_1_AWLOCK = s_axi_awlock[0];
  assign s_axi_1_AWPROT = s_axi_awprot[2:0];
  assign s_axi_1_AWQOS = s_axi_awqos[3:0];
  assign s_axi_1_AWUSER = s_axi_awuser[1023:0];
  assign s_axi_1_AWVALID = s_axi_awvalid;
  assign s_axi_1_BREADY = s_axi_bready;
  assign s_axi_1_RREADY = s_axi_rready;
  assign s_axi_1_WDATA = s_axi_wdata[31:0];
  assign s_axi_1_WLAST = s_axi_wlast;
  assign s_axi_1_WSTRB = s_axi_wstrb[3:0];
  assign s_axi_1_WUSER = s_axi_wuser[1023:0];
  assign s_axi_1_WVALID = s_axi_wvalid;
  assign s_axi_arready = s_axi_1_ARREADY;
  assign s_axi_awready = s_axi_1_AWREADY;
  assign s_axi_bid[2:0] = s_axi_1_BID;
  assign s_axi_bresp[1:0] = s_axi_1_BRESP;
  assign s_axi_buser[1023:0] = s_axi_1_BUSER;
  assign s_axi_bvalid = s_axi_1_BVALID;
  assign s_axi_rdata[31:0] = s_axi_1_RDATA;
  assign s_axi_rid[2:0] = s_axi_1_RID;
  assign s_axi_rlast = s_axi_1_RLAST;
  assign s_axi_rresp[1:0] = s_axi_1_RRESP;
  assign s_axi_ruser[1023:0] = s_axi_1_RUSER;
  assign s_axi_rvalid = s_axi_1_RVALID;
  assign s_axi_wready = s_axi_1_WREADY;
  bd_afc3_m30e_0 m30_exit
       (.aclk(aclk_1),
        .aresetn(aresetn_1),
        .m_axi_araddr(m30_exit_M_AXI_ARADDR),
        .m_axi_arprot(m30_exit_M_AXI_ARPROT),
        .m_axi_arready(m30_exit_M_AXI_ARREADY),
        .m_axi_arvalid(m30_exit_M_AXI_ARVALID),
        .m_axi_awaddr(m30_exit_M_AXI_AWADDR),
        .m_axi_awprot(m30_exit_M_AXI_AWPROT),
        .m_axi_awready(m30_exit_M_AXI_AWREADY),
        .m_axi_awvalid(m30_exit_M_AXI_AWVALID),
        .m_axi_bready(m30_exit_M_AXI_BREADY),
        .m_axi_bresp(m30_exit_M_AXI_BRESP),
        .m_axi_bvalid(m30_exit_M_AXI_BVALID),
        .m_axi_rdata(m30_exit_M_AXI_RDATA),
        .m_axi_rready(m30_exit_M_AXI_RREADY),
        .m_axi_rresp(m30_exit_M_AXI_RRESP),
        .m_axi_rvalid(m30_exit_M_AXI_RVALID),
        .m_axi_wdata(m30_exit_M_AXI_WDATA),
        .m_axi_wready(m30_exit_M_AXI_WREADY),
        .m_axi_wstrb(m30_exit_M_AXI_WSTRB),
        .m_axi_wvalid(m30_exit_M_AXI_WVALID),
        .s_axi_araddr(s_axi_1_ARADDR),
        .s_axi_arcache(s_axi_1_ARCACHE),
        .s_axi_arid(s_axi_1_ARID),
        .s_axi_arlen(s_axi_1_ARLEN),
        .s_axi_arlock(s_axi_1_ARLOCK),
        .s_axi_arprot(s_axi_1_ARPROT),
        .s_axi_arqos(s_axi_1_ARQOS),
        .s_axi_arready(s_axi_1_ARREADY),
        .s_axi_aruser(s_axi_1_ARUSER),
        .s_axi_arvalid(s_axi_1_ARVALID),
        .s_axi_awaddr(s_axi_1_AWADDR),
        .s_axi_awcache(s_axi_1_AWCACHE),
        .s_axi_awid(s_axi_1_AWID),
        .s_axi_awlen(s_axi_1_AWLEN),
        .s_axi_awlock(s_axi_1_AWLOCK),
        .s_axi_awprot(s_axi_1_AWPROT),
        .s_axi_awqos(s_axi_1_AWQOS),
        .s_axi_awready(s_axi_1_AWREADY),
        .s_axi_awuser(s_axi_1_AWUSER),
        .s_axi_awvalid(s_axi_1_AWVALID),
        .s_axi_bid(s_axi_1_BID),
        .s_axi_bready(s_axi_1_BREADY),
        .s_axi_bresp(s_axi_1_BRESP),
        .s_axi_buser(s_axi_1_BUSER),
        .s_axi_bvalid(s_axi_1_BVALID),
        .s_axi_rdata(s_axi_1_RDATA),
        .s_axi_rid(s_axi_1_RID),
        .s_axi_rlast(s_axi_1_RLAST),
        .s_axi_rready(s_axi_1_RREADY),
        .s_axi_rresp(s_axi_1_RRESP),
        .s_axi_ruser(s_axi_1_RUSER),
        .s_axi_rvalid(s_axi_1_RVALID),
        .s_axi_wdata(s_axi_1_WDATA),
        .s_axi_wlast(s_axi_1_WLAST),
        .s_axi_wready(s_axi_1_WREADY),
        .s_axi_wstrb(s_axi_1_WSTRB),
        .s_axi_wuser(s_axi_1_WUSER),
        .s_axi_wvalid(s_axi_1_WVALID));
endmodule

module m30_nodes_imp_1BVUHKI
   (M_SC_AR_info,
    M_SC_AR_payld,
    M_SC_AR_recv,
    M_SC_AR_req,
    M_SC_AR_send,
    M_SC_AW_info,
    M_SC_AW_payld,
    M_SC_AW_recv,
    M_SC_AW_req,
    M_SC_AW_send,
    M_SC_B_info,
    M_SC_B_payld,
    M_SC_B_recv,
    M_SC_B_req,
    M_SC_B_send,
    M_SC_R_info,
    M_SC_R_payld,
    M_SC_R_recv,
    M_SC_R_req,
    M_SC_R_send,
    M_SC_W_info,
    M_SC_W_payld,
    M_SC_W_recv,
    M_SC_W_req,
    M_SC_W_send,
    S_SC_AR_info,
    S_SC_AR_payld,
    S_SC_AR_recv,
    S_SC_AR_req,
    S_SC_AR_send,
    S_SC_AW_info,
    S_SC_AW_payld,
    S_SC_AW_recv,
    S_SC_AW_req,
    S_SC_AW_send,
    S_SC_B_info,
    S_SC_B_payld,
    S_SC_B_recv,
    S_SC_B_req,
    S_SC_B_send,
    S_SC_R_info,
    S_SC_R_payld,
    S_SC_R_recv,
    S_SC_R_req,
    S_SC_R_send,
    S_SC_W_info,
    S_SC_W_payld,
    S_SC_W_recv,
    S_SC_W_req,
    S_SC_W_send,
    m_axi_aclk,
    m_axi_aresetn,
    s_axi_aclk,
    s_axi_aresetn);
  output [0:0]M_SC_AR_info;
  output [181:0]M_SC_AR_payld;
  input [0:0]M_SC_AR_recv;
  output [0:0]M_SC_AR_req;
  output [0:0]M_SC_AR_send;
  output [0:0]M_SC_AW_info;
  output [181:0]M_SC_AW_payld;
  input [0:0]M_SC_AW_recv;
  output [0:0]M_SC_AW_req;
  output [0:0]M_SC_AW_send;
  output [0:0]M_SC_B_info;
  output [8:0]M_SC_B_payld;
  input [0:0]M_SC_B_recv;
  output [0:0]M_SC_B_req;
  output [0:0]M_SC_B_send;
  output [0:0]M_SC_R_info;
  output [54:0]M_SC_R_payld;
  input [0:0]M_SC_R_recv;
  output [0:0]M_SC_R_req;
  output [0:0]M_SC_R_send;
  output [0:0]M_SC_W_info;
  output [68:0]M_SC_W_payld;
  input [0:0]M_SC_W_recv;
  output [0:0]M_SC_W_req;
  output [0:0]M_SC_W_send;
  input [0:0]S_SC_AR_info;
  input [181:0]S_SC_AR_payld;
  output [0:0]S_SC_AR_recv;
  input [0:0]S_SC_AR_req;
  input [0:0]S_SC_AR_send;
  input [0:0]S_SC_AW_info;
  input [181:0]S_SC_AW_payld;
  output [0:0]S_SC_AW_recv;
  input [0:0]S_SC_AW_req;
  input [0:0]S_SC_AW_send;
  input [0:0]S_SC_B_info;
  input [8:0]S_SC_B_payld;
  output [0:0]S_SC_B_recv;
  input [0:0]S_SC_B_req;
  input [0:0]S_SC_B_send;
  input [0:0]S_SC_R_info;
  input [54:0]S_SC_R_payld;
  output [0:0]S_SC_R_recv;
  input [0:0]S_SC_R_req;
  input [0:0]S_SC_R_send;
  input [0:0]S_SC_W_info;
  input [68:0]S_SC_W_payld;
  output [0:0]S_SC_W_recv;
  input [0:0]S_SC_W_req;
  input [0:0]S_SC_W_send;
  input m_axi_aclk;
  input m_axi_aresetn;
  input s_axi_aclk;
  input s_axi_aresetn;

  wire [0:0]S_SC_AR_1_INFO;
  wire [181:0]S_SC_AR_1_PAYLD;
  wire [0:0]S_SC_AR_1_RECV;
  wire [0:0]S_SC_AR_1_REQ;
  wire [0:0]S_SC_AR_1_SEND;
  wire [0:0]S_SC_AW_1_INFO;
  wire [181:0]S_SC_AW_1_PAYLD;
  wire [0:0]S_SC_AW_1_RECV;
  wire [0:0]S_SC_AW_1_REQ;
  wire [0:0]S_SC_AW_1_SEND;
  wire [0:0]S_SC_B_1_INFO;
  wire [8:0]S_SC_B_1_PAYLD;
  wire [0:0]S_SC_B_1_RECV;
  wire [0:0]S_SC_B_1_REQ;
  wire [0:0]S_SC_B_1_SEND;
  wire [0:0]S_SC_R_1_INFO;
  wire [54:0]S_SC_R_1_PAYLD;
  wire [0:0]S_SC_R_1_RECV;
  wire [0:0]S_SC_R_1_REQ;
  wire [0:0]S_SC_R_1_SEND;
  wire [0:0]S_SC_W_1_INFO;
  wire [68:0]S_SC_W_1_PAYLD;
  wire [0:0]S_SC_W_1_RECV;
  wire [0:0]S_SC_W_1_REQ;
  wire [0:0]S_SC_W_1_SEND;
  wire [0:0]m30_ar_node_M_SC_INFO;
  wire [181:0]m30_ar_node_M_SC_PAYLD;
  wire [0:0]m30_ar_node_M_SC_RECV;
  wire [0:0]m30_ar_node_M_SC_REQ;
  wire [0:0]m30_ar_node_M_SC_SEND;
  wire [0:0]m30_aw_node_M_SC_INFO;
  wire [181:0]m30_aw_node_M_SC_PAYLD;
  wire [0:0]m30_aw_node_M_SC_RECV;
  wire [0:0]m30_aw_node_M_SC_REQ;
  wire [0:0]m30_aw_node_M_SC_SEND;
  wire [0:0]m30_b_node_M_SC_INFO;
  wire [8:0]m30_b_node_M_SC_PAYLD;
  wire [0:0]m30_b_node_M_SC_RECV;
  wire [0:0]m30_b_node_M_SC_REQ;
  wire [0:0]m30_b_node_M_SC_SEND;
  wire [0:0]m30_r_node_M_SC_INFO;
  wire [54:0]m30_r_node_M_SC_PAYLD;
  wire [0:0]m30_r_node_M_SC_RECV;
  wire [0:0]m30_r_node_M_SC_REQ;
  wire [0:0]m30_r_node_M_SC_SEND;
  wire [0:0]m30_w_node_M_SC_INFO;
  wire [68:0]m30_w_node_M_SC_PAYLD;
  wire [0:0]m30_w_node_M_SC_RECV;
  wire [0:0]m30_w_node_M_SC_REQ;
  wire [0:0]m30_w_node_M_SC_SEND;
  wire m_axi_aclk_1;
  wire m_axi_aresetn_1;
  wire s_axi_aclk_1;
  wire s_axi_aresetn_1;

  assign M_SC_AR_info[0] = m30_ar_node_M_SC_INFO;
  assign M_SC_AR_payld[181:0] = m30_ar_node_M_SC_PAYLD;
  assign M_SC_AR_req[0] = m30_ar_node_M_SC_REQ;
  assign M_SC_AR_send[0] = m30_ar_node_M_SC_SEND;
  assign M_SC_AW_info[0] = m30_aw_node_M_SC_INFO;
  assign M_SC_AW_payld[181:0] = m30_aw_node_M_SC_PAYLD;
  assign M_SC_AW_req[0] = m30_aw_node_M_SC_REQ;
  assign M_SC_AW_send[0] = m30_aw_node_M_SC_SEND;
  assign M_SC_B_info[0] = m30_b_node_M_SC_INFO;
  assign M_SC_B_payld[8:0] = m30_b_node_M_SC_PAYLD;
  assign M_SC_B_req[0] = m30_b_node_M_SC_REQ;
  assign M_SC_B_send[0] = m30_b_node_M_SC_SEND;
  assign M_SC_R_info[0] = m30_r_node_M_SC_INFO;
  assign M_SC_R_payld[54:0] = m30_r_node_M_SC_PAYLD;
  assign M_SC_R_req[0] = m30_r_node_M_SC_REQ;
  assign M_SC_R_send[0] = m30_r_node_M_SC_SEND;
  assign M_SC_W_info[0] = m30_w_node_M_SC_INFO;
  assign M_SC_W_payld[68:0] = m30_w_node_M_SC_PAYLD;
  assign M_SC_W_req[0] = m30_w_node_M_SC_REQ;
  assign M_SC_W_send[0] = m30_w_node_M_SC_SEND;
  assign S_SC_AR_1_INFO = S_SC_AR_info[0];
  assign S_SC_AR_1_PAYLD = S_SC_AR_payld[181:0];
  assign S_SC_AR_1_REQ = S_SC_AR_req[0];
  assign S_SC_AR_1_SEND = S_SC_AR_send[0];
  assign S_SC_AR_recv[0] = S_SC_AR_1_RECV;
  assign S_SC_AW_1_INFO = S_SC_AW_info[0];
  assign S_SC_AW_1_PAYLD = S_SC_AW_payld[181:0];
  assign S_SC_AW_1_REQ = S_SC_AW_req[0];
  assign S_SC_AW_1_SEND = S_SC_AW_send[0];
  assign S_SC_AW_recv[0] = S_SC_AW_1_RECV;
  assign S_SC_B_1_INFO = S_SC_B_info[0];
  assign S_SC_B_1_PAYLD = S_SC_B_payld[8:0];
  assign S_SC_B_1_REQ = S_SC_B_req[0];
  assign S_SC_B_1_SEND = S_SC_B_send[0];
  assign S_SC_B_recv[0] = S_SC_B_1_RECV;
  assign S_SC_R_1_INFO = S_SC_R_info[0];
  assign S_SC_R_1_PAYLD = S_SC_R_payld[54:0];
  assign S_SC_R_1_REQ = S_SC_R_req[0];
  assign S_SC_R_1_SEND = S_SC_R_send[0];
  assign S_SC_R_recv[0] = S_SC_R_1_RECV;
  assign S_SC_W_1_INFO = S_SC_W_info[0];
  assign S_SC_W_1_PAYLD = S_SC_W_payld[68:0];
  assign S_SC_W_1_REQ = S_SC_W_req[0];
  assign S_SC_W_1_SEND = S_SC_W_send[0];
  assign S_SC_W_recv[0] = S_SC_W_1_RECV;
  assign m30_ar_node_M_SC_RECV = M_SC_AR_recv[0];
  assign m30_aw_node_M_SC_RECV = M_SC_AW_recv[0];
  assign m30_b_node_M_SC_RECV = M_SC_B_recv[0];
  assign m30_r_node_M_SC_RECV = M_SC_R_recv[0];
  assign m30_w_node_M_SC_RECV = M_SC_W_recv[0];
  assign m_axi_aclk_1 = m_axi_aclk;
  assign m_axi_aresetn_1 = m_axi_aresetn;
  assign s_axi_aclk_1 = s_axi_aclk;
  assign s_axi_aresetn_1 = s_axi_aresetn;
  bd_afc3_m30arn_0 m30_ar_node
       (.m_sc_aclk(m_axi_aclk_1),
        .m_sc_aresetn(m_axi_aresetn_1),
        .m_sc_info(m30_ar_node_M_SC_INFO),
        .m_sc_payld(m30_ar_node_M_SC_PAYLD),
        .m_sc_recv(m30_ar_node_M_SC_RECV),
        .m_sc_req(m30_ar_node_M_SC_REQ),
        .m_sc_send(m30_ar_node_M_SC_SEND),
        .s_sc_aclk(s_axi_aclk_1),
        .s_sc_aresetn(s_axi_aresetn_1),
        .s_sc_info(S_SC_AR_1_INFO),
        .s_sc_payld(S_SC_AR_1_PAYLD),
        .s_sc_recv(S_SC_AR_1_RECV),
        .s_sc_req(S_SC_AR_1_REQ),
        .s_sc_send(S_SC_AR_1_SEND));
  bd_afc3_m30awn_0 m30_aw_node
       (.m_sc_aclk(m_axi_aclk_1),
        .m_sc_aresetn(m_axi_aresetn_1),
        .m_sc_info(m30_aw_node_M_SC_INFO),
        .m_sc_payld(m30_aw_node_M_SC_PAYLD),
        .m_sc_recv(m30_aw_node_M_SC_RECV),
        .m_sc_req(m30_aw_node_M_SC_REQ),
        .m_sc_send(m30_aw_node_M_SC_SEND),
        .s_sc_aclk(s_axi_aclk_1),
        .s_sc_aresetn(s_axi_aresetn_1),
        .s_sc_info(S_SC_AW_1_INFO),
        .s_sc_payld(S_SC_AW_1_PAYLD),
        .s_sc_recv(S_SC_AW_1_RECV),
        .s_sc_req(S_SC_AW_1_REQ),
        .s_sc_send(S_SC_AW_1_SEND));
  bd_afc3_m30bn_0 m30_b_node
       (.m_sc_aclk(s_axi_aclk_1),
        .m_sc_aresetn(s_axi_aresetn_1),
        .m_sc_info(m30_b_node_M_SC_INFO),
        .m_sc_payld(m30_b_node_M_SC_PAYLD),
        .m_sc_recv(m30_b_node_M_SC_RECV),
        .m_sc_req(m30_b_node_M_SC_REQ),
        .m_sc_send(m30_b_node_M_SC_SEND),
        .s_sc_aclk(m_axi_aclk_1),
        .s_sc_aresetn(m_axi_aresetn_1),
        .s_sc_info(S_SC_B_1_INFO),
        .s_sc_payld(S_SC_B_1_PAYLD),
        .s_sc_recv(S_SC_B_1_RECV),
        .s_sc_req(S_SC_B_1_REQ),
        .s_sc_send(S_SC_B_1_SEND));
  bd_afc3_m30rn_0 m30_r_node
       (.m_sc_aclk(s_axi_aclk_1),
        .m_sc_aresetn(s_axi_aresetn_1),
        .m_sc_info(m30_r_node_M_SC_INFO),
        .m_sc_payld(m30_r_node_M_SC_PAYLD),
        .m_sc_recv(m30_r_node_M_SC_RECV),
        .m_sc_req(m30_r_node_M_SC_REQ),
        .m_sc_send(m30_r_node_M_SC_SEND),
        .s_sc_aclk(m_axi_aclk_1),
        .s_sc_aresetn(m_axi_aresetn_1),
        .s_sc_info(S_SC_R_1_INFO),
        .s_sc_payld(S_SC_R_1_PAYLD),
        .s_sc_recv(S_SC_R_1_RECV),
        .s_sc_req(S_SC_R_1_REQ),
        .s_sc_send(S_SC_R_1_SEND));
  bd_afc3_m30wn_0 m30_w_node
       (.m_sc_aclk(m_axi_aclk_1),
        .m_sc_aresetn(m_axi_aresetn_1),
        .m_sc_info(m30_w_node_M_SC_INFO),
        .m_sc_payld(m30_w_node_M_SC_PAYLD),
        .m_sc_recv(m30_w_node_M_SC_RECV),
        .m_sc_req(m30_w_node_M_SC_REQ),
        .m_sc_send(m30_w_node_M_SC_SEND),
        .s_sc_aclk(s_axi_aclk_1),
        .s_sc_aresetn(s_axi_aresetn_1),
        .s_sc_info(S_SC_W_1_INFO),
        .s_sc_payld(S_SC_W_1_PAYLD),
        .s_sc_recv(S_SC_W_1_RECV),
        .s_sc_req(S_SC_W_1_REQ),
        .s_sc_send(S_SC_W_1_SEND));
endmodule

module m31_exit_pipeline_imp_12V374Q
   (aclk,
    aresetn,
    m_axi_araddr,
    m_axi_arprot,
    m_axi_arready,
    m_axi_arvalid,
    m_axi_awaddr,
    m_axi_awprot,
    m_axi_awready,
    m_axi_awvalid,
    m_axi_bready,
    m_axi_bresp,
    m_axi_bvalid,
    m_axi_rdata,
    m_axi_rready,
    m_axi_rresp,
    m_axi_rvalid,
    m_axi_wdata,
    m_axi_wready,
    m_axi_wstrb,
    m_axi_wvalid,
    s_axi_araddr,
    s_axi_arcache,
    s_axi_arid,
    s_axi_arlen,
    s_axi_arlock,
    s_axi_arprot,
    s_axi_arqos,
    s_axi_arready,
    s_axi_aruser,
    s_axi_arvalid,
    s_axi_awaddr,
    s_axi_awcache,
    s_axi_awid,
    s_axi_awlen,
    s_axi_awlock,
    s_axi_awprot,
    s_axi_awqos,
    s_axi_awready,
    s_axi_awuser,
    s_axi_awvalid,
    s_axi_bid,
    s_axi_bready,
    s_axi_bresp,
    s_axi_buser,
    s_axi_bvalid,
    s_axi_rdata,
    s_axi_rid,
    s_axi_rlast,
    s_axi_rready,
    s_axi_rresp,
    s_axi_ruser,
    s_axi_rvalid,
    s_axi_wdata,
    s_axi_wlast,
    s_axi_wready,
    s_axi_wstrb,
    s_axi_wuser,
    s_axi_wvalid);
  input aclk;
  input aresetn;
  output [9:0]m_axi_araddr;
  output [2:0]m_axi_arprot;
  input m_axi_arready;
  output m_axi_arvalid;
  output [9:0]m_axi_awaddr;
  output [2:0]m_axi_awprot;
  input m_axi_awready;
  output m_axi_awvalid;
  output m_axi_bready;
  input [1:0]m_axi_bresp;
  input m_axi_bvalid;
  input [31:0]m_axi_rdata;
  output m_axi_rready;
  input [1:0]m_axi_rresp;
  input m_axi_rvalid;
  output [31:0]m_axi_wdata;
  input m_axi_wready;
  output [3:0]m_axi_wstrb;
  output m_axi_wvalid;
  input [9:0]s_axi_araddr;
  input [3:0]s_axi_arcache;
  input [2:0]s_axi_arid;
  input [7:0]s_axi_arlen;
  input [0:0]s_axi_arlock;
  input [2:0]s_axi_arprot;
  input [3:0]s_axi_arqos;
  output s_axi_arready;
  input [1023:0]s_axi_aruser;
  input s_axi_arvalid;
  input [9:0]s_axi_awaddr;
  input [3:0]s_axi_awcache;
  input [2:0]s_axi_awid;
  input [7:0]s_axi_awlen;
  input [0:0]s_axi_awlock;
  input [2:0]s_axi_awprot;
  input [3:0]s_axi_awqos;
  output s_axi_awready;
  input [1023:0]s_axi_awuser;
  input s_axi_awvalid;
  output [2:0]s_axi_bid;
  input s_axi_bready;
  output [1:0]s_axi_bresp;
  output [1023:0]s_axi_buser;
  output s_axi_bvalid;
  output [31:0]s_axi_rdata;
  output [2:0]s_axi_rid;
  output s_axi_rlast;
  input s_axi_rready;
  output [1:0]s_axi_rresp;
  output [1023:0]s_axi_ruser;
  output s_axi_rvalid;
  input [31:0]s_axi_wdata;
  input s_axi_wlast;
  output s_axi_wready;
  input [3:0]s_axi_wstrb;
  input [1023:0]s_axi_wuser;
  input s_axi_wvalid;

  wire aclk_1;
  wire aresetn_1;
  wire [9:0]m31_exit_M_AXI_ARADDR;
  wire [2:0]m31_exit_M_AXI_ARPROT;
  wire m31_exit_M_AXI_ARREADY;
  wire m31_exit_M_AXI_ARVALID;
  wire [9:0]m31_exit_M_AXI_AWADDR;
  wire [2:0]m31_exit_M_AXI_AWPROT;
  wire m31_exit_M_AXI_AWREADY;
  wire m31_exit_M_AXI_AWVALID;
  wire m31_exit_M_AXI_BREADY;
  wire [1:0]m31_exit_M_AXI_BRESP;
  wire m31_exit_M_AXI_BVALID;
  wire [31:0]m31_exit_M_AXI_RDATA;
  wire m31_exit_M_AXI_RREADY;
  wire [1:0]m31_exit_M_AXI_RRESP;
  wire m31_exit_M_AXI_RVALID;
  wire [31:0]m31_exit_M_AXI_WDATA;
  wire m31_exit_M_AXI_WREADY;
  wire [3:0]m31_exit_M_AXI_WSTRB;
  wire m31_exit_M_AXI_WVALID;
  wire [9:0]s_axi_1_ARADDR;
  wire [3:0]s_axi_1_ARCACHE;
  wire [2:0]s_axi_1_ARID;
  wire [7:0]s_axi_1_ARLEN;
  wire [0:0]s_axi_1_ARLOCK;
  wire [2:0]s_axi_1_ARPROT;
  wire [3:0]s_axi_1_ARQOS;
  wire s_axi_1_ARREADY;
  wire [1023:0]s_axi_1_ARUSER;
  wire s_axi_1_ARVALID;
  wire [9:0]s_axi_1_AWADDR;
  wire [3:0]s_axi_1_AWCACHE;
  wire [2:0]s_axi_1_AWID;
  wire [7:0]s_axi_1_AWLEN;
  wire [0:0]s_axi_1_AWLOCK;
  wire [2:0]s_axi_1_AWPROT;
  wire [3:0]s_axi_1_AWQOS;
  wire s_axi_1_AWREADY;
  wire [1023:0]s_axi_1_AWUSER;
  wire s_axi_1_AWVALID;
  wire [2:0]s_axi_1_BID;
  wire s_axi_1_BREADY;
  wire [1:0]s_axi_1_BRESP;
  wire [1023:0]s_axi_1_BUSER;
  wire s_axi_1_BVALID;
  wire [31:0]s_axi_1_RDATA;
  wire [2:0]s_axi_1_RID;
  wire s_axi_1_RLAST;
  wire s_axi_1_RREADY;
  wire [1:0]s_axi_1_RRESP;
  wire [1023:0]s_axi_1_RUSER;
  wire s_axi_1_RVALID;
  wire [31:0]s_axi_1_WDATA;
  wire s_axi_1_WLAST;
  wire s_axi_1_WREADY;
  wire [3:0]s_axi_1_WSTRB;
  wire [1023:0]s_axi_1_WUSER;
  wire s_axi_1_WVALID;

  assign aclk_1 = aclk;
  assign aresetn_1 = aresetn;
  assign m31_exit_M_AXI_ARREADY = m_axi_arready;
  assign m31_exit_M_AXI_AWREADY = m_axi_awready;
  assign m31_exit_M_AXI_BRESP = m_axi_bresp[1:0];
  assign m31_exit_M_AXI_BVALID = m_axi_bvalid;
  assign m31_exit_M_AXI_RDATA = m_axi_rdata[31:0];
  assign m31_exit_M_AXI_RRESP = m_axi_rresp[1:0];
  assign m31_exit_M_AXI_RVALID = m_axi_rvalid;
  assign m31_exit_M_AXI_WREADY = m_axi_wready;
  assign m_axi_araddr[9:0] = m31_exit_M_AXI_ARADDR;
  assign m_axi_arprot[2:0] = m31_exit_M_AXI_ARPROT;
  assign m_axi_arvalid = m31_exit_M_AXI_ARVALID;
  assign m_axi_awaddr[9:0] = m31_exit_M_AXI_AWADDR;
  assign m_axi_awprot[2:0] = m31_exit_M_AXI_AWPROT;
  assign m_axi_awvalid = m31_exit_M_AXI_AWVALID;
  assign m_axi_bready = m31_exit_M_AXI_BREADY;
  assign m_axi_rready = m31_exit_M_AXI_RREADY;
  assign m_axi_wdata[31:0] = m31_exit_M_AXI_WDATA;
  assign m_axi_wstrb[3:0] = m31_exit_M_AXI_WSTRB;
  assign m_axi_wvalid = m31_exit_M_AXI_WVALID;
  assign s_axi_1_ARADDR = s_axi_araddr[9:0];
  assign s_axi_1_ARCACHE = s_axi_arcache[3:0];
  assign s_axi_1_ARID = s_axi_arid[2:0];
  assign s_axi_1_ARLEN = s_axi_arlen[7:0];
  assign s_axi_1_ARLOCK = s_axi_arlock[0];
  assign s_axi_1_ARPROT = s_axi_arprot[2:0];
  assign s_axi_1_ARQOS = s_axi_arqos[3:0];
  assign s_axi_1_ARUSER = s_axi_aruser[1023:0];
  assign s_axi_1_ARVALID = s_axi_arvalid;
  assign s_axi_1_AWADDR = s_axi_awaddr[9:0];
  assign s_axi_1_AWCACHE = s_axi_awcache[3:0];
  assign s_axi_1_AWID = s_axi_awid[2:0];
  assign s_axi_1_AWLEN = s_axi_awlen[7:0];
  assign s_axi_1_AWLOCK = s_axi_awlock[0];
  assign s_axi_1_AWPROT = s_axi_awprot[2:0];
  assign s_axi_1_AWQOS = s_axi_awqos[3:0];
  assign s_axi_1_AWUSER = s_axi_awuser[1023:0];
  assign s_axi_1_AWVALID = s_axi_awvalid;
  assign s_axi_1_BREADY = s_axi_bready;
  assign s_axi_1_RREADY = s_axi_rready;
  assign s_axi_1_WDATA = s_axi_wdata[31:0];
  assign s_axi_1_WLAST = s_axi_wlast;
  assign s_axi_1_WSTRB = s_axi_wstrb[3:0];
  assign s_axi_1_WUSER = s_axi_wuser[1023:0];
  assign s_axi_1_WVALID = s_axi_wvalid;
  assign s_axi_arready = s_axi_1_ARREADY;
  assign s_axi_awready = s_axi_1_AWREADY;
  assign s_axi_bid[2:0] = s_axi_1_BID;
  assign s_axi_bresp[1:0] = s_axi_1_BRESP;
  assign s_axi_buser[1023:0] = s_axi_1_BUSER;
  assign s_axi_bvalid = s_axi_1_BVALID;
  assign s_axi_rdata[31:0] = s_axi_1_RDATA;
  assign s_axi_rid[2:0] = s_axi_1_RID;
  assign s_axi_rlast = s_axi_1_RLAST;
  assign s_axi_rresp[1:0] = s_axi_1_RRESP;
  assign s_axi_ruser[1023:0] = s_axi_1_RUSER;
  assign s_axi_rvalid = s_axi_1_RVALID;
  assign s_axi_wready = s_axi_1_WREADY;
  bd_afc3_m31e_0 m31_exit
       (.aclk(aclk_1),
        .aresetn(aresetn_1),
        .m_axi_araddr(m31_exit_M_AXI_ARADDR),
        .m_axi_arprot(m31_exit_M_AXI_ARPROT),
        .m_axi_arready(m31_exit_M_AXI_ARREADY),
        .m_axi_arvalid(m31_exit_M_AXI_ARVALID),
        .m_axi_awaddr(m31_exit_M_AXI_AWADDR),
        .m_axi_awprot(m31_exit_M_AXI_AWPROT),
        .m_axi_awready(m31_exit_M_AXI_AWREADY),
        .m_axi_awvalid(m31_exit_M_AXI_AWVALID),
        .m_axi_bready(m31_exit_M_AXI_BREADY),
        .m_axi_bresp(m31_exit_M_AXI_BRESP),
        .m_axi_bvalid(m31_exit_M_AXI_BVALID),
        .m_axi_rdata(m31_exit_M_AXI_RDATA),
        .m_axi_rready(m31_exit_M_AXI_RREADY),
        .m_axi_rresp(m31_exit_M_AXI_RRESP),
        .m_axi_rvalid(m31_exit_M_AXI_RVALID),
        .m_axi_wdata(m31_exit_M_AXI_WDATA),
        .m_axi_wready(m31_exit_M_AXI_WREADY),
        .m_axi_wstrb(m31_exit_M_AXI_WSTRB),
        .m_axi_wvalid(m31_exit_M_AXI_WVALID),
        .s_axi_araddr(s_axi_1_ARADDR),
        .s_axi_arcache(s_axi_1_ARCACHE),
        .s_axi_arid(s_axi_1_ARID),
        .s_axi_arlen(s_axi_1_ARLEN),
        .s_axi_arlock(s_axi_1_ARLOCK),
        .s_axi_arprot(s_axi_1_ARPROT),
        .s_axi_arqos(s_axi_1_ARQOS),
        .s_axi_arready(s_axi_1_ARREADY),
        .s_axi_aruser(s_axi_1_ARUSER),
        .s_axi_arvalid(s_axi_1_ARVALID),
        .s_axi_awaddr(s_axi_1_AWADDR),
        .s_axi_awcache(s_axi_1_AWCACHE),
        .s_axi_awid(s_axi_1_AWID),
        .s_axi_awlen(s_axi_1_AWLEN),
        .s_axi_awlock(s_axi_1_AWLOCK),
        .s_axi_awprot(s_axi_1_AWPROT),
        .s_axi_awqos(s_axi_1_AWQOS),
        .s_axi_awready(s_axi_1_AWREADY),
        .s_axi_awuser(s_axi_1_AWUSER),
        .s_axi_awvalid(s_axi_1_AWVALID),
        .s_axi_bid(s_axi_1_BID),
        .s_axi_bready(s_axi_1_BREADY),
        .s_axi_bresp(s_axi_1_BRESP),
        .s_axi_buser(s_axi_1_BUSER),
        .s_axi_bvalid(s_axi_1_BVALID),
        .s_axi_rdata(s_axi_1_RDATA),
        .s_axi_rid(s_axi_1_RID),
        .s_axi_rlast(s_axi_1_RLAST),
        .s_axi_rready(s_axi_1_RREADY),
        .s_axi_rresp(s_axi_1_RRESP),
        .s_axi_ruser(s_axi_1_RUSER),
        .s_axi_rvalid(s_axi_1_RVALID),
        .s_axi_wdata(s_axi_1_WDATA),
        .s_axi_wlast(s_axi_1_WLAST),
        .s_axi_wready(s_axi_1_WREADY),
        .s_axi_wstrb(s_axi_1_WSTRB),
        .s_axi_wuser(s_axi_1_WUSER),
        .s_axi_wvalid(s_axi_1_WVALID));
endmodule

module m31_nodes_imp_DRIS5G
   (M_SC_AR_info,
    M_SC_AR_payld,
    M_SC_AR_recv,
    M_SC_AR_req,
    M_SC_AR_send,
    M_SC_AW_info,
    M_SC_AW_payld,
    M_SC_AW_recv,
    M_SC_AW_req,
    M_SC_AW_send,
    M_SC_B_info,
    M_SC_B_payld,
    M_SC_B_recv,
    M_SC_B_req,
    M_SC_B_send,
    M_SC_R_info,
    M_SC_R_payld,
    M_SC_R_recv,
    M_SC_R_req,
    M_SC_R_send,
    M_SC_W_info,
    M_SC_W_payld,
    M_SC_W_recv,
    M_SC_W_req,
    M_SC_W_send,
    S_SC_AR_info,
    S_SC_AR_payld,
    S_SC_AR_recv,
    S_SC_AR_req,
    S_SC_AR_send,
    S_SC_AW_info,
    S_SC_AW_payld,
    S_SC_AW_recv,
    S_SC_AW_req,
    S_SC_AW_send,
    S_SC_B_info,
    S_SC_B_payld,
    S_SC_B_recv,
    S_SC_B_req,
    S_SC_B_send,
    S_SC_R_info,
    S_SC_R_payld,
    S_SC_R_recv,
    S_SC_R_req,
    S_SC_R_send,
    S_SC_W_info,
    S_SC_W_payld,
    S_SC_W_recv,
    S_SC_W_req,
    S_SC_W_send,
    m_axi_aclk,
    m_axi_aresetn,
    s_axi_aclk,
    s_axi_aresetn);
  output [0:0]M_SC_AR_info;
  output [181:0]M_SC_AR_payld;
  input [0:0]M_SC_AR_recv;
  output [0:0]M_SC_AR_req;
  output [0:0]M_SC_AR_send;
  output [0:0]M_SC_AW_info;
  output [181:0]M_SC_AW_payld;
  input [0:0]M_SC_AW_recv;
  output [0:0]M_SC_AW_req;
  output [0:0]M_SC_AW_send;
  output [0:0]M_SC_B_info;
  output [8:0]M_SC_B_payld;
  input [0:0]M_SC_B_recv;
  output [0:0]M_SC_B_req;
  output [0:0]M_SC_B_send;
  output [0:0]M_SC_R_info;
  output [54:0]M_SC_R_payld;
  input [0:0]M_SC_R_recv;
  output [0:0]M_SC_R_req;
  output [0:0]M_SC_R_send;
  output [0:0]M_SC_W_info;
  output [68:0]M_SC_W_payld;
  input [0:0]M_SC_W_recv;
  output [0:0]M_SC_W_req;
  output [0:0]M_SC_W_send;
  input [0:0]S_SC_AR_info;
  input [181:0]S_SC_AR_payld;
  output [0:0]S_SC_AR_recv;
  input [0:0]S_SC_AR_req;
  input [0:0]S_SC_AR_send;
  input [0:0]S_SC_AW_info;
  input [181:0]S_SC_AW_payld;
  output [0:0]S_SC_AW_recv;
  input [0:0]S_SC_AW_req;
  input [0:0]S_SC_AW_send;
  input [0:0]S_SC_B_info;
  input [8:0]S_SC_B_payld;
  output [0:0]S_SC_B_recv;
  input [0:0]S_SC_B_req;
  input [0:0]S_SC_B_send;
  input [0:0]S_SC_R_info;
  input [54:0]S_SC_R_payld;
  output [0:0]S_SC_R_recv;
  input [0:0]S_SC_R_req;
  input [0:0]S_SC_R_send;
  input [0:0]S_SC_W_info;
  input [68:0]S_SC_W_payld;
  output [0:0]S_SC_W_recv;
  input [0:0]S_SC_W_req;
  input [0:0]S_SC_W_send;
  input m_axi_aclk;
  input m_axi_aresetn;
  input s_axi_aclk;
  input s_axi_aresetn;

  wire [0:0]S_SC_AR_1_INFO;
  wire [181:0]S_SC_AR_1_PAYLD;
  wire [0:0]S_SC_AR_1_RECV;
  wire [0:0]S_SC_AR_1_REQ;
  wire [0:0]S_SC_AR_1_SEND;
  wire [0:0]S_SC_AW_1_INFO;
  wire [181:0]S_SC_AW_1_PAYLD;
  wire [0:0]S_SC_AW_1_RECV;
  wire [0:0]S_SC_AW_1_REQ;
  wire [0:0]S_SC_AW_1_SEND;
  wire [0:0]S_SC_B_1_INFO;
  wire [8:0]S_SC_B_1_PAYLD;
  wire [0:0]S_SC_B_1_RECV;
  wire [0:0]S_SC_B_1_REQ;
  wire [0:0]S_SC_B_1_SEND;
  wire [0:0]S_SC_R_1_INFO;
  wire [54:0]S_SC_R_1_PAYLD;
  wire [0:0]S_SC_R_1_RECV;
  wire [0:0]S_SC_R_1_REQ;
  wire [0:0]S_SC_R_1_SEND;
  wire [0:0]S_SC_W_1_INFO;
  wire [68:0]S_SC_W_1_PAYLD;
  wire [0:0]S_SC_W_1_RECV;
  wire [0:0]S_SC_W_1_REQ;
  wire [0:0]S_SC_W_1_SEND;
  wire [0:0]m31_ar_node_M_SC_INFO;
  wire [181:0]m31_ar_node_M_SC_PAYLD;
  wire [0:0]m31_ar_node_M_SC_RECV;
  wire [0:0]m31_ar_node_M_SC_REQ;
  wire [0:0]m31_ar_node_M_SC_SEND;
  wire [0:0]m31_aw_node_M_SC_INFO;
  wire [181:0]m31_aw_node_M_SC_PAYLD;
  wire [0:0]m31_aw_node_M_SC_RECV;
  wire [0:0]m31_aw_node_M_SC_REQ;
  wire [0:0]m31_aw_node_M_SC_SEND;
  wire [0:0]m31_b_node_M_SC_INFO;
  wire [8:0]m31_b_node_M_SC_PAYLD;
  wire [0:0]m31_b_node_M_SC_RECV;
  wire [0:0]m31_b_node_M_SC_REQ;
  wire [0:0]m31_b_node_M_SC_SEND;
  wire [0:0]m31_r_node_M_SC_INFO;
  wire [54:0]m31_r_node_M_SC_PAYLD;
  wire [0:0]m31_r_node_M_SC_RECV;
  wire [0:0]m31_r_node_M_SC_REQ;
  wire [0:0]m31_r_node_M_SC_SEND;
  wire [0:0]m31_w_node_M_SC_INFO;
  wire [68:0]m31_w_node_M_SC_PAYLD;
  wire [0:0]m31_w_node_M_SC_RECV;
  wire [0:0]m31_w_node_M_SC_REQ;
  wire [0:0]m31_w_node_M_SC_SEND;
  wire m_axi_aclk_1;
  wire m_axi_aresetn_1;
  wire s_axi_aclk_1;
  wire s_axi_aresetn_1;

  assign M_SC_AR_info[0] = m31_ar_node_M_SC_INFO;
  assign M_SC_AR_payld[181:0] = m31_ar_node_M_SC_PAYLD;
  assign M_SC_AR_req[0] = m31_ar_node_M_SC_REQ;
  assign M_SC_AR_send[0] = m31_ar_node_M_SC_SEND;
  assign M_SC_AW_info[0] = m31_aw_node_M_SC_INFO;
  assign M_SC_AW_payld[181:0] = m31_aw_node_M_SC_PAYLD;
  assign M_SC_AW_req[0] = m31_aw_node_M_SC_REQ;
  assign M_SC_AW_send[0] = m31_aw_node_M_SC_SEND;
  assign M_SC_B_info[0] = m31_b_node_M_SC_INFO;
  assign M_SC_B_payld[8:0] = m31_b_node_M_SC_PAYLD;
  assign M_SC_B_req[0] = m31_b_node_M_SC_REQ;
  assign M_SC_B_send[0] = m31_b_node_M_SC_SEND;
  assign M_SC_R_info[0] = m31_r_node_M_SC_INFO;
  assign M_SC_R_payld[54:0] = m31_r_node_M_SC_PAYLD;
  assign M_SC_R_req[0] = m31_r_node_M_SC_REQ;
  assign M_SC_R_send[0] = m31_r_node_M_SC_SEND;
  assign M_SC_W_info[0] = m31_w_node_M_SC_INFO;
  assign M_SC_W_payld[68:0] = m31_w_node_M_SC_PAYLD;
  assign M_SC_W_req[0] = m31_w_node_M_SC_REQ;
  assign M_SC_W_send[0] = m31_w_node_M_SC_SEND;
  assign S_SC_AR_1_INFO = S_SC_AR_info[0];
  assign S_SC_AR_1_PAYLD = S_SC_AR_payld[181:0];
  assign S_SC_AR_1_REQ = S_SC_AR_req[0];
  assign S_SC_AR_1_SEND = S_SC_AR_send[0];
  assign S_SC_AR_recv[0] = S_SC_AR_1_RECV;
  assign S_SC_AW_1_INFO = S_SC_AW_info[0];
  assign S_SC_AW_1_PAYLD = S_SC_AW_payld[181:0];
  assign S_SC_AW_1_REQ = S_SC_AW_req[0];
  assign S_SC_AW_1_SEND = S_SC_AW_send[0];
  assign S_SC_AW_recv[0] = S_SC_AW_1_RECV;
  assign S_SC_B_1_INFO = S_SC_B_info[0];
  assign S_SC_B_1_PAYLD = S_SC_B_payld[8:0];
  assign S_SC_B_1_REQ = S_SC_B_req[0];
  assign S_SC_B_1_SEND = S_SC_B_send[0];
  assign S_SC_B_recv[0] = S_SC_B_1_RECV;
  assign S_SC_R_1_INFO = S_SC_R_info[0];
  assign S_SC_R_1_PAYLD = S_SC_R_payld[54:0];
  assign S_SC_R_1_REQ = S_SC_R_req[0];
  assign S_SC_R_1_SEND = S_SC_R_send[0];
  assign S_SC_R_recv[0] = S_SC_R_1_RECV;
  assign S_SC_W_1_INFO = S_SC_W_info[0];
  assign S_SC_W_1_PAYLD = S_SC_W_payld[68:0];
  assign S_SC_W_1_REQ = S_SC_W_req[0];
  assign S_SC_W_1_SEND = S_SC_W_send[0];
  assign S_SC_W_recv[0] = S_SC_W_1_RECV;
  assign m31_ar_node_M_SC_RECV = M_SC_AR_recv[0];
  assign m31_aw_node_M_SC_RECV = M_SC_AW_recv[0];
  assign m31_b_node_M_SC_RECV = M_SC_B_recv[0];
  assign m31_r_node_M_SC_RECV = M_SC_R_recv[0];
  assign m31_w_node_M_SC_RECV = M_SC_W_recv[0];
  assign m_axi_aclk_1 = m_axi_aclk;
  assign m_axi_aresetn_1 = m_axi_aresetn;
  assign s_axi_aclk_1 = s_axi_aclk;
  assign s_axi_aresetn_1 = s_axi_aresetn;
  bd_afc3_m31arn_0 m31_ar_node
       (.m_sc_aclk(m_axi_aclk_1),
        .m_sc_aresetn(m_axi_aresetn_1),
        .m_sc_info(m31_ar_node_M_SC_INFO),
        .m_sc_payld(m31_ar_node_M_SC_PAYLD),
        .m_sc_recv(m31_ar_node_M_SC_RECV),
        .m_sc_req(m31_ar_node_M_SC_REQ),
        .m_sc_send(m31_ar_node_M_SC_SEND),
        .s_sc_aclk(s_axi_aclk_1),
        .s_sc_aresetn(s_axi_aresetn_1),
        .s_sc_info(S_SC_AR_1_INFO),
        .s_sc_payld(S_SC_AR_1_PAYLD),
        .s_sc_recv(S_SC_AR_1_RECV),
        .s_sc_req(S_SC_AR_1_REQ),
        .s_sc_send(S_SC_AR_1_SEND));
  bd_afc3_m31awn_0 m31_aw_node
       (.m_sc_aclk(m_axi_aclk_1),
        .m_sc_aresetn(m_axi_aresetn_1),
        .m_sc_info(m31_aw_node_M_SC_INFO),
        .m_sc_payld(m31_aw_node_M_SC_PAYLD),
        .m_sc_recv(m31_aw_node_M_SC_RECV),
        .m_sc_req(m31_aw_node_M_SC_REQ),
        .m_sc_send(m31_aw_node_M_SC_SEND),
        .s_sc_aclk(s_axi_aclk_1),
        .s_sc_aresetn(s_axi_aresetn_1),
        .s_sc_info(S_SC_AW_1_INFO),
        .s_sc_payld(S_SC_AW_1_PAYLD),
        .s_sc_recv(S_SC_AW_1_RECV),
        .s_sc_req(S_SC_AW_1_REQ),
        .s_sc_send(S_SC_AW_1_SEND));
  bd_afc3_m31bn_0 m31_b_node
       (.m_sc_aclk(s_axi_aclk_1),
        .m_sc_aresetn(s_axi_aresetn_1),
        .m_sc_info(m31_b_node_M_SC_INFO),
        .m_sc_payld(m31_b_node_M_SC_PAYLD),
        .m_sc_recv(m31_b_node_M_SC_RECV),
        .m_sc_req(m31_b_node_M_SC_REQ),
        .m_sc_send(m31_b_node_M_SC_SEND),
        .s_sc_aclk(m_axi_aclk_1),
        .s_sc_aresetn(m_axi_aresetn_1),
        .s_sc_info(S_SC_B_1_INFO),
        .s_sc_payld(S_SC_B_1_PAYLD),
        .s_sc_recv(S_SC_B_1_RECV),
        .s_sc_req(S_SC_B_1_REQ),
        .s_sc_send(S_SC_B_1_SEND));
  bd_afc3_m31rn_0 m31_r_node
       (.m_sc_aclk(s_axi_aclk_1),
        .m_sc_aresetn(s_axi_aresetn_1),
        .m_sc_info(m31_r_node_M_SC_INFO),
        .m_sc_payld(m31_r_node_M_SC_PAYLD),
        .m_sc_recv(m31_r_node_M_SC_RECV),
        .m_sc_req(m31_r_node_M_SC_REQ),
        .m_sc_send(m31_r_node_M_SC_SEND),
        .s_sc_aclk(m_axi_aclk_1),
        .s_sc_aresetn(m_axi_aresetn_1),
        .s_sc_info(S_SC_R_1_INFO),
        .s_sc_payld(S_SC_R_1_PAYLD),
        .s_sc_recv(S_SC_R_1_RECV),
        .s_sc_req(S_SC_R_1_REQ),
        .s_sc_send(S_SC_R_1_SEND));
  bd_afc3_m31wn_0 m31_w_node
       (.m_sc_aclk(m_axi_aclk_1),
        .m_sc_aresetn(m_axi_aresetn_1),
        .m_sc_info(m31_w_node_M_SC_INFO),
        .m_sc_payld(m31_w_node_M_SC_PAYLD),
        .m_sc_recv(m31_w_node_M_SC_RECV),
        .m_sc_req(m31_w_node_M_SC_REQ),
        .m_sc_send(m31_w_node_M_SC_SEND),
        .s_sc_aclk(s_axi_aclk_1),
        .s_sc_aresetn(s_axi_aresetn_1),
        .s_sc_info(S_SC_W_1_INFO),
        .s_sc_payld(S_SC_W_1_PAYLD),
        .s_sc_recv(S_SC_W_1_RECV),
        .s_sc_req(S_SC_W_1_REQ),
        .s_sc_send(S_SC_W_1_SEND));
endmodule

module m32_exit_pipeline_imp_1EC2YSA
   (aclk,
    aresetn,
    m_axi_araddr,
    m_axi_arprot,
    m_axi_arready,
    m_axi_arvalid,
    m_axi_awaddr,
    m_axi_awprot,
    m_axi_awready,
    m_axi_awvalid,
    m_axi_bready,
    m_axi_bresp,
    m_axi_bvalid,
    m_axi_rdata,
    m_axi_rready,
    m_axi_rresp,
    m_axi_rvalid,
    m_axi_wdata,
    m_axi_wready,
    m_axi_wstrb,
    m_axi_wvalid,
    s_axi_araddr,
    s_axi_arcache,
    s_axi_arid,
    s_axi_arlen,
    s_axi_arlock,
    s_axi_arprot,
    s_axi_arqos,
    s_axi_arready,
    s_axi_aruser,
    s_axi_arvalid,
    s_axi_awaddr,
    s_axi_awcache,
    s_axi_awid,
    s_axi_awlen,
    s_axi_awlock,
    s_axi_awprot,
    s_axi_awqos,
    s_axi_awready,
    s_axi_awuser,
    s_axi_awvalid,
    s_axi_bid,
    s_axi_bready,
    s_axi_bresp,
    s_axi_buser,
    s_axi_bvalid,
    s_axi_rdata,
    s_axi_rid,
    s_axi_rlast,
    s_axi_rready,
    s_axi_rresp,
    s_axi_ruser,
    s_axi_rvalid,
    s_axi_wdata,
    s_axi_wlast,
    s_axi_wready,
    s_axi_wstrb,
    s_axi_wuser,
    s_axi_wvalid);
  input aclk;
  input aresetn;
  output [9:0]m_axi_araddr;
  output [2:0]m_axi_arprot;
  input m_axi_arready;
  output m_axi_arvalid;
  output [9:0]m_axi_awaddr;
  output [2:0]m_axi_awprot;
  input m_axi_awready;
  output m_axi_awvalid;
  output m_axi_bready;
  input [1:0]m_axi_bresp;
  input m_axi_bvalid;
  input [31:0]m_axi_rdata;
  output m_axi_rready;
  input [1:0]m_axi_rresp;
  input m_axi_rvalid;
  output [31:0]m_axi_wdata;
  input m_axi_wready;
  output [3:0]m_axi_wstrb;
  output m_axi_wvalid;
  input [9:0]s_axi_araddr;
  input [3:0]s_axi_arcache;
  input [2:0]s_axi_arid;
  input [7:0]s_axi_arlen;
  input [0:0]s_axi_arlock;
  input [2:0]s_axi_arprot;
  input [3:0]s_axi_arqos;
  output s_axi_arready;
  input [1023:0]s_axi_aruser;
  input s_axi_arvalid;
  input [9:0]s_axi_awaddr;
  input [3:0]s_axi_awcache;
  input [2:0]s_axi_awid;
  input [7:0]s_axi_awlen;
  input [0:0]s_axi_awlock;
  input [2:0]s_axi_awprot;
  input [3:0]s_axi_awqos;
  output s_axi_awready;
  input [1023:0]s_axi_awuser;
  input s_axi_awvalid;
  output [2:0]s_axi_bid;
  input s_axi_bready;
  output [1:0]s_axi_bresp;
  output [1023:0]s_axi_buser;
  output s_axi_bvalid;
  output [31:0]s_axi_rdata;
  output [2:0]s_axi_rid;
  output s_axi_rlast;
  input s_axi_rready;
  output [1:0]s_axi_rresp;
  output [1023:0]s_axi_ruser;
  output s_axi_rvalid;
  input [31:0]s_axi_wdata;
  input s_axi_wlast;
  output s_axi_wready;
  input [3:0]s_axi_wstrb;
  input [1023:0]s_axi_wuser;
  input s_axi_wvalid;

  wire aclk_1;
  wire aresetn_1;
  wire [9:0]m32_exit_M_AXI_ARADDR;
  wire [2:0]m32_exit_M_AXI_ARPROT;
  wire m32_exit_M_AXI_ARREADY;
  wire m32_exit_M_AXI_ARVALID;
  wire [9:0]m32_exit_M_AXI_AWADDR;
  wire [2:0]m32_exit_M_AXI_AWPROT;
  wire m32_exit_M_AXI_AWREADY;
  wire m32_exit_M_AXI_AWVALID;
  wire m32_exit_M_AXI_BREADY;
  wire [1:0]m32_exit_M_AXI_BRESP;
  wire m32_exit_M_AXI_BVALID;
  wire [31:0]m32_exit_M_AXI_RDATA;
  wire m32_exit_M_AXI_RREADY;
  wire [1:0]m32_exit_M_AXI_RRESP;
  wire m32_exit_M_AXI_RVALID;
  wire [31:0]m32_exit_M_AXI_WDATA;
  wire m32_exit_M_AXI_WREADY;
  wire [3:0]m32_exit_M_AXI_WSTRB;
  wire m32_exit_M_AXI_WVALID;
  wire [9:0]s_axi_1_ARADDR;
  wire [3:0]s_axi_1_ARCACHE;
  wire [2:0]s_axi_1_ARID;
  wire [7:0]s_axi_1_ARLEN;
  wire [0:0]s_axi_1_ARLOCK;
  wire [2:0]s_axi_1_ARPROT;
  wire [3:0]s_axi_1_ARQOS;
  wire s_axi_1_ARREADY;
  wire [1023:0]s_axi_1_ARUSER;
  wire s_axi_1_ARVALID;
  wire [9:0]s_axi_1_AWADDR;
  wire [3:0]s_axi_1_AWCACHE;
  wire [2:0]s_axi_1_AWID;
  wire [7:0]s_axi_1_AWLEN;
  wire [0:0]s_axi_1_AWLOCK;
  wire [2:0]s_axi_1_AWPROT;
  wire [3:0]s_axi_1_AWQOS;
  wire s_axi_1_AWREADY;
  wire [1023:0]s_axi_1_AWUSER;
  wire s_axi_1_AWVALID;
  wire [2:0]s_axi_1_BID;
  wire s_axi_1_BREADY;
  wire [1:0]s_axi_1_BRESP;
  wire [1023:0]s_axi_1_BUSER;
  wire s_axi_1_BVALID;
  wire [31:0]s_axi_1_RDATA;
  wire [2:0]s_axi_1_RID;
  wire s_axi_1_RLAST;
  wire s_axi_1_RREADY;
  wire [1:0]s_axi_1_RRESP;
  wire [1023:0]s_axi_1_RUSER;
  wire s_axi_1_RVALID;
  wire [31:0]s_axi_1_WDATA;
  wire s_axi_1_WLAST;
  wire s_axi_1_WREADY;
  wire [3:0]s_axi_1_WSTRB;
  wire [1023:0]s_axi_1_WUSER;
  wire s_axi_1_WVALID;

  assign aclk_1 = aclk;
  assign aresetn_1 = aresetn;
  assign m32_exit_M_AXI_ARREADY = m_axi_arready;
  assign m32_exit_M_AXI_AWREADY = m_axi_awready;
  assign m32_exit_M_AXI_BRESP = m_axi_bresp[1:0];
  assign m32_exit_M_AXI_BVALID = m_axi_bvalid;
  assign m32_exit_M_AXI_RDATA = m_axi_rdata[31:0];
  assign m32_exit_M_AXI_RRESP = m_axi_rresp[1:0];
  assign m32_exit_M_AXI_RVALID = m_axi_rvalid;
  assign m32_exit_M_AXI_WREADY = m_axi_wready;
  assign m_axi_araddr[9:0] = m32_exit_M_AXI_ARADDR;
  assign m_axi_arprot[2:0] = m32_exit_M_AXI_ARPROT;
  assign m_axi_arvalid = m32_exit_M_AXI_ARVALID;
  assign m_axi_awaddr[9:0] = m32_exit_M_AXI_AWADDR;
  assign m_axi_awprot[2:0] = m32_exit_M_AXI_AWPROT;
  assign m_axi_awvalid = m32_exit_M_AXI_AWVALID;
  assign m_axi_bready = m32_exit_M_AXI_BREADY;
  assign m_axi_rready = m32_exit_M_AXI_RREADY;
  assign m_axi_wdata[31:0] = m32_exit_M_AXI_WDATA;
  assign m_axi_wstrb[3:0] = m32_exit_M_AXI_WSTRB;
  assign m_axi_wvalid = m32_exit_M_AXI_WVALID;
  assign s_axi_1_ARADDR = s_axi_araddr[9:0];
  assign s_axi_1_ARCACHE = s_axi_arcache[3:0];
  assign s_axi_1_ARID = s_axi_arid[2:0];
  assign s_axi_1_ARLEN = s_axi_arlen[7:0];
  assign s_axi_1_ARLOCK = s_axi_arlock[0];
  assign s_axi_1_ARPROT = s_axi_arprot[2:0];
  assign s_axi_1_ARQOS = s_axi_arqos[3:0];
  assign s_axi_1_ARUSER = s_axi_aruser[1023:0];
  assign s_axi_1_ARVALID = s_axi_arvalid;
  assign s_axi_1_AWADDR = s_axi_awaddr[9:0];
  assign s_axi_1_AWCACHE = s_axi_awcache[3:0];
  assign s_axi_1_AWID = s_axi_awid[2:0];
  assign s_axi_1_AWLEN = s_axi_awlen[7:0];
  assign s_axi_1_AWLOCK = s_axi_awlock[0];
  assign s_axi_1_AWPROT = s_axi_awprot[2:0];
  assign s_axi_1_AWQOS = s_axi_awqos[3:0];
  assign s_axi_1_AWUSER = s_axi_awuser[1023:0];
  assign s_axi_1_AWVALID = s_axi_awvalid;
  assign s_axi_1_BREADY = s_axi_bready;
  assign s_axi_1_RREADY = s_axi_rready;
  assign s_axi_1_WDATA = s_axi_wdata[31:0];
  assign s_axi_1_WLAST = s_axi_wlast;
  assign s_axi_1_WSTRB = s_axi_wstrb[3:0];
  assign s_axi_1_WUSER = s_axi_wuser[1023:0];
  assign s_axi_1_WVALID = s_axi_wvalid;
  assign s_axi_arready = s_axi_1_ARREADY;
  assign s_axi_awready = s_axi_1_AWREADY;
  assign s_axi_bid[2:0] = s_axi_1_BID;
  assign s_axi_bresp[1:0] = s_axi_1_BRESP;
  assign s_axi_buser[1023:0] = s_axi_1_BUSER;
  assign s_axi_bvalid = s_axi_1_BVALID;
  assign s_axi_rdata[31:0] = s_axi_1_RDATA;
  assign s_axi_rid[2:0] = s_axi_1_RID;
  assign s_axi_rlast = s_axi_1_RLAST;
  assign s_axi_rresp[1:0] = s_axi_1_RRESP;
  assign s_axi_ruser[1023:0] = s_axi_1_RUSER;
  assign s_axi_rvalid = s_axi_1_RVALID;
  assign s_axi_wready = s_axi_1_WREADY;
  bd_afc3_m32e_0 m32_exit
       (.aclk(aclk_1),
        .aresetn(aresetn_1),
        .m_axi_araddr(m32_exit_M_AXI_ARADDR),
        .m_axi_arprot(m32_exit_M_AXI_ARPROT),
        .m_axi_arready(m32_exit_M_AXI_ARREADY),
        .m_axi_arvalid(m32_exit_M_AXI_ARVALID),
        .m_axi_awaddr(m32_exit_M_AXI_AWADDR),
        .m_axi_awprot(m32_exit_M_AXI_AWPROT),
        .m_axi_awready(m32_exit_M_AXI_AWREADY),
        .m_axi_awvalid(m32_exit_M_AXI_AWVALID),
        .m_axi_bready(m32_exit_M_AXI_BREADY),
        .m_axi_bresp(m32_exit_M_AXI_BRESP),
        .m_axi_bvalid(m32_exit_M_AXI_BVALID),
        .m_axi_rdata(m32_exit_M_AXI_RDATA),
        .m_axi_rready(m32_exit_M_AXI_RREADY),
        .m_axi_rresp(m32_exit_M_AXI_RRESP),
        .m_axi_rvalid(m32_exit_M_AXI_RVALID),
        .m_axi_wdata(m32_exit_M_AXI_WDATA),
        .m_axi_wready(m32_exit_M_AXI_WREADY),
        .m_axi_wstrb(m32_exit_M_AXI_WSTRB),
        .m_axi_wvalid(m32_exit_M_AXI_WVALID),
        .s_axi_araddr(s_axi_1_ARADDR),
        .s_axi_arcache(s_axi_1_ARCACHE),
        .s_axi_arid(s_axi_1_ARID),
        .s_axi_arlen(s_axi_1_ARLEN),
        .s_axi_arlock(s_axi_1_ARLOCK),
        .s_axi_arprot(s_axi_1_ARPROT),
        .s_axi_arqos(s_axi_1_ARQOS),
        .s_axi_arready(s_axi_1_ARREADY),
        .s_axi_aruser(s_axi_1_ARUSER),
        .s_axi_arvalid(s_axi_1_ARVALID),
        .s_axi_awaddr(s_axi_1_AWADDR),
        .s_axi_awcache(s_axi_1_AWCACHE),
        .s_axi_awid(s_axi_1_AWID),
        .s_axi_awlen(s_axi_1_AWLEN),
        .s_axi_awlock(s_axi_1_AWLOCK),
        .s_axi_awprot(s_axi_1_AWPROT),
        .s_axi_awqos(s_axi_1_AWQOS),
        .s_axi_awready(s_axi_1_AWREADY),
        .s_axi_awuser(s_axi_1_AWUSER),
        .s_axi_awvalid(s_axi_1_AWVALID),
        .s_axi_bid(s_axi_1_BID),
        .s_axi_bready(s_axi_1_BREADY),
        .s_axi_bresp(s_axi_1_BRESP),
        .s_axi_buser(s_axi_1_BUSER),
        .s_axi_bvalid(s_axi_1_BVALID),
        .s_axi_rdata(s_axi_1_RDATA),
        .s_axi_rid(s_axi_1_RID),
        .s_axi_rlast(s_axi_1_RLAST),
        .s_axi_rready(s_axi_1_RREADY),
        .s_axi_rresp(s_axi_1_RRESP),
        .s_axi_ruser(s_axi_1_RUSER),
        .s_axi_rvalid(s_axi_1_RVALID),
        .s_axi_wdata(s_axi_1_WDATA),
        .s_axi_wlast(s_axi_1_WLAST),
        .s_axi_wready(s_axi_1_WREADY),
        .s_axi_wstrb(s_axi_1_WSTRB),
        .s_axi_wuser(s_axi_1_WUSER),
        .s_axi_wvalid(s_axi_1_WVALID));
endmodule

module m32_nodes_imp_LMWO2N
   (M_SC_AR_info,
    M_SC_AR_payld,
    M_SC_AR_recv,
    M_SC_AR_req,
    M_SC_AR_send,
    M_SC_AW_info,
    M_SC_AW_payld,
    M_SC_AW_recv,
    M_SC_AW_req,
    M_SC_AW_send,
    M_SC_B_info,
    M_SC_B_payld,
    M_SC_B_recv,
    M_SC_B_req,
    M_SC_B_send,
    M_SC_R_info,
    M_SC_R_payld,
    M_SC_R_recv,
    M_SC_R_req,
    M_SC_R_send,
    M_SC_W_info,
    M_SC_W_payld,
    M_SC_W_recv,
    M_SC_W_req,
    M_SC_W_send,
    S_SC_AR_info,
    S_SC_AR_payld,
    S_SC_AR_recv,
    S_SC_AR_req,
    S_SC_AR_send,
    S_SC_AW_info,
    S_SC_AW_payld,
    S_SC_AW_recv,
    S_SC_AW_req,
    S_SC_AW_send,
    S_SC_B_info,
    S_SC_B_payld,
    S_SC_B_recv,
    S_SC_B_req,
    S_SC_B_send,
    S_SC_R_info,
    S_SC_R_payld,
    S_SC_R_recv,
    S_SC_R_req,
    S_SC_R_send,
    S_SC_W_info,
    S_SC_W_payld,
    S_SC_W_recv,
    S_SC_W_req,
    S_SC_W_send,
    m_axi_aclk,
    m_axi_aresetn,
    s_axi_aclk,
    s_axi_aresetn);
  output [0:0]M_SC_AR_info;
  output [181:0]M_SC_AR_payld;
  input [0:0]M_SC_AR_recv;
  output [0:0]M_SC_AR_req;
  output [0:0]M_SC_AR_send;
  output [0:0]M_SC_AW_info;
  output [181:0]M_SC_AW_payld;
  input [0:0]M_SC_AW_recv;
  output [0:0]M_SC_AW_req;
  output [0:0]M_SC_AW_send;
  output [0:0]M_SC_B_info;
  output [8:0]M_SC_B_payld;
  input [0:0]M_SC_B_recv;
  output [0:0]M_SC_B_req;
  output [0:0]M_SC_B_send;
  output [0:0]M_SC_R_info;
  output [54:0]M_SC_R_payld;
  input [0:0]M_SC_R_recv;
  output [0:0]M_SC_R_req;
  output [0:0]M_SC_R_send;
  output [0:0]M_SC_W_info;
  output [68:0]M_SC_W_payld;
  input [0:0]M_SC_W_recv;
  output [0:0]M_SC_W_req;
  output [0:0]M_SC_W_send;
  input [0:0]S_SC_AR_info;
  input [181:0]S_SC_AR_payld;
  output [0:0]S_SC_AR_recv;
  input [0:0]S_SC_AR_req;
  input [0:0]S_SC_AR_send;
  input [0:0]S_SC_AW_info;
  input [181:0]S_SC_AW_payld;
  output [0:0]S_SC_AW_recv;
  input [0:0]S_SC_AW_req;
  input [0:0]S_SC_AW_send;
  input [0:0]S_SC_B_info;
  input [8:0]S_SC_B_payld;
  output [0:0]S_SC_B_recv;
  input [0:0]S_SC_B_req;
  input [0:0]S_SC_B_send;
  input [0:0]S_SC_R_info;
  input [54:0]S_SC_R_payld;
  output [0:0]S_SC_R_recv;
  input [0:0]S_SC_R_req;
  input [0:0]S_SC_R_send;
  input [0:0]S_SC_W_info;
  input [68:0]S_SC_W_payld;
  output [0:0]S_SC_W_recv;
  input [0:0]S_SC_W_req;
  input [0:0]S_SC_W_send;
  input m_axi_aclk;
  input m_axi_aresetn;
  input s_axi_aclk;
  input s_axi_aresetn;

  wire [0:0]S_SC_AR_1_INFO;
  wire [181:0]S_SC_AR_1_PAYLD;
  wire [0:0]S_SC_AR_1_RECV;
  wire [0:0]S_SC_AR_1_REQ;
  wire [0:0]S_SC_AR_1_SEND;
  wire [0:0]S_SC_AW_1_INFO;
  wire [181:0]S_SC_AW_1_PAYLD;
  wire [0:0]S_SC_AW_1_RECV;
  wire [0:0]S_SC_AW_1_REQ;
  wire [0:0]S_SC_AW_1_SEND;
  wire [0:0]S_SC_B_1_INFO;
  wire [8:0]S_SC_B_1_PAYLD;
  wire [0:0]S_SC_B_1_RECV;
  wire [0:0]S_SC_B_1_REQ;
  wire [0:0]S_SC_B_1_SEND;
  wire [0:0]S_SC_R_1_INFO;
  wire [54:0]S_SC_R_1_PAYLD;
  wire [0:0]S_SC_R_1_RECV;
  wire [0:0]S_SC_R_1_REQ;
  wire [0:0]S_SC_R_1_SEND;
  wire [0:0]S_SC_W_1_INFO;
  wire [68:0]S_SC_W_1_PAYLD;
  wire [0:0]S_SC_W_1_RECV;
  wire [0:0]S_SC_W_1_REQ;
  wire [0:0]S_SC_W_1_SEND;
  wire [0:0]m32_ar_node_M_SC_INFO;
  wire [181:0]m32_ar_node_M_SC_PAYLD;
  wire [0:0]m32_ar_node_M_SC_RECV;
  wire [0:0]m32_ar_node_M_SC_REQ;
  wire [0:0]m32_ar_node_M_SC_SEND;
  wire [0:0]m32_aw_node_M_SC_INFO;
  wire [181:0]m32_aw_node_M_SC_PAYLD;
  wire [0:0]m32_aw_node_M_SC_RECV;
  wire [0:0]m32_aw_node_M_SC_REQ;
  wire [0:0]m32_aw_node_M_SC_SEND;
  wire [0:0]m32_b_node_M_SC_INFO;
  wire [8:0]m32_b_node_M_SC_PAYLD;
  wire [0:0]m32_b_node_M_SC_RECV;
  wire [0:0]m32_b_node_M_SC_REQ;
  wire [0:0]m32_b_node_M_SC_SEND;
  wire [0:0]m32_r_node_M_SC_INFO;
  wire [54:0]m32_r_node_M_SC_PAYLD;
  wire [0:0]m32_r_node_M_SC_RECV;
  wire [0:0]m32_r_node_M_SC_REQ;
  wire [0:0]m32_r_node_M_SC_SEND;
  wire [0:0]m32_w_node_M_SC_INFO;
  wire [68:0]m32_w_node_M_SC_PAYLD;
  wire [0:0]m32_w_node_M_SC_RECV;
  wire [0:0]m32_w_node_M_SC_REQ;
  wire [0:0]m32_w_node_M_SC_SEND;
  wire m_axi_aclk_1;
  wire m_axi_aresetn_1;
  wire s_axi_aclk_1;
  wire s_axi_aresetn_1;

  assign M_SC_AR_info[0] = m32_ar_node_M_SC_INFO;
  assign M_SC_AR_payld[181:0] = m32_ar_node_M_SC_PAYLD;
  assign M_SC_AR_req[0] = m32_ar_node_M_SC_REQ;
  assign M_SC_AR_send[0] = m32_ar_node_M_SC_SEND;
  assign M_SC_AW_info[0] = m32_aw_node_M_SC_INFO;
  assign M_SC_AW_payld[181:0] = m32_aw_node_M_SC_PAYLD;
  assign M_SC_AW_req[0] = m32_aw_node_M_SC_REQ;
  assign M_SC_AW_send[0] = m32_aw_node_M_SC_SEND;
  assign M_SC_B_info[0] = m32_b_node_M_SC_INFO;
  assign M_SC_B_payld[8:0] = m32_b_node_M_SC_PAYLD;
  assign M_SC_B_req[0] = m32_b_node_M_SC_REQ;
  assign M_SC_B_send[0] = m32_b_node_M_SC_SEND;
  assign M_SC_R_info[0] = m32_r_node_M_SC_INFO;
  assign M_SC_R_payld[54:0] = m32_r_node_M_SC_PAYLD;
  assign M_SC_R_req[0] = m32_r_node_M_SC_REQ;
  assign M_SC_R_send[0] = m32_r_node_M_SC_SEND;
  assign M_SC_W_info[0] = m32_w_node_M_SC_INFO;
  assign M_SC_W_payld[68:0] = m32_w_node_M_SC_PAYLD;
  assign M_SC_W_req[0] = m32_w_node_M_SC_REQ;
  assign M_SC_W_send[0] = m32_w_node_M_SC_SEND;
  assign S_SC_AR_1_INFO = S_SC_AR_info[0];
  assign S_SC_AR_1_PAYLD = S_SC_AR_payld[181:0];
  assign S_SC_AR_1_REQ = S_SC_AR_req[0];
  assign S_SC_AR_1_SEND = S_SC_AR_send[0];
  assign S_SC_AR_recv[0] = S_SC_AR_1_RECV;
  assign S_SC_AW_1_INFO = S_SC_AW_info[0];
  assign S_SC_AW_1_PAYLD = S_SC_AW_payld[181:0];
  assign S_SC_AW_1_REQ = S_SC_AW_req[0];
  assign S_SC_AW_1_SEND = S_SC_AW_send[0];
  assign S_SC_AW_recv[0] = S_SC_AW_1_RECV;
  assign S_SC_B_1_INFO = S_SC_B_info[0];
  assign S_SC_B_1_PAYLD = S_SC_B_payld[8:0];
  assign S_SC_B_1_REQ = S_SC_B_req[0];
  assign S_SC_B_1_SEND = S_SC_B_send[0];
  assign S_SC_B_recv[0] = S_SC_B_1_RECV;
  assign S_SC_R_1_INFO = S_SC_R_info[0];
  assign S_SC_R_1_PAYLD = S_SC_R_payld[54:0];
  assign S_SC_R_1_REQ = S_SC_R_req[0];
  assign S_SC_R_1_SEND = S_SC_R_send[0];
  assign S_SC_R_recv[0] = S_SC_R_1_RECV;
  assign S_SC_W_1_INFO = S_SC_W_info[0];
  assign S_SC_W_1_PAYLD = S_SC_W_payld[68:0];
  assign S_SC_W_1_REQ = S_SC_W_req[0];
  assign S_SC_W_1_SEND = S_SC_W_send[0];
  assign S_SC_W_recv[0] = S_SC_W_1_RECV;
  assign m32_ar_node_M_SC_RECV = M_SC_AR_recv[0];
  assign m32_aw_node_M_SC_RECV = M_SC_AW_recv[0];
  assign m32_b_node_M_SC_RECV = M_SC_B_recv[0];
  assign m32_r_node_M_SC_RECV = M_SC_R_recv[0];
  assign m32_w_node_M_SC_RECV = M_SC_W_recv[0];
  assign m_axi_aclk_1 = m_axi_aclk;
  assign m_axi_aresetn_1 = m_axi_aresetn;
  assign s_axi_aclk_1 = s_axi_aclk;
  assign s_axi_aresetn_1 = s_axi_aresetn;
  bd_afc3_m32arn_0 m32_ar_node
       (.m_sc_aclk(m_axi_aclk_1),
        .m_sc_aresetn(m_axi_aresetn_1),
        .m_sc_info(m32_ar_node_M_SC_INFO),
        .m_sc_payld(m32_ar_node_M_SC_PAYLD),
        .m_sc_recv(m32_ar_node_M_SC_RECV),
        .m_sc_req(m32_ar_node_M_SC_REQ),
        .m_sc_send(m32_ar_node_M_SC_SEND),
        .s_sc_aclk(s_axi_aclk_1),
        .s_sc_aresetn(s_axi_aresetn_1),
        .s_sc_info(S_SC_AR_1_INFO),
        .s_sc_payld(S_SC_AR_1_PAYLD),
        .s_sc_recv(S_SC_AR_1_RECV),
        .s_sc_req(S_SC_AR_1_REQ),
        .s_sc_send(S_SC_AR_1_SEND));
  bd_afc3_m32awn_0 m32_aw_node
       (.m_sc_aclk(m_axi_aclk_1),
        .m_sc_aresetn(m_axi_aresetn_1),
        .m_sc_info(m32_aw_node_M_SC_INFO),
        .m_sc_payld(m32_aw_node_M_SC_PAYLD),
        .m_sc_recv(m32_aw_node_M_SC_RECV),
        .m_sc_req(m32_aw_node_M_SC_REQ),
        .m_sc_send(m32_aw_node_M_SC_SEND),
        .s_sc_aclk(s_axi_aclk_1),
        .s_sc_aresetn(s_axi_aresetn_1),
        .s_sc_info(S_SC_AW_1_INFO),
        .s_sc_payld(S_SC_AW_1_PAYLD),
        .s_sc_recv(S_SC_AW_1_RECV),
        .s_sc_req(S_SC_AW_1_REQ),
        .s_sc_send(S_SC_AW_1_SEND));
  bd_afc3_m32bn_0 m32_b_node
       (.m_sc_aclk(s_axi_aclk_1),
        .m_sc_aresetn(s_axi_aresetn_1),
        .m_sc_info(m32_b_node_M_SC_INFO),
        .m_sc_payld(m32_b_node_M_SC_PAYLD),
        .m_sc_recv(m32_b_node_M_SC_RECV),
        .m_sc_req(m32_b_node_M_SC_REQ),
        .m_sc_send(m32_b_node_M_SC_SEND),
        .s_sc_aclk(m_axi_aclk_1),
        .s_sc_aresetn(m_axi_aresetn_1),
        .s_sc_info(S_SC_B_1_INFO),
        .s_sc_payld(S_SC_B_1_PAYLD),
        .s_sc_recv(S_SC_B_1_RECV),
        .s_sc_req(S_SC_B_1_REQ),
        .s_sc_send(S_SC_B_1_SEND));
  bd_afc3_m32rn_0 m32_r_node
       (.m_sc_aclk(s_axi_aclk_1),
        .m_sc_aresetn(s_axi_aresetn_1),
        .m_sc_info(m32_r_node_M_SC_INFO),
        .m_sc_payld(m32_r_node_M_SC_PAYLD),
        .m_sc_recv(m32_r_node_M_SC_RECV),
        .m_sc_req(m32_r_node_M_SC_REQ),
        .m_sc_send(m32_r_node_M_SC_SEND),
        .s_sc_aclk(m_axi_aclk_1),
        .s_sc_aresetn(m_axi_aresetn_1),
        .s_sc_info(S_SC_R_1_INFO),
        .s_sc_payld(S_SC_R_1_PAYLD),
        .s_sc_recv(S_SC_R_1_RECV),
        .s_sc_req(S_SC_R_1_REQ),
        .s_sc_send(S_SC_R_1_SEND));
  bd_afc3_m32wn_0 m32_w_node
       (.m_sc_aclk(m_axi_aclk_1),
        .m_sc_aresetn(m_axi_aresetn_1),
        .m_sc_info(m32_w_node_M_SC_INFO),
        .m_sc_payld(m32_w_node_M_SC_PAYLD),
        .m_sc_recv(m32_w_node_M_SC_RECV),
        .m_sc_req(m32_w_node_M_SC_REQ),
        .m_sc_send(m32_w_node_M_SC_SEND),
        .s_sc_aclk(s_axi_aclk_1),
        .s_sc_aresetn(s_axi_aresetn_1),
        .s_sc_info(S_SC_W_1_INFO),
        .s_sc_payld(S_SC_W_1_PAYLD),
        .s_sc_recv(S_SC_W_1_RECV),
        .s_sc_req(S_SC_W_1_REQ),
        .s_sc_send(S_SC_W_1_SEND));
endmodule

module m33_exit_pipeline_imp_190QOUY
   (aclk,
    aresetn,
    m_axi_araddr,
    m_axi_arprot,
    m_axi_arready,
    m_axi_arvalid,
    m_axi_awaddr,
    m_axi_awprot,
    m_axi_awready,
    m_axi_awvalid,
    m_axi_bready,
    m_axi_bresp,
    m_axi_bvalid,
    m_axi_rdata,
    m_axi_rready,
    m_axi_rresp,
    m_axi_rvalid,
    m_axi_wdata,
    m_axi_wready,
    m_axi_wstrb,
    m_axi_wvalid,
    s_axi_araddr,
    s_axi_arcache,
    s_axi_arid,
    s_axi_arlen,
    s_axi_arlock,
    s_axi_arprot,
    s_axi_arqos,
    s_axi_arready,
    s_axi_aruser,
    s_axi_arvalid,
    s_axi_awaddr,
    s_axi_awcache,
    s_axi_awid,
    s_axi_awlen,
    s_axi_awlock,
    s_axi_awprot,
    s_axi_awqos,
    s_axi_awready,
    s_axi_awuser,
    s_axi_awvalid,
    s_axi_bid,
    s_axi_bready,
    s_axi_bresp,
    s_axi_buser,
    s_axi_bvalid,
    s_axi_rdata,
    s_axi_rid,
    s_axi_rlast,
    s_axi_rready,
    s_axi_rresp,
    s_axi_ruser,
    s_axi_rvalid,
    s_axi_wdata,
    s_axi_wlast,
    s_axi_wready,
    s_axi_wstrb,
    s_axi_wuser,
    s_axi_wvalid);
  input aclk;
  input aresetn;
  output [9:0]m_axi_araddr;
  output [2:0]m_axi_arprot;
  input m_axi_arready;
  output m_axi_arvalid;
  output [9:0]m_axi_awaddr;
  output [2:0]m_axi_awprot;
  input m_axi_awready;
  output m_axi_awvalid;
  output m_axi_bready;
  input [1:0]m_axi_bresp;
  input m_axi_bvalid;
  input [31:0]m_axi_rdata;
  output m_axi_rready;
  input [1:0]m_axi_rresp;
  input m_axi_rvalid;
  output [31:0]m_axi_wdata;
  input m_axi_wready;
  output [3:0]m_axi_wstrb;
  output m_axi_wvalid;
  input [9:0]s_axi_araddr;
  input [3:0]s_axi_arcache;
  input [2:0]s_axi_arid;
  input [7:0]s_axi_arlen;
  input [0:0]s_axi_arlock;
  input [2:0]s_axi_arprot;
  input [3:0]s_axi_arqos;
  output s_axi_arready;
  input [1023:0]s_axi_aruser;
  input s_axi_arvalid;
  input [9:0]s_axi_awaddr;
  input [3:0]s_axi_awcache;
  input [2:0]s_axi_awid;
  input [7:0]s_axi_awlen;
  input [0:0]s_axi_awlock;
  input [2:0]s_axi_awprot;
  input [3:0]s_axi_awqos;
  output s_axi_awready;
  input [1023:0]s_axi_awuser;
  input s_axi_awvalid;
  output [2:0]s_axi_bid;
  input s_axi_bready;
  output [1:0]s_axi_bresp;
  output [1023:0]s_axi_buser;
  output s_axi_bvalid;
  output [31:0]s_axi_rdata;
  output [2:0]s_axi_rid;
  output s_axi_rlast;
  input s_axi_rready;
  output [1:0]s_axi_rresp;
  output [1023:0]s_axi_ruser;
  output s_axi_rvalid;
  input [31:0]s_axi_wdata;
  input s_axi_wlast;
  output s_axi_wready;
  input [3:0]s_axi_wstrb;
  input [1023:0]s_axi_wuser;
  input s_axi_wvalid;

  wire aclk_1;
  wire aresetn_1;
  wire [9:0]m33_exit_M_AXI_ARADDR;
  wire [2:0]m33_exit_M_AXI_ARPROT;
  wire m33_exit_M_AXI_ARREADY;
  wire m33_exit_M_AXI_ARVALID;
  wire [9:0]m33_exit_M_AXI_AWADDR;
  wire [2:0]m33_exit_M_AXI_AWPROT;
  wire m33_exit_M_AXI_AWREADY;
  wire m33_exit_M_AXI_AWVALID;
  wire m33_exit_M_AXI_BREADY;
  wire [1:0]m33_exit_M_AXI_BRESP;
  wire m33_exit_M_AXI_BVALID;
  wire [31:0]m33_exit_M_AXI_RDATA;
  wire m33_exit_M_AXI_RREADY;
  wire [1:0]m33_exit_M_AXI_RRESP;
  wire m33_exit_M_AXI_RVALID;
  wire [31:0]m33_exit_M_AXI_WDATA;
  wire m33_exit_M_AXI_WREADY;
  wire [3:0]m33_exit_M_AXI_WSTRB;
  wire m33_exit_M_AXI_WVALID;
  wire [9:0]s_axi_1_ARADDR;
  wire [3:0]s_axi_1_ARCACHE;
  wire [2:0]s_axi_1_ARID;
  wire [7:0]s_axi_1_ARLEN;
  wire [0:0]s_axi_1_ARLOCK;
  wire [2:0]s_axi_1_ARPROT;
  wire [3:0]s_axi_1_ARQOS;
  wire s_axi_1_ARREADY;
  wire [1023:0]s_axi_1_ARUSER;
  wire s_axi_1_ARVALID;
  wire [9:0]s_axi_1_AWADDR;
  wire [3:0]s_axi_1_AWCACHE;
  wire [2:0]s_axi_1_AWID;
  wire [7:0]s_axi_1_AWLEN;
  wire [0:0]s_axi_1_AWLOCK;
  wire [2:0]s_axi_1_AWPROT;
  wire [3:0]s_axi_1_AWQOS;
  wire s_axi_1_AWREADY;
  wire [1023:0]s_axi_1_AWUSER;
  wire s_axi_1_AWVALID;
  wire [2:0]s_axi_1_BID;
  wire s_axi_1_BREADY;
  wire [1:0]s_axi_1_BRESP;
  wire [1023:0]s_axi_1_BUSER;
  wire s_axi_1_BVALID;
  wire [31:0]s_axi_1_RDATA;
  wire [2:0]s_axi_1_RID;
  wire s_axi_1_RLAST;
  wire s_axi_1_RREADY;
  wire [1:0]s_axi_1_RRESP;
  wire [1023:0]s_axi_1_RUSER;
  wire s_axi_1_RVALID;
  wire [31:0]s_axi_1_WDATA;
  wire s_axi_1_WLAST;
  wire s_axi_1_WREADY;
  wire [3:0]s_axi_1_WSTRB;
  wire [1023:0]s_axi_1_WUSER;
  wire s_axi_1_WVALID;

  assign aclk_1 = aclk;
  assign aresetn_1 = aresetn;
  assign m33_exit_M_AXI_ARREADY = m_axi_arready;
  assign m33_exit_M_AXI_AWREADY = m_axi_awready;
  assign m33_exit_M_AXI_BRESP = m_axi_bresp[1:0];
  assign m33_exit_M_AXI_BVALID = m_axi_bvalid;
  assign m33_exit_M_AXI_RDATA = m_axi_rdata[31:0];
  assign m33_exit_M_AXI_RRESP = m_axi_rresp[1:0];
  assign m33_exit_M_AXI_RVALID = m_axi_rvalid;
  assign m33_exit_M_AXI_WREADY = m_axi_wready;
  assign m_axi_araddr[9:0] = m33_exit_M_AXI_ARADDR;
  assign m_axi_arprot[2:0] = m33_exit_M_AXI_ARPROT;
  assign m_axi_arvalid = m33_exit_M_AXI_ARVALID;
  assign m_axi_awaddr[9:0] = m33_exit_M_AXI_AWADDR;
  assign m_axi_awprot[2:0] = m33_exit_M_AXI_AWPROT;
  assign m_axi_awvalid = m33_exit_M_AXI_AWVALID;
  assign m_axi_bready = m33_exit_M_AXI_BREADY;
  assign m_axi_rready = m33_exit_M_AXI_RREADY;
  assign m_axi_wdata[31:0] = m33_exit_M_AXI_WDATA;
  assign m_axi_wstrb[3:0] = m33_exit_M_AXI_WSTRB;
  assign m_axi_wvalid = m33_exit_M_AXI_WVALID;
  assign s_axi_1_ARADDR = s_axi_araddr[9:0];
  assign s_axi_1_ARCACHE = s_axi_arcache[3:0];
  assign s_axi_1_ARID = s_axi_arid[2:0];
  assign s_axi_1_ARLEN = s_axi_arlen[7:0];
  assign s_axi_1_ARLOCK = s_axi_arlock[0];
  assign s_axi_1_ARPROT = s_axi_arprot[2:0];
  assign s_axi_1_ARQOS = s_axi_arqos[3:0];
  assign s_axi_1_ARUSER = s_axi_aruser[1023:0];
  assign s_axi_1_ARVALID = s_axi_arvalid;
  assign s_axi_1_AWADDR = s_axi_awaddr[9:0];
  assign s_axi_1_AWCACHE = s_axi_awcache[3:0];
  assign s_axi_1_AWID = s_axi_awid[2:0];
  assign s_axi_1_AWLEN = s_axi_awlen[7:0];
  assign s_axi_1_AWLOCK = s_axi_awlock[0];
  assign s_axi_1_AWPROT = s_axi_awprot[2:0];
  assign s_axi_1_AWQOS = s_axi_awqos[3:0];
  assign s_axi_1_AWUSER = s_axi_awuser[1023:0];
  assign s_axi_1_AWVALID = s_axi_awvalid;
  assign s_axi_1_BREADY = s_axi_bready;
  assign s_axi_1_RREADY = s_axi_rready;
  assign s_axi_1_WDATA = s_axi_wdata[31:0];
  assign s_axi_1_WLAST = s_axi_wlast;
  assign s_axi_1_WSTRB = s_axi_wstrb[3:0];
  assign s_axi_1_WUSER = s_axi_wuser[1023:0];
  assign s_axi_1_WVALID = s_axi_wvalid;
  assign s_axi_arready = s_axi_1_ARREADY;
  assign s_axi_awready = s_axi_1_AWREADY;
  assign s_axi_bid[2:0] = s_axi_1_BID;
  assign s_axi_bresp[1:0] = s_axi_1_BRESP;
  assign s_axi_buser[1023:0] = s_axi_1_BUSER;
  assign s_axi_bvalid = s_axi_1_BVALID;
  assign s_axi_rdata[31:0] = s_axi_1_RDATA;
  assign s_axi_rid[2:0] = s_axi_1_RID;
  assign s_axi_rlast = s_axi_1_RLAST;
  assign s_axi_rresp[1:0] = s_axi_1_RRESP;
  assign s_axi_ruser[1023:0] = s_axi_1_RUSER;
  assign s_axi_rvalid = s_axi_1_RVALID;
  assign s_axi_wready = s_axi_1_WREADY;
  bd_afc3_m33e_0 m33_exit
       (.aclk(aclk_1),
        .aresetn(aresetn_1),
        .m_axi_araddr(m33_exit_M_AXI_ARADDR),
        .m_axi_arprot(m33_exit_M_AXI_ARPROT),
        .m_axi_arready(m33_exit_M_AXI_ARREADY),
        .m_axi_arvalid(m33_exit_M_AXI_ARVALID),
        .m_axi_awaddr(m33_exit_M_AXI_AWADDR),
        .m_axi_awprot(m33_exit_M_AXI_AWPROT),
        .m_axi_awready(m33_exit_M_AXI_AWREADY),
        .m_axi_awvalid(m33_exit_M_AXI_AWVALID),
        .m_axi_bready(m33_exit_M_AXI_BREADY),
        .m_axi_bresp(m33_exit_M_AXI_BRESP),
        .m_axi_bvalid(m33_exit_M_AXI_BVALID),
        .m_axi_rdata(m33_exit_M_AXI_RDATA),
        .m_axi_rready(m33_exit_M_AXI_RREADY),
        .m_axi_rresp(m33_exit_M_AXI_RRESP),
        .m_axi_rvalid(m33_exit_M_AXI_RVALID),
        .m_axi_wdata(m33_exit_M_AXI_WDATA),
        .m_axi_wready(m33_exit_M_AXI_WREADY),
        .m_axi_wstrb(m33_exit_M_AXI_WSTRB),
        .m_axi_wvalid(m33_exit_M_AXI_WVALID),
        .s_axi_araddr(s_axi_1_ARADDR),
        .s_axi_arcache(s_axi_1_ARCACHE),
        .s_axi_arid(s_axi_1_ARID),
        .s_axi_arlen(s_axi_1_ARLEN),
        .s_axi_arlock(s_axi_1_ARLOCK),
        .s_axi_arprot(s_axi_1_ARPROT),
        .s_axi_arqos(s_axi_1_ARQOS),
        .s_axi_arready(s_axi_1_ARREADY),
        .s_axi_aruser(s_axi_1_ARUSER),
        .s_axi_arvalid(s_axi_1_ARVALID),
        .s_axi_awaddr(s_axi_1_AWADDR),
        .s_axi_awcache(s_axi_1_AWCACHE),
        .s_axi_awid(s_axi_1_AWID),
        .s_axi_awlen(s_axi_1_AWLEN),
        .s_axi_awlock(s_axi_1_AWLOCK),
        .s_axi_awprot(s_axi_1_AWPROT),
        .s_axi_awqos(s_axi_1_AWQOS),
        .s_axi_awready(s_axi_1_AWREADY),
        .s_axi_awuser(s_axi_1_AWUSER),
        .s_axi_awvalid(s_axi_1_AWVALID),
        .s_axi_bid(s_axi_1_BID),
        .s_axi_bready(s_axi_1_BREADY),
        .s_axi_bresp(s_axi_1_BRESP),
        .s_axi_buser(s_axi_1_BUSER),
        .s_axi_bvalid(s_axi_1_BVALID),
        .s_axi_rdata(s_axi_1_RDATA),
        .s_axi_rid(s_axi_1_RID),
        .s_axi_rlast(s_axi_1_RLAST),
        .s_axi_rready(s_axi_1_RREADY),
        .s_axi_rresp(s_axi_1_RRESP),
        .s_axi_ruser(s_axi_1_RUSER),
        .s_axi_rvalid(s_axi_1_RVALID),
        .s_axi_wdata(s_axi_1_WDATA),
        .s_axi_wlast(s_axi_1_WLAST),
        .s_axi_wready(s_axi_1_WREADY),
        .s_axi_wstrb(s_axi_1_WSTRB),
        .s_axi_wuser(s_axi_1_WUSER),
        .s_axi_wvalid(s_axi_1_WVALID));
endmodule

module m33_nodes_imp_1LZ89T5
   (M_SC_AR_info,
    M_SC_AR_payld,
    M_SC_AR_recv,
    M_SC_AR_req,
    M_SC_AR_send,
    M_SC_AW_info,
    M_SC_AW_payld,
    M_SC_AW_recv,
    M_SC_AW_req,
    M_SC_AW_send,
    M_SC_B_info,
    M_SC_B_payld,
    M_SC_B_recv,
    M_SC_B_req,
    M_SC_B_send,
    M_SC_R_info,
    M_SC_R_payld,
    M_SC_R_recv,
    M_SC_R_req,
    M_SC_R_send,
    M_SC_W_info,
    M_SC_W_payld,
    M_SC_W_recv,
    M_SC_W_req,
    M_SC_W_send,
    S_SC_AR_info,
    S_SC_AR_payld,
    S_SC_AR_recv,
    S_SC_AR_req,
    S_SC_AR_send,
    S_SC_AW_info,
    S_SC_AW_payld,
    S_SC_AW_recv,
    S_SC_AW_req,
    S_SC_AW_send,
    S_SC_B_info,
    S_SC_B_payld,
    S_SC_B_recv,
    S_SC_B_req,
    S_SC_B_send,
    S_SC_R_info,
    S_SC_R_payld,
    S_SC_R_recv,
    S_SC_R_req,
    S_SC_R_send,
    S_SC_W_info,
    S_SC_W_payld,
    S_SC_W_recv,
    S_SC_W_req,
    S_SC_W_send,
    m_axi_aclk,
    m_axi_aresetn,
    s_axi_aclk,
    s_axi_aresetn);
  output [0:0]M_SC_AR_info;
  output [181:0]M_SC_AR_payld;
  input [0:0]M_SC_AR_recv;
  output [0:0]M_SC_AR_req;
  output [0:0]M_SC_AR_send;
  output [0:0]M_SC_AW_info;
  output [181:0]M_SC_AW_payld;
  input [0:0]M_SC_AW_recv;
  output [0:0]M_SC_AW_req;
  output [0:0]M_SC_AW_send;
  output [0:0]M_SC_B_info;
  output [8:0]M_SC_B_payld;
  input [0:0]M_SC_B_recv;
  output [0:0]M_SC_B_req;
  output [0:0]M_SC_B_send;
  output [0:0]M_SC_R_info;
  output [54:0]M_SC_R_payld;
  input [0:0]M_SC_R_recv;
  output [0:0]M_SC_R_req;
  output [0:0]M_SC_R_send;
  output [0:0]M_SC_W_info;
  output [68:0]M_SC_W_payld;
  input [0:0]M_SC_W_recv;
  output [0:0]M_SC_W_req;
  output [0:0]M_SC_W_send;
  input [0:0]S_SC_AR_info;
  input [181:0]S_SC_AR_payld;
  output [0:0]S_SC_AR_recv;
  input [0:0]S_SC_AR_req;
  input [0:0]S_SC_AR_send;
  input [0:0]S_SC_AW_info;
  input [181:0]S_SC_AW_payld;
  output [0:0]S_SC_AW_recv;
  input [0:0]S_SC_AW_req;
  input [0:0]S_SC_AW_send;
  input [0:0]S_SC_B_info;
  input [8:0]S_SC_B_payld;
  output [0:0]S_SC_B_recv;
  input [0:0]S_SC_B_req;
  input [0:0]S_SC_B_send;
  input [0:0]S_SC_R_info;
  input [54:0]S_SC_R_payld;
  output [0:0]S_SC_R_recv;
  input [0:0]S_SC_R_req;
  input [0:0]S_SC_R_send;
  input [0:0]S_SC_W_info;
  input [68:0]S_SC_W_payld;
  output [0:0]S_SC_W_recv;
  input [0:0]S_SC_W_req;
  input [0:0]S_SC_W_send;
  input m_axi_aclk;
  input m_axi_aresetn;
  input s_axi_aclk;
  input s_axi_aresetn;

  wire [0:0]S_SC_AR_1_INFO;
  wire [181:0]S_SC_AR_1_PAYLD;
  wire [0:0]S_SC_AR_1_RECV;
  wire [0:0]S_SC_AR_1_REQ;
  wire [0:0]S_SC_AR_1_SEND;
  wire [0:0]S_SC_AW_1_INFO;
  wire [181:0]S_SC_AW_1_PAYLD;
  wire [0:0]S_SC_AW_1_RECV;
  wire [0:0]S_SC_AW_1_REQ;
  wire [0:0]S_SC_AW_1_SEND;
  wire [0:0]S_SC_B_1_INFO;
  wire [8:0]S_SC_B_1_PAYLD;
  wire [0:0]S_SC_B_1_RECV;
  wire [0:0]S_SC_B_1_REQ;
  wire [0:0]S_SC_B_1_SEND;
  wire [0:0]S_SC_R_1_INFO;
  wire [54:0]S_SC_R_1_PAYLD;
  wire [0:0]S_SC_R_1_RECV;
  wire [0:0]S_SC_R_1_REQ;
  wire [0:0]S_SC_R_1_SEND;
  wire [0:0]S_SC_W_1_INFO;
  wire [68:0]S_SC_W_1_PAYLD;
  wire [0:0]S_SC_W_1_RECV;
  wire [0:0]S_SC_W_1_REQ;
  wire [0:0]S_SC_W_1_SEND;
  wire [0:0]m33_ar_node_M_SC_INFO;
  wire [181:0]m33_ar_node_M_SC_PAYLD;
  wire [0:0]m33_ar_node_M_SC_RECV;
  wire [0:0]m33_ar_node_M_SC_REQ;
  wire [0:0]m33_ar_node_M_SC_SEND;
  wire [0:0]m33_aw_node_M_SC_INFO;
  wire [181:0]m33_aw_node_M_SC_PAYLD;
  wire [0:0]m33_aw_node_M_SC_RECV;
  wire [0:0]m33_aw_node_M_SC_REQ;
  wire [0:0]m33_aw_node_M_SC_SEND;
  wire [0:0]m33_b_node_M_SC_INFO;
  wire [8:0]m33_b_node_M_SC_PAYLD;
  wire [0:0]m33_b_node_M_SC_RECV;
  wire [0:0]m33_b_node_M_SC_REQ;
  wire [0:0]m33_b_node_M_SC_SEND;
  wire [0:0]m33_r_node_M_SC_INFO;
  wire [54:0]m33_r_node_M_SC_PAYLD;
  wire [0:0]m33_r_node_M_SC_RECV;
  wire [0:0]m33_r_node_M_SC_REQ;
  wire [0:0]m33_r_node_M_SC_SEND;
  wire [0:0]m33_w_node_M_SC_INFO;
  wire [68:0]m33_w_node_M_SC_PAYLD;
  wire [0:0]m33_w_node_M_SC_RECV;
  wire [0:0]m33_w_node_M_SC_REQ;
  wire [0:0]m33_w_node_M_SC_SEND;
  wire m_axi_aclk_1;
  wire m_axi_aresetn_1;
  wire s_axi_aclk_1;
  wire s_axi_aresetn_1;

  assign M_SC_AR_info[0] = m33_ar_node_M_SC_INFO;
  assign M_SC_AR_payld[181:0] = m33_ar_node_M_SC_PAYLD;
  assign M_SC_AR_req[0] = m33_ar_node_M_SC_REQ;
  assign M_SC_AR_send[0] = m33_ar_node_M_SC_SEND;
  assign M_SC_AW_info[0] = m33_aw_node_M_SC_INFO;
  assign M_SC_AW_payld[181:0] = m33_aw_node_M_SC_PAYLD;
  assign M_SC_AW_req[0] = m33_aw_node_M_SC_REQ;
  assign M_SC_AW_send[0] = m33_aw_node_M_SC_SEND;
  assign M_SC_B_info[0] = m33_b_node_M_SC_INFO;
  assign M_SC_B_payld[8:0] = m33_b_node_M_SC_PAYLD;
  assign M_SC_B_req[0] = m33_b_node_M_SC_REQ;
  assign M_SC_B_send[0] = m33_b_node_M_SC_SEND;
  assign M_SC_R_info[0] = m33_r_node_M_SC_INFO;
  assign M_SC_R_payld[54:0] = m33_r_node_M_SC_PAYLD;
  assign M_SC_R_req[0] = m33_r_node_M_SC_REQ;
  assign M_SC_R_send[0] = m33_r_node_M_SC_SEND;
  assign M_SC_W_info[0] = m33_w_node_M_SC_INFO;
  assign M_SC_W_payld[68:0] = m33_w_node_M_SC_PAYLD;
  assign M_SC_W_req[0] = m33_w_node_M_SC_REQ;
  assign M_SC_W_send[0] = m33_w_node_M_SC_SEND;
  assign S_SC_AR_1_INFO = S_SC_AR_info[0];
  assign S_SC_AR_1_PAYLD = S_SC_AR_payld[181:0];
  assign S_SC_AR_1_REQ = S_SC_AR_req[0];
  assign S_SC_AR_1_SEND = S_SC_AR_send[0];
  assign S_SC_AR_recv[0] = S_SC_AR_1_RECV;
  assign S_SC_AW_1_INFO = S_SC_AW_info[0];
  assign S_SC_AW_1_PAYLD = S_SC_AW_payld[181:0];
  assign S_SC_AW_1_REQ = S_SC_AW_req[0];
  assign S_SC_AW_1_SEND = S_SC_AW_send[0];
  assign S_SC_AW_recv[0] = S_SC_AW_1_RECV;
  assign S_SC_B_1_INFO = S_SC_B_info[0];
  assign S_SC_B_1_PAYLD = S_SC_B_payld[8:0];
  assign S_SC_B_1_REQ = S_SC_B_req[0];
  assign S_SC_B_1_SEND = S_SC_B_send[0];
  assign S_SC_B_recv[0] = S_SC_B_1_RECV;
  assign S_SC_R_1_INFO = S_SC_R_info[0];
  assign S_SC_R_1_PAYLD = S_SC_R_payld[54:0];
  assign S_SC_R_1_REQ = S_SC_R_req[0];
  assign S_SC_R_1_SEND = S_SC_R_send[0];
  assign S_SC_R_recv[0] = S_SC_R_1_RECV;
  assign S_SC_W_1_INFO = S_SC_W_info[0];
  assign S_SC_W_1_PAYLD = S_SC_W_payld[68:0];
  assign S_SC_W_1_REQ = S_SC_W_req[0];
  assign S_SC_W_1_SEND = S_SC_W_send[0];
  assign S_SC_W_recv[0] = S_SC_W_1_RECV;
  assign m33_ar_node_M_SC_RECV = M_SC_AR_recv[0];
  assign m33_aw_node_M_SC_RECV = M_SC_AW_recv[0];
  assign m33_b_node_M_SC_RECV = M_SC_B_recv[0];
  assign m33_r_node_M_SC_RECV = M_SC_R_recv[0];
  assign m33_w_node_M_SC_RECV = M_SC_W_recv[0];
  assign m_axi_aclk_1 = m_axi_aclk;
  assign m_axi_aresetn_1 = m_axi_aresetn;
  assign s_axi_aclk_1 = s_axi_aclk;
  assign s_axi_aresetn_1 = s_axi_aresetn;
  bd_afc3_m33arn_0 m33_ar_node
       (.m_sc_aclk(m_axi_aclk_1),
        .m_sc_aresetn(m_axi_aresetn_1),
        .m_sc_info(m33_ar_node_M_SC_INFO),
        .m_sc_payld(m33_ar_node_M_SC_PAYLD),
        .m_sc_recv(m33_ar_node_M_SC_RECV),
        .m_sc_req(m33_ar_node_M_SC_REQ),
        .m_sc_send(m33_ar_node_M_SC_SEND),
        .s_sc_aclk(s_axi_aclk_1),
        .s_sc_aresetn(s_axi_aresetn_1),
        .s_sc_info(S_SC_AR_1_INFO),
        .s_sc_payld(S_SC_AR_1_PAYLD),
        .s_sc_recv(S_SC_AR_1_RECV),
        .s_sc_req(S_SC_AR_1_REQ),
        .s_sc_send(S_SC_AR_1_SEND));
  bd_afc3_m33awn_0 m33_aw_node
       (.m_sc_aclk(m_axi_aclk_1),
        .m_sc_aresetn(m_axi_aresetn_1),
        .m_sc_info(m33_aw_node_M_SC_INFO),
        .m_sc_payld(m33_aw_node_M_SC_PAYLD),
        .m_sc_recv(m33_aw_node_M_SC_RECV),
        .m_sc_req(m33_aw_node_M_SC_REQ),
        .m_sc_send(m33_aw_node_M_SC_SEND),
        .s_sc_aclk(s_axi_aclk_1),
        .s_sc_aresetn(s_axi_aresetn_1),
        .s_sc_info(S_SC_AW_1_INFO),
        .s_sc_payld(S_SC_AW_1_PAYLD),
        .s_sc_recv(S_SC_AW_1_RECV),
        .s_sc_req(S_SC_AW_1_REQ),
        .s_sc_send(S_SC_AW_1_SEND));
  bd_afc3_m33bn_0 m33_b_node
       (.m_sc_aclk(s_axi_aclk_1),
        .m_sc_aresetn(s_axi_aresetn_1),
        .m_sc_info(m33_b_node_M_SC_INFO),
        .m_sc_payld(m33_b_node_M_SC_PAYLD),
        .m_sc_recv(m33_b_node_M_SC_RECV),
        .m_sc_req(m33_b_node_M_SC_REQ),
        .m_sc_send(m33_b_node_M_SC_SEND),
        .s_sc_aclk(m_axi_aclk_1),
        .s_sc_aresetn(m_axi_aresetn_1),
        .s_sc_info(S_SC_B_1_INFO),
        .s_sc_payld(S_SC_B_1_PAYLD),
        .s_sc_recv(S_SC_B_1_RECV),
        .s_sc_req(S_SC_B_1_REQ),
        .s_sc_send(S_SC_B_1_SEND));
  bd_afc3_m33rn_0 m33_r_node
       (.m_sc_aclk(s_axi_aclk_1),
        .m_sc_aresetn(s_axi_aresetn_1),
        .m_sc_info(m33_r_node_M_SC_INFO),
        .m_sc_payld(m33_r_node_M_SC_PAYLD),
        .m_sc_recv(m33_r_node_M_SC_RECV),
        .m_sc_req(m33_r_node_M_SC_REQ),
        .m_sc_send(m33_r_node_M_SC_SEND),
        .s_sc_aclk(m_axi_aclk_1),
        .s_sc_aresetn(m_axi_aresetn_1),
        .s_sc_info(S_SC_R_1_INFO),
        .s_sc_payld(S_SC_R_1_PAYLD),
        .s_sc_recv(S_SC_R_1_RECV),
        .s_sc_req(S_SC_R_1_REQ),
        .s_sc_send(S_SC_R_1_SEND));
  bd_afc3_m33wn_0 m33_w_node
       (.m_sc_aclk(m_axi_aclk_1),
        .m_sc_aresetn(m_axi_aresetn_1),
        .m_sc_info(m33_w_node_M_SC_INFO),
        .m_sc_payld(m33_w_node_M_SC_PAYLD),
        .m_sc_recv(m33_w_node_M_SC_RECV),
        .m_sc_req(m33_w_node_M_SC_REQ),
        .m_sc_send(m33_w_node_M_SC_SEND),
        .s_sc_aclk(s_axi_aclk_1),
        .s_sc_aresetn(s_axi_aresetn_1),
        .s_sc_info(S_SC_W_1_INFO),
        .s_sc_payld(S_SC_W_1_PAYLD),
        .s_sc_recv(S_SC_W_1_RECV),
        .s_sc_req(S_SC_W_1_REQ),
        .s_sc_send(S_SC_W_1_SEND));
endmodule

module m34_exit_pipeline_imp_1JDPZQ2
   (aclk,
    aresetn,
    m_axi_araddr,
    m_axi_arprot,
    m_axi_arready,
    m_axi_arvalid,
    m_axi_awaddr,
    m_axi_awprot,
    m_axi_awready,
    m_axi_awvalid,
    m_axi_bready,
    m_axi_bresp,
    m_axi_bvalid,
    m_axi_rdata,
    m_axi_rready,
    m_axi_rresp,
    m_axi_rvalid,
    m_axi_wdata,
    m_axi_wready,
    m_axi_wstrb,
    m_axi_wvalid,
    s_axi_araddr,
    s_axi_arcache,
    s_axi_arid,
    s_axi_arlen,
    s_axi_arlock,
    s_axi_arprot,
    s_axi_arqos,
    s_axi_arready,
    s_axi_aruser,
    s_axi_arvalid,
    s_axi_awaddr,
    s_axi_awcache,
    s_axi_awid,
    s_axi_awlen,
    s_axi_awlock,
    s_axi_awprot,
    s_axi_awqos,
    s_axi_awready,
    s_axi_awuser,
    s_axi_awvalid,
    s_axi_bid,
    s_axi_bready,
    s_axi_bresp,
    s_axi_buser,
    s_axi_bvalid,
    s_axi_rdata,
    s_axi_rid,
    s_axi_rlast,
    s_axi_rready,
    s_axi_rresp,
    s_axi_ruser,
    s_axi_rvalid,
    s_axi_wdata,
    s_axi_wlast,
    s_axi_wready,
    s_axi_wstrb,
    s_axi_wuser,
    s_axi_wvalid);
  input aclk;
  input aresetn;
  output [9:0]m_axi_araddr;
  output [2:0]m_axi_arprot;
  input m_axi_arready;
  output m_axi_arvalid;
  output [9:0]m_axi_awaddr;
  output [2:0]m_axi_awprot;
  input m_axi_awready;
  output m_axi_awvalid;
  output m_axi_bready;
  input [1:0]m_axi_bresp;
  input m_axi_bvalid;
  input [31:0]m_axi_rdata;
  output m_axi_rready;
  input [1:0]m_axi_rresp;
  input m_axi_rvalid;
  output [31:0]m_axi_wdata;
  input m_axi_wready;
  output [3:0]m_axi_wstrb;
  output m_axi_wvalid;
  input [9:0]s_axi_araddr;
  input [3:0]s_axi_arcache;
  input [2:0]s_axi_arid;
  input [7:0]s_axi_arlen;
  input [0:0]s_axi_arlock;
  input [2:0]s_axi_arprot;
  input [3:0]s_axi_arqos;
  output s_axi_arready;
  input [1023:0]s_axi_aruser;
  input s_axi_arvalid;
  input [9:0]s_axi_awaddr;
  input [3:0]s_axi_awcache;
  input [2:0]s_axi_awid;
  input [7:0]s_axi_awlen;
  input [0:0]s_axi_awlock;
  input [2:0]s_axi_awprot;
  input [3:0]s_axi_awqos;
  output s_axi_awready;
  input [1023:0]s_axi_awuser;
  input s_axi_awvalid;
  output [2:0]s_axi_bid;
  input s_axi_bready;
  output [1:0]s_axi_bresp;
  output [1023:0]s_axi_buser;
  output s_axi_bvalid;
  output [31:0]s_axi_rdata;
  output [2:0]s_axi_rid;
  output s_axi_rlast;
  input s_axi_rready;
  output [1:0]s_axi_rresp;
  output [1023:0]s_axi_ruser;
  output s_axi_rvalid;
  input [31:0]s_axi_wdata;
  input s_axi_wlast;
  output s_axi_wready;
  input [3:0]s_axi_wstrb;
  input [1023:0]s_axi_wuser;
  input s_axi_wvalid;

  wire aclk_1;
  wire aresetn_1;
  wire [9:0]m34_exit_M_AXI_ARADDR;
  wire [2:0]m34_exit_M_AXI_ARPROT;
  wire m34_exit_M_AXI_ARREADY;
  wire m34_exit_M_AXI_ARVALID;
  wire [9:0]m34_exit_M_AXI_AWADDR;
  wire [2:0]m34_exit_M_AXI_AWPROT;
  wire m34_exit_M_AXI_AWREADY;
  wire m34_exit_M_AXI_AWVALID;
  wire m34_exit_M_AXI_BREADY;
  wire [1:0]m34_exit_M_AXI_BRESP;
  wire m34_exit_M_AXI_BVALID;
  wire [31:0]m34_exit_M_AXI_RDATA;
  wire m34_exit_M_AXI_RREADY;
  wire [1:0]m34_exit_M_AXI_RRESP;
  wire m34_exit_M_AXI_RVALID;
  wire [31:0]m34_exit_M_AXI_WDATA;
  wire m34_exit_M_AXI_WREADY;
  wire [3:0]m34_exit_M_AXI_WSTRB;
  wire m34_exit_M_AXI_WVALID;
  wire [9:0]s_axi_1_ARADDR;
  wire [3:0]s_axi_1_ARCACHE;
  wire [2:0]s_axi_1_ARID;
  wire [7:0]s_axi_1_ARLEN;
  wire [0:0]s_axi_1_ARLOCK;
  wire [2:0]s_axi_1_ARPROT;
  wire [3:0]s_axi_1_ARQOS;
  wire s_axi_1_ARREADY;
  wire [1023:0]s_axi_1_ARUSER;
  wire s_axi_1_ARVALID;
  wire [9:0]s_axi_1_AWADDR;
  wire [3:0]s_axi_1_AWCACHE;
  wire [2:0]s_axi_1_AWID;
  wire [7:0]s_axi_1_AWLEN;
  wire [0:0]s_axi_1_AWLOCK;
  wire [2:0]s_axi_1_AWPROT;
  wire [3:0]s_axi_1_AWQOS;
  wire s_axi_1_AWREADY;
  wire [1023:0]s_axi_1_AWUSER;
  wire s_axi_1_AWVALID;
  wire [2:0]s_axi_1_BID;
  wire s_axi_1_BREADY;
  wire [1:0]s_axi_1_BRESP;
  wire [1023:0]s_axi_1_BUSER;
  wire s_axi_1_BVALID;
  wire [31:0]s_axi_1_RDATA;
  wire [2:0]s_axi_1_RID;
  wire s_axi_1_RLAST;
  wire s_axi_1_RREADY;
  wire [1:0]s_axi_1_RRESP;
  wire [1023:0]s_axi_1_RUSER;
  wire s_axi_1_RVALID;
  wire [31:0]s_axi_1_WDATA;
  wire s_axi_1_WLAST;
  wire s_axi_1_WREADY;
  wire [3:0]s_axi_1_WSTRB;
  wire [1023:0]s_axi_1_WUSER;
  wire s_axi_1_WVALID;

  assign aclk_1 = aclk;
  assign aresetn_1 = aresetn;
  assign m34_exit_M_AXI_ARREADY = m_axi_arready;
  assign m34_exit_M_AXI_AWREADY = m_axi_awready;
  assign m34_exit_M_AXI_BRESP = m_axi_bresp[1:0];
  assign m34_exit_M_AXI_BVALID = m_axi_bvalid;
  assign m34_exit_M_AXI_RDATA = m_axi_rdata[31:0];
  assign m34_exit_M_AXI_RRESP = m_axi_rresp[1:0];
  assign m34_exit_M_AXI_RVALID = m_axi_rvalid;
  assign m34_exit_M_AXI_WREADY = m_axi_wready;
  assign m_axi_araddr[9:0] = m34_exit_M_AXI_ARADDR;
  assign m_axi_arprot[2:0] = m34_exit_M_AXI_ARPROT;
  assign m_axi_arvalid = m34_exit_M_AXI_ARVALID;
  assign m_axi_awaddr[9:0] = m34_exit_M_AXI_AWADDR;
  assign m_axi_awprot[2:0] = m34_exit_M_AXI_AWPROT;
  assign m_axi_awvalid = m34_exit_M_AXI_AWVALID;
  assign m_axi_bready = m34_exit_M_AXI_BREADY;
  assign m_axi_rready = m34_exit_M_AXI_RREADY;
  assign m_axi_wdata[31:0] = m34_exit_M_AXI_WDATA;
  assign m_axi_wstrb[3:0] = m34_exit_M_AXI_WSTRB;
  assign m_axi_wvalid = m34_exit_M_AXI_WVALID;
  assign s_axi_1_ARADDR = s_axi_araddr[9:0];
  assign s_axi_1_ARCACHE = s_axi_arcache[3:0];
  assign s_axi_1_ARID = s_axi_arid[2:0];
  assign s_axi_1_ARLEN = s_axi_arlen[7:0];
  assign s_axi_1_ARLOCK = s_axi_arlock[0];
  assign s_axi_1_ARPROT = s_axi_arprot[2:0];
  assign s_axi_1_ARQOS = s_axi_arqos[3:0];
  assign s_axi_1_ARUSER = s_axi_aruser[1023:0];
  assign s_axi_1_ARVALID = s_axi_arvalid;
  assign s_axi_1_AWADDR = s_axi_awaddr[9:0];
  assign s_axi_1_AWCACHE = s_axi_awcache[3:0];
  assign s_axi_1_AWID = s_axi_awid[2:0];
  assign s_axi_1_AWLEN = s_axi_awlen[7:0];
  assign s_axi_1_AWLOCK = s_axi_awlock[0];
  assign s_axi_1_AWPROT = s_axi_awprot[2:0];
  assign s_axi_1_AWQOS = s_axi_awqos[3:0];
  assign s_axi_1_AWUSER = s_axi_awuser[1023:0];
  assign s_axi_1_AWVALID = s_axi_awvalid;
  assign s_axi_1_BREADY = s_axi_bready;
  assign s_axi_1_RREADY = s_axi_rready;
  assign s_axi_1_WDATA = s_axi_wdata[31:0];
  assign s_axi_1_WLAST = s_axi_wlast;
  assign s_axi_1_WSTRB = s_axi_wstrb[3:0];
  assign s_axi_1_WUSER = s_axi_wuser[1023:0];
  assign s_axi_1_WVALID = s_axi_wvalid;
  assign s_axi_arready = s_axi_1_ARREADY;
  assign s_axi_awready = s_axi_1_AWREADY;
  assign s_axi_bid[2:0] = s_axi_1_BID;
  assign s_axi_bresp[1:0] = s_axi_1_BRESP;
  assign s_axi_buser[1023:0] = s_axi_1_BUSER;
  assign s_axi_bvalid = s_axi_1_BVALID;
  assign s_axi_rdata[31:0] = s_axi_1_RDATA;
  assign s_axi_rid[2:0] = s_axi_1_RID;
  assign s_axi_rlast = s_axi_1_RLAST;
  assign s_axi_rresp[1:0] = s_axi_1_RRESP;
  assign s_axi_ruser[1023:0] = s_axi_1_RUSER;
  assign s_axi_rvalid = s_axi_1_RVALID;
  assign s_axi_wready = s_axi_1_WREADY;
  bd_afc3_m34e_0 m34_exit
       (.aclk(aclk_1),
        .aresetn(aresetn_1),
        .m_axi_araddr(m34_exit_M_AXI_ARADDR),
        .m_axi_arprot(m34_exit_M_AXI_ARPROT),
        .m_axi_arready(m34_exit_M_AXI_ARREADY),
        .m_axi_arvalid(m34_exit_M_AXI_ARVALID),
        .m_axi_awaddr(m34_exit_M_AXI_AWADDR),
        .m_axi_awprot(m34_exit_M_AXI_AWPROT),
        .m_axi_awready(m34_exit_M_AXI_AWREADY),
        .m_axi_awvalid(m34_exit_M_AXI_AWVALID),
        .m_axi_bready(m34_exit_M_AXI_BREADY),
        .m_axi_bresp(m34_exit_M_AXI_BRESP),
        .m_axi_bvalid(m34_exit_M_AXI_BVALID),
        .m_axi_rdata(m34_exit_M_AXI_RDATA),
        .m_axi_rready(m34_exit_M_AXI_RREADY),
        .m_axi_rresp(m34_exit_M_AXI_RRESP),
        .m_axi_rvalid(m34_exit_M_AXI_RVALID),
        .m_axi_wdata(m34_exit_M_AXI_WDATA),
        .m_axi_wready(m34_exit_M_AXI_WREADY),
        .m_axi_wstrb(m34_exit_M_AXI_WSTRB),
        .m_axi_wvalid(m34_exit_M_AXI_WVALID),
        .s_axi_araddr(s_axi_1_ARADDR),
        .s_axi_arcache(s_axi_1_ARCACHE),
        .s_axi_arid(s_axi_1_ARID),
        .s_axi_arlen(s_axi_1_ARLEN),
        .s_axi_arlock(s_axi_1_ARLOCK),
        .s_axi_arprot(s_axi_1_ARPROT),
        .s_axi_arqos(s_axi_1_ARQOS),
        .s_axi_arready(s_axi_1_ARREADY),
        .s_axi_aruser(s_axi_1_ARUSER),
        .s_axi_arvalid(s_axi_1_ARVALID),
        .s_axi_awaddr(s_axi_1_AWADDR),
        .s_axi_awcache(s_axi_1_AWCACHE),
        .s_axi_awid(s_axi_1_AWID),
        .s_axi_awlen(s_axi_1_AWLEN),
        .s_axi_awlock(s_axi_1_AWLOCK),
        .s_axi_awprot(s_axi_1_AWPROT),
        .s_axi_awqos(s_axi_1_AWQOS),
        .s_axi_awready(s_axi_1_AWREADY),
        .s_axi_awuser(s_axi_1_AWUSER),
        .s_axi_awvalid(s_axi_1_AWVALID),
        .s_axi_bid(s_axi_1_BID),
        .s_axi_bready(s_axi_1_BREADY),
        .s_axi_bresp(s_axi_1_BRESP),
        .s_axi_buser(s_axi_1_BUSER),
        .s_axi_bvalid(s_axi_1_BVALID),
        .s_axi_rdata(s_axi_1_RDATA),
        .s_axi_rid(s_axi_1_RID),
        .s_axi_rlast(s_axi_1_RLAST),
        .s_axi_rready(s_axi_1_RREADY),
        .s_axi_rresp(s_axi_1_RRESP),
        .s_axi_ruser(s_axi_1_RUSER),
        .s_axi_rvalid(s_axi_1_RVALID),
        .s_axi_wdata(s_axi_1_WDATA),
        .s_axi_wlast(s_axi_1_WLAST),
        .s_axi_wready(s_axi_1_WREADY),
        .s_axi_wstrb(s_axi_1_WSTRB),
        .s_axi_wuser(s_axi_1_WUSER),
        .s_axi_wvalid(s_axi_1_WVALID));
endmodule

module m34_nodes_imp_1EA682X
   (M_SC_AR_info,
    M_SC_AR_payld,
    M_SC_AR_recv,
    M_SC_AR_req,
    M_SC_AR_send,
    M_SC_AW_info,
    M_SC_AW_payld,
    M_SC_AW_recv,
    M_SC_AW_req,
    M_SC_AW_send,
    M_SC_B_info,
    M_SC_B_payld,
    M_SC_B_recv,
    M_SC_B_req,
    M_SC_B_send,
    M_SC_R_info,
    M_SC_R_payld,
    M_SC_R_recv,
    M_SC_R_req,
    M_SC_R_send,
    M_SC_W_info,
    M_SC_W_payld,
    M_SC_W_recv,
    M_SC_W_req,
    M_SC_W_send,
    S_SC_AR_info,
    S_SC_AR_payld,
    S_SC_AR_recv,
    S_SC_AR_req,
    S_SC_AR_send,
    S_SC_AW_info,
    S_SC_AW_payld,
    S_SC_AW_recv,
    S_SC_AW_req,
    S_SC_AW_send,
    S_SC_B_info,
    S_SC_B_payld,
    S_SC_B_recv,
    S_SC_B_req,
    S_SC_B_send,
    S_SC_R_info,
    S_SC_R_payld,
    S_SC_R_recv,
    S_SC_R_req,
    S_SC_R_send,
    S_SC_W_info,
    S_SC_W_payld,
    S_SC_W_recv,
    S_SC_W_req,
    S_SC_W_send,
    m_axi_aclk,
    m_axi_aresetn,
    s_axi_aclk,
    s_axi_aresetn);
  output [0:0]M_SC_AR_info;
  output [181:0]M_SC_AR_payld;
  input [0:0]M_SC_AR_recv;
  output [0:0]M_SC_AR_req;
  output [0:0]M_SC_AR_send;
  output [0:0]M_SC_AW_info;
  output [181:0]M_SC_AW_payld;
  input [0:0]M_SC_AW_recv;
  output [0:0]M_SC_AW_req;
  output [0:0]M_SC_AW_send;
  output [0:0]M_SC_B_info;
  output [8:0]M_SC_B_payld;
  input [0:0]M_SC_B_recv;
  output [0:0]M_SC_B_req;
  output [0:0]M_SC_B_send;
  output [0:0]M_SC_R_info;
  output [54:0]M_SC_R_payld;
  input [0:0]M_SC_R_recv;
  output [0:0]M_SC_R_req;
  output [0:0]M_SC_R_send;
  output [0:0]M_SC_W_info;
  output [68:0]M_SC_W_payld;
  input [0:0]M_SC_W_recv;
  output [0:0]M_SC_W_req;
  output [0:0]M_SC_W_send;
  input [0:0]S_SC_AR_info;
  input [181:0]S_SC_AR_payld;
  output [0:0]S_SC_AR_recv;
  input [0:0]S_SC_AR_req;
  input [0:0]S_SC_AR_send;
  input [0:0]S_SC_AW_info;
  input [181:0]S_SC_AW_payld;
  output [0:0]S_SC_AW_recv;
  input [0:0]S_SC_AW_req;
  input [0:0]S_SC_AW_send;
  input [0:0]S_SC_B_info;
  input [8:0]S_SC_B_payld;
  output [0:0]S_SC_B_recv;
  input [0:0]S_SC_B_req;
  input [0:0]S_SC_B_send;
  input [0:0]S_SC_R_info;
  input [54:0]S_SC_R_payld;
  output [0:0]S_SC_R_recv;
  input [0:0]S_SC_R_req;
  input [0:0]S_SC_R_send;
  input [0:0]S_SC_W_info;
  input [68:0]S_SC_W_payld;
  output [0:0]S_SC_W_recv;
  input [0:0]S_SC_W_req;
  input [0:0]S_SC_W_send;
  input m_axi_aclk;
  input m_axi_aresetn;
  input s_axi_aclk;
  input s_axi_aresetn;

  wire [0:0]S_SC_AR_1_INFO;
  wire [181:0]S_SC_AR_1_PAYLD;
  wire [0:0]S_SC_AR_1_RECV;
  wire [0:0]S_SC_AR_1_REQ;
  wire [0:0]S_SC_AR_1_SEND;
  wire [0:0]S_SC_AW_1_INFO;
  wire [181:0]S_SC_AW_1_PAYLD;
  wire [0:0]S_SC_AW_1_RECV;
  wire [0:0]S_SC_AW_1_REQ;
  wire [0:0]S_SC_AW_1_SEND;
  wire [0:0]S_SC_B_1_INFO;
  wire [8:0]S_SC_B_1_PAYLD;
  wire [0:0]S_SC_B_1_RECV;
  wire [0:0]S_SC_B_1_REQ;
  wire [0:0]S_SC_B_1_SEND;
  wire [0:0]S_SC_R_1_INFO;
  wire [54:0]S_SC_R_1_PAYLD;
  wire [0:0]S_SC_R_1_RECV;
  wire [0:0]S_SC_R_1_REQ;
  wire [0:0]S_SC_R_1_SEND;
  wire [0:0]S_SC_W_1_INFO;
  wire [68:0]S_SC_W_1_PAYLD;
  wire [0:0]S_SC_W_1_RECV;
  wire [0:0]S_SC_W_1_REQ;
  wire [0:0]S_SC_W_1_SEND;
  wire [0:0]m34_ar_node_M_SC_INFO;
  wire [181:0]m34_ar_node_M_SC_PAYLD;
  wire [0:0]m34_ar_node_M_SC_RECV;
  wire [0:0]m34_ar_node_M_SC_REQ;
  wire [0:0]m34_ar_node_M_SC_SEND;
  wire [0:0]m34_aw_node_M_SC_INFO;
  wire [181:0]m34_aw_node_M_SC_PAYLD;
  wire [0:0]m34_aw_node_M_SC_RECV;
  wire [0:0]m34_aw_node_M_SC_REQ;
  wire [0:0]m34_aw_node_M_SC_SEND;
  wire [0:0]m34_b_node_M_SC_INFO;
  wire [8:0]m34_b_node_M_SC_PAYLD;
  wire [0:0]m34_b_node_M_SC_RECV;
  wire [0:0]m34_b_node_M_SC_REQ;
  wire [0:0]m34_b_node_M_SC_SEND;
  wire [0:0]m34_r_node_M_SC_INFO;
  wire [54:0]m34_r_node_M_SC_PAYLD;
  wire [0:0]m34_r_node_M_SC_RECV;
  wire [0:0]m34_r_node_M_SC_REQ;
  wire [0:0]m34_r_node_M_SC_SEND;
  wire [0:0]m34_w_node_M_SC_INFO;
  wire [68:0]m34_w_node_M_SC_PAYLD;
  wire [0:0]m34_w_node_M_SC_RECV;
  wire [0:0]m34_w_node_M_SC_REQ;
  wire [0:0]m34_w_node_M_SC_SEND;
  wire m_axi_aclk_1;
  wire m_axi_aresetn_1;
  wire s_axi_aclk_1;
  wire s_axi_aresetn_1;

  assign M_SC_AR_info[0] = m34_ar_node_M_SC_INFO;
  assign M_SC_AR_payld[181:0] = m34_ar_node_M_SC_PAYLD;
  assign M_SC_AR_req[0] = m34_ar_node_M_SC_REQ;
  assign M_SC_AR_send[0] = m34_ar_node_M_SC_SEND;
  assign M_SC_AW_info[0] = m34_aw_node_M_SC_INFO;
  assign M_SC_AW_payld[181:0] = m34_aw_node_M_SC_PAYLD;
  assign M_SC_AW_req[0] = m34_aw_node_M_SC_REQ;
  assign M_SC_AW_send[0] = m34_aw_node_M_SC_SEND;
  assign M_SC_B_info[0] = m34_b_node_M_SC_INFO;
  assign M_SC_B_payld[8:0] = m34_b_node_M_SC_PAYLD;
  assign M_SC_B_req[0] = m34_b_node_M_SC_REQ;
  assign M_SC_B_send[0] = m34_b_node_M_SC_SEND;
  assign M_SC_R_info[0] = m34_r_node_M_SC_INFO;
  assign M_SC_R_payld[54:0] = m34_r_node_M_SC_PAYLD;
  assign M_SC_R_req[0] = m34_r_node_M_SC_REQ;
  assign M_SC_R_send[0] = m34_r_node_M_SC_SEND;
  assign M_SC_W_info[0] = m34_w_node_M_SC_INFO;
  assign M_SC_W_payld[68:0] = m34_w_node_M_SC_PAYLD;
  assign M_SC_W_req[0] = m34_w_node_M_SC_REQ;
  assign M_SC_W_send[0] = m34_w_node_M_SC_SEND;
  assign S_SC_AR_1_INFO = S_SC_AR_info[0];
  assign S_SC_AR_1_PAYLD = S_SC_AR_payld[181:0];
  assign S_SC_AR_1_REQ = S_SC_AR_req[0];
  assign S_SC_AR_1_SEND = S_SC_AR_send[0];
  assign S_SC_AR_recv[0] = S_SC_AR_1_RECV;
  assign S_SC_AW_1_INFO = S_SC_AW_info[0];
  assign S_SC_AW_1_PAYLD = S_SC_AW_payld[181:0];
  assign S_SC_AW_1_REQ = S_SC_AW_req[0];
  assign S_SC_AW_1_SEND = S_SC_AW_send[0];
  assign S_SC_AW_recv[0] = S_SC_AW_1_RECV;
  assign S_SC_B_1_INFO = S_SC_B_info[0];
  assign S_SC_B_1_PAYLD = S_SC_B_payld[8:0];
  assign S_SC_B_1_REQ = S_SC_B_req[0];
  assign S_SC_B_1_SEND = S_SC_B_send[0];
  assign S_SC_B_recv[0] = S_SC_B_1_RECV;
  assign S_SC_R_1_INFO = S_SC_R_info[0];
  assign S_SC_R_1_PAYLD = S_SC_R_payld[54:0];
  assign S_SC_R_1_REQ = S_SC_R_req[0];
  assign S_SC_R_1_SEND = S_SC_R_send[0];
  assign S_SC_R_recv[0] = S_SC_R_1_RECV;
  assign S_SC_W_1_INFO = S_SC_W_info[0];
  assign S_SC_W_1_PAYLD = S_SC_W_payld[68:0];
  assign S_SC_W_1_REQ = S_SC_W_req[0];
  assign S_SC_W_1_SEND = S_SC_W_send[0];
  assign S_SC_W_recv[0] = S_SC_W_1_RECV;
  assign m34_ar_node_M_SC_RECV = M_SC_AR_recv[0];
  assign m34_aw_node_M_SC_RECV = M_SC_AW_recv[0];
  assign m34_b_node_M_SC_RECV = M_SC_B_recv[0];
  assign m34_r_node_M_SC_RECV = M_SC_R_recv[0];
  assign m34_w_node_M_SC_RECV = M_SC_W_recv[0];
  assign m_axi_aclk_1 = m_axi_aclk;
  assign m_axi_aresetn_1 = m_axi_aresetn;
  assign s_axi_aclk_1 = s_axi_aclk;
  assign s_axi_aresetn_1 = s_axi_aresetn;
  bd_afc3_m34arn_0 m34_ar_node
       (.m_sc_aclk(m_axi_aclk_1),
        .m_sc_aresetn(m_axi_aresetn_1),
        .m_sc_info(m34_ar_node_M_SC_INFO),
        .m_sc_payld(m34_ar_node_M_SC_PAYLD),
        .m_sc_recv(m34_ar_node_M_SC_RECV),
        .m_sc_req(m34_ar_node_M_SC_REQ),
        .m_sc_send(m34_ar_node_M_SC_SEND),
        .s_sc_aclk(s_axi_aclk_1),
        .s_sc_aresetn(s_axi_aresetn_1),
        .s_sc_info(S_SC_AR_1_INFO),
        .s_sc_payld(S_SC_AR_1_PAYLD),
        .s_sc_recv(S_SC_AR_1_RECV),
        .s_sc_req(S_SC_AR_1_REQ),
        .s_sc_send(S_SC_AR_1_SEND));
  bd_afc3_m34awn_0 m34_aw_node
       (.m_sc_aclk(m_axi_aclk_1),
        .m_sc_aresetn(m_axi_aresetn_1),
        .m_sc_info(m34_aw_node_M_SC_INFO),
        .m_sc_payld(m34_aw_node_M_SC_PAYLD),
        .m_sc_recv(m34_aw_node_M_SC_RECV),
        .m_sc_req(m34_aw_node_M_SC_REQ),
        .m_sc_send(m34_aw_node_M_SC_SEND),
        .s_sc_aclk(s_axi_aclk_1),
        .s_sc_aresetn(s_axi_aresetn_1),
        .s_sc_info(S_SC_AW_1_INFO),
        .s_sc_payld(S_SC_AW_1_PAYLD),
        .s_sc_recv(S_SC_AW_1_RECV),
        .s_sc_req(S_SC_AW_1_REQ),
        .s_sc_send(S_SC_AW_1_SEND));
  bd_afc3_m34bn_0 m34_b_node
       (.m_sc_aclk(s_axi_aclk_1),
        .m_sc_aresetn(s_axi_aresetn_1),
        .m_sc_info(m34_b_node_M_SC_INFO),
        .m_sc_payld(m34_b_node_M_SC_PAYLD),
        .m_sc_recv(m34_b_node_M_SC_RECV),
        .m_sc_req(m34_b_node_M_SC_REQ),
        .m_sc_send(m34_b_node_M_SC_SEND),
        .s_sc_aclk(m_axi_aclk_1),
        .s_sc_aresetn(m_axi_aresetn_1),
        .s_sc_info(S_SC_B_1_INFO),
        .s_sc_payld(S_SC_B_1_PAYLD),
        .s_sc_recv(S_SC_B_1_RECV),
        .s_sc_req(S_SC_B_1_REQ),
        .s_sc_send(S_SC_B_1_SEND));
  bd_afc3_m34rn_0 m34_r_node
       (.m_sc_aclk(s_axi_aclk_1),
        .m_sc_aresetn(s_axi_aresetn_1),
        .m_sc_info(m34_r_node_M_SC_INFO),
        .m_sc_payld(m34_r_node_M_SC_PAYLD),
        .m_sc_recv(m34_r_node_M_SC_RECV),
        .m_sc_req(m34_r_node_M_SC_REQ),
        .m_sc_send(m34_r_node_M_SC_SEND),
        .s_sc_aclk(m_axi_aclk_1),
        .s_sc_aresetn(m_axi_aresetn_1),
        .s_sc_info(S_SC_R_1_INFO),
        .s_sc_payld(S_SC_R_1_PAYLD),
        .s_sc_recv(S_SC_R_1_RECV),
        .s_sc_req(S_SC_R_1_REQ),
        .s_sc_send(S_SC_R_1_SEND));
  bd_afc3_m34wn_0 m34_w_node
       (.m_sc_aclk(m_axi_aclk_1),
        .m_sc_aresetn(m_axi_aresetn_1),
        .m_sc_info(m34_w_node_M_SC_INFO),
        .m_sc_payld(m34_w_node_M_SC_PAYLD),
        .m_sc_recv(m34_w_node_M_SC_RECV),
        .m_sc_req(m34_w_node_M_SC_REQ),
        .m_sc_send(m34_w_node_M_SC_SEND),
        .s_sc_aclk(s_axi_aclk_1),
        .s_sc_aresetn(s_axi_aresetn_1),
        .s_sc_info(S_SC_W_1_INFO),
        .s_sc_payld(S_SC_W_1_PAYLD),
        .s_sc_recv(S_SC_W_1_RECV),
        .s_sc_req(S_SC_W_1_REQ),
        .s_sc_send(S_SC_W_1_SEND));
endmodule

module m35_exit_pipeline_imp_1LWJJRU
   (aclk,
    aresetn,
    m_axi_araddr,
    m_axi_arprot,
    m_axi_arready,
    m_axi_arvalid,
    m_axi_awaddr,
    m_axi_awprot,
    m_axi_awready,
    m_axi_awvalid,
    m_axi_bready,
    m_axi_bresp,
    m_axi_bvalid,
    m_axi_rdata,
    m_axi_rready,
    m_axi_rresp,
    m_axi_rvalid,
    m_axi_wdata,
    m_axi_wready,
    m_axi_wstrb,
    m_axi_wvalid,
    s_axi_araddr,
    s_axi_arcache,
    s_axi_arid,
    s_axi_arlen,
    s_axi_arlock,
    s_axi_arprot,
    s_axi_arqos,
    s_axi_arready,
    s_axi_aruser,
    s_axi_arvalid,
    s_axi_awaddr,
    s_axi_awcache,
    s_axi_awid,
    s_axi_awlen,
    s_axi_awlock,
    s_axi_awprot,
    s_axi_awqos,
    s_axi_awready,
    s_axi_awuser,
    s_axi_awvalid,
    s_axi_bid,
    s_axi_bready,
    s_axi_bresp,
    s_axi_buser,
    s_axi_bvalid,
    s_axi_rdata,
    s_axi_rid,
    s_axi_rlast,
    s_axi_rready,
    s_axi_rresp,
    s_axi_ruser,
    s_axi_rvalid,
    s_axi_wdata,
    s_axi_wlast,
    s_axi_wready,
    s_axi_wstrb,
    s_axi_wuser,
    s_axi_wvalid);
  input aclk;
  input aresetn;
  output [9:0]m_axi_araddr;
  output [2:0]m_axi_arprot;
  input m_axi_arready;
  output m_axi_arvalid;
  output [9:0]m_axi_awaddr;
  output [2:0]m_axi_awprot;
  input m_axi_awready;
  output m_axi_awvalid;
  output m_axi_bready;
  input [1:0]m_axi_bresp;
  input m_axi_bvalid;
  input [31:0]m_axi_rdata;
  output m_axi_rready;
  input [1:0]m_axi_rresp;
  input m_axi_rvalid;
  output [31:0]m_axi_wdata;
  input m_axi_wready;
  output [3:0]m_axi_wstrb;
  output m_axi_wvalid;
  input [9:0]s_axi_araddr;
  input [3:0]s_axi_arcache;
  input [2:0]s_axi_arid;
  input [7:0]s_axi_arlen;
  input [0:0]s_axi_arlock;
  input [2:0]s_axi_arprot;
  input [3:0]s_axi_arqos;
  output s_axi_arready;
  input [1023:0]s_axi_aruser;
  input s_axi_arvalid;
  input [9:0]s_axi_awaddr;
  input [3:0]s_axi_awcache;
  input [2:0]s_axi_awid;
  input [7:0]s_axi_awlen;
  input [0:0]s_axi_awlock;
  input [2:0]s_axi_awprot;
  input [3:0]s_axi_awqos;
  output s_axi_awready;
  input [1023:0]s_axi_awuser;
  input s_axi_awvalid;
  output [2:0]s_axi_bid;
  input s_axi_bready;
  output [1:0]s_axi_bresp;
  output [1023:0]s_axi_buser;
  output s_axi_bvalid;
  output [31:0]s_axi_rdata;
  output [2:0]s_axi_rid;
  output s_axi_rlast;
  input s_axi_rready;
  output [1:0]s_axi_rresp;
  output [1023:0]s_axi_ruser;
  output s_axi_rvalid;
  input [31:0]s_axi_wdata;
  input s_axi_wlast;
  output s_axi_wready;
  input [3:0]s_axi_wstrb;
  input [1023:0]s_axi_wuser;
  input s_axi_wvalid;

  wire aclk_1;
  wire aresetn_1;
  wire [9:0]m35_exit_M_AXI_ARADDR;
  wire [2:0]m35_exit_M_AXI_ARPROT;
  wire m35_exit_M_AXI_ARREADY;
  wire m35_exit_M_AXI_ARVALID;
  wire [9:0]m35_exit_M_AXI_AWADDR;
  wire [2:0]m35_exit_M_AXI_AWPROT;
  wire m35_exit_M_AXI_AWREADY;
  wire m35_exit_M_AXI_AWVALID;
  wire m35_exit_M_AXI_BREADY;
  wire [1:0]m35_exit_M_AXI_BRESP;
  wire m35_exit_M_AXI_BVALID;
  wire [31:0]m35_exit_M_AXI_RDATA;
  wire m35_exit_M_AXI_RREADY;
  wire [1:0]m35_exit_M_AXI_RRESP;
  wire m35_exit_M_AXI_RVALID;
  wire [31:0]m35_exit_M_AXI_WDATA;
  wire m35_exit_M_AXI_WREADY;
  wire [3:0]m35_exit_M_AXI_WSTRB;
  wire m35_exit_M_AXI_WVALID;
  wire [9:0]s_axi_1_ARADDR;
  wire [3:0]s_axi_1_ARCACHE;
  wire [2:0]s_axi_1_ARID;
  wire [7:0]s_axi_1_ARLEN;
  wire [0:0]s_axi_1_ARLOCK;
  wire [2:0]s_axi_1_ARPROT;
  wire [3:0]s_axi_1_ARQOS;
  wire s_axi_1_ARREADY;
  wire [1023:0]s_axi_1_ARUSER;
  wire s_axi_1_ARVALID;
  wire [9:0]s_axi_1_AWADDR;
  wire [3:0]s_axi_1_AWCACHE;
  wire [2:0]s_axi_1_AWID;
  wire [7:0]s_axi_1_AWLEN;
  wire [0:0]s_axi_1_AWLOCK;
  wire [2:0]s_axi_1_AWPROT;
  wire [3:0]s_axi_1_AWQOS;
  wire s_axi_1_AWREADY;
  wire [1023:0]s_axi_1_AWUSER;
  wire s_axi_1_AWVALID;
  wire [2:0]s_axi_1_BID;
  wire s_axi_1_BREADY;
  wire [1:0]s_axi_1_BRESP;
  wire [1023:0]s_axi_1_BUSER;
  wire s_axi_1_BVALID;
  wire [31:0]s_axi_1_RDATA;
  wire [2:0]s_axi_1_RID;
  wire s_axi_1_RLAST;
  wire s_axi_1_RREADY;
  wire [1:0]s_axi_1_RRESP;
  wire [1023:0]s_axi_1_RUSER;
  wire s_axi_1_RVALID;
  wire [31:0]s_axi_1_WDATA;
  wire s_axi_1_WLAST;
  wire s_axi_1_WREADY;
  wire [3:0]s_axi_1_WSTRB;
  wire [1023:0]s_axi_1_WUSER;
  wire s_axi_1_WVALID;

  assign aclk_1 = aclk;
  assign aresetn_1 = aresetn;
  assign m35_exit_M_AXI_ARREADY = m_axi_arready;
  assign m35_exit_M_AXI_AWREADY = m_axi_awready;
  assign m35_exit_M_AXI_BRESP = m_axi_bresp[1:0];
  assign m35_exit_M_AXI_BVALID = m_axi_bvalid;
  assign m35_exit_M_AXI_RDATA = m_axi_rdata[31:0];
  assign m35_exit_M_AXI_RRESP = m_axi_rresp[1:0];
  assign m35_exit_M_AXI_RVALID = m_axi_rvalid;
  assign m35_exit_M_AXI_WREADY = m_axi_wready;
  assign m_axi_araddr[9:0] = m35_exit_M_AXI_ARADDR;
  assign m_axi_arprot[2:0] = m35_exit_M_AXI_ARPROT;
  assign m_axi_arvalid = m35_exit_M_AXI_ARVALID;
  assign m_axi_awaddr[9:0] = m35_exit_M_AXI_AWADDR;
  assign m_axi_awprot[2:0] = m35_exit_M_AXI_AWPROT;
  assign m_axi_awvalid = m35_exit_M_AXI_AWVALID;
  assign m_axi_bready = m35_exit_M_AXI_BREADY;
  assign m_axi_rready = m35_exit_M_AXI_RREADY;
  assign m_axi_wdata[31:0] = m35_exit_M_AXI_WDATA;
  assign m_axi_wstrb[3:0] = m35_exit_M_AXI_WSTRB;
  assign m_axi_wvalid = m35_exit_M_AXI_WVALID;
  assign s_axi_1_ARADDR = s_axi_araddr[9:0];
  assign s_axi_1_ARCACHE = s_axi_arcache[3:0];
  assign s_axi_1_ARID = s_axi_arid[2:0];
  assign s_axi_1_ARLEN = s_axi_arlen[7:0];
  assign s_axi_1_ARLOCK = s_axi_arlock[0];
  assign s_axi_1_ARPROT = s_axi_arprot[2:0];
  assign s_axi_1_ARQOS = s_axi_arqos[3:0];
  assign s_axi_1_ARUSER = s_axi_aruser[1023:0];
  assign s_axi_1_ARVALID = s_axi_arvalid;
  assign s_axi_1_AWADDR = s_axi_awaddr[9:0];
  assign s_axi_1_AWCACHE = s_axi_awcache[3:0];
  assign s_axi_1_AWID = s_axi_awid[2:0];
  assign s_axi_1_AWLEN = s_axi_awlen[7:0];
  assign s_axi_1_AWLOCK = s_axi_awlock[0];
  assign s_axi_1_AWPROT = s_axi_awprot[2:0];
  assign s_axi_1_AWQOS = s_axi_awqos[3:0];
  assign s_axi_1_AWUSER = s_axi_awuser[1023:0];
  assign s_axi_1_AWVALID = s_axi_awvalid;
  assign s_axi_1_BREADY = s_axi_bready;
  assign s_axi_1_RREADY = s_axi_rready;
  assign s_axi_1_WDATA = s_axi_wdata[31:0];
  assign s_axi_1_WLAST = s_axi_wlast;
  assign s_axi_1_WSTRB = s_axi_wstrb[3:0];
  assign s_axi_1_WUSER = s_axi_wuser[1023:0];
  assign s_axi_1_WVALID = s_axi_wvalid;
  assign s_axi_arready = s_axi_1_ARREADY;
  assign s_axi_awready = s_axi_1_AWREADY;
  assign s_axi_bid[2:0] = s_axi_1_BID;
  assign s_axi_bresp[1:0] = s_axi_1_BRESP;
  assign s_axi_buser[1023:0] = s_axi_1_BUSER;
  assign s_axi_bvalid = s_axi_1_BVALID;
  assign s_axi_rdata[31:0] = s_axi_1_RDATA;
  assign s_axi_rid[2:0] = s_axi_1_RID;
  assign s_axi_rlast = s_axi_1_RLAST;
  assign s_axi_rresp[1:0] = s_axi_1_RRESP;
  assign s_axi_ruser[1023:0] = s_axi_1_RUSER;
  assign s_axi_rvalid = s_axi_1_RVALID;
  assign s_axi_wready = s_axi_1_WREADY;
  bd_afc3_m35e_0 m35_exit
       (.aclk(aclk_1),
        .aresetn(aresetn_1),
        .m_axi_araddr(m35_exit_M_AXI_ARADDR),
        .m_axi_arprot(m35_exit_M_AXI_ARPROT),
        .m_axi_arready(m35_exit_M_AXI_ARREADY),
        .m_axi_arvalid(m35_exit_M_AXI_ARVALID),
        .m_axi_awaddr(m35_exit_M_AXI_AWADDR),
        .m_axi_awprot(m35_exit_M_AXI_AWPROT),
        .m_axi_awready(m35_exit_M_AXI_AWREADY),
        .m_axi_awvalid(m35_exit_M_AXI_AWVALID),
        .m_axi_bready(m35_exit_M_AXI_BREADY),
        .m_axi_bresp(m35_exit_M_AXI_BRESP),
        .m_axi_bvalid(m35_exit_M_AXI_BVALID),
        .m_axi_rdata(m35_exit_M_AXI_RDATA),
        .m_axi_rready(m35_exit_M_AXI_RREADY),
        .m_axi_rresp(m35_exit_M_AXI_RRESP),
        .m_axi_rvalid(m35_exit_M_AXI_RVALID),
        .m_axi_wdata(m35_exit_M_AXI_WDATA),
        .m_axi_wready(m35_exit_M_AXI_WREADY),
        .m_axi_wstrb(m35_exit_M_AXI_WSTRB),
        .m_axi_wvalid(m35_exit_M_AXI_WVALID),
        .s_axi_araddr(s_axi_1_ARADDR),
        .s_axi_arcache(s_axi_1_ARCACHE),
        .s_axi_arid(s_axi_1_ARID),
        .s_axi_arlen(s_axi_1_ARLEN),
        .s_axi_arlock(s_axi_1_ARLOCK),
        .s_axi_arprot(s_axi_1_ARPROT),
        .s_axi_arqos(s_axi_1_ARQOS),
        .s_axi_arready(s_axi_1_ARREADY),
        .s_axi_aruser(s_axi_1_ARUSER),
        .s_axi_arvalid(s_axi_1_ARVALID),
        .s_axi_awaddr(s_axi_1_AWADDR),
        .s_axi_awcache(s_axi_1_AWCACHE),
        .s_axi_awid(s_axi_1_AWID),
        .s_axi_awlen(s_axi_1_AWLEN),
        .s_axi_awlock(s_axi_1_AWLOCK),
        .s_axi_awprot(s_axi_1_AWPROT),
        .s_axi_awqos(s_axi_1_AWQOS),
        .s_axi_awready(s_axi_1_AWREADY),
        .s_axi_awuser(s_axi_1_AWUSER),
        .s_axi_awvalid(s_axi_1_AWVALID),
        .s_axi_bid(s_axi_1_BID),
        .s_axi_bready(s_axi_1_BREADY),
        .s_axi_bresp(s_axi_1_BRESP),
        .s_axi_buser(s_axi_1_BUSER),
        .s_axi_bvalid(s_axi_1_BVALID),
        .s_axi_rdata(s_axi_1_RDATA),
        .s_axi_rid(s_axi_1_RID),
        .s_axi_rlast(s_axi_1_RLAST),
        .s_axi_rready(s_axi_1_RREADY),
        .s_axi_rresp(s_axi_1_RRESP),
        .s_axi_ruser(s_axi_1_RUSER),
        .s_axi_rvalid(s_axi_1_RVALID),
        .s_axi_wdata(s_axi_1_WDATA),
        .s_axi_wlast(s_axi_1_WLAST),
        .s_axi_wready(s_axi_1_WREADY),
        .s_axi_wstrb(s_axi_1_WSTRB),
        .s_axi_wuser(s_axi_1_WUSER),
        .s_axi_wvalid(s_axi_1_WVALID));
endmodule

module m35_nodes_imp_B5P733
   (M_SC_AR_info,
    M_SC_AR_payld,
    M_SC_AR_recv,
    M_SC_AR_req,
    M_SC_AR_send,
    M_SC_AW_info,
    M_SC_AW_payld,
    M_SC_AW_recv,
    M_SC_AW_req,
    M_SC_AW_send,
    M_SC_B_info,
    M_SC_B_payld,
    M_SC_B_recv,
    M_SC_B_req,
    M_SC_B_send,
    M_SC_R_info,
    M_SC_R_payld,
    M_SC_R_recv,
    M_SC_R_req,
    M_SC_R_send,
    M_SC_W_info,
    M_SC_W_payld,
    M_SC_W_recv,
    M_SC_W_req,
    M_SC_W_send,
    S_SC_AR_info,
    S_SC_AR_payld,
    S_SC_AR_recv,
    S_SC_AR_req,
    S_SC_AR_send,
    S_SC_AW_info,
    S_SC_AW_payld,
    S_SC_AW_recv,
    S_SC_AW_req,
    S_SC_AW_send,
    S_SC_B_info,
    S_SC_B_payld,
    S_SC_B_recv,
    S_SC_B_req,
    S_SC_B_send,
    S_SC_R_info,
    S_SC_R_payld,
    S_SC_R_recv,
    S_SC_R_req,
    S_SC_R_send,
    S_SC_W_info,
    S_SC_W_payld,
    S_SC_W_recv,
    S_SC_W_req,
    S_SC_W_send,
    m_axi_aclk,
    m_axi_aresetn,
    s_axi_aclk,
    s_axi_aresetn);
  output [0:0]M_SC_AR_info;
  output [181:0]M_SC_AR_payld;
  input [0:0]M_SC_AR_recv;
  output [0:0]M_SC_AR_req;
  output [0:0]M_SC_AR_send;
  output [0:0]M_SC_AW_info;
  output [181:0]M_SC_AW_payld;
  input [0:0]M_SC_AW_recv;
  output [0:0]M_SC_AW_req;
  output [0:0]M_SC_AW_send;
  output [0:0]M_SC_B_info;
  output [8:0]M_SC_B_payld;
  input [0:0]M_SC_B_recv;
  output [0:0]M_SC_B_req;
  output [0:0]M_SC_B_send;
  output [0:0]M_SC_R_info;
  output [54:0]M_SC_R_payld;
  input [0:0]M_SC_R_recv;
  output [0:0]M_SC_R_req;
  output [0:0]M_SC_R_send;
  output [0:0]M_SC_W_info;
  output [68:0]M_SC_W_payld;
  input [0:0]M_SC_W_recv;
  output [0:0]M_SC_W_req;
  output [0:0]M_SC_W_send;
  input [0:0]S_SC_AR_info;
  input [181:0]S_SC_AR_payld;
  output [0:0]S_SC_AR_recv;
  input [0:0]S_SC_AR_req;
  input [0:0]S_SC_AR_send;
  input [0:0]S_SC_AW_info;
  input [181:0]S_SC_AW_payld;
  output [0:0]S_SC_AW_recv;
  input [0:0]S_SC_AW_req;
  input [0:0]S_SC_AW_send;
  input [0:0]S_SC_B_info;
  input [8:0]S_SC_B_payld;
  output [0:0]S_SC_B_recv;
  input [0:0]S_SC_B_req;
  input [0:0]S_SC_B_send;
  input [0:0]S_SC_R_info;
  input [54:0]S_SC_R_payld;
  output [0:0]S_SC_R_recv;
  input [0:0]S_SC_R_req;
  input [0:0]S_SC_R_send;
  input [0:0]S_SC_W_info;
  input [68:0]S_SC_W_payld;
  output [0:0]S_SC_W_recv;
  input [0:0]S_SC_W_req;
  input [0:0]S_SC_W_send;
  input m_axi_aclk;
  input m_axi_aresetn;
  input s_axi_aclk;
  input s_axi_aresetn;

  wire [0:0]S_SC_AR_1_INFO;
  wire [181:0]S_SC_AR_1_PAYLD;
  wire [0:0]S_SC_AR_1_RECV;
  wire [0:0]S_SC_AR_1_REQ;
  wire [0:0]S_SC_AR_1_SEND;
  wire [0:0]S_SC_AW_1_INFO;
  wire [181:0]S_SC_AW_1_PAYLD;
  wire [0:0]S_SC_AW_1_RECV;
  wire [0:0]S_SC_AW_1_REQ;
  wire [0:0]S_SC_AW_1_SEND;
  wire [0:0]S_SC_B_1_INFO;
  wire [8:0]S_SC_B_1_PAYLD;
  wire [0:0]S_SC_B_1_RECV;
  wire [0:0]S_SC_B_1_REQ;
  wire [0:0]S_SC_B_1_SEND;
  wire [0:0]S_SC_R_1_INFO;
  wire [54:0]S_SC_R_1_PAYLD;
  wire [0:0]S_SC_R_1_RECV;
  wire [0:0]S_SC_R_1_REQ;
  wire [0:0]S_SC_R_1_SEND;
  wire [0:0]S_SC_W_1_INFO;
  wire [68:0]S_SC_W_1_PAYLD;
  wire [0:0]S_SC_W_1_RECV;
  wire [0:0]S_SC_W_1_REQ;
  wire [0:0]S_SC_W_1_SEND;
  wire [0:0]m35_ar_node_M_SC_INFO;
  wire [181:0]m35_ar_node_M_SC_PAYLD;
  wire [0:0]m35_ar_node_M_SC_RECV;
  wire [0:0]m35_ar_node_M_SC_REQ;
  wire [0:0]m35_ar_node_M_SC_SEND;
  wire [0:0]m35_aw_node_M_SC_INFO;
  wire [181:0]m35_aw_node_M_SC_PAYLD;
  wire [0:0]m35_aw_node_M_SC_RECV;
  wire [0:0]m35_aw_node_M_SC_REQ;
  wire [0:0]m35_aw_node_M_SC_SEND;
  wire [0:0]m35_b_node_M_SC_INFO;
  wire [8:0]m35_b_node_M_SC_PAYLD;
  wire [0:0]m35_b_node_M_SC_RECV;
  wire [0:0]m35_b_node_M_SC_REQ;
  wire [0:0]m35_b_node_M_SC_SEND;
  wire [0:0]m35_r_node_M_SC_INFO;
  wire [54:0]m35_r_node_M_SC_PAYLD;
  wire [0:0]m35_r_node_M_SC_RECV;
  wire [0:0]m35_r_node_M_SC_REQ;
  wire [0:0]m35_r_node_M_SC_SEND;
  wire [0:0]m35_w_node_M_SC_INFO;
  wire [68:0]m35_w_node_M_SC_PAYLD;
  wire [0:0]m35_w_node_M_SC_RECV;
  wire [0:0]m35_w_node_M_SC_REQ;
  wire [0:0]m35_w_node_M_SC_SEND;
  wire m_axi_aclk_1;
  wire m_axi_aresetn_1;
  wire s_axi_aclk_1;
  wire s_axi_aresetn_1;

  assign M_SC_AR_info[0] = m35_ar_node_M_SC_INFO;
  assign M_SC_AR_payld[181:0] = m35_ar_node_M_SC_PAYLD;
  assign M_SC_AR_req[0] = m35_ar_node_M_SC_REQ;
  assign M_SC_AR_send[0] = m35_ar_node_M_SC_SEND;
  assign M_SC_AW_info[0] = m35_aw_node_M_SC_INFO;
  assign M_SC_AW_payld[181:0] = m35_aw_node_M_SC_PAYLD;
  assign M_SC_AW_req[0] = m35_aw_node_M_SC_REQ;
  assign M_SC_AW_send[0] = m35_aw_node_M_SC_SEND;
  assign M_SC_B_info[0] = m35_b_node_M_SC_INFO;
  assign M_SC_B_payld[8:0] = m35_b_node_M_SC_PAYLD;
  assign M_SC_B_req[0] = m35_b_node_M_SC_REQ;
  assign M_SC_B_send[0] = m35_b_node_M_SC_SEND;
  assign M_SC_R_info[0] = m35_r_node_M_SC_INFO;
  assign M_SC_R_payld[54:0] = m35_r_node_M_SC_PAYLD;
  assign M_SC_R_req[0] = m35_r_node_M_SC_REQ;
  assign M_SC_R_send[0] = m35_r_node_M_SC_SEND;
  assign M_SC_W_info[0] = m35_w_node_M_SC_INFO;
  assign M_SC_W_payld[68:0] = m35_w_node_M_SC_PAYLD;
  assign M_SC_W_req[0] = m35_w_node_M_SC_REQ;
  assign M_SC_W_send[0] = m35_w_node_M_SC_SEND;
  assign S_SC_AR_1_INFO = S_SC_AR_info[0];
  assign S_SC_AR_1_PAYLD = S_SC_AR_payld[181:0];
  assign S_SC_AR_1_REQ = S_SC_AR_req[0];
  assign S_SC_AR_1_SEND = S_SC_AR_send[0];
  assign S_SC_AR_recv[0] = S_SC_AR_1_RECV;
  assign S_SC_AW_1_INFO = S_SC_AW_info[0];
  assign S_SC_AW_1_PAYLD = S_SC_AW_payld[181:0];
  assign S_SC_AW_1_REQ = S_SC_AW_req[0];
  assign S_SC_AW_1_SEND = S_SC_AW_send[0];
  assign S_SC_AW_recv[0] = S_SC_AW_1_RECV;
  assign S_SC_B_1_INFO = S_SC_B_info[0];
  assign S_SC_B_1_PAYLD = S_SC_B_payld[8:0];
  assign S_SC_B_1_REQ = S_SC_B_req[0];
  assign S_SC_B_1_SEND = S_SC_B_send[0];
  assign S_SC_B_recv[0] = S_SC_B_1_RECV;
  assign S_SC_R_1_INFO = S_SC_R_info[0];
  assign S_SC_R_1_PAYLD = S_SC_R_payld[54:0];
  assign S_SC_R_1_REQ = S_SC_R_req[0];
  assign S_SC_R_1_SEND = S_SC_R_send[0];
  assign S_SC_R_recv[0] = S_SC_R_1_RECV;
  assign S_SC_W_1_INFO = S_SC_W_info[0];
  assign S_SC_W_1_PAYLD = S_SC_W_payld[68:0];
  assign S_SC_W_1_REQ = S_SC_W_req[0];
  assign S_SC_W_1_SEND = S_SC_W_send[0];
  assign S_SC_W_recv[0] = S_SC_W_1_RECV;
  assign m35_ar_node_M_SC_RECV = M_SC_AR_recv[0];
  assign m35_aw_node_M_SC_RECV = M_SC_AW_recv[0];
  assign m35_b_node_M_SC_RECV = M_SC_B_recv[0];
  assign m35_r_node_M_SC_RECV = M_SC_R_recv[0];
  assign m35_w_node_M_SC_RECV = M_SC_W_recv[0];
  assign m_axi_aclk_1 = m_axi_aclk;
  assign m_axi_aresetn_1 = m_axi_aresetn;
  assign s_axi_aclk_1 = s_axi_aclk;
  assign s_axi_aresetn_1 = s_axi_aresetn;
  bd_afc3_m35arn_0 m35_ar_node
       (.m_sc_aclk(m_axi_aclk_1),
        .m_sc_aresetn(m_axi_aresetn_1),
        .m_sc_info(m35_ar_node_M_SC_INFO),
        .m_sc_payld(m35_ar_node_M_SC_PAYLD),
        .m_sc_recv(m35_ar_node_M_SC_RECV),
        .m_sc_req(m35_ar_node_M_SC_REQ),
        .m_sc_send(m35_ar_node_M_SC_SEND),
        .s_sc_aclk(s_axi_aclk_1),
        .s_sc_aresetn(s_axi_aresetn_1),
        .s_sc_info(S_SC_AR_1_INFO),
        .s_sc_payld(S_SC_AR_1_PAYLD),
        .s_sc_recv(S_SC_AR_1_RECV),
        .s_sc_req(S_SC_AR_1_REQ),
        .s_sc_send(S_SC_AR_1_SEND));
  bd_afc3_m35awn_0 m35_aw_node
       (.m_sc_aclk(m_axi_aclk_1),
        .m_sc_aresetn(m_axi_aresetn_1),
        .m_sc_info(m35_aw_node_M_SC_INFO),
        .m_sc_payld(m35_aw_node_M_SC_PAYLD),
        .m_sc_recv(m35_aw_node_M_SC_RECV),
        .m_sc_req(m35_aw_node_M_SC_REQ),
        .m_sc_send(m35_aw_node_M_SC_SEND),
        .s_sc_aclk(s_axi_aclk_1),
        .s_sc_aresetn(s_axi_aresetn_1),
        .s_sc_info(S_SC_AW_1_INFO),
        .s_sc_payld(S_SC_AW_1_PAYLD),
        .s_sc_recv(S_SC_AW_1_RECV),
        .s_sc_req(S_SC_AW_1_REQ),
        .s_sc_send(S_SC_AW_1_SEND));
  bd_afc3_m35bn_0 m35_b_node
       (.m_sc_aclk(s_axi_aclk_1),
        .m_sc_aresetn(s_axi_aresetn_1),
        .m_sc_info(m35_b_node_M_SC_INFO),
        .m_sc_payld(m35_b_node_M_SC_PAYLD),
        .m_sc_recv(m35_b_node_M_SC_RECV),
        .m_sc_req(m35_b_node_M_SC_REQ),
        .m_sc_send(m35_b_node_M_SC_SEND),
        .s_sc_aclk(m_axi_aclk_1),
        .s_sc_aresetn(m_axi_aresetn_1),
        .s_sc_info(S_SC_B_1_INFO),
        .s_sc_payld(S_SC_B_1_PAYLD),
        .s_sc_recv(S_SC_B_1_RECV),
        .s_sc_req(S_SC_B_1_REQ),
        .s_sc_send(S_SC_B_1_SEND));
  bd_afc3_m35rn_0 m35_r_node
       (.m_sc_aclk(s_axi_aclk_1),
        .m_sc_aresetn(s_axi_aresetn_1),
        .m_sc_info(m35_r_node_M_SC_INFO),
        .m_sc_payld(m35_r_node_M_SC_PAYLD),
        .m_sc_recv(m35_r_node_M_SC_RECV),
        .m_sc_req(m35_r_node_M_SC_REQ),
        .m_sc_send(m35_r_node_M_SC_SEND),
        .s_sc_aclk(m_axi_aclk_1),
        .s_sc_aresetn(m_axi_aresetn_1),
        .s_sc_info(S_SC_R_1_INFO),
        .s_sc_payld(S_SC_R_1_PAYLD),
        .s_sc_recv(S_SC_R_1_RECV),
        .s_sc_req(S_SC_R_1_REQ),
        .s_sc_send(S_SC_R_1_SEND));
  bd_afc3_m35wn_0 m35_w_node
       (.m_sc_aclk(m_axi_aclk_1),
        .m_sc_aresetn(m_axi_aresetn_1),
        .m_sc_info(m35_w_node_M_SC_INFO),
        .m_sc_payld(m35_w_node_M_SC_PAYLD),
        .m_sc_recv(m35_w_node_M_SC_RECV),
        .m_sc_req(m35_w_node_M_SC_REQ),
        .m_sc_send(m35_w_node_M_SC_SEND),
        .s_sc_aclk(s_axi_aclk_1),
        .s_sc_aresetn(s_axi_aresetn_1),
        .s_sc_info(S_SC_W_1_INFO),
        .s_sc_payld(S_SC_W_1_PAYLD),
        .s_sc_recv(S_SC_W_1_RECV),
        .s_sc_req(S_SC_W_1_REQ),
        .s_sc_send(S_SC_W_1_SEND));
endmodule

module m36_exit_pipeline_imp_1SV6ISA
   (aclk,
    aresetn,
    m_axi_araddr,
    m_axi_arprot,
    m_axi_arready,
    m_axi_arvalid,
    m_axi_awaddr,
    m_axi_awprot,
    m_axi_awready,
    m_axi_awvalid,
    m_axi_bready,
    m_axi_bresp,
    m_axi_bvalid,
    m_axi_rdata,
    m_axi_rready,
    m_axi_rresp,
    m_axi_rvalid,
    m_axi_wdata,
    m_axi_wready,
    m_axi_wstrb,
    m_axi_wvalid,
    s_axi_araddr,
    s_axi_arcache,
    s_axi_arid,
    s_axi_arlen,
    s_axi_arlock,
    s_axi_arprot,
    s_axi_arqos,
    s_axi_arready,
    s_axi_aruser,
    s_axi_arvalid,
    s_axi_awaddr,
    s_axi_awcache,
    s_axi_awid,
    s_axi_awlen,
    s_axi_awlock,
    s_axi_awprot,
    s_axi_awqos,
    s_axi_awready,
    s_axi_awuser,
    s_axi_awvalid,
    s_axi_bid,
    s_axi_bready,
    s_axi_bresp,
    s_axi_buser,
    s_axi_bvalid,
    s_axi_rdata,
    s_axi_rid,
    s_axi_rlast,
    s_axi_rready,
    s_axi_rresp,
    s_axi_ruser,
    s_axi_rvalid,
    s_axi_wdata,
    s_axi_wlast,
    s_axi_wready,
    s_axi_wstrb,
    s_axi_wuser,
    s_axi_wvalid);
  input aclk;
  input aresetn;
  output [9:0]m_axi_araddr;
  output [2:0]m_axi_arprot;
  input m_axi_arready;
  output m_axi_arvalid;
  output [9:0]m_axi_awaddr;
  output [2:0]m_axi_awprot;
  input m_axi_awready;
  output m_axi_awvalid;
  output m_axi_bready;
  input [1:0]m_axi_bresp;
  input m_axi_bvalid;
  input [31:0]m_axi_rdata;
  output m_axi_rready;
  input [1:0]m_axi_rresp;
  input m_axi_rvalid;
  output [31:0]m_axi_wdata;
  input m_axi_wready;
  output [3:0]m_axi_wstrb;
  output m_axi_wvalid;
  input [9:0]s_axi_araddr;
  input [3:0]s_axi_arcache;
  input [2:0]s_axi_arid;
  input [7:0]s_axi_arlen;
  input [0:0]s_axi_arlock;
  input [2:0]s_axi_arprot;
  input [3:0]s_axi_arqos;
  output s_axi_arready;
  input [1023:0]s_axi_aruser;
  input s_axi_arvalid;
  input [9:0]s_axi_awaddr;
  input [3:0]s_axi_awcache;
  input [2:0]s_axi_awid;
  input [7:0]s_axi_awlen;
  input [0:0]s_axi_awlock;
  input [2:0]s_axi_awprot;
  input [3:0]s_axi_awqos;
  output s_axi_awready;
  input [1023:0]s_axi_awuser;
  input s_axi_awvalid;
  output [2:0]s_axi_bid;
  input s_axi_bready;
  output [1:0]s_axi_bresp;
  output [1023:0]s_axi_buser;
  output s_axi_bvalid;
  output [31:0]s_axi_rdata;
  output [2:0]s_axi_rid;
  output s_axi_rlast;
  input s_axi_rready;
  output [1:0]s_axi_rresp;
  output [1023:0]s_axi_ruser;
  output s_axi_rvalid;
  input [31:0]s_axi_wdata;
  input s_axi_wlast;
  output s_axi_wready;
  input [3:0]s_axi_wstrb;
  input [1023:0]s_axi_wuser;
  input s_axi_wvalid;

  wire aclk_1;
  wire aresetn_1;
  wire [9:0]m36_exit_M_AXI_ARADDR;
  wire [2:0]m36_exit_M_AXI_ARPROT;
  wire m36_exit_M_AXI_ARREADY;
  wire m36_exit_M_AXI_ARVALID;
  wire [9:0]m36_exit_M_AXI_AWADDR;
  wire [2:0]m36_exit_M_AXI_AWPROT;
  wire m36_exit_M_AXI_AWREADY;
  wire m36_exit_M_AXI_AWVALID;
  wire m36_exit_M_AXI_BREADY;
  wire [1:0]m36_exit_M_AXI_BRESP;
  wire m36_exit_M_AXI_BVALID;
  wire [31:0]m36_exit_M_AXI_RDATA;
  wire m36_exit_M_AXI_RREADY;
  wire [1:0]m36_exit_M_AXI_RRESP;
  wire m36_exit_M_AXI_RVALID;
  wire [31:0]m36_exit_M_AXI_WDATA;
  wire m36_exit_M_AXI_WREADY;
  wire [3:0]m36_exit_M_AXI_WSTRB;
  wire m36_exit_M_AXI_WVALID;
  wire [9:0]s_axi_1_ARADDR;
  wire [3:0]s_axi_1_ARCACHE;
  wire [2:0]s_axi_1_ARID;
  wire [7:0]s_axi_1_ARLEN;
  wire [0:0]s_axi_1_ARLOCK;
  wire [2:0]s_axi_1_ARPROT;
  wire [3:0]s_axi_1_ARQOS;
  wire s_axi_1_ARREADY;
  wire [1023:0]s_axi_1_ARUSER;
  wire s_axi_1_ARVALID;
  wire [9:0]s_axi_1_AWADDR;
  wire [3:0]s_axi_1_AWCACHE;
  wire [2:0]s_axi_1_AWID;
  wire [7:0]s_axi_1_AWLEN;
  wire [0:0]s_axi_1_AWLOCK;
  wire [2:0]s_axi_1_AWPROT;
  wire [3:0]s_axi_1_AWQOS;
  wire s_axi_1_AWREADY;
  wire [1023:0]s_axi_1_AWUSER;
  wire s_axi_1_AWVALID;
  wire [2:0]s_axi_1_BID;
  wire s_axi_1_BREADY;
  wire [1:0]s_axi_1_BRESP;
  wire [1023:0]s_axi_1_BUSER;
  wire s_axi_1_BVALID;
  wire [31:0]s_axi_1_RDATA;
  wire [2:0]s_axi_1_RID;
  wire s_axi_1_RLAST;
  wire s_axi_1_RREADY;
  wire [1:0]s_axi_1_RRESP;
  wire [1023:0]s_axi_1_RUSER;
  wire s_axi_1_RVALID;
  wire [31:0]s_axi_1_WDATA;
  wire s_axi_1_WLAST;
  wire s_axi_1_WREADY;
  wire [3:0]s_axi_1_WSTRB;
  wire [1023:0]s_axi_1_WUSER;
  wire s_axi_1_WVALID;

  assign aclk_1 = aclk;
  assign aresetn_1 = aresetn;
  assign m36_exit_M_AXI_ARREADY = m_axi_arready;
  assign m36_exit_M_AXI_AWREADY = m_axi_awready;
  assign m36_exit_M_AXI_BRESP = m_axi_bresp[1:0];
  assign m36_exit_M_AXI_BVALID = m_axi_bvalid;
  assign m36_exit_M_AXI_RDATA = m_axi_rdata[31:0];
  assign m36_exit_M_AXI_RRESP = m_axi_rresp[1:0];
  assign m36_exit_M_AXI_RVALID = m_axi_rvalid;
  assign m36_exit_M_AXI_WREADY = m_axi_wready;
  assign m_axi_araddr[9:0] = m36_exit_M_AXI_ARADDR;
  assign m_axi_arprot[2:0] = m36_exit_M_AXI_ARPROT;
  assign m_axi_arvalid = m36_exit_M_AXI_ARVALID;
  assign m_axi_awaddr[9:0] = m36_exit_M_AXI_AWADDR;
  assign m_axi_awprot[2:0] = m36_exit_M_AXI_AWPROT;
  assign m_axi_awvalid = m36_exit_M_AXI_AWVALID;
  assign m_axi_bready = m36_exit_M_AXI_BREADY;
  assign m_axi_rready = m36_exit_M_AXI_RREADY;
  assign m_axi_wdata[31:0] = m36_exit_M_AXI_WDATA;
  assign m_axi_wstrb[3:0] = m36_exit_M_AXI_WSTRB;
  assign m_axi_wvalid = m36_exit_M_AXI_WVALID;
  assign s_axi_1_ARADDR = s_axi_araddr[9:0];
  assign s_axi_1_ARCACHE = s_axi_arcache[3:0];
  assign s_axi_1_ARID = s_axi_arid[2:0];
  assign s_axi_1_ARLEN = s_axi_arlen[7:0];
  assign s_axi_1_ARLOCK = s_axi_arlock[0];
  assign s_axi_1_ARPROT = s_axi_arprot[2:0];
  assign s_axi_1_ARQOS = s_axi_arqos[3:0];
  assign s_axi_1_ARUSER = s_axi_aruser[1023:0];
  assign s_axi_1_ARVALID = s_axi_arvalid;
  assign s_axi_1_AWADDR = s_axi_awaddr[9:0];
  assign s_axi_1_AWCACHE = s_axi_awcache[3:0];
  assign s_axi_1_AWID = s_axi_awid[2:0];
  assign s_axi_1_AWLEN = s_axi_awlen[7:0];
  assign s_axi_1_AWLOCK = s_axi_awlock[0];
  assign s_axi_1_AWPROT = s_axi_awprot[2:0];
  assign s_axi_1_AWQOS = s_axi_awqos[3:0];
  assign s_axi_1_AWUSER = s_axi_awuser[1023:0];
  assign s_axi_1_AWVALID = s_axi_awvalid;
  assign s_axi_1_BREADY = s_axi_bready;
  assign s_axi_1_RREADY = s_axi_rready;
  assign s_axi_1_WDATA = s_axi_wdata[31:0];
  assign s_axi_1_WLAST = s_axi_wlast;
  assign s_axi_1_WSTRB = s_axi_wstrb[3:0];
  assign s_axi_1_WUSER = s_axi_wuser[1023:0];
  assign s_axi_1_WVALID = s_axi_wvalid;
  assign s_axi_arready = s_axi_1_ARREADY;
  assign s_axi_awready = s_axi_1_AWREADY;
  assign s_axi_bid[2:0] = s_axi_1_BID;
  assign s_axi_bresp[1:0] = s_axi_1_BRESP;
  assign s_axi_buser[1023:0] = s_axi_1_BUSER;
  assign s_axi_bvalid = s_axi_1_BVALID;
  assign s_axi_rdata[31:0] = s_axi_1_RDATA;
  assign s_axi_rid[2:0] = s_axi_1_RID;
  assign s_axi_rlast = s_axi_1_RLAST;
  assign s_axi_rresp[1:0] = s_axi_1_RRESP;
  assign s_axi_ruser[1023:0] = s_axi_1_RUSER;
  assign s_axi_rvalid = s_axi_1_RVALID;
  assign s_axi_wready = s_axi_1_WREADY;
  bd_afc3_m36e_0 m36_exit
       (.aclk(aclk_1),
        .aresetn(aresetn_1),
        .m_axi_araddr(m36_exit_M_AXI_ARADDR),
        .m_axi_arprot(m36_exit_M_AXI_ARPROT),
        .m_axi_arready(m36_exit_M_AXI_ARREADY),
        .m_axi_arvalid(m36_exit_M_AXI_ARVALID),
        .m_axi_awaddr(m36_exit_M_AXI_AWADDR),
        .m_axi_awprot(m36_exit_M_AXI_AWPROT),
        .m_axi_awready(m36_exit_M_AXI_AWREADY),
        .m_axi_awvalid(m36_exit_M_AXI_AWVALID),
        .m_axi_bready(m36_exit_M_AXI_BREADY),
        .m_axi_bresp(m36_exit_M_AXI_BRESP),
        .m_axi_bvalid(m36_exit_M_AXI_BVALID),
        .m_axi_rdata(m36_exit_M_AXI_RDATA),
        .m_axi_rready(m36_exit_M_AXI_RREADY),
        .m_axi_rresp(m36_exit_M_AXI_RRESP),
        .m_axi_rvalid(m36_exit_M_AXI_RVALID),
        .m_axi_wdata(m36_exit_M_AXI_WDATA),
        .m_axi_wready(m36_exit_M_AXI_WREADY),
        .m_axi_wstrb(m36_exit_M_AXI_WSTRB),
        .m_axi_wvalid(m36_exit_M_AXI_WVALID),
        .s_axi_araddr(s_axi_1_ARADDR),
        .s_axi_arcache(s_axi_1_ARCACHE),
        .s_axi_arid(s_axi_1_ARID),
        .s_axi_arlen(s_axi_1_ARLEN),
        .s_axi_arlock(s_axi_1_ARLOCK),
        .s_axi_arprot(s_axi_1_ARPROT),
        .s_axi_arqos(s_axi_1_ARQOS),
        .s_axi_arready(s_axi_1_ARREADY),
        .s_axi_aruser(s_axi_1_ARUSER),
        .s_axi_arvalid(s_axi_1_ARVALID),
        .s_axi_awaddr(s_axi_1_AWADDR),
        .s_axi_awcache(s_axi_1_AWCACHE),
        .s_axi_awid(s_axi_1_AWID),
        .s_axi_awlen(s_axi_1_AWLEN),
        .s_axi_awlock(s_axi_1_AWLOCK),
        .s_axi_awprot(s_axi_1_AWPROT),
        .s_axi_awqos(s_axi_1_AWQOS),
        .s_axi_awready(s_axi_1_AWREADY),
        .s_axi_awuser(s_axi_1_AWUSER),
        .s_axi_awvalid(s_axi_1_AWVALID),
        .s_axi_bid(s_axi_1_BID),
        .s_axi_bready(s_axi_1_BREADY),
        .s_axi_bresp(s_axi_1_BRESP),
        .s_axi_buser(s_axi_1_BUSER),
        .s_axi_bvalid(s_axi_1_BVALID),
        .s_axi_rdata(s_axi_1_RDATA),
        .s_axi_rid(s_axi_1_RID),
        .s_axi_rlast(s_axi_1_RLAST),
        .s_axi_rready(s_axi_1_RREADY),
        .s_axi_rresp(s_axi_1_RRESP),
        .s_axi_ruser(s_axi_1_RUSER),
        .s_axi_rvalid(s_axi_1_RVALID),
        .s_axi_wdata(s_axi_1_WDATA),
        .s_axi_wlast(s_axi_1_WLAST),
        .s_axi_wready(s_axi_1_WREADY),
        .s_axi_wstrb(s_axi_1_WSTRB),
        .s_axi_wuser(s_axi_1_WUSER),
        .s_axi_wvalid(s_axi_1_WVALID));
endmodule

module m36_nodes_imp_NEEPXG
   (M_SC_AR_info,
    M_SC_AR_payld,
    M_SC_AR_recv,
    M_SC_AR_req,
    M_SC_AR_send,
    M_SC_AW_info,
    M_SC_AW_payld,
    M_SC_AW_recv,
    M_SC_AW_req,
    M_SC_AW_send,
    M_SC_B_info,
    M_SC_B_payld,
    M_SC_B_recv,
    M_SC_B_req,
    M_SC_B_send,
    M_SC_R_info,
    M_SC_R_payld,
    M_SC_R_recv,
    M_SC_R_req,
    M_SC_R_send,
    M_SC_W_info,
    M_SC_W_payld,
    M_SC_W_recv,
    M_SC_W_req,
    M_SC_W_send,
    S_SC_AR_info,
    S_SC_AR_payld,
    S_SC_AR_recv,
    S_SC_AR_req,
    S_SC_AR_send,
    S_SC_AW_info,
    S_SC_AW_payld,
    S_SC_AW_recv,
    S_SC_AW_req,
    S_SC_AW_send,
    S_SC_B_info,
    S_SC_B_payld,
    S_SC_B_recv,
    S_SC_B_req,
    S_SC_B_send,
    S_SC_R_info,
    S_SC_R_payld,
    S_SC_R_recv,
    S_SC_R_req,
    S_SC_R_send,
    S_SC_W_info,
    S_SC_W_payld,
    S_SC_W_recv,
    S_SC_W_req,
    S_SC_W_send,
    m_axi_aclk,
    m_axi_aresetn,
    s_axi_aclk,
    s_axi_aresetn);
  output [0:0]M_SC_AR_info;
  output [181:0]M_SC_AR_payld;
  input [0:0]M_SC_AR_recv;
  output [0:0]M_SC_AR_req;
  output [0:0]M_SC_AR_send;
  output [0:0]M_SC_AW_info;
  output [181:0]M_SC_AW_payld;
  input [0:0]M_SC_AW_recv;
  output [0:0]M_SC_AW_req;
  output [0:0]M_SC_AW_send;
  output [0:0]M_SC_B_info;
  output [8:0]M_SC_B_payld;
  input [0:0]M_SC_B_recv;
  output [0:0]M_SC_B_req;
  output [0:0]M_SC_B_send;
  output [0:0]M_SC_R_info;
  output [54:0]M_SC_R_payld;
  input [0:0]M_SC_R_recv;
  output [0:0]M_SC_R_req;
  output [0:0]M_SC_R_send;
  output [0:0]M_SC_W_info;
  output [68:0]M_SC_W_payld;
  input [0:0]M_SC_W_recv;
  output [0:0]M_SC_W_req;
  output [0:0]M_SC_W_send;
  input [0:0]S_SC_AR_info;
  input [181:0]S_SC_AR_payld;
  output [0:0]S_SC_AR_recv;
  input [0:0]S_SC_AR_req;
  input [0:0]S_SC_AR_send;
  input [0:0]S_SC_AW_info;
  input [181:0]S_SC_AW_payld;
  output [0:0]S_SC_AW_recv;
  input [0:0]S_SC_AW_req;
  input [0:0]S_SC_AW_send;
  input [0:0]S_SC_B_info;
  input [8:0]S_SC_B_payld;
  output [0:0]S_SC_B_recv;
  input [0:0]S_SC_B_req;
  input [0:0]S_SC_B_send;
  input [0:0]S_SC_R_info;
  input [54:0]S_SC_R_payld;
  output [0:0]S_SC_R_recv;
  input [0:0]S_SC_R_req;
  input [0:0]S_SC_R_send;
  input [0:0]S_SC_W_info;
  input [68:0]S_SC_W_payld;
  output [0:0]S_SC_W_recv;
  input [0:0]S_SC_W_req;
  input [0:0]S_SC_W_send;
  input m_axi_aclk;
  input m_axi_aresetn;
  input s_axi_aclk;
  input s_axi_aresetn;

  wire [0:0]S_SC_AR_1_INFO;
  wire [181:0]S_SC_AR_1_PAYLD;
  wire [0:0]S_SC_AR_1_RECV;
  wire [0:0]S_SC_AR_1_REQ;
  wire [0:0]S_SC_AR_1_SEND;
  wire [0:0]S_SC_AW_1_INFO;
  wire [181:0]S_SC_AW_1_PAYLD;
  wire [0:0]S_SC_AW_1_RECV;
  wire [0:0]S_SC_AW_1_REQ;
  wire [0:0]S_SC_AW_1_SEND;
  wire [0:0]S_SC_B_1_INFO;
  wire [8:0]S_SC_B_1_PAYLD;
  wire [0:0]S_SC_B_1_RECV;
  wire [0:0]S_SC_B_1_REQ;
  wire [0:0]S_SC_B_1_SEND;
  wire [0:0]S_SC_R_1_INFO;
  wire [54:0]S_SC_R_1_PAYLD;
  wire [0:0]S_SC_R_1_RECV;
  wire [0:0]S_SC_R_1_REQ;
  wire [0:0]S_SC_R_1_SEND;
  wire [0:0]S_SC_W_1_INFO;
  wire [68:0]S_SC_W_1_PAYLD;
  wire [0:0]S_SC_W_1_RECV;
  wire [0:0]S_SC_W_1_REQ;
  wire [0:0]S_SC_W_1_SEND;
  wire [0:0]m36_ar_node_M_SC_INFO;
  wire [181:0]m36_ar_node_M_SC_PAYLD;
  wire [0:0]m36_ar_node_M_SC_RECV;
  wire [0:0]m36_ar_node_M_SC_REQ;
  wire [0:0]m36_ar_node_M_SC_SEND;
  wire [0:0]m36_aw_node_M_SC_INFO;
  wire [181:0]m36_aw_node_M_SC_PAYLD;
  wire [0:0]m36_aw_node_M_SC_RECV;
  wire [0:0]m36_aw_node_M_SC_REQ;
  wire [0:0]m36_aw_node_M_SC_SEND;
  wire [0:0]m36_b_node_M_SC_INFO;
  wire [8:0]m36_b_node_M_SC_PAYLD;
  wire [0:0]m36_b_node_M_SC_RECV;
  wire [0:0]m36_b_node_M_SC_REQ;
  wire [0:0]m36_b_node_M_SC_SEND;
  wire [0:0]m36_r_node_M_SC_INFO;
  wire [54:0]m36_r_node_M_SC_PAYLD;
  wire [0:0]m36_r_node_M_SC_RECV;
  wire [0:0]m36_r_node_M_SC_REQ;
  wire [0:0]m36_r_node_M_SC_SEND;
  wire [0:0]m36_w_node_M_SC_INFO;
  wire [68:0]m36_w_node_M_SC_PAYLD;
  wire [0:0]m36_w_node_M_SC_RECV;
  wire [0:0]m36_w_node_M_SC_REQ;
  wire [0:0]m36_w_node_M_SC_SEND;
  wire m_axi_aclk_1;
  wire m_axi_aresetn_1;
  wire s_axi_aclk_1;
  wire s_axi_aresetn_1;

  assign M_SC_AR_info[0] = m36_ar_node_M_SC_INFO;
  assign M_SC_AR_payld[181:0] = m36_ar_node_M_SC_PAYLD;
  assign M_SC_AR_req[0] = m36_ar_node_M_SC_REQ;
  assign M_SC_AR_send[0] = m36_ar_node_M_SC_SEND;
  assign M_SC_AW_info[0] = m36_aw_node_M_SC_INFO;
  assign M_SC_AW_payld[181:0] = m36_aw_node_M_SC_PAYLD;
  assign M_SC_AW_req[0] = m36_aw_node_M_SC_REQ;
  assign M_SC_AW_send[0] = m36_aw_node_M_SC_SEND;
  assign M_SC_B_info[0] = m36_b_node_M_SC_INFO;
  assign M_SC_B_payld[8:0] = m36_b_node_M_SC_PAYLD;
  assign M_SC_B_req[0] = m36_b_node_M_SC_REQ;
  assign M_SC_B_send[0] = m36_b_node_M_SC_SEND;
  assign M_SC_R_info[0] = m36_r_node_M_SC_INFO;
  assign M_SC_R_payld[54:0] = m36_r_node_M_SC_PAYLD;
  assign M_SC_R_req[0] = m36_r_node_M_SC_REQ;
  assign M_SC_R_send[0] = m36_r_node_M_SC_SEND;
  assign M_SC_W_info[0] = m36_w_node_M_SC_INFO;
  assign M_SC_W_payld[68:0] = m36_w_node_M_SC_PAYLD;
  assign M_SC_W_req[0] = m36_w_node_M_SC_REQ;
  assign M_SC_W_send[0] = m36_w_node_M_SC_SEND;
  assign S_SC_AR_1_INFO = S_SC_AR_info[0];
  assign S_SC_AR_1_PAYLD = S_SC_AR_payld[181:0];
  assign S_SC_AR_1_REQ = S_SC_AR_req[0];
  assign S_SC_AR_1_SEND = S_SC_AR_send[0];
  assign S_SC_AR_recv[0] = S_SC_AR_1_RECV;
  assign S_SC_AW_1_INFO = S_SC_AW_info[0];
  assign S_SC_AW_1_PAYLD = S_SC_AW_payld[181:0];
  assign S_SC_AW_1_REQ = S_SC_AW_req[0];
  assign S_SC_AW_1_SEND = S_SC_AW_send[0];
  assign S_SC_AW_recv[0] = S_SC_AW_1_RECV;
  assign S_SC_B_1_INFO = S_SC_B_info[0];
  assign S_SC_B_1_PAYLD = S_SC_B_payld[8:0];
  assign S_SC_B_1_REQ = S_SC_B_req[0];
  assign S_SC_B_1_SEND = S_SC_B_send[0];
  assign S_SC_B_recv[0] = S_SC_B_1_RECV;
  assign S_SC_R_1_INFO = S_SC_R_info[0];
  assign S_SC_R_1_PAYLD = S_SC_R_payld[54:0];
  assign S_SC_R_1_REQ = S_SC_R_req[0];
  assign S_SC_R_1_SEND = S_SC_R_send[0];
  assign S_SC_R_recv[0] = S_SC_R_1_RECV;
  assign S_SC_W_1_INFO = S_SC_W_info[0];
  assign S_SC_W_1_PAYLD = S_SC_W_payld[68:0];
  assign S_SC_W_1_REQ = S_SC_W_req[0];
  assign S_SC_W_1_SEND = S_SC_W_send[0];
  assign S_SC_W_recv[0] = S_SC_W_1_RECV;
  assign m36_ar_node_M_SC_RECV = M_SC_AR_recv[0];
  assign m36_aw_node_M_SC_RECV = M_SC_AW_recv[0];
  assign m36_b_node_M_SC_RECV = M_SC_B_recv[0];
  assign m36_r_node_M_SC_RECV = M_SC_R_recv[0];
  assign m36_w_node_M_SC_RECV = M_SC_W_recv[0];
  assign m_axi_aclk_1 = m_axi_aclk;
  assign m_axi_aresetn_1 = m_axi_aresetn;
  assign s_axi_aclk_1 = s_axi_aclk;
  assign s_axi_aresetn_1 = s_axi_aresetn;
  bd_afc3_m36arn_0 m36_ar_node
       (.m_sc_aclk(m_axi_aclk_1),
        .m_sc_aresetn(m_axi_aresetn_1),
        .m_sc_info(m36_ar_node_M_SC_INFO),
        .m_sc_payld(m36_ar_node_M_SC_PAYLD),
        .m_sc_recv(m36_ar_node_M_SC_RECV),
        .m_sc_req(m36_ar_node_M_SC_REQ),
        .m_sc_send(m36_ar_node_M_SC_SEND),
        .s_sc_aclk(s_axi_aclk_1),
        .s_sc_aresetn(s_axi_aresetn_1),
        .s_sc_info(S_SC_AR_1_INFO),
        .s_sc_payld(S_SC_AR_1_PAYLD),
        .s_sc_recv(S_SC_AR_1_RECV),
        .s_sc_req(S_SC_AR_1_REQ),
        .s_sc_send(S_SC_AR_1_SEND));
  bd_afc3_m36awn_0 m36_aw_node
       (.m_sc_aclk(m_axi_aclk_1),
        .m_sc_aresetn(m_axi_aresetn_1),
        .m_sc_info(m36_aw_node_M_SC_INFO),
        .m_sc_payld(m36_aw_node_M_SC_PAYLD),
        .m_sc_recv(m36_aw_node_M_SC_RECV),
        .m_sc_req(m36_aw_node_M_SC_REQ),
        .m_sc_send(m36_aw_node_M_SC_SEND),
        .s_sc_aclk(s_axi_aclk_1),
        .s_sc_aresetn(s_axi_aresetn_1),
        .s_sc_info(S_SC_AW_1_INFO),
        .s_sc_payld(S_SC_AW_1_PAYLD),
        .s_sc_recv(S_SC_AW_1_RECV),
        .s_sc_req(S_SC_AW_1_REQ),
        .s_sc_send(S_SC_AW_1_SEND));
  bd_afc3_m36bn_0 m36_b_node
       (.m_sc_aclk(s_axi_aclk_1),
        .m_sc_aresetn(s_axi_aresetn_1),
        .m_sc_info(m36_b_node_M_SC_INFO),
        .m_sc_payld(m36_b_node_M_SC_PAYLD),
        .m_sc_recv(m36_b_node_M_SC_RECV),
        .m_sc_req(m36_b_node_M_SC_REQ),
        .m_sc_send(m36_b_node_M_SC_SEND),
        .s_sc_aclk(m_axi_aclk_1),
        .s_sc_aresetn(m_axi_aresetn_1),
        .s_sc_info(S_SC_B_1_INFO),
        .s_sc_payld(S_SC_B_1_PAYLD),
        .s_sc_recv(S_SC_B_1_RECV),
        .s_sc_req(S_SC_B_1_REQ),
        .s_sc_send(S_SC_B_1_SEND));
  bd_afc3_m36rn_0 m36_r_node
       (.m_sc_aclk(s_axi_aclk_1),
        .m_sc_aresetn(s_axi_aresetn_1),
        .m_sc_info(m36_r_node_M_SC_INFO),
        .m_sc_payld(m36_r_node_M_SC_PAYLD),
        .m_sc_recv(m36_r_node_M_SC_RECV),
        .m_sc_req(m36_r_node_M_SC_REQ),
        .m_sc_send(m36_r_node_M_SC_SEND),
        .s_sc_aclk(m_axi_aclk_1),
        .s_sc_aresetn(m_axi_aresetn_1),
        .s_sc_info(S_SC_R_1_INFO),
        .s_sc_payld(S_SC_R_1_PAYLD),
        .s_sc_recv(S_SC_R_1_RECV),
        .s_sc_req(S_SC_R_1_REQ),
        .s_sc_send(S_SC_R_1_SEND));
  bd_afc3_m36wn_0 m36_w_node
       (.m_sc_aclk(m_axi_aclk_1),
        .m_sc_aresetn(m_axi_aresetn_1),
        .m_sc_info(m36_w_node_M_SC_INFO),
        .m_sc_payld(m36_w_node_M_SC_PAYLD),
        .m_sc_recv(m36_w_node_M_SC_RECV),
        .m_sc_req(m36_w_node_M_SC_REQ),
        .m_sc_send(m36_w_node_M_SC_SEND),
        .s_sc_aclk(s_axi_aclk_1),
        .s_sc_aresetn(s_axi_aresetn_1),
        .s_sc_info(S_SC_W_1_INFO),
        .s_sc_payld(S_SC_W_1_PAYLD),
        .s_sc_recv(S_SC_W_1_RECV),
        .s_sc_req(S_SC_W_1_REQ),
        .s_sc_send(S_SC_W_1_SEND));
endmodule

module m37_exit_pipeline_imp_1YPVWII
   (aclk,
    aresetn,
    m_axi_araddr,
    m_axi_arprot,
    m_axi_arready,
    m_axi_arvalid,
    m_axi_awaddr,
    m_axi_awprot,
    m_axi_awready,
    m_axi_awvalid,
    m_axi_bready,
    m_axi_bresp,
    m_axi_bvalid,
    m_axi_rdata,
    m_axi_rready,
    m_axi_rresp,
    m_axi_rvalid,
    m_axi_wdata,
    m_axi_wready,
    m_axi_wstrb,
    m_axi_wvalid,
    s_axi_araddr,
    s_axi_arcache,
    s_axi_arid,
    s_axi_arlen,
    s_axi_arlock,
    s_axi_arprot,
    s_axi_arqos,
    s_axi_arready,
    s_axi_aruser,
    s_axi_arvalid,
    s_axi_awaddr,
    s_axi_awcache,
    s_axi_awid,
    s_axi_awlen,
    s_axi_awlock,
    s_axi_awprot,
    s_axi_awqos,
    s_axi_awready,
    s_axi_awuser,
    s_axi_awvalid,
    s_axi_bid,
    s_axi_bready,
    s_axi_bresp,
    s_axi_buser,
    s_axi_bvalid,
    s_axi_rdata,
    s_axi_rid,
    s_axi_rlast,
    s_axi_rready,
    s_axi_rresp,
    s_axi_ruser,
    s_axi_rvalid,
    s_axi_wdata,
    s_axi_wlast,
    s_axi_wready,
    s_axi_wstrb,
    s_axi_wuser,
    s_axi_wvalid);
  input aclk;
  input aresetn;
  output [9:0]m_axi_araddr;
  output [2:0]m_axi_arprot;
  input m_axi_arready;
  output m_axi_arvalid;
  output [9:0]m_axi_awaddr;
  output [2:0]m_axi_awprot;
  input m_axi_awready;
  output m_axi_awvalid;
  output m_axi_bready;
  input [1:0]m_axi_bresp;
  input m_axi_bvalid;
  input [31:0]m_axi_rdata;
  output m_axi_rready;
  input [1:0]m_axi_rresp;
  input m_axi_rvalid;
  output [31:0]m_axi_wdata;
  input m_axi_wready;
  output [3:0]m_axi_wstrb;
  output m_axi_wvalid;
  input [9:0]s_axi_araddr;
  input [3:0]s_axi_arcache;
  input [2:0]s_axi_arid;
  input [7:0]s_axi_arlen;
  input [0:0]s_axi_arlock;
  input [2:0]s_axi_arprot;
  input [3:0]s_axi_arqos;
  output s_axi_arready;
  input [1023:0]s_axi_aruser;
  input s_axi_arvalid;
  input [9:0]s_axi_awaddr;
  input [3:0]s_axi_awcache;
  input [2:0]s_axi_awid;
  input [7:0]s_axi_awlen;
  input [0:0]s_axi_awlock;
  input [2:0]s_axi_awprot;
  input [3:0]s_axi_awqos;
  output s_axi_awready;
  input [1023:0]s_axi_awuser;
  input s_axi_awvalid;
  output [2:0]s_axi_bid;
  input s_axi_bready;
  output [1:0]s_axi_bresp;
  output [1023:0]s_axi_buser;
  output s_axi_bvalid;
  output [31:0]s_axi_rdata;
  output [2:0]s_axi_rid;
  output s_axi_rlast;
  input s_axi_rready;
  output [1:0]s_axi_rresp;
  output [1023:0]s_axi_ruser;
  output s_axi_rvalid;
  input [31:0]s_axi_wdata;
  input s_axi_wlast;
  output s_axi_wready;
  input [3:0]s_axi_wstrb;
  input [1023:0]s_axi_wuser;
  input s_axi_wvalid;

  wire aclk_1;
  wire aresetn_1;
  wire [9:0]m37_exit_M_AXI_ARADDR;
  wire [2:0]m37_exit_M_AXI_ARPROT;
  wire m37_exit_M_AXI_ARREADY;
  wire m37_exit_M_AXI_ARVALID;
  wire [9:0]m37_exit_M_AXI_AWADDR;
  wire [2:0]m37_exit_M_AXI_AWPROT;
  wire m37_exit_M_AXI_AWREADY;
  wire m37_exit_M_AXI_AWVALID;
  wire m37_exit_M_AXI_BREADY;
  wire [1:0]m37_exit_M_AXI_BRESP;
  wire m37_exit_M_AXI_BVALID;
  wire [31:0]m37_exit_M_AXI_RDATA;
  wire m37_exit_M_AXI_RREADY;
  wire [1:0]m37_exit_M_AXI_RRESP;
  wire m37_exit_M_AXI_RVALID;
  wire [31:0]m37_exit_M_AXI_WDATA;
  wire m37_exit_M_AXI_WREADY;
  wire [3:0]m37_exit_M_AXI_WSTRB;
  wire m37_exit_M_AXI_WVALID;
  wire [9:0]s_axi_1_ARADDR;
  wire [3:0]s_axi_1_ARCACHE;
  wire [2:0]s_axi_1_ARID;
  wire [7:0]s_axi_1_ARLEN;
  wire [0:0]s_axi_1_ARLOCK;
  wire [2:0]s_axi_1_ARPROT;
  wire [3:0]s_axi_1_ARQOS;
  wire s_axi_1_ARREADY;
  wire [1023:0]s_axi_1_ARUSER;
  wire s_axi_1_ARVALID;
  wire [9:0]s_axi_1_AWADDR;
  wire [3:0]s_axi_1_AWCACHE;
  wire [2:0]s_axi_1_AWID;
  wire [7:0]s_axi_1_AWLEN;
  wire [0:0]s_axi_1_AWLOCK;
  wire [2:0]s_axi_1_AWPROT;
  wire [3:0]s_axi_1_AWQOS;
  wire s_axi_1_AWREADY;
  wire [1023:0]s_axi_1_AWUSER;
  wire s_axi_1_AWVALID;
  wire [2:0]s_axi_1_BID;
  wire s_axi_1_BREADY;
  wire [1:0]s_axi_1_BRESP;
  wire [1023:0]s_axi_1_BUSER;
  wire s_axi_1_BVALID;
  wire [31:0]s_axi_1_RDATA;
  wire [2:0]s_axi_1_RID;
  wire s_axi_1_RLAST;
  wire s_axi_1_RREADY;
  wire [1:0]s_axi_1_RRESP;
  wire [1023:0]s_axi_1_RUSER;
  wire s_axi_1_RVALID;
  wire [31:0]s_axi_1_WDATA;
  wire s_axi_1_WLAST;
  wire s_axi_1_WREADY;
  wire [3:0]s_axi_1_WSTRB;
  wire [1023:0]s_axi_1_WUSER;
  wire s_axi_1_WVALID;

  assign aclk_1 = aclk;
  assign aresetn_1 = aresetn;
  assign m37_exit_M_AXI_ARREADY = m_axi_arready;
  assign m37_exit_M_AXI_AWREADY = m_axi_awready;
  assign m37_exit_M_AXI_BRESP = m_axi_bresp[1:0];
  assign m37_exit_M_AXI_BVALID = m_axi_bvalid;
  assign m37_exit_M_AXI_RDATA = m_axi_rdata[31:0];
  assign m37_exit_M_AXI_RRESP = m_axi_rresp[1:0];
  assign m37_exit_M_AXI_RVALID = m_axi_rvalid;
  assign m37_exit_M_AXI_WREADY = m_axi_wready;
  assign m_axi_araddr[9:0] = m37_exit_M_AXI_ARADDR;
  assign m_axi_arprot[2:0] = m37_exit_M_AXI_ARPROT;
  assign m_axi_arvalid = m37_exit_M_AXI_ARVALID;
  assign m_axi_awaddr[9:0] = m37_exit_M_AXI_AWADDR;
  assign m_axi_awprot[2:0] = m37_exit_M_AXI_AWPROT;
  assign m_axi_awvalid = m37_exit_M_AXI_AWVALID;
  assign m_axi_bready = m37_exit_M_AXI_BREADY;
  assign m_axi_rready = m37_exit_M_AXI_RREADY;
  assign m_axi_wdata[31:0] = m37_exit_M_AXI_WDATA;
  assign m_axi_wstrb[3:0] = m37_exit_M_AXI_WSTRB;
  assign m_axi_wvalid = m37_exit_M_AXI_WVALID;
  assign s_axi_1_ARADDR = s_axi_araddr[9:0];
  assign s_axi_1_ARCACHE = s_axi_arcache[3:0];
  assign s_axi_1_ARID = s_axi_arid[2:0];
  assign s_axi_1_ARLEN = s_axi_arlen[7:0];
  assign s_axi_1_ARLOCK = s_axi_arlock[0];
  assign s_axi_1_ARPROT = s_axi_arprot[2:0];
  assign s_axi_1_ARQOS = s_axi_arqos[3:0];
  assign s_axi_1_ARUSER = s_axi_aruser[1023:0];
  assign s_axi_1_ARVALID = s_axi_arvalid;
  assign s_axi_1_AWADDR = s_axi_awaddr[9:0];
  assign s_axi_1_AWCACHE = s_axi_awcache[3:0];
  assign s_axi_1_AWID = s_axi_awid[2:0];
  assign s_axi_1_AWLEN = s_axi_awlen[7:0];
  assign s_axi_1_AWLOCK = s_axi_awlock[0];
  assign s_axi_1_AWPROT = s_axi_awprot[2:0];
  assign s_axi_1_AWQOS = s_axi_awqos[3:0];
  assign s_axi_1_AWUSER = s_axi_awuser[1023:0];
  assign s_axi_1_AWVALID = s_axi_awvalid;
  assign s_axi_1_BREADY = s_axi_bready;
  assign s_axi_1_RREADY = s_axi_rready;
  assign s_axi_1_WDATA = s_axi_wdata[31:0];
  assign s_axi_1_WLAST = s_axi_wlast;
  assign s_axi_1_WSTRB = s_axi_wstrb[3:0];
  assign s_axi_1_WUSER = s_axi_wuser[1023:0];
  assign s_axi_1_WVALID = s_axi_wvalid;
  assign s_axi_arready = s_axi_1_ARREADY;
  assign s_axi_awready = s_axi_1_AWREADY;
  assign s_axi_bid[2:0] = s_axi_1_BID;
  assign s_axi_bresp[1:0] = s_axi_1_BRESP;
  assign s_axi_buser[1023:0] = s_axi_1_BUSER;
  assign s_axi_bvalid = s_axi_1_BVALID;
  assign s_axi_rdata[31:0] = s_axi_1_RDATA;
  assign s_axi_rid[2:0] = s_axi_1_RID;
  assign s_axi_rlast = s_axi_1_RLAST;
  assign s_axi_rresp[1:0] = s_axi_1_RRESP;
  assign s_axi_ruser[1023:0] = s_axi_1_RUSER;
  assign s_axi_rvalid = s_axi_1_RVALID;
  assign s_axi_wready = s_axi_1_WREADY;
  bd_afc3_m37e_0 m37_exit
       (.aclk(aclk_1),
        .aresetn(aresetn_1),
        .m_axi_araddr(m37_exit_M_AXI_ARADDR),
        .m_axi_arprot(m37_exit_M_AXI_ARPROT),
        .m_axi_arready(m37_exit_M_AXI_ARREADY),
        .m_axi_arvalid(m37_exit_M_AXI_ARVALID),
        .m_axi_awaddr(m37_exit_M_AXI_AWADDR),
        .m_axi_awprot(m37_exit_M_AXI_AWPROT),
        .m_axi_awready(m37_exit_M_AXI_AWREADY),
        .m_axi_awvalid(m37_exit_M_AXI_AWVALID),
        .m_axi_bready(m37_exit_M_AXI_BREADY),
        .m_axi_bresp(m37_exit_M_AXI_BRESP),
        .m_axi_bvalid(m37_exit_M_AXI_BVALID),
        .m_axi_rdata(m37_exit_M_AXI_RDATA),
        .m_axi_rready(m37_exit_M_AXI_RREADY),
        .m_axi_rresp(m37_exit_M_AXI_RRESP),
        .m_axi_rvalid(m37_exit_M_AXI_RVALID),
        .m_axi_wdata(m37_exit_M_AXI_WDATA),
        .m_axi_wready(m37_exit_M_AXI_WREADY),
        .m_axi_wstrb(m37_exit_M_AXI_WSTRB),
        .m_axi_wvalid(m37_exit_M_AXI_WVALID),
        .s_axi_araddr(s_axi_1_ARADDR),
        .s_axi_arcache(s_axi_1_ARCACHE),
        .s_axi_arid(s_axi_1_ARID),
        .s_axi_arlen(s_axi_1_ARLEN),
        .s_axi_arlock(s_axi_1_ARLOCK),
        .s_axi_arprot(s_axi_1_ARPROT),
        .s_axi_arqos(s_axi_1_ARQOS),
        .s_axi_arready(s_axi_1_ARREADY),
        .s_axi_aruser(s_axi_1_ARUSER),
        .s_axi_arvalid(s_axi_1_ARVALID),
        .s_axi_awaddr(s_axi_1_AWADDR),
        .s_axi_awcache(s_axi_1_AWCACHE),
        .s_axi_awid(s_axi_1_AWID),
        .s_axi_awlen(s_axi_1_AWLEN),
        .s_axi_awlock(s_axi_1_AWLOCK),
        .s_axi_awprot(s_axi_1_AWPROT),
        .s_axi_awqos(s_axi_1_AWQOS),
        .s_axi_awready(s_axi_1_AWREADY),
        .s_axi_awuser(s_axi_1_AWUSER),
        .s_axi_awvalid(s_axi_1_AWVALID),
        .s_axi_bid(s_axi_1_BID),
        .s_axi_bready(s_axi_1_BREADY),
        .s_axi_bresp(s_axi_1_BRESP),
        .s_axi_buser(s_axi_1_BUSER),
        .s_axi_bvalid(s_axi_1_BVALID),
        .s_axi_rdata(s_axi_1_RDATA),
        .s_axi_rid(s_axi_1_RID),
        .s_axi_rlast(s_axi_1_RLAST),
        .s_axi_rready(s_axi_1_RREADY),
        .s_axi_rresp(s_axi_1_RRESP),
        .s_axi_ruser(s_axi_1_RUSER),
        .s_axi_rvalid(s_axi_1_RVALID),
        .s_axi_wdata(s_axi_1_WDATA),
        .s_axi_wlast(s_axi_1_WLAST),
        .s_axi_wready(s_axi_1_WREADY),
        .s_axi_wstrb(s_axi_1_WSTRB),
        .s_axi_wuser(s_axi_1_WUSER),
        .s_axi_wvalid(s_axi_1_WVALID));
endmodule

module m37_nodes_imp_1JV8NUA
   (M_SC_AR_info,
    M_SC_AR_payld,
    M_SC_AR_recv,
    M_SC_AR_req,
    M_SC_AR_send,
    M_SC_AW_info,
    M_SC_AW_payld,
    M_SC_AW_recv,
    M_SC_AW_req,
    M_SC_AW_send,
    M_SC_B_info,
    M_SC_B_payld,
    M_SC_B_recv,
    M_SC_B_req,
    M_SC_B_send,
    M_SC_R_info,
    M_SC_R_payld,
    M_SC_R_recv,
    M_SC_R_req,
    M_SC_R_send,
    M_SC_W_info,
    M_SC_W_payld,
    M_SC_W_recv,
    M_SC_W_req,
    M_SC_W_send,
    S_SC_AR_info,
    S_SC_AR_payld,
    S_SC_AR_recv,
    S_SC_AR_req,
    S_SC_AR_send,
    S_SC_AW_info,
    S_SC_AW_payld,
    S_SC_AW_recv,
    S_SC_AW_req,
    S_SC_AW_send,
    S_SC_B_info,
    S_SC_B_payld,
    S_SC_B_recv,
    S_SC_B_req,
    S_SC_B_send,
    S_SC_R_info,
    S_SC_R_payld,
    S_SC_R_recv,
    S_SC_R_req,
    S_SC_R_send,
    S_SC_W_info,
    S_SC_W_payld,
    S_SC_W_recv,
    S_SC_W_req,
    S_SC_W_send,
    m_axi_aclk,
    m_axi_aresetn,
    s_axi_aclk,
    s_axi_aresetn);
  output [0:0]M_SC_AR_info;
  output [181:0]M_SC_AR_payld;
  input [0:0]M_SC_AR_recv;
  output [0:0]M_SC_AR_req;
  output [0:0]M_SC_AR_send;
  output [0:0]M_SC_AW_info;
  output [181:0]M_SC_AW_payld;
  input [0:0]M_SC_AW_recv;
  output [0:0]M_SC_AW_req;
  output [0:0]M_SC_AW_send;
  output [0:0]M_SC_B_info;
  output [8:0]M_SC_B_payld;
  input [0:0]M_SC_B_recv;
  output [0:0]M_SC_B_req;
  output [0:0]M_SC_B_send;
  output [0:0]M_SC_R_info;
  output [54:0]M_SC_R_payld;
  input [0:0]M_SC_R_recv;
  output [0:0]M_SC_R_req;
  output [0:0]M_SC_R_send;
  output [0:0]M_SC_W_info;
  output [68:0]M_SC_W_payld;
  input [0:0]M_SC_W_recv;
  output [0:0]M_SC_W_req;
  output [0:0]M_SC_W_send;
  input [0:0]S_SC_AR_info;
  input [181:0]S_SC_AR_payld;
  output [0:0]S_SC_AR_recv;
  input [0:0]S_SC_AR_req;
  input [0:0]S_SC_AR_send;
  input [0:0]S_SC_AW_info;
  input [181:0]S_SC_AW_payld;
  output [0:0]S_SC_AW_recv;
  input [0:0]S_SC_AW_req;
  input [0:0]S_SC_AW_send;
  input [0:0]S_SC_B_info;
  input [8:0]S_SC_B_payld;
  output [0:0]S_SC_B_recv;
  input [0:0]S_SC_B_req;
  input [0:0]S_SC_B_send;
  input [0:0]S_SC_R_info;
  input [54:0]S_SC_R_payld;
  output [0:0]S_SC_R_recv;
  input [0:0]S_SC_R_req;
  input [0:0]S_SC_R_send;
  input [0:0]S_SC_W_info;
  input [68:0]S_SC_W_payld;
  output [0:0]S_SC_W_recv;
  input [0:0]S_SC_W_req;
  input [0:0]S_SC_W_send;
  input m_axi_aclk;
  input m_axi_aresetn;
  input s_axi_aclk;
  input s_axi_aresetn;

  wire [0:0]S_SC_AR_1_INFO;
  wire [181:0]S_SC_AR_1_PAYLD;
  wire [0:0]S_SC_AR_1_RECV;
  wire [0:0]S_SC_AR_1_REQ;
  wire [0:0]S_SC_AR_1_SEND;
  wire [0:0]S_SC_AW_1_INFO;
  wire [181:0]S_SC_AW_1_PAYLD;
  wire [0:0]S_SC_AW_1_RECV;
  wire [0:0]S_SC_AW_1_REQ;
  wire [0:0]S_SC_AW_1_SEND;
  wire [0:0]S_SC_B_1_INFO;
  wire [8:0]S_SC_B_1_PAYLD;
  wire [0:0]S_SC_B_1_RECV;
  wire [0:0]S_SC_B_1_REQ;
  wire [0:0]S_SC_B_1_SEND;
  wire [0:0]S_SC_R_1_INFO;
  wire [54:0]S_SC_R_1_PAYLD;
  wire [0:0]S_SC_R_1_RECV;
  wire [0:0]S_SC_R_1_REQ;
  wire [0:0]S_SC_R_1_SEND;
  wire [0:0]S_SC_W_1_INFO;
  wire [68:0]S_SC_W_1_PAYLD;
  wire [0:0]S_SC_W_1_RECV;
  wire [0:0]S_SC_W_1_REQ;
  wire [0:0]S_SC_W_1_SEND;
  wire [0:0]m37_ar_node_M_SC_INFO;
  wire [181:0]m37_ar_node_M_SC_PAYLD;
  wire [0:0]m37_ar_node_M_SC_RECV;
  wire [0:0]m37_ar_node_M_SC_REQ;
  wire [0:0]m37_ar_node_M_SC_SEND;
  wire [0:0]m37_aw_node_M_SC_INFO;
  wire [181:0]m37_aw_node_M_SC_PAYLD;
  wire [0:0]m37_aw_node_M_SC_RECV;
  wire [0:0]m37_aw_node_M_SC_REQ;
  wire [0:0]m37_aw_node_M_SC_SEND;
  wire [0:0]m37_b_node_M_SC_INFO;
  wire [8:0]m37_b_node_M_SC_PAYLD;
  wire [0:0]m37_b_node_M_SC_RECV;
  wire [0:0]m37_b_node_M_SC_REQ;
  wire [0:0]m37_b_node_M_SC_SEND;
  wire [0:0]m37_r_node_M_SC_INFO;
  wire [54:0]m37_r_node_M_SC_PAYLD;
  wire [0:0]m37_r_node_M_SC_RECV;
  wire [0:0]m37_r_node_M_SC_REQ;
  wire [0:0]m37_r_node_M_SC_SEND;
  wire [0:0]m37_w_node_M_SC_INFO;
  wire [68:0]m37_w_node_M_SC_PAYLD;
  wire [0:0]m37_w_node_M_SC_RECV;
  wire [0:0]m37_w_node_M_SC_REQ;
  wire [0:0]m37_w_node_M_SC_SEND;
  wire m_axi_aclk_1;
  wire m_axi_aresetn_1;
  wire s_axi_aclk_1;
  wire s_axi_aresetn_1;

  assign M_SC_AR_info[0] = m37_ar_node_M_SC_INFO;
  assign M_SC_AR_payld[181:0] = m37_ar_node_M_SC_PAYLD;
  assign M_SC_AR_req[0] = m37_ar_node_M_SC_REQ;
  assign M_SC_AR_send[0] = m37_ar_node_M_SC_SEND;
  assign M_SC_AW_info[0] = m37_aw_node_M_SC_INFO;
  assign M_SC_AW_payld[181:0] = m37_aw_node_M_SC_PAYLD;
  assign M_SC_AW_req[0] = m37_aw_node_M_SC_REQ;
  assign M_SC_AW_send[0] = m37_aw_node_M_SC_SEND;
  assign M_SC_B_info[0] = m37_b_node_M_SC_INFO;
  assign M_SC_B_payld[8:0] = m37_b_node_M_SC_PAYLD;
  assign M_SC_B_req[0] = m37_b_node_M_SC_REQ;
  assign M_SC_B_send[0] = m37_b_node_M_SC_SEND;
  assign M_SC_R_info[0] = m37_r_node_M_SC_INFO;
  assign M_SC_R_payld[54:0] = m37_r_node_M_SC_PAYLD;
  assign M_SC_R_req[0] = m37_r_node_M_SC_REQ;
  assign M_SC_R_send[0] = m37_r_node_M_SC_SEND;
  assign M_SC_W_info[0] = m37_w_node_M_SC_INFO;
  assign M_SC_W_payld[68:0] = m37_w_node_M_SC_PAYLD;
  assign M_SC_W_req[0] = m37_w_node_M_SC_REQ;
  assign M_SC_W_send[0] = m37_w_node_M_SC_SEND;
  assign S_SC_AR_1_INFO = S_SC_AR_info[0];
  assign S_SC_AR_1_PAYLD = S_SC_AR_payld[181:0];
  assign S_SC_AR_1_REQ = S_SC_AR_req[0];
  assign S_SC_AR_1_SEND = S_SC_AR_send[0];
  assign S_SC_AR_recv[0] = S_SC_AR_1_RECV;
  assign S_SC_AW_1_INFO = S_SC_AW_info[0];
  assign S_SC_AW_1_PAYLD = S_SC_AW_payld[181:0];
  assign S_SC_AW_1_REQ = S_SC_AW_req[0];
  assign S_SC_AW_1_SEND = S_SC_AW_send[0];
  assign S_SC_AW_recv[0] = S_SC_AW_1_RECV;
  assign S_SC_B_1_INFO = S_SC_B_info[0];
  assign S_SC_B_1_PAYLD = S_SC_B_payld[8:0];
  assign S_SC_B_1_REQ = S_SC_B_req[0];
  assign S_SC_B_1_SEND = S_SC_B_send[0];
  assign S_SC_B_recv[0] = S_SC_B_1_RECV;
  assign S_SC_R_1_INFO = S_SC_R_info[0];
  assign S_SC_R_1_PAYLD = S_SC_R_payld[54:0];
  assign S_SC_R_1_REQ = S_SC_R_req[0];
  assign S_SC_R_1_SEND = S_SC_R_send[0];
  assign S_SC_R_recv[0] = S_SC_R_1_RECV;
  assign S_SC_W_1_INFO = S_SC_W_info[0];
  assign S_SC_W_1_PAYLD = S_SC_W_payld[68:0];
  assign S_SC_W_1_REQ = S_SC_W_req[0];
  assign S_SC_W_1_SEND = S_SC_W_send[0];
  assign S_SC_W_recv[0] = S_SC_W_1_RECV;
  assign m37_ar_node_M_SC_RECV = M_SC_AR_recv[0];
  assign m37_aw_node_M_SC_RECV = M_SC_AW_recv[0];
  assign m37_b_node_M_SC_RECV = M_SC_B_recv[0];
  assign m37_r_node_M_SC_RECV = M_SC_R_recv[0];
  assign m37_w_node_M_SC_RECV = M_SC_W_recv[0];
  assign m_axi_aclk_1 = m_axi_aclk;
  assign m_axi_aresetn_1 = m_axi_aresetn;
  assign s_axi_aclk_1 = s_axi_aclk;
  assign s_axi_aresetn_1 = s_axi_aresetn;
  bd_afc3_m37arn_0 m37_ar_node
       (.m_sc_aclk(m_axi_aclk_1),
        .m_sc_aresetn(m_axi_aresetn_1),
        .m_sc_info(m37_ar_node_M_SC_INFO),
        .m_sc_payld(m37_ar_node_M_SC_PAYLD),
        .m_sc_recv(m37_ar_node_M_SC_RECV),
        .m_sc_req(m37_ar_node_M_SC_REQ),
        .m_sc_send(m37_ar_node_M_SC_SEND),
        .s_sc_aclk(s_axi_aclk_1),
        .s_sc_aresetn(s_axi_aresetn_1),
        .s_sc_info(S_SC_AR_1_INFO),
        .s_sc_payld(S_SC_AR_1_PAYLD),
        .s_sc_recv(S_SC_AR_1_RECV),
        .s_sc_req(S_SC_AR_1_REQ),
        .s_sc_send(S_SC_AR_1_SEND));
  bd_afc3_m37awn_0 m37_aw_node
       (.m_sc_aclk(m_axi_aclk_1),
        .m_sc_aresetn(m_axi_aresetn_1),
        .m_sc_info(m37_aw_node_M_SC_INFO),
        .m_sc_payld(m37_aw_node_M_SC_PAYLD),
        .m_sc_recv(m37_aw_node_M_SC_RECV),
        .m_sc_req(m37_aw_node_M_SC_REQ),
        .m_sc_send(m37_aw_node_M_SC_SEND),
        .s_sc_aclk(s_axi_aclk_1),
        .s_sc_aresetn(s_axi_aresetn_1),
        .s_sc_info(S_SC_AW_1_INFO),
        .s_sc_payld(S_SC_AW_1_PAYLD),
        .s_sc_recv(S_SC_AW_1_RECV),
        .s_sc_req(S_SC_AW_1_REQ),
        .s_sc_send(S_SC_AW_1_SEND));
  bd_afc3_m37bn_0 m37_b_node
       (.m_sc_aclk(s_axi_aclk_1),
        .m_sc_aresetn(s_axi_aresetn_1),
        .m_sc_info(m37_b_node_M_SC_INFO),
        .m_sc_payld(m37_b_node_M_SC_PAYLD),
        .m_sc_recv(m37_b_node_M_SC_RECV),
        .m_sc_req(m37_b_node_M_SC_REQ),
        .m_sc_send(m37_b_node_M_SC_SEND),
        .s_sc_aclk(m_axi_aclk_1),
        .s_sc_aresetn(m_axi_aresetn_1),
        .s_sc_info(S_SC_B_1_INFO),
        .s_sc_payld(S_SC_B_1_PAYLD),
        .s_sc_recv(S_SC_B_1_RECV),
        .s_sc_req(S_SC_B_1_REQ),
        .s_sc_send(S_SC_B_1_SEND));
  bd_afc3_m37rn_0 m37_r_node
       (.m_sc_aclk(s_axi_aclk_1),
        .m_sc_aresetn(s_axi_aresetn_1),
        .m_sc_info(m37_r_node_M_SC_INFO),
        .m_sc_payld(m37_r_node_M_SC_PAYLD),
        .m_sc_recv(m37_r_node_M_SC_RECV),
        .m_sc_req(m37_r_node_M_SC_REQ),
        .m_sc_send(m37_r_node_M_SC_SEND),
        .s_sc_aclk(m_axi_aclk_1),
        .s_sc_aresetn(m_axi_aresetn_1),
        .s_sc_info(S_SC_R_1_INFO),
        .s_sc_payld(S_SC_R_1_PAYLD),
        .s_sc_recv(S_SC_R_1_RECV),
        .s_sc_req(S_SC_R_1_REQ),
        .s_sc_send(S_SC_R_1_SEND));
  bd_afc3_m37wn_0 m37_w_node
       (.m_sc_aclk(m_axi_aclk_1),
        .m_sc_aresetn(m_axi_aresetn_1),
        .m_sc_info(m37_w_node_M_SC_INFO),
        .m_sc_payld(m37_w_node_M_SC_PAYLD),
        .m_sc_recv(m37_w_node_M_SC_RECV),
        .m_sc_req(m37_w_node_M_SC_REQ),
        .m_sc_send(m37_w_node_M_SC_SEND),
        .s_sc_aclk(s_axi_aclk_1),
        .s_sc_aresetn(s_axi_aresetn_1),
        .s_sc_info(S_SC_W_1_INFO),
        .s_sc_payld(S_SC_W_1_PAYLD),
        .s_sc_recv(S_SC_W_1_RECV),
        .s_sc_req(S_SC_W_1_REQ),
        .s_sc_send(S_SC_W_1_SEND));
endmodule

module m38_exit_pipeline_imp_9KE32Y
   (aclk,
    aresetn,
    m_axi_araddr,
    m_axi_arprot,
    m_axi_arready,
    m_axi_arvalid,
    m_axi_awaddr,
    m_axi_awprot,
    m_axi_awready,
    m_axi_awvalid,
    m_axi_bready,
    m_axi_bresp,
    m_axi_bvalid,
    m_axi_rdata,
    m_axi_rready,
    m_axi_rresp,
    m_axi_rvalid,
    m_axi_wdata,
    m_axi_wready,
    m_axi_wstrb,
    m_axi_wvalid,
    s_axi_araddr,
    s_axi_arcache,
    s_axi_arid,
    s_axi_arlen,
    s_axi_arlock,
    s_axi_arprot,
    s_axi_arqos,
    s_axi_arready,
    s_axi_aruser,
    s_axi_arvalid,
    s_axi_awaddr,
    s_axi_awcache,
    s_axi_awid,
    s_axi_awlen,
    s_axi_awlock,
    s_axi_awprot,
    s_axi_awqos,
    s_axi_awready,
    s_axi_awuser,
    s_axi_awvalid,
    s_axi_bid,
    s_axi_bready,
    s_axi_bresp,
    s_axi_buser,
    s_axi_bvalid,
    s_axi_rdata,
    s_axi_rid,
    s_axi_rlast,
    s_axi_rready,
    s_axi_rresp,
    s_axi_ruser,
    s_axi_rvalid,
    s_axi_wdata,
    s_axi_wlast,
    s_axi_wready,
    s_axi_wstrb,
    s_axi_wuser,
    s_axi_wvalid);
  input aclk;
  input aresetn;
  output [9:0]m_axi_araddr;
  output [2:0]m_axi_arprot;
  input m_axi_arready;
  output m_axi_arvalid;
  output [9:0]m_axi_awaddr;
  output [2:0]m_axi_awprot;
  input m_axi_awready;
  output m_axi_awvalid;
  output m_axi_bready;
  input [1:0]m_axi_bresp;
  input m_axi_bvalid;
  input [31:0]m_axi_rdata;
  output m_axi_rready;
  input [1:0]m_axi_rresp;
  input m_axi_rvalid;
  output [31:0]m_axi_wdata;
  input m_axi_wready;
  output [3:0]m_axi_wstrb;
  output m_axi_wvalid;
  input [9:0]s_axi_araddr;
  input [3:0]s_axi_arcache;
  input [2:0]s_axi_arid;
  input [7:0]s_axi_arlen;
  input [0:0]s_axi_arlock;
  input [2:0]s_axi_arprot;
  input [3:0]s_axi_arqos;
  output s_axi_arready;
  input [1023:0]s_axi_aruser;
  input s_axi_arvalid;
  input [9:0]s_axi_awaddr;
  input [3:0]s_axi_awcache;
  input [2:0]s_axi_awid;
  input [7:0]s_axi_awlen;
  input [0:0]s_axi_awlock;
  input [2:0]s_axi_awprot;
  input [3:0]s_axi_awqos;
  output s_axi_awready;
  input [1023:0]s_axi_awuser;
  input s_axi_awvalid;
  output [2:0]s_axi_bid;
  input s_axi_bready;
  output [1:0]s_axi_bresp;
  output [1023:0]s_axi_buser;
  output s_axi_bvalid;
  output [31:0]s_axi_rdata;
  output [2:0]s_axi_rid;
  output s_axi_rlast;
  input s_axi_rready;
  output [1:0]s_axi_rresp;
  output [1023:0]s_axi_ruser;
  output s_axi_rvalid;
  input [31:0]s_axi_wdata;
  input s_axi_wlast;
  output s_axi_wready;
  input [3:0]s_axi_wstrb;
  input [1023:0]s_axi_wuser;
  input s_axi_wvalid;

  wire aclk_1;
  wire aresetn_1;
  wire [9:0]m38_exit_M_AXI_ARADDR;
  wire [2:0]m38_exit_M_AXI_ARPROT;
  wire m38_exit_M_AXI_ARREADY;
  wire m38_exit_M_AXI_ARVALID;
  wire [9:0]m38_exit_M_AXI_AWADDR;
  wire [2:0]m38_exit_M_AXI_AWPROT;
  wire m38_exit_M_AXI_AWREADY;
  wire m38_exit_M_AXI_AWVALID;
  wire m38_exit_M_AXI_BREADY;
  wire [1:0]m38_exit_M_AXI_BRESP;
  wire m38_exit_M_AXI_BVALID;
  wire [31:0]m38_exit_M_AXI_RDATA;
  wire m38_exit_M_AXI_RREADY;
  wire [1:0]m38_exit_M_AXI_RRESP;
  wire m38_exit_M_AXI_RVALID;
  wire [31:0]m38_exit_M_AXI_WDATA;
  wire m38_exit_M_AXI_WREADY;
  wire [3:0]m38_exit_M_AXI_WSTRB;
  wire m38_exit_M_AXI_WVALID;
  wire [9:0]s_axi_1_ARADDR;
  wire [3:0]s_axi_1_ARCACHE;
  wire [2:0]s_axi_1_ARID;
  wire [7:0]s_axi_1_ARLEN;
  wire [0:0]s_axi_1_ARLOCK;
  wire [2:0]s_axi_1_ARPROT;
  wire [3:0]s_axi_1_ARQOS;
  wire s_axi_1_ARREADY;
  wire [1023:0]s_axi_1_ARUSER;
  wire s_axi_1_ARVALID;
  wire [9:0]s_axi_1_AWADDR;
  wire [3:0]s_axi_1_AWCACHE;
  wire [2:0]s_axi_1_AWID;
  wire [7:0]s_axi_1_AWLEN;
  wire [0:0]s_axi_1_AWLOCK;
  wire [2:0]s_axi_1_AWPROT;
  wire [3:0]s_axi_1_AWQOS;
  wire s_axi_1_AWREADY;
  wire [1023:0]s_axi_1_AWUSER;
  wire s_axi_1_AWVALID;
  wire [2:0]s_axi_1_BID;
  wire s_axi_1_BREADY;
  wire [1:0]s_axi_1_BRESP;
  wire [1023:0]s_axi_1_BUSER;
  wire s_axi_1_BVALID;
  wire [31:0]s_axi_1_RDATA;
  wire [2:0]s_axi_1_RID;
  wire s_axi_1_RLAST;
  wire s_axi_1_RREADY;
  wire [1:0]s_axi_1_RRESP;
  wire [1023:0]s_axi_1_RUSER;
  wire s_axi_1_RVALID;
  wire [31:0]s_axi_1_WDATA;
  wire s_axi_1_WLAST;
  wire s_axi_1_WREADY;
  wire [3:0]s_axi_1_WSTRB;
  wire [1023:0]s_axi_1_WUSER;
  wire s_axi_1_WVALID;

  assign aclk_1 = aclk;
  assign aresetn_1 = aresetn;
  assign m38_exit_M_AXI_ARREADY = m_axi_arready;
  assign m38_exit_M_AXI_AWREADY = m_axi_awready;
  assign m38_exit_M_AXI_BRESP = m_axi_bresp[1:0];
  assign m38_exit_M_AXI_BVALID = m_axi_bvalid;
  assign m38_exit_M_AXI_RDATA = m_axi_rdata[31:0];
  assign m38_exit_M_AXI_RRESP = m_axi_rresp[1:0];
  assign m38_exit_M_AXI_RVALID = m_axi_rvalid;
  assign m38_exit_M_AXI_WREADY = m_axi_wready;
  assign m_axi_araddr[9:0] = m38_exit_M_AXI_ARADDR;
  assign m_axi_arprot[2:0] = m38_exit_M_AXI_ARPROT;
  assign m_axi_arvalid = m38_exit_M_AXI_ARVALID;
  assign m_axi_awaddr[9:0] = m38_exit_M_AXI_AWADDR;
  assign m_axi_awprot[2:0] = m38_exit_M_AXI_AWPROT;
  assign m_axi_awvalid = m38_exit_M_AXI_AWVALID;
  assign m_axi_bready = m38_exit_M_AXI_BREADY;
  assign m_axi_rready = m38_exit_M_AXI_RREADY;
  assign m_axi_wdata[31:0] = m38_exit_M_AXI_WDATA;
  assign m_axi_wstrb[3:0] = m38_exit_M_AXI_WSTRB;
  assign m_axi_wvalid = m38_exit_M_AXI_WVALID;
  assign s_axi_1_ARADDR = s_axi_araddr[9:0];
  assign s_axi_1_ARCACHE = s_axi_arcache[3:0];
  assign s_axi_1_ARID = s_axi_arid[2:0];
  assign s_axi_1_ARLEN = s_axi_arlen[7:0];
  assign s_axi_1_ARLOCK = s_axi_arlock[0];
  assign s_axi_1_ARPROT = s_axi_arprot[2:0];
  assign s_axi_1_ARQOS = s_axi_arqos[3:0];
  assign s_axi_1_ARUSER = s_axi_aruser[1023:0];
  assign s_axi_1_ARVALID = s_axi_arvalid;
  assign s_axi_1_AWADDR = s_axi_awaddr[9:0];
  assign s_axi_1_AWCACHE = s_axi_awcache[3:0];
  assign s_axi_1_AWID = s_axi_awid[2:0];
  assign s_axi_1_AWLEN = s_axi_awlen[7:0];
  assign s_axi_1_AWLOCK = s_axi_awlock[0];
  assign s_axi_1_AWPROT = s_axi_awprot[2:0];
  assign s_axi_1_AWQOS = s_axi_awqos[3:0];
  assign s_axi_1_AWUSER = s_axi_awuser[1023:0];
  assign s_axi_1_AWVALID = s_axi_awvalid;
  assign s_axi_1_BREADY = s_axi_bready;
  assign s_axi_1_RREADY = s_axi_rready;
  assign s_axi_1_WDATA = s_axi_wdata[31:0];
  assign s_axi_1_WLAST = s_axi_wlast;
  assign s_axi_1_WSTRB = s_axi_wstrb[3:0];
  assign s_axi_1_WUSER = s_axi_wuser[1023:0];
  assign s_axi_1_WVALID = s_axi_wvalid;
  assign s_axi_arready = s_axi_1_ARREADY;
  assign s_axi_awready = s_axi_1_AWREADY;
  assign s_axi_bid[2:0] = s_axi_1_BID;
  assign s_axi_bresp[1:0] = s_axi_1_BRESP;
  assign s_axi_buser[1023:0] = s_axi_1_BUSER;
  assign s_axi_bvalid = s_axi_1_BVALID;
  assign s_axi_rdata[31:0] = s_axi_1_RDATA;
  assign s_axi_rid[2:0] = s_axi_1_RID;
  assign s_axi_rlast = s_axi_1_RLAST;
  assign s_axi_rresp[1:0] = s_axi_1_RRESP;
  assign s_axi_ruser[1023:0] = s_axi_1_RUSER;
  assign s_axi_rvalid = s_axi_1_RVALID;
  assign s_axi_wready = s_axi_1_WREADY;
  bd_afc3_m38e_0 m38_exit
       (.aclk(aclk_1),
        .aresetn(aresetn_1),
        .m_axi_araddr(m38_exit_M_AXI_ARADDR),
        .m_axi_arprot(m38_exit_M_AXI_ARPROT),
        .m_axi_arready(m38_exit_M_AXI_ARREADY),
        .m_axi_arvalid(m38_exit_M_AXI_ARVALID),
        .m_axi_awaddr(m38_exit_M_AXI_AWADDR),
        .m_axi_awprot(m38_exit_M_AXI_AWPROT),
        .m_axi_awready(m38_exit_M_AXI_AWREADY),
        .m_axi_awvalid(m38_exit_M_AXI_AWVALID),
        .m_axi_bready(m38_exit_M_AXI_BREADY),
        .m_axi_bresp(m38_exit_M_AXI_BRESP),
        .m_axi_bvalid(m38_exit_M_AXI_BVALID),
        .m_axi_rdata(m38_exit_M_AXI_RDATA),
        .m_axi_rready(m38_exit_M_AXI_RREADY),
        .m_axi_rresp(m38_exit_M_AXI_RRESP),
        .m_axi_rvalid(m38_exit_M_AXI_RVALID),
        .m_axi_wdata(m38_exit_M_AXI_WDATA),
        .m_axi_wready(m38_exit_M_AXI_WREADY),
        .m_axi_wstrb(m38_exit_M_AXI_WSTRB),
        .m_axi_wvalid(m38_exit_M_AXI_WVALID),
        .s_axi_araddr(s_axi_1_ARADDR),
        .s_axi_arcache(s_axi_1_ARCACHE),
        .s_axi_arid(s_axi_1_ARID),
        .s_axi_arlen(s_axi_1_ARLEN),
        .s_axi_arlock(s_axi_1_ARLOCK),
        .s_axi_arprot(s_axi_1_ARPROT),
        .s_axi_arqos(s_axi_1_ARQOS),
        .s_axi_arready(s_axi_1_ARREADY),
        .s_axi_aruser(s_axi_1_ARUSER),
        .s_axi_arvalid(s_axi_1_ARVALID),
        .s_axi_awaddr(s_axi_1_AWADDR),
        .s_axi_awcache(s_axi_1_AWCACHE),
        .s_axi_awid(s_axi_1_AWID),
        .s_axi_awlen(s_axi_1_AWLEN),
        .s_axi_awlock(s_axi_1_AWLOCK),
        .s_axi_awprot(s_axi_1_AWPROT),
        .s_axi_awqos(s_axi_1_AWQOS),
        .s_axi_awready(s_axi_1_AWREADY),
        .s_axi_awuser(s_axi_1_AWUSER),
        .s_axi_awvalid(s_axi_1_AWVALID),
        .s_axi_bid(s_axi_1_BID),
        .s_axi_bready(s_axi_1_BREADY),
        .s_axi_bresp(s_axi_1_BRESP),
        .s_axi_buser(s_axi_1_BUSER),
        .s_axi_bvalid(s_axi_1_BVALID),
        .s_axi_rdata(s_axi_1_RDATA),
        .s_axi_rid(s_axi_1_RID),
        .s_axi_rlast(s_axi_1_RLAST),
        .s_axi_rready(s_axi_1_RREADY),
        .s_axi_rresp(s_axi_1_RRESP),
        .s_axi_ruser(s_axi_1_RUSER),
        .s_axi_rvalid(s_axi_1_RVALID),
        .s_axi_wdata(s_axi_1_WDATA),
        .s_axi_wlast(s_axi_1_WLAST),
        .s_axi_wready(s_axi_1_WREADY),
        .s_axi_wstrb(s_axi_1_WSTRB),
        .s_axi_wuser(s_axi_1_WUSER),
        .s_axi_wvalid(s_axi_1_WVALID));
endmodule

module m38_nodes_imp_18C7UBO
   (M_SC_AR_info,
    M_SC_AR_payld,
    M_SC_AR_recv,
    M_SC_AR_req,
    M_SC_AR_send,
    M_SC_AW_info,
    M_SC_AW_payld,
    M_SC_AW_recv,
    M_SC_AW_req,
    M_SC_AW_send,
    M_SC_B_info,
    M_SC_B_payld,
    M_SC_B_recv,
    M_SC_B_req,
    M_SC_B_send,
    M_SC_R_info,
    M_SC_R_payld,
    M_SC_R_recv,
    M_SC_R_req,
    M_SC_R_send,
    M_SC_W_info,
    M_SC_W_payld,
    M_SC_W_recv,
    M_SC_W_req,
    M_SC_W_send,
    S_SC_AR_info,
    S_SC_AR_payld,
    S_SC_AR_recv,
    S_SC_AR_req,
    S_SC_AR_send,
    S_SC_AW_info,
    S_SC_AW_payld,
    S_SC_AW_recv,
    S_SC_AW_req,
    S_SC_AW_send,
    S_SC_B_info,
    S_SC_B_payld,
    S_SC_B_recv,
    S_SC_B_req,
    S_SC_B_send,
    S_SC_R_info,
    S_SC_R_payld,
    S_SC_R_recv,
    S_SC_R_req,
    S_SC_R_send,
    S_SC_W_info,
    S_SC_W_payld,
    S_SC_W_recv,
    S_SC_W_req,
    S_SC_W_send,
    m_axi_aclk,
    m_axi_aresetn,
    s_axi_aclk,
    s_axi_aresetn);
  output [0:0]M_SC_AR_info;
  output [181:0]M_SC_AR_payld;
  input [0:0]M_SC_AR_recv;
  output [0:0]M_SC_AR_req;
  output [0:0]M_SC_AR_send;
  output [0:0]M_SC_AW_info;
  output [181:0]M_SC_AW_payld;
  input [0:0]M_SC_AW_recv;
  output [0:0]M_SC_AW_req;
  output [0:0]M_SC_AW_send;
  output [0:0]M_SC_B_info;
  output [8:0]M_SC_B_payld;
  input [0:0]M_SC_B_recv;
  output [0:0]M_SC_B_req;
  output [0:0]M_SC_B_send;
  output [0:0]M_SC_R_info;
  output [54:0]M_SC_R_payld;
  input [0:0]M_SC_R_recv;
  output [0:0]M_SC_R_req;
  output [0:0]M_SC_R_send;
  output [0:0]M_SC_W_info;
  output [68:0]M_SC_W_payld;
  input [0:0]M_SC_W_recv;
  output [0:0]M_SC_W_req;
  output [0:0]M_SC_W_send;
  input [0:0]S_SC_AR_info;
  input [181:0]S_SC_AR_payld;
  output [0:0]S_SC_AR_recv;
  input [0:0]S_SC_AR_req;
  input [0:0]S_SC_AR_send;
  input [0:0]S_SC_AW_info;
  input [181:0]S_SC_AW_payld;
  output [0:0]S_SC_AW_recv;
  input [0:0]S_SC_AW_req;
  input [0:0]S_SC_AW_send;
  input [0:0]S_SC_B_info;
  input [8:0]S_SC_B_payld;
  output [0:0]S_SC_B_recv;
  input [0:0]S_SC_B_req;
  input [0:0]S_SC_B_send;
  input [0:0]S_SC_R_info;
  input [54:0]S_SC_R_payld;
  output [0:0]S_SC_R_recv;
  input [0:0]S_SC_R_req;
  input [0:0]S_SC_R_send;
  input [0:0]S_SC_W_info;
  input [68:0]S_SC_W_payld;
  output [0:0]S_SC_W_recv;
  input [0:0]S_SC_W_req;
  input [0:0]S_SC_W_send;
  input m_axi_aclk;
  input m_axi_aresetn;
  input s_axi_aclk;
  input s_axi_aresetn;

  wire [0:0]S_SC_AR_1_INFO;
  wire [181:0]S_SC_AR_1_PAYLD;
  wire [0:0]S_SC_AR_1_RECV;
  wire [0:0]S_SC_AR_1_REQ;
  wire [0:0]S_SC_AR_1_SEND;
  wire [0:0]S_SC_AW_1_INFO;
  wire [181:0]S_SC_AW_1_PAYLD;
  wire [0:0]S_SC_AW_1_RECV;
  wire [0:0]S_SC_AW_1_REQ;
  wire [0:0]S_SC_AW_1_SEND;
  wire [0:0]S_SC_B_1_INFO;
  wire [8:0]S_SC_B_1_PAYLD;
  wire [0:0]S_SC_B_1_RECV;
  wire [0:0]S_SC_B_1_REQ;
  wire [0:0]S_SC_B_1_SEND;
  wire [0:0]S_SC_R_1_INFO;
  wire [54:0]S_SC_R_1_PAYLD;
  wire [0:0]S_SC_R_1_RECV;
  wire [0:0]S_SC_R_1_REQ;
  wire [0:0]S_SC_R_1_SEND;
  wire [0:0]S_SC_W_1_INFO;
  wire [68:0]S_SC_W_1_PAYLD;
  wire [0:0]S_SC_W_1_RECV;
  wire [0:0]S_SC_W_1_REQ;
  wire [0:0]S_SC_W_1_SEND;
  wire [0:0]m38_ar_node_M_SC_INFO;
  wire [181:0]m38_ar_node_M_SC_PAYLD;
  wire [0:0]m38_ar_node_M_SC_RECV;
  wire [0:0]m38_ar_node_M_SC_REQ;
  wire [0:0]m38_ar_node_M_SC_SEND;
  wire [0:0]m38_aw_node_M_SC_INFO;
  wire [181:0]m38_aw_node_M_SC_PAYLD;
  wire [0:0]m38_aw_node_M_SC_RECV;
  wire [0:0]m38_aw_node_M_SC_REQ;
  wire [0:0]m38_aw_node_M_SC_SEND;
  wire [0:0]m38_b_node_M_SC_INFO;
  wire [8:0]m38_b_node_M_SC_PAYLD;
  wire [0:0]m38_b_node_M_SC_RECV;
  wire [0:0]m38_b_node_M_SC_REQ;
  wire [0:0]m38_b_node_M_SC_SEND;
  wire [0:0]m38_r_node_M_SC_INFO;
  wire [54:0]m38_r_node_M_SC_PAYLD;
  wire [0:0]m38_r_node_M_SC_RECV;
  wire [0:0]m38_r_node_M_SC_REQ;
  wire [0:0]m38_r_node_M_SC_SEND;
  wire [0:0]m38_w_node_M_SC_INFO;
  wire [68:0]m38_w_node_M_SC_PAYLD;
  wire [0:0]m38_w_node_M_SC_RECV;
  wire [0:0]m38_w_node_M_SC_REQ;
  wire [0:0]m38_w_node_M_SC_SEND;
  wire m_axi_aclk_1;
  wire m_axi_aresetn_1;
  wire s_axi_aclk_1;
  wire s_axi_aresetn_1;

  assign M_SC_AR_info[0] = m38_ar_node_M_SC_INFO;
  assign M_SC_AR_payld[181:0] = m38_ar_node_M_SC_PAYLD;
  assign M_SC_AR_req[0] = m38_ar_node_M_SC_REQ;
  assign M_SC_AR_send[0] = m38_ar_node_M_SC_SEND;
  assign M_SC_AW_info[0] = m38_aw_node_M_SC_INFO;
  assign M_SC_AW_payld[181:0] = m38_aw_node_M_SC_PAYLD;
  assign M_SC_AW_req[0] = m38_aw_node_M_SC_REQ;
  assign M_SC_AW_send[0] = m38_aw_node_M_SC_SEND;
  assign M_SC_B_info[0] = m38_b_node_M_SC_INFO;
  assign M_SC_B_payld[8:0] = m38_b_node_M_SC_PAYLD;
  assign M_SC_B_req[0] = m38_b_node_M_SC_REQ;
  assign M_SC_B_send[0] = m38_b_node_M_SC_SEND;
  assign M_SC_R_info[0] = m38_r_node_M_SC_INFO;
  assign M_SC_R_payld[54:0] = m38_r_node_M_SC_PAYLD;
  assign M_SC_R_req[0] = m38_r_node_M_SC_REQ;
  assign M_SC_R_send[0] = m38_r_node_M_SC_SEND;
  assign M_SC_W_info[0] = m38_w_node_M_SC_INFO;
  assign M_SC_W_payld[68:0] = m38_w_node_M_SC_PAYLD;
  assign M_SC_W_req[0] = m38_w_node_M_SC_REQ;
  assign M_SC_W_send[0] = m38_w_node_M_SC_SEND;
  assign S_SC_AR_1_INFO = S_SC_AR_info[0];
  assign S_SC_AR_1_PAYLD = S_SC_AR_payld[181:0];
  assign S_SC_AR_1_REQ = S_SC_AR_req[0];
  assign S_SC_AR_1_SEND = S_SC_AR_send[0];
  assign S_SC_AR_recv[0] = S_SC_AR_1_RECV;
  assign S_SC_AW_1_INFO = S_SC_AW_info[0];
  assign S_SC_AW_1_PAYLD = S_SC_AW_payld[181:0];
  assign S_SC_AW_1_REQ = S_SC_AW_req[0];
  assign S_SC_AW_1_SEND = S_SC_AW_send[0];
  assign S_SC_AW_recv[0] = S_SC_AW_1_RECV;
  assign S_SC_B_1_INFO = S_SC_B_info[0];
  assign S_SC_B_1_PAYLD = S_SC_B_payld[8:0];
  assign S_SC_B_1_REQ = S_SC_B_req[0];
  assign S_SC_B_1_SEND = S_SC_B_send[0];
  assign S_SC_B_recv[0] = S_SC_B_1_RECV;
  assign S_SC_R_1_INFO = S_SC_R_info[0];
  assign S_SC_R_1_PAYLD = S_SC_R_payld[54:0];
  assign S_SC_R_1_REQ = S_SC_R_req[0];
  assign S_SC_R_1_SEND = S_SC_R_send[0];
  assign S_SC_R_recv[0] = S_SC_R_1_RECV;
  assign S_SC_W_1_INFO = S_SC_W_info[0];
  assign S_SC_W_1_PAYLD = S_SC_W_payld[68:0];
  assign S_SC_W_1_REQ = S_SC_W_req[0];
  assign S_SC_W_1_SEND = S_SC_W_send[0];
  assign S_SC_W_recv[0] = S_SC_W_1_RECV;
  assign m38_ar_node_M_SC_RECV = M_SC_AR_recv[0];
  assign m38_aw_node_M_SC_RECV = M_SC_AW_recv[0];
  assign m38_b_node_M_SC_RECV = M_SC_B_recv[0];
  assign m38_r_node_M_SC_RECV = M_SC_R_recv[0];
  assign m38_w_node_M_SC_RECV = M_SC_W_recv[0];
  assign m_axi_aclk_1 = m_axi_aclk;
  assign m_axi_aresetn_1 = m_axi_aresetn;
  assign s_axi_aclk_1 = s_axi_aclk;
  assign s_axi_aresetn_1 = s_axi_aresetn;
  bd_afc3_m38arn_0 m38_ar_node
       (.m_sc_aclk(m_axi_aclk_1),
        .m_sc_aresetn(m_axi_aresetn_1),
        .m_sc_info(m38_ar_node_M_SC_INFO),
        .m_sc_payld(m38_ar_node_M_SC_PAYLD),
        .m_sc_recv(m38_ar_node_M_SC_RECV),
        .m_sc_req(m38_ar_node_M_SC_REQ),
        .m_sc_send(m38_ar_node_M_SC_SEND),
        .s_sc_aclk(s_axi_aclk_1),
        .s_sc_aresetn(s_axi_aresetn_1),
        .s_sc_info(S_SC_AR_1_INFO),
        .s_sc_payld(S_SC_AR_1_PAYLD),
        .s_sc_recv(S_SC_AR_1_RECV),
        .s_sc_req(S_SC_AR_1_REQ),
        .s_sc_send(S_SC_AR_1_SEND));
  bd_afc3_m38awn_0 m38_aw_node
       (.m_sc_aclk(m_axi_aclk_1),
        .m_sc_aresetn(m_axi_aresetn_1),
        .m_sc_info(m38_aw_node_M_SC_INFO),
        .m_sc_payld(m38_aw_node_M_SC_PAYLD),
        .m_sc_recv(m38_aw_node_M_SC_RECV),
        .m_sc_req(m38_aw_node_M_SC_REQ),
        .m_sc_send(m38_aw_node_M_SC_SEND),
        .s_sc_aclk(s_axi_aclk_1),
        .s_sc_aresetn(s_axi_aresetn_1),
        .s_sc_info(S_SC_AW_1_INFO),
        .s_sc_payld(S_SC_AW_1_PAYLD),
        .s_sc_recv(S_SC_AW_1_RECV),
        .s_sc_req(S_SC_AW_1_REQ),
        .s_sc_send(S_SC_AW_1_SEND));
  bd_afc3_m38bn_0 m38_b_node
       (.m_sc_aclk(s_axi_aclk_1),
        .m_sc_aresetn(s_axi_aresetn_1),
        .m_sc_info(m38_b_node_M_SC_INFO),
        .m_sc_payld(m38_b_node_M_SC_PAYLD),
        .m_sc_recv(m38_b_node_M_SC_RECV),
        .m_sc_req(m38_b_node_M_SC_REQ),
        .m_sc_send(m38_b_node_M_SC_SEND),
        .s_sc_aclk(m_axi_aclk_1),
        .s_sc_aresetn(m_axi_aresetn_1),
        .s_sc_info(S_SC_B_1_INFO),
        .s_sc_payld(S_SC_B_1_PAYLD),
        .s_sc_recv(S_SC_B_1_RECV),
        .s_sc_req(S_SC_B_1_REQ),
        .s_sc_send(S_SC_B_1_SEND));
  bd_afc3_m38rn_0 m38_r_node
       (.m_sc_aclk(s_axi_aclk_1),
        .m_sc_aresetn(s_axi_aresetn_1),
        .m_sc_info(m38_r_node_M_SC_INFO),
        .m_sc_payld(m38_r_node_M_SC_PAYLD),
        .m_sc_recv(m38_r_node_M_SC_RECV),
        .m_sc_req(m38_r_node_M_SC_REQ),
        .m_sc_send(m38_r_node_M_SC_SEND),
        .s_sc_aclk(m_axi_aclk_1),
        .s_sc_aresetn(m_axi_aresetn_1),
        .s_sc_info(S_SC_R_1_INFO),
        .s_sc_payld(S_SC_R_1_PAYLD),
        .s_sc_recv(S_SC_R_1_RECV),
        .s_sc_req(S_SC_R_1_REQ),
        .s_sc_send(S_SC_R_1_SEND));
  bd_afc3_m38wn_0 m38_w_node
       (.m_sc_aclk(m_axi_aclk_1),
        .m_sc_aresetn(m_axi_aresetn_1),
        .m_sc_info(m38_w_node_M_SC_INFO),
        .m_sc_payld(m38_w_node_M_SC_PAYLD),
        .m_sc_recv(m38_w_node_M_SC_RECV),
        .m_sc_req(m38_w_node_M_SC_REQ),
        .m_sc_send(m38_w_node_M_SC_SEND),
        .s_sc_aclk(s_axi_aclk_1),
        .s_sc_aresetn(s_axi_aresetn_1),
        .s_sc_info(S_SC_W_1_INFO),
        .s_sc_payld(S_SC_W_1_PAYLD),
        .s_sc_recv(S_SC_W_1_RECV),
        .s_sc_req(S_SC_W_1_REQ),
        .s_sc_send(S_SC_W_1_SEND));
endmodule

module m39_exit_pipeline_imp_ESLZOA
   (aclk,
    aresetn,
    m_axi_araddr,
    m_axi_arprot,
    m_axi_arready,
    m_axi_arvalid,
    m_axi_awaddr,
    m_axi_awprot,
    m_axi_awready,
    m_axi_awvalid,
    m_axi_bready,
    m_axi_bresp,
    m_axi_bvalid,
    m_axi_rdata,
    m_axi_rready,
    m_axi_rresp,
    m_axi_rvalid,
    m_axi_wdata,
    m_axi_wready,
    m_axi_wstrb,
    m_axi_wvalid,
    s_axi_araddr,
    s_axi_arcache,
    s_axi_arid,
    s_axi_arlen,
    s_axi_arlock,
    s_axi_arprot,
    s_axi_arqos,
    s_axi_arready,
    s_axi_aruser,
    s_axi_arvalid,
    s_axi_awaddr,
    s_axi_awcache,
    s_axi_awid,
    s_axi_awlen,
    s_axi_awlock,
    s_axi_awprot,
    s_axi_awqos,
    s_axi_awready,
    s_axi_awuser,
    s_axi_awvalid,
    s_axi_bid,
    s_axi_bready,
    s_axi_bresp,
    s_axi_buser,
    s_axi_bvalid,
    s_axi_rdata,
    s_axi_rid,
    s_axi_rlast,
    s_axi_rready,
    s_axi_rresp,
    s_axi_ruser,
    s_axi_rvalid,
    s_axi_wdata,
    s_axi_wlast,
    s_axi_wready,
    s_axi_wstrb,
    s_axi_wuser,
    s_axi_wvalid);
  input aclk;
  input aresetn;
  output [9:0]m_axi_araddr;
  output [2:0]m_axi_arprot;
  input m_axi_arready;
  output m_axi_arvalid;
  output [9:0]m_axi_awaddr;
  output [2:0]m_axi_awprot;
  input m_axi_awready;
  output m_axi_awvalid;
  output m_axi_bready;
  input [1:0]m_axi_bresp;
  input m_axi_bvalid;
  input [31:0]m_axi_rdata;
  output m_axi_rready;
  input [1:0]m_axi_rresp;
  input m_axi_rvalid;
  output [31:0]m_axi_wdata;
  input m_axi_wready;
  output [3:0]m_axi_wstrb;
  output m_axi_wvalid;
  input [9:0]s_axi_araddr;
  input [3:0]s_axi_arcache;
  input [2:0]s_axi_arid;
  input [7:0]s_axi_arlen;
  input [0:0]s_axi_arlock;
  input [2:0]s_axi_arprot;
  input [3:0]s_axi_arqos;
  output s_axi_arready;
  input [1023:0]s_axi_aruser;
  input s_axi_arvalid;
  input [9:0]s_axi_awaddr;
  input [3:0]s_axi_awcache;
  input [2:0]s_axi_awid;
  input [7:0]s_axi_awlen;
  input [0:0]s_axi_awlock;
  input [2:0]s_axi_awprot;
  input [3:0]s_axi_awqos;
  output s_axi_awready;
  input [1023:0]s_axi_awuser;
  input s_axi_awvalid;
  output [2:0]s_axi_bid;
  input s_axi_bready;
  output [1:0]s_axi_bresp;
  output [1023:0]s_axi_buser;
  output s_axi_bvalid;
  output [31:0]s_axi_rdata;
  output [2:0]s_axi_rid;
  output s_axi_rlast;
  input s_axi_rready;
  output [1:0]s_axi_rresp;
  output [1023:0]s_axi_ruser;
  output s_axi_rvalid;
  input [31:0]s_axi_wdata;
  input s_axi_wlast;
  output s_axi_wready;
  input [3:0]s_axi_wstrb;
  input [1023:0]s_axi_wuser;
  input s_axi_wvalid;

  wire aclk_1;
  wire aresetn_1;
  wire [9:0]m39_exit_M_AXI_ARADDR;
  wire [2:0]m39_exit_M_AXI_ARPROT;
  wire m39_exit_M_AXI_ARREADY;
  wire m39_exit_M_AXI_ARVALID;
  wire [9:0]m39_exit_M_AXI_AWADDR;
  wire [2:0]m39_exit_M_AXI_AWPROT;
  wire m39_exit_M_AXI_AWREADY;
  wire m39_exit_M_AXI_AWVALID;
  wire m39_exit_M_AXI_BREADY;
  wire [1:0]m39_exit_M_AXI_BRESP;
  wire m39_exit_M_AXI_BVALID;
  wire [31:0]m39_exit_M_AXI_RDATA;
  wire m39_exit_M_AXI_RREADY;
  wire [1:0]m39_exit_M_AXI_RRESP;
  wire m39_exit_M_AXI_RVALID;
  wire [31:0]m39_exit_M_AXI_WDATA;
  wire m39_exit_M_AXI_WREADY;
  wire [3:0]m39_exit_M_AXI_WSTRB;
  wire m39_exit_M_AXI_WVALID;
  wire [9:0]s_axi_1_ARADDR;
  wire [3:0]s_axi_1_ARCACHE;
  wire [2:0]s_axi_1_ARID;
  wire [7:0]s_axi_1_ARLEN;
  wire [0:0]s_axi_1_ARLOCK;
  wire [2:0]s_axi_1_ARPROT;
  wire [3:0]s_axi_1_ARQOS;
  wire s_axi_1_ARREADY;
  wire [1023:0]s_axi_1_ARUSER;
  wire s_axi_1_ARVALID;
  wire [9:0]s_axi_1_AWADDR;
  wire [3:0]s_axi_1_AWCACHE;
  wire [2:0]s_axi_1_AWID;
  wire [7:0]s_axi_1_AWLEN;
  wire [0:0]s_axi_1_AWLOCK;
  wire [2:0]s_axi_1_AWPROT;
  wire [3:0]s_axi_1_AWQOS;
  wire s_axi_1_AWREADY;
  wire [1023:0]s_axi_1_AWUSER;
  wire s_axi_1_AWVALID;
  wire [2:0]s_axi_1_BID;
  wire s_axi_1_BREADY;
  wire [1:0]s_axi_1_BRESP;
  wire [1023:0]s_axi_1_BUSER;
  wire s_axi_1_BVALID;
  wire [31:0]s_axi_1_RDATA;
  wire [2:0]s_axi_1_RID;
  wire s_axi_1_RLAST;
  wire s_axi_1_RREADY;
  wire [1:0]s_axi_1_RRESP;
  wire [1023:0]s_axi_1_RUSER;
  wire s_axi_1_RVALID;
  wire [31:0]s_axi_1_WDATA;
  wire s_axi_1_WLAST;
  wire s_axi_1_WREADY;
  wire [3:0]s_axi_1_WSTRB;
  wire [1023:0]s_axi_1_WUSER;
  wire s_axi_1_WVALID;

  assign aclk_1 = aclk;
  assign aresetn_1 = aresetn;
  assign m39_exit_M_AXI_ARREADY = m_axi_arready;
  assign m39_exit_M_AXI_AWREADY = m_axi_awready;
  assign m39_exit_M_AXI_BRESP = m_axi_bresp[1:0];
  assign m39_exit_M_AXI_BVALID = m_axi_bvalid;
  assign m39_exit_M_AXI_RDATA = m_axi_rdata[31:0];
  assign m39_exit_M_AXI_RRESP = m_axi_rresp[1:0];
  assign m39_exit_M_AXI_RVALID = m_axi_rvalid;
  assign m39_exit_M_AXI_WREADY = m_axi_wready;
  assign m_axi_araddr[9:0] = m39_exit_M_AXI_ARADDR;
  assign m_axi_arprot[2:0] = m39_exit_M_AXI_ARPROT;
  assign m_axi_arvalid = m39_exit_M_AXI_ARVALID;
  assign m_axi_awaddr[9:0] = m39_exit_M_AXI_AWADDR;
  assign m_axi_awprot[2:0] = m39_exit_M_AXI_AWPROT;
  assign m_axi_awvalid = m39_exit_M_AXI_AWVALID;
  assign m_axi_bready = m39_exit_M_AXI_BREADY;
  assign m_axi_rready = m39_exit_M_AXI_RREADY;
  assign m_axi_wdata[31:0] = m39_exit_M_AXI_WDATA;
  assign m_axi_wstrb[3:0] = m39_exit_M_AXI_WSTRB;
  assign m_axi_wvalid = m39_exit_M_AXI_WVALID;
  assign s_axi_1_ARADDR = s_axi_araddr[9:0];
  assign s_axi_1_ARCACHE = s_axi_arcache[3:0];
  assign s_axi_1_ARID = s_axi_arid[2:0];
  assign s_axi_1_ARLEN = s_axi_arlen[7:0];
  assign s_axi_1_ARLOCK = s_axi_arlock[0];
  assign s_axi_1_ARPROT = s_axi_arprot[2:0];
  assign s_axi_1_ARQOS = s_axi_arqos[3:0];
  assign s_axi_1_ARUSER = s_axi_aruser[1023:0];
  assign s_axi_1_ARVALID = s_axi_arvalid;
  assign s_axi_1_AWADDR = s_axi_awaddr[9:0];
  assign s_axi_1_AWCACHE = s_axi_awcache[3:0];
  assign s_axi_1_AWID = s_axi_awid[2:0];
  assign s_axi_1_AWLEN = s_axi_awlen[7:0];
  assign s_axi_1_AWLOCK = s_axi_awlock[0];
  assign s_axi_1_AWPROT = s_axi_awprot[2:0];
  assign s_axi_1_AWQOS = s_axi_awqos[3:0];
  assign s_axi_1_AWUSER = s_axi_awuser[1023:0];
  assign s_axi_1_AWVALID = s_axi_awvalid;
  assign s_axi_1_BREADY = s_axi_bready;
  assign s_axi_1_RREADY = s_axi_rready;
  assign s_axi_1_WDATA = s_axi_wdata[31:0];
  assign s_axi_1_WLAST = s_axi_wlast;
  assign s_axi_1_WSTRB = s_axi_wstrb[3:0];
  assign s_axi_1_WUSER = s_axi_wuser[1023:0];
  assign s_axi_1_WVALID = s_axi_wvalid;
  assign s_axi_arready = s_axi_1_ARREADY;
  assign s_axi_awready = s_axi_1_AWREADY;
  assign s_axi_bid[2:0] = s_axi_1_BID;
  assign s_axi_bresp[1:0] = s_axi_1_BRESP;
  assign s_axi_buser[1023:0] = s_axi_1_BUSER;
  assign s_axi_bvalid = s_axi_1_BVALID;
  assign s_axi_rdata[31:0] = s_axi_1_RDATA;
  assign s_axi_rid[2:0] = s_axi_1_RID;
  assign s_axi_rlast = s_axi_1_RLAST;
  assign s_axi_rresp[1:0] = s_axi_1_RRESP;
  assign s_axi_ruser[1023:0] = s_axi_1_RUSER;
  assign s_axi_rvalid = s_axi_1_RVALID;
  assign s_axi_wready = s_axi_1_WREADY;
  bd_afc3_m39e_0 m39_exit
       (.aclk(aclk_1),
        .aresetn(aresetn_1),
        .m_axi_araddr(m39_exit_M_AXI_ARADDR),
        .m_axi_arprot(m39_exit_M_AXI_ARPROT),
        .m_axi_arready(m39_exit_M_AXI_ARREADY),
        .m_axi_arvalid(m39_exit_M_AXI_ARVALID),
        .m_axi_awaddr(m39_exit_M_AXI_AWADDR),
        .m_axi_awprot(m39_exit_M_AXI_AWPROT),
        .m_axi_awready(m39_exit_M_AXI_AWREADY),
        .m_axi_awvalid(m39_exit_M_AXI_AWVALID),
        .m_axi_bready(m39_exit_M_AXI_BREADY),
        .m_axi_bresp(m39_exit_M_AXI_BRESP),
        .m_axi_bvalid(m39_exit_M_AXI_BVALID),
        .m_axi_rdata(m39_exit_M_AXI_RDATA),
        .m_axi_rready(m39_exit_M_AXI_RREADY),
        .m_axi_rresp(m39_exit_M_AXI_RRESP),
        .m_axi_rvalid(m39_exit_M_AXI_RVALID),
        .m_axi_wdata(m39_exit_M_AXI_WDATA),
        .m_axi_wready(m39_exit_M_AXI_WREADY),
        .m_axi_wstrb(m39_exit_M_AXI_WSTRB),
        .m_axi_wvalid(m39_exit_M_AXI_WVALID),
        .s_axi_araddr(s_axi_1_ARADDR),
        .s_axi_arcache(s_axi_1_ARCACHE),
        .s_axi_arid(s_axi_1_ARID),
        .s_axi_arlen(s_axi_1_ARLEN),
        .s_axi_arlock(s_axi_1_ARLOCK),
        .s_axi_arprot(s_axi_1_ARPROT),
        .s_axi_arqos(s_axi_1_ARQOS),
        .s_axi_arready(s_axi_1_ARREADY),
        .s_axi_aruser(s_axi_1_ARUSER),
        .s_axi_arvalid(s_axi_1_ARVALID),
        .s_axi_awaddr(s_axi_1_AWADDR),
        .s_axi_awcache(s_axi_1_AWCACHE),
        .s_axi_awid(s_axi_1_AWID),
        .s_axi_awlen(s_axi_1_AWLEN),
        .s_axi_awlock(s_axi_1_AWLOCK),
        .s_axi_awprot(s_axi_1_AWPROT),
        .s_axi_awqos(s_axi_1_AWQOS),
        .s_axi_awready(s_axi_1_AWREADY),
        .s_axi_awuser(s_axi_1_AWUSER),
        .s_axi_awvalid(s_axi_1_AWVALID),
        .s_axi_bid(s_axi_1_BID),
        .s_axi_bready(s_axi_1_BREADY),
        .s_axi_bresp(s_axi_1_BRESP),
        .s_axi_buser(s_axi_1_BUSER),
        .s_axi_bvalid(s_axi_1_BVALID),
        .s_axi_rdata(s_axi_1_RDATA),
        .s_axi_rid(s_axi_1_RID),
        .s_axi_rlast(s_axi_1_RLAST),
        .s_axi_rready(s_axi_1_RREADY),
        .s_axi_rresp(s_axi_1_RRESP),
        .s_axi_ruser(s_axi_1_RUSER),
        .s_axi_rvalid(s_axi_1_RVALID),
        .s_axi_wdata(s_axi_1_WDATA),
        .s_axi_wlast(s_axi_1_WLAST),
        .s_axi_wready(s_axi_1_WREADY),
        .s_axi_wstrb(s_axi_1_WSTRB),
        .s_axi_wuser(s_axi_1_WUSER),
        .s_axi_wvalid(s_axi_1_WVALID));
endmodule

module m39_nodes_imp_RKNQQ
   (M_SC_AR_info,
    M_SC_AR_payld,
    M_SC_AR_recv,
    M_SC_AR_req,
    M_SC_AR_send,
    M_SC_AW_info,
    M_SC_AW_payld,
    M_SC_AW_recv,
    M_SC_AW_req,
    M_SC_AW_send,
    M_SC_B_info,
    M_SC_B_payld,
    M_SC_B_recv,
    M_SC_B_req,
    M_SC_B_send,
    M_SC_R_info,
    M_SC_R_payld,
    M_SC_R_recv,
    M_SC_R_req,
    M_SC_R_send,
    M_SC_W_info,
    M_SC_W_payld,
    M_SC_W_recv,
    M_SC_W_req,
    M_SC_W_send,
    S_SC_AR_info,
    S_SC_AR_payld,
    S_SC_AR_recv,
    S_SC_AR_req,
    S_SC_AR_send,
    S_SC_AW_info,
    S_SC_AW_payld,
    S_SC_AW_recv,
    S_SC_AW_req,
    S_SC_AW_send,
    S_SC_B_info,
    S_SC_B_payld,
    S_SC_B_recv,
    S_SC_B_req,
    S_SC_B_send,
    S_SC_R_info,
    S_SC_R_payld,
    S_SC_R_recv,
    S_SC_R_req,
    S_SC_R_send,
    S_SC_W_info,
    S_SC_W_payld,
    S_SC_W_recv,
    S_SC_W_req,
    S_SC_W_send,
    m_axi_aclk,
    m_axi_aresetn,
    s_axi_aclk,
    s_axi_aresetn);
  output [0:0]M_SC_AR_info;
  output [181:0]M_SC_AR_payld;
  input [0:0]M_SC_AR_recv;
  output [0:0]M_SC_AR_req;
  output [0:0]M_SC_AR_send;
  output [0:0]M_SC_AW_info;
  output [181:0]M_SC_AW_payld;
  input [0:0]M_SC_AW_recv;
  output [0:0]M_SC_AW_req;
  output [0:0]M_SC_AW_send;
  output [0:0]M_SC_B_info;
  output [8:0]M_SC_B_payld;
  input [0:0]M_SC_B_recv;
  output [0:0]M_SC_B_req;
  output [0:0]M_SC_B_send;
  output [0:0]M_SC_R_info;
  output [54:0]M_SC_R_payld;
  input [0:0]M_SC_R_recv;
  output [0:0]M_SC_R_req;
  output [0:0]M_SC_R_send;
  output [0:0]M_SC_W_info;
  output [68:0]M_SC_W_payld;
  input [0:0]M_SC_W_recv;
  output [0:0]M_SC_W_req;
  output [0:0]M_SC_W_send;
  input [0:0]S_SC_AR_info;
  input [181:0]S_SC_AR_payld;
  output [0:0]S_SC_AR_recv;
  input [0:0]S_SC_AR_req;
  input [0:0]S_SC_AR_send;
  input [0:0]S_SC_AW_info;
  input [181:0]S_SC_AW_payld;
  output [0:0]S_SC_AW_recv;
  input [0:0]S_SC_AW_req;
  input [0:0]S_SC_AW_send;
  input [0:0]S_SC_B_info;
  input [8:0]S_SC_B_payld;
  output [0:0]S_SC_B_recv;
  input [0:0]S_SC_B_req;
  input [0:0]S_SC_B_send;
  input [0:0]S_SC_R_info;
  input [54:0]S_SC_R_payld;
  output [0:0]S_SC_R_recv;
  input [0:0]S_SC_R_req;
  input [0:0]S_SC_R_send;
  input [0:0]S_SC_W_info;
  input [68:0]S_SC_W_payld;
  output [0:0]S_SC_W_recv;
  input [0:0]S_SC_W_req;
  input [0:0]S_SC_W_send;
  input m_axi_aclk;
  input m_axi_aresetn;
  input s_axi_aclk;
  input s_axi_aresetn;

  wire [0:0]S_SC_AR_1_INFO;
  wire [181:0]S_SC_AR_1_PAYLD;
  wire [0:0]S_SC_AR_1_RECV;
  wire [0:0]S_SC_AR_1_REQ;
  wire [0:0]S_SC_AR_1_SEND;
  wire [0:0]S_SC_AW_1_INFO;
  wire [181:0]S_SC_AW_1_PAYLD;
  wire [0:0]S_SC_AW_1_RECV;
  wire [0:0]S_SC_AW_1_REQ;
  wire [0:0]S_SC_AW_1_SEND;
  wire [0:0]S_SC_B_1_INFO;
  wire [8:0]S_SC_B_1_PAYLD;
  wire [0:0]S_SC_B_1_RECV;
  wire [0:0]S_SC_B_1_REQ;
  wire [0:0]S_SC_B_1_SEND;
  wire [0:0]S_SC_R_1_INFO;
  wire [54:0]S_SC_R_1_PAYLD;
  wire [0:0]S_SC_R_1_RECV;
  wire [0:0]S_SC_R_1_REQ;
  wire [0:0]S_SC_R_1_SEND;
  wire [0:0]S_SC_W_1_INFO;
  wire [68:0]S_SC_W_1_PAYLD;
  wire [0:0]S_SC_W_1_RECV;
  wire [0:0]S_SC_W_1_REQ;
  wire [0:0]S_SC_W_1_SEND;
  wire [0:0]m39_ar_node_M_SC_INFO;
  wire [181:0]m39_ar_node_M_SC_PAYLD;
  wire [0:0]m39_ar_node_M_SC_RECV;
  wire [0:0]m39_ar_node_M_SC_REQ;
  wire [0:0]m39_ar_node_M_SC_SEND;
  wire [0:0]m39_aw_node_M_SC_INFO;
  wire [181:0]m39_aw_node_M_SC_PAYLD;
  wire [0:0]m39_aw_node_M_SC_RECV;
  wire [0:0]m39_aw_node_M_SC_REQ;
  wire [0:0]m39_aw_node_M_SC_SEND;
  wire [0:0]m39_b_node_M_SC_INFO;
  wire [8:0]m39_b_node_M_SC_PAYLD;
  wire [0:0]m39_b_node_M_SC_RECV;
  wire [0:0]m39_b_node_M_SC_REQ;
  wire [0:0]m39_b_node_M_SC_SEND;
  wire [0:0]m39_r_node_M_SC_INFO;
  wire [54:0]m39_r_node_M_SC_PAYLD;
  wire [0:0]m39_r_node_M_SC_RECV;
  wire [0:0]m39_r_node_M_SC_REQ;
  wire [0:0]m39_r_node_M_SC_SEND;
  wire [0:0]m39_w_node_M_SC_INFO;
  wire [68:0]m39_w_node_M_SC_PAYLD;
  wire [0:0]m39_w_node_M_SC_RECV;
  wire [0:0]m39_w_node_M_SC_REQ;
  wire [0:0]m39_w_node_M_SC_SEND;
  wire m_axi_aclk_1;
  wire m_axi_aresetn_1;
  wire s_axi_aclk_1;
  wire s_axi_aresetn_1;

  assign M_SC_AR_info[0] = m39_ar_node_M_SC_INFO;
  assign M_SC_AR_payld[181:0] = m39_ar_node_M_SC_PAYLD;
  assign M_SC_AR_req[0] = m39_ar_node_M_SC_REQ;
  assign M_SC_AR_send[0] = m39_ar_node_M_SC_SEND;
  assign M_SC_AW_info[0] = m39_aw_node_M_SC_INFO;
  assign M_SC_AW_payld[181:0] = m39_aw_node_M_SC_PAYLD;
  assign M_SC_AW_req[0] = m39_aw_node_M_SC_REQ;
  assign M_SC_AW_send[0] = m39_aw_node_M_SC_SEND;
  assign M_SC_B_info[0] = m39_b_node_M_SC_INFO;
  assign M_SC_B_payld[8:0] = m39_b_node_M_SC_PAYLD;
  assign M_SC_B_req[0] = m39_b_node_M_SC_REQ;
  assign M_SC_B_send[0] = m39_b_node_M_SC_SEND;
  assign M_SC_R_info[0] = m39_r_node_M_SC_INFO;
  assign M_SC_R_payld[54:0] = m39_r_node_M_SC_PAYLD;
  assign M_SC_R_req[0] = m39_r_node_M_SC_REQ;
  assign M_SC_R_send[0] = m39_r_node_M_SC_SEND;
  assign M_SC_W_info[0] = m39_w_node_M_SC_INFO;
  assign M_SC_W_payld[68:0] = m39_w_node_M_SC_PAYLD;
  assign M_SC_W_req[0] = m39_w_node_M_SC_REQ;
  assign M_SC_W_send[0] = m39_w_node_M_SC_SEND;
  assign S_SC_AR_1_INFO = S_SC_AR_info[0];
  assign S_SC_AR_1_PAYLD = S_SC_AR_payld[181:0];
  assign S_SC_AR_1_REQ = S_SC_AR_req[0];
  assign S_SC_AR_1_SEND = S_SC_AR_send[0];
  assign S_SC_AR_recv[0] = S_SC_AR_1_RECV;
  assign S_SC_AW_1_INFO = S_SC_AW_info[0];
  assign S_SC_AW_1_PAYLD = S_SC_AW_payld[181:0];
  assign S_SC_AW_1_REQ = S_SC_AW_req[0];
  assign S_SC_AW_1_SEND = S_SC_AW_send[0];
  assign S_SC_AW_recv[0] = S_SC_AW_1_RECV;
  assign S_SC_B_1_INFO = S_SC_B_info[0];
  assign S_SC_B_1_PAYLD = S_SC_B_payld[8:0];
  assign S_SC_B_1_REQ = S_SC_B_req[0];
  assign S_SC_B_1_SEND = S_SC_B_send[0];
  assign S_SC_B_recv[0] = S_SC_B_1_RECV;
  assign S_SC_R_1_INFO = S_SC_R_info[0];
  assign S_SC_R_1_PAYLD = S_SC_R_payld[54:0];
  assign S_SC_R_1_REQ = S_SC_R_req[0];
  assign S_SC_R_1_SEND = S_SC_R_send[0];
  assign S_SC_R_recv[0] = S_SC_R_1_RECV;
  assign S_SC_W_1_INFO = S_SC_W_info[0];
  assign S_SC_W_1_PAYLD = S_SC_W_payld[68:0];
  assign S_SC_W_1_REQ = S_SC_W_req[0];
  assign S_SC_W_1_SEND = S_SC_W_send[0];
  assign S_SC_W_recv[0] = S_SC_W_1_RECV;
  assign m39_ar_node_M_SC_RECV = M_SC_AR_recv[0];
  assign m39_aw_node_M_SC_RECV = M_SC_AW_recv[0];
  assign m39_b_node_M_SC_RECV = M_SC_B_recv[0];
  assign m39_r_node_M_SC_RECV = M_SC_R_recv[0];
  assign m39_w_node_M_SC_RECV = M_SC_W_recv[0];
  assign m_axi_aclk_1 = m_axi_aclk;
  assign m_axi_aresetn_1 = m_axi_aresetn;
  assign s_axi_aclk_1 = s_axi_aclk;
  assign s_axi_aresetn_1 = s_axi_aresetn;
  bd_afc3_m39arn_0 m39_ar_node
       (.m_sc_aclk(m_axi_aclk_1),
        .m_sc_aresetn(m_axi_aresetn_1),
        .m_sc_info(m39_ar_node_M_SC_INFO),
        .m_sc_payld(m39_ar_node_M_SC_PAYLD),
        .m_sc_recv(m39_ar_node_M_SC_RECV),
        .m_sc_req(m39_ar_node_M_SC_REQ),
        .m_sc_send(m39_ar_node_M_SC_SEND),
        .s_sc_aclk(s_axi_aclk_1),
        .s_sc_aresetn(s_axi_aresetn_1),
        .s_sc_info(S_SC_AR_1_INFO),
        .s_sc_payld(S_SC_AR_1_PAYLD),
        .s_sc_recv(S_SC_AR_1_RECV),
        .s_sc_req(S_SC_AR_1_REQ),
        .s_sc_send(S_SC_AR_1_SEND));
  bd_afc3_m39awn_0 m39_aw_node
       (.m_sc_aclk(m_axi_aclk_1),
        .m_sc_aresetn(m_axi_aresetn_1),
        .m_sc_info(m39_aw_node_M_SC_INFO),
        .m_sc_payld(m39_aw_node_M_SC_PAYLD),
        .m_sc_recv(m39_aw_node_M_SC_RECV),
        .m_sc_req(m39_aw_node_M_SC_REQ),
        .m_sc_send(m39_aw_node_M_SC_SEND),
        .s_sc_aclk(s_axi_aclk_1),
        .s_sc_aresetn(s_axi_aresetn_1),
        .s_sc_info(S_SC_AW_1_INFO),
        .s_sc_payld(S_SC_AW_1_PAYLD),
        .s_sc_recv(S_SC_AW_1_RECV),
        .s_sc_req(S_SC_AW_1_REQ),
        .s_sc_send(S_SC_AW_1_SEND));
  bd_afc3_m39bn_0 m39_b_node
       (.m_sc_aclk(s_axi_aclk_1),
        .m_sc_aresetn(s_axi_aresetn_1),
        .m_sc_info(m39_b_node_M_SC_INFO),
        .m_sc_payld(m39_b_node_M_SC_PAYLD),
        .m_sc_recv(m39_b_node_M_SC_RECV),
        .m_sc_req(m39_b_node_M_SC_REQ),
        .m_sc_send(m39_b_node_M_SC_SEND),
        .s_sc_aclk(m_axi_aclk_1),
        .s_sc_aresetn(m_axi_aresetn_1),
        .s_sc_info(S_SC_B_1_INFO),
        .s_sc_payld(S_SC_B_1_PAYLD),
        .s_sc_recv(S_SC_B_1_RECV),
        .s_sc_req(S_SC_B_1_REQ),
        .s_sc_send(S_SC_B_1_SEND));
  bd_afc3_m39rn_0 m39_r_node
       (.m_sc_aclk(s_axi_aclk_1),
        .m_sc_aresetn(s_axi_aresetn_1),
        .m_sc_info(m39_r_node_M_SC_INFO),
        .m_sc_payld(m39_r_node_M_SC_PAYLD),
        .m_sc_recv(m39_r_node_M_SC_RECV),
        .m_sc_req(m39_r_node_M_SC_REQ),
        .m_sc_send(m39_r_node_M_SC_SEND),
        .s_sc_aclk(m_axi_aclk_1),
        .s_sc_aresetn(m_axi_aresetn_1),
        .s_sc_info(S_SC_R_1_INFO),
        .s_sc_payld(S_SC_R_1_PAYLD),
        .s_sc_recv(S_SC_R_1_RECV),
        .s_sc_req(S_SC_R_1_REQ),
        .s_sc_send(S_SC_R_1_SEND));
  bd_afc3_m39wn_0 m39_w_node
       (.m_sc_aclk(m_axi_aclk_1),
        .m_sc_aresetn(m_axi_aresetn_1),
        .m_sc_info(m39_w_node_M_SC_INFO),
        .m_sc_payld(m39_w_node_M_SC_PAYLD),
        .m_sc_recv(m39_w_node_M_SC_RECV),
        .m_sc_req(m39_w_node_M_SC_REQ),
        .m_sc_send(m39_w_node_M_SC_SEND),
        .s_sc_aclk(s_axi_aclk_1),
        .s_sc_aresetn(s_axi_aresetn_1),
        .s_sc_info(S_SC_W_1_INFO),
        .s_sc_payld(S_SC_W_1_PAYLD),
        .s_sc_recv(S_SC_W_1_RECV),
        .s_sc_req(S_SC_W_1_REQ),
        .s_sc_send(S_SC_W_1_SEND));
endmodule

module m40_exit_pipeline_imp_1TWCSZ8
   (aclk,
    aresetn,
    m_axi_araddr,
    m_axi_arprot,
    m_axi_arready,
    m_axi_arvalid,
    m_axi_awaddr,
    m_axi_awprot,
    m_axi_awready,
    m_axi_awvalid,
    m_axi_bready,
    m_axi_bresp,
    m_axi_bvalid,
    m_axi_rdata,
    m_axi_rready,
    m_axi_rresp,
    m_axi_rvalid,
    m_axi_wdata,
    m_axi_wready,
    m_axi_wstrb,
    m_axi_wvalid,
    s_axi_araddr,
    s_axi_arcache,
    s_axi_arid,
    s_axi_arlen,
    s_axi_arlock,
    s_axi_arprot,
    s_axi_arqos,
    s_axi_arready,
    s_axi_aruser,
    s_axi_arvalid,
    s_axi_awaddr,
    s_axi_awcache,
    s_axi_awid,
    s_axi_awlen,
    s_axi_awlock,
    s_axi_awprot,
    s_axi_awqos,
    s_axi_awready,
    s_axi_awuser,
    s_axi_awvalid,
    s_axi_bid,
    s_axi_bready,
    s_axi_bresp,
    s_axi_buser,
    s_axi_bvalid,
    s_axi_rdata,
    s_axi_rid,
    s_axi_rlast,
    s_axi_rready,
    s_axi_rresp,
    s_axi_ruser,
    s_axi_rvalid,
    s_axi_wdata,
    s_axi_wlast,
    s_axi_wready,
    s_axi_wstrb,
    s_axi_wuser,
    s_axi_wvalid);
  input aclk;
  input aresetn;
  output [9:0]m_axi_araddr;
  output [2:0]m_axi_arprot;
  input m_axi_arready;
  output m_axi_arvalid;
  output [9:0]m_axi_awaddr;
  output [2:0]m_axi_awprot;
  input m_axi_awready;
  output m_axi_awvalid;
  output m_axi_bready;
  input [1:0]m_axi_bresp;
  input m_axi_bvalid;
  input [31:0]m_axi_rdata;
  output m_axi_rready;
  input [1:0]m_axi_rresp;
  input m_axi_rvalid;
  output [31:0]m_axi_wdata;
  input m_axi_wready;
  output [3:0]m_axi_wstrb;
  output m_axi_wvalid;
  input [9:0]s_axi_araddr;
  input [3:0]s_axi_arcache;
  input [2:0]s_axi_arid;
  input [7:0]s_axi_arlen;
  input [0:0]s_axi_arlock;
  input [2:0]s_axi_arprot;
  input [3:0]s_axi_arqos;
  output s_axi_arready;
  input [1023:0]s_axi_aruser;
  input s_axi_arvalid;
  input [9:0]s_axi_awaddr;
  input [3:0]s_axi_awcache;
  input [2:0]s_axi_awid;
  input [7:0]s_axi_awlen;
  input [0:0]s_axi_awlock;
  input [2:0]s_axi_awprot;
  input [3:0]s_axi_awqos;
  output s_axi_awready;
  input [1023:0]s_axi_awuser;
  input s_axi_awvalid;
  output [2:0]s_axi_bid;
  input s_axi_bready;
  output [1:0]s_axi_bresp;
  output [1023:0]s_axi_buser;
  output s_axi_bvalid;
  output [31:0]s_axi_rdata;
  output [2:0]s_axi_rid;
  output s_axi_rlast;
  input s_axi_rready;
  output [1:0]s_axi_rresp;
  output [1023:0]s_axi_ruser;
  output s_axi_rvalid;
  input [31:0]s_axi_wdata;
  input s_axi_wlast;
  output s_axi_wready;
  input [3:0]s_axi_wstrb;
  input [1023:0]s_axi_wuser;
  input s_axi_wvalid;

  wire aclk_1;
  wire aresetn_1;
  wire [9:0]m40_exit_M_AXI_ARADDR;
  wire [2:0]m40_exit_M_AXI_ARPROT;
  wire m40_exit_M_AXI_ARREADY;
  wire m40_exit_M_AXI_ARVALID;
  wire [9:0]m40_exit_M_AXI_AWADDR;
  wire [2:0]m40_exit_M_AXI_AWPROT;
  wire m40_exit_M_AXI_AWREADY;
  wire m40_exit_M_AXI_AWVALID;
  wire m40_exit_M_AXI_BREADY;
  wire [1:0]m40_exit_M_AXI_BRESP;
  wire m40_exit_M_AXI_BVALID;
  wire [31:0]m40_exit_M_AXI_RDATA;
  wire m40_exit_M_AXI_RREADY;
  wire [1:0]m40_exit_M_AXI_RRESP;
  wire m40_exit_M_AXI_RVALID;
  wire [31:0]m40_exit_M_AXI_WDATA;
  wire m40_exit_M_AXI_WREADY;
  wire [3:0]m40_exit_M_AXI_WSTRB;
  wire m40_exit_M_AXI_WVALID;
  wire [9:0]s_axi_1_ARADDR;
  wire [3:0]s_axi_1_ARCACHE;
  wire [2:0]s_axi_1_ARID;
  wire [7:0]s_axi_1_ARLEN;
  wire [0:0]s_axi_1_ARLOCK;
  wire [2:0]s_axi_1_ARPROT;
  wire [3:0]s_axi_1_ARQOS;
  wire s_axi_1_ARREADY;
  wire [1023:0]s_axi_1_ARUSER;
  wire s_axi_1_ARVALID;
  wire [9:0]s_axi_1_AWADDR;
  wire [3:0]s_axi_1_AWCACHE;
  wire [2:0]s_axi_1_AWID;
  wire [7:0]s_axi_1_AWLEN;
  wire [0:0]s_axi_1_AWLOCK;
  wire [2:0]s_axi_1_AWPROT;
  wire [3:0]s_axi_1_AWQOS;
  wire s_axi_1_AWREADY;
  wire [1023:0]s_axi_1_AWUSER;
  wire s_axi_1_AWVALID;
  wire [2:0]s_axi_1_BID;
  wire s_axi_1_BREADY;
  wire [1:0]s_axi_1_BRESP;
  wire [1023:0]s_axi_1_BUSER;
  wire s_axi_1_BVALID;
  wire [31:0]s_axi_1_RDATA;
  wire [2:0]s_axi_1_RID;
  wire s_axi_1_RLAST;
  wire s_axi_1_RREADY;
  wire [1:0]s_axi_1_RRESP;
  wire [1023:0]s_axi_1_RUSER;
  wire s_axi_1_RVALID;
  wire [31:0]s_axi_1_WDATA;
  wire s_axi_1_WLAST;
  wire s_axi_1_WREADY;
  wire [3:0]s_axi_1_WSTRB;
  wire [1023:0]s_axi_1_WUSER;
  wire s_axi_1_WVALID;

  assign aclk_1 = aclk;
  assign aresetn_1 = aresetn;
  assign m40_exit_M_AXI_ARREADY = m_axi_arready;
  assign m40_exit_M_AXI_AWREADY = m_axi_awready;
  assign m40_exit_M_AXI_BRESP = m_axi_bresp[1:0];
  assign m40_exit_M_AXI_BVALID = m_axi_bvalid;
  assign m40_exit_M_AXI_RDATA = m_axi_rdata[31:0];
  assign m40_exit_M_AXI_RRESP = m_axi_rresp[1:0];
  assign m40_exit_M_AXI_RVALID = m_axi_rvalid;
  assign m40_exit_M_AXI_WREADY = m_axi_wready;
  assign m_axi_araddr[9:0] = m40_exit_M_AXI_ARADDR;
  assign m_axi_arprot[2:0] = m40_exit_M_AXI_ARPROT;
  assign m_axi_arvalid = m40_exit_M_AXI_ARVALID;
  assign m_axi_awaddr[9:0] = m40_exit_M_AXI_AWADDR;
  assign m_axi_awprot[2:0] = m40_exit_M_AXI_AWPROT;
  assign m_axi_awvalid = m40_exit_M_AXI_AWVALID;
  assign m_axi_bready = m40_exit_M_AXI_BREADY;
  assign m_axi_rready = m40_exit_M_AXI_RREADY;
  assign m_axi_wdata[31:0] = m40_exit_M_AXI_WDATA;
  assign m_axi_wstrb[3:0] = m40_exit_M_AXI_WSTRB;
  assign m_axi_wvalid = m40_exit_M_AXI_WVALID;
  assign s_axi_1_ARADDR = s_axi_araddr[9:0];
  assign s_axi_1_ARCACHE = s_axi_arcache[3:0];
  assign s_axi_1_ARID = s_axi_arid[2:0];
  assign s_axi_1_ARLEN = s_axi_arlen[7:0];
  assign s_axi_1_ARLOCK = s_axi_arlock[0];
  assign s_axi_1_ARPROT = s_axi_arprot[2:0];
  assign s_axi_1_ARQOS = s_axi_arqos[3:0];
  assign s_axi_1_ARUSER = s_axi_aruser[1023:0];
  assign s_axi_1_ARVALID = s_axi_arvalid;
  assign s_axi_1_AWADDR = s_axi_awaddr[9:0];
  assign s_axi_1_AWCACHE = s_axi_awcache[3:0];
  assign s_axi_1_AWID = s_axi_awid[2:0];
  assign s_axi_1_AWLEN = s_axi_awlen[7:0];
  assign s_axi_1_AWLOCK = s_axi_awlock[0];
  assign s_axi_1_AWPROT = s_axi_awprot[2:0];
  assign s_axi_1_AWQOS = s_axi_awqos[3:0];
  assign s_axi_1_AWUSER = s_axi_awuser[1023:0];
  assign s_axi_1_AWVALID = s_axi_awvalid;
  assign s_axi_1_BREADY = s_axi_bready;
  assign s_axi_1_RREADY = s_axi_rready;
  assign s_axi_1_WDATA = s_axi_wdata[31:0];
  assign s_axi_1_WLAST = s_axi_wlast;
  assign s_axi_1_WSTRB = s_axi_wstrb[3:0];
  assign s_axi_1_WUSER = s_axi_wuser[1023:0];
  assign s_axi_1_WVALID = s_axi_wvalid;
  assign s_axi_arready = s_axi_1_ARREADY;
  assign s_axi_awready = s_axi_1_AWREADY;
  assign s_axi_bid[2:0] = s_axi_1_BID;
  assign s_axi_bresp[1:0] = s_axi_1_BRESP;
  assign s_axi_buser[1023:0] = s_axi_1_BUSER;
  assign s_axi_bvalid = s_axi_1_BVALID;
  assign s_axi_rdata[31:0] = s_axi_1_RDATA;
  assign s_axi_rid[2:0] = s_axi_1_RID;
  assign s_axi_rlast = s_axi_1_RLAST;
  assign s_axi_rresp[1:0] = s_axi_1_RRESP;
  assign s_axi_ruser[1023:0] = s_axi_1_RUSER;
  assign s_axi_rvalid = s_axi_1_RVALID;
  assign s_axi_wready = s_axi_1_WREADY;
  bd_afc3_m40e_0 m40_exit
       (.aclk(aclk_1),
        .aresetn(aresetn_1),
        .m_axi_araddr(m40_exit_M_AXI_ARADDR),
        .m_axi_arprot(m40_exit_M_AXI_ARPROT),
        .m_axi_arready(m40_exit_M_AXI_ARREADY),
        .m_axi_arvalid(m40_exit_M_AXI_ARVALID),
        .m_axi_awaddr(m40_exit_M_AXI_AWADDR),
        .m_axi_awprot(m40_exit_M_AXI_AWPROT),
        .m_axi_awready(m40_exit_M_AXI_AWREADY),
        .m_axi_awvalid(m40_exit_M_AXI_AWVALID),
        .m_axi_bready(m40_exit_M_AXI_BREADY),
        .m_axi_bresp(m40_exit_M_AXI_BRESP),
        .m_axi_bvalid(m40_exit_M_AXI_BVALID),
        .m_axi_rdata(m40_exit_M_AXI_RDATA),
        .m_axi_rready(m40_exit_M_AXI_RREADY),
        .m_axi_rresp(m40_exit_M_AXI_RRESP),
        .m_axi_rvalid(m40_exit_M_AXI_RVALID),
        .m_axi_wdata(m40_exit_M_AXI_WDATA),
        .m_axi_wready(m40_exit_M_AXI_WREADY),
        .m_axi_wstrb(m40_exit_M_AXI_WSTRB),
        .m_axi_wvalid(m40_exit_M_AXI_WVALID),
        .s_axi_araddr(s_axi_1_ARADDR),
        .s_axi_arcache(s_axi_1_ARCACHE),
        .s_axi_arid(s_axi_1_ARID),
        .s_axi_arlen(s_axi_1_ARLEN),
        .s_axi_arlock(s_axi_1_ARLOCK),
        .s_axi_arprot(s_axi_1_ARPROT),
        .s_axi_arqos(s_axi_1_ARQOS),
        .s_axi_arready(s_axi_1_ARREADY),
        .s_axi_aruser(s_axi_1_ARUSER),
        .s_axi_arvalid(s_axi_1_ARVALID),
        .s_axi_awaddr(s_axi_1_AWADDR),
        .s_axi_awcache(s_axi_1_AWCACHE),
        .s_axi_awid(s_axi_1_AWID),
        .s_axi_awlen(s_axi_1_AWLEN),
        .s_axi_awlock(s_axi_1_AWLOCK),
        .s_axi_awprot(s_axi_1_AWPROT),
        .s_axi_awqos(s_axi_1_AWQOS),
        .s_axi_awready(s_axi_1_AWREADY),
        .s_axi_awuser(s_axi_1_AWUSER),
        .s_axi_awvalid(s_axi_1_AWVALID),
        .s_axi_bid(s_axi_1_BID),
        .s_axi_bready(s_axi_1_BREADY),
        .s_axi_bresp(s_axi_1_BRESP),
        .s_axi_buser(s_axi_1_BUSER),
        .s_axi_bvalid(s_axi_1_BVALID),
        .s_axi_rdata(s_axi_1_RDATA),
        .s_axi_rid(s_axi_1_RID),
        .s_axi_rlast(s_axi_1_RLAST),
        .s_axi_rready(s_axi_1_RREADY),
        .s_axi_rresp(s_axi_1_RRESP),
        .s_axi_ruser(s_axi_1_RUSER),
        .s_axi_rvalid(s_axi_1_RVALID),
        .s_axi_wdata(s_axi_1_WDATA),
        .s_axi_wlast(s_axi_1_WLAST),
        .s_axi_wready(s_axi_1_WREADY),
        .s_axi_wstrb(s_axi_1_WSTRB),
        .s_axi_wuser(s_axi_1_WUSER),
        .s_axi_wvalid(s_axi_1_WVALID));
endmodule

module m40_nodes_imp_FF7BE0
   (M_SC_AR_info,
    M_SC_AR_payld,
    M_SC_AR_recv,
    M_SC_AR_req,
    M_SC_AR_send,
    M_SC_AW_info,
    M_SC_AW_payld,
    M_SC_AW_recv,
    M_SC_AW_req,
    M_SC_AW_send,
    M_SC_B_info,
    M_SC_B_payld,
    M_SC_B_recv,
    M_SC_B_req,
    M_SC_B_send,
    M_SC_R_info,
    M_SC_R_payld,
    M_SC_R_recv,
    M_SC_R_req,
    M_SC_R_send,
    M_SC_W_info,
    M_SC_W_payld,
    M_SC_W_recv,
    M_SC_W_req,
    M_SC_W_send,
    S_SC_AR_info,
    S_SC_AR_payld,
    S_SC_AR_recv,
    S_SC_AR_req,
    S_SC_AR_send,
    S_SC_AW_info,
    S_SC_AW_payld,
    S_SC_AW_recv,
    S_SC_AW_req,
    S_SC_AW_send,
    S_SC_B_info,
    S_SC_B_payld,
    S_SC_B_recv,
    S_SC_B_req,
    S_SC_B_send,
    S_SC_R_info,
    S_SC_R_payld,
    S_SC_R_recv,
    S_SC_R_req,
    S_SC_R_send,
    S_SC_W_info,
    S_SC_W_payld,
    S_SC_W_recv,
    S_SC_W_req,
    S_SC_W_send,
    m_axi_aclk,
    m_axi_aresetn,
    s_axi_aclk,
    s_axi_aresetn);
  output [0:0]M_SC_AR_info;
  output [181:0]M_SC_AR_payld;
  input [0:0]M_SC_AR_recv;
  output [0:0]M_SC_AR_req;
  output [0:0]M_SC_AR_send;
  output [0:0]M_SC_AW_info;
  output [181:0]M_SC_AW_payld;
  input [0:0]M_SC_AW_recv;
  output [0:0]M_SC_AW_req;
  output [0:0]M_SC_AW_send;
  output [0:0]M_SC_B_info;
  output [8:0]M_SC_B_payld;
  input [0:0]M_SC_B_recv;
  output [0:0]M_SC_B_req;
  output [0:0]M_SC_B_send;
  output [0:0]M_SC_R_info;
  output [54:0]M_SC_R_payld;
  input [0:0]M_SC_R_recv;
  output [0:0]M_SC_R_req;
  output [0:0]M_SC_R_send;
  output [0:0]M_SC_W_info;
  output [68:0]M_SC_W_payld;
  input [0:0]M_SC_W_recv;
  output [0:0]M_SC_W_req;
  output [0:0]M_SC_W_send;
  input [0:0]S_SC_AR_info;
  input [181:0]S_SC_AR_payld;
  output [0:0]S_SC_AR_recv;
  input [0:0]S_SC_AR_req;
  input [0:0]S_SC_AR_send;
  input [0:0]S_SC_AW_info;
  input [181:0]S_SC_AW_payld;
  output [0:0]S_SC_AW_recv;
  input [0:0]S_SC_AW_req;
  input [0:0]S_SC_AW_send;
  input [0:0]S_SC_B_info;
  input [8:0]S_SC_B_payld;
  output [0:0]S_SC_B_recv;
  input [0:0]S_SC_B_req;
  input [0:0]S_SC_B_send;
  input [0:0]S_SC_R_info;
  input [54:0]S_SC_R_payld;
  output [0:0]S_SC_R_recv;
  input [0:0]S_SC_R_req;
  input [0:0]S_SC_R_send;
  input [0:0]S_SC_W_info;
  input [68:0]S_SC_W_payld;
  output [0:0]S_SC_W_recv;
  input [0:0]S_SC_W_req;
  input [0:0]S_SC_W_send;
  input m_axi_aclk;
  input m_axi_aresetn;
  input s_axi_aclk;
  input s_axi_aresetn;

  wire [0:0]S_SC_AR_1_INFO;
  wire [181:0]S_SC_AR_1_PAYLD;
  wire [0:0]S_SC_AR_1_RECV;
  wire [0:0]S_SC_AR_1_REQ;
  wire [0:0]S_SC_AR_1_SEND;
  wire [0:0]S_SC_AW_1_INFO;
  wire [181:0]S_SC_AW_1_PAYLD;
  wire [0:0]S_SC_AW_1_RECV;
  wire [0:0]S_SC_AW_1_REQ;
  wire [0:0]S_SC_AW_1_SEND;
  wire [0:0]S_SC_B_1_INFO;
  wire [8:0]S_SC_B_1_PAYLD;
  wire [0:0]S_SC_B_1_RECV;
  wire [0:0]S_SC_B_1_REQ;
  wire [0:0]S_SC_B_1_SEND;
  wire [0:0]S_SC_R_1_INFO;
  wire [54:0]S_SC_R_1_PAYLD;
  wire [0:0]S_SC_R_1_RECV;
  wire [0:0]S_SC_R_1_REQ;
  wire [0:0]S_SC_R_1_SEND;
  wire [0:0]S_SC_W_1_INFO;
  wire [68:0]S_SC_W_1_PAYLD;
  wire [0:0]S_SC_W_1_RECV;
  wire [0:0]S_SC_W_1_REQ;
  wire [0:0]S_SC_W_1_SEND;
  wire [0:0]m40_ar_node_M_SC_INFO;
  wire [181:0]m40_ar_node_M_SC_PAYLD;
  wire [0:0]m40_ar_node_M_SC_RECV;
  wire [0:0]m40_ar_node_M_SC_REQ;
  wire [0:0]m40_ar_node_M_SC_SEND;
  wire [0:0]m40_aw_node_M_SC_INFO;
  wire [181:0]m40_aw_node_M_SC_PAYLD;
  wire [0:0]m40_aw_node_M_SC_RECV;
  wire [0:0]m40_aw_node_M_SC_REQ;
  wire [0:0]m40_aw_node_M_SC_SEND;
  wire [0:0]m40_b_node_M_SC_INFO;
  wire [8:0]m40_b_node_M_SC_PAYLD;
  wire [0:0]m40_b_node_M_SC_RECV;
  wire [0:0]m40_b_node_M_SC_REQ;
  wire [0:0]m40_b_node_M_SC_SEND;
  wire [0:0]m40_r_node_M_SC_INFO;
  wire [54:0]m40_r_node_M_SC_PAYLD;
  wire [0:0]m40_r_node_M_SC_RECV;
  wire [0:0]m40_r_node_M_SC_REQ;
  wire [0:0]m40_r_node_M_SC_SEND;
  wire [0:0]m40_w_node_M_SC_INFO;
  wire [68:0]m40_w_node_M_SC_PAYLD;
  wire [0:0]m40_w_node_M_SC_RECV;
  wire [0:0]m40_w_node_M_SC_REQ;
  wire [0:0]m40_w_node_M_SC_SEND;
  wire m_axi_aclk_1;
  wire m_axi_aresetn_1;
  wire s_axi_aclk_1;
  wire s_axi_aresetn_1;

  assign M_SC_AR_info[0] = m40_ar_node_M_SC_INFO;
  assign M_SC_AR_payld[181:0] = m40_ar_node_M_SC_PAYLD;
  assign M_SC_AR_req[0] = m40_ar_node_M_SC_REQ;
  assign M_SC_AR_send[0] = m40_ar_node_M_SC_SEND;
  assign M_SC_AW_info[0] = m40_aw_node_M_SC_INFO;
  assign M_SC_AW_payld[181:0] = m40_aw_node_M_SC_PAYLD;
  assign M_SC_AW_req[0] = m40_aw_node_M_SC_REQ;
  assign M_SC_AW_send[0] = m40_aw_node_M_SC_SEND;
  assign M_SC_B_info[0] = m40_b_node_M_SC_INFO;
  assign M_SC_B_payld[8:0] = m40_b_node_M_SC_PAYLD;
  assign M_SC_B_req[0] = m40_b_node_M_SC_REQ;
  assign M_SC_B_send[0] = m40_b_node_M_SC_SEND;
  assign M_SC_R_info[0] = m40_r_node_M_SC_INFO;
  assign M_SC_R_payld[54:0] = m40_r_node_M_SC_PAYLD;
  assign M_SC_R_req[0] = m40_r_node_M_SC_REQ;
  assign M_SC_R_send[0] = m40_r_node_M_SC_SEND;
  assign M_SC_W_info[0] = m40_w_node_M_SC_INFO;
  assign M_SC_W_payld[68:0] = m40_w_node_M_SC_PAYLD;
  assign M_SC_W_req[0] = m40_w_node_M_SC_REQ;
  assign M_SC_W_send[0] = m40_w_node_M_SC_SEND;
  assign S_SC_AR_1_INFO = S_SC_AR_info[0];
  assign S_SC_AR_1_PAYLD = S_SC_AR_payld[181:0];
  assign S_SC_AR_1_REQ = S_SC_AR_req[0];
  assign S_SC_AR_1_SEND = S_SC_AR_send[0];
  assign S_SC_AR_recv[0] = S_SC_AR_1_RECV;
  assign S_SC_AW_1_INFO = S_SC_AW_info[0];
  assign S_SC_AW_1_PAYLD = S_SC_AW_payld[181:0];
  assign S_SC_AW_1_REQ = S_SC_AW_req[0];
  assign S_SC_AW_1_SEND = S_SC_AW_send[0];
  assign S_SC_AW_recv[0] = S_SC_AW_1_RECV;
  assign S_SC_B_1_INFO = S_SC_B_info[0];
  assign S_SC_B_1_PAYLD = S_SC_B_payld[8:0];
  assign S_SC_B_1_REQ = S_SC_B_req[0];
  assign S_SC_B_1_SEND = S_SC_B_send[0];
  assign S_SC_B_recv[0] = S_SC_B_1_RECV;
  assign S_SC_R_1_INFO = S_SC_R_info[0];
  assign S_SC_R_1_PAYLD = S_SC_R_payld[54:0];
  assign S_SC_R_1_REQ = S_SC_R_req[0];
  assign S_SC_R_1_SEND = S_SC_R_send[0];
  assign S_SC_R_recv[0] = S_SC_R_1_RECV;
  assign S_SC_W_1_INFO = S_SC_W_info[0];
  assign S_SC_W_1_PAYLD = S_SC_W_payld[68:0];
  assign S_SC_W_1_REQ = S_SC_W_req[0];
  assign S_SC_W_1_SEND = S_SC_W_send[0];
  assign S_SC_W_recv[0] = S_SC_W_1_RECV;
  assign m40_ar_node_M_SC_RECV = M_SC_AR_recv[0];
  assign m40_aw_node_M_SC_RECV = M_SC_AW_recv[0];
  assign m40_b_node_M_SC_RECV = M_SC_B_recv[0];
  assign m40_r_node_M_SC_RECV = M_SC_R_recv[0];
  assign m40_w_node_M_SC_RECV = M_SC_W_recv[0];
  assign m_axi_aclk_1 = m_axi_aclk;
  assign m_axi_aresetn_1 = m_axi_aresetn;
  assign s_axi_aclk_1 = s_axi_aclk;
  assign s_axi_aresetn_1 = s_axi_aresetn;
  bd_afc3_m40arn_0 m40_ar_node
       (.m_sc_aclk(m_axi_aclk_1),
        .m_sc_aresetn(m_axi_aresetn_1),
        .m_sc_info(m40_ar_node_M_SC_INFO),
        .m_sc_payld(m40_ar_node_M_SC_PAYLD),
        .m_sc_recv(m40_ar_node_M_SC_RECV),
        .m_sc_req(m40_ar_node_M_SC_REQ),
        .m_sc_send(m40_ar_node_M_SC_SEND),
        .s_sc_aclk(s_axi_aclk_1),
        .s_sc_aresetn(s_axi_aresetn_1),
        .s_sc_info(S_SC_AR_1_INFO),
        .s_sc_payld(S_SC_AR_1_PAYLD),
        .s_sc_recv(S_SC_AR_1_RECV),
        .s_sc_req(S_SC_AR_1_REQ),
        .s_sc_send(S_SC_AR_1_SEND));
  bd_afc3_m40awn_0 m40_aw_node
       (.m_sc_aclk(m_axi_aclk_1),
        .m_sc_aresetn(m_axi_aresetn_1),
        .m_sc_info(m40_aw_node_M_SC_INFO),
        .m_sc_payld(m40_aw_node_M_SC_PAYLD),
        .m_sc_recv(m40_aw_node_M_SC_RECV),
        .m_sc_req(m40_aw_node_M_SC_REQ),
        .m_sc_send(m40_aw_node_M_SC_SEND),
        .s_sc_aclk(s_axi_aclk_1),
        .s_sc_aresetn(s_axi_aresetn_1),
        .s_sc_info(S_SC_AW_1_INFO),
        .s_sc_payld(S_SC_AW_1_PAYLD),
        .s_sc_recv(S_SC_AW_1_RECV),
        .s_sc_req(S_SC_AW_1_REQ),
        .s_sc_send(S_SC_AW_1_SEND));
  bd_afc3_m40bn_0 m40_b_node
       (.m_sc_aclk(s_axi_aclk_1),
        .m_sc_aresetn(s_axi_aresetn_1),
        .m_sc_info(m40_b_node_M_SC_INFO),
        .m_sc_payld(m40_b_node_M_SC_PAYLD),
        .m_sc_recv(m40_b_node_M_SC_RECV),
        .m_sc_req(m40_b_node_M_SC_REQ),
        .m_sc_send(m40_b_node_M_SC_SEND),
        .s_sc_aclk(m_axi_aclk_1),
        .s_sc_aresetn(m_axi_aresetn_1),
        .s_sc_info(S_SC_B_1_INFO),
        .s_sc_payld(S_SC_B_1_PAYLD),
        .s_sc_recv(S_SC_B_1_RECV),
        .s_sc_req(S_SC_B_1_REQ),
        .s_sc_send(S_SC_B_1_SEND));
  bd_afc3_m40rn_0 m40_r_node
       (.m_sc_aclk(s_axi_aclk_1),
        .m_sc_aresetn(s_axi_aresetn_1),
        .m_sc_info(m40_r_node_M_SC_INFO),
        .m_sc_payld(m40_r_node_M_SC_PAYLD),
        .m_sc_recv(m40_r_node_M_SC_RECV),
        .m_sc_req(m40_r_node_M_SC_REQ),
        .m_sc_send(m40_r_node_M_SC_SEND),
        .s_sc_aclk(m_axi_aclk_1),
        .s_sc_aresetn(m_axi_aresetn_1),
        .s_sc_info(S_SC_R_1_INFO),
        .s_sc_payld(S_SC_R_1_PAYLD),
        .s_sc_recv(S_SC_R_1_RECV),
        .s_sc_req(S_SC_R_1_REQ),
        .s_sc_send(S_SC_R_1_SEND));
  bd_afc3_m40wn_0 m40_w_node
       (.m_sc_aclk(m_axi_aclk_1),
        .m_sc_aresetn(m_axi_aresetn_1),
        .m_sc_info(m40_w_node_M_SC_INFO),
        .m_sc_payld(m40_w_node_M_SC_PAYLD),
        .m_sc_recv(m40_w_node_M_SC_RECV),
        .m_sc_req(m40_w_node_M_SC_REQ),
        .m_sc_send(m40_w_node_M_SC_SEND),
        .s_sc_aclk(s_axi_aclk_1),
        .s_sc_aresetn(s_axi_aresetn_1),
        .s_sc_info(S_SC_W_1_INFO),
        .s_sc_payld(S_SC_W_1_PAYLD),
        .s_sc_recv(S_SC_W_1_RECV),
        .s_sc_req(S_SC_W_1_REQ),
        .s_sc_send(S_SC_W_1_SEND));
endmodule

module m41_exit_pipeline_imp_1XJR7G4
   (aclk,
    aresetn,
    m_axi_araddr,
    m_axi_arprot,
    m_axi_arready,
    m_axi_arvalid,
    m_axi_awaddr,
    m_axi_awprot,
    m_axi_awready,
    m_axi_awvalid,
    m_axi_bready,
    m_axi_bresp,
    m_axi_bvalid,
    m_axi_rdata,
    m_axi_rready,
    m_axi_rresp,
    m_axi_rvalid,
    m_axi_wdata,
    m_axi_wready,
    m_axi_wstrb,
    m_axi_wvalid,
    s_axi_araddr,
    s_axi_arcache,
    s_axi_arid,
    s_axi_arlen,
    s_axi_arlock,
    s_axi_arprot,
    s_axi_arqos,
    s_axi_arready,
    s_axi_aruser,
    s_axi_arvalid,
    s_axi_awaddr,
    s_axi_awcache,
    s_axi_awid,
    s_axi_awlen,
    s_axi_awlock,
    s_axi_awprot,
    s_axi_awqos,
    s_axi_awready,
    s_axi_awuser,
    s_axi_awvalid,
    s_axi_bid,
    s_axi_bready,
    s_axi_bresp,
    s_axi_buser,
    s_axi_bvalid,
    s_axi_rdata,
    s_axi_rid,
    s_axi_rlast,
    s_axi_rready,
    s_axi_rresp,
    s_axi_ruser,
    s_axi_rvalid,
    s_axi_wdata,
    s_axi_wlast,
    s_axi_wready,
    s_axi_wstrb,
    s_axi_wuser,
    s_axi_wvalid);
  input aclk;
  input aresetn;
  output [9:0]m_axi_araddr;
  output [2:0]m_axi_arprot;
  input m_axi_arready;
  output m_axi_arvalid;
  output [9:0]m_axi_awaddr;
  output [2:0]m_axi_awprot;
  input m_axi_awready;
  output m_axi_awvalid;
  output m_axi_bready;
  input [1:0]m_axi_bresp;
  input m_axi_bvalid;
  input [31:0]m_axi_rdata;
  output m_axi_rready;
  input [1:0]m_axi_rresp;
  input m_axi_rvalid;
  output [31:0]m_axi_wdata;
  input m_axi_wready;
  output [3:0]m_axi_wstrb;
  output m_axi_wvalid;
  input [9:0]s_axi_araddr;
  input [3:0]s_axi_arcache;
  input [2:0]s_axi_arid;
  input [7:0]s_axi_arlen;
  input [0:0]s_axi_arlock;
  input [2:0]s_axi_arprot;
  input [3:0]s_axi_arqos;
  output s_axi_arready;
  input [1023:0]s_axi_aruser;
  input s_axi_arvalid;
  input [9:0]s_axi_awaddr;
  input [3:0]s_axi_awcache;
  input [2:0]s_axi_awid;
  input [7:0]s_axi_awlen;
  input [0:0]s_axi_awlock;
  input [2:0]s_axi_awprot;
  input [3:0]s_axi_awqos;
  output s_axi_awready;
  input [1023:0]s_axi_awuser;
  input s_axi_awvalid;
  output [2:0]s_axi_bid;
  input s_axi_bready;
  output [1:0]s_axi_bresp;
  output [1023:0]s_axi_buser;
  output s_axi_bvalid;
  output [31:0]s_axi_rdata;
  output [2:0]s_axi_rid;
  output s_axi_rlast;
  input s_axi_rready;
  output [1:0]s_axi_rresp;
  output [1023:0]s_axi_ruser;
  output s_axi_rvalid;
  input [31:0]s_axi_wdata;
  input s_axi_wlast;
  output s_axi_wready;
  input [3:0]s_axi_wstrb;
  input [1023:0]s_axi_wuser;
  input s_axi_wvalid;

  wire aclk_1;
  wire aresetn_1;
  wire [9:0]m41_exit_M_AXI_ARADDR;
  wire [2:0]m41_exit_M_AXI_ARPROT;
  wire m41_exit_M_AXI_ARREADY;
  wire m41_exit_M_AXI_ARVALID;
  wire [9:0]m41_exit_M_AXI_AWADDR;
  wire [2:0]m41_exit_M_AXI_AWPROT;
  wire m41_exit_M_AXI_AWREADY;
  wire m41_exit_M_AXI_AWVALID;
  wire m41_exit_M_AXI_BREADY;
  wire [1:0]m41_exit_M_AXI_BRESP;
  wire m41_exit_M_AXI_BVALID;
  wire [31:0]m41_exit_M_AXI_RDATA;
  wire m41_exit_M_AXI_RREADY;
  wire [1:0]m41_exit_M_AXI_RRESP;
  wire m41_exit_M_AXI_RVALID;
  wire [31:0]m41_exit_M_AXI_WDATA;
  wire m41_exit_M_AXI_WREADY;
  wire [3:0]m41_exit_M_AXI_WSTRB;
  wire m41_exit_M_AXI_WVALID;
  wire [9:0]s_axi_1_ARADDR;
  wire [3:0]s_axi_1_ARCACHE;
  wire [2:0]s_axi_1_ARID;
  wire [7:0]s_axi_1_ARLEN;
  wire [0:0]s_axi_1_ARLOCK;
  wire [2:0]s_axi_1_ARPROT;
  wire [3:0]s_axi_1_ARQOS;
  wire s_axi_1_ARREADY;
  wire [1023:0]s_axi_1_ARUSER;
  wire s_axi_1_ARVALID;
  wire [9:0]s_axi_1_AWADDR;
  wire [3:0]s_axi_1_AWCACHE;
  wire [2:0]s_axi_1_AWID;
  wire [7:0]s_axi_1_AWLEN;
  wire [0:0]s_axi_1_AWLOCK;
  wire [2:0]s_axi_1_AWPROT;
  wire [3:0]s_axi_1_AWQOS;
  wire s_axi_1_AWREADY;
  wire [1023:0]s_axi_1_AWUSER;
  wire s_axi_1_AWVALID;
  wire [2:0]s_axi_1_BID;
  wire s_axi_1_BREADY;
  wire [1:0]s_axi_1_BRESP;
  wire [1023:0]s_axi_1_BUSER;
  wire s_axi_1_BVALID;
  wire [31:0]s_axi_1_RDATA;
  wire [2:0]s_axi_1_RID;
  wire s_axi_1_RLAST;
  wire s_axi_1_RREADY;
  wire [1:0]s_axi_1_RRESP;
  wire [1023:0]s_axi_1_RUSER;
  wire s_axi_1_RVALID;
  wire [31:0]s_axi_1_WDATA;
  wire s_axi_1_WLAST;
  wire s_axi_1_WREADY;
  wire [3:0]s_axi_1_WSTRB;
  wire [1023:0]s_axi_1_WUSER;
  wire s_axi_1_WVALID;

  assign aclk_1 = aclk;
  assign aresetn_1 = aresetn;
  assign m41_exit_M_AXI_ARREADY = m_axi_arready;
  assign m41_exit_M_AXI_AWREADY = m_axi_awready;
  assign m41_exit_M_AXI_BRESP = m_axi_bresp[1:0];
  assign m41_exit_M_AXI_BVALID = m_axi_bvalid;
  assign m41_exit_M_AXI_RDATA = m_axi_rdata[31:0];
  assign m41_exit_M_AXI_RRESP = m_axi_rresp[1:0];
  assign m41_exit_M_AXI_RVALID = m_axi_rvalid;
  assign m41_exit_M_AXI_WREADY = m_axi_wready;
  assign m_axi_araddr[9:0] = m41_exit_M_AXI_ARADDR;
  assign m_axi_arprot[2:0] = m41_exit_M_AXI_ARPROT;
  assign m_axi_arvalid = m41_exit_M_AXI_ARVALID;
  assign m_axi_awaddr[9:0] = m41_exit_M_AXI_AWADDR;
  assign m_axi_awprot[2:0] = m41_exit_M_AXI_AWPROT;
  assign m_axi_awvalid = m41_exit_M_AXI_AWVALID;
  assign m_axi_bready = m41_exit_M_AXI_BREADY;
  assign m_axi_rready = m41_exit_M_AXI_RREADY;
  assign m_axi_wdata[31:0] = m41_exit_M_AXI_WDATA;
  assign m_axi_wstrb[3:0] = m41_exit_M_AXI_WSTRB;
  assign m_axi_wvalid = m41_exit_M_AXI_WVALID;
  assign s_axi_1_ARADDR = s_axi_araddr[9:0];
  assign s_axi_1_ARCACHE = s_axi_arcache[3:0];
  assign s_axi_1_ARID = s_axi_arid[2:0];
  assign s_axi_1_ARLEN = s_axi_arlen[7:0];
  assign s_axi_1_ARLOCK = s_axi_arlock[0];
  assign s_axi_1_ARPROT = s_axi_arprot[2:0];
  assign s_axi_1_ARQOS = s_axi_arqos[3:0];
  assign s_axi_1_ARUSER = s_axi_aruser[1023:0];
  assign s_axi_1_ARVALID = s_axi_arvalid;
  assign s_axi_1_AWADDR = s_axi_awaddr[9:0];
  assign s_axi_1_AWCACHE = s_axi_awcache[3:0];
  assign s_axi_1_AWID = s_axi_awid[2:0];
  assign s_axi_1_AWLEN = s_axi_awlen[7:0];
  assign s_axi_1_AWLOCK = s_axi_awlock[0];
  assign s_axi_1_AWPROT = s_axi_awprot[2:0];
  assign s_axi_1_AWQOS = s_axi_awqos[3:0];
  assign s_axi_1_AWUSER = s_axi_awuser[1023:0];
  assign s_axi_1_AWVALID = s_axi_awvalid;
  assign s_axi_1_BREADY = s_axi_bready;
  assign s_axi_1_RREADY = s_axi_rready;
  assign s_axi_1_WDATA = s_axi_wdata[31:0];
  assign s_axi_1_WLAST = s_axi_wlast;
  assign s_axi_1_WSTRB = s_axi_wstrb[3:0];
  assign s_axi_1_WUSER = s_axi_wuser[1023:0];
  assign s_axi_1_WVALID = s_axi_wvalid;
  assign s_axi_arready = s_axi_1_ARREADY;
  assign s_axi_awready = s_axi_1_AWREADY;
  assign s_axi_bid[2:0] = s_axi_1_BID;
  assign s_axi_bresp[1:0] = s_axi_1_BRESP;
  assign s_axi_buser[1023:0] = s_axi_1_BUSER;
  assign s_axi_bvalid = s_axi_1_BVALID;
  assign s_axi_rdata[31:0] = s_axi_1_RDATA;
  assign s_axi_rid[2:0] = s_axi_1_RID;
  assign s_axi_rlast = s_axi_1_RLAST;
  assign s_axi_rresp[1:0] = s_axi_1_RRESP;
  assign s_axi_ruser[1023:0] = s_axi_1_RUSER;
  assign s_axi_rvalid = s_axi_1_RVALID;
  assign s_axi_wready = s_axi_1_WREADY;
  bd_afc3_m41e_0 m41_exit
       (.aclk(aclk_1),
        .aresetn(aresetn_1),
        .m_axi_araddr(m41_exit_M_AXI_ARADDR),
        .m_axi_arprot(m41_exit_M_AXI_ARPROT),
        .m_axi_arready(m41_exit_M_AXI_ARREADY),
        .m_axi_arvalid(m41_exit_M_AXI_ARVALID),
        .m_axi_awaddr(m41_exit_M_AXI_AWADDR),
        .m_axi_awprot(m41_exit_M_AXI_AWPROT),
        .m_axi_awready(m41_exit_M_AXI_AWREADY),
        .m_axi_awvalid(m41_exit_M_AXI_AWVALID),
        .m_axi_bready(m41_exit_M_AXI_BREADY),
        .m_axi_bresp(m41_exit_M_AXI_BRESP),
        .m_axi_bvalid(m41_exit_M_AXI_BVALID),
        .m_axi_rdata(m41_exit_M_AXI_RDATA),
        .m_axi_rready(m41_exit_M_AXI_RREADY),
        .m_axi_rresp(m41_exit_M_AXI_RRESP),
        .m_axi_rvalid(m41_exit_M_AXI_RVALID),
        .m_axi_wdata(m41_exit_M_AXI_WDATA),
        .m_axi_wready(m41_exit_M_AXI_WREADY),
        .m_axi_wstrb(m41_exit_M_AXI_WSTRB),
        .m_axi_wvalid(m41_exit_M_AXI_WVALID),
        .s_axi_araddr(s_axi_1_ARADDR),
        .s_axi_arcache(s_axi_1_ARCACHE),
        .s_axi_arid(s_axi_1_ARID),
        .s_axi_arlen(s_axi_1_ARLEN),
        .s_axi_arlock(s_axi_1_ARLOCK),
        .s_axi_arprot(s_axi_1_ARPROT),
        .s_axi_arqos(s_axi_1_ARQOS),
        .s_axi_arready(s_axi_1_ARREADY),
        .s_axi_aruser(s_axi_1_ARUSER),
        .s_axi_arvalid(s_axi_1_ARVALID),
        .s_axi_awaddr(s_axi_1_AWADDR),
        .s_axi_awcache(s_axi_1_AWCACHE),
        .s_axi_awid(s_axi_1_AWID),
        .s_axi_awlen(s_axi_1_AWLEN),
        .s_axi_awlock(s_axi_1_AWLOCK),
        .s_axi_awprot(s_axi_1_AWPROT),
        .s_axi_awqos(s_axi_1_AWQOS),
        .s_axi_awready(s_axi_1_AWREADY),
        .s_axi_awuser(s_axi_1_AWUSER),
        .s_axi_awvalid(s_axi_1_AWVALID),
        .s_axi_bid(s_axi_1_BID),
        .s_axi_bready(s_axi_1_BREADY),
        .s_axi_bresp(s_axi_1_BRESP),
        .s_axi_buser(s_axi_1_BUSER),
        .s_axi_bvalid(s_axi_1_BVALID),
        .s_axi_rdata(s_axi_1_RDATA),
        .s_axi_rid(s_axi_1_RID),
        .s_axi_rlast(s_axi_1_RLAST),
        .s_axi_rready(s_axi_1_RREADY),
        .s_axi_rresp(s_axi_1_RRESP),
        .s_axi_ruser(s_axi_1_RUSER),
        .s_axi_rvalid(s_axi_1_RVALID),
        .s_axi_wdata(s_axi_1_WDATA),
        .s_axi_wlast(s_axi_1_WLAST),
        .s_axi_wready(s_axi_1_WREADY),
        .s_axi_wstrb(s_axi_1_WSTRB),
        .s_axi_wuser(s_axi_1_WUSER),
        .s_axi_wvalid(s_axi_1_WVALID));
endmodule

module m41_nodes_imp_1BC46CE
   (M_SC_AR_info,
    M_SC_AR_payld,
    M_SC_AR_recv,
    M_SC_AR_req,
    M_SC_AR_send,
    M_SC_AW_info,
    M_SC_AW_payld,
    M_SC_AW_recv,
    M_SC_AW_req,
    M_SC_AW_send,
    M_SC_B_info,
    M_SC_B_payld,
    M_SC_B_recv,
    M_SC_B_req,
    M_SC_B_send,
    M_SC_R_info,
    M_SC_R_payld,
    M_SC_R_recv,
    M_SC_R_req,
    M_SC_R_send,
    M_SC_W_info,
    M_SC_W_payld,
    M_SC_W_recv,
    M_SC_W_req,
    M_SC_W_send,
    S_SC_AR_info,
    S_SC_AR_payld,
    S_SC_AR_recv,
    S_SC_AR_req,
    S_SC_AR_send,
    S_SC_AW_info,
    S_SC_AW_payld,
    S_SC_AW_recv,
    S_SC_AW_req,
    S_SC_AW_send,
    S_SC_B_info,
    S_SC_B_payld,
    S_SC_B_recv,
    S_SC_B_req,
    S_SC_B_send,
    S_SC_R_info,
    S_SC_R_payld,
    S_SC_R_recv,
    S_SC_R_req,
    S_SC_R_send,
    S_SC_W_info,
    S_SC_W_payld,
    S_SC_W_recv,
    S_SC_W_req,
    S_SC_W_send,
    m_axi_aclk,
    m_axi_aresetn,
    s_axi_aclk,
    s_axi_aresetn);
  output [0:0]M_SC_AR_info;
  output [181:0]M_SC_AR_payld;
  input [0:0]M_SC_AR_recv;
  output [0:0]M_SC_AR_req;
  output [0:0]M_SC_AR_send;
  output [0:0]M_SC_AW_info;
  output [181:0]M_SC_AW_payld;
  input [0:0]M_SC_AW_recv;
  output [0:0]M_SC_AW_req;
  output [0:0]M_SC_AW_send;
  output [0:0]M_SC_B_info;
  output [8:0]M_SC_B_payld;
  input [0:0]M_SC_B_recv;
  output [0:0]M_SC_B_req;
  output [0:0]M_SC_B_send;
  output [0:0]M_SC_R_info;
  output [54:0]M_SC_R_payld;
  input [0:0]M_SC_R_recv;
  output [0:0]M_SC_R_req;
  output [0:0]M_SC_R_send;
  output [0:0]M_SC_W_info;
  output [68:0]M_SC_W_payld;
  input [0:0]M_SC_W_recv;
  output [0:0]M_SC_W_req;
  output [0:0]M_SC_W_send;
  input [0:0]S_SC_AR_info;
  input [181:0]S_SC_AR_payld;
  output [0:0]S_SC_AR_recv;
  input [0:0]S_SC_AR_req;
  input [0:0]S_SC_AR_send;
  input [0:0]S_SC_AW_info;
  input [181:0]S_SC_AW_payld;
  output [0:0]S_SC_AW_recv;
  input [0:0]S_SC_AW_req;
  input [0:0]S_SC_AW_send;
  input [0:0]S_SC_B_info;
  input [8:0]S_SC_B_payld;
  output [0:0]S_SC_B_recv;
  input [0:0]S_SC_B_req;
  input [0:0]S_SC_B_send;
  input [0:0]S_SC_R_info;
  input [54:0]S_SC_R_payld;
  output [0:0]S_SC_R_recv;
  input [0:0]S_SC_R_req;
  input [0:0]S_SC_R_send;
  input [0:0]S_SC_W_info;
  input [68:0]S_SC_W_payld;
  output [0:0]S_SC_W_recv;
  input [0:0]S_SC_W_req;
  input [0:0]S_SC_W_send;
  input m_axi_aclk;
  input m_axi_aresetn;
  input s_axi_aclk;
  input s_axi_aresetn;

  wire [0:0]S_SC_AR_1_INFO;
  wire [181:0]S_SC_AR_1_PAYLD;
  wire [0:0]S_SC_AR_1_RECV;
  wire [0:0]S_SC_AR_1_REQ;
  wire [0:0]S_SC_AR_1_SEND;
  wire [0:0]S_SC_AW_1_INFO;
  wire [181:0]S_SC_AW_1_PAYLD;
  wire [0:0]S_SC_AW_1_RECV;
  wire [0:0]S_SC_AW_1_REQ;
  wire [0:0]S_SC_AW_1_SEND;
  wire [0:0]S_SC_B_1_INFO;
  wire [8:0]S_SC_B_1_PAYLD;
  wire [0:0]S_SC_B_1_RECV;
  wire [0:0]S_SC_B_1_REQ;
  wire [0:0]S_SC_B_1_SEND;
  wire [0:0]S_SC_R_1_INFO;
  wire [54:0]S_SC_R_1_PAYLD;
  wire [0:0]S_SC_R_1_RECV;
  wire [0:0]S_SC_R_1_REQ;
  wire [0:0]S_SC_R_1_SEND;
  wire [0:0]S_SC_W_1_INFO;
  wire [68:0]S_SC_W_1_PAYLD;
  wire [0:0]S_SC_W_1_RECV;
  wire [0:0]S_SC_W_1_REQ;
  wire [0:0]S_SC_W_1_SEND;
  wire [0:0]m41_ar_node_M_SC_INFO;
  wire [181:0]m41_ar_node_M_SC_PAYLD;
  wire [0:0]m41_ar_node_M_SC_RECV;
  wire [0:0]m41_ar_node_M_SC_REQ;
  wire [0:0]m41_ar_node_M_SC_SEND;
  wire [0:0]m41_aw_node_M_SC_INFO;
  wire [181:0]m41_aw_node_M_SC_PAYLD;
  wire [0:0]m41_aw_node_M_SC_RECV;
  wire [0:0]m41_aw_node_M_SC_REQ;
  wire [0:0]m41_aw_node_M_SC_SEND;
  wire [0:0]m41_b_node_M_SC_INFO;
  wire [8:0]m41_b_node_M_SC_PAYLD;
  wire [0:0]m41_b_node_M_SC_RECV;
  wire [0:0]m41_b_node_M_SC_REQ;
  wire [0:0]m41_b_node_M_SC_SEND;
  wire [0:0]m41_r_node_M_SC_INFO;
  wire [54:0]m41_r_node_M_SC_PAYLD;
  wire [0:0]m41_r_node_M_SC_RECV;
  wire [0:0]m41_r_node_M_SC_REQ;
  wire [0:0]m41_r_node_M_SC_SEND;
  wire [0:0]m41_w_node_M_SC_INFO;
  wire [68:0]m41_w_node_M_SC_PAYLD;
  wire [0:0]m41_w_node_M_SC_RECV;
  wire [0:0]m41_w_node_M_SC_REQ;
  wire [0:0]m41_w_node_M_SC_SEND;
  wire m_axi_aclk_1;
  wire m_axi_aresetn_1;
  wire s_axi_aclk_1;
  wire s_axi_aresetn_1;

  assign M_SC_AR_info[0] = m41_ar_node_M_SC_INFO;
  assign M_SC_AR_payld[181:0] = m41_ar_node_M_SC_PAYLD;
  assign M_SC_AR_req[0] = m41_ar_node_M_SC_REQ;
  assign M_SC_AR_send[0] = m41_ar_node_M_SC_SEND;
  assign M_SC_AW_info[0] = m41_aw_node_M_SC_INFO;
  assign M_SC_AW_payld[181:0] = m41_aw_node_M_SC_PAYLD;
  assign M_SC_AW_req[0] = m41_aw_node_M_SC_REQ;
  assign M_SC_AW_send[0] = m41_aw_node_M_SC_SEND;
  assign M_SC_B_info[0] = m41_b_node_M_SC_INFO;
  assign M_SC_B_payld[8:0] = m41_b_node_M_SC_PAYLD;
  assign M_SC_B_req[0] = m41_b_node_M_SC_REQ;
  assign M_SC_B_send[0] = m41_b_node_M_SC_SEND;
  assign M_SC_R_info[0] = m41_r_node_M_SC_INFO;
  assign M_SC_R_payld[54:0] = m41_r_node_M_SC_PAYLD;
  assign M_SC_R_req[0] = m41_r_node_M_SC_REQ;
  assign M_SC_R_send[0] = m41_r_node_M_SC_SEND;
  assign M_SC_W_info[0] = m41_w_node_M_SC_INFO;
  assign M_SC_W_payld[68:0] = m41_w_node_M_SC_PAYLD;
  assign M_SC_W_req[0] = m41_w_node_M_SC_REQ;
  assign M_SC_W_send[0] = m41_w_node_M_SC_SEND;
  assign S_SC_AR_1_INFO = S_SC_AR_info[0];
  assign S_SC_AR_1_PAYLD = S_SC_AR_payld[181:0];
  assign S_SC_AR_1_REQ = S_SC_AR_req[0];
  assign S_SC_AR_1_SEND = S_SC_AR_send[0];
  assign S_SC_AR_recv[0] = S_SC_AR_1_RECV;
  assign S_SC_AW_1_INFO = S_SC_AW_info[0];
  assign S_SC_AW_1_PAYLD = S_SC_AW_payld[181:0];
  assign S_SC_AW_1_REQ = S_SC_AW_req[0];
  assign S_SC_AW_1_SEND = S_SC_AW_send[0];
  assign S_SC_AW_recv[0] = S_SC_AW_1_RECV;
  assign S_SC_B_1_INFO = S_SC_B_info[0];
  assign S_SC_B_1_PAYLD = S_SC_B_payld[8:0];
  assign S_SC_B_1_REQ = S_SC_B_req[0];
  assign S_SC_B_1_SEND = S_SC_B_send[0];
  assign S_SC_B_recv[0] = S_SC_B_1_RECV;
  assign S_SC_R_1_INFO = S_SC_R_info[0];
  assign S_SC_R_1_PAYLD = S_SC_R_payld[54:0];
  assign S_SC_R_1_REQ = S_SC_R_req[0];
  assign S_SC_R_1_SEND = S_SC_R_send[0];
  assign S_SC_R_recv[0] = S_SC_R_1_RECV;
  assign S_SC_W_1_INFO = S_SC_W_info[0];
  assign S_SC_W_1_PAYLD = S_SC_W_payld[68:0];
  assign S_SC_W_1_REQ = S_SC_W_req[0];
  assign S_SC_W_1_SEND = S_SC_W_send[0];
  assign S_SC_W_recv[0] = S_SC_W_1_RECV;
  assign m41_ar_node_M_SC_RECV = M_SC_AR_recv[0];
  assign m41_aw_node_M_SC_RECV = M_SC_AW_recv[0];
  assign m41_b_node_M_SC_RECV = M_SC_B_recv[0];
  assign m41_r_node_M_SC_RECV = M_SC_R_recv[0];
  assign m41_w_node_M_SC_RECV = M_SC_W_recv[0];
  assign m_axi_aclk_1 = m_axi_aclk;
  assign m_axi_aresetn_1 = m_axi_aresetn;
  assign s_axi_aclk_1 = s_axi_aclk;
  assign s_axi_aresetn_1 = s_axi_aresetn;
  bd_afc3_m41arn_0 m41_ar_node
       (.m_sc_aclk(m_axi_aclk_1),
        .m_sc_aresetn(m_axi_aresetn_1),
        .m_sc_info(m41_ar_node_M_SC_INFO),
        .m_sc_payld(m41_ar_node_M_SC_PAYLD),
        .m_sc_recv(m41_ar_node_M_SC_RECV),
        .m_sc_req(m41_ar_node_M_SC_REQ),
        .m_sc_send(m41_ar_node_M_SC_SEND),
        .s_sc_aclk(s_axi_aclk_1),
        .s_sc_aresetn(s_axi_aresetn_1),
        .s_sc_info(S_SC_AR_1_INFO),
        .s_sc_payld(S_SC_AR_1_PAYLD),
        .s_sc_recv(S_SC_AR_1_RECV),
        .s_sc_req(S_SC_AR_1_REQ),
        .s_sc_send(S_SC_AR_1_SEND));
  bd_afc3_m41awn_0 m41_aw_node
       (.m_sc_aclk(m_axi_aclk_1),
        .m_sc_aresetn(m_axi_aresetn_1),
        .m_sc_info(m41_aw_node_M_SC_INFO),
        .m_sc_payld(m41_aw_node_M_SC_PAYLD),
        .m_sc_recv(m41_aw_node_M_SC_RECV),
        .m_sc_req(m41_aw_node_M_SC_REQ),
        .m_sc_send(m41_aw_node_M_SC_SEND),
        .s_sc_aclk(s_axi_aclk_1),
        .s_sc_aresetn(s_axi_aresetn_1),
        .s_sc_info(S_SC_AW_1_INFO),
        .s_sc_payld(S_SC_AW_1_PAYLD),
        .s_sc_recv(S_SC_AW_1_RECV),
        .s_sc_req(S_SC_AW_1_REQ),
        .s_sc_send(S_SC_AW_1_SEND));
  bd_afc3_m41bn_0 m41_b_node
       (.m_sc_aclk(s_axi_aclk_1),
        .m_sc_aresetn(s_axi_aresetn_1),
        .m_sc_info(m41_b_node_M_SC_INFO),
        .m_sc_payld(m41_b_node_M_SC_PAYLD),
        .m_sc_recv(m41_b_node_M_SC_RECV),
        .m_sc_req(m41_b_node_M_SC_REQ),
        .m_sc_send(m41_b_node_M_SC_SEND),
        .s_sc_aclk(m_axi_aclk_1),
        .s_sc_aresetn(m_axi_aresetn_1),
        .s_sc_info(S_SC_B_1_INFO),
        .s_sc_payld(S_SC_B_1_PAYLD),
        .s_sc_recv(S_SC_B_1_RECV),
        .s_sc_req(S_SC_B_1_REQ),
        .s_sc_send(S_SC_B_1_SEND));
  bd_afc3_m41rn_0 m41_r_node
       (.m_sc_aclk(s_axi_aclk_1),
        .m_sc_aresetn(s_axi_aresetn_1),
        .m_sc_info(m41_r_node_M_SC_INFO),
        .m_sc_payld(m41_r_node_M_SC_PAYLD),
        .m_sc_recv(m41_r_node_M_SC_RECV),
        .m_sc_req(m41_r_node_M_SC_REQ),
        .m_sc_send(m41_r_node_M_SC_SEND),
        .s_sc_aclk(m_axi_aclk_1),
        .s_sc_aresetn(m_axi_aresetn_1),
        .s_sc_info(S_SC_R_1_INFO),
        .s_sc_payld(S_SC_R_1_PAYLD),
        .s_sc_recv(S_SC_R_1_RECV),
        .s_sc_req(S_SC_R_1_REQ),
        .s_sc_send(S_SC_R_1_SEND));
  bd_afc3_m41wn_0 m41_w_node
       (.m_sc_aclk(m_axi_aclk_1),
        .m_sc_aresetn(m_axi_aresetn_1),
        .m_sc_info(m41_w_node_M_SC_INFO),
        .m_sc_payld(m41_w_node_M_SC_PAYLD),
        .m_sc_recv(m41_w_node_M_SC_RECV),
        .m_sc_req(m41_w_node_M_SC_REQ),
        .m_sc_send(m41_w_node_M_SC_SEND),
        .s_sc_aclk(s_axi_aclk_1),
        .s_sc_aresetn(s_axi_aresetn_1),
        .s_sc_info(S_SC_W_1_INFO),
        .s_sc_payld(S_SC_W_1_PAYLD),
        .s_sc_recv(S_SC_W_1_RECV),
        .s_sc_req(S_SC_W_1_REQ),
        .s_sc_send(S_SC_W_1_SEND));
endmodule

module m42_exit_pipeline_imp_1IBX7P0
   (aclk,
    aresetn,
    m_axi_araddr,
    m_axi_arprot,
    m_axi_arready,
    m_axi_arvalid,
    m_axi_awaddr,
    m_axi_awprot,
    m_axi_awready,
    m_axi_awvalid,
    m_axi_bready,
    m_axi_bresp,
    m_axi_bvalid,
    m_axi_rdata,
    m_axi_rready,
    m_axi_rresp,
    m_axi_rvalid,
    m_axi_wdata,
    m_axi_wready,
    m_axi_wstrb,
    m_axi_wvalid,
    s_axi_araddr,
    s_axi_arcache,
    s_axi_arid,
    s_axi_arlen,
    s_axi_arlock,
    s_axi_arprot,
    s_axi_arqos,
    s_axi_arready,
    s_axi_aruser,
    s_axi_arvalid,
    s_axi_awaddr,
    s_axi_awcache,
    s_axi_awid,
    s_axi_awlen,
    s_axi_awlock,
    s_axi_awprot,
    s_axi_awqos,
    s_axi_awready,
    s_axi_awuser,
    s_axi_awvalid,
    s_axi_bid,
    s_axi_bready,
    s_axi_bresp,
    s_axi_buser,
    s_axi_bvalid,
    s_axi_rdata,
    s_axi_rid,
    s_axi_rlast,
    s_axi_rready,
    s_axi_rresp,
    s_axi_ruser,
    s_axi_rvalid,
    s_axi_wdata,
    s_axi_wlast,
    s_axi_wready,
    s_axi_wstrb,
    s_axi_wuser,
    s_axi_wvalid);
  input aclk;
  input aresetn;
  output [9:0]m_axi_araddr;
  output [2:0]m_axi_arprot;
  input m_axi_arready;
  output m_axi_arvalid;
  output [9:0]m_axi_awaddr;
  output [2:0]m_axi_awprot;
  input m_axi_awready;
  output m_axi_awvalid;
  output m_axi_bready;
  input [1:0]m_axi_bresp;
  input m_axi_bvalid;
  input [31:0]m_axi_rdata;
  output m_axi_rready;
  input [1:0]m_axi_rresp;
  input m_axi_rvalid;
  output [31:0]m_axi_wdata;
  input m_axi_wready;
  output [3:0]m_axi_wstrb;
  output m_axi_wvalid;
  input [9:0]s_axi_araddr;
  input [3:0]s_axi_arcache;
  input [2:0]s_axi_arid;
  input [7:0]s_axi_arlen;
  input [0:0]s_axi_arlock;
  input [2:0]s_axi_arprot;
  input [3:0]s_axi_arqos;
  output s_axi_arready;
  input [1023:0]s_axi_aruser;
  input s_axi_arvalid;
  input [9:0]s_axi_awaddr;
  input [3:0]s_axi_awcache;
  input [2:0]s_axi_awid;
  input [7:0]s_axi_awlen;
  input [0:0]s_axi_awlock;
  input [2:0]s_axi_awprot;
  input [3:0]s_axi_awqos;
  output s_axi_awready;
  input [1023:0]s_axi_awuser;
  input s_axi_awvalid;
  output [2:0]s_axi_bid;
  input s_axi_bready;
  output [1:0]s_axi_bresp;
  output [1023:0]s_axi_buser;
  output s_axi_bvalid;
  output [31:0]s_axi_rdata;
  output [2:0]s_axi_rid;
  output s_axi_rlast;
  input s_axi_rready;
  output [1:0]s_axi_rresp;
  output [1023:0]s_axi_ruser;
  output s_axi_rvalid;
  input [31:0]s_axi_wdata;
  input s_axi_wlast;
  output s_axi_wready;
  input [3:0]s_axi_wstrb;
  input [1023:0]s_axi_wuser;
  input s_axi_wvalid;

  wire aclk_1;
  wire aresetn_1;
  wire [9:0]m42_exit_M_AXI_ARADDR;
  wire [2:0]m42_exit_M_AXI_ARPROT;
  wire m42_exit_M_AXI_ARREADY;
  wire m42_exit_M_AXI_ARVALID;
  wire [9:0]m42_exit_M_AXI_AWADDR;
  wire [2:0]m42_exit_M_AXI_AWPROT;
  wire m42_exit_M_AXI_AWREADY;
  wire m42_exit_M_AXI_AWVALID;
  wire m42_exit_M_AXI_BREADY;
  wire [1:0]m42_exit_M_AXI_BRESP;
  wire m42_exit_M_AXI_BVALID;
  wire [31:0]m42_exit_M_AXI_RDATA;
  wire m42_exit_M_AXI_RREADY;
  wire [1:0]m42_exit_M_AXI_RRESP;
  wire m42_exit_M_AXI_RVALID;
  wire [31:0]m42_exit_M_AXI_WDATA;
  wire m42_exit_M_AXI_WREADY;
  wire [3:0]m42_exit_M_AXI_WSTRB;
  wire m42_exit_M_AXI_WVALID;
  wire [9:0]s_axi_1_ARADDR;
  wire [3:0]s_axi_1_ARCACHE;
  wire [2:0]s_axi_1_ARID;
  wire [7:0]s_axi_1_ARLEN;
  wire [0:0]s_axi_1_ARLOCK;
  wire [2:0]s_axi_1_ARPROT;
  wire [3:0]s_axi_1_ARQOS;
  wire s_axi_1_ARREADY;
  wire [1023:0]s_axi_1_ARUSER;
  wire s_axi_1_ARVALID;
  wire [9:0]s_axi_1_AWADDR;
  wire [3:0]s_axi_1_AWCACHE;
  wire [2:0]s_axi_1_AWID;
  wire [7:0]s_axi_1_AWLEN;
  wire [0:0]s_axi_1_AWLOCK;
  wire [2:0]s_axi_1_AWPROT;
  wire [3:0]s_axi_1_AWQOS;
  wire s_axi_1_AWREADY;
  wire [1023:0]s_axi_1_AWUSER;
  wire s_axi_1_AWVALID;
  wire [2:0]s_axi_1_BID;
  wire s_axi_1_BREADY;
  wire [1:0]s_axi_1_BRESP;
  wire [1023:0]s_axi_1_BUSER;
  wire s_axi_1_BVALID;
  wire [31:0]s_axi_1_RDATA;
  wire [2:0]s_axi_1_RID;
  wire s_axi_1_RLAST;
  wire s_axi_1_RREADY;
  wire [1:0]s_axi_1_RRESP;
  wire [1023:0]s_axi_1_RUSER;
  wire s_axi_1_RVALID;
  wire [31:0]s_axi_1_WDATA;
  wire s_axi_1_WLAST;
  wire s_axi_1_WREADY;
  wire [3:0]s_axi_1_WSTRB;
  wire [1023:0]s_axi_1_WUSER;
  wire s_axi_1_WVALID;

  assign aclk_1 = aclk;
  assign aresetn_1 = aresetn;
  assign m42_exit_M_AXI_ARREADY = m_axi_arready;
  assign m42_exit_M_AXI_AWREADY = m_axi_awready;
  assign m42_exit_M_AXI_BRESP = m_axi_bresp[1:0];
  assign m42_exit_M_AXI_BVALID = m_axi_bvalid;
  assign m42_exit_M_AXI_RDATA = m_axi_rdata[31:0];
  assign m42_exit_M_AXI_RRESP = m_axi_rresp[1:0];
  assign m42_exit_M_AXI_RVALID = m_axi_rvalid;
  assign m42_exit_M_AXI_WREADY = m_axi_wready;
  assign m_axi_araddr[9:0] = m42_exit_M_AXI_ARADDR;
  assign m_axi_arprot[2:0] = m42_exit_M_AXI_ARPROT;
  assign m_axi_arvalid = m42_exit_M_AXI_ARVALID;
  assign m_axi_awaddr[9:0] = m42_exit_M_AXI_AWADDR;
  assign m_axi_awprot[2:0] = m42_exit_M_AXI_AWPROT;
  assign m_axi_awvalid = m42_exit_M_AXI_AWVALID;
  assign m_axi_bready = m42_exit_M_AXI_BREADY;
  assign m_axi_rready = m42_exit_M_AXI_RREADY;
  assign m_axi_wdata[31:0] = m42_exit_M_AXI_WDATA;
  assign m_axi_wstrb[3:0] = m42_exit_M_AXI_WSTRB;
  assign m_axi_wvalid = m42_exit_M_AXI_WVALID;
  assign s_axi_1_ARADDR = s_axi_araddr[9:0];
  assign s_axi_1_ARCACHE = s_axi_arcache[3:0];
  assign s_axi_1_ARID = s_axi_arid[2:0];
  assign s_axi_1_ARLEN = s_axi_arlen[7:0];
  assign s_axi_1_ARLOCK = s_axi_arlock[0];
  assign s_axi_1_ARPROT = s_axi_arprot[2:0];
  assign s_axi_1_ARQOS = s_axi_arqos[3:0];
  assign s_axi_1_ARUSER = s_axi_aruser[1023:0];
  assign s_axi_1_ARVALID = s_axi_arvalid;
  assign s_axi_1_AWADDR = s_axi_awaddr[9:0];
  assign s_axi_1_AWCACHE = s_axi_awcache[3:0];
  assign s_axi_1_AWID = s_axi_awid[2:0];
  assign s_axi_1_AWLEN = s_axi_awlen[7:0];
  assign s_axi_1_AWLOCK = s_axi_awlock[0];
  assign s_axi_1_AWPROT = s_axi_awprot[2:0];
  assign s_axi_1_AWQOS = s_axi_awqos[3:0];
  assign s_axi_1_AWUSER = s_axi_awuser[1023:0];
  assign s_axi_1_AWVALID = s_axi_awvalid;
  assign s_axi_1_BREADY = s_axi_bready;
  assign s_axi_1_RREADY = s_axi_rready;
  assign s_axi_1_WDATA = s_axi_wdata[31:0];
  assign s_axi_1_WLAST = s_axi_wlast;
  assign s_axi_1_WSTRB = s_axi_wstrb[3:0];
  assign s_axi_1_WUSER = s_axi_wuser[1023:0];
  assign s_axi_1_WVALID = s_axi_wvalid;
  assign s_axi_arready = s_axi_1_ARREADY;
  assign s_axi_awready = s_axi_1_AWREADY;
  assign s_axi_bid[2:0] = s_axi_1_BID;
  assign s_axi_bresp[1:0] = s_axi_1_BRESP;
  assign s_axi_buser[1023:0] = s_axi_1_BUSER;
  assign s_axi_bvalid = s_axi_1_BVALID;
  assign s_axi_rdata[31:0] = s_axi_1_RDATA;
  assign s_axi_rid[2:0] = s_axi_1_RID;
  assign s_axi_rlast = s_axi_1_RLAST;
  assign s_axi_rresp[1:0] = s_axi_1_RRESP;
  assign s_axi_ruser[1023:0] = s_axi_1_RUSER;
  assign s_axi_rvalid = s_axi_1_RVALID;
  assign s_axi_wready = s_axi_1_WREADY;
  bd_afc3_m42e_0 m42_exit
       (.aclk(aclk_1),
        .aresetn(aresetn_1),
        .m_axi_araddr(m42_exit_M_AXI_ARADDR),
        .m_axi_arprot(m42_exit_M_AXI_ARPROT),
        .m_axi_arready(m42_exit_M_AXI_ARREADY),
        .m_axi_arvalid(m42_exit_M_AXI_ARVALID),
        .m_axi_awaddr(m42_exit_M_AXI_AWADDR),
        .m_axi_awprot(m42_exit_M_AXI_AWPROT),
        .m_axi_awready(m42_exit_M_AXI_AWREADY),
        .m_axi_awvalid(m42_exit_M_AXI_AWVALID),
        .m_axi_bready(m42_exit_M_AXI_BREADY),
        .m_axi_bresp(m42_exit_M_AXI_BRESP),
        .m_axi_bvalid(m42_exit_M_AXI_BVALID),
        .m_axi_rdata(m42_exit_M_AXI_RDATA),
        .m_axi_rready(m42_exit_M_AXI_RREADY),
        .m_axi_rresp(m42_exit_M_AXI_RRESP),
        .m_axi_rvalid(m42_exit_M_AXI_RVALID),
        .m_axi_wdata(m42_exit_M_AXI_WDATA),
        .m_axi_wready(m42_exit_M_AXI_WREADY),
        .m_axi_wstrb(m42_exit_M_AXI_WSTRB),
        .m_axi_wvalid(m42_exit_M_AXI_WVALID),
        .s_axi_araddr(s_axi_1_ARADDR),
        .s_axi_arcache(s_axi_1_ARCACHE),
        .s_axi_arid(s_axi_1_ARID),
        .s_axi_arlen(s_axi_1_ARLEN),
        .s_axi_arlock(s_axi_1_ARLOCK),
        .s_axi_arprot(s_axi_1_ARPROT),
        .s_axi_arqos(s_axi_1_ARQOS),
        .s_axi_arready(s_axi_1_ARREADY),
        .s_axi_aruser(s_axi_1_ARUSER),
        .s_axi_arvalid(s_axi_1_ARVALID),
        .s_axi_awaddr(s_axi_1_AWADDR),
        .s_axi_awcache(s_axi_1_AWCACHE),
        .s_axi_awid(s_axi_1_AWID),
        .s_axi_awlen(s_axi_1_AWLEN),
        .s_axi_awlock(s_axi_1_AWLOCK),
        .s_axi_awprot(s_axi_1_AWPROT),
        .s_axi_awqos(s_axi_1_AWQOS),
        .s_axi_awready(s_axi_1_AWREADY),
        .s_axi_awuser(s_axi_1_AWUSER),
        .s_axi_awvalid(s_axi_1_AWVALID),
        .s_axi_bid(s_axi_1_BID),
        .s_axi_bready(s_axi_1_BREADY),
        .s_axi_bresp(s_axi_1_BRESP),
        .s_axi_buser(s_axi_1_BUSER),
        .s_axi_bvalid(s_axi_1_BVALID),
        .s_axi_rdata(s_axi_1_RDATA),
        .s_axi_rid(s_axi_1_RID),
        .s_axi_rlast(s_axi_1_RLAST),
        .s_axi_rready(s_axi_1_RREADY),
        .s_axi_rresp(s_axi_1_RRESP),
        .s_axi_ruser(s_axi_1_RUSER),
        .s_axi_rvalid(s_axi_1_RVALID),
        .s_axi_wdata(s_axi_1_WDATA),
        .s_axi_wlast(s_axi_1_WLAST),
        .s_axi_wready(s_axi_1_WREADY),
        .s_axi_wstrb(s_axi_1_WSTRB),
        .s_axi_wuser(s_axi_1_WUSER),
        .s_axi_wvalid(s_axi_1_WVALID));
endmodule

module m42_nodes_imp_1NNEEO5
   (M_SC_AR_info,
    M_SC_AR_payld,
    M_SC_AR_recv,
    M_SC_AR_req,
    M_SC_AR_send,
    M_SC_AW_info,
    M_SC_AW_payld,
    M_SC_AW_recv,
    M_SC_AW_req,
    M_SC_AW_send,
    M_SC_B_info,
    M_SC_B_payld,
    M_SC_B_recv,
    M_SC_B_req,
    M_SC_B_send,
    M_SC_R_info,
    M_SC_R_payld,
    M_SC_R_recv,
    M_SC_R_req,
    M_SC_R_send,
    M_SC_W_info,
    M_SC_W_payld,
    M_SC_W_recv,
    M_SC_W_req,
    M_SC_W_send,
    S_SC_AR_info,
    S_SC_AR_payld,
    S_SC_AR_recv,
    S_SC_AR_req,
    S_SC_AR_send,
    S_SC_AW_info,
    S_SC_AW_payld,
    S_SC_AW_recv,
    S_SC_AW_req,
    S_SC_AW_send,
    S_SC_B_info,
    S_SC_B_payld,
    S_SC_B_recv,
    S_SC_B_req,
    S_SC_B_send,
    S_SC_R_info,
    S_SC_R_payld,
    S_SC_R_recv,
    S_SC_R_req,
    S_SC_R_send,
    S_SC_W_info,
    S_SC_W_payld,
    S_SC_W_recv,
    S_SC_W_req,
    S_SC_W_send,
    m_axi_aclk,
    m_axi_aresetn,
    s_axi_aclk,
    s_axi_aresetn);
  output [0:0]M_SC_AR_info;
  output [181:0]M_SC_AR_payld;
  input [0:0]M_SC_AR_recv;
  output [0:0]M_SC_AR_req;
  output [0:0]M_SC_AR_send;
  output [0:0]M_SC_AW_info;
  output [181:0]M_SC_AW_payld;
  input [0:0]M_SC_AW_recv;
  output [0:0]M_SC_AW_req;
  output [0:0]M_SC_AW_send;
  output [0:0]M_SC_B_info;
  output [8:0]M_SC_B_payld;
  input [0:0]M_SC_B_recv;
  output [0:0]M_SC_B_req;
  output [0:0]M_SC_B_send;
  output [0:0]M_SC_R_info;
  output [54:0]M_SC_R_payld;
  input [0:0]M_SC_R_recv;
  output [0:0]M_SC_R_req;
  output [0:0]M_SC_R_send;
  output [0:0]M_SC_W_info;
  output [68:0]M_SC_W_payld;
  input [0:0]M_SC_W_recv;
  output [0:0]M_SC_W_req;
  output [0:0]M_SC_W_send;
  input [0:0]S_SC_AR_info;
  input [181:0]S_SC_AR_payld;
  output [0:0]S_SC_AR_recv;
  input [0:0]S_SC_AR_req;
  input [0:0]S_SC_AR_send;
  input [0:0]S_SC_AW_info;
  input [181:0]S_SC_AW_payld;
  output [0:0]S_SC_AW_recv;
  input [0:0]S_SC_AW_req;
  input [0:0]S_SC_AW_send;
  input [0:0]S_SC_B_info;
  input [8:0]S_SC_B_payld;
  output [0:0]S_SC_B_recv;
  input [0:0]S_SC_B_req;
  input [0:0]S_SC_B_send;
  input [0:0]S_SC_R_info;
  input [54:0]S_SC_R_payld;
  output [0:0]S_SC_R_recv;
  input [0:0]S_SC_R_req;
  input [0:0]S_SC_R_send;
  input [0:0]S_SC_W_info;
  input [68:0]S_SC_W_payld;
  output [0:0]S_SC_W_recv;
  input [0:0]S_SC_W_req;
  input [0:0]S_SC_W_send;
  input m_axi_aclk;
  input m_axi_aresetn;
  input s_axi_aclk;
  input s_axi_aresetn;

  wire [0:0]S_SC_AR_1_INFO;
  wire [181:0]S_SC_AR_1_PAYLD;
  wire [0:0]S_SC_AR_1_RECV;
  wire [0:0]S_SC_AR_1_REQ;
  wire [0:0]S_SC_AR_1_SEND;
  wire [0:0]S_SC_AW_1_INFO;
  wire [181:0]S_SC_AW_1_PAYLD;
  wire [0:0]S_SC_AW_1_RECV;
  wire [0:0]S_SC_AW_1_REQ;
  wire [0:0]S_SC_AW_1_SEND;
  wire [0:0]S_SC_B_1_INFO;
  wire [8:0]S_SC_B_1_PAYLD;
  wire [0:0]S_SC_B_1_RECV;
  wire [0:0]S_SC_B_1_REQ;
  wire [0:0]S_SC_B_1_SEND;
  wire [0:0]S_SC_R_1_INFO;
  wire [54:0]S_SC_R_1_PAYLD;
  wire [0:0]S_SC_R_1_RECV;
  wire [0:0]S_SC_R_1_REQ;
  wire [0:0]S_SC_R_1_SEND;
  wire [0:0]S_SC_W_1_INFO;
  wire [68:0]S_SC_W_1_PAYLD;
  wire [0:0]S_SC_W_1_RECV;
  wire [0:0]S_SC_W_1_REQ;
  wire [0:0]S_SC_W_1_SEND;
  wire [0:0]m42_ar_node_M_SC_INFO;
  wire [181:0]m42_ar_node_M_SC_PAYLD;
  wire [0:0]m42_ar_node_M_SC_RECV;
  wire [0:0]m42_ar_node_M_SC_REQ;
  wire [0:0]m42_ar_node_M_SC_SEND;
  wire [0:0]m42_aw_node_M_SC_INFO;
  wire [181:0]m42_aw_node_M_SC_PAYLD;
  wire [0:0]m42_aw_node_M_SC_RECV;
  wire [0:0]m42_aw_node_M_SC_REQ;
  wire [0:0]m42_aw_node_M_SC_SEND;
  wire [0:0]m42_b_node_M_SC_INFO;
  wire [8:0]m42_b_node_M_SC_PAYLD;
  wire [0:0]m42_b_node_M_SC_RECV;
  wire [0:0]m42_b_node_M_SC_REQ;
  wire [0:0]m42_b_node_M_SC_SEND;
  wire [0:0]m42_r_node_M_SC_INFO;
  wire [54:0]m42_r_node_M_SC_PAYLD;
  wire [0:0]m42_r_node_M_SC_RECV;
  wire [0:0]m42_r_node_M_SC_REQ;
  wire [0:0]m42_r_node_M_SC_SEND;
  wire [0:0]m42_w_node_M_SC_INFO;
  wire [68:0]m42_w_node_M_SC_PAYLD;
  wire [0:0]m42_w_node_M_SC_RECV;
  wire [0:0]m42_w_node_M_SC_REQ;
  wire [0:0]m42_w_node_M_SC_SEND;
  wire m_axi_aclk_1;
  wire m_axi_aresetn_1;
  wire s_axi_aclk_1;
  wire s_axi_aresetn_1;

  assign M_SC_AR_info[0] = m42_ar_node_M_SC_INFO;
  assign M_SC_AR_payld[181:0] = m42_ar_node_M_SC_PAYLD;
  assign M_SC_AR_req[0] = m42_ar_node_M_SC_REQ;
  assign M_SC_AR_send[0] = m42_ar_node_M_SC_SEND;
  assign M_SC_AW_info[0] = m42_aw_node_M_SC_INFO;
  assign M_SC_AW_payld[181:0] = m42_aw_node_M_SC_PAYLD;
  assign M_SC_AW_req[0] = m42_aw_node_M_SC_REQ;
  assign M_SC_AW_send[0] = m42_aw_node_M_SC_SEND;
  assign M_SC_B_info[0] = m42_b_node_M_SC_INFO;
  assign M_SC_B_payld[8:0] = m42_b_node_M_SC_PAYLD;
  assign M_SC_B_req[0] = m42_b_node_M_SC_REQ;
  assign M_SC_B_send[0] = m42_b_node_M_SC_SEND;
  assign M_SC_R_info[0] = m42_r_node_M_SC_INFO;
  assign M_SC_R_payld[54:0] = m42_r_node_M_SC_PAYLD;
  assign M_SC_R_req[0] = m42_r_node_M_SC_REQ;
  assign M_SC_R_send[0] = m42_r_node_M_SC_SEND;
  assign M_SC_W_info[0] = m42_w_node_M_SC_INFO;
  assign M_SC_W_payld[68:0] = m42_w_node_M_SC_PAYLD;
  assign M_SC_W_req[0] = m42_w_node_M_SC_REQ;
  assign M_SC_W_send[0] = m42_w_node_M_SC_SEND;
  assign S_SC_AR_1_INFO = S_SC_AR_info[0];
  assign S_SC_AR_1_PAYLD = S_SC_AR_payld[181:0];
  assign S_SC_AR_1_REQ = S_SC_AR_req[0];
  assign S_SC_AR_1_SEND = S_SC_AR_send[0];
  assign S_SC_AR_recv[0] = S_SC_AR_1_RECV;
  assign S_SC_AW_1_INFO = S_SC_AW_info[0];
  assign S_SC_AW_1_PAYLD = S_SC_AW_payld[181:0];
  assign S_SC_AW_1_REQ = S_SC_AW_req[0];
  assign S_SC_AW_1_SEND = S_SC_AW_send[0];
  assign S_SC_AW_recv[0] = S_SC_AW_1_RECV;
  assign S_SC_B_1_INFO = S_SC_B_info[0];
  assign S_SC_B_1_PAYLD = S_SC_B_payld[8:0];
  assign S_SC_B_1_REQ = S_SC_B_req[0];
  assign S_SC_B_1_SEND = S_SC_B_send[0];
  assign S_SC_B_recv[0] = S_SC_B_1_RECV;
  assign S_SC_R_1_INFO = S_SC_R_info[0];
  assign S_SC_R_1_PAYLD = S_SC_R_payld[54:0];
  assign S_SC_R_1_REQ = S_SC_R_req[0];
  assign S_SC_R_1_SEND = S_SC_R_send[0];
  assign S_SC_R_recv[0] = S_SC_R_1_RECV;
  assign S_SC_W_1_INFO = S_SC_W_info[0];
  assign S_SC_W_1_PAYLD = S_SC_W_payld[68:0];
  assign S_SC_W_1_REQ = S_SC_W_req[0];
  assign S_SC_W_1_SEND = S_SC_W_send[0];
  assign S_SC_W_recv[0] = S_SC_W_1_RECV;
  assign m42_ar_node_M_SC_RECV = M_SC_AR_recv[0];
  assign m42_aw_node_M_SC_RECV = M_SC_AW_recv[0];
  assign m42_b_node_M_SC_RECV = M_SC_B_recv[0];
  assign m42_r_node_M_SC_RECV = M_SC_R_recv[0];
  assign m42_w_node_M_SC_RECV = M_SC_W_recv[0];
  assign m_axi_aclk_1 = m_axi_aclk;
  assign m_axi_aresetn_1 = m_axi_aresetn;
  assign s_axi_aclk_1 = s_axi_aclk;
  assign s_axi_aresetn_1 = s_axi_aresetn;
  bd_afc3_m42arn_0 m42_ar_node
       (.m_sc_aclk(m_axi_aclk_1),
        .m_sc_aresetn(m_axi_aresetn_1),
        .m_sc_info(m42_ar_node_M_SC_INFO),
        .m_sc_payld(m42_ar_node_M_SC_PAYLD),
        .m_sc_recv(m42_ar_node_M_SC_RECV),
        .m_sc_req(m42_ar_node_M_SC_REQ),
        .m_sc_send(m42_ar_node_M_SC_SEND),
        .s_sc_aclk(s_axi_aclk_1),
        .s_sc_aresetn(s_axi_aresetn_1),
        .s_sc_info(S_SC_AR_1_INFO),
        .s_sc_payld(S_SC_AR_1_PAYLD),
        .s_sc_recv(S_SC_AR_1_RECV),
        .s_sc_req(S_SC_AR_1_REQ),
        .s_sc_send(S_SC_AR_1_SEND));
  bd_afc3_m42awn_0 m42_aw_node
       (.m_sc_aclk(m_axi_aclk_1),
        .m_sc_aresetn(m_axi_aresetn_1),
        .m_sc_info(m42_aw_node_M_SC_INFO),
        .m_sc_payld(m42_aw_node_M_SC_PAYLD),
        .m_sc_recv(m42_aw_node_M_SC_RECV),
        .m_sc_req(m42_aw_node_M_SC_REQ),
        .m_sc_send(m42_aw_node_M_SC_SEND),
        .s_sc_aclk(s_axi_aclk_1),
        .s_sc_aresetn(s_axi_aresetn_1),
        .s_sc_info(S_SC_AW_1_INFO),
        .s_sc_payld(S_SC_AW_1_PAYLD),
        .s_sc_recv(S_SC_AW_1_RECV),
        .s_sc_req(S_SC_AW_1_REQ),
        .s_sc_send(S_SC_AW_1_SEND));
  bd_afc3_m42bn_0 m42_b_node
       (.m_sc_aclk(s_axi_aclk_1),
        .m_sc_aresetn(s_axi_aresetn_1),
        .m_sc_info(m42_b_node_M_SC_INFO),
        .m_sc_payld(m42_b_node_M_SC_PAYLD),
        .m_sc_recv(m42_b_node_M_SC_RECV),
        .m_sc_req(m42_b_node_M_SC_REQ),
        .m_sc_send(m42_b_node_M_SC_SEND),
        .s_sc_aclk(m_axi_aclk_1),
        .s_sc_aresetn(m_axi_aresetn_1),
        .s_sc_info(S_SC_B_1_INFO),
        .s_sc_payld(S_SC_B_1_PAYLD),
        .s_sc_recv(S_SC_B_1_RECV),
        .s_sc_req(S_SC_B_1_REQ),
        .s_sc_send(S_SC_B_1_SEND));
  bd_afc3_m42rn_0 m42_r_node
       (.m_sc_aclk(s_axi_aclk_1),
        .m_sc_aresetn(s_axi_aresetn_1),
        .m_sc_info(m42_r_node_M_SC_INFO),
        .m_sc_payld(m42_r_node_M_SC_PAYLD),
        .m_sc_recv(m42_r_node_M_SC_RECV),
        .m_sc_req(m42_r_node_M_SC_REQ),
        .m_sc_send(m42_r_node_M_SC_SEND),
        .s_sc_aclk(m_axi_aclk_1),
        .s_sc_aresetn(m_axi_aresetn_1),
        .s_sc_info(S_SC_R_1_INFO),
        .s_sc_payld(S_SC_R_1_PAYLD),
        .s_sc_recv(S_SC_R_1_RECV),
        .s_sc_req(S_SC_R_1_REQ),
        .s_sc_send(S_SC_R_1_SEND));
  bd_afc3_m42wn_0 m42_w_node
       (.m_sc_aclk(m_axi_aclk_1),
        .m_sc_aresetn(m_axi_aresetn_1),
        .m_sc_info(m42_w_node_M_SC_INFO),
        .m_sc_payld(m42_w_node_M_SC_PAYLD),
        .m_sc_recv(m42_w_node_M_SC_RECV),
        .m_sc_req(m42_w_node_M_SC_REQ),
        .m_sc_send(m42_w_node_M_SC_SEND),
        .s_sc_aclk(s_axi_aclk_1),
        .s_sc_aresetn(s_axi_aresetn_1),
        .s_sc_info(S_SC_W_1_INFO),
        .s_sc_payld(S_SC_W_1_PAYLD),
        .s_sc_recv(S_SC_W_1_RECV),
        .s_sc_req(S_SC_W_1_REQ),
        .s_sc_send(S_SC_W_1_SEND));
endmodule

module m43_exit_pipeline_imp_1N3AP6C
   (aclk,
    aresetn,
    m_axi_araddr,
    m_axi_arprot,
    m_axi_arready,
    m_axi_arvalid,
    m_axi_awaddr,
    m_axi_awprot,
    m_axi_awready,
    m_axi_awvalid,
    m_axi_bready,
    m_axi_bresp,
    m_axi_bvalid,
    m_axi_rdata,
    m_axi_rready,
    m_axi_rresp,
    m_axi_rvalid,
    m_axi_wdata,
    m_axi_wready,
    m_axi_wstrb,
    m_axi_wvalid,
    s_axi_araddr,
    s_axi_arcache,
    s_axi_arid,
    s_axi_arlen,
    s_axi_arlock,
    s_axi_arprot,
    s_axi_arqos,
    s_axi_arready,
    s_axi_aruser,
    s_axi_arvalid,
    s_axi_awaddr,
    s_axi_awcache,
    s_axi_awid,
    s_axi_awlen,
    s_axi_awlock,
    s_axi_awprot,
    s_axi_awqos,
    s_axi_awready,
    s_axi_awuser,
    s_axi_awvalid,
    s_axi_bid,
    s_axi_bready,
    s_axi_bresp,
    s_axi_buser,
    s_axi_bvalid,
    s_axi_rdata,
    s_axi_rid,
    s_axi_rlast,
    s_axi_rready,
    s_axi_rresp,
    s_axi_ruser,
    s_axi_rvalid,
    s_axi_wdata,
    s_axi_wlast,
    s_axi_wready,
    s_axi_wstrb,
    s_axi_wuser,
    s_axi_wvalid);
  input aclk;
  input aresetn;
  output [9:0]m_axi_araddr;
  output [2:0]m_axi_arprot;
  input m_axi_arready;
  output m_axi_arvalid;
  output [9:0]m_axi_awaddr;
  output [2:0]m_axi_awprot;
  input m_axi_awready;
  output m_axi_awvalid;
  output m_axi_bready;
  input [1:0]m_axi_bresp;
  input m_axi_bvalid;
  input [31:0]m_axi_rdata;
  output m_axi_rready;
  input [1:0]m_axi_rresp;
  input m_axi_rvalid;
  output [31:0]m_axi_wdata;
  input m_axi_wready;
  output [3:0]m_axi_wstrb;
  output m_axi_wvalid;
  input [9:0]s_axi_araddr;
  input [3:0]s_axi_arcache;
  input [2:0]s_axi_arid;
  input [7:0]s_axi_arlen;
  input [0:0]s_axi_arlock;
  input [2:0]s_axi_arprot;
  input [3:0]s_axi_arqos;
  output s_axi_arready;
  input [1023:0]s_axi_aruser;
  input s_axi_arvalid;
  input [9:0]s_axi_awaddr;
  input [3:0]s_axi_awcache;
  input [2:0]s_axi_awid;
  input [7:0]s_axi_awlen;
  input [0:0]s_axi_awlock;
  input [2:0]s_axi_awprot;
  input [3:0]s_axi_awqos;
  output s_axi_awready;
  input [1023:0]s_axi_awuser;
  input s_axi_awvalid;
  output [2:0]s_axi_bid;
  input s_axi_bready;
  output [1:0]s_axi_bresp;
  output [1023:0]s_axi_buser;
  output s_axi_bvalid;
  output [31:0]s_axi_rdata;
  output [2:0]s_axi_rid;
  output s_axi_rlast;
  input s_axi_rready;
  output [1:0]s_axi_rresp;
  output [1023:0]s_axi_ruser;
  output s_axi_rvalid;
  input [31:0]s_axi_wdata;
  input s_axi_wlast;
  output s_axi_wready;
  input [3:0]s_axi_wstrb;
  input [1023:0]s_axi_wuser;
  input s_axi_wvalid;

  wire aclk_1;
  wire aresetn_1;
  wire [9:0]m43_exit_M_AXI_ARADDR;
  wire [2:0]m43_exit_M_AXI_ARPROT;
  wire m43_exit_M_AXI_ARREADY;
  wire m43_exit_M_AXI_ARVALID;
  wire [9:0]m43_exit_M_AXI_AWADDR;
  wire [2:0]m43_exit_M_AXI_AWPROT;
  wire m43_exit_M_AXI_AWREADY;
  wire m43_exit_M_AXI_AWVALID;
  wire m43_exit_M_AXI_BREADY;
  wire [1:0]m43_exit_M_AXI_BRESP;
  wire m43_exit_M_AXI_BVALID;
  wire [31:0]m43_exit_M_AXI_RDATA;
  wire m43_exit_M_AXI_RREADY;
  wire [1:0]m43_exit_M_AXI_RRESP;
  wire m43_exit_M_AXI_RVALID;
  wire [31:0]m43_exit_M_AXI_WDATA;
  wire m43_exit_M_AXI_WREADY;
  wire [3:0]m43_exit_M_AXI_WSTRB;
  wire m43_exit_M_AXI_WVALID;
  wire [9:0]s_axi_1_ARADDR;
  wire [3:0]s_axi_1_ARCACHE;
  wire [2:0]s_axi_1_ARID;
  wire [7:0]s_axi_1_ARLEN;
  wire [0:0]s_axi_1_ARLOCK;
  wire [2:0]s_axi_1_ARPROT;
  wire [3:0]s_axi_1_ARQOS;
  wire s_axi_1_ARREADY;
  wire [1023:0]s_axi_1_ARUSER;
  wire s_axi_1_ARVALID;
  wire [9:0]s_axi_1_AWADDR;
  wire [3:0]s_axi_1_AWCACHE;
  wire [2:0]s_axi_1_AWID;
  wire [7:0]s_axi_1_AWLEN;
  wire [0:0]s_axi_1_AWLOCK;
  wire [2:0]s_axi_1_AWPROT;
  wire [3:0]s_axi_1_AWQOS;
  wire s_axi_1_AWREADY;
  wire [1023:0]s_axi_1_AWUSER;
  wire s_axi_1_AWVALID;
  wire [2:0]s_axi_1_BID;
  wire s_axi_1_BREADY;
  wire [1:0]s_axi_1_BRESP;
  wire [1023:0]s_axi_1_BUSER;
  wire s_axi_1_BVALID;
  wire [31:0]s_axi_1_RDATA;
  wire [2:0]s_axi_1_RID;
  wire s_axi_1_RLAST;
  wire s_axi_1_RREADY;
  wire [1:0]s_axi_1_RRESP;
  wire [1023:0]s_axi_1_RUSER;
  wire s_axi_1_RVALID;
  wire [31:0]s_axi_1_WDATA;
  wire s_axi_1_WLAST;
  wire s_axi_1_WREADY;
  wire [3:0]s_axi_1_WSTRB;
  wire [1023:0]s_axi_1_WUSER;
  wire s_axi_1_WVALID;

  assign aclk_1 = aclk;
  assign aresetn_1 = aresetn;
  assign m43_exit_M_AXI_ARREADY = m_axi_arready;
  assign m43_exit_M_AXI_AWREADY = m_axi_awready;
  assign m43_exit_M_AXI_BRESP = m_axi_bresp[1:0];
  assign m43_exit_M_AXI_BVALID = m_axi_bvalid;
  assign m43_exit_M_AXI_RDATA = m_axi_rdata[31:0];
  assign m43_exit_M_AXI_RRESP = m_axi_rresp[1:0];
  assign m43_exit_M_AXI_RVALID = m_axi_rvalid;
  assign m43_exit_M_AXI_WREADY = m_axi_wready;
  assign m_axi_araddr[9:0] = m43_exit_M_AXI_ARADDR;
  assign m_axi_arprot[2:0] = m43_exit_M_AXI_ARPROT;
  assign m_axi_arvalid = m43_exit_M_AXI_ARVALID;
  assign m_axi_awaddr[9:0] = m43_exit_M_AXI_AWADDR;
  assign m_axi_awprot[2:0] = m43_exit_M_AXI_AWPROT;
  assign m_axi_awvalid = m43_exit_M_AXI_AWVALID;
  assign m_axi_bready = m43_exit_M_AXI_BREADY;
  assign m_axi_rready = m43_exit_M_AXI_RREADY;
  assign m_axi_wdata[31:0] = m43_exit_M_AXI_WDATA;
  assign m_axi_wstrb[3:0] = m43_exit_M_AXI_WSTRB;
  assign m_axi_wvalid = m43_exit_M_AXI_WVALID;
  assign s_axi_1_ARADDR = s_axi_araddr[9:0];
  assign s_axi_1_ARCACHE = s_axi_arcache[3:0];
  assign s_axi_1_ARID = s_axi_arid[2:0];
  assign s_axi_1_ARLEN = s_axi_arlen[7:0];
  assign s_axi_1_ARLOCK = s_axi_arlock[0];
  assign s_axi_1_ARPROT = s_axi_arprot[2:0];
  assign s_axi_1_ARQOS = s_axi_arqos[3:0];
  assign s_axi_1_ARUSER = s_axi_aruser[1023:0];
  assign s_axi_1_ARVALID = s_axi_arvalid;
  assign s_axi_1_AWADDR = s_axi_awaddr[9:0];
  assign s_axi_1_AWCACHE = s_axi_awcache[3:0];
  assign s_axi_1_AWID = s_axi_awid[2:0];
  assign s_axi_1_AWLEN = s_axi_awlen[7:0];
  assign s_axi_1_AWLOCK = s_axi_awlock[0];
  assign s_axi_1_AWPROT = s_axi_awprot[2:0];
  assign s_axi_1_AWQOS = s_axi_awqos[3:0];
  assign s_axi_1_AWUSER = s_axi_awuser[1023:0];
  assign s_axi_1_AWVALID = s_axi_awvalid;
  assign s_axi_1_BREADY = s_axi_bready;
  assign s_axi_1_RREADY = s_axi_rready;
  assign s_axi_1_WDATA = s_axi_wdata[31:0];
  assign s_axi_1_WLAST = s_axi_wlast;
  assign s_axi_1_WSTRB = s_axi_wstrb[3:0];
  assign s_axi_1_WUSER = s_axi_wuser[1023:0];
  assign s_axi_1_WVALID = s_axi_wvalid;
  assign s_axi_arready = s_axi_1_ARREADY;
  assign s_axi_awready = s_axi_1_AWREADY;
  assign s_axi_bid[2:0] = s_axi_1_BID;
  assign s_axi_bresp[1:0] = s_axi_1_BRESP;
  assign s_axi_buser[1023:0] = s_axi_1_BUSER;
  assign s_axi_bvalid = s_axi_1_BVALID;
  assign s_axi_rdata[31:0] = s_axi_1_RDATA;
  assign s_axi_rid[2:0] = s_axi_1_RID;
  assign s_axi_rlast = s_axi_1_RLAST;
  assign s_axi_rresp[1:0] = s_axi_1_RRESP;
  assign s_axi_ruser[1023:0] = s_axi_1_RUSER;
  assign s_axi_rvalid = s_axi_1_RVALID;
  assign s_axi_wready = s_axi_1_WREADY;
  bd_afc3_m43e_0 m43_exit
       (.aclk(aclk_1),
        .aresetn(aresetn_1),
        .m_axi_araddr(m43_exit_M_AXI_ARADDR),
        .m_axi_arprot(m43_exit_M_AXI_ARPROT),
        .m_axi_arready(m43_exit_M_AXI_ARREADY),
        .m_axi_arvalid(m43_exit_M_AXI_ARVALID),
        .m_axi_awaddr(m43_exit_M_AXI_AWADDR),
        .m_axi_awprot(m43_exit_M_AXI_AWPROT),
        .m_axi_awready(m43_exit_M_AXI_AWREADY),
        .m_axi_awvalid(m43_exit_M_AXI_AWVALID),
        .m_axi_bready(m43_exit_M_AXI_BREADY),
        .m_axi_bresp(m43_exit_M_AXI_BRESP),
        .m_axi_bvalid(m43_exit_M_AXI_BVALID),
        .m_axi_rdata(m43_exit_M_AXI_RDATA),
        .m_axi_rready(m43_exit_M_AXI_RREADY),
        .m_axi_rresp(m43_exit_M_AXI_RRESP),
        .m_axi_rvalid(m43_exit_M_AXI_RVALID),
        .m_axi_wdata(m43_exit_M_AXI_WDATA),
        .m_axi_wready(m43_exit_M_AXI_WREADY),
        .m_axi_wstrb(m43_exit_M_AXI_WSTRB),
        .m_axi_wvalid(m43_exit_M_AXI_WVALID),
        .s_axi_araddr(s_axi_1_ARADDR),
        .s_axi_arcache(s_axi_1_ARCACHE),
        .s_axi_arid(s_axi_1_ARID),
        .s_axi_arlen(s_axi_1_ARLEN),
        .s_axi_arlock(s_axi_1_ARLOCK),
        .s_axi_arprot(s_axi_1_ARPROT),
        .s_axi_arqos(s_axi_1_ARQOS),
        .s_axi_arready(s_axi_1_ARREADY),
        .s_axi_aruser(s_axi_1_ARUSER),
        .s_axi_arvalid(s_axi_1_ARVALID),
        .s_axi_awaddr(s_axi_1_AWADDR),
        .s_axi_awcache(s_axi_1_AWCACHE),
        .s_axi_awid(s_axi_1_AWID),
        .s_axi_awlen(s_axi_1_AWLEN),
        .s_axi_awlock(s_axi_1_AWLOCK),
        .s_axi_awprot(s_axi_1_AWPROT),
        .s_axi_awqos(s_axi_1_AWQOS),
        .s_axi_awready(s_axi_1_AWREADY),
        .s_axi_awuser(s_axi_1_AWUSER),
        .s_axi_awvalid(s_axi_1_AWVALID),
        .s_axi_bid(s_axi_1_BID),
        .s_axi_bready(s_axi_1_BREADY),
        .s_axi_bresp(s_axi_1_BRESP),
        .s_axi_buser(s_axi_1_BUSER),
        .s_axi_bvalid(s_axi_1_BVALID),
        .s_axi_rdata(s_axi_1_RDATA),
        .s_axi_rid(s_axi_1_RID),
        .s_axi_rlast(s_axi_1_RLAST),
        .s_axi_rready(s_axi_1_RREADY),
        .s_axi_rresp(s_axi_1_RRESP),
        .s_axi_ruser(s_axi_1_RUSER),
        .s_axi_rvalid(s_axi_1_RVALID),
        .s_axi_wdata(s_axi_1_WDATA),
        .s_axi_wlast(s_axi_1_WLAST),
        .s_axi_wready(s_axi_1_WREADY),
        .s_axi_wstrb(s_axi_1_WSTRB),
        .s_axi_wuser(s_axi_1_WUSER),
        .s_axi_wvalid(s_axi_1_WVALID));
endmodule

module m43_nodes_imp_L2OUCZ
   (M_SC_AR_info,
    M_SC_AR_payld,
    M_SC_AR_recv,
    M_SC_AR_req,
    M_SC_AR_send,
    M_SC_AW_info,
    M_SC_AW_payld,
    M_SC_AW_recv,
    M_SC_AW_req,
    M_SC_AW_send,
    M_SC_B_info,
    M_SC_B_payld,
    M_SC_B_recv,
    M_SC_B_req,
    M_SC_B_send,
    M_SC_R_info,
    M_SC_R_payld,
    M_SC_R_recv,
    M_SC_R_req,
    M_SC_R_send,
    M_SC_W_info,
    M_SC_W_payld,
    M_SC_W_recv,
    M_SC_W_req,
    M_SC_W_send,
    S_SC_AR_info,
    S_SC_AR_payld,
    S_SC_AR_recv,
    S_SC_AR_req,
    S_SC_AR_send,
    S_SC_AW_info,
    S_SC_AW_payld,
    S_SC_AW_recv,
    S_SC_AW_req,
    S_SC_AW_send,
    S_SC_B_info,
    S_SC_B_payld,
    S_SC_B_recv,
    S_SC_B_req,
    S_SC_B_send,
    S_SC_R_info,
    S_SC_R_payld,
    S_SC_R_recv,
    S_SC_R_req,
    S_SC_R_send,
    S_SC_W_info,
    S_SC_W_payld,
    S_SC_W_recv,
    S_SC_W_req,
    S_SC_W_send,
    m_axi_aclk,
    m_axi_aresetn,
    s_axi_aclk,
    s_axi_aresetn);
  output [0:0]M_SC_AR_info;
  output [181:0]M_SC_AR_payld;
  input [0:0]M_SC_AR_recv;
  output [0:0]M_SC_AR_req;
  output [0:0]M_SC_AR_send;
  output [0:0]M_SC_AW_info;
  output [181:0]M_SC_AW_payld;
  input [0:0]M_SC_AW_recv;
  output [0:0]M_SC_AW_req;
  output [0:0]M_SC_AW_send;
  output [0:0]M_SC_B_info;
  output [8:0]M_SC_B_payld;
  input [0:0]M_SC_B_recv;
  output [0:0]M_SC_B_req;
  output [0:0]M_SC_B_send;
  output [0:0]M_SC_R_info;
  output [54:0]M_SC_R_payld;
  input [0:0]M_SC_R_recv;
  output [0:0]M_SC_R_req;
  output [0:0]M_SC_R_send;
  output [0:0]M_SC_W_info;
  output [68:0]M_SC_W_payld;
  input [0:0]M_SC_W_recv;
  output [0:0]M_SC_W_req;
  output [0:0]M_SC_W_send;
  input [0:0]S_SC_AR_info;
  input [181:0]S_SC_AR_payld;
  output [0:0]S_SC_AR_recv;
  input [0:0]S_SC_AR_req;
  input [0:0]S_SC_AR_send;
  input [0:0]S_SC_AW_info;
  input [181:0]S_SC_AW_payld;
  output [0:0]S_SC_AW_recv;
  input [0:0]S_SC_AW_req;
  input [0:0]S_SC_AW_send;
  input [0:0]S_SC_B_info;
  input [8:0]S_SC_B_payld;
  output [0:0]S_SC_B_recv;
  input [0:0]S_SC_B_req;
  input [0:0]S_SC_B_send;
  input [0:0]S_SC_R_info;
  input [54:0]S_SC_R_payld;
  output [0:0]S_SC_R_recv;
  input [0:0]S_SC_R_req;
  input [0:0]S_SC_R_send;
  input [0:0]S_SC_W_info;
  input [68:0]S_SC_W_payld;
  output [0:0]S_SC_W_recv;
  input [0:0]S_SC_W_req;
  input [0:0]S_SC_W_send;
  input m_axi_aclk;
  input m_axi_aresetn;
  input s_axi_aclk;
  input s_axi_aresetn;

  wire [0:0]S_SC_AR_1_INFO;
  wire [181:0]S_SC_AR_1_PAYLD;
  wire [0:0]S_SC_AR_1_RECV;
  wire [0:0]S_SC_AR_1_REQ;
  wire [0:0]S_SC_AR_1_SEND;
  wire [0:0]S_SC_AW_1_INFO;
  wire [181:0]S_SC_AW_1_PAYLD;
  wire [0:0]S_SC_AW_1_RECV;
  wire [0:0]S_SC_AW_1_REQ;
  wire [0:0]S_SC_AW_1_SEND;
  wire [0:0]S_SC_B_1_INFO;
  wire [8:0]S_SC_B_1_PAYLD;
  wire [0:0]S_SC_B_1_RECV;
  wire [0:0]S_SC_B_1_REQ;
  wire [0:0]S_SC_B_1_SEND;
  wire [0:0]S_SC_R_1_INFO;
  wire [54:0]S_SC_R_1_PAYLD;
  wire [0:0]S_SC_R_1_RECV;
  wire [0:0]S_SC_R_1_REQ;
  wire [0:0]S_SC_R_1_SEND;
  wire [0:0]S_SC_W_1_INFO;
  wire [68:0]S_SC_W_1_PAYLD;
  wire [0:0]S_SC_W_1_RECV;
  wire [0:0]S_SC_W_1_REQ;
  wire [0:0]S_SC_W_1_SEND;
  wire [0:0]m43_ar_node_M_SC_INFO;
  wire [181:0]m43_ar_node_M_SC_PAYLD;
  wire [0:0]m43_ar_node_M_SC_RECV;
  wire [0:0]m43_ar_node_M_SC_REQ;
  wire [0:0]m43_ar_node_M_SC_SEND;
  wire [0:0]m43_aw_node_M_SC_INFO;
  wire [181:0]m43_aw_node_M_SC_PAYLD;
  wire [0:0]m43_aw_node_M_SC_RECV;
  wire [0:0]m43_aw_node_M_SC_REQ;
  wire [0:0]m43_aw_node_M_SC_SEND;
  wire [0:0]m43_b_node_M_SC_INFO;
  wire [8:0]m43_b_node_M_SC_PAYLD;
  wire [0:0]m43_b_node_M_SC_RECV;
  wire [0:0]m43_b_node_M_SC_REQ;
  wire [0:0]m43_b_node_M_SC_SEND;
  wire [0:0]m43_r_node_M_SC_INFO;
  wire [54:0]m43_r_node_M_SC_PAYLD;
  wire [0:0]m43_r_node_M_SC_RECV;
  wire [0:0]m43_r_node_M_SC_REQ;
  wire [0:0]m43_r_node_M_SC_SEND;
  wire [0:0]m43_w_node_M_SC_INFO;
  wire [68:0]m43_w_node_M_SC_PAYLD;
  wire [0:0]m43_w_node_M_SC_RECV;
  wire [0:0]m43_w_node_M_SC_REQ;
  wire [0:0]m43_w_node_M_SC_SEND;
  wire m_axi_aclk_1;
  wire m_axi_aresetn_1;
  wire s_axi_aclk_1;
  wire s_axi_aresetn_1;

  assign M_SC_AR_info[0] = m43_ar_node_M_SC_INFO;
  assign M_SC_AR_payld[181:0] = m43_ar_node_M_SC_PAYLD;
  assign M_SC_AR_req[0] = m43_ar_node_M_SC_REQ;
  assign M_SC_AR_send[0] = m43_ar_node_M_SC_SEND;
  assign M_SC_AW_info[0] = m43_aw_node_M_SC_INFO;
  assign M_SC_AW_payld[181:0] = m43_aw_node_M_SC_PAYLD;
  assign M_SC_AW_req[0] = m43_aw_node_M_SC_REQ;
  assign M_SC_AW_send[0] = m43_aw_node_M_SC_SEND;
  assign M_SC_B_info[0] = m43_b_node_M_SC_INFO;
  assign M_SC_B_payld[8:0] = m43_b_node_M_SC_PAYLD;
  assign M_SC_B_req[0] = m43_b_node_M_SC_REQ;
  assign M_SC_B_send[0] = m43_b_node_M_SC_SEND;
  assign M_SC_R_info[0] = m43_r_node_M_SC_INFO;
  assign M_SC_R_payld[54:0] = m43_r_node_M_SC_PAYLD;
  assign M_SC_R_req[0] = m43_r_node_M_SC_REQ;
  assign M_SC_R_send[0] = m43_r_node_M_SC_SEND;
  assign M_SC_W_info[0] = m43_w_node_M_SC_INFO;
  assign M_SC_W_payld[68:0] = m43_w_node_M_SC_PAYLD;
  assign M_SC_W_req[0] = m43_w_node_M_SC_REQ;
  assign M_SC_W_send[0] = m43_w_node_M_SC_SEND;
  assign S_SC_AR_1_INFO = S_SC_AR_info[0];
  assign S_SC_AR_1_PAYLD = S_SC_AR_payld[181:0];
  assign S_SC_AR_1_REQ = S_SC_AR_req[0];
  assign S_SC_AR_1_SEND = S_SC_AR_send[0];
  assign S_SC_AR_recv[0] = S_SC_AR_1_RECV;
  assign S_SC_AW_1_INFO = S_SC_AW_info[0];
  assign S_SC_AW_1_PAYLD = S_SC_AW_payld[181:0];
  assign S_SC_AW_1_REQ = S_SC_AW_req[0];
  assign S_SC_AW_1_SEND = S_SC_AW_send[0];
  assign S_SC_AW_recv[0] = S_SC_AW_1_RECV;
  assign S_SC_B_1_INFO = S_SC_B_info[0];
  assign S_SC_B_1_PAYLD = S_SC_B_payld[8:0];
  assign S_SC_B_1_REQ = S_SC_B_req[0];
  assign S_SC_B_1_SEND = S_SC_B_send[0];
  assign S_SC_B_recv[0] = S_SC_B_1_RECV;
  assign S_SC_R_1_INFO = S_SC_R_info[0];
  assign S_SC_R_1_PAYLD = S_SC_R_payld[54:0];
  assign S_SC_R_1_REQ = S_SC_R_req[0];
  assign S_SC_R_1_SEND = S_SC_R_send[0];
  assign S_SC_R_recv[0] = S_SC_R_1_RECV;
  assign S_SC_W_1_INFO = S_SC_W_info[0];
  assign S_SC_W_1_PAYLD = S_SC_W_payld[68:0];
  assign S_SC_W_1_REQ = S_SC_W_req[0];
  assign S_SC_W_1_SEND = S_SC_W_send[0];
  assign S_SC_W_recv[0] = S_SC_W_1_RECV;
  assign m43_ar_node_M_SC_RECV = M_SC_AR_recv[0];
  assign m43_aw_node_M_SC_RECV = M_SC_AW_recv[0];
  assign m43_b_node_M_SC_RECV = M_SC_B_recv[0];
  assign m43_r_node_M_SC_RECV = M_SC_R_recv[0];
  assign m43_w_node_M_SC_RECV = M_SC_W_recv[0];
  assign m_axi_aclk_1 = m_axi_aclk;
  assign m_axi_aresetn_1 = m_axi_aresetn;
  assign s_axi_aclk_1 = s_axi_aclk;
  assign s_axi_aresetn_1 = s_axi_aresetn;
  bd_afc3_m43arn_0 m43_ar_node
       (.m_sc_aclk(m_axi_aclk_1),
        .m_sc_aresetn(m_axi_aresetn_1),
        .m_sc_info(m43_ar_node_M_SC_INFO),
        .m_sc_payld(m43_ar_node_M_SC_PAYLD),
        .m_sc_recv(m43_ar_node_M_SC_RECV),
        .m_sc_req(m43_ar_node_M_SC_REQ),
        .m_sc_send(m43_ar_node_M_SC_SEND),
        .s_sc_aclk(s_axi_aclk_1),
        .s_sc_aresetn(s_axi_aresetn_1),
        .s_sc_info(S_SC_AR_1_INFO),
        .s_sc_payld(S_SC_AR_1_PAYLD),
        .s_sc_recv(S_SC_AR_1_RECV),
        .s_sc_req(S_SC_AR_1_REQ),
        .s_sc_send(S_SC_AR_1_SEND));
  bd_afc3_m43awn_0 m43_aw_node
       (.m_sc_aclk(m_axi_aclk_1),
        .m_sc_aresetn(m_axi_aresetn_1),
        .m_sc_info(m43_aw_node_M_SC_INFO),
        .m_sc_payld(m43_aw_node_M_SC_PAYLD),
        .m_sc_recv(m43_aw_node_M_SC_RECV),
        .m_sc_req(m43_aw_node_M_SC_REQ),
        .m_sc_send(m43_aw_node_M_SC_SEND),
        .s_sc_aclk(s_axi_aclk_1),
        .s_sc_aresetn(s_axi_aresetn_1),
        .s_sc_info(S_SC_AW_1_INFO),
        .s_sc_payld(S_SC_AW_1_PAYLD),
        .s_sc_recv(S_SC_AW_1_RECV),
        .s_sc_req(S_SC_AW_1_REQ),
        .s_sc_send(S_SC_AW_1_SEND));
  bd_afc3_m43bn_0 m43_b_node
       (.m_sc_aclk(s_axi_aclk_1),
        .m_sc_aresetn(s_axi_aresetn_1),
        .m_sc_info(m43_b_node_M_SC_INFO),
        .m_sc_payld(m43_b_node_M_SC_PAYLD),
        .m_sc_recv(m43_b_node_M_SC_RECV),
        .m_sc_req(m43_b_node_M_SC_REQ),
        .m_sc_send(m43_b_node_M_SC_SEND),
        .s_sc_aclk(m_axi_aclk_1),
        .s_sc_aresetn(m_axi_aresetn_1),
        .s_sc_info(S_SC_B_1_INFO),
        .s_sc_payld(S_SC_B_1_PAYLD),
        .s_sc_recv(S_SC_B_1_RECV),
        .s_sc_req(S_SC_B_1_REQ),
        .s_sc_send(S_SC_B_1_SEND));
  bd_afc3_m43rn_0 m43_r_node
       (.m_sc_aclk(s_axi_aclk_1),
        .m_sc_aresetn(s_axi_aresetn_1),
        .m_sc_info(m43_r_node_M_SC_INFO),
        .m_sc_payld(m43_r_node_M_SC_PAYLD),
        .m_sc_recv(m43_r_node_M_SC_RECV),
        .m_sc_req(m43_r_node_M_SC_REQ),
        .m_sc_send(m43_r_node_M_SC_SEND),
        .s_sc_aclk(m_axi_aclk_1),
        .s_sc_aresetn(m_axi_aresetn_1),
        .s_sc_info(S_SC_R_1_INFO),
        .s_sc_payld(S_SC_R_1_PAYLD),
        .s_sc_recv(S_SC_R_1_RECV),
        .s_sc_req(S_SC_R_1_REQ),
        .s_sc_send(S_SC_R_1_SEND));
  bd_afc3_m43wn_0 m43_w_node
       (.m_sc_aclk(m_axi_aclk_1),
        .m_sc_aresetn(m_axi_aresetn_1),
        .m_sc_info(m43_w_node_M_SC_INFO),
        .m_sc_payld(m43_w_node_M_SC_PAYLD),
        .m_sc_recv(m43_w_node_M_SC_RECV),
        .m_sc_req(m43_w_node_M_SC_REQ),
        .m_sc_send(m43_w_node_M_SC_SEND),
        .s_sc_aclk(s_axi_aclk_1),
        .s_sc_aresetn(s_axi_aresetn_1),
        .s_sc_info(S_SC_W_1_INFO),
        .s_sc_payld(S_SC_W_1_PAYLD),
        .s_sc_recv(S_SC_W_1_RECV),
        .s_sc_req(S_SC_W_1_REQ),
        .s_sc_send(S_SC_W_1_SEND));
endmodule

module m44_exit_pipeline_imp_1D5B450
   (aclk,
    aresetn,
    m_axi_araddr,
    m_axi_arprot,
    m_axi_arready,
    m_axi_arvalid,
    m_axi_awaddr,
    m_axi_awprot,
    m_axi_awready,
    m_axi_awvalid,
    m_axi_bready,
    m_axi_bresp,
    m_axi_bvalid,
    m_axi_rdata,
    m_axi_rready,
    m_axi_rresp,
    m_axi_rvalid,
    m_axi_wdata,
    m_axi_wready,
    m_axi_wstrb,
    m_axi_wvalid,
    s_axi_araddr,
    s_axi_arcache,
    s_axi_arid,
    s_axi_arlen,
    s_axi_arlock,
    s_axi_arprot,
    s_axi_arqos,
    s_axi_arready,
    s_axi_aruser,
    s_axi_arvalid,
    s_axi_awaddr,
    s_axi_awcache,
    s_axi_awid,
    s_axi_awlen,
    s_axi_awlock,
    s_axi_awprot,
    s_axi_awqos,
    s_axi_awready,
    s_axi_awuser,
    s_axi_awvalid,
    s_axi_bid,
    s_axi_bready,
    s_axi_bresp,
    s_axi_buser,
    s_axi_bvalid,
    s_axi_rdata,
    s_axi_rid,
    s_axi_rlast,
    s_axi_rready,
    s_axi_rresp,
    s_axi_ruser,
    s_axi_rvalid,
    s_axi_wdata,
    s_axi_wlast,
    s_axi_wready,
    s_axi_wstrb,
    s_axi_wuser,
    s_axi_wvalid);
  input aclk;
  input aresetn;
  output [9:0]m_axi_araddr;
  output [2:0]m_axi_arprot;
  input m_axi_arready;
  output m_axi_arvalid;
  output [9:0]m_axi_awaddr;
  output [2:0]m_axi_awprot;
  input m_axi_awready;
  output m_axi_awvalid;
  output m_axi_bready;
  input [1:0]m_axi_bresp;
  input m_axi_bvalid;
  input [31:0]m_axi_rdata;
  output m_axi_rready;
  input [1:0]m_axi_rresp;
  input m_axi_rvalid;
  output [31:0]m_axi_wdata;
  input m_axi_wready;
  output [3:0]m_axi_wstrb;
  output m_axi_wvalid;
  input [9:0]s_axi_araddr;
  input [3:0]s_axi_arcache;
  input [2:0]s_axi_arid;
  input [7:0]s_axi_arlen;
  input [0:0]s_axi_arlock;
  input [2:0]s_axi_arprot;
  input [3:0]s_axi_arqos;
  output s_axi_arready;
  input [1023:0]s_axi_aruser;
  input s_axi_arvalid;
  input [9:0]s_axi_awaddr;
  input [3:0]s_axi_awcache;
  input [2:0]s_axi_awid;
  input [7:0]s_axi_awlen;
  input [0:0]s_axi_awlock;
  input [2:0]s_axi_awprot;
  input [3:0]s_axi_awqos;
  output s_axi_awready;
  input [1023:0]s_axi_awuser;
  input s_axi_awvalid;
  output [2:0]s_axi_bid;
  input s_axi_bready;
  output [1:0]s_axi_bresp;
  output [1023:0]s_axi_buser;
  output s_axi_bvalid;
  output [31:0]s_axi_rdata;
  output [2:0]s_axi_rid;
  output s_axi_rlast;
  input s_axi_rready;
  output [1:0]s_axi_rresp;
  output [1023:0]s_axi_ruser;
  output s_axi_rvalid;
  input [31:0]s_axi_wdata;
  input s_axi_wlast;
  output s_axi_wready;
  input [3:0]s_axi_wstrb;
  input [1023:0]s_axi_wuser;
  input s_axi_wvalid;

  wire aclk_1;
  wire aresetn_1;
  wire [9:0]m44_exit_M_AXI_ARADDR;
  wire [2:0]m44_exit_M_AXI_ARPROT;
  wire m44_exit_M_AXI_ARREADY;
  wire m44_exit_M_AXI_ARVALID;
  wire [9:0]m44_exit_M_AXI_AWADDR;
  wire [2:0]m44_exit_M_AXI_AWPROT;
  wire m44_exit_M_AXI_AWREADY;
  wire m44_exit_M_AXI_AWVALID;
  wire m44_exit_M_AXI_BREADY;
  wire [1:0]m44_exit_M_AXI_BRESP;
  wire m44_exit_M_AXI_BVALID;
  wire [31:0]m44_exit_M_AXI_RDATA;
  wire m44_exit_M_AXI_RREADY;
  wire [1:0]m44_exit_M_AXI_RRESP;
  wire m44_exit_M_AXI_RVALID;
  wire [31:0]m44_exit_M_AXI_WDATA;
  wire m44_exit_M_AXI_WREADY;
  wire [3:0]m44_exit_M_AXI_WSTRB;
  wire m44_exit_M_AXI_WVALID;
  wire [9:0]s_axi_1_ARADDR;
  wire [3:0]s_axi_1_ARCACHE;
  wire [2:0]s_axi_1_ARID;
  wire [7:0]s_axi_1_ARLEN;
  wire [0:0]s_axi_1_ARLOCK;
  wire [2:0]s_axi_1_ARPROT;
  wire [3:0]s_axi_1_ARQOS;
  wire s_axi_1_ARREADY;
  wire [1023:0]s_axi_1_ARUSER;
  wire s_axi_1_ARVALID;
  wire [9:0]s_axi_1_AWADDR;
  wire [3:0]s_axi_1_AWCACHE;
  wire [2:0]s_axi_1_AWID;
  wire [7:0]s_axi_1_AWLEN;
  wire [0:0]s_axi_1_AWLOCK;
  wire [2:0]s_axi_1_AWPROT;
  wire [3:0]s_axi_1_AWQOS;
  wire s_axi_1_AWREADY;
  wire [1023:0]s_axi_1_AWUSER;
  wire s_axi_1_AWVALID;
  wire [2:0]s_axi_1_BID;
  wire s_axi_1_BREADY;
  wire [1:0]s_axi_1_BRESP;
  wire [1023:0]s_axi_1_BUSER;
  wire s_axi_1_BVALID;
  wire [31:0]s_axi_1_RDATA;
  wire [2:0]s_axi_1_RID;
  wire s_axi_1_RLAST;
  wire s_axi_1_RREADY;
  wire [1:0]s_axi_1_RRESP;
  wire [1023:0]s_axi_1_RUSER;
  wire s_axi_1_RVALID;
  wire [31:0]s_axi_1_WDATA;
  wire s_axi_1_WLAST;
  wire s_axi_1_WREADY;
  wire [3:0]s_axi_1_WSTRB;
  wire [1023:0]s_axi_1_WUSER;
  wire s_axi_1_WVALID;

  assign aclk_1 = aclk;
  assign aresetn_1 = aresetn;
  assign m44_exit_M_AXI_ARREADY = m_axi_arready;
  assign m44_exit_M_AXI_AWREADY = m_axi_awready;
  assign m44_exit_M_AXI_BRESP = m_axi_bresp[1:0];
  assign m44_exit_M_AXI_BVALID = m_axi_bvalid;
  assign m44_exit_M_AXI_RDATA = m_axi_rdata[31:0];
  assign m44_exit_M_AXI_RRESP = m_axi_rresp[1:0];
  assign m44_exit_M_AXI_RVALID = m_axi_rvalid;
  assign m44_exit_M_AXI_WREADY = m_axi_wready;
  assign m_axi_araddr[9:0] = m44_exit_M_AXI_ARADDR;
  assign m_axi_arprot[2:0] = m44_exit_M_AXI_ARPROT;
  assign m_axi_arvalid = m44_exit_M_AXI_ARVALID;
  assign m_axi_awaddr[9:0] = m44_exit_M_AXI_AWADDR;
  assign m_axi_awprot[2:0] = m44_exit_M_AXI_AWPROT;
  assign m_axi_awvalid = m44_exit_M_AXI_AWVALID;
  assign m_axi_bready = m44_exit_M_AXI_BREADY;
  assign m_axi_rready = m44_exit_M_AXI_RREADY;
  assign m_axi_wdata[31:0] = m44_exit_M_AXI_WDATA;
  assign m_axi_wstrb[3:0] = m44_exit_M_AXI_WSTRB;
  assign m_axi_wvalid = m44_exit_M_AXI_WVALID;
  assign s_axi_1_ARADDR = s_axi_araddr[9:0];
  assign s_axi_1_ARCACHE = s_axi_arcache[3:0];
  assign s_axi_1_ARID = s_axi_arid[2:0];
  assign s_axi_1_ARLEN = s_axi_arlen[7:0];
  assign s_axi_1_ARLOCK = s_axi_arlock[0];
  assign s_axi_1_ARPROT = s_axi_arprot[2:0];
  assign s_axi_1_ARQOS = s_axi_arqos[3:0];
  assign s_axi_1_ARUSER = s_axi_aruser[1023:0];
  assign s_axi_1_ARVALID = s_axi_arvalid;
  assign s_axi_1_AWADDR = s_axi_awaddr[9:0];
  assign s_axi_1_AWCACHE = s_axi_awcache[3:0];
  assign s_axi_1_AWID = s_axi_awid[2:0];
  assign s_axi_1_AWLEN = s_axi_awlen[7:0];
  assign s_axi_1_AWLOCK = s_axi_awlock[0];
  assign s_axi_1_AWPROT = s_axi_awprot[2:0];
  assign s_axi_1_AWQOS = s_axi_awqos[3:0];
  assign s_axi_1_AWUSER = s_axi_awuser[1023:0];
  assign s_axi_1_AWVALID = s_axi_awvalid;
  assign s_axi_1_BREADY = s_axi_bready;
  assign s_axi_1_RREADY = s_axi_rready;
  assign s_axi_1_WDATA = s_axi_wdata[31:0];
  assign s_axi_1_WLAST = s_axi_wlast;
  assign s_axi_1_WSTRB = s_axi_wstrb[3:0];
  assign s_axi_1_WUSER = s_axi_wuser[1023:0];
  assign s_axi_1_WVALID = s_axi_wvalid;
  assign s_axi_arready = s_axi_1_ARREADY;
  assign s_axi_awready = s_axi_1_AWREADY;
  assign s_axi_bid[2:0] = s_axi_1_BID;
  assign s_axi_bresp[1:0] = s_axi_1_BRESP;
  assign s_axi_buser[1023:0] = s_axi_1_BUSER;
  assign s_axi_bvalid = s_axi_1_BVALID;
  assign s_axi_rdata[31:0] = s_axi_1_RDATA;
  assign s_axi_rid[2:0] = s_axi_1_RID;
  assign s_axi_rlast = s_axi_1_RLAST;
  assign s_axi_rresp[1:0] = s_axi_1_RRESP;
  assign s_axi_ruser[1023:0] = s_axi_1_RUSER;
  assign s_axi_rvalid = s_axi_1_RVALID;
  assign s_axi_wready = s_axi_1_WREADY;
  bd_afc3_m44e_0 m44_exit
       (.aclk(aclk_1),
        .aresetn(aresetn_1),
        .m_axi_araddr(m44_exit_M_AXI_ARADDR),
        .m_axi_arprot(m44_exit_M_AXI_ARPROT),
        .m_axi_arready(m44_exit_M_AXI_ARREADY),
        .m_axi_arvalid(m44_exit_M_AXI_ARVALID),
        .m_axi_awaddr(m44_exit_M_AXI_AWADDR),
        .m_axi_awprot(m44_exit_M_AXI_AWPROT),
        .m_axi_awready(m44_exit_M_AXI_AWREADY),
        .m_axi_awvalid(m44_exit_M_AXI_AWVALID),
        .m_axi_bready(m44_exit_M_AXI_BREADY),
        .m_axi_bresp(m44_exit_M_AXI_BRESP),
        .m_axi_bvalid(m44_exit_M_AXI_BVALID),
        .m_axi_rdata(m44_exit_M_AXI_RDATA),
        .m_axi_rready(m44_exit_M_AXI_RREADY),
        .m_axi_rresp(m44_exit_M_AXI_RRESP),
        .m_axi_rvalid(m44_exit_M_AXI_RVALID),
        .m_axi_wdata(m44_exit_M_AXI_WDATA),
        .m_axi_wready(m44_exit_M_AXI_WREADY),
        .m_axi_wstrb(m44_exit_M_AXI_WSTRB),
        .m_axi_wvalid(m44_exit_M_AXI_WVALID),
        .s_axi_araddr(s_axi_1_ARADDR),
        .s_axi_arcache(s_axi_1_ARCACHE),
        .s_axi_arid(s_axi_1_ARID),
        .s_axi_arlen(s_axi_1_ARLEN),
        .s_axi_arlock(s_axi_1_ARLOCK),
        .s_axi_arprot(s_axi_1_ARPROT),
        .s_axi_arqos(s_axi_1_ARQOS),
        .s_axi_arready(s_axi_1_ARREADY),
        .s_axi_aruser(s_axi_1_ARUSER),
        .s_axi_arvalid(s_axi_1_ARVALID),
        .s_axi_awaddr(s_axi_1_AWADDR),
        .s_axi_awcache(s_axi_1_AWCACHE),
        .s_axi_awid(s_axi_1_AWID),
        .s_axi_awlen(s_axi_1_AWLEN),
        .s_axi_awlock(s_axi_1_AWLOCK),
        .s_axi_awprot(s_axi_1_AWPROT),
        .s_axi_awqos(s_axi_1_AWQOS),
        .s_axi_awready(s_axi_1_AWREADY),
        .s_axi_awuser(s_axi_1_AWUSER),
        .s_axi_awvalid(s_axi_1_AWVALID),
        .s_axi_bid(s_axi_1_BID),
        .s_axi_bready(s_axi_1_BREADY),
        .s_axi_bresp(s_axi_1_BRESP),
        .s_axi_buser(s_axi_1_BUSER),
        .s_axi_bvalid(s_axi_1_BVALID),
        .s_axi_rdata(s_axi_1_RDATA),
        .s_axi_rid(s_axi_1_RID),
        .s_axi_rlast(s_axi_1_RLAST),
        .s_axi_rready(s_axi_1_RREADY),
        .s_axi_rresp(s_axi_1_RRESP),
        .s_axi_ruser(s_axi_1_RUSER),
        .s_axi_rvalid(s_axi_1_RVALID),
        .s_axi_wdata(s_axi_1_WDATA),
        .s_axi_wlast(s_axi_1_WLAST),
        .s_axi_wready(s_axi_1_WREADY),
        .s_axi_wstrb(s_axi_1_WSTRB),
        .s_axi_wuser(s_axi_1_WUSER),
        .s_axi_wvalid(s_axi_1_WVALID));
endmodule

module m44_nodes_imp_CTQIYB
   (M_SC_AR_info,
    M_SC_AR_payld,
    M_SC_AR_recv,
    M_SC_AR_req,
    M_SC_AR_send,
    M_SC_AW_info,
    M_SC_AW_payld,
    M_SC_AW_recv,
    M_SC_AW_req,
    M_SC_AW_send,
    M_SC_B_info,
    M_SC_B_payld,
    M_SC_B_recv,
    M_SC_B_req,
    M_SC_B_send,
    M_SC_R_info,
    M_SC_R_payld,
    M_SC_R_recv,
    M_SC_R_req,
    M_SC_R_send,
    M_SC_W_info,
    M_SC_W_payld,
    M_SC_W_recv,
    M_SC_W_req,
    M_SC_W_send,
    S_SC_AR_info,
    S_SC_AR_payld,
    S_SC_AR_recv,
    S_SC_AR_req,
    S_SC_AR_send,
    S_SC_AW_info,
    S_SC_AW_payld,
    S_SC_AW_recv,
    S_SC_AW_req,
    S_SC_AW_send,
    S_SC_B_info,
    S_SC_B_payld,
    S_SC_B_recv,
    S_SC_B_req,
    S_SC_B_send,
    S_SC_R_info,
    S_SC_R_payld,
    S_SC_R_recv,
    S_SC_R_req,
    S_SC_R_send,
    S_SC_W_info,
    S_SC_W_payld,
    S_SC_W_recv,
    S_SC_W_req,
    S_SC_W_send,
    m_axi_aclk,
    m_axi_aresetn,
    s_axi_aclk,
    s_axi_aresetn);
  output [0:0]M_SC_AR_info;
  output [181:0]M_SC_AR_payld;
  input [0:0]M_SC_AR_recv;
  output [0:0]M_SC_AR_req;
  output [0:0]M_SC_AR_send;
  output [0:0]M_SC_AW_info;
  output [181:0]M_SC_AW_payld;
  input [0:0]M_SC_AW_recv;
  output [0:0]M_SC_AW_req;
  output [0:0]M_SC_AW_send;
  output [0:0]M_SC_B_info;
  output [8:0]M_SC_B_payld;
  input [0:0]M_SC_B_recv;
  output [0:0]M_SC_B_req;
  output [0:0]M_SC_B_send;
  output [0:0]M_SC_R_info;
  output [54:0]M_SC_R_payld;
  input [0:0]M_SC_R_recv;
  output [0:0]M_SC_R_req;
  output [0:0]M_SC_R_send;
  output [0:0]M_SC_W_info;
  output [68:0]M_SC_W_payld;
  input [0:0]M_SC_W_recv;
  output [0:0]M_SC_W_req;
  output [0:0]M_SC_W_send;
  input [0:0]S_SC_AR_info;
  input [181:0]S_SC_AR_payld;
  output [0:0]S_SC_AR_recv;
  input [0:0]S_SC_AR_req;
  input [0:0]S_SC_AR_send;
  input [0:0]S_SC_AW_info;
  input [181:0]S_SC_AW_payld;
  output [0:0]S_SC_AW_recv;
  input [0:0]S_SC_AW_req;
  input [0:0]S_SC_AW_send;
  input [0:0]S_SC_B_info;
  input [8:0]S_SC_B_payld;
  output [0:0]S_SC_B_recv;
  input [0:0]S_SC_B_req;
  input [0:0]S_SC_B_send;
  input [0:0]S_SC_R_info;
  input [54:0]S_SC_R_payld;
  output [0:0]S_SC_R_recv;
  input [0:0]S_SC_R_req;
  input [0:0]S_SC_R_send;
  input [0:0]S_SC_W_info;
  input [68:0]S_SC_W_payld;
  output [0:0]S_SC_W_recv;
  input [0:0]S_SC_W_req;
  input [0:0]S_SC_W_send;
  input m_axi_aclk;
  input m_axi_aresetn;
  input s_axi_aclk;
  input s_axi_aresetn;

  wire [0:0]S_SC_AR_1_INFO;
  wire [181:0]S_SC_AR_1_PAYLD;
  wire [0:0]S_SC_AR_1_RECV;
  wire [0:0]S_SC_AR_1_REQ;
  wire [0:0]S_SC_AR_1_SEND;
  wire [0:0]S_SC_AW_1_INFO;
  wire [181:0]S_SC_AW_1_PAYLD;
  wire [0:0]S_SC_AW_1_RECV;
  wire [0:0]S_SC_AW_1_REQ;
  wire [0:0]S_SC_AW_1_SEND;
  wire [0:0]S_SC_B_1_INFO;
  wire [8:0]S_SC_B_1_PAYLD;
  wire [0:0]S_SC_B_1_RECV;
  wire [0:0]S_SC_B_1_REQ;
  wire [0:0]S_SC_B_1_SEND;
  wire [0:0]S_SC_R_1_INFO;
  wire [54:0]S_SC_R_1_PAYLD;
  wire [0:0]S_SC_R_1_RECV;
  wire [0:0]S_SC_R_1_REQ;
  wire [0:0]S_SC_R_1_SEND;
  wire [0:0]S_SC_W_1_INFO;
  wire [68:0]S_SC_W_1_PAYLD;
  wire [0:0]S_SC_W_1_RECV;
  wire [0:0]S_SC_W_1_REQ;
  wire [0:0]S_SC_W_1_SEND;
  wire [0:0]m44_ar_node_M_SC_INFO;
  wire [181:0]m44_ar_node_M_SC_PAYLD;
  wire [0:0]m44_ar_node_M_SC_RECV;
  wire [0:0]m44_ar_node_M_SC_REQ;
  wire [0:0]m44_ar_node_M_SC_SEND;
  wire [0:0]m44_aw_node_M_SC_INFO;
  wire [181:0]m44_aw_node_M_SC_PAYLD;
  wire [0:0]m44_aw_node_M_SC_RECV;
  wire [0:0]m44_aw_node_M_SC_REQ;
  wire [0:0]m44_aw_node_M_SC_SEND;
  wire [0:0]m44_b_node_M_SC_INFO;
  wire [8:0]m44_b_node_M_SC_PAYLD;
  wire [0:0]m44_b_node_M_SC_RECV;
  wire [0:0]m44_b_node_M_SC_REQ;
  wire [0:0]m44_b_node_M_SC_SEND;
  wire [0:0]m44_r_node_M_SC_INFO;
  wire [54:0]m44_r_node_M_SC_PAYLD;
  wire [0:0]m44_r_node_M_SC_RECV;
  wire [0:0]m44_r_node_M_SC_REQ;
  wire [0:0]m44_r_node_M_SC_SEND;
  wire [0:0]m44_w_node_M_SC_INFO;
  wire [68:0]m44_w_node_M_SC_PAYLD;
  wire [0:0]m44_w_node_M_SC_RECV;
  wire [0:0]m44_w_node_M_SC_REQ;
  wire [0:0]m44_w_node_M_SC_SEND;
  wire m_axi_aclk_1;
  wire m_axi_aresetn_1;
  wire s_axi_aclk_1;
  wire s_axi_aresetn_1;

  assign M_SC_AR_info[0] = m44_ar_node_M_SC_INFO;
  assign M_SC_AR_payld[181:0] = m44_ar_node_M_SC_PAYLD;
  assign M_SC_AR_req[0] = m44_ar_node_M_SC_REQ;
  assign M_SC_AR_send[0] = m44_ar_node_M_SC_SEND;
  assign M_SC_AW_info[0] = m44_aw_node_M_SC_INFO;
  assign M_SC_AW_payld[181:0] = m44_aw_node_M_SC_PAYLD;
  assign M_SC_AW_req[0] = m44_aw_node_M_SC_REQ;
  assign M_SC_AW_send[0] = m44_aw_node_M_SC_SEND;
  assign M_SC_B_info[0] = m44_b_node_M_SC_INFO;
  assign M_SC_B_payld[8:0] = m44_b_node_M_SC_PAYLD;
  assign M_SC_B_req[0] = m44_b_node_M_SC_REQ;
  assign M_SC_B_send[0] = m44_b_node_M_SC_SEND;
  assign M_SC_R_info[0] = m44_r_node_M_SC_INFO;
  assign M_SC_R_payld[54:0] = m44_r_node_M_SC_PAYLD;
  assign M_SC_R_req[0] = m44_r_node_M_SC_REQ;
  assign M_SC_R_send[0] = m44_r_node_M_SC_SEND;
  assign M_SC_W_info[0] = m44_w_node_M_SC_INFO;
  assign M_SC_W_payld[68:0] = m44_w_node_M_SC_PAYLD;
  assign M_SC_W_req[0] = m44_w_node_M_SC_REQ;
  assign M_SC_W_send[0] = m44_w_node_M_SC_SEND;
  assign S_SC_AR_1_INFO = S_SC_AR_info[0];
  assign S_SC_AR_1_PAYLD = S_SC_AR_payld[181:0];
  assign S_SC_AR_1_REQ = S_SC_AR_req[0];
  assign S_SC_AR_1_SEND = S_SC_AR_send[0];
  assign S_SC_AR_recv[0] = S_SC_AR_1_RECV;
  assign S_SC_AW_1_INFO = S_SC_AW_info[0];
  assign S_SC_AW_1_PAYLD = S_SC_AW_payld[181:0];
  assign S_SC_AW_1_REQ = S_SC_AW_req[0];
  assign S_SC_AW_1_SEND = S_SC_AW_send[0];
  assign S_SC_AW_recv[0] = S_SC_AW_1_RECV;
  assign S_SC_B_1_INFO = S_SC_B_info[0];
  assign S_SC_B_1_PAYLD = S_SC_B_payld[8:0];
  assign S_SC_B_1_REQ = S_SC_B_req[0];
  assign S_SC_B_1_SEND = S_SC_B_send[0];
  assign S_SC_B_recv[0] = S_SC_B_1_RECV;
  assign S_SC_R_1_INFO = S_SC_R_info[0];
  assign S_SC_R_1_PAYLD = S_SC_R_payld[54:0];
  assign S_SC_R_1_REQ = S_SC_R_req[0];
  assign S_SC_R_1_SEND = S_SC_R_send[0];
  assign S_SC_R_recv[0] = S_SC_R_1_RECV;
  assign S_SC_W_1_INFO = S_SC_W_info[0];
  assign S_SC_W_1_PAYLD = S_SC_W_payld[68:0];
  assign S_SC_W_1_REQ = S_SC_W_req[0];
  assign S_SC_W_1_SEND = S_SC_W_send[0];
  assign S_SC_W_recv[0] = S_SC_W_1_RECV;
  assign m44_ar_node_M_SC_RECV = M_SC_AR_recv[0];
  assign m44_aw_node_M_SC_RECV = M_SC_AW_recv[0];
  assign m44_b_node_M_SC_RECV = M_SC_B_recv[0];
  assign m44_r_node_M_SC_RECV = M_SC_R_recv[0];
  assign m44_w_node_M_SC_RECV = M_SC_W_recv[0];
  assign m_axi_aclk_1 = m_axi_aclk;
  assign m_axi_aresetn_1 = m_axi_aresetn;
  assign s_axi_aclk_1 = s_axi_aclk;
  assign s_axi_aresetn_1 = s_axi_aresetn;
  bd_afc3_m44arn_0 m44_ar_node
       (.m_sc_aclk(m_axi_aclk_1),
        .m_sc_aresetn(m_axi_aresetn_1),
        .m_sc_info(m44_ar_node_M_SC_INFO),
        .m_sc_payld(m44_ar_node_M_SC_PAYLD),
        .m_sc_recv(m44_ar_node_M_SC_RECV),
        .m_sc_req(m44_ar_node_M_SC_REQ),
        .m_sc_send(m44_ar_node_M_SC_SEND),
        .s_sc_aclk(s_axi_aclk_1),
        .s_sc_aresetn(s_axi_aresetn_1),
        .s_sc_info(S_SC_AR_1_INFO),
        .s_sc_payld(S_SC_AR_1_PAYLD),
        .s_sc_recv(S_SC_AR_1_RECV),
        .s_sc_req(S_SC_AR_1_REQ),
        .s_sc_send(S_SC_AR_1_SEND));
  bd_afc3_m44awn_0 m44_aw_node
       (.m_sc_aclk(m_axi_aclk_1),
        .m_sc_aresetn(m_axi_aresetn_1),
        .m_sc_info(m44_aw_node_M_SC_INFO),
        .m_sc_payld(m44_aw_node_M_SC_PAYLD),
        .m_sc_recv(m44_aw_node_M_SC_RECV),
        .m_sc_req(m44_aw_node_M_SC_REQ),
        .m_sc_send(m44_aw_node_M_SC_SEND),
        .s_sc_aclk(s_axi_aclk_1),
        .s_sc_aresetn(s_axi_aresetn_1),
        .s_sc_info(S_SC_AW_1_INFO),
        .s_sc_payld(S_SC_AW_1_PAYLD),
        .s_sc_recv(S_SC_AW_1_RECV),
        .s_sc_req(S_SC_AW_1_REQ),
        .s_sc_send(S_SC_AW_1_SEND));
  bd_afc3_m44bn_0 m44_b_node
       (.m_sc_aclk(s_axi_aclk_1),
        .m_sc_aresetn(s_axi_aresetn_1),
        .m_sc_info(m44_b_node_M_SC_INFO),
        .m_sc_payld(m44_b_node_M_SC_PAYLD),
        .m_sc_recv(m44_b_node_M_SC_RECV),
        .m_sc_req(m44_b_node_M_SC_REQ),
        .m_sc_send(m44_b_node_M_SC_SEND),
        .s_sc_aclk(m_axi_aclk_1),
        .s_sc_aresetn(m_axi_aresetn_1),
        .s_sc_info(S_SC_B_1_INFO),
        .s_sc_payld(S_SC_B_1_PAYLD),
        .s_sc_recv(S_SC_B_1_RECV),
        .s_sc_req(S_SC_B_1_REQ),
        .s_sc_send(S_SC_B_1_SEND));
  bd_afc3_m44rn_0 m44_r_node
       (.m_sc_aclk(s_axi_aclk_1),
        .m_sc_aresetn(s_axi_aresetn_1),
        .m_sc_info(m44_r_node_M_SC_INFO),
        .m_sc_payld(m44_r_node_M_SC_PAYLD),
        .m_sc_recv(m44_r_node_M_SC_RECV),
        .m_sc_req(m44_r_node_M_SC_REQ),
        .m_sc_send(m44_r_node_M_SC_SEND),
        .s_sc_aclk(m_axi_aclk_1),
        .s_sc_aresetn(m_axi_aresetn_1),
        .s_sc_info(S_SC_R_1_INFO),
        .s_sc_payld(S_SC_R_1_PAYLD),
        .s_sc_recv(S_SC_R_1_RECV),
        .s_sc_req(S_SC_R_1_REQ),
        .s_sc_send(S_SC_R_1_SEND));
  bd_afc3_m44wn_0 m44_w_node
       (.m_sc_aclk(m_axi_aclk_1),
        .m_sc_aresetn(m_axi_aresetn_1),
        .m_sc_info(m44_w_node_M_SC_INFO),
        .m_sc_payld(m44_w_node_M_SC_PAYLD),
        .m_sc_recv(m44_w_node_M_SC_RECV),
        .m_sc_req(m44_w_node_M_SC_REQ),
        .m_sc_send(m44_w_node_M_SC_SEND),
        .s_sc_aclk(s_axi_aclk_1),
        .s_sc_aresetn(s_axi_aresetn_1),
        .s_sc_info(S_SC_W_1_INFO),
        .s_sc_payld(S_SC_W_1_PAYLD),
        .s_sc_recv(S_SC_W_1_RECV),
        .s_sc_req(S_SC_W_1_REQ),
        .s_sc_send(S_SC_W_1_SEND));
endmodule

module m45_exit_pipeline_imp_1A2HD2S
   (aclk,
    aresetn,
    m_axi_araddr,
    m_axi_arprot,
    m_axi_arready,
    m_axi_arvalid,
    m_axi_awaddr,
    m_axi_awprot,
    m_axi_awready,
    m_axi_awvalid,
    m_axi_bready,
    m_axi_bresp,
    m_axi_bvalid,
    m_axi_rdata,
    m_axi_rready,
    m_axi_rresp,
    m_axi_rvalid,
    m_axi_wdata,
    m_axi_wready,
    m_axi_wstrb,
    m_axi_wvalid,
    s_axi_araddr,
    s_axi_arcache,
    s_axi_arid,
    s_axi_arlen,
    s_axi_arlock,
    s_axi_arprot,
    s_axi_arqos,
    s_axi_arready,
    s_axi_aruser,
    s_axi_arvalid,
    s_axi_awaddr,
    s_axi_awcache,
    s_axi_awid,
    s_axi_awlen,
    s_axi_awlock,
    s_axi_awprot,
    s_axi_awqos,
    s_axi_awready,
    s_axi_awuser,
    s_axi_awvalid,
    s_axi_bid,
    s_axi_bready,
    s_axi_bresp,
    s_axi_buser,
    s_axi_bvalid,
    s_axi_rdata,
    s_axi_rid,
    s_axi_rlast,
    s_axi_rready,
    s_axi_rresp,
    s_axi_ruser,
    s_axi_rvalid,
    s_axi_wdata,
    s_axi_wlast,
    s_axi_wready,
    s_axi_wstrb,
    s_axi_wuser,
    s_axi_wvalid);
  input aclk;
  input aresetn;
  output [9:0]m_axi_araddr;
  output [2:0]m_axi_arprot;
  input m_axi_arready;
  output m_axi_arvalid;
  output [9:0]m_axi_awaddr;
  output [2:0]m_axi_awprot;
  input m_axi_awready;
  output m_axi_awvalid;
  output m_axi_bready;
  input [1:0]m_axi_bresp;
  input m_axi_bvalid;
  input [31:0]m_axi_rdata;
  output m_axi_rready;
  input [1:0]m_axi_rresp;
  input m_axi_rvalid;
  output [31:0]m_axi_wdata;
  input m_axi_wready;
  output [3:0]m_axi_wstrb;
  output m_axi_wvalid;
  input [9:0]s_axi_araddr;
  input [3:0]s_axi_arcache;
  input [2:0]s_axi_arid;
  input [7:0]s_axi_arlen;
  input [0:0]s_axi_arlock;
  input [2:0]s_axi_arprot;
  input [3:0]s_axi_arqos;
  output s_axi_arready;
  input [1023:0]s_axi_aruser;
  input s_axi_arvalid;
  input [9:0]s_axi_awaddr;
  input [3:0]s_axi_awcache;
  input [2:0]s_axi_awid;
  input [7:0]s_axi_awlen;
  input [0:0]s_axi_awlock;
  input [2:0]s_axi_awprot;
  input [3:0]s_axi_awqos;
  output s_axi_awready;
  input [1023:0]s_axi_awuser;
  input s_axi_awvalid;
  output [2:0]s_axi_bid;
  input s_axi_bready;
  output [1:0]s_axi_bresp;
  output [1023:0]s_axi_buser;
  output s_axi_bvalid;
  output [31:0]s_axi_rdata;
  output [2:0]s_axi_rid;
  output s_axi_rlast;
  input s_axi_rready;
  output [1:0]s_axi_rresp;
  output [1023:0]s_axi_ruser;
  output s_axi_rvalid;
  input [31:0]s_axi_wdata;
  input s_axi_wlast;
  output s_axi_wready;
  input [3:0]s_axi_wstrb;
  input [1023:0]s_axi_wuser;
  input s_axi_wvalid;

  wire aclk_1;
  wire aresetn_1;
  wire [9:0]m45_exit_M_AXI_ARADDR;
  wire [2:0]m45_exit_M_AXI_ARPROT;
  wire m45_exit_M_AXI_ARREADY;
  wire m45_exit_M_AXI_ARVALID;
  wire [9:0]m45_exit_M_AXI_AWADDR;
  wire [2:0]m45_exit_M_AXI_AWPROT;
  wire m45_exit_M_AXI_AWREADY;
  wire m45_exit_M_AXI_AWVALID;
  wire m45_exit_M_AXI_BREADY;
  wire [1:0]m45_exit_M_AXI_BRESP;
  wire m45_exit_M_AXI_BVALID;
  wire [31:0]m45_exit_M_AXI_RDATA;
  wire m45_exit_M_AXI_RREADY;
  wire [1:0]m45_exit_M_AXI_RRESP;
  wire m45_exit_M_AXI_RVALID;
  wire [31:0]m45_exit_M_AXI_WDATA;
  wire m45_exit_M_AXI_WREADY;
  wire [3:0]m45_exit_M_AXI_WSTRB;
  wire m45_exit_M_AXI_WVALID;
  wire [9:0]s_axi_1_ARADDR;
  wire [3:0]s_axi_1_ARCACHE;
  wire [2:0]s_axi_1_ARID;
  wire [7:0]s_axi_1_ARLEN;
  wire [0:0]s_axi_1_ARLOCK;
  wire [2:0]s_axi_1_ARPROT;
  wire [3:0]s_axi_1_ARQOS;
  wire s_axi_1_ARREADY;
  wire [1023:0]s_axi_1_ARUSER;
  wire s_axi_1_ARVALID;
  wire [9:0]s_axi_1_AWADDR;
  wire [3:0]s_axi_1_AWCACHE;
  wire [2:0]s_axi_1_AWID;
  wire [7:0]s_axi_1_AWLEN;
  wire [0:0]s_axi_1_AWLOCK;
  wire [2:0]s_axi_1_AWPROT;
  wire [3:0]s_axi_1_AWQOS;
  wire s_axi_1_AWREADY;
  wire [1023:0]s_axi_1_AWUSER;
  wire s_axi_1_AWVALID;
  wire [2:0]s_axi_1_BID;
  wire s_axi_1_BREADY;
  wire [1:0]s_axi_1_BRESP;
  wire [1023:0]s_axi_1_BUSER;
  wire s_axi_1_BVALID;
  wire [31:0]s_axi_1_RDATA;
  wire [2:0]s_axi_1_RID;
  wire s_axi_1_RLAST;
  wire s_axi_1_RREADY;
  wire [1:0]s_axi_1_RRESP;
  wire [1023:0]s_axi_1_RUSER;
  wire s_axi_1_RVALID;
  wire [31:0]s_axi_1_WDATA;
  wire s_axi_1_WLAST;
  wire s_axi_1_WREADY;
  wire [3:0]s_axi_1_WSTRB;
  wire [1023:0]s_axi_1_WUSER;
  wire s_axi_1_WVALID;

  assign aclk_1 = aclk;
  assign aresetn_1 = aresetn;
  assign m45_exit_M_AXI_ARREADY = m_axi_arready;
  assign m45_exit_M_AXI_AWREADY = m_axi_awready;
  assign m45_exit_M_AXI_BRESP = m_axi_bresp[1:0];
  assign m45_exit_M_AXI_BVALID = m_axi_bvalid;
  assign m45_exit_M_AXI_RDATA = m_axi_rdata[31:0];
  assign m45_exit_M_AXI_RRESP = m_axi_rresp[1:0];
  assign m45_exit_M_AXI_RVALID = m_axi_rvalid;
  assign m45_exit_M_AXI_WREADY = m_axi_wready;
  assign m_axi_araddr[9:0] = m45_exit_M_AXI_ARADDR;
  assign m_axi_arprot[2:0] = m45_exit_M_AXI_ARPROT;
  assign m_axi_arvalid = m45_exit_M_AXI_ARVALID;
  assign m_axi_awaddr[9:0] = m45_exit_M_AXI_AWADDR;
  assign m_axi_awprot[2:0] = m45_exit_M_AXI_AWPROT;
  assign m_axi_awvalid = m45_exit_M_AXI_AWVALID;
  assign m_axi_bready = m45_exit_M_AXI_BREADY;
  assign m_axi_rready = m45_exit_M_AXI_RREADY;
  assign m_axi_wdata[31:0] = m45_exit_M_AXI_WDATA;
  assign m_axi_wstrb[3:0] = m45_exit_M_AXI_WSTRB;
  assign m_axi_wvalid = m45_exit_M_AXI_WVALID;
  assign s_axi_1_ARADDR = s_axi_araddr[9:0];
  assign s_axi_1_ARCACHE = s_axi_arcache[3:0];
  assign s_axi_1_ARID = s_axi_arid[2:0];
  assign s_axi_1_ARLEN = s_axi_arlen[7:0];
  assign s_axi_1_ARLOCK = s_axi_arlock[0];
  assign s_axi_1_ARPROT = s_axi_arprot[2:0];
  assign s_axi_1_ARQOS = s_axi_arqos[3:0];
  assign s_axi_1_ARUSER = s_axi_aruser[1023:0];
  assign s_axi_1_ARVALID = s_axi_arvalid;
  assign s_axi_1_AWADDR = s_axi_awaddr[9:0];
  assign s_axi_1_AWCACHE = s_axi_awcache[3:0];
  assign s_axi_1_AWID = s_axi_awid[2:0];
  assign s_axi_1_AWLEN = s_axi_awlen[7:0];
  assign s_axi_1_AWLOCK = s_axi_awlock[0];
  assign s_axi_1_AWPROT = s_axi_awprot[2:0];
  assign s_axi_1_AWQOS = s_axi_awqos[3:0];
  assign s_axi_1_AWUSER = s_axi_awuser[1023:0];
  assign s_axi_1_AWVALID = s_axi_awvalid;
  assign s_axi_1_BREADY = s_axi_bready;
  assign s_axi_1_RREADY = s_axi_rready;
  assign s_axi_1_WDATA = s_axi_wdata[31:0];
  assign s_axi_1_WLAST = s_axi_wlast;
  assign s_axi_1_WSTRB = s_axi_wstrb[3:0];
  assign s_axi_1_WUSER = s_axi_wuser[1023:0];
  assign s_axi_1_WVALID = s_axi_wvalid;
  assign s_axi_arready = s_axi_1_ARREADY;
  assign s_axi_awready = s_axi_1_AWREADY;
  assign s_axi_bid[2:0] = s_axi_1_BID;
  assign s_axi_bresp[1:0] = s_axi_1_BRESP;
  assign s_axi_buser[1023:0] = s_axi_1_BUSER;
  assign s_axi_bvalid = s_axi_1_BVALID;
  assign s_axi_rdata[31:0] = s_axi_1_RDATA;
  assign s_axi_rid[2:0] = s_axi_1_RID;
  assign s_axi_rlast = s_axi_1_RLAST;
  assign s_axi_rresp[1:0] = s_axi_1_RRESP;
  assign s_axi_ruser[1023:0] = s_axi_1_RUSER;
  assign s_axi_rvalid = s_axi_1_RVALID;
  assign s_axi_wready = s_axi_1_WREADY;
  bd_afc3_m45e_0 m45_exit
       (.aclk(aclk_1),
        .aresetn(aresetn_1),
        .m_axi_araddr(m45_exit_M_AXI_ARADDR),
        .m_axi_arprot(m45_exit_M_AXI_ARPROT),
        .m_axi_arready(m45_exit_M_AXI_ARREADY),
        .m_axi_arvalid(m45_exit_M_AXI_ARVALID),
        .m_axi_awaddr(m45_exit_M_AXI_AWADDR),
        .m_axi_awprot(m45_exit_M_AXI_AWPROT),
        .m_axi_awready(m45_exit_M_AXI_AWREADY),
        .m_axi_awvalid(m45_exit_M_AXI_AWVALID),
        .m_axi_bready(m45_exit_M_AXI_BREADY),
        .m_axi_bresp(m45_exit_M_AXI_BRESP),
        .m_axi_bvalid(m45_exit_M_AXI_BVALID),
        .m_axi_rdata(m45_exit_M_AXI_RDATA),
        .m_axi_rready(m45_exit_M_AXI_RREADY),
        .m_axi_rresp(m45_exit_M_AXI_RRESP),
        .m_axi_rvalid(m45_exit_M_AXI_RVALID),
        .m_axi_wdata(m45_exit_M_AXI_WDATA),
        .m_axi_wready(m45_exit_M_AXI_WREADY),
        .m_axi_wstrb(m45_exit_M_AXI_WSTRB),
        .m_axi_wvalid(m45_exit_M_AXI_WVALID),
        .s_axi_araddr(s_axi_1_ARADDR),
        .s_axi_arcache(s_axi_1_ARCACHE),
        .s_axi_arid(s_axi_1_ARID),
        .s_axi_arlen(s_axi_1_ARLEN),
        .s_axi_arlock(s_axi_1_ARLOCK),
        .s_axi_arprot(s_axi_1_ARPROT),
        .s_axi_arqos(s_axi_1_ARQOS),
        .s_axi_arready(s_axi_1_ARREADY),
        .s_axi_aruser(s_axi_1_ARUSER),
        .s_axi_arvalid(s_axi_1_ARVALID),
        .s_axi_awaddr(s_axi_1_AWADDR),
        .s_axi_awcache(s_axi_1_AWCACHE),
        .s_axi_awid(s_axi_1_AWID),
        .s_axi_awlen(s_axi_1_AWLEN),
        .s_axi_awlock(s_axi_1_AWLOCK),
        .s_axi_awprot(s_axi_1_AWPROT),
        .s_axi_awqos(s_axi_1_AWQOS),
        .s_axi_awready(s_axi_1_AWREADY),
        .s_axi_awuser(s_axi_1_AWUSER),
        .s_axi_awvalid(s_axi_1_AWVALID),
        .s_axi_bid(s_axi_1_BID),
        .s_axi_bready(s_axi_1_BREADY),
        .s_axi_bresp(s_axi_1_BRESP),
        .s_axi_buser(s_axi_1_BUSER),
        .s_axi_bvalid(s_axi_1_BVALID),
        .s_axi_rdata(s_axi_1_RDATA),
        .s_axi_rid(s_axi_1_RID),
        .s_axi_rlast(s_axi_1_RLAST),
        .s_axi_rready(s_axi_1_RREADY),
        .s_axi_rresp(s_axi_1_RRESP),
        .s_axi_ruser(s_axi_1_RUSER),
        .s_axi_rvalid(s_axi_1_RVALID),
        .s_axi_wdata(s_axi_1_WDATA),
        .s_axi_wlast(s_axi_1_WLAST),
        .s_axi_wready(s_axi_1_WREADY),
        .s_axi_wstrb(s_axi_1_WSTRB),
        .s_axi_wuser(s_axi_1_WUSER),
        .s_axi_wvalid(s_axi_1_WVALID));
endmodule

module m45_nodes_imp_1DQ3F9H
   (M_SC_AR_info,
    M_SC_AR_payld,
    M_SC_AR_recv,
    M_SC_AR_req,
    M_SC_AR_send,
    M_SC_AW_info,
    M_SC_AW_payld,
    M_SC_AW_recv,
    M_SC_AW_req,
    M_SC_AW_send,
    M_SC_B_info,
    M_SC_B_payld,
    M_SC_B_recv,
    M_SC_B_req,
    M_SC_B_send,
    M_SC_R_info,
    M_SC_R_payld,
    M_SC_R_recv,
    M_SC_R_req,
    M_SC_R_send,
    M_SC_W_info,
    M_SC_W_payld,
    M_SC_W_recv,
    M_SC_W_req,
    M_SC_W_send,
    S_SC_AR_info,
    S_SC_AR_payld,
    S_SC_AR_recv,
    S_SC_AR_req,
    S_SC_AR_send,
    S_SC_AW_info,
    S_SC_AW_payld,
    S_SC_AW_recv,
    S_SC_AW_req,
    S_SC_AW_send,
    S_SC_B_info,
    S_SC_B_payld,
    S_SC_B_recv,
    S_SC_B_req,
    S_SC_B_send,
    S_SC_R_info,
    S_SC_R_payld,
    S_SC_R_recv,
    S_SC_R_req,
    S_SC_R_send,
    S_SC_W_info,
    S_SC_W_payld,
    S_SC_W_recv,
    S_SC_W_req,
    S_SC_W_send,
    m_axi_aclk,
    m_axi_aresetn,
    s_axi_aclk,
    s_axi_aresetn);
  output [0:0]M_SC_AR_info;
  output [181:0]M_SC_AR_payld;
  input [0:0]M_SC_AR_recv;
  output [0:0]M_SC_AR_req;
  output [0:0]M_SC_AR_send;
  output [0:0]M_SC_AW_info;
  output [181:0]M_SC_AW_payld;
  input [0:0]M_SC_AW_recv;
  output [0:0]M_SC_AW_req;
  output [0:0]M_SC_AW_send;
  output [0:0]M_SC_B_info;
  output [8:0]M_SC_B_payld;
  input [0:0]M_SC_B_recv;
  output [0:0]M_SC_B_req;
  output [0:0]M_SC_B_send;
  output [0:0]M_SC_R_info;
  output [54:0]M_SC_R_payld;
  input [0:0]M_SC_R_recv;
  output [0:0]M_SC_R_req;
  output [0:0]M_SC_R_send;
  output [0:0]M_SC_W_info;
  output [68:0]M_SC_W_payld;
  input [0:0]M_SC_W_recv;
  output [0:0]M_SC_W_req;
  output [0:0]M_SC_W_send;
  input [0:0]S_SC_AR_info;
  input [181:0]S_SC_AR_payld;
  output [0:0]S_SC_AR_recv;
  input [0:0]S_SC_AR_req;
  input [0:0]S_SC_AR_send;
  input [0:0]S_SC_AW_info;
  input [181:0]S_SC_AW_payld;
  output [0:0]S_SC_AW_recv;
  input [0:0]S_SC_AW_req;
  input [0:0]S_SC_AW_send;
  input [0:0]S_SC_B_info;
  input [8:0]S_SC_B_payld;
  output [0:0]S_SC_B_recv;
  input [0:0]S_SC_B_req;
  input [0:0]S_SC_B_send;
  input [0:0]S_SC_R_info;
  input [54:0]S_SC_R_payld;
  output [0:0]S_SC_R_recv;
  input [0:0]S_SC_R_req;
  input [0:0]S_SC_R_send;
  input [0:0]S_SC_W_info;
  input [68:0]S_SC_W_payld;
  output [0:0]S_SC_W_recv;
  input [0:0]S_SC_W_req;
  input [0:0]S_SC_W_send;
  input m_axi_aclk;
  input m_axi_aresetn;
  input s_axi_aclk;
  input s_axi_aresetn;

  wire [0:0]S_SC_AR_1_INFO;
  wire [181:0]S_SC_AR_1_PAYLD;
  wire [0:0]S_SC_AR_1_RECV;
  wire [0:0]S_SC_AR_1_REQ;
  wire [0:0]S_SC_AR_1_SEND;
  wire [0:0]S_SC_AW_1_INFO;
  wire [181:0]S_SC_AW_1_PAYLD;
  wire [0:0]S_SC_AW_1_RECV;
  wire [0:0]S_SC_AW_1_REQ;
  wire [0:0]S_SC_AW_1_SEND;
  wire [0:0]S_SC_B_1_INFO;
  wire [8:0]S_SC_B_1_PAYLD;
  wire [0:0]S_SC_B_1_RECV;
  wire [0:0]S_SC_B_1_REQ;
  wire [0:0]S_SC_B_1_SEND;
  wire [0:0]S_SC_R_1_INFO;
  wire [54:0]S_SC_R_1_PAYLD;
  wire [0:0]S_SC_R_1_RECV;
  wire [0:0]S_SC_R_1_REQ;
  wire [0:0]S_SC_R_1_SEND;
  wire [0:0]S_SC_W_1_INFO;
  wire [68:0]S_SC_W_1_PAYLD;
  wire [0:0]S_SC_W_1_RECV;
  wire [0:0]S_SC_W_1_REQ;
  wire [0:0]S_SC_W_1_SEND;
  wire [0:0]m45_ar_node_M_SC_INFO;
  wire [181:0]m45_ar_node_M_SC_PAYLD;
  wire [0:0]m45_ar_node_M_SC_RECV;
  wire [0:0]m45_ar_node_M_SC_REQ;
  wire [0:0]m45_ar_node_M_SC_SEND;
  wire [0:0]m45_aw_node_M_SC_INFO;
  wire [181:0]m45_aw_node_M_SC_PAYLD;
  wire [0:0]m45_aw_node_M_SC_RECV;
  wire [0:0]m45_aw_node_M_SC_REQ;
  wire [0:0]m45_aw_node_M_SC_SEND;
  wire [0:0]m45_b_node_M_SC_INFO;
  wire [8:0]m45_b_node_M_SC_PAYLD;
  wire [0:0]m45_b_node_M_SC_RECV;
  wire [0:0]m45_b_node_M_SC_REQ;
  wire [0:0]m45_b_node_M_SC_SEND;
  wire [0:0]m45_r_node_M_SC_INFO;
  wire [54:0]m45_r_node_M_SC_PAYLD;
  wire [0:0]m45_r_node_M_SC_RECV;
  wire [0:0]m45_r_node_M_SC_REQ;
  wire [0:0]m45_r_node_M_SC_SEND;
  wire [0:0]m45_w_node_M_SC_INFO;
  wire [68:0]m45_w_node_M_SC_PAYLD;
  wire [0:0]m45_w_node_M_SC_RECV;
  wire [0:0]m45_w_node_M_SC_REQ;
  wire [0:0]m45_w_node_M_SC_SEND;
  wire m_axi_aclk_1;
  wire m_axi_aresetn_1;
  wire s_axi_aclk_1;
  wire s_axi_aresetn_1;

  assign M_SC_AR_info[0] = m45_ar_node_M_SC_INFO;
  assign M_SC_AR_payld[181:0] = m45_ar_node_M_SC_PAYLD;
  assign M_SC_AR_req[0] = m45_ar_node_M_SC_REQ;
  assign M_SC_AR_send[0] = m45_ar_node_M_SC_SEND;
  assign M_SC_AW_info[0] = m45_aw_node_M_SC_INFO;
  assign M_SC_AW_payld[181:0] = m45_aw_node_M_SC_PAYLD;
  assign M_SC_AW_req[0] = m45_aw_node_M_SC_REQ;
  assign M_SC_AW_send[0] = m45_aw_node_M_SC_SEND;
  assign M_SC_B_info[0] = m45_b_node_M_SC_INFO;
  assign M_SC_B_payld[8:0] = m45_b_node_M_SC_PAYLD;
  assign M_SC_B_req[0] = m45_b_node_M_SC_REQ;
  assign M_SC_B_send[0] = m45_b_node_M_SC_SEND;
  assign M_SC_R_info[0] = m45_r_node_M_SC_INFO;
  assign M_SC_R_payld[54:0] = m45_r_node_M_SC_PAYLD;
  assign M_SC_R_req[0] = m45_r_node_M_SC_REQ;
  assign M_SC_R_send[0] = m45_r_node_M_SC_SEND;
  assign M_SC_W_info[0] = m45_w_node_M_SC_INFO;
  assign M_SC_W_payld[68:0] = m45_w_node_M_SC_PAYLD;
  assign M_SC_W_req[0] = m45_w_node_M_SC_REQ;
  assign M_SC_W_send[0] = m45_w_node_M_SC_SEND;
  assign S_SC_AR_1_INFO = S_SC_AR_info[0];
  assign S_SC_AR_1_PAYLD = S_SC_AR_payld[181:0];
  assign S_SC_AR_1_REQ = S_SC_AR_req[0];
  assign S_SC_AR_1_SEND = S_SC_AR_send[0];
  assign S_SC_AR_recv[0] = S_SC_AR_1_RECV;
  assign S_SC_AW_1_INFO = S_SC_AW_info[0];
  assign S_SC_AW_1_PAYLD = S_SC_AW_payld[181:0];
  assign S_SC_AW_1_REQ = S_SC_AW_req[0];
  assign S_SC_AW_1_SEND = S_SC_AW_send[0];
  assign S_SC_AW_recv[0] = S_SC_AW_1_RECV;
  assign S_SC_B_1_INFO = S_SC_B_info[0];
  assign S_SC_B_1_PAYLD = S_SC_B_payld[8:0];
  assign S_SC_B_1_REQ = S_SC_B_req[0];
  assign S_SC_B_1_SEND = S_SC_B_send[0];
  assign S_SC_B_recv[0] = S_SC_B_1_RECV;
  assign S_SC_R_1_INFO = S_SC_R_info[0];
  assign S_SC_R_1_PAYLD = S_SC_R_payld[54:0];
  assign S_SC_R_1_REQ = S_SC_R_req[0];
  assign S_SC_R_1_SEND = S_SC_R_send[0];
  assign S_SC_R_recv[0] = S_SC_R_1_RECV;
  assign S_SC_W_1_INFO = S_SC_W_info[0];
  assign S_SC_W_1_PAYLD = S_SC_W_payld[68:0];
  assign S_SC_W_1_REQ = S_SC_W_req[0];
  assign S_SC_W_1_SEND = S_SC_W_send[0];
  assign S_SC_W_recv[0] = S_SC_W_1_RECV;
  assign m45_ar_node_M_SC_RECV = M_SC_AR_recv[0];
  assign m45_aw_node_M_SC_RECV = M_SC_AW_recv[0];
  assign m45_b_node_M_SC_RECV = M_SC_B_recv[0];
  assign m45_r_node_M_SC_RECV = M_SC_R_recv[0];
  assign m45_w_node_M_SC_RECV = M_SC_W_recv[0];
  assign m_axi_aclk_1 = m_axi_aclk;
  assign m_axi_aresetn_1 = m_axi_aresetn;
  assign s_axi_aclk_1 = s_axi_aclk;
  assign s_axi_aresetn_1 = s_axi_aresetn;
  bd_afc3_m45arn_0 m45_ar_node
       (.m_sc_aclk(m_axi_aclk_1),
        .m_sc_aresetn(m_axi_aresetn_1),
        .m_sc_info(m45_ar_node_M_SC_INFO),
        .m_sc_payld(m45_ar_node_M_SC_PAYLD),
        .m_sc_recv(m45_ar_node_M_SC_RECV),
        .m_sc_req(m45_ar_node_M_SC_REQ),
        .m_sc_send(m45_ar_node_M_SC_SEND),
        .s_sc_aclk(s_axi_aclk_1),
        .s_sc_aresetn(s_axi_aresetn_1),
        .s_sc_info(S_SC_AR_1_INFO),
        .s_sc_payld(S_SC_AR_1_PAYLD),
        .s_sc_recv(S_SC_AR_1_RECV),
        .s_sc_req(S_SC_AR_1_REQ),
        .s_sc_send(S_SC_AR_1_SEND));
  bd_afc3_m45awn_0 m45_aw_node
       (.m_sc_aclk(m_axi_aclk_1),
        .m_sc_aresetn(m_axi_aresetn_1),
        .m_sc_info(m45_aw_node_M_SC_INFO),
        .m_sc_payld(m45_aw_node_M_SC_PAYLD),
        .m_sc_recv(m45_aw_node_M_SC_RECV),
        .m_sc_req(m45_aw_node_M_SC_REQ),
        .m_sc_send(m45_aw_node_M_SC_SEND),
        .s_sc_aclk(s_axi_aclk_1),
        .s_sc_aresetn(s_axi_aresetn_1),
        .s_sc_info(S_SC_AW_1_INFO),
        .s_sc_payld(S_SC_AW_1_PAYLD),
        .s_sc_recv(S_SC_AW_1_RECV),
        .s_sc_req(S_SC_AW_1_REQ),
        .s_sc_send(S_SC_AW_1_SEND));
  bd_afc3_m45bn_0 m45_b_node
       (.m_sc_aclk(s_axi_aclk_1),
        .m_sc_aresetn(s_axi_aresetn_1),
        .m_sc_info(m45_b_node_M_SC_INFO),
        .m_sc_payld(m45_b_node_M_SC_PAYLD),
        .m_sc_recv(m45_b_node_M_SC_RECV),
        .m_sc_req(m45_b_node_M_SC_REQ),
        .m_sc_send(m45_b_node_M_SC_SEND),
        .s_sc_aclk(m_axi_aclk_1),
        .s_sc_aresetn(m_axi_aresetn_1),
        .s_sc_info(S_SC_B_1_INFO),
        .s_sc_payld(S_SC_B_1_PAYLD),
        .s_sc_recv(S_SC_B_1_RECV),
        .s_sc_req(S_SC_B_1_REQ),
        .s_sc_send(S_SC_B_1_SEND));
  bd_afc3_m45rn_0 m45_r_node
       (.m_sc_aclk(s_axi_aclk_1),
        .m_sc_aresetn(s_axi_aresetn_1),
        .m_sc_info(m45_r_node_M_SC_INFO),
        .m_sc_payld(m45_r_node_M_SC_PAYLD),
        .m_sc_recv(m45_r_node_M_SC_RECV),
        .m_sc_req(m45_r_node_M_SC_REQ),
        .m_sc_send(m45_r_node_M_SC_SEND),
        .s_sc_aclk(m_axi_aclk_1),
        .s_sc_aresetn(m_axi_aresetn_1),
        .s_sc_info(S_SC_R_1_INFO),
        .s_sc_payld(S_SC_R_1_PAYLD),
        .s_sc_recv(S_SC_R_1_RECV),
        .s_sc_req(S_SC_R_1_REQ),
        .s_sc_send(S_SC_R_1_SEND));
  bd_afc3_m45wn_0 m45_w_node
       (.m_sc_aclk(m_axi_aclk_1),
        .m_sc_aresetn(m_axi_aresetn_1),
        .m_sc_info(m45_w_node_M_SC_INFO),
        .m_sc_payld(m45_w_node_M_SC_PAYLD),
        .m_sc_recv(m45_w_node_M_SC_RECV),
        .m_sc_req(m45_w_node_M_SC_REQ),
        .m_sc_send(m45_w_node_M_SC_SEND),
        .s_sc_aclk(s_axi_aclk_1),
        .s_sc_aresetn(s_axi_aresetn_1),
        .s_sc_info(S_SC_W_1_INFO),
        .s_sc_payld(S_SC_W_1_PAYLD),
        .s_sc_recv(S_SC_W_1_RECV),
        .s_sc_req(S_SC_W_1_REQ),
        .s_sc_send(S_SC_W_1_SEND));
endmodule

module m46_exit_pipeline_imp_188N704
   (aclk,
    aresetn,
    m_axi_araddr,
    m_axi_arprot,
    m_axi_arready,
    m_axi_arvalid,
    m_axi_awaddr,
    m_axi_awprot,
    m_axi_awready,
    m_axi_awvalid,
    m_axi_bready,
    m_axi_bresp,
    m_axi_bvalid,
    m_axi_rdata,
    m_axi_rready,
    m_axi_rresp,
    m_axi_rvalid,
    m_axi_wdata,
    m_axi_wready,
    m_axi_wstrb,
    m_axi_wvalid,
    s_axi_araddr,
    s_axi_arcache,
    s_axi_arid,
    s_axi_arlen,
    s_axi_arlock,
    s_axi_arprot,
    s_axi_arqos,
    s_axi_arready,
    s_axi_aruser,
    s_axi_arvalid,
    s_axi_awaddr,
    s_axi_awcache,
    s_axi_awid,
    s_axi_awlen,
    s_axi_awlock,
    s_axi_awprot,
    s_axi_awqos,
    s_axi_awready,
    s_axi_awuser,
    s_axi_awvalid,
    s_axi_bid,
    s_axi_bready,
    s_axi_bresp,
    s_axi_buser,
    s_axi_bvalid,
    s_axi_rdata,
    s_axi_rid,
    s_axi_rlast,
    s_axi_rready,
    s_axi_rresp,
    s_axi_ruser,
    s_axi_rvalid,
    s_axi_wdata,
    s_axi_wlast,
    s_axi_wready,
    s_axi_wstrb,
    s_axi_wuser,
    s_axi_wvalid);
  input aclk;
  input aresetn;
  output [9:0]m_axi_araddr;
  output [2:0]m_axi_arprot;
  input m_axi_arready;
  output m_axi_arvalid;
  output [9:0]m_axi_awaddr;
  output [2:0]m_axi_awprot;
  input m_axi_awready;
  output m_axi_awvalid;
  output m_axi_bready;
  input [1:0]m_axi_bresp;
  input m_axi_bvalid;
  input [31:0]m_axi_rdata;
  output m_axi_rready;
  input [1:0]m_axi_rresp;
  input m_axi_rvalid;
  output [31:0]m_axi_wdata;
  input m_axi_wready;
  output [3:0]m_axi_wstrb;
  output m_axi_wvalid;
  input [9:0]s_axi_araddr;
  input [3:0]s_axi_arcache;
  input [2:0]s_axi_arid;
  input [7:0]s_axi_arlen;
  input [0:0]s_axi_arlock;
  input [2:0]s_axi_arprot;
  input [3:0]s_axi_arqos;
  output s_axi_arready;
  input [1023:0]s_axi_aruser;
  input s_axi_arvalid;
  input [9:0]s_axi_awaddr;
  input [3:0]s_axi_awcache;
  input [2:0]s_axi_awid;
  input [7:0]s_axi_awlen;
  input [0:0]s_axi_awlock;
  input [2:0]s_axi_awprot;
  input [3:0]s_axi_awqos;
  output s_axi_awready;
  input [1023:0]s_axi_awuser;
  input s_axi_awvalid;
  output [2:0]s_axi_bid;
  input s_axi_bready;
  output [1:0]s_axi_bresp;
  output [1023:0]s_axi_buser;
  output s_axi_bvalid;
  output [31:0]s_axi_rdata;
  output [2:0]s_axi_rid;
  output s_axi_rlast;
  input s_axi_rready;
  output [1:0]s_axi_rresp;
  output [1023:0]s_axi_ruser;
  output s_axi_rvalid;
  input [31:0]s_axi_wdata;
  input s_axi_wlast;
  output s_axi_wready;
  input [3:0]s_axi_wstrb;
  input [1023:0]s_axi_wuser;
  input s_axi_wvalid;

  wire aclk_1;
  wire aresetn_1;
  wire [9:0]m46_exit_M_AXI_ARADDR;
  wire [2:0]m46_exit_M_AXI_ARPROT;
  wire m46_exit_M_AXI_ARREADY;
  wire m46_exit_M_AXI_ARVALID;
  wire [9:0]m46_exit_M_AXI_AWADDR;
  wire [2:0]m46_exit_M_AXI_AWPROT;
  wire m46_exit_M_AXI_AWREADY;
  wire m46_exit_M_AXI_AWVALID;
  wire m46_exit_M_AXI_BREADY;
  wire [1:0]m46_exit_M_AXI_BRESP;
  wire m46_exit_M_AXI_BVALID;
  wire [31:0]m46_exit_M_AXI_RDATA;
  wire m46_exit_M_AXI_RREADY;
  wire [1:0]m46_exit_M_AXI_RRESP;
  wire m46_exit_M_AXI_RVALID;
  wire [31:0]m46_exit_M_AXI_WDATA;
  wire m46_exit_M_AXI_WREADY;
  wire [3:0]m46_exit_M_AXI_WSTRB;
  wire m46_exit_M_AXI_WVALID;
  wire [9:0]s_axi_1_ARADDR;
  wire [3:0]s_axi_1_ARCACHE;
  wire [2:0]s_axi_1_ARID;
  wire [7:0]s_axi_1_ARLEN;
  wire [0:0]s_axi_1_ARLOCK;
  wire [2:0]s_axi_1_ARPROT;
  wire [3:0]s_axi_1_ARQOS;
  wire s_axi_1_ARREADY;
  wire [1023:0]s_axi_1_ARUSER;
  wire s_axi_1_ARVALID;
  wire [9:0]s_axi_1_AWADDR;
  wire [3:0]s_axi_1_AWCACHE;
  wire [2:0]s_axi_1_AWID;
  wire [7:0]s_axi_1_AWLEN;
  wire [0:0]s_axi_1_AWLOCK;
  wire [2:0]s_axi_1_AWPROT;
  wire [3:0]s_axi_1_AWQOS;
  wire s_axi_1_AWREADY;
  wire [1023:0]s_axi_1_AWUSER;
  wire s_axi_1_AWVALID;
  wire [2:0]s_axi_1_BID;
  wire s_axi_1_BREADY;
  wire [1:0]s_axi_1_BRESP;
  wire [1023:0]s_axi_1_BUSER;
  wire s_axi_1_BVALID;
  wire [31:0]s_axi_1_RDATA;
  wire [2:0]s_axi_1_RID;
  wire s_axi_1_RLAST;
  wire s_axi_1_RREADY;
  wire [1:0]s_axi_1_RRESP;
  wire [1023:0]s_axi_1_RUSER;
  wire s_axi_1_RVALID;
  wire [31:0]s_axi_1_WDATA;
  wire s_axi_1_WLAST;
  wire s_axi_1_WREADY;
  wire [3:0]s_axi_1_WSTRB;
  wire [1023:0]s_axi_1_WUSER;
  wire s_axi_1_WVALID;

  assign aclk_1 = aclk;
  assign aresetn_1 = aresetn;
  assign m46_exit_M_AXI_ARREADY = m_axi_arready;
  assign m46_exit_M_AXI_AWREADY = m_axi_awready;
  assign m46_exit_M_AXI_BRESP = m_axi_bresp[1:0];
  assign m46_exit_M_AXI_BVALID = m_axi_bvalid;
  assign m46_exit_M_AXI_RDATA = m_axi_rdata[31:0];
  assign m46_exit_M_AXI_RRESP = m_axi_rresp[1:0];
  assign m46_exit_M_AXI_RVALID = m_axi_rvalid;
  assign m46_exit_M_AXI_WREADY = m_axi_wready;
  assign m_axi_araddr[9:0] = m46_exit_M_AXI_ARADDR;
  assign m_axi_arprot[2:0] = m46_exit_M_AXI_ARPROT;
  assign m_axi_arvalid = m46_exit_M_AXI_ARVALID;
  assign m_axi_awaddr[9:0] = m46_exit_M_AXI_AWADDR;
  assign m_axi_awprot[2:0] = m46_exit_M_AXI_AWPROT;
  assign m_axi_awvalid = m46_exit_M_AXI_AWVALID;
  assign m_axi_bready = m46_exit_M_AXI_BREADY;
  assign m_axi_rready = m46_exit_M_AXI_RREADY;
  assign m_axi_wdata[31:0] = m46_exit_M_AXI_WDATA;
  assign m_axi_wstrb[3:0] = m46_exit_M_AXI_WSTRB;
  assign m_axi_wvalid = m46_exit_M_AXI_WVALID;
  assign s_axi_1_ARADDR = s_axi_araddr[9:0];
  assign s_axi_1_ARCACHE = s_axi_arcache[3:0];
  assign s_axi_1_ARID = s_axi_arid[2:0];
  assign s_axi_1_ARLEN = s_axi_arlen[7:0];
  assign s_axi_1_ARLOCK = s_axi_arlock[0];
  assign s_axi_1_ARPROT = s_axi_arprot[2:0];
  assign s_axi_1_ARQOS = s_axi_arqos[3:0];
  assign s_axi_1_ARUSER = s_axi_aruser[1023:0];
  assign s_axi_1_ARVALID = s_axi_arvalid;
  assign s_axi_1_AWADDR = s_axi_awaddr[9:0];
  assign s_axi_1_AWCACHE = s_axi_awcache[3:0];
  assign s_axi_1_AWID = s_axi_awid[2:0];
  assign s_axi_1_AWLEN = s_axi_awlen[7:0];
  assign s_axi_1_AWLOCK = s_axi_awlock[0];
  assign s_axi_1_AWPROT = s_axi_awprot[2:0];
  assign s_axi_1_AWQOS = s_axi_awqos[3:0];
  assign s_axi_1_AWUSER = s_axi_awuser[1023:0];
  assign s_axi_1_AWVALID = s_axi_awvalid;
  assign s_axi_1_BREADY = s_axi_bready;
  assign s_axi_1_RREADY = s_axi_rready;
  assign s_axi_1_WDATA = s_axi_wdata[31:0];
  assign s_axi_1_WLAST = s_axi_wlast;
  assign s_axi_1_WSTRB = s_axi_wstrb[3:0];
  assign s_axi_1_WUSER = s_axi_wuser[1023:0];
  assign s_axi_1_WVALID = s_axi_wvalid;
  assign s_axi_arready = s_axi_1_ARREADY;
  assign s_axi_awready = s_axi_1_AWREADY;
  assign s_axi_bid[2:0] = s_axi_1_BID;
  assign s_axi_bresp[1:0] = s_axi_1_BRESP;
  assign s_axi_buser[1023:0] = s_axi_1_BUSER;
  assign s_axi_bvalid = s_axi_1_BVALID;
  assign s_axi_rdata[31:0] = s_axi_1_RDATA;
  assign s_axi_rid[2:0] = s_axi_1_RID;
  assign s_axi_rlast = s_axi_1_RLAST;
  assign s_axi_rresp[1:0] = s_axi_1_RRESP;
  assign s_axi_ruser[1023:0] = s_axi_1_RUSER;
  assign s_axi_rvalid = s_axi_1_RVALID;
  assign s_axi_wready = s_axi_1_WREADY;
  bd_afc3_m46e_0 m46_exit
       (.aclk(aclk_1),
        .aresetn(aresetn_1),
        .m_axi_araddr(m46_exit_M_AXI_ARADDR),
        .m_axi_arprot(m46_exit_M_AXI_ARPROT),
        .m_axi_arready(m46_exit_M_AXI_ARREADY),
        .m_axi_arvalid(m46_exit_M_AXI_ARVALID),
        .m_axi_awaddr(m46_exit_M_AXI_AWADDR),
        .m_axi_awprot(m46_exit_M_AXI_AWPROT),
        .m_axi_awready(m46_exit_M_AXI_AWREADY),
        .m_axi_awvalid(m46_exit_M_AXI_AWVALID),
        .m_axi_bready(m46_exit_M_AXI_BREADY),
        .m_axi_bresp(m46_exit_M_AXI_BRESP),
        .m_axi_bvalid(m46_exit_M_AXI_BVALID),
        .m_axi_rdata(m46_exit_M_AXI_RDATA),
        .m_axi_rready(m46_exit_M_AXI_RREADY),
        .m_axi_rresp(m46_exit_M_AXI_RRESP),
        .m_axi_rvalid(m46_exit_M_AXI_RVALID),
        .m_axi_wdata(m46_exit_M_AXI_WDATA),
        .m_axi_wready(m46_exit_M_AXI_WREADY),
        .m_axi_wstrb(m46_exit_M_AXI_WSTRB),
        .m_axi_wvalid(m46_exit_M_AXI_WVALID),
        .s_axi_araddr(s_axi_1_ARADDR),
        .s_axi_arcache(s_axi_1_ARCACHE),
        .s_axi_arid(s_axi_1_ARID),
        .s_axi_arlen(s_axi_1_ARLEN),
        .s_axi_arlock(s_axi_1_ARLOCK),
        .s_axi_arprot(s_axi_1_ARPROT),
        .s_axi_arqos(s_axi_1_ARQOS),
        .s_axi_arready(s_axi_1_ARREADY),
        .s_axi_aruser(s_axi_1_ARUSER),
        .s_axi_arvalid(s_axi_1_ARVALID),
        .s_axi_awaddr(s_axi_1_AWADDR),
        .s_axi_awcache(s_axi_1_AWCACHE),
        .s_axi_awid(s_axi_1_AWID),
        .s_axi_awlen(s_axi_1_AWLEN),
        .s_axi_awlock(s_axi_1_AWLOCK),
        .s_axi_awprot(s_axi_1_AWPROT),
        .s_axi_awqos(s_axi_1_AWQOS),
        .s_axi_awready(s_axi_1_AWREADY),
        .s_axi_awuser(s_axi_1_AWUSER),
        .s_axi_awvalid(s_axi_1_AWVALID),
        .s_axi_bid(s_axi_1_BID),
        .s_axi_bready(s_axi_1_BREADY),
        .s_axi_bresp(s_axi_1_BRESP),
        .s_axi_buser(s_axi_1_BUSER),
        .s_axi_bvalid(s_axi_1_BVALID),
        .s_axi_rdata(s_axi_1_RDATA),
        .s_axi_rid(s_axi_1_RID),
        .s_axi_rlast(s_axi_1_RLAST),
        .s_axi_rready(s_axi_1_RREADY),
        .s_axi_rresp(s_axi_1_RRESP),
        .s_axi_ruser(s_axi_1_RUSER),
        .s_axi_rvalid(s_axi_1_RVALID),
        .s_axi_wdata(s_axi_1_WDATA),
        .s_axi_wlast(s_axi_1_WLAST),
        .s_axi_wready(s_axi_1_WREADY),
        .s_axi_wstrb(s_axi_1_WSTRB),
        .s_axi_wuser(s_axi_1_WUSER),
        .s_axi_wvalid(s_axi_1_WVALID));
endmodule

module m46_nodes_imp_1LJ27Z2
   (M_SC_AR_info,
    M_SC_AR_payld,
    M_SC_AR_recv,
    M_SC_AR_req,
    M_SC_AR_send,
    M_SC_AW_info,
    M_SC_AW_payld,
    M_SC_AW_recv,
    M_SC_AW_req,
    M_SC_AW_send,
    M_SC_B_info,
    M_SC_B_payld,
    M_SC_B_recv,
    M_SC_B_req,
    M_SC_B_send,
    M_SC_R_info,
    M_SC_R_payld,
    M_SC_R_recv,
    M_SC_R_req,
    M_SC_R_send,
    M_SC_W_info,
    M_SC_W_payld,
    M_SC_W_recv,
    M_SC_W_req,
    M_SC_W_send,
    S_SC_AR_info,
    S_SC_AR_payld,
    S_SC_AR_recv,
    S_SC_AR_req,
    S_SC_AR_send,
    S_SC_AW_info,
    S_SC_AW_payld,
    S_SC_AW_recv,
    S_SC_AW_req,
    S_SC_AW_send,
    S_SC_B_info,
    S_SC_B_payld,
    S_SC_B_recv,
    S_SC_B_req,
    S_SC_B_send,
    S_SC_R_info,
    S_SC_R_payld,
    S_SC_R_recv,
    S_SC_R_req,
    S_SC_R_send,
    S_SC_W_info,
    S_SC_W_payld,
    S_SC_W_recv,
    S_SC_W_req,
    S_SC_W_send,
    m_axi_aclk,
    m_axi_aresetn,
    s_axi_aclk,
    s_axi_aresetn);
  output [0:0]M_SC_AR_info;
  output [181:0]M_SC_AR_payld;
  input [0:0]M_SC_AR_recv;
  output [0:0]M_SC_AR_req;
  output [0:0]M_SC_AR_send;
  output [0:0]M_SC_AW_info;
  output [181:0]M_SC_AW_payld;
  input [0:0]M_SC_AW_recv;
  output [0:0]M_SC_AW_req;
  output [0:0]M_SC_AW_send;
  output [0:0]M_SC_B_info;
  output [8:0]M_SC_B_payld;
  input [0:0]M_SC_B_recv;
  output [0:0]M_SC_B_req;
  output [0:0]M_SC_B_send;
  output [0:0]M_SC_R_info;
  output [54:0]M_SC_R_payld;
  input [0:0]M_SC_R_recv;
  output [0:0]M_SC_R_req;
  output [0:0]M_SC_R_send;
  output [0:0]M_SC_W_info;
  output [68:0]M_SC_W_payld;
  input [0:0]M_SC_W_recv;
  output [0:0]M_SC_W_req;
  output [0:0]M_SC_W_send;
  input [0:0]S_SC_AR_info;
  input [181:0]S_SC_AR_payld;
  output [0:0]S_SC_AR_recv;
  input [0:0]S_SC_AR_req;
  input [0:0]S_SC_AR_send;
  input [0:0]S_SC_AW_info;
  input [181:0]S_SC_AW_payld;
  output [0:0]S_SC_AW_recv;
  input [0:0]S_SC_AW_req;
  input [0:0]S_SC_AW_send;
  input [0:0]S_SC_B_info;
  input [8:0]S_SC_B_payld;
  output [0:0]S_SC_B_recv;
  input [0:0]S_SC_B_req;
  input [0:0]S_SC_B_send;
  input [0:0]S_SC_R_info;
  input [54:0]S_SC_R_payld;
  output [0:0]S_SC_R_recv;
  input [0:0]S_SC_R_req;
  input [0:0]S_SC_R_send;
  input [0:0]S_SC_W_info;
  input [68:0]S_SC_W_payld;
  output [0:0]S_SC_W_recv;
  input [0:0]S_SC_W_req;
  input [0:0]S_SC_W_send;
  input m_axi_aclk;
  input m_axi_aresetn;
  input s_axi_aclk;
  input s_axi_aresetn;

  wire [0:0]S_SC_AR_1_INFO;
  wire [181:0]S_SC_AR_1_PAYLD;
  wire [0:0]S_SC_AR_1_RECV;
  wire [0:0]S_SC_AR_1_REQ;
  wire [0:0]S_SC_AR_1_SEND;
  wire [0:0]S_SC_AW_1_INFO;
  wire [181:0]S_SC_AW_1_PAYLD;
  wire [0:0]S_SC_AW_1_RECV;
  wire [0:0]S_SC_AW_1_REQ;
  wire [0:0]S_SC_AW_1_SEND;
  wire [0:0]S_SC_B_1_INFO;
  wire [8:0]S_SC_B_1_PAYLD;
  wire [0:0]S_SC_B_1_RECV;
  wire [0:0]S_SC_B_1_REQ;
  wire [0:0]S_SC_B_1_SEND;
  wire [0:0]S_SC_R_1_INFO;
  wire [54:0]S_SC_R_1_PAYLD;
  wire [0:0]S_SC_R_1_RECV;
  wire [0:0]S_SC_R_1_REQ;
  wire [0:0]S_SC_R_1_SEND;
  wire [0:0]S_SC_W_1_INFO;
  wire [68:0]S_SC_W_1_PAYLD;
  wire [0:0]S_SC_W_1_RECV;
  wire [0:0]S_SC_W_1_REQ;
  wire [0:0]S_SC_W_1_SEND;
  wire [0:0]m46_ar_node_M_SC_INFO;
  wire [181:0]m46_ar_node_M_SC_PAYLD;
  wire [0:0]m46_ar_node_M_SC_RECV;
  wire [0:0]m46_ar_node_M_SC_REQ;
  wire [0:0]m46_ar_node_M_SC_SEND;
  wire [0:0]m46_aw_node_M_SC_INFO;
  wire [181:0]m46_aw_node_M_SC_PAYLD;
  wire [0:0]m46_aw_node_M_SC_RECV;
  wire [0:0]m46_aw_node_M_SC_REQ;
  wire [0:0]m46_aw_node_M_SC_SEND;
  wire [0:0]m46_b_node_M_SC_INFO;
  wire [8:0]m46_b_node_M_SC_PAYLD;
  wire [0:0]m46_b_node_M_SC_RECV;
  wire [0:0]m46_b_node_M_SC_REQ;
  wire [0:0]m46_b_node_M_SC_SEND;
  wire [0:0]m46_r_node_M_SC_INFO;
  wire [54:0]m46_r_node_M_SC_PAYLD;
  wire [0:0]m46_r_node_M_SC_RECV;
  wire [0:0]m46_r_node_M_SC_REQ;
  wire [0:0]m46_r_node_M_SC_SEND;
  wire [0:0]m46_w_node_M_SC_INFO;
  wire [68:0]m46_w_node_M_SC_PAYLD;
  wire [0:0]m46_w_node_M_SC_RECV;
  wire [0:0]m46_w_node_M_SC_REQ;
  wire [0:0]m46_w_node_M_SC_SEND;
  wire m_axi_aclk_1;
  wire m_axi_aresetn_1;
  wire s_axi_aclk_1;
  wire s_axi_aresetn_1;

  assign M_SC_AR_info[0] = m46_ar_node_M_SC_INFO;
  assign M_SC_AR_payld[181:0] = m46_ar_node_M_SC_PAYLD;
  assign M_SC_AR_req[0] = m46_ar_node_M_SC_REQ;
  assign M_SC_AR_send[0] = m46_ar_node_M_SC_SEND;
  assign M_SC_AW_info[0] = m46_aw_node_M_SC_INFO;
  assign M_SC_AW_payld[181:0] = m46_aw_node_M_SC_PAYLD;
  assign M_SC_AW_req[0] = m46_aw_node_M_SC_REQ;
  assign M_SC_AW_send[0] = m46_aw_node_M_SC_SEND;
  assign M_SC_B_info[0] = m46_b_node_M_SC_INFO;
  assign M_SC_B_payld[8:0] = m46_b_node_M_SC_PAYLD;
  assign M_SC_B_req[0] = m46_b_node_M_SC_REQ;
  assign M_SC_B_send[0] = m46_b_node_M_SC_SEND;
  assign M_SC_R_info[0] = m46_r_node_M_SC_INFO;
  assign M_SC_R_payld[54:0] = m46_r_node_M_SC_PAYLD;
  assign M_SC_R_req[0] = m46_r_node_M_SC_REQ;
  assign M_SC_R_send[0] = m46_r_node_M_SC_SEND;
  assign M_SC_W_info[0] = m46_w_node_M_SC_INFO;
  assign M_SC_W_payld[68:0] = m46_w_node_M_SC_PAYLD;
  assign M_SC_W_req[0] = m46_w_node_M_SC_REQ;
  assign M_SC_W_send[0] = m46_w_node_M_SC_SEND;
  assign S_SC_AR_1_INFO = S_SC_AR_info[0];
  assign S_SC_AR_1_PAYLD = S_SC_AR_payld[181:0];
  assign S_SC_AR_1_REQ = S_SC_AR_req[0];
  assign S_SC_AR_1_SEND = S_SC_AR_send[0];
  assign S_SC_AR_recv[0] = S_SC_AR_1_RECV;
  assign S_SC_AW_1_INFO = S_SC_AW_info[0];
  assign S_SC_AW_1_PAYLD = S_SC_AW_payld[181:0];
  assign S_SC_AW_1_REQ = S_SC_AW_req[0];
  assign S_SC_AW_1_SEND = S_SC_AW_send[0];
  assign S_SC_AW_recv[0] = S_SC_AW_1_RECV;
  assign S_SC_B_1_INFO = S_SC_B_info[0];
  assign S_SC_B_1_PAYLD = S_SC_B_payld[8:0];
  assign S_SC_B_1_REQ = S_SC_B_req[0];
  assign S_SC_B_1_SEND = S_SC_B_send[0];
  assign S_SC_B_recv[0] = S_SC_B_1_RECV;
  assign S_SC_R_1_INFO = S_SC_R_info[0];
  assign S_SC_R_1_PAYLD = S_SC_R_payld[54:0];
  assign S_SC_R_1_REQ = S_SC_R_req[0];
  assign S_SC_R_1_SEND = S_SC_R_send[0];
  assign S_SC_R_recv[0] = S_SC_R_1_RECV;
  assign S_SC_W_1_INFO = S_SC_W_info[0];
  assign S_SC_W_1_PAYLD = S_SC_W_payld[68:0];
  assign S_SC_W_1_REQ = S_SC_W_req[0];
  assign S_SC_W_1_SEND = S_SC_W_send[0];
  assign S_SC_W_recv[0] = S_SC_W_1_RECV;
  assign m46_ar_node_M_SC_RECV = M_SC_AR_recv[0];
  assign m46_aw_node_M_SC_RECV = M_SC_AW_recv[0];
  assign m46_b_node_M_SC_RECV = M_SC_B_recv[0];
  assign m46_r_node_M_SC_RECV = M_SC_R_recv[0];
  assign m46_w_node_M_SC_RECV = M_SC_W_recv[0];
  assign m_axi_aclk_1 = m_axi_aclk;
  assign m_axi_aresetn_1 = m_axi_aresetn;
  assign s_axi_aclk_1 = s_axi_aclk;
  assign s_axi_aresetn_1 = s_axi_aresetn;
  bd_afc3_m46arn_0 m46_ar_node
       (.m_sc_aclk(m_axi_aclk_1),
        .m_sc_aresetn(m_axi_aresetn_1),
        .m_sc_info(m46_ar_node_M_SC_INFO),
        .m_sc_payld(m46_ar_node_M_SC_PAYLD),
        .m_sc_recv(m46_ar_node_M_SC_RECV),
        .m_sc_req(m46_ar_node_M_SC_REQ),
        .m_sc_send(m46_ar_node_M_SC_SEND),
        .s_sc_aclk(s_axi_aclk_1),
        .s_sc_aresetn(s_axi_aresetn_1),
        .s_sc_info(S_SC_AR_1_INFO),
        .s_sc_payld(S_SC_AR_1_PAYLD),
        .s_sc_recv(S_SC_AR_1_RECV),
        .s_sc_req(S_SC_AR_1_REQ),
        .s_sc_send(S_SC_AR_1_SEND));
  bd_afc3_m46awn_0 m46_aw_node
       (.m_sc_aclk(m_axi_aclk_1),
        .m_sc_aresetn(m_axi_aresetn_1),
        .m_sc_info(m46_aw_node_M_SC_INFO),
        .m_sc_payld(m46_aw_node_M_SC_PAYLD),
        .m_sc_recv(m46_aw_node_M_SC_RECV),
        .m_sc_req(m46_aw_node_M_SC_REQ),
        .m_sc_send(m46_aw_node_M_SC_SEND),
        .s_sc_aclk(s_axi_aclk_1),
        .s_sc_aresetn(s_axi_aresetn_1),
        .s_sc_info(S_SC_AW_1_INFO),
        .s_sc_payld(S_SC_AW_1_PAYLD),
        .s_sc_recv(S_SC_AW_1_RECV),
        .s_sc_req(S_SC_AW_1_REQ),
        .s_sc_send(S_SC_AW_1_SEND));
  bd_afc3_m46bn_0 m46_b_node
       (.m_sc_aclk(s_axi_aclk_1),
        .m_sc_aresetn(s_axi_aresetn_1),
        .m_sc_info(m46_b_node_M_SC_INFO),
        .m_sc_payld(m46_b_node_M_SC_PAYLD),
        .m_sc_recv(m46_b_node_M_SC_RECV),
        .m_sc_req(m46_b_node_M_SC_REQ),
        .m_sc_send(m46_b_node_M_SC_SEND),
        .s_sc_aclk(m_axi_aclk_1),
        .s_sc_aresetn(m_axi_aresetn_1),
        .s_sc_info(S_SC_B_1_INFO),
        .s_sc_payld(S_SC_B_1_PAYLD),
        .s_sc_recv(S_SC_B_1_RECV),
        .s_sc_req(S_SC_B_1_REQ),
        .s_sc_send(S_SC_B_1_SEND));
  bd_afc3_m46rn_0 m46_r_node
       (.m_sc_aclk(s_axi_aclk_1),
        .m_sc_aresetn(s_axi_aresetn_1),
        .m_sc_info(m46_r_node_M_SC_INFO),
        .m_sc_payld(m46_r_node_M_SC_PAYLD),
        .m_sc_recv(m46_r_node_M_SC_RECV),
        .m_sc_req(m46_r_node_M_SC_REQ),
        .m_sc_send(m46_r_node_M_SC_SEND),
        .s_sc_aclk(m_axi_aclk_1),
        .s_sc_aresetn(m_axi_aresetn_1),
        .s_sc_info(S_SC_R_1_INFO),
        .s_sc_payld(S_SC_R_1_PAYLD),
        .s_sc_recv(S_SC_R_1_RECV),
        .s_sc_req(S_SC_R_1_REQ),
        .s_sc_send(S_SC_R_1_SEND));
  bd_afc3_m46wn_0 m46_w_node
       (.m_sc_aclk(m_axi_aclk_1),
        .m_sc_aresetn(m_axi_aresetn_1),
        .m_sc_info(m46_w_node_M_SC_INFO),
        .m_sc_payld(m46_w_node_M_SC_PAYLD),
        .m_sc_recv(m46_w_node_M_SC_RECV),
        .m_sc_req(m46_w_node_M_SC_REQ),
        .m_sc_send(m46_w_node_M_SC_SEND),
        .s_sc_aclk(s_axi_aclk_1),
        .s_sc_aresetn(s_axi_aresetn_1),
        .s_sc_info(S_SC_W_1_INFO),
        .s_sc_payld(S_SC_W_1_PAYLD),
        .s_sc_recv(S_SC_W_1_RECV),
        .s_sc_req(S_SC_W_1_REQ),
        .s_sc_send(S_SC_W_1_SEND));
endmodule

module m47_exit_pipeline_imp_11TZ0TW
   (aclk,
    aresetn,
    m_axi_araddr,
    m_axi_arprot,
    m_axi_arready,
    m_axi_arvalid,
    m_axi_awaddr,
    m_axi_awprot,
    m_axi_awready,
    m_axi_awvalid,
    m_axi_bready,
    m_axi_bresp,
    m_axi_bvalid,
    m_axi_rdata,
    m_axi_rready,
    m_axi_rresp,
    m_axi_rvalid,
    m_axi_wdata,
    m_axi_wready,
    m_axi_wstrb,
    m_axi_wvalid,
    s_axi_araddr,
    s_axi_arcache,
    s_axi_arid,
    s_axi_arlen,
    s_axi_arlock,
    s_axi_arprot,
    s_axi_arqos,
    s_axi_arready,
    s_axi_aruser,
    s_axi_arvalid,
    s_axi_awaddr,
    s_axi_awcache,
    s_axi_awid,
    s_axi_awlen,
    s_axi_awlock,
    s_axi_awprot,
    s_axi_awqos,
    s_axi_awready,
    s_axi_awuser,
    s_axi_awvalid,
    s_axi_bid,
    s_axi_bready,
    s_axi_bresp,
    s_axi_buser,
    s_axi_bvalid,
    s_axi_rdata,
    s_axi_rid,
    s_axi_rlast,
    s_axi_rready,
    s_axi_rresp,
    s_axi_ruser,
    s_axi_rvalid,
    s_axi_wdata,
    s_axi_wlast,
    s_axi_wready,
    s_axi_wstrb,
    s_axi_wuser,
    s_axi_wvalid);
  input aclk;
  input aresetn;
  output [9:0]m_axi_araddr;
  output [2:0]m_axi_arprot;
  input m_axi_arready;
  output m_axi_arvalid;
  output [9:0]m_axi_awaddr;
  output [2:0]m_axi_awprot;
  input m_axi_awready;
  output m_axi_awvalid;
  output m_axi_bready;
  input [1:0]m_axi_bresp;
  input m_axi_bvalid;
  input [31:0]m_axi_rdata;
  output m_axi_rready;
  input [1:0]m_axi_rresp;
  input m_axi_rvalid;
  output [31:0]m_axi_wdata;
  input m_axi_wready;
  output [3:0]m_axi_wstrb;
  output m_axi_wvalid;
  input [9:0]s_axi_araddr;
  input [3:0]s_axi_arcache;
  input [2:0]s_axi_arid;
  input [7:0]s_axi_arlen;
  input [0:0]s_axi_arlock;
  input [2:0]s_axi_arprot;
  input [3:0]s_axi_arqos;
  output s_axi_arready;
  input [1023:0]s_axi_aruser;
  input s_axi_arvalid;
  input [9:0]s_axi_awaddr;
  input [3:0]s_axi_awcache;
  input [2:0]s_axi_awid;
  input [7:0]s_axi_awlen;
  input [0:0]s_axi_awlock;
  input [2:0]s_axi_awprot;
  input [3:0]s_axi_awqos;
  output s_axi_awready;
  input [1023:0]s_axi_awuser;
  input s_axi_awvalid;
  output [2:0]s_axi_bid;
  input s_axi_bready;
  output [1:0]s_axi_bresp;
  output [1023:0]s_axi_buser;
  output s_axi_bvalid;
  output [31:0]s_axi_rdata;
  output [2:0]s_axi_rid;
  output s_axi_rlast;
  input s_axi_rready;
  output [1:0]s_axi_rresp;
  output [1023:0]s_axi_ruser;
  output s_axi_rvalid;
  input [31:0]s_axi_wdata;
  input s_axi_wlast;
  output s_axi_wready;
  input [3:0]s_axi_wstrb;
  input [1023:0]s_axi_wuser;
  input s_axi_wvalid;

  wire aclk_1;
  wire aresetn_1;
  wire [9:0]m47_exit_M_AXI_ARADDR;
  wire [2:0]m47_exit_M_AXI_ARPROT;
  wire m47_exit_M_AXI_ARREADY;
  wire m47_exit_M_AXI_ARVALID;
  wire [9:0]m47_exit_M_AXI_AWADDR;
  wire [2:0]m47_exit_M_AXI_AWPROT;
  wire m47_exit_M_AXI_AWREADY;
  wire m47_exit_M_AXI_AWVALID;
  wire m47_exit_M_AXI_BREADY;
  wire [1:0]m47_exit_M_AXI_BRESP;
  wire m47_exit_M_AXI_BVALID;
  wire [31:0]m47_exit_M_AXI_RDATA;
  wire m47_exit_M_AXI_RREADY;
  wire [1:0]m47_exit_M_AXI_RRESP;
  wire m47_exit_M_AXI_RVALID;
  wire [31:0]m47_exit_M_AXI_WDATA;
  wire m47_exit_M_AXI_WREADY;
  wire [3:0]m47_exit_M_AXI_WSTRB;
  wire m47_exit_M_AXI_WVALID;
  wire [9:0]s_axi_1_ARADDR;
  wire [3:0]s_axi_1_ARCACHE;
  wire [2:0]s_axi_1_ARID;
  wire [7:0]s_axi_1_ARLEN;
  wire [0:0]s_axi_1_ARLOCK;
  wire [2:0]s_axi_1_ARPROT;
  wire [3:0]s_axi_1_ARQOS;
  wire s_axi_1_ARREADY;
  wire [1023:0]s_axi_1_ARUSER;
  wire s_axi_1_ARVALID;
  wire [9:0]s_axi_1_AWADDR;
  wire [3:0]s_axi_1_AWCACHE;
  wire [2:0]s_axi_1_AWID;
  wire [7:0]s_axi_1_AWLEN;
  wire [0:0]s_axi_1_AWLOCK;
  wire [2:0]s_axi_1_AWPROT;
  wire [3:0]s_axi_1_AWQOS;
  wire s_axi_1_AWREADY;
  wire [1023:0]s_axi_1_AWUSER;
  wire s_axi_1_AWVALID;
  wire [2:0]s_axi_1_BID;
  wire s_axi_1_BREADY;
  wire [1:0]s_axi_1_BRESP;
  wire [1023:0]s_axi_1_BUSER;
  wire s_axi_1_BVALID;
  wire [31:0]s_axi_1_RDATA;
  wire [2:0]s_axi_1_RID;
  wire s_axi_1_RLAST;
  wire s_axi_1_RREADY;
  wire [1:0]s_axi_1_RRESP;
  wire [1023:0]s_axi_1_RUSER;
  wire s_axi_1_RVALID;
  wire [31:0]s_axi_1_WDATA;
  wire s_axi_1_WLAST;
  wire s_axi_1_WREADY;
  wire [3:0]s_axi_1_WSTRB;
  wire [1023:0]s_axi_1_WUSER;
  wire s_axi_1_WVALID;

  assign aclk_1 = aclk;
  assign aresetn_1 = aresetn;
  assign m47_exit_M_AXI_ARREADY = m_axi_arready;
  assign m47_exit_M_AXI_AWREADY = m_axi_awready;
  assign m47_exit_M_AXI_BRESP = m_axi_bresp[1:0];
  assign m47_exit_M_AXI_BVALID = m_axi_bvalid;
  assign m47_exit_M_AXI_RDATA = m_axi_rdata[31:0];
  assign m47_exit_M_AXI_RRESP = m_axi_rresp[1:0];
  assign m47_exit_M_AXI_RVALID = m_axi_rvalid;
  assign m47_exit_M_AXI_WREADY = m_axi_wready;
  assign m_axi_araddr[9:0] = m47_exit_M_AXI_ARADDR;
  assign m_axi_arprot[2:0] = m47_exit_M_AXI_ARPROT;
  assign m_axi_arvalid = m47_exit_M_AXI_ARVALID;
  assign m_axi_awaddr[9:0] = m47_exit_M_AXI_AWADDR;
  assign m_axi_awprot[2:0] = m47_exit_M_AXI_AWPROT;
  assign m_axi_awvalid = m47_exit_M_AXI_AWVALID;
  assign m_axi_bready = m47_exit_M_AXI_BREADY;
  assign m_axi_rready = m47_exit_M_AXI_RREADY;
  assign m_axi_wdata[31:0] = m47_exit_M_AXI_WDATA;
  assign m_axi_wstrb[3:0] = m47_exit_M_AXI_WSTRB;
  assign m_axi_wvalid = m47_exit_M_AXI_WVALID;
  assign s_axi_1_ARADDR = s_axi_araddr[9:0];
  assign s_axi_1_ARCACHE = s_axi_arcache[3:0];
  assign s_axi_1_ARID = s_axi_arid[2:0];
  assign s_axi_1_ARLEN = s_axi_arlen[7:0];
  assign s_axi_1_ARLOCK = s_axi_arlock[0];
  assign s_axi_1_ARPROT = s_axi_arprot[2:0];
  assign s_axi_1_ARQOS = s_axi_arqos[3:0];
  assign s_axi_1_ARUSER = s_axi_aruser[1023:0];
  assign s_axi_1_ARVALID = s_axi_arvalid;
  assign s_axi_1_AWADDR = s_axi_awaddr[9:0];
  assign s_axi_1_AWCACHE = s_axi_awcache[3:0];
  assign s_axi_1_AWID = s_axi_awid[2:0];
  assign s_axi_1_AWLEN = s_axi_awlen[7:0];
  assign s_axi_1_AWLOCK = s_axi_awlock[0];
  assign s_axi_1_AWPROT = s_axi_awprot[2:0];
  assign s_axi_1_AWQOS = s_axi_awqos[3:0];
  assign s_axi_1_AWUSER = s_axi_awuser[1023:0];
  assign s_axi_1_AWVALID = s_axi_awvalid;
  assign s_axi_1_BREADY = s_axi_bready;
  assign s_axi_1_RREADY = s_axi_rready;
  assign s_axi_1_WDATA = s_axi_wdata[31:0];
  assign s_axi_1_WLAST = s_axi_wlast;
  assign s_axi_1_WSTRB = s_axi_wstrb[3:0];
  assign s_axi_1_WUSER = s_axi_wuser[1023:0];
  assign s_axi_1_WVALID = s_axi_wvalid;
  assign s_axi_arready = s_axi_1_ARREADY;
  assign s_axi_awready = s_axi_1_AWREADY;
  assign s_axi_bid[2:0] = s_axi_1_BID;
  assign s_axi_bresp[1:0] = s_axi_1_BRESP;
  assign s_axi_buser[1023:0] = s_axi_1_BUSER;
  assign s_axi_bvalid = s_axi_1_BVALID;
  assign s_axi_rdata[31:0] = s_axi_1_RDATA;
  assign s_axi_rid[2:0] = s_axi_1_RID;
  assign s_axi_rlast = s_axi_1_RLAST;
  assign s_axi_rresp[1:0] = s_axi_1_RRESP;
  assign s_axi_ruser[1023:0] = s_axi_1_RUSER;
  assign s_axi_rvalid = s_axi_1_RVALID;
  assign s_axi_wready = s_axi_1_WREADY;
  bd_afc3_m47e_0 m47_exit
       (.aclk(aclk_1),
        .aresetn(aresetn_1),
        .m_axi_araddr(m47_exit_M_AXI_ARADDR),
        .m_axi_arprot(m47_exit_M_AXI_ARPROT),
        .m_axi_arready(m47_exit_M_AXI_ARREADY),
        .m_axi_arvalid(m47_exit_M_AXI_ARVALID),
        .m_axi_awaddr(m47_exit_M_AXI_AWADDR),
        .m_axi_awprot(m47_exit_M_AXI_AWPROT),
        .m_axi_awready(m47_exit_M_AXI_AWREADY),
        .m_axi_awvalid(m47_exit_M_AXI_AWVALID),
        .m_axi_bready(m47_exit_M_AXI_BREADY),
        .m_axi_bresp(m47_exit_M_AXI_BRESP),
        .m_axi_bvalid(m47_exit_M_AXI_BVALID),
        .m_axi_rdata(m47_exit_M_AXI_RDATA),
        .m_axi_rready(m47_exit_M_AXI_RREADY),
        .m_axi_rresp(m47_exit_M_AXI_RRESP),
        .m_axi_rvalid(m47_exit_M_AXI_RVALID),
        .m_axi_wdata(m47_exit_M_AXI_WDATA),
        .m_axi_wready(m47_exit_M_AXI_WREADY),
        .m_axi_wstrb(m47_exit_M_AXI_WSTRB),
        .m_axi_wvalid(m47_exit_M_AXI_WVALID),
        .s_axi_araddr(s_axi_1_ARADDR),
        .s_axi_arcache(s_axi_1_ARCACHE),
        .s_axi_arid(s_axi_1_ARID),
        .s_axi_arlen(s_axi_1_ARLEN),
        .s_axi_arlock(s_axi_1_ARLOCK),
        .s_axi_arprot(s_axi_1_ARPROT),
        .s_axi_arqos(s_axi_1_ARQOS),
        .s_axi_arready(s_axi_1_ARREADY),
        .s_axi_aruser(s_axi_1_ARUSER),
        .s_axi_arvalid(s_axi_1_ARVALID),
        .s_axi_awaddr(s_axi_1_AWADDR),
        .s_axi_awcache(s_axi_1_AWCACHE),
        .s_axi_awid(s_axi_1_AWID),
        .s_axi_awlen(s_axi_1_AWLEN),
        .s_axi_awlock(s_axi_1_AWLOCK),
        .s_axi_awprot(s_axi_1_AWPROT),
        .s_axi_awqos(s_axi_1_AWQOS),
        .s_axi_awready(s_axi_1_AWREADY),
        .s_axi_awuser(s_axi_1_AWUSER),
        .s_axi_awvalid(s_axi_1_AWVALID),
        .s_axi_bid(s_axi_1_BID),
        .s_axi_bready(s_axi_1_BREADY),
        .s_axi_bresp(s_axi_1_BRESP),
        .s_axi_buser(s_axi_1_BUSER),
        .s_axi_bvalid(s_axi_1_BVALID),
        .s_axi_rdata(s_axi_1_RDATA),
        .s_axi_rid(s_axi_1_RID),
        .s_axi_rlast(s_axi_1_RLAST),
        .s_axi_rready(s_axi_1_RREADY),
        .s_axi_rresp(s_axi_1_RRESP),
        .s_axi_ruser(s_axi_1_RUSER),
        .s_axi_rvalid(s_axi_1_RVALID),
        .s_axi_wdata(s_axi_1_WDATA),
        .s_axi_wlast(s_axi_1_WLAST),
        .s_axi_wready(s_axi_1_WREADY),
        .s_axi_wstrb(s_axi_1_WSTRB),
        .s_axi_wuser(s_axi_1_WUSER),
        .s_axi_wvalid(s_axi_1_WVALID));
endmodule

module m47_nodes_imp_MUJLPK
   (M_SC_AR_info,
    M_SC_AR_payld,
    M_SC_AR_recv,
    M_SC_AR_req,
    M_SC_AR_send,
    M_SC_AW_info,
    M_SC_AW_payld,
    M_SC_AW_recv,
    M_SC_AW_req,
    M_SC_AW_send,
    M_SC_B_info,
    M_SC_B_payld,
    M_SC_B_recv,
    M_SC_B_req,
    M_SC_B_send,
    M_SC_R_info,
    M_SC_R_payld,
    M_SC_R_recv,
    M_SC_R_req,
    M_SC_R_send,
    M_SC_W_info,
    M_SC_W_payld,
    M_SC_W_recv,
    M_SC_W_req,
    M_SC_W_send,
    S_SC_AR_info,
    S_SC_AR_payld,
    S_SC_AR_recv,
    S_SC_AR_req,
    S_SC_AR_send,
    S_SC_AW_info,
    S_SC_AW_payld,
    S_SC_AW_recv,
    S_SC_AW_req,
    S_SC_AW_send,
    S_SC_B_info,
    S_SC_B_payld,
    S_SC_B_recv,
    S_SC_B_req,
    S_SC_B_send,
    S_SC_R_info,
    S_SC_R_payld,
    S_SC_R_recv,
    S_SC_R_req,
    S_SC_R_send,
    S_SC_W_info,
    S_SC_W_payld,
    S_SC_W_recv,
    S_SC_W_req,
    S_SC_W_send,
    m_axi_aclk,
    m_axi_aresetn,
    s_axi_aclk,
    s_axi_aresetn);
  output [0:0]M_SC_AR_info;
  output [181:0]M_SC_AR_payld;
  input [0:0]M_SC_AR_recv;
  output [0:0]M_SC_AR_req;
  output [0:0]M_SC_AR_send;
  output [0:0]M_SC_AW_info;
  output [181:0]M_SC_AW_payld;
  input [0:0]M_SC_AW_recv;
  output [0:0]M_SC_AW_req;
  output [0:0]M_SC_AW_send;
  output [0:0]M_SC_B_info;
  output [8:0]M_SC_B_payld;
  input [0:0]M_SC_B_recv;
  output [0:0]M_SC_B_req;
  output [0:0]M_SC_B_send;
  output [0:0]M_SC_R_info;
  output [54:0]M_SC_R_payld;
  input [0:0]M_SC_R_recv;
  output [0:0]M_SC_R_req;
  output [0:0]M_SC_R_send;
  output [0:0]M_SC_W_info;
  output [68:0]M_SC_W_payld;
  input [0:0]M_SC_W_recv;
  output [0:0]M_SC_W_req;
  output [0:0]M_SC_W_send;
  input [0:0]S_SC_AR_info;
  input [181:0]S_SC_AR_payld;
  output [0:0]S_SC_AR_recv;
  input [0:0]S_SC_AR_req;
  input [0:0]S_SC_AR_send;
  input [0:0]S_SC_AW_info;
  input [181:0]S_SC_AW_payld;
  output [0:0]S_SC_AW_recv;
  input [0:0]S_SC_AW_req;
  input [0:0]S_SC_AW_send;
  input [0:0]S_SC_B_info;
  input [8:0]S_SC_B_payld;
  output [0:0]S_SC_B_recv;
  input [0:0]S_SC_B_req;
  input [0:0]S_SC_B_send;
  input [0:0]S_SC_R_info;
  input [54:0]S_SC_R_payld;
  output [0:0]S_SC_R_recv;
  input [0:0]S_SC_R_req;
  input [0:0]S_SC_R_send;
  input [0:0]S_SC_W_info;
  input [68:0]S_SC_W_payld;
  output [0:0]S_SC_W_recv;
  input [0:0]S_SC_W_req;
  input [0:0]S_SC_W_send;
  input m_axi_aclk;
  input m_axi_aresetn;
  input s_axi_aclk;
  input s_axi_aresetn;

  wire [0:0]S_SC_AR_1_INFO;
  wire [181:0]S_SC_AR_1_PAYLD;
  wire [0:0]S_SC_AR_1_RECV;
  wire [0:0]S_SC_AR_1_REQ;
  wire [0:0]S_SC_AR_1_SEND;
  wire [0:0]S_SC_AW_1_INFO;
  wire [181:0]S_SC_AW_1_PAYLD;
  wire [0:0]S_SC_AW_1_RECV;
  wire [0:0]S_SC_AW_1_REQ;
  wire [0:0]S_SC_AW_1_SEND;
  wire [0:0]S_SC_B_1_INFO;
  wire [8:0]S_SC_B_1_PAYLD;
  wire [0:0]S_SC_B_1_RECV;
  wire [0:0]S_SC_B_1_REQ;
  wire [0:0]S_SC_B_1_SEND;
  wire [0:0]S_SC_R_1_INFO;
  wire [54:0]S_SC_R_1_PAYLD;
  wire [0:0]S_SC_R_1_RECV;
  wire [0:0]S_SC_R_1_REQ;
  wire [0:0]S_SC_R_1_SEND;
  wire [0:0]S_SC_W_1_INFO;
  wire [68:0]S_SC_W_1_PAYLD;
  wire [0:0]S_SC_W_1_RECV;
  wire [0:0]S_SC_W_1_REQ;
  wire [0:0]S_SC_W_1_SEND;
  wire [0:0]m47_ar_node_M_SC_INFO;
  wire [181:0]m47_ar_node_M_SC_PAYLD;
  wire [0:0]m47_ar_node_M_SC_RECV;
  wire [0:0]m47_ar_node_M_SC_REQ;
  wire [0:0]m47_ar_node_M_SC_SEND;
  wire [0:0]m47_aw_node_M_SC_INFO;
  wire [181:0]m47_aw_node_M_SC_PAYLD;
  wire [0:0]m47_aw_node_M_SC_RECV;
  wire [0:0]m47_aw_node_M_SC_REQ;
  wire [0:0]m47_aw_node_M_SC_SEND;
  wire [0:0]m47_b_node_M_SC_INFO;
  wire [8:0]m47_b_node_M_SC_PAYLD;
  wire [0:0]m47_b_node_M_SC_RECV;
  wire [0:0]m47_b_node_M_SC_REQ;
  wire [0:0]m47_b_node_M_SC_SEND;
  wire [0:0]m47_r_node_M_SC_INFO;
  wire [54:0]m47_r_node_M_SC_PAYLD;
  wire [0:0]m47_r_node_M_SC_RECV;
  wire [0:0]m47_r_node_M_SC_REQ;
  wire [0:0]m47_r_node_M_SC_SEND;
  wire [0:0]m47_w_node_M_SC_INFO;
  wire [68:0]m47_w_node_M_SC_PAYLD;
  wire [0:0]m47_w_node_M_SC_RECV;
  wire [0:0]m47_w_node_M_SC_REQ;
  wire [0:0]m47_w_node_M_SC_SEND;
  wire m_axi_aclk_1;
  wire m_axi_aresetn_1;
  wire s_axi_aclk_1;
  wire s_axi_aresetn_1;

  assign M_SC_AR_info[0] = m47_ar_node_M_SC_INFO;
  assign M_SC_AR_payld[181:0] = m47_ar_node_M_SC_PAYLD;
  assign M_SC_AR_req[0] = m47_ar_node_M_SC_REQ;
  assign M_SC_AR_send[0] = m47_ar_node_M_SC_SEND;
  assign M_SC_AW_info[0] = m47_aw_node_M_SC_INFO;
  assign M_SC_AW_payld[181:0] = m47_aw_node_M_SC_PAYLD;
  assign M_SC_AW_req[0] = m47_aw_node_M_SC_REQ;
  assign M_SC_AW_send[0] = m47_aw_node_M_SC_SEND;
  assign M_SC_B_info[0] = m47_b_node_M_SC_INFO;
  assign M_SC_B_payld[8:0] = m47_b_node_M_SC_PAYLD;
  assign M_SC_B_req[0] = m47_b_node_M_SC_REQ;
  assign M_SC_B_send[0] = m47_b_node_M_SC_SEND;
  assign M_SC_R_info[0] = m47_r_node_M_SC_INFO;
  assign M_SC_R_payld[54:0] = m47_r_node_M_SC_PAYLD;
  assign M_SC_R_req[0] = m47_r_node_M_SC_REQ;
  assign M_SC_R_send[0] = m47_r_node_M_SC_SEND;
  assign M_SC_W_info[0] = m47_w_node_M_SC_INFO;
  assign M_SC_W_payld[68:0] = m47_w_node_M_SC_PAYLD;
  assign M_SC_W_req[0] = m47_w_node_M_SC_REQ;
  assign M_SC_W_send[0] = m47_w_node_M_SC_SEND;
  assign S_SC_AR_1_INFO = S_SC_AR_info[0];
  assign S_SC_AR_1_PAYLD = S_SC_AR_payld[181:0];
  assign S_SC_AR_1_REQ = S_SC_AR_req[0];
  assign S_SC_AR_1_SEND = S_SC_AR_send[0];
  assign S_SC_AR_recv[0] = S_SC_AR_1_RECV;
  assign S_SC_AW_1_INFO = S_SC_AW_info[0];
  assign S_SC_AW_1_PAYLD = S_SC_AW_payld[181:0];
  assign S_SC_AW_1_REQ = S_SC_AW_req[0];
  assign S_SC_AW_1_SEND = S_SC_AW_send[0];
  assign S_SC_AW_recv[0] = S_SC_AW_1_RECV;
  assign S_SC_B_1_INFO = S_SC_B_info[0];
  assign S_SC_B_1_PAYLD = S_SC_B_payld[8:0];
  assign S_SC_B_1_REQ = S_SC_B_req[0];
  assign S_SC_B_1_SEND = S_SC_B_send[0];
  assign S_SC_B_recv[0] = S_SC_B_1_RECV;
  assign S_SC_R_1_INFO = S_SC_R_info[0];
  assign S_SC_R_1_PAYLD = S_SC_R_payld[54:0];
  assign S_SC_R_1_REQ = S_SC_R_req[0];
  assign S_SC_R_1_SEND = S_SC_R_send[0];
  assign S_SC_R_recv[0] = S_SC_R_1_RECV;
  assign S_SC_W_1_INFO = S_SC_W_info[0];
  assign S_SC_W_1_PAYLD = S_SC_W_payld[68:0];
  assign S_SC_W_1_REQ = S_SC_W_req[0];
  assign S_SC_W_1_SEND = S_SC_W_send[0];
  assign S_SC_W_recv[0] = S_SC_W_1_RECV;
  assign m47_ar_node_M_SC_RECV = M_SC_AR_recv[0];
  assign m47_aw_node_M_SC_RECV = M_SC_AW_recv[0];
  assign m47_b_node_M_SC_RECV = M_SC_B_recv[0];
  assign m47_r_node_M_SC_RECV = M_SC_R_recv[0];
  assign m47_w_node_M_SC_RECV = M_SC_W_recv[0];
  assign m_axi_aclk_1 = m_axi_aclk;
  assign m_axi_aresetn_1 = m_axi_aresetn;
  assign s_axi_aclk_1 = s_axi_aclk;
  assign s_axi_aresetn_1 = s_axi_aresetn;
  bd_afc3_m47arn_0 m47_ar_node
       (.m_sc_aclk(m_axi_aclk_1),
        .m_sc_aresetn(m_axi_aresetn_1),
        .m_sc_info(m47_ar_node_M_SC_INFO),
        .m_sc_payld(m47_ar_node_M_SC_PAYLD),
        .m_sc_recv(m47_ar_node_M_SC_RECV),
        .m_sc_req(m47_ar_node_M_SC_REQ),
        .m_sc_send(m47_ar_node_M_SC_SEND),
        .s_sc_aclk(s_axi_aclk_1),
        .s_sc_aresetn(s_axi_aresetn_1),
        .s_sc_info(S_SC_AR_1_INFO),
        .s_sc_payld(S_SC_AR_1_PAYLD),
        .s_sc_recv(S_SC_AR_1_RECV),
        .s_sc_req(S_SC_AR_1_REQ),
        .s_sc_send(S_SC_AR_1_SEND));
  bd_afc3_m47awn_0 m47_aw_node
       (.m_sc_aclk(m_axi_aclk_1),
        .m_sc_aresetn(m_axi_aresetn_1),
        .m_sc_info(m47_aw_node_M_SC_INFO),
        .m_sc_payld(m47_aw_node_M_SC_PAYLD),
        .m_sc_recv(m47_aw_node_M_SC_RECV),
        .m_sc_req(m47_aw_node_M_SC_REQ),
        .m_sc_send(m47_aw_node_M_SC_SEND),
        .s_sc_aclk(s_axi_aclk_1),
        .s_sc_aresetn(s_axi_aresetn_1),
        .s_sc_info(S_SC_AW_1_INFO),
        .s_sc_payld(S_SC_AW_1_PAYLD),
        .s_sc_recv(S_SC_AW_1_RECV),
        .s_sc_req(S_SC_AW_1_REQ),
        .s_sc_send(S_SC_AW_1_SEND));
  bd_afc3_m47bn_0 m47_b_node
       (.m_sc_aclk(s_axi_aclk_1),
        .m_sc_aresetn(s_axi_aresetn_1),
        .m_sc_info(m47_b_node_M_SC_INFO),
        .m_sc_payld(m47_b_node_M_SC_PAYLD),
        .m_sc_recv(m47_b_node_M_SC_RECV),
        .m_sc_req(m47_b_node_M_SC_REQ),
        .m_sc_send(m47_b_node_M_SC_SEND),
        .s_sc_aclk(m_axi_aclk_1),
        .s_sc_aresetn(m_axi_aresetn_1),
        .s_sc_info(S_SC_B_1_INFO),
        .s_sc_payld(S_SC_B_1_PAYLD),
        .s_sc_recv(S_SC_B_1_RECV),
        .s_sc_req(S_SC_B_1_REQ),
        .s_sc_send(S_SC_B_1_SEND));
  bd_afc3_m47rn_0 m47_r_node
       (.m_sc_aclk(s_axi_aclk_1),
        .m_sc_aresetn(s_axi_aresetn_1),
        .m_sc_info(m47_r_node_M_SC_INFO),
        .m_sc_payld(m47_r_node_M_SC_PAYLD),
        .m_sc_recv(m47_r_node_M_SC_RECV),
        .m_sc_req(m47_r_node_M_SC_REQ),
        .m_sc_send(m47_r_node_M_SC_SEND),
        .s_sc_aclk(m_axi_aclk_1),
        .s_sc_aresetn(m_axi_aresetn_1),
        .s_sc_info(S_SC_R_1_INFO),
        .s_sc_payld(S_SC_R_1_PAYLD),
        .s_sc_recv(S_SC_R_1_RECV),
        .s_sc_req(S_SC_R_1_REQ),
        .s_sc_send(S_SC_R_1_SEND));
  bd_afc3_m47wn_0 m47_w_node
       (.m_sc_aclk(m_axi_aclk_1),
        .m_sc_aresetn(m_axi_aresetn_1),
        .m_sc_info(m47_w_node_M_SC_INFO),
        .m_sc_payld(m47_w_node_M_SC_PAYLD),
        .m_sc_recv(m47_w_node_M_SC_RECV),
        .m_sc_req(m47_w_node_M_SC_REQ),
        .m_sc_send(m47_w_node_M_SC_SEND),
        .s_sc_aclk(s_axi_aclk_1),
        .s_sc_aresetn(s_axi_aresetn_1),
        .s_sc_info(S_SC_W_1_INFO),
        .s_sc_payld(S_SC_W_1_PAYLD),
        .s_sc_recv(S_SC_W_1_RECV),
        .s_sc_req(S_SC_W_1_REQ),
        .s_sc_send(S_SC_W_1_SEND));
endmodule

module m48_exit_pipeline_imp_NIOWC4
   (aclk,
    aresetn,
    m_axi_araddr,
    m_axi_arprot,
    m_axi_arready,
    m_axi_arvalid,
    m_axi_awaddr,
    m_axi_awprot,
    m_axi_awready,
    m_axi_awvalid,
    m_axi_bready,
    m_axi_bresp,
    m_axi_bvalid,
    m_axi_rdata,
    m_axi_rready,
    m_axi_rresp,
    m_axi_rvalid,
    m_axi_wdata,
    m_axi_wready,
    m_axi_wstrb,
    m_axi_wvalid,
    s_axi_araddr,
    s_axi_arcache,
    s_axi_arid,
    s_axi_arlen,
    s_axi_arlock,
    s_axi_arprot,
    s_axi_arqos,
    s_axi_arready,
    s_axi_aruser,
    s_axi_arvalid,
    s_axi_awaddr,
    s_axi_awcache,
    s_axi_awid,
    s_axi_awlen,
    s_axi_awlock,
    s_axi_awprot,
    s_axi_awqos,
    s_axi_awready,
    s_axi_awuser,
    s_axi_awvalid,
    s_axi_bid,
    s_axi_bready,
    s_axi_bresp,
    s_axi_buser,
    s_axi_bvalid,
    s_axi_rdata,
    s_axi_rid,
    s_axi_rlast,
    s_axi_rready,
    s_axi_rresp,
    s_axi_ruser,
    s_axi_rvalid,
    s_axi_wdata,
    s_axi_wlast,
    s_axi_wready,
    s_axi_wstrb,
    s_axi_wuser,
    s_axi_wvalid);
  input aclk;
  input aresetn;
  output [9:0]m_axi_araddr;
  output [2:0]m_axi_arprot;
  input m_axi_arready;
  output m_axi_arvalid;
  output [9:0]m_axi_awaddr;
  output [2:0]m_axi_awprot;
  input m_axi_awready;
  output m_axi_awvalid;
  output m_axi_bready;
  input [1:0]m_axi_bresp;
  input m_axi_bvalid;
  input [31:0]m_axi_rdata;
  output m_axi_rready;
  input [1:0]m_axi_rresp;
  input m_axi_rvalid;
  output [31:0]m_axi_wdata;
  input m_axi_wready;
  output [3:0]m_axi_wstrb;
  output m_axi_wvalid;
  input [9:0]s_axi_araddr;
  input [3:0]s_axi_arcache;
  input [2:0]s_axi_arid;
  input [7:0]s_axi_arlen;
  input [0:0]s_axi_arlock;
  input [2:0]s_axi_arprot;
  input [3:0]s_axi_arqos;
  output s_axi_arready;
  input [1023:0]s_axi_aruser;
  input s_axi_arvalid;
  input [9:0]s_axi_awaddr;
  input [3:0]s_axi_awcache;
  input [2:0]s_axi_awid;
  input [7:0]s_axi_awlen;
  input [0:0]s_axi_awlock;
  input [2:0]s_axi_awprot;
  input [3:0]s_axi_awqos;
  output s_axi_awready;
  input [1023:0]s_axi_awuser;
  input s_axi_awvalid;
  output [2:0]s_axi_bid;
  input s_axi_bready;
  output [1:0]s_axi_bresp;
  output [1023:0]s_axi_buser;
  output s_axi_bvalid;
  output [31:0]s_axi_rdata;
  output [2:0]s_axi_rid;
  output s_axi_rlast;
  input s_axi_rready;
  output [1:0]s_axi_rresp;
  output [1023:0]s_axi_ruser;
  output s_axi_rvalid;
  input [31:0]s_axi_wdata;
  input s_axi_wlast;
  output s_axi_wready;
  input [3:0]s_axi_wstrb;
  input [1023:0]s_axi_wuser;
  input s_axi_wvalid;

  wire aclk_1;
  wire aresetn_1;
  wire [9:0]m48_exit_M_AXI_ARADDR;
  wire [2:0]m48_exit_M_AXI_ARPROT;
  wire m48_exit_M_AXI_ARREADY;
  wire m48_exit_M_AXI_ARVALID;
  wire [9:0]m48_exit_M_AXI_AWADDR;
  wire [2:0]m48_exit_M_AXI_AWPROT;
  wire m48_exit_M_AXI_AWREADY;
  wire m48_exit_M_AXI_AWVALID;
  wire m48_exit_M_AXI_BREADY;
  wire [1:0]m48_exit_M_AXI_BRESP;
  wire m48_exit_M_AXI_BVALID;
  wire [31:0]m48_exit_M_AXI_RDATA;
  wire m48_exit_M_AXI_RREADY;
  wire [1:0]m48_exit_M_AXI_RRESP;
  wire m48_exit_M_AXI_RVALID;
  wire [31:0]m48_exit_M_AXI_WDATA;
  wire m48_exit_M_AXI_WREADY;
  wire [3:0]m48_exit_M_AXI_WSTRB;
  wire m48_exit_M_AXI_WVALID;
  wire [9:0]s_axi_1_ARADDR;
  wire [3:0]s_axi_1_ARCACHE;
  wire [2:0]s_axi_1_ARID;
  wire [7:0]s_axi_1_ARLEN;
  wire [0:0]s_axi_1_ARLOCK;
  wire [2:0]s_axi_1_ARPROT;
  wire [3:0]s_axi_1_ARQOS;
  wire s_axi_1_ARREADY;
  wire [1023:0]s_axi_1_ARUSER;
  wire s_axi_1_ARVALID;
  wire [9:0]s_axi_1_AWADDR;
  wire [3:0]s_axi_1_AWCACHE;
  wire [2:0]s_axi_1_AWID;
  wire [7:0]s_axi_1_AWLEN;
  wire [0:0]s_axi_1_AWLOCK;
  wire [2:0]s_axi_1_AWPROT;
  wire [3:0]s_axi_1_AWQOS;
  wire s_axi_1_AWREADY;
  wire [1023:0]s_axi_1_AWUSER;
  wire s_axi_1_AWVALID;
  wire [2:0]s_axi_1_BID;
  wire s_axi_1_BREADY;
  wire [1:0]s_axi_1_BRESP;
  wire [1023:0]s_axi_1_BUSER;
  wire s_axi_1_BVALID;
  wire [31:0]s_axi_1_RDATA;
  wire [2:0]s_axi_1_RID;
  wire s_axi_1_RLAST;
  wire s_axi_1_RREADY;
  wire [1:0]s_axi_1_RRESP;
  wire [1023:0]s_axi_1_RUSER;
  wire s_axi_1_RVALID;
  wire [31:0]s_axi_1_WDATA;
  wire s_axi_1_WLAST;
  wire s_axi_1_WREADY;
  wire [3:0]s_axi_1_WSTRB;
  wire [1023:0]s_axi_1_WUSER;
  wire s_axi_1_WVALID;

  assign aclk_1 = aclk;
  assign aresetn_1 = aresetn;
  assign m48_exit_M_AXI_ARREADY = m_axi_arready;
  assign m48_exit_M_AXI_AWREADY = m_axi_awready;
  assign m48_exit_M_AXI_BRESP = m_axi_bresp[1:0];
  assign m48_exit_M_AXI_BVALID = m_axi_bvalid;
  assign m48_exit_M_AXI_RDATA = m_axi_rdata[31:0];
  assign m48_exit_M_AXI_RRESP = m_axi_rresp[1:0];
  assign m48_exit_M_AXI_RVALID = m_axi_rvalid;
  assign m48_exit_M_AXI_WREADY = m_axi_wready;
  assign m_axi_araddr[9:0] = m48_exit_M_AXI_ARADDR;
  assign m_axi_arprot[2:0] = m48_exit_M_AXI_ARPROT;
  assign m_axi_arvalid = m48_exit_M_AXI_ARVALID;
  assign m_axi_awaddr[9:0] = m48_exit_M_AXI_AWADDR;
  assign m_axi_awprot[2:0] = m48_exit_M_AXI_AWPROT;
  assign m_axi_awvalid = m48_exit_M_AXI_AWVALID;
  assign m_axi_bready = m48_exit_M_AXI_BREADY;
  assign m_axi_rready = m48_exit_M_AXI_RREADY;
  assign m_axi_wdata[31:0] = m48_exit_M_AXI_WDATA;
  assign m_axi_wstrb[3:0] = m48_exit_M_AXI_WSTRB;
  assign m_axi_wvalid = m48_exit_M_AXI_WVALID;
  assign s_axi_1_ARADDR = s_axi_araddr[9:0];
  assign s_axi_1_ARCACHE = s_axi_arcache[3:0];
  assign s_axi_1_ARID = s_axi_arid[2:0];
  assign s_axi_1_ARLEN = s_axi_arlen[7:0];
  assign s_axi_1_ARLOCK = s_axi_arlock[0];
  assign s_axi_1_ARPROT = s_axi_arprot[2:0];
  assign s_axi_1_ARQOS = s_axi_arqos[3:0];
  assign s_axi_1_ARUSER = s_axi_aruser[1023:0];
  assign s_axi_1_ARVALID = s_axi_arvalid;
  assign s_axi_1_AWADDR = s_axi_awaddr[9:0];
  assign s_axi_1_AWCACHE = s_axi_awcache[3:0];
  assign s_axi_1_AWID = s_axi_awid[2:0];
  assign s_axi_1_AWLEN = s_axi_awlen[7:0];
  assign s_axi_1_AWLOCK = s_axi_awlock[0];
  assign s_axi_1_AWPROT = s_axi_awprot[2:0];
  assign s_axi_1_AWQOS = s_axi_awqos[3:0];
  assign s_axi_1_AWUSER = s_axi_awuser[1023:0];
  assign s_axi_1_AWVALID = s_axi_awvalid;
  assign s_axi_1_BREADY = s_axi_bready;
  assign s_axi_1_RREADY = s_axi_rready;
  assign s_axi_1_WDATA = s_axi_wdata[31:0];
  assign s_axi_1_WLAST = s_axi_wlast;
  assign s_axi_1_WSTRB = s_axi_wstrb[3:0];
  assign s_axi_1_WUSER = s_axi_wuser[1023:0];
  assign s_axi_1_WVALID = s_axi_wvalid;
  assign s_axi_arready = s_axi_1_ARREADY;
  assign s_axi_awready = s_axi_1_AWREADY;
  assign s_axi_bid[2:0] = s_axi_1_BID;
  assign s_axi_bresp[1:0] = s_axi_1_BRESP;
  assign s_axi_buser[1023:0] = s_axi_1_BUSER;
  assign s_axi_bvalid = s_axi_1_BVALID;
  assign s_axi_rdata[31:0] = s_axi_1_RDATA;
  assign s_axi_rid[2:0] = s_axi_1_RID;
  assign s_axi_rlast = s_axi_1_RLAST;
  assign s_axi_rresp[1:0] = s_axi_1_RRESP;
  assign s_axi_ruser[1023:0] = s_axi_1_RUSER;
  assign s_axi_rvalid = s_axi_1_RVALID;
  assign s_axi_wready = s_axi_1_WREADY;
  bd_afc3_m48e_0 m48_exit
       (.aclk(aclk_1),
        .aresetn(aresetn_1),
        .m_axi_araddr(m48_exit_M_AXI_ARADDR),
        .m_axi_arprot(m48_exit_M_AXI_ARPROT),
        .m_axi_arready(m48_exit_M_AXI_ARREADY),
        .m_axi_arvalid(m48_exit_M_AXI_ARVALID),
        .m_axi_awaddr(m48_exit_M_AXI_AWADDR),
        .m_axi_awprot(m48_exit_M_AXI_AWPROT),
        .m_axi_awready(m48_exit_M_AXI_AWREADY),
        .m_axi_awvalid(m48_exit_M_AXI_AWVALID),
        .m_axi_bready(m48_exit_M_AXI_BREADY),
        .m_axi_bresp(m48_exit_M_AXI_BRESP),
        .m_axi_bvalid(m48_exit_M_AXI_BVALID),
        .m_axi_rdata(m48_exit_M_AXI_RDATA),
        .m_axi_rready(m48_exit_M_AXI_RREADY),
        .m_axi_rresp(m48_exit_M_AXI_RRESP),
        .m_axi_rvalid(m48_exit_M_AXI_RVALID),
        .m_axi_wdata(m48_exit_M_AXI_WDATA),
        .m_axi_wready(m48_exit_M_AXI_WREADY),
        .m_axi_wstrb(m48_exit_M_AXI_WSTRB),
        .m_axi_wvalid(m48_exit_M_AXI_WVALID),
        .s_axi_araddr(s_axi_1_ARADDR),
        .s_axi_arcache(s_axi_1_ARCACHE),
        .s_axi_arid(s_axi_1_ARID),
        .s_axi_arlen(s_axi_1_ARLEN),
        .s_axi_arlock(s_axi_1_ARLOCK),
        .s_axi_arprot(s_axi_1_ARPROT),
        .s_axi_arqos(s_axi_1_ARQOS),
        .s_axi_arready(s_axi_1_ARREADY),
        .s_axi_aruser(s_axi_1_ARUSER),
        .s_axi_arvalid(s_axi_1_ARVALID),
        .s_axi_awaddr(s_axi_1_AWADDR),
        .s_axi_awcache(s_axi_1_AWCACHE),
        .s_axi_awid(s_axi_1_AWID),
        .s_axi_awlen(s_axi_1_AWLEN),
        .s_axi_awlock(s_axi_1_AWLOCK),
        .s_axi_awprot(s_axi_1_AWPROT),
        .s_axi_awqos(s_axi_1_AWQOS),
        .s_axi_awready(s_axi_1_AWREADY),
        .s_axi_awuser(s_axi_1_AWUSER),
        .s_axi_awvalid(s_axi_1_AWVALID),
        .s_axi_bid(s_axi_1_BID),
        .s_axi_bready(s_axi_1_BREADY),
        .s_axi_bresp(s_axi_1_BRESP),
        .s_axi_buser(s_axi_1_BUSER),
        .s_axi_bvalid(s_axi_1_BVALID),
        .s_axi_rdata(s_axi_1_RDATA),
        .s_axi_rid(s_axi_1_RID),
        .s_axi_rlast(s_axi_1_RLAST),
        .s_axi_rready(s_axi_1_RREADY),
        .s_axi_rresp(s_axi_1_RRESP),
        .s_axi_ruser(s_axi_1_RUSER),
        .s_axi_rvalid(s_axi_1_RVALID),
        .s_axi_wdata(s_axi_1_WDATA),
        .s_axi_wlast(s_axi_1_WLAST),
        .s_axi_wready(s_axi_1_WREADY),
        .s_axi_wstrb(s_axi_1_WSTRB),
        .s_axi_wuser(s_axi_1_WUSER),
        .s_axi_wvalid(s_axi_1_WVALID));
endmodule

module m48_nodes_imp_1BXG0U
   (M_SC_AR_info,
    M_SC_AR_payld,
    M_SC_AR_recv,
    M_SC_AR_req,
    M_SC_AR_send,
    M_SC_AW_info,
    M_SC_AW_payld,
    M_SC_AW_recv,
    M_SC_AW_req,
    M_SC_AW_send,
    M_SC_B_info,
    M_SC_B_payld,
    M_SC_B_recv,
    M_SC_B_req,
    M_SC_B_send,
    M_SC_R_info,
    M_SC_R_payld,
    M_SC_R_recv,
    M_SC_R_req,
    M_SC_R_send,
    M_SC_W_info,
    M_SC_W_payld,
    M_SC_W_recv,
    M_SC_W_req,
    M_SC_W_send,
    S_SC_AR_info,
    S_SC_AR_payld,
    S_SC_AR_recv,
    S_SC_AR_req,
    S_SC_AR_send,
    S_SC_AW_info,
    S_SC_AW_payld,
    S_SC_AW_recv,
    S_SC_AW_req,
    S_SC_AW_send,
    S_SC_B_info,
    S_SC_B_payld,
    S_SC_B_recv,
    S_SC_B_req,
    S_SC_B_send,
    S_SC_R_info,
    S_SC_R_payld,
    S_SC_R_recv,
    S_SC_R_req,
    S_SC_R_send,
    S_SC_W_info,
    S_SC_W_payld,
    S_SC_W_recv,
    S_SC_W_req,
    S_SC_W_send,
    m_axi_aclk,
    m_axi_aresetn,
    s_axi_aclk,
    s_axi_aresetn);
  output [0:0]M_SC_AR_info;
  output [181:0]M_SC_AR_payld;
  input [0:0]M_SC_AR_recv;
  output [0:0]M_SC_AR_req;
  output [0:0]M_SC_AR_send;
  output [0:0]M_SC_AW_info;
  output [181:0]M_SC_AW_payld;
  input [0:0]M_SC_AW_recv;
  output [0:0]M_SC_AW_req;
  output [0:0]M_SC_AW_send;
  output [0:0]M_SC_B_info;
  output [8:0]M_SC_B_payld;
  input [0:0]M_SC_B_recv;
  output [0:0]M_SC_B_req;
  output [0:0]M_SC_B_send;
  output [0:0]M_SC_R_info;
  output [54:0]M_SC_R_payld;
  input [0:0]M_SC_R_recv;
  output [0:0]M_SC_R_req;
  output [0:0]M_SC_R_send;
  output [0:0]M_SC_W_info;
  output [68:0]M_SC_W_payld;
  input [0:0]M_SC_W_recv;
  output [0:0]M_SC_W_req;
  output [0:0]M_SC_W_send;
  input [0:0]S_SC_AR_info;
  input [181:0]S_SC_AR_payld;
  output [0:0]S_SC_AR_recv;
  input [0:0]S_SC_AR_req;
  input [0:0]S_SC_AR_send;
  input [0:0]S_SC_AW_info;
  input [181:0]S_SC_AW_payld;
  output [0:0]S_SC_AW_recv;
  input [0:0]S_SC_AW_req;
  input [0:0]S_SC_AW_send;
  input [0:0]S_SC_B_info;
  input [8:0]S_SC_B_payld;
  output [0:0]S_SC_B_recv;
  input [0:0]S_SC_B_req;
  input [0:0]S_SC_B_send;
  input [0:0]S_SC_R_info;
  input [54:0]S_SC_R_payld;
  output [0:0]S_SC_R_recv;
  input [0:0]S_SC_R_req;
  input [0:0]S_SC_R_send;
  input [0:0]S_SC_W_info;
  input [68:0]S_SC_W_payld;
  output [0:0]S_SC_W_recv;
  input [0:0]S_SC_W_req;
  input [0:0]S_SC_W_send;
  input m_axi_aclk;
  input m_axi_aresetn;
  input s_axi_aclk;
  input s_axi_aresetn;

  wire [0:0]S_SC_AR_1_INFO;
  wire [181:0]S_SC_AR_1_PAYLD;
  wire [0:0]S_SC_AR_1_RECV;
  wire [0:0]S_SC_AR_1_REQ;
  wire [0:0]S_SC_AR_1_SEND;
  wire [0:0]S_SC_AW_1_INFO;
  wire [181:0]S_SC_AW_1_PAYLD;
  wire [0:0]S_SC_AW_1_RECV;
  wire [0:0]S_SC_AW_1_REQ;
  wire [0:0]S_SC_AW_1_SEND;
  wire [0:0]S_SC_B_1_INFO;
  wire [8:0]S_SC_B_1_PAYLD;
  wire [0:0]S_SC_B_1_RECV;
  wire [0:0]S_SC_B_1_REQ;
  wire [0:0]S_SC_B_1_SEND;
  wire [0:0]S_SC_R_1_INFO;
  wire [54:0]S_SC_R_1_PAYLD;
  wire [0:0]S_SC_R_1_RECV;
  wire [0:0]S_SC_R_1_REQ;
  wire [0:0]S_SC_R_1_SEND;
  wire [0:0]S_SC_W_1_INFO;
  wire [68:0]S_SC_W_1_PAYLD;
  wire [0:0]S_SC_W_1_RECV;
  wire [0:0]S_SC_W_1_REQ;
  wire [0:0]S_SC_W_1_SEND;
  wire [0:0]m48_ar_node_M_SC_INFO;
  wire [181:0]m48_ar_node_M_SC_PAYLD;
  wire [0:0]m48_ar_node_M_SC_RECV;
  wire [0:0]m48_ar_node_M_SC_REQ;
  wire [0:0]m48_ar_node_M_SC_SEND;
  wire [0:0]m48_aw_node_M_SC_INFO;
  wire [181:0]m48_aw_node_M_SC_PAYLD;
  wire [0:0]m48_aw_node_M_SC_RECV;
  wire [0:0]m48_aw_node_M_SC_REQ;
  wire [0:0]m48_aw_node_M_SC_SEND;
  wire [0:0]m48_b_node_M_SC_INFO;
  wire [8:0]m48_b_node_M_SC_PAYLD;
  wire [0:0]m48_b_node_M_SC_RECV;
  wire [0:0]m48_b_node_M_SC_REQ;
  wire [0:0]m48_b_node_M_SC_SEND;
  wire [0:0]m48_r_node_M_SC_INFO;
  wire [54:0]m48_r_node_M_SC_PAYLD;
  wire [0:0]m48_r_node_M_SC_RECV;
  wire [0:0]m48_r_node_M_SC_REQ;
  wire [0:0]m48_r_node_M_SC_SEND;
  wire [0:0]m48_w_node_M_SC_INFO;
  wire [68:0]m48_w_node_M_SC_PAYLD;
  wire [0:0]m48_w_node_M_SC_RECV;
  wire [0:0]m48_w_node_M_SC_REQ;
  wire [0:0]m48_w_node_M_SC_SEND;
  wire m_axi_aclk_1;
  wire m_axi_aresetn_1;
  wire s_axi_aclk_1;
  wire s_axi_aresetn_1;

  assign M_SC_AR_info[0] = m48_ar_node_M_SC_INFO;
  assign M_SC_AR_payld[181:0] = m48_ar_node_M_SC_PAYLD;
  assign M_SC_AR_req[0] = m48_ar_node_M_SC_REQ;
  assign M_SC_AR_send[0] = m48_ar_node_M_SC_SEND;
  assign M_SC_AW_info[0] = m48_aw_node_M_SC_INFO;
  assign M_SC_AW_payld[181:0] = m48_aw_node_M_SC_PAYLD;
  assign M_SC_AW_req[0] = m48_aw_node_M_SC_REQ;
  assign M_SC_AW_send[0] = m48_aw_node_M_SC_SEND;
  assign M_SC_B_info[0] = m48_b_node_M_SC_INFO;
  assign M_SC_B_payld[8:0] = m48_b_node_M_SC_PAYLD;
  assign M_SC_B_req[0] = m48_b_node_M_SC_REQ;
  assign M_SC_B_send[0] = m48_b_node_M_SC_SEND;
  assign M_SC_R_info[0] = m48_r_node_M_SC_INFO;
  assign M_SC_R_payld[54:0] = m48_r_node_M_SC_PAYLD;
  assign M_SC_R_req[0] = m48_r_node_M_SC_REQ;
  assign M_SC_R_send[0] = m48_r_node_M_SC_SEND;
  assign M_SC_W_info[0] = m48_w_node_M_SC_INFO;
  assign M_SC_W_payld[68:0] = m48_w_node_M_SC_PAYLD;
  assign M_SC_W_req[0] = m48_w_node_M_SC_REQ;
  assign M_SC_W_send[0] = m48_w_node_M_SC_SEND;
  assign S_SC_AR_1_INFO = S_SC_AR_info[0];
  assign S_SC_AR_1_PAYLD = S_SC_AR_payld[181:0];
  assign S_SC_AR_1_REQ = S_SC_AR_req[0];
  assign S_SC_AR_1_SEND = S_SC_AR_send[0];
  assign S_SC_AR_recv[0] = S_SC_AR_1_RECV;
  assign S_SC_AW_1_INFO = S_SC_AW_info[0];
  assign S_SC_AW_1_PAYLD = S_SC_AW_payld[181:0];
  assign S_SC_AW_1_REQ = S_SC_AW_req[0];
  assign S_SC_AW_1_SEND = S_SC_AW_send[0];
  assign S_SC_AW_recv[0] = S_SC_AW_1_RECV;
  assign S_SC_B_1_INFO = S_SC_B_info[0];
  assign S_SC_B_1_PAYLD = S_SC_B_payld[8:0];
  assign S_SC_B_1_REQ = S_SC_B_req[0];
  assign S_SC_B_1_SEND = S_SC_B_send[0];
  assign S_SC_B_recv[0] = S_SC_B_1_RECV;
  assign S_SC_R_1_INFO = S_SC_R_info[0];
  assign S_SC_R_1_PAYLD = S_SC_R_payld[54:0];
  assign S_SC_R_1_REQ = S_SC_R_req[0];
  assign S_SC_R_1_SEND = S_SC_R_send[0];
  assign S_SC_R_recv[0] = S_SC_R_1_RECV;
  assign S_SC_W_1_INFO = S_SC_W_info[0];
  assign S_SC_W_1_PAYLD = S_SC_W_payld[68:0];
  assign S_SC_W_1_REQ = S_SC_W_req[0];
  assign S_SC_W_1_SEND = S_SC_W_send[0];
  assign S_SC_W_recv[0] = S_SC_W_1_RECV;
  assign m48_ar_node_M_SC_RECV = M_SC_AR_recv[0];
  assign m48_aw_node_M_SC_RECV = M_SC_AW_recv[0];
  assign m48_b_node_M_SC_RECV = M_SC_B_recv[0];
  assign m48_r_node_M_SC_RECV = M_SC_R_recv[0];
  assign m48_w_node_M_SC_RECV = M_SC_W_recv[0];
  assign m_axi_aclk_1 = m_axi_aclk;
  assign m_axi_aresetn_1 = m_axi_aresetn;
  assign s_axi_aclk_1 = s_axi_aclk;
  assign s_axi_aresetn_1 = s_axi_aresetn;
  bd_afc3_m48arn_0 m48_ar_node
       (.m_sc_aclk(m_axi_aclk_1),
        .m_sc_aresetn(m_axi_aresetn_1),
        .m_sc_info(m48_ar_node_M_SC_INFO),
        .m_sc_payld(m48_ar_node_M_SC_PAYLD),
        .m_sc_recv(m48_ar_node_M_SC_RECV),
        .m_sc_req(m48_ar_node_M_SC_REQ),
        .m_sc_send(m48_ar_node_M_SC_SEND),
        .s_sc_aclk(s_axi_aclk_1),
        .s_sc_aresetn(s_axi_aresetn_1),
        .s_sc_info(S_SC_AR_1_INFO),
        .s_sc_payld(S_SC_AR_1_PAYLD),
        .s_sc_recv(S_SC_AR_1_RECV),
        .s_sc_req(S_SC_AR_1_REQ),
        .s_sc_send(S_SC_AR_1_SEND));
  bd_afc3_m48awn_0 m48_aw_node
       (.m_sc_aclk(m_axi_aclk_1),
        .m_sc_aresetn(m_axi_aresetn_1),
        .m_sc_info(m48_aw_node_M_SC_INFO),
        .m_sc_payld(m48_aw_node_M_SC_PAYLD),
        .m_sc_recv(m48_aw_node_M_SC_RECV),
        .m_sc_req(m48_aw_node_M_SC_REQ),
        .m_sc_send(m48_aw_node_M_SC_SEND),
        .s_sc_aclk(s_axi_aclk_1),
        .s_sc_aresetn(s_axi_aresetn_1),
        .s_sc_info(S_SC_AW_1_INFO),
        .s_sc_payld(S_SC_AW_1_PAYLD),
        .s_sc_recv(S_SC_AW_1_RECV),
        .s_sc_req(S_SC_AW_1_REQ),
        .s_sc_send(S_SC_AW_1_SEND));
  bd_afc3_m48bn_0 m48_b_node
       (.m_sc_aclk(s_axi_aclk_1),
        .m_sc_aresetn(s_axi_aresetn_1),
        .m_sc_info(m48_b_node_M_SC_INFO),
        .m_sc_payld(m48_b_node_M_SC_PAYLD),
        .m_sc_recv(m48_b_node_M_SC_RECV),
        .m_sc_req(m48_b_node_M_SC_REQ),
        .m_sc_send(m48_b_node_M_SC_SEND),
        .s_sc_aclk(m_axi_aclk_1),
        .s_sc_aresetn(m_axi_aresetn_1),
        .s_sc_info(S_SC_B_1_INFO),
        .s_sc_payld(S_SC_B_1_PAYLD),
        .s_sc_recv(S_SC_B_1_RECV),
        .s_sc_req(S_SC_B_1_REQ),
        .s_sc_send(S_SC_B_1_SEND));
  bd_afc3_m48rn_0 m48_r_node
       (.m_sc_aclk(s_axi_aclk_1),
        .m_sc_aresetn(s_axi_aresetn_1),
        .m_sc_info(m48_r_node_M_SC_INFO),
        .m_sc_payld(m48_r_node_M_SC_PAYLD),
        .m_sc_recv(m48_r_node_M_SC_RECV),
        .m_sc_req(m48_r_node_M_SC_REQ),
        .m_sc_send(m48_r_node_M_SC_SEND),
        .s_sc_aclk(m_axi_aclk_1),
        .s_sc_aresetn(m_axi_aresetn_1),
        .s_sc_info(S_SC_R_1_INFO),
        .s_sc_payld(S_SC_R_1_PAYLD),
        .s_sc_recv(S_SC_R_1_RECV),
        .s_sc_req(S_SC_R_1_REQ),
        .s_sc_send(S_SC_R_1_SEND));
  bd_afc3_m48wn_0 m48_w_node
       (.m_sc_aclk(m_axi_aclk_1),
        .m_sc_aresetn(m_axi_aresetn_1),
        .m_sc_info(m48_w_node_M_SC_INFO),
        .m_sc_payld(m48_w_node_M_SC_PAYLD),
        .m_sc_recv(m48_w_node_M_SC_RECV),
        .m_sc_req(m48_w_node_M_SC_REQ),
        .m_sc_send(m48_w_node_M_SC_SEND),
        .s_sc_aclk(s_axi_aclk_1),
        .s_sc_aresetn(s_axi_aresetn_1),
        .s_sc_info(S_SC_W_1_INFO),
        .s_sc_payld(S_SC_W_1_PAYLD),
        .s_sc_recv(S_SC_W_1_RECV),
        .s_sc_req(S_SC_W_1_REQ),
        .s_sc_send(S_SC_W_1_SEND));
endmodule

module m49_exit_pipeline_imp_IUFSDW
   (aclk,
    aresetn,
    m_axi_araddr,
    m_axi_arprot,
    m_axi_arready,
    m_axi_arvalid,
    m_axi_awaddr,
    m_axi_awprot,
    m_axi_awready,
    m_axi_awvalid,
    m_axi_bready,
    m_axi_bresp,
    m_axi_bvalid,
    m_axi_rdata,
    m_axi_rready,
    m_axi_rresp,
    m_axi_rvalid,
    m_axi_wdata,
    m_axi_wready,
    m_axi_wstrb,
    m_axi_wvalid,
    s_axi_araddr,
    s_axi_arcache,
    s_axi_arid,
    s_axi_arlen,
    s_axi_arlock,
    s_axi_arprot,
    s_axi_arqos,
    s_axi_arready,
    s_axi_aruser,
    s_axi_arvalid,
    s_axi_awaddr,
    s_axi_awcache,
    s_axi_awid,
    s_axi_awlen,
    s_axi_awlock,
    s_axi_awprot,
    s_axi_awqos,
    s_axi_awready,
    s_axi_awuser,
    s_axi_awvalid,
    s_axi_bid,
    s_axi_bready,
    s_axi_bresp,
    s_axi_buser,
    s_axi_bvalid,
    s_axi_rdata,
    s_axi_rid,
    s_axi_rlast,
    s_axi_rready,
    s_axi_rresp,
    s_axi_ruser,
    s_axi_rvalid,
    s_axi_wdata,
    s_axi_wlast,
    s_axi_wready,
    s_axi_wstrb,
    s_axi_wuser,
    s_axi_wvalid);
  input aclk;
  input aresetn;
  output [9:0]m_axi_araddr;
  output [2:0]m_axi_arprot;
  input m_axi_arready;
  output m_axi_arvalid;
  output [9:0]m_axi_awaddr;
  output [2:0]m_axi_awprot;
  input m_axi_awready;
  output m_axi_awvalid;
  output m_axi_bready;
  input [1:0]m_axi_bresp;
  input m_axi_bvalid;
  input [31:0]m_axi_rdata;
  output m_axi_rready;
  input [1:0]m_axi_rresp;
  input m_axi_rvalid;
  output [31:0]m_axi_wdata;
  input m_axi_wready;
  output [3:0]m_axi_wstrb;
  output m_axi_wvalid;
  input [9:0]s_axi_araddr;
  input [3:0]s_axi_arcache;
  input [2:0]s_axi_arid;
  input [7:0]s_axi_arlen;
  input [0:0]s_axi_arlock;
  input [2:0]s_axi_arprot;
  input [3:0]s_axi_arqos;
  output s_axi_arready;
  input [1023:0]s_axi_aruser;
  input s_axi_arvalid;
  input [9:0]s_axi_awaddr;
  input [3:0]s_axi_awcache;
  input [2:0]s_axi_awid;
  input [7:0]s_axi_awlen;
  input [0:0]s_axi_awlock;
  input [2:0]s_axi_awprot;
  input [3:0]s_axi_awqos;
  output s_axi_awready;
  input [1023:0]s_axi_awuser;
  input s_axi_awvalid;
  output [2:0]s_axi_bid;
  input s_axi_bready;
  output [1:0]s_axi_bresp;
  output [1023:0]s_axi_buser;
  output s_axi_bvalid;
  output [31:0]s_axi_rdata;
  output [2:0]s_axi_rid;
  output s_axi_rlast;
  input s_axi_rready;
  output [1:0]s_axi_rresp;
  output [1023:0]s_axi_ruser;
  output s_axi_rvalid;
  input [31:0]s_axi_wdata;
  input s_axi_wlast;
  output s_axi_wready;
  input [3:0]s_axi_wstrb;
  input [1023:0]s_axi_wuser;
  input s_axi_wvalid;

  wire aclk_1;
  wire aresetn_1;
  wire [9:0]m49_exit_M_AXI_ARADDR;
  wire [2:0]m49_exit_M_AXI_ARPROT;
  wire m49_exit_M_AXI_ARREADY;
  wire m49_exit_M_AXI_ARVALID;
  wire [9:0]m49_exit_M_AXI_AWADDR;
  wire [2:0]m49_exit_M_AXI_AWPROT;
  wire m49_exit_M_AXI_AWREADY;
  wire m49_exit_M_AXI_AWVALID;
  wire m49_exit_M_AXI_BREADY;
  wire [1:0]m49_exit_M_AXI_BRESP;
  wire m49_exit_M_AXI_BVALID;
  wire [31:0]m49_exit_M_AXI_RDATA;
  wire m49_exit_M_AXI_RREADY;
  wire [1:0]m49_exit_M_AXI_RRESP;
  wire m49_exit_M_AXI_RVALID;
  wire [31:0]m49_exit_M_AXI_WDATA;
  wire m49_exit_M_AXI_WREADY;
  wire [3:0]m49_exit_M_AXI_WSTRB;
  wire m49_exit_M_AXI_WVALID;
  wire [9:0]s_axi_1_ARADDR;
  wire [3:0]s_axi_1_ARCACHE;
  wire [2:0]s_axi_1_ARID;
  wire [7:0]s_axi_1_ARLEN;
  wire [0:0]s_axi_1_ARLOCK;
  wire [2:0]s_axi_1_ARPROT;
  wire [3:0]s_axi_1_ARQOS;
  wire s_axi_1_ARREADY;
  wire [1023:0]s_axi_1_ARUSER;
  wire s_axi_1_ARVALID;
  wire [9:0]s_axi_1_AWADDR;
  wire [3:0]s_axi_1_AWCACHE;
  wire [2:0]s_axi_1_AWID;
  wire [7:0]s_axi_1_AWLEN;
  wire [0:0]s_axi_1_AWLOCK;
  wire [2:0]s_axi_1_AWPROT;
  wire [3:0]s_axi_1_AWQOS;
  wire s_axi_1_AWREADY;
  wire [1023:0]s_axi_1_AWUSER;
  wire s_axi_1_AWVALID;
  wire [2:0]s_axi_1_BID;
  wire s_axi_1_BREADY;
  wire [1:0]s_axi_1_BRESP;
  wire [1023:0]s_axi_1_BUSER;
  wire s_axi_1_BVALID;
  wire [31:0]s_axi_1_RDATA;
  wire [2:0]s_axi_1_RID;
  wire s_axi_1_RLAST;
  wire s_axi_1_RREADY;
  wire [1:0]s_axi_1_RRESP;
  wire [1023:0]s_axi_1_RUSER;
  wire s_axi_1_RVALID;
  wire [31:0]s_axi_1_WDATA;
  wire s_axi_1_WLAST;
  wire s_axi_1_WREADY;
  wire [3:0]s_axi_1_WSTRB;
  wire [1023:0]s_axi_1_WUSER;
  wire s_axi_1_WVALID;

  assign aclk_1 = aclk;
  assign aresetn_1 = aresetn;
  assign m49_exit_M_AXI_ARREADY = m_axi_arready;
  assign m49_exit_M_AXI_AWREADY = m_axi_awready;
  assign m49_exit_M_AXI_BRESP = m_axi_bresp[1:0];
  assign m49_exit_M_AXI_BVALID = m_axi_bvalid;
  assign m49_exit_M_AXI_RDATA = m_axi_rdata[31:0];
  assign m49_exit_M_AXI_RRESP = m_axi_rresp[1:0];
  assign m49_exit_M_AXI_RVALID = m_axi_rvalid;
  assign m49_exit_M_AXI_WREADY = m_axi_wready;
  assign m_axi_araddr[9:0] = m49_exit_M_AXI_ARADDR;
  assign m_axi_arprot[2:0] = m49_exit_M_AXI_ARPROT;
  assign m_axi_arvalid = m49_exit_M_AXI_ARVALID;
  assign m_axi_awaddr[9:0] = m49_exit_M_AXI_AWADDR;
  assign m_axi_awprot[2:0] = m49_exit_M_AXI_AWPROT;
  assign m_axi_awvalid = m49_exit_M_AXI_AWVALID;
  assign m_axi_bready = m49_exit_M_AXI_BREADY;
  assign m_axi_rready = m49_exit_M_AXI_RREADY;
  assign m_axi_wdata[31:0] = m49_exit_M_AXI_WDATA;
  assign m_axi_wstrb[3:0] = m49_exit_M_AXI_WSTRB;
  assign m_axi_wvalid = m49_exit_M_AXI_WVALID;
  assign s_axi_1_ARADDR = s_axi_araddr[9:0];
  assign s_axi_1_ARCACHE = s_axi_arcache[3:0];
  assign s_axi_1_ARID = s_axi_arid[2:0];
  assign s_axi_1_ARLEN = s_axi_arlen[7:0];
  assign s_axi_1_ARLOCK = s_axi_arlock[0];
  assign s_axi_1_ARPROT = s_axi_arprot[2:0];
  assign s_axi_1_ARQOS = s_axi_arqos[3:0];
  assign s_axi_1_ARUSER = s_axi_aruser[1023:0];
  assign s_axi_1_ARVALID = s_axi_arvalid;
  assign s_axi_1_AWADDR = s_axi_awaddr[9:0];
  assign s_axi_1_AWCACHE = s_axi_awcache[3:0];
  assign s_axi_1_AWID = s_axi_awid[2:0];
  assign s_axi_1_AWLEN = s_axi_awlen[7:0];
  assign s_axi_1_AWLOCK = s_axi_awlock[0];
  assign s_axi_1_AWPROT = s_axi_awprot[2:0];
  assign s_axi_1_AWQOS = s_axi_awqos[3:0];
  assign s_axi_1_AWUSER = s_axi_awuser[1023:0];
  assign s_axi_1_AWVALID = s_axi_awvalid;
  assign s_axi_1_BREADY = s_axi_bready;
  assign s_axi_1_RREADY = s_axi_rready;
  assign s_axi_1_WDATA = s_axi_wdata[31:0];
  assign s_axi_1_WLAST = s_axi_wlast;
  assign s_axi_1_WSTRB = s_axi_wstrb[3:0];
  assign s_axi_1_WUSER = s_axi_wuser[1023:0];
  assign s_axi_1_WVALID = s_axi_wvalid;
  assign s_axi_arready = s_axi_1_ARREADY;
  assign s_axi_awready = s_axi_1_AWREADY;
  assign s_axi_bid[2:0] = s_axi_1_BID;
  assign s_axi_bresp[1:0] = s_axi_1_BRESP;
  assign s_axi_buser[1023:0] = s_axi_1_BUSER;
  assign s_axi_bvalid = s_axi_1_BVALID;
  assign s_axi_rdata[31:0] = s_axi_1_RDATA;
  assign s_axi_rid[2:0] = s_axi_1_RID;
  assign s_axi_rlast = s_axi_1_RLAST;
  assign s_axi_rresp[1:0] = s_axi_1_RRESP;
  assign s_axi_ruser[1023:0] = s_axi_1_RUSER;
  assign s_axi_rvalid = s_axi_1_RVALID;
  assign s_axi_wready = s_axi_1_WREADY;
  bd_afc3_m49e_0 m49_exit
       (.aclk(aclk_1),
        .aresetn(aresetn_1),
        .m_axi_araddr(m49_exit_M_AXI_ARADDR),
        .m_axi_arprot(m49_exit_M_AXI_ARPROT),
        .m_axi_arready(m49_exit_M_AXI_ARREADY),
        .m_axi_arvalid(m49_exit_M_AXI_ARVALID),
        .m_axi_awaddr(m49_exit_M_AXI_AWADDR),
        .m_axi_awprot(m49_exit_M_AXI_AWPROT),
        .m_axi_awready(m49_exit_M_AXI_AWREADY),
        .m_axi_awvalid(m49_exit_M_AXI_AWVALID),
        .m_axi_bready(m49_exit_M_AXI_BREADY),
        .m_axi_bresp(m49_exit_M_AXI_BRESP),
        .m_axi_bvalid(m49_exit_M_AXI_BVALID),
        .m_axi_rdata(m49_exit_M_AXI_RDATA),
        .m_axi_rready(m49_exit_M_AXI_RREADY),
        .m_axi_rresp(m49_exit_M_AXI_RRESP),
        .m_axi_rvalid(m49_exit_M_AXI_RVALID),
        .m_axi_wdata(m49_exit_M_AXI_WDATA),
        .m_axi_wready(m49_exit_M_AXI_WREADY),
        .m_axi_wstrb(m49_exit_M_AXI_WSTRB),
        .m_axi_wvalid(m49_exit_M_AXI_WVALID),
        .s_axi_araddr(s_axi_1_ARADDR),
        .s_axi_arcache(s_axi_1_ARCACHE),
        .s_axi_arid(s_axi_1_ARID),
        .s_axi_arlen(s_axi_1_ARLEN),
        .s_axi_arlock(s_axi_1_ARLOCK),
        .s_axi_arprot(s_axi_1_ARPROT),
        .s_axi_arqos(s_axi_1_ARQOS),
        .s_axi_arready(s_axi_1_ARREADY),
        .s_axi_aruser(s_axi_1_ARUSER),
        .s_axi_arvalid(s_axi_1_ARVALID),
        .s_axi_awaddr(s_axi_1_AWADDR),
        .s_axi_awcache(s_axi_1_AWCACHE),
        .s_axi_awid(s_axi_1_AWID),
        .s_axi_awlen(s_axi_1_AWLEN),
        .s_axi_awlock(s_axi_1_AWLOCK),
        .s_axi_awprot(s_axi_1_AWPROT),
        .s_axi_awqos(s_axi_1_AWQOS),
        .s_axi_awready(s_axi_1_AWREADY),
        .s_axi_awuser(s_axi_1_AWUSER),
        .s_axi_awvalid(s_axi_1_AWVALID),
        .s_axi_bid(s_axi_1_BID),
        .s_axi_bready(s_axi_1_BREADY),
        .s_axi_bresp(s_axi_1_BRESP),
        .s_axi_buser(s_axi_1_BUSER),
        .s_axi_bvalid(s_axi_1_BVALID),
        .s_axi_rdata(s_axi_1_RDATA),
        .s_axi_rid(s_axi_1_RID),
        .s_axi_rlast(s_axi_1_RLAST),
        .s_axi_rready(s_axi_1_RREADY),
        .s_axi_rresp(s_axi_1_RRESP),
        .s_axi_ruser(s_axi_1_RUSER),
        .s_axi_rvalid(s_axi_1_RVALID),
        .s_axi_wdata(s_axi_1_WDATA),
        .s_axi_wlast(s_axi_1_WLAST),
        .s_axi_wready(s_axi_1_WREADY),
        .s_axi_wstrb(s_axi_1_WSTRB),
        .s_axi_wuser(s_axi_1_WUSER),
        .s_axi_wvalid(s_axi_1_WVALID));
endmodule

module m49_nodes_imp_16NWU20
   (M_SC_AR_info,
    M_SC_AR_payld,
    M_SC_AR_recv,
    M_SC_AR_req,
    M_SC_AR_send,
    M_SC_AW_info,
    M_SC_AW_payld,
    M_SC_AW_recv,
    M_SC_AW_req,
    M_SC_AW_send,
    M_SC_B_info,
    M_SC_B_payld,
    M_SC_B_recv,
    M_SC_B_req,
    M_SC_B_send,
    M_SC_R_info,
    M_SC_R_payld,
    M_SC_R_recv,
    M_SC_R_req,
    M_SC_R_send,
    M_SC_W_info,
    M_SC_W_payld,
    M_SC_W_recv,
    M_SC_W_req,
    M_SC_W_send,
    S_SC_AR_info,
    S_SC_AR_payld,
    S_SC_AR_recv,
    S_SC_AR_req,
    S_SC_AR_send,
    S_SC_AW_info,
    S_SC_AW_payld,
    S_SC_AW_recv,
    S_SC_AW_req,
    S_SC_AW_send,
    S_SC_B_info,
    S_SC_B_payld,
    S_SC_B_recv,
    S_SC_B_req,
    S_SC_B_send,
    S_SC_R_info,
    S_SC_R_payld,
    S_SC_R_recv,
    S_SC_R_req,
    S_SC_R_send,
    S_SC_W_info,
    S_SC_W_payld,
    S_SC_W_recv,
    S_SC_W_req,
    S_SC_W_send,
    m_axi_aclk,
    m_axi_aresetn,
    s_axi_aclk,
    s_axi_aresetn);
  output [0:0]M_SC_AR_info;
  output [181:0]M_SC_AR_payld;
  input [0:0]M_SC_AR_recv;
  output [0:0]M_SC_AR_req;
  output [0:0]M_SC_AR_send;
  output [0:0]M_SC_AW_info;
  output [181:0]M_SC_AW_payld;
  input [0:0]M_SC_AW_recv;
  output [0:0]M_SC_AW_req;
  output [0:0]M_SC_AW_send;
  output [0:0]M_SC_B_info;
  output [8:0]M_SC_B_payld;
  input [0:0]M_SC_B_recv;
  output [0:0]M_SC_B_req;
  output [0:0]M_SC_B_send;
  output [0:0]M_SC_R_info;
  output [54:0]M_SC_R_payld;
  input [0:0]M_SC_R_recv;
  output [0:0]M_SC_R_req;
  output [0:0]M_SC_R_send;
  output [0:0]M_SC_W_info;
  output [68:0]M_SC_W_payld;
  input [0:0]M_SC_W_recv;
  output [0:0]M_SC_W_req;
  output [0:0]M_SC_W_send;
  input [0:0]S_SC_AR_info;
  input [181:0]S_SC_AR_payld;
  output [0:0]S_SC_AR_recv;
  input [0:0]S_SC_AR_req;
  input [0:0]S_SC_AR_send;
  input [0:0]S_SC_AW_info;
  input [181:0]S_SC_AW_payld;
  output [0:0]S_SC_AW_recv;
  input [0:0]S_SC_AW_req;
  input [0:0]S_SC_AW_send;
  input [0:0]S_SC_B_info;
  input [8:0]S_SC_B_payld;
  output [0:0]S_SC_B_recv;
  input [0:0]S_SC_B_req;
  input [0:0]S_SC_B_send;
  input [0:0]S_SC_R_info;
  input [54:0]S_SC_R_payld;
  output [0:0]S_SC_R_recv;
  input [0:0]S_SC_R_req;
  input [0:0]S_SC_R_send;
  input [0:0]S_SC_W_info;
  input [68:0]S_SC_W_payld;
  output [0:0]S_SC_W_recv;
  input [0:0]S_SC_W_req;
  input [0:0]S_SC_W_send;
  input m_axi_aclk;
  input m_axi_aresetn;
  input s_axi_aclk;
  input s_axi_aresetn;

  wire [0:0]S_SC_AR_1_INFO;
  wire [181:0]S_SC_AR_1_PAYLD;
  wire [0:0]S_SC_AR_1_RECV;
  wire [0:0]S_SC_AR_1_REQ;
  wire [0:0]S_SC_AR_1_SEND;
  wire [0:0]S_SC_AW_1_INFO;
  wire [181:0]S_SC_AW_1_PAYLD;
  wire [0:0]S_SC_AW_1_RECV;
  wire [0:0]S_SC_AW_1_REQ;
  wire [0:0]S_SC_AW_1_SEND;
  wire [0:0]S_SC_B_1_INFO;
  wire [8:0]S_SC_B_1_PAYLD;
  wire [0:0]S_SC_B_1_RECV;
  wire [0:0]S_SC_B_1_REQ;
  wire [0:0]S_SC_B_1_SEND;
  wire [0:0]S_SC_R_1_INFO;
  wire [54:0]S_SC_R_1_PAYLD;
  wire [0:0]S_SC_R_1_RECV;
  wire [0:0]S_SC_R_1_REQ;
  wire [0:0]S_SC_R_1_SEND;
  wire [0:0]S_SC_W_1_INFO;
  wire [68:0]S_SC_W_1_PAYLD;
  wire [0:0]S_SC_W_1_RECV;
  wire [0:0]S_SC_W_1_REQ;
  wire [0:0]S_SC_W_1_SEND;
  wire [0:0]m49_ar_node_M_SC_INFO;
  wire [181:0]m49_ar_node_M_SC_PAYLD;
  wire [0:0]m49_ar_node_M_SC_RECV;
  wire [0:0]m49_ar_node_M_SC_REQ;
  wire [0:0]m49_ar_node_M_SC_SEND;
  wire [0:0]m49_aw_node_M_SC_INFO;
  wire [181:0]m49_aw_node_M_SC_PAYLD;
  wire [0:0]m49_aw_node_M_SC_RECV;
  wire [0:0]m49_aw_node_M_SC_REQ;
  wire [0:0]m49_aw_node_M_SC_SEND;
  wire [0:0]m49_b_node_M_SC_INFO;
  wire [8:0]m49_b_node_M_SC_PAYLD;
  wire [0:0]m49_b_node_M_SC_RECV;
  wire [0:0]m49_b_node_M_SC_REQ;
  wire [0:0]m49_b_node_M_SC_SEND;
  wire [0:0]m49_r_node_M_SC_INFO;
  wire [54:0]m49_r_node_M_SC_PAYLD;
  wire [0:0]m49_r_node_M_SC_RECV;
  wire [0:0]m49_r_node_M_SC_REQ;
  wire [0:0]m49_r_node_M_SC_SEND;
  wire [0:0]m49_w_node_M_SC_INFO;
  wire [68:0]m49_w_node_M_SC_PAYLD;
  wire [0:0]m49_w_node_M_SC_RECV;
  wire [0:0]m49_w_node_M_SC_REQ;
  wire [0:0]m49_w_node_M_SC_SEND;
  wire m_axi_aclk_1;
  wire m_axi_aresetn_1;
  wire s_axi_aclk_1;
  wire s_axi_aresetn_1;

  assign M_SC_AR_info[0] = m49_ar_node_M_SC_INFO;
  assign M_SC_AR_payld[181:0] = m49_ar_node_M_SC_PAYLD;
  assign M_SC_AR_req[0] = m49_ar_node_M_SC_REQ;
  assign M_SC_AR_send[0] = m49_ar_node_M_SC_SEND;
  assign M_SC_AW_info[0] = m49_aw_node_M_SC_INFO;
  assign M_SC_AW_payld[181:0] = m49_aw_node_M_SC_PAYLD;
  assign M_SC_AW_req[0] = m49_aw_node_M_SC_REQ;
  assign M_SC_AW_send[0] = m49_aw_node_M_SC_SEND;
  assign M_SC_B_info[0] = m49_b_node_M_SC_INFO;
  assign M_SC_B_payld[8:0] = m49_b_node_M_SC_PAYLD;
  assign M_SC_B_req[0] = m49_b_node_M_SC_REQ;
  assign M_SC_B_send[0] = m49_b_node_M_SC_SEND;
  assign M_SC_R_info[0] = m49_r_node_M_SC_INFO;
  assign M_SC_R_payld[54:0] = m49_r_node_M_SC_PAYLD;
  assign M_SC_R_req[0] = m49_r_node_M_SC_REQ;
  assign M_SC_R_send[0] = m49_r_node_M_SC_SEND;
  assign M_SC_W_info[0] = m49_w_node_M_SC_INFO;
  assign M_SC_W_payld[68:0] = m49_w_node_M_SC_PAYLD;
  assign M_SC_W_req[0] = m49_w_node_M_SC_REQ;
  assign M_SC_W_send[0] = m49_w_node_M_SC_SEND;
  assign S_SC_AR_1_INFO = S_SC_AR_info[0];
  assign S_SC_AR_1_PAYLD = S_SC_AR_payld[181:0];
  assign S_SC_AR_1_REQ = S_SC_AR_req[0];
  assign S_SC_AR_1_SEND = S_SC_AR_send[0];
  assign S_SC_AR_recv[0] = S_SC_AR_1_RECV;
  assign S_SC_AW_1_INFO = S_SC_AW_info[0];
  assign S_SC_AW_1_PAYLD = S_SC_AW_payld[181:0];
  assign S_SC_AW_1_REQ = S_SC_AW_req[0];
  assign S_SC_AW_1_SEND = S_SC_AW_send[0];
  assign S_SC_AW_recv[0] = S_SC_AW_1_RECV;
  assign S_SC_B_1_INFO = S_SC_B_info[0];
  assign S_SC_B_1_PAYLD = S_SC_B_payld[8:0];
  assign S_SC_B_1_REQ = S_SC_B_req[0];
  assign S_SC_B_1_SEND = S_SC_B_send[0];
  assign S_SC_B_recv[0] = S_SC_B_1_RECV;
  assign S_SC_R_1_INFO = S_SC_R_info[0];
  assign S_SC_R_1_PAYLD = S_SC_R_payld[54:0];
  assign S_SC_R_1_REQ = S_SC_R_req[0];
  assign S_SC_R_1_SEND = S_SC_R_send[0];
  assign S_SC_R_recv[0] = S_SC_R_1_RECV;
  assign S_SC_W_1_INFO = S_SC_W_info[0];
  assign S_SC_W_1_PAYLD = S_SC_W_payld[68:0];
  assign S_SC_W_1_REQ = S_SC_W_req[0];
  assign S_SC_W_1_SEND = S_SC_W_send[0];
  assign S_SC_W_recv[0] = S_SC_W_1_RECV;
  assign m49_ar_node_M_SC_RECV = M_SC_AR_recv[0];
  assign m49_aw_node_M_SC_RECV = M_SC_AW_recv[0];
  assign m49_b_node_M_SC_RECV = M_SC_B_recv[0];
  assign m49_r_node_M_SC_RECV = M_SC_R_recv[0];
  assign m49_w_node_M_SC_RECV = M_SC_W_recv[0];
  assign m_axi_aclk_1 = m_axi_aclk;
  assign m_axi_aresetn_1 = m_axi_aresetn;
  assign s_axi_aclk_1 = s_axi_aclk;
  assign s_axi_aresetn_1 = s_axi_aresetn;
  bd_afc3_m49arn_0 m49_ar_node
       (.m_sc_aclk(m_axi_aclk_1),
        .m_sc_aresetn(m_axi_aresetn_1),
        .m_sc_info(m49_ar_node_M_SC_INFO),
        .m_sc_payld(m49_ar_node_M_SC_PAYLD),
        .m_sc_recv(m49_ar_node_M_SC_RECV),
        .m_sc_req(m49_ar_node_M_SC_REQ),
        .m_sc_send(m49_ar_node_M_SC_SEND),
        .s_sc_aclk(s_axi_aclk_1),
        .s_sc_aresetn(s_axi_aresetn_1),
        .s_sc_info(S_SC_AR_1_INFO),
        .s_sc_payld(S_SC_AR_1_PAYLD),
        .s_sc_recv(S_SC_AR_1_RECV),
        .s_sc_req(S_SC_AR_1_REQ),
        .s_sc_send(S_SC_AR_1_SEND));
  bd_afc3_m49awn_0 m49_aw_node
       (.m_sc_aclk(m_axi_aclk_1),
        .m_sc_aresetn(m_axi_aresetn_1),
        .m_sc_info(m49_aw_node_M_SC_INFO),
        .m_sc_payld(m49_aw_node_M_SC_PAYLD),
        .m_sc_recv(m49_aw_node_M_SC_RECV),
        .m_sc_req(m49_aw_node_M_SC_REQ),
        .m_sc_send(m49_aw_node_M_SC_SEND),
        .s_sc_aclk(s_axi_aclk_1),
        .s_sc_aresetn(s_axi_aresetn_1),
        .s_sc_info(S_SC_AW_1_INFO),
        .s_sc_payld(S_SC_AW_1_PAYLD),
        .s_sc_recv(S_SC_AW_1_RECV),
        .s_sc_req(S_SC_AW_1_REQ),
        .s_sc_send(S_SC_AW_1_SEND));
  bd_afc3_m49bn_0 m49_b_node
       (.m_sc_aclk(s_axi_aclk_1),
        .m_sc_aresetn(s_axi_aresetn_1),
        .m_sc_info(m49_b_node_M_SC_INFO),
        .m_sc_payld(m49_b_node_M_SC_PAYLD),
        .m_sc_recv(m49_b_node_M_SC_RECV),
        .m_sc_req(m49_b_node_M_SC_REQ),
        .m_sc_send(m49_b_node_M_SC_SEND),
        .s_sc_aclk(m_axi_aclk_1),
        .s_sc_aresetn(m_axi_aresetn_1),
        .s_sc_info(S_SC_B_1_INFO),
        .s_sc_payld(S_SC_B_1_PAYLD),
        .s_sc_recv(S_SC_B_1_RECV),
        .s_sc_req(S_SC_B_1_REQ),
        .s_sc_send(S_SC_B_1_SEND));
  bd_afc3_m49rn_0 m49_r_node
       (.m_sc_aclk(s_axi_aclk_1),
        .m_sc_aresetn(s_axi_aresetn_1),
        .m_sc_info(m49_r_node_M_SC_INFO),
        .m_sc_payld(m49_r_node_M_SC_PAYLD),
        .m_sc_recv(m49_r_node_M_SC_RECV),
        .m_sc_req(m49_r_node_M_SC_REQ),
        .m_sc_send(m49_r_node_M_SC_SEND),
        .s_sc_aclk(m_axi_aclk_1),
        .s_sc_aresetn(m_axi_aresetn_1),
        .s_sc_info(S_SC_R_1_INFO),
        .s_sc_payld(S_SC_R_1_PAYLD),
        .s_sc_recv(S_SC_R_1_RECV),
        .s_sc_req(S_SC_R_1_REQ),
        .s_sc_send(S_SC_R_1_SEND));
  bd_afc3_m49wn_0 m49_w_node
       (.m_sc_aclk(m_axi_aclk_1),
        .m_sc_aresetn(m_axi_aresetn_1),
        .m_sc_info(m49_w_node_M_SC_INFO),
        .m_sc_payld(m49_w_node_M_SC_PAYLD),
        .m_sc_recv(m49_w_node_M_SC_RECV),
        .m_sc_req(m49_w_node_M_SC_REQ),
        .m_sc_send(m49_w_node_M_SC_SEND),
        .s_sc_aclk(s_axi_aclk_1),
        .s_sc_aresetn(s_axi_aresetn_1),
        .s_sc_info(S_SC_W_1_INFO),
        .s_sc_payld(S_SC_W_1_PAYLD),
        .s_sc_recv(S_SC_W_1_RECV),
        .s_sc_req(S_SC_W_1_REQ),
        .s_sc_send(S_SC_W_1_SEND));
endmodule

module m50_exit_pipeline_imp_X05HEO
   (aclk,
    aresetn,
    m_axi_araddr,
    m_axi_arprot,
    m_axi_arready,
    m_axi_arvalid,
    m_axi_awaddr,
    m_axi_awprot,
    m_axi_awready,
    m_axi_awvalid,
    m_axi_bready,
    m_axi_bresp,
    m_axi_bvalid,
    m_axi_rdata,
    m_axi_rready,
    m_axi_rresp,
    m_axi_rvalid,
    m_axi_wdata,
    m_axi_wready,
    m_axi_wstrb,
    m_axi_wvalid,
    s_axi_araddr,
    s_axi_arcache,
    s_axi_arid,
    s_axi_arlen,
    s_axi_arlock,
    s_axi_arprot,
    s_axi_arqos,
    s_axi_arready,
    s_axi_aruser,
    s_axi_arvalid,
    s_axi_awaddr,
    s_axi_awcache,
    s_axi_awid,
    s_axi_awlen,
    s_axi_awlock,
    s_axi_awprot,
    s_axi_awqos,
    s_axi_awready,
    s_axi_awuser,
    s_axi_awvalid,
    s_axi_bid,
    s_axi_bready,
    s_axi_bresp,
    s_axi_buser,
    s_axi_bvalid,
    s_axi_rdata,
    s_axi_rid,
    s_axi_rlast,
    s_axi_rready,
    s_axi_rresp,
    s_axi_ruser,
    s_axi_rvalid,
    s_axi_wdata,
    s_axi_wlast,
    s_axi_wready,
    s_axi_wstrb,
    s_axi_wuser,
    s_axi_wvalid);
  input aclk;
  input aresetn;
  output [4:0]m_axi_araddr;
  output [2:0]m_axi_arprot;
  input m_axi_arready;
  output m_axi_arvalid;
  output [4:0]m_axi_awaddr;
  output [2:0]m_axi_awprot;
  input m_axi_awready;
  output m_axi_awvalid;
  output m_axi_bready;
  input [1:0]m_axi_bresp;
  input m_axi_bvalid;
  input [31:0]m_axi_rdata;
  output m_axi_rready;
  input [1:0]m_axi_rresp;
  input m_axi_rvalid;
  output [31:0]m_axi_wdata;
  input m_axi_wready;
  output [3:0]m_axi_wstrb;
  output m_axi_wvalid;
  input [4:0]s_axi_araddr;
  input [3:0]s_axi_arcache;
  input [2:0]s_axi_arid;
  input [7:0]s_axi_arlen;
  input [0:0]s_axi_arlock;
  input [2:0]s_axi_arprot;
  input [3:0]s_axi_arqos;
  output s_axi_arready;
  input [1023:0]s_axi_aruser;
  input s_axi_arvalid;
  input [4:0]s_axi_awaddr;
  input [3:0]s_axi_awcache;
  input [2:0]s_axi_awid;
  input [7:0]s_axi_awlen;
  input [0:0]s_axi_awlock;
  input [2:0]s_axi_awprot;
  input [3:0]s_axi_awqos;
  output s_axi_awready;
  input [1023:0]s_axi_awuser;
  input s_axi_awvalid;
  output [2:0]s_axi_bid;
  input s_axi_bready;
  output [1:0]s_axi_bresp;
  output [1023:0]s_axi_buser;
  output s_axi_bvalid;
  output [31:0]s_axi_rdata;
  output [2:0]s_axi_rid;
  output s_axi_rlast;
  input s_axi_rready;
  output [1:0]s_axi_rresp;
  output [1023:0]s_axi_ruser;
  output s_axi_rvalid;
  input [31:0]s_axi_wdata;
  input s_axi_wlast;
  output s_axi_wready;
  input [3:0]s_axi_wstrb;
  input [1023:0]s_axi_wuser;
  input s_axi_wvalid;

  wire aclk_1;
  wire aresetn_1;
  wire [4:0]m50_exit_M_AXI_ARADDR;
  wire [2:0]m50_exit_M_AXI_ARPROT;
  wire m50_exit_M_AXI_ARREADY;
  wire m50_exit_M_AXI_ARVALID;
  wire [4:0]m50_exit_M_AXI_AWADDR;
  wire [2:0]m50_exit_M_AXI_AWPROT;
  wire m50_exit_M_AXI_AWREADY;
  wire m50_exit_M_AXI_AWVALID;
  wire m50_exit_M_AXI_BREADY;
  wire [1:0]m50_exit_M_AXI_BRESP;
  wire m50_exit_M_AXI_BVALID;
  wire [31:0]m50_exit_M_AXI_RDATA;
  wire m50_exit_M_AXI_RREADY;
  wire [1:0]m50_exit_M_AXI_RRESP;
  wire m50_exit_M_AXI_RVALID;
  wire [31:0]m50_exit_M_AXI_WDATA;
  wire m50_exit_M_AXI_WREADY;
  wire [3:0]m50_exit_M_AXI_WSTRB;
  wire m50_exit_M_AXI_WVALID;
  wire [4:0]s_axi_1_ARADDR;
  wire [3:0]s_axi_1_ARCACHE;
  wire [2:0]s_axi_1_ARID;
  wire [7:0]s_axi_1_ARLEN;
  wire [0:0]s_axi_1_ARLOCK;
  wire [2:0]s_axi_1_ARPROT;
  wire [3:0]s_axi_1_ARQOS;
  wire s_axi_1_ARREADY;
  wire [1023:0]s_axi_1_ARUSER;
  wire s_axi_1_ARVALID;
  wire [4:0]s_axi_1_AWADDR;
  wire [3:0]s_axi_1_AWCACHE;
  wire [2:0]s_axi_1_AWID;
  wire [7:0]s_axi_1_AWLEN;
  wire [0:0]s_axi_1_AWLOCK;
  wire [2:0]s_axi_1_AWPROT;
  wire [3:0]s_axi_1_AWQOS;
  wire s_axi_1_AWREADY;
  wire [1023:0]s_axi_1_AWUSER;
  wire s_axi_1_AWVALID;
  wire [2:0]s_axi_1_BID;
  wire s_axi_1_BREADY;
  wire [1:0]s_axi_1_BRESP;
  wire [1023:0]s_axi_1_BUSER;
  wire s_axi_1_BVALID;
  wire [31:0]s_axi_1_RDATA;
  wire [2:0]s_axi_1_RID;
  wire s_axi_1_RLAST;
  wire s_axi_1_RREADY;
  wire [1:0]s_axi_1_RRESP;
  wire [1023:0]s_axi_1_RUSER;
  wire s_axi_1_RVALID;
  wire [31:0]s_axi_1_WDATA;
  wire s_axi_1_WLAST;
  wire s_axi_1_WREADY;
  wire [3:0]s_axi_1_WSTRB;
  wire [1023:0]s_axi_1_WUSER;
  wire s_axi_1_WVALID;

  assign aclk_1 = aclk;
  assign aresetn_1 = aresetn;
  assign m50_exit_M_AXI_ARREADY = m_axi_arready;
  assign m50_exit_M_AXI_AWREADY = m_axi_awready;
  assign m50_exit_M_AXI_BRESP = m_axi_bresp[1:0];
  assign m50_exit_M_AXI_BVALID = m_axi_bvalid;
  assign m50_exit_M_AXI_RDATA = m_axi_rdata[31:0];
  assign m50_exit_M_AXI_RRESP = m_axi_rresp[1:0];
  assign m50_exit_M_AXI_RVALID = m_axi_rvalid;
  assign m50_exit_M_AXI_WREADY = m_axi_wready;
  assign m_axi_araddr[4:0] = m50_exit_M_AXI_ARADDR;
  assign m_axi_arprot[2:0] = m50_exit_M_AXI_ARPROT;
  assign m_axi_arvalid = m50_exit_M_AXI_ARVALID;
  assign m_axi_awaddr[4:0] = m50_exit_M_AXI_AWADDR;
  assign m_axi_awprot[2:0] = m50_exit_M_AXI_AWPROT;
  assign m_axi_awvalid = m50_exit_M_AXI_AWVALID;
  assign m_axi_bready = m50_exit_M_AXI_BREADY;
  assign m_axi_rready = m50_exit_M_AXI_RREADY;
  assign m_axi_wdata[31:0] = m50_exit_M_AXI_WDATA;
  assign m_axi_wstrb[3:0] = m50_exit_M_AXI_WSTRB;
  assign m_axi_wvalid = m50_exit_M_AXI_WVALID;
  assign s_axi_1_ARADDR = s_axi_araddr[4:0];
  assign s_axi_1_ARCACHE = s_axi_arcache[3:0];
  assign s_axi_1_ARID = s_axi_arid[2:0];
  assign s_axi_1_ARLEN = s_axi_arlen[7:0];
  assign s_axi_1_ARLOCK = s_axi_arlock[0];
  assign s_axi_1_ARPROT = s_axi_arprot[2:0];
  assign s_axi_1_ARQOS = s_axi_arqos[3:0];
  assign s_axi_1_ARUSER = s_axi_aruser[1023:0];
  assign s_axi_1_ARVALID = s_axi_arvalid;
  assign s_axi_1_AWADDR = s_axi_awaddr[4:0];
  assign s_axi_1_AWCACHE = s_axi_awcache[3:0];
  assign s_axi_1_AWID = s_axi_awid[2:0];
  assign s_axi_1_AWLEN = s_axi_awlen[7:0];
  assign s_axi_1_AWLOCK = s_axi_awlock[0];
  assign s_axi_1_AWPROT = s_axi_awprot[2:0];
  assign s_axi_1_AWQOS = s_axi_awqos[3:0];
  assign s_axi_1_AWUSER = s_axi_awuser[1023:0];
  assign s_axi_1_AWVALID = s_axi_awvalid;
  assign s_axi_1_BREADY = s_axi_bready;
  assign s_axi_1_RREADY = s_axi_rready;
  assign s_axi_1_WDATA = s_axi_wdata[31:0];
  assign s_axi_1_WLAST = s_axi_wlast;
  assign s_axi_1_WSTRB = s_axi_wstrb[3:0];
  assign s_axi_1_WUSER = s_axi_wuser[1023:0];
  assign s_axi_1_WVALID = s_axi_wvalid;
  assign s_axi_arready = s_axi_1_ARREADY;
  assign s_axi_awready = s_axi_1_AWREADY;
  assign s_axi_bid[2:0] = s_axi_1_BID;
  assign s_axi_bresp[1:0] = s_axi_1_BRESP;
  assign s_axi_buser[1023:0] = s_axi_1_BUSER;
  assign s_axi_bvalid = s_axi_1_BVALID;
  assign s_axi_rdata[31:0] = s_axi_1_RDATA;
  assign s_axi_rid[2:0] = s_axi_1_RID;
  assign s_axi_rlast = s_axi_1_RLAST;
  assign s_axi_rresp[1:0] = s_axi_1_RRESP;
  assign s_axi_ruser[1023:0] = s_axi_1_RUSER;
  assign s_axi_rvalid = s_axi_1_RVALID;
  assign s_axi_wready = s_axi_1_WREADY;
  bd_afc3_m50e_0 m50_exit
       (.aclk(aclk_1),
        .aresetn(aresetn_1),
        .m_axi_araddr(m50_exit_M_AXI_ARADDR),
        .m_axi_arprot(m50_exit_M_AXI_ARPROT),
        .m_axi_arready(m50_exit_M_AXI_ARREADY),
        .m_axi_arvalid(m50_exit_M_AXI_ARVALID),
        .m_axi_awaddr(m50_exit_M_AXI_AWADDR),
        .m_axi_awprot(m50_exit_M_AXI_AWPROT),
        .m_axi_awready(m50_exit_M_AXI_AWREADY),
        .m_axi_awvalid(m50_exit_M_AXI_AWVALID),
        .m_axi_bready(m50_exit_M_AXI_BREADY),
        .m_axi_bresp(m50_exit_M_AXI_BRESP),
        .m_axi_bvalid(m50_exit_M_AXI_BVALID),
        .m_axi_rdata(m50_exit_M_AXI_RDATA),
        .m_axi_rready(m50_exit_M_AXI_RREADY),
        .m_axi_rresp(m50_exit_M_AXI_RRESP),
        .m_axi_rvalid(m50_exit_M_AXI_RVALID),
        .m_axi_wdata(m50_exit_M_AXI_WDATA),
        .m_axi_wready(m50_exit_M_AXI_WREADY),
        .m_axi_wstrb(m50_exit_M_AXI_WSTRB),
        .m_axi_wvalid(m50_exit_M_AXI_WVALID),
        .s_axi_araddr(s_axi_1_ARADDR),
        .s_axi_arcache(s_axi_1_ARCACHE),
        .s_axi_arid(s_axi_1_ARID),
        .s_axi_arlen(s_axi_1_ARLEN),
        .s_axi_arlock(s_axi_1_ARLOCK),
        .s_axi_arprot(s_axi_1_ARPROT),
        .s_axi_arqos(s_axi_1_ARQOS),
        .s_axi_arready(s_axi_1_ARREADY),
        .s_axi_aruser(s_axi_1_ARUSER),
        .s_axi_arvalid(s_axi_1_ARVALID),
        .s_axi_awaddr(s_axi_1_AWADDR),
        .s_axi_awcache(s_axi_1_AWCACHE),
        .s_axi_awid(s_axi_1_AWID),
        .s_axi_awlen(s_axi_1_AWLEN),
        .s_axi_awlock(s_axi_1_AWLOCK),
        .s_axi_awprot(s_axi_1_AWPROT),
        .s_axi_awqos(s_axi_1_AWQOS),
        .s_axi_awready(s_axi_1_AWREADY),
        .s_axi_awuser(s_axi_1_AWUSER),
        .s_axi_awvalid(s_axi_1_AWVALID),
        .s_axi_bid(s_axi_1_BID),
        .s_axi_bready(s_axi_1_BREADY),
        .s_axi_bresp(s_axi_1_BRESP),
        .s_axi_buser(s_axi_1_BUSER),
        .s_axi_bvalid(s_axi_1_BVALID),
        .s_axi_rdata(s_axi_1_RDATA),
        .s_axi_rid(s_axi_1_RID),
        .s_axi_rlast(s_axi_1_RLAST),
        .s_axi_rready(s_axi_1_RREADY),
        .s_axi_rresp(s_axi_1_RRESP),
        .s_axi_ruser(s_axi_1_RUSER),
        .s_axi_rvalid(s_axi_1_RVALID),
        .s_axi_wdata(s_axi_1_WDATA),
        .s_axi_wlast(s_axi_1_WLAST),
        .s_axi_wready(s_axi_1_WREADY),
        .s_axi_wstrb(s_axi_1_WSTRB),
        .s_axi_wuser(s_axi_1_WUSER),
        .s_axi_wvalid(s_axi_1_WVALID));
endmodule

module m50_nodes_imp_13IPPJ4
   (M_SC_AR_info,
    M_SC_AR_payld,
    M_SC_AR_recv,
    M_SC_AR_req,
    M_SC_AR_send,
    M_SC_AW_info,
    M_SC_AW_payld,
    M_SC_AW_recv,
    M_SC_AW_req,
    M_SC_AW_send,
    M_SC_B_info,
    M_SC_B_payld,
    M_SC_B_recv,
    M_SC_B_req,
    M_SC_B_send,
    M_SC_R_info,
    M_SC_R_payld,
    M_SC_R_recv,
    M_SC_R_req,
    M_SC_R_send,
    M_SC_W_info,
    M_SC_W_payld,
    M_SC_W_recv,
    M_SC_W_req,
    M_SC_W_send,
    S_SC_AR_info,
    S_SC_AR_payld,
    S_SC_AR_recv,
    S_SC_AR_req,
    S_SC_AR_send,
    S_SC_AW_info,
    S_SC_AW_payld,
    S_SC_AW_recv,
    S_SC_AW_req,
    S_SC_AW_send,
    S_SC_B_info,
    S_SC_B_payld,
    S_SC_B_recv,
    S_SC_B_req,
    S_SC_B_send,
    S_SC_R_info,
    S_SC_R_payld,
    S_SC_R_recv,
    S_SC_R_req,
    S_SC_R_send,
    S_SC_W_info,
    S_SC_W_payld,
    S_SC_W_recv,
    S_SC_W_req,
    S_SC_W_send,
    m_axi_aclk,
    m_axi_aresetn,
    s_axi_aclk,
    s_axi_aresetn);
  output [0:0]M_SC_AR_info;
  output [181:0]M_SC_AR_payld;
  input [0:0]M_SC_AR_recv;
  output [0:0]M_SC_AR_req;
  output [0:0]M_SC_AR_send;
  output [0:0]M_SC_AW_info;
  output [181:0]M_SC_AW_payld;
  input [0:0]M_SC_AW_recv;
  output [0:0]M_SC_AW_req;
  output [0:0]M_SC_AW_send;
  output [0:0]M_SC_B_info;
  output [8:0]M_SC_B_payld;
  input [0:0]M_SC_B_recv;
  output [0:0]M_SC_B_req;
  output [0:0]M_SC_B_send;
  output [0:0]M_SC_R_info;
  output [54:0]M_SC_R_payld;
  input [0:0]M_SC_R_recv;
  output [0:0]M_SC_R_req;
  output [0:0]M_SC_R_send;
  output [0:0]M_SC_W_info;
  output [68:0]M_SC_W_payld;
  input [0:0]M_SC_W_recv;
  output [0:0]M_SC_W_req;
  output [0:0]M_SC_W_send;
  input [0:0]S_SC_AR_info;
  input [181:0]S_SC_AR_payld;
  output [0:0]S_SC_AR_recv;
  input [0:0]S_SC_AR_req;
  input [0:0]S_SC_AR_send;
  input [0:0]S_SC_AW_info;
  input [181:0]S_SC_AW_payld;
  output [0:0]S_SC_AW_recv;
  input [0:0]S_SC_AW_req;
  input [0:0]S_SC_AW_send;
  input [0:0]S_SC_B_info;
  input [8:0]S_SC_B_payld;
  output [0:0]S_SC_B_recv;
  input [0:0]S_SC_B_req;
  input [0:0]S_SC_B_send;
  input [0:0]S_SC_R_info;
  input [54:0]S_SC_R_payld;
  output [0:0]S_SC_R_recv;
  input [0:0]S_SC_R_req;
  input [0:0]S_SC_R_send;
  input [0:0]S_SC_W_info;
  input [68:0]S_SC_W_payld;
  output [0:0]S_SC_W_recv;
  input [0:0]S_SC_W_req;
  input [0:0]S_SC_W_send;
  input m_axi_aclk;
  input m_axi_aresetn;
  input s_axi_aclk;
  input s_axi_aresetn;

  wire [0:0]S_SC_AR_1_INFO;
  wire [181:0]S_SC_AR_1_PAYLD;
  wire [0:0]S_SC_AR_1_RECV;
  wire [0:0]S_SC_AR_1_REQ;
  wire [0:0]S_SC_AR_1_SEND;
  wire [0:0]S_SC_AW_1_INFO;
  wire [181:0]S_SC_AW_1_PAYLD;
  wire [0:0]S_SC_AW_1_RECV;
  wire [0:0]S_SC_AW_1_REQ;
  wire [0:0]S_SC_AW_1_SEND;
  wire [0:0]S_SC_B_1_INFO;
  wire [8:0]S_SC_B_1_PAYLD;
  wire [0:0]S_SC_B_1_RECV;
  wire [0:0]S_SC_B_1_REQ;
  wire [0:0]S_SC_B_1_SEND;
  wire [0:0]S_SC_R_1_INFO;
  wire [54:0]S_SC_R_1_PAYLD;
  wire [0:0]S_SC_R_1_RECV;
  wire [0:0]S_SC_R_1_REQ;
  wire [0:0]S_SC_R_1_SEND;
  wire [0:0]S_SC_W_1_INFO;
  wire [68:0]S_SC_W_1_PAYLD;
  wire [0:0]S_SC_W_1_RECV;
  wire [0:0]S_SC_W_1_REQ;
  wire [0:0]S_SC_W_1_SEND;
  wire [0:0]m50_ar_node_M_SC_INFO;
  wire [181:0]m50_ar_node_M_SC_PAYLD;
  wire [0:0]m50_ar_node_M_SC_RECV;
  wire [0:0]m50_ar_node_M_SC_REQ;
  wire [0:0]m50_ar_node_M_SC_SEND;
  wire [0:0]m50_aw_node_M_SC_INFO;
  wire [181:0]m50_aw_node_M_SC_PAYLD;
  wire [0:0]m50_aw_node_M_SC_RECV;
  wire [0:0]m50_aw_node_M_SC_REQ;
  wire [0:0]m50_aw_node_M_SC_SEND;
  wire [0:0]m50_b_node_M_SC_INFO;
  wire [8:0]m50_b_node_M_SC_PAYLD;
  wire [0:0]m50_b_node_M_SC_RECV;
  wire [0:0]m50_b_node_M_SC_REQ;
  wire [0:0]m50_b_node_M_SC_SEND;
  wire [0:0]m50_r_node_M_SC_INFO;
  wire [54:0]m50_r_node_M_SC_PAYLD;
  wire [0:0]m50_r_node_M_SC_RECV;
  wire [0:0]m50_r_node_M_SC_REQ;
  wire [0:0]m50_r_node_M_SC_SEND;
  wire [0:0]m50_w_node_M_SC_INFO;
  wire [68:0]m50_w_node_M_SC_PAYLD;
  wire [0:0]m50_w_node_M_SC_RECV;
  wire [0:0]m50_w_node_M_SC_REQ;
  wire [0:0]m50_w_node_M_SC_SEND;
  wire m_axi_aclk_1;
  wire m_axi_aresetn_1;
  wire s_axi_aclk_1;
  wire s_axi_aresetn_1;

  assign M_SC_AR_info[0] = m50_ar_node_M_SC_INFO;
  assign M_SC_AR_payld[181:0] = m50_ar_node_M_SC_PAYLD;
  assign M_SC_AR_req[0] = m50_ar_node_M_SC_REQ;
  assign M_SC_AR_send[0] = m50_ar_node_M_SC_SEND;
  assign M_SC_AW_info[0] = m50_aw_node_M_SC_INFO;
  assign M_SC_AW_payld[181:0] = m50_aw_node_M_SC_PAYLD;
  assign M_SC_AW_req[0] = m50_aw_node_M_SC_REQ;
  assign M_SC_AW_send[0] = m50_aw_node_M_SC_SEND;
  assign M_SC_B_info[0] = m50_b_node_M_SC_INFO;
  assign M_SC_B_payld[8:0] = m50_b_node_M_SC_PAYLD;
  assign M_SC_B_req[0] = m50_b_node_M_SC_REQ;
  assign M_SC_B_send[0] = m50_b_node_M_SC_SEND;
  assign M_SC_R_info[0] = m50_r_node_M_SC_INFO;
  assign M_SC_R_payld[54:0] = m50_r_node_M_SC_PAYLD;
  assign M_SC_R_req[0] = m50_r_node_M_SC_REQ;
  assign M_SC_R_send[0] = m50_r_node_M_SC_SEND;
  assign M_SC_W_info[0] = m50_w_node_M_SC_INFO;
  assign M_SC_W_payld[68:0] = m50_w_node_M_SC_PAYLD;
  assign M_SC_W_req[0] = m50_w_node_M_SC_REQ;
  assign M_SC_W_send[0] = m50_w_node_M_SC_SEND;
  assign S_SC_AR_1_INFO = S_SC_AR_info[0];
  assign S_SC_AR_1_PAYLD = S_SC_AR_payld[181:0];
  assign S_SC_AR_1_REQ = S_SC_AR_req[0];
  assign S_SC_AR_1_SEND = S_SC_AR_send[0];
  assign S_SC_AR_recv[0] = S_SC_AR_1_RECV;
  assign S_SC_AW_1_INFO = S_SC_AW_info[0];
  assign S_SC_AW_1_PAYLD = S_SC_AW_payld[181:0];
  assign S_SC_AW_1_REQ = S_SC_AW_req[0];
  assign S_SC_AW_1_SEND = S_SC_AW_send[0];
  assign S_SC_AW_recv[0] = S_SC_AW_1_RECV;
  assign S_SC_B_1_INFO = S_SC_B_info[0];
  assign S_SC_B_1_PAYLD = S_SC_B_payld[8:0];
  assign S_SC_B_1_REQ = S_SC_B_req[0];
  assign S_SC_B_1_SEND = S_SC_B_send[0];
  assign S_SC_B_recv[0] = S_SC_B_1_RECV;
  assign S_SC_R_1_INFO = S_SC_R_info[0];
  assign S_SC_R_1_PAYLD = S_SC_R_payld[54:0];
  assign S_SC_R_1_REQ = S_SC_R_req[0];
  assign S_SC_R_1_SEND = S_SC_R_send[0];
  assign S_SC_R_recv[0] = S_SC_R_1_RECV;
  assign S_SC_W_1_INFO = S_SC_W_info[0];
  assign S_SC_W_1_PAYLD = S_SC_W_payld[68:0];
  assign S_SC_W_1_REQ = S_SC_W_req[0];
  assign S_SC_W_1_SEND = S_SC_W_send[0];
  assign S_SC_W_recv[0] = S_SC_W_1_RECV;
  assign m50_ar_node_M_SC_RECV = M_SC_AR_recv[0];
  assign m50_aw_node_M_SC_RECV = M_SC_AW_recv[0];
  assign m50_b_node_M_SC_RECV = M_SC_B_recv[0];
  assign m50_r_node_M_SC_RECV = M_SC_R_recv[0];
  assign m50_w_node_M_SC_RECV = M_SC_W_recv[0];
  assign m_axi_aclk_1 = m_axi_aclk;
  assign m_axi_aresetn_1 = m_axi_aresetn;
  assign s_axi_aclk_1 = s_axi_aclk;
  assign s_axi_aresetn_1 = s_axi_aresetn;
  bd_afc3_m50arn_0 m50_ar_node
       (.m_sc_aclk(m_axi_aclk_1),
        .m_sc_aresetn(m_axi_aresetn_1),
        .m_sc_info(m50_ar_node_M_SC_INFO),
        .m_sc_payld(m50_ar_node_M_SC_PAYLD),
        .m_sc_recv(m50_ar_node_M_SC_RECV),
        .m_sc_req(m50_ar_node_M_SC_REQ),
        .m_sc_send(m50_ar_node_M_SC_SEND),
        .s_sc_aclk(s_axi_aclk_1),
        .s_sc_aresetn(s_axi_aresetn_1),
        .s_sc_info(S_SC_AR_1_INFO),
        .s_sc_payld(S_SC_AR_1_PAYLD),
        .s_sc_recv(S_SC_AR_1_RECV),
        .s_sc_req(S_SC_AR_1_REQ),
        .s_sc_send(S_SC_AR_1_SEND));
  bd_afc3_m50awn_0 m50_aw_node
       (.m_sc_aclk(m_axi_aclk_1),
        .m_sc_aresetn(m_axi_aresetn_1),
        .m_sc_info(m50_aw_node_M_SC_INFO),
        .m_sc_payld(m50_aw_node_M_SC_PAYLD),
        .m_sc_recv(m50_aw_node_M_SC_RECV),
        .m_sc_req(m50_aw_node_M_SC_REQ),
        .m_sc_send(m50_aw_node_M_SC_SEND),
        .s_sc_aclk(s_axi_aclk_1),
        .s_sc_aresetn(s_axi_aresetn_1),
        .s_sc_info(S_SC_AW_1_INFO),
        .s_sc_payld(S_SC_AW_1_PAYLD),
        .s_sc_recv(S_SC_AW_1_RECV),
        .s_sc_req(S_SC_AW_1_REQ),
        .s_sc_send(S_SC_AW_1_SEND));
  bd_afc3_m50bn_0 m50_b_node
       (.m_sc_aclk(s_axi_aclk_1),
        .m_sc_aresetn(s_axi_aresetn_1),
        .m_sc_info(m50_b_node_M_SC_INFO),
        .m_sc_payld(m50_b_node_M_SC_PAYLD),
        .m_sc_recv(m50_b_node_M_SC_RECV),
        .m_sc_req(m50_b_node_M_SC_REQ),
        .m_sc_send(m50_b_node_M_SC_SEND),
        .s_sc_aclk(m_axi_aclk_1),
        .s_sc_aresetn(m_axi_aresetn_1),
        .s_sc_info(S_SC_B_1_INFO),
        .s_sc_payld(S_SC_B_1_PAYLD),
        .s_sc_recv(S_SC_B_1_RECV),
        .s_sc_req(S_SC_B_1_REQ),
        .s_sc_send(S_SC_B_1_SEND));
  bd_afc3_m50rn_0 m50_r_node
       (.m_sc_aclk(s_axi_aclk_1),
        .m_sc_aresetn(s_axi_aresetn_1),
        .m_sc_info(m50_r_node_M_SC_INFO),
        .m_sc_payld(m50_r_node_M_SC_PAYLD),
        .m_sc_recv(m50_r_node_M_SC_RECV),
        .m_sc_req(m50_r_node_M_SC_REQ),
        .m_sc_send(m50_r_node_M_SC_SEND),
        .s_sc_aclk(m_axi_aclk_1),
        .s_sc_aresetn(m_axi_aresetn_1),
        .s_sc_info(S_SC_R_1_INFO),
        .s_sc_payld(S_SC_R_1_PAYLD),
        .s_sc_recv(S_SC_R_1_RECV),
        .s_sc_req(S_SC_R_1_REQ),
        .s_sc_send(S_SC_R_1_SEND));
  bd_afc3_m50wn_0 m50_w_node
       (.m_sc_aclk(m_axi_aclk_1),
        .m_sc_aresetn(m_axi_aresetn_1),
        .m_sc_info(m50_w_node_M_SC_INFO),
        .m_sc_payld(m50_w_node_M_SC_PAYLD),
        .m_sc_recv(m50_w_node_M_SC_RECV),
        .m_sc_req(m50_w_node_M_SC_REQ),
        .m_sc_send(m50_w_node_M_SC_SEND),
        .s_sc_aclk(s_axi_aclk_1),
        .s_sc_aresetn(s_axi_aresetn_1),
        .s_sc_info(S_SC_W_1_INFO),
        .s_sc_payld(S_SC_W_1_PAYLD),
        .s_sc_recv(S_SC_W_1_RECV),
        .s_sc_req(S_SC_W_1_REQ),
        .s_sc_send(S_SC_W_1_SEND));
endmodule

module out_swbd_0_imp_VJ4304
   (M00_SC_AR_info,
    M00_SC_AR_payld,
    M00_SC_AR_recv,
    M00_SC_AR_req,
    M00_SC_AR_send,
    M00_SC_AW_info,
    M00_SC_AW_payld,
    M00_SC_AW_recv,
    M00_SC_AW_req,
    M00_SC_AW_send,
    M00_SC_B_info,
    M00_SC_B_payld,
    M00_SC_B_recv,
    M00_SC_B_req,
    M00_SC_B_send,
    M00_SC_R_info,
    M00_SC_R_payld,
    M00_SC_R_recv,
    M00_SC_R_req,
    M00_SC_R_send,
    M00_SC_W_info,
    M00_SC_W_payld,
    M00_SC_W_recv,
    M00_SC_W_req,
    M00_SC_W_send,
    M01_SC_AR_info,
    M01_SC_AR_payld,
    M01_SC_AR_recv,
    M01_SC_AR_req,
    M01_SC_AR_send,
    M01_SC_AW_info,
    M01_SC_AW_payld,
    M01_SC_AW_recv,
    M01_SC_AW_req,
    M01_SC_AW_send,
    M01_SC_W_info,
    M01_SC_W_payld,
    M01_SC_W_recv,
    M01_SC_W_req,
    M01_SC_W_send,
    M02_SC_AR_info,
    M02_SC_AR_payld,
    M02_SC_AR_recv,
    M02_SC_AR_req,
    M02_SC_AR_send,
    M02_SC_AW_info,
    M02_SC_AW_payld,
    M02_SC_AW_recv,
    M02_SC_AW_req,
    M02_SC_AW_send,
    M02_SC_W_info,
    M02_SC_W_payld,
    M02_SC_W_recv,
    M02_SC_W_req,
    M02_SC_W_send,
    M03_SC_AR_info,
    M03_SC_AR_payld,
    M03_SC_AR_recv,
    M03_SC_AR_req,
    M03_SC_AR_send,
    M03_SC_AW_info,
    M03_SC_AW_payld,
    M03_SC_AW_recv,
    M03_SC_AW_req,
    M03_SC_AW_send,
    M03_SC_W_info,
    M03_SC_W_payld,
    M03_SC_W_recv,
    M03_SC_W_req,
    M03_SC_W_send,
    M04_SC_AR_info,
    M04_SC_AR_payld,
    M04_SC_AR_recv,
    M04_SC_AR_req,
    M04_SC_AR_send,
    M04_SC_AW_info,
    M04_SC_AW_payld,
    M04_SC_AW_recv,
    M04_SC_AW_req,
    M04_SC_AW_send,
    M04_SC_W_info,
    M04_SC_W_payld,
    M04_SC_W_recv,
    M04_SC_W_req,
    M04_SC_W_send,
    M05_SC_AR_info,
    M05_SC_AR_payld,
    M05_SC_AR_recv,
    M05_SC_AR_req,
    M05_SC_AR_send,
    M05_SC_AW_info,
    M05_SC_AW_payld,
    M05_SC_AW_recv,
    M05_SC_AW_req,
    M05_SC_AW_send,
    M05_SC_W_info,
    M05_SC_W_payld,
    M05_SC_W_recv,
    M05_SC_W_req,
    M05_SC_W_send,
    M06_SC_AR_info,
    M06_SC_AR_payld,
    M06_SC_AR_recv,
    M06_SC_AR_req,
    M06_SC_AR_send,
    M06_SC_AW_info,
    M06_SC_AW_payld,
    M06_SC_AW_recv,
    M06_SC_AW_req,
    M06_SC_AW_send,
    M06_SC_W_info,
    M06_SC_W_payld,
    M06_SC_W_recv,
    M06_SC_W_req,
    M06_SC_W_send,
    S00_SC_AR_info,
    S00_SC_AR_payld,
    S00_SC_AR_recv,
    S00_SC_AR_req,
    S00_SC_AR_send,
    S00_SC_AW_info,
    S00_SC_AW_payld,
    S00_SC_AW_recv,
    S00_SC_AW_req,
    S00_SC_AW_send,
    S00_SC_B_info,
    S00_SC_B_payld,
    S00_SC_B_recv,
    S00_SC_B_req,
    S00_SC_B_send,
    S00_SC_R_info,
    S00_SC_R_payld,
    S00_SC_R_recv,
    S00_SC_R_req,
    S00_SC_R_send,
    S00_SC_W_info,
    S00_SC_W_payld,
    S00_SC_W_recv,
    S00_SC_W_req,
    S00_SC_W_send,
    S01_SC_B_info,
    S01_SC_B_payld,
    S01_SC_B_recv,
    S01_SC_B_req,
    S01_SC_B_send,
    S01_SC_R_info,
    S01_SC_R_payld,
    S01_SC_R_recv,
    S01_SC_R_req,
    S01_SC_R_send,
    S02_SC_B_info,
    S02_SC_B_payld,
    S02_SC_B_recv,
    S02_SC_B_req,
    S02_SC_B_send,
    S02_SC_R_info,
    S02_SC_R_payld,
    S02_SC_R_recv,
    S02_SC_R_req,
    S02_SC_R_send,
    S03_SC_B_info,
    S03_SC_B_payld,
    S03_SC_B_recv,
    S03_SC_B_req,
    S03_SC_B_send,
    S03_SC_R_info,
    S03_SC_R_payld,
    S03_SC_R_recv,
    S03_SC_R_req,
    S03_SC_R_send,
    S04_SC_B_info,
    S04_SC_B_payld,
    S04_SC_B_recv,
    S04_SC_B_req,
    S04_SC_B_send,
    S04_SC_R_info,
    S04_SC_R_payld,
    S04_SC_R_recv,
    S04_SC_R_req,
    S04_SC_R_send,
    S05_SC_B_info,
    S05_SC_B_payld,
    S05_SC_B_recv,
    S05_SC_B_req,
    S05_SC_B_send,
    S05_SC_R_info,
    S05_SC_R_payld,
    S05_SC_R_recv,
    S05_SC_R_req,
    S05_SC_R_send,
    S06_SC_B_info,
    S06_SC_B_payld,
    S06_SC_B_recv,
    S06_SC_B_req,
    S06_SC_B_send,
    S06_SC_R_info,
    S06_SC_R_payld,
    S06_SC_R_recv,
    S06_SC_R_req,
    S06_SC_R_send,
    aclk);
  output [0:0]M00_SC_AR_info;
  output [181:0]M00_SC_AR_payld;
  input [0:0]M00_SC_AR_recv;
  output [0:0]M00_SC_AR_req;
  output [0:0]M00_SC_AR_send;
  output [0:0]M00_SC_AW_info;
  output [181:0]M00_SC_AW_payld;
  input [0:0]M00_SC_AW_recv;
  output [0:0]M00_SC_AW_req;
  output [0:0]M00_SC_AW_send;
  output [6:0]M00_SC_B_info;
  output [8:0]M00_SC_B_payld;
  input [6:0]M00_SC_B_recv;
  output [6:0]M00_SC_B_req;
  output [6:0]M00_SC_B_send;
  output [6:0]M00_SC_R_info;
  output [54:0]M00_SC_R_payld;
  input [6:0]M00_SC_R_recv;
  output [6:0]M00_SC_R_req;
  output [6:0]M00_SC_R_send;
  output [0:0]M00_SC_W_info;
  output [68:0]M00_SC_W_payld;
  input [0:0]M00_SC_W_recv;
  output [0:0]M00_SC_W_req;
  output [0:0]M00_SC_W_send;
  output [0:0]M01_SC_AR_info;
  output [181:0]M01_SC_AR_payld;
  input [0:0]M01_SC_AR_recv;
  output [0:0]M01_SC_AR_req;
  output [0:0]M01_SC_AR_send;
  output [0:0]M01_SC_AW_info;
  output [181:0]M01_SC_AW_payld;
  input [0:0]M01_SC_AW_recv;
  output [0:0]M01_SC_AW_req;
  output [0:0]M01_SC_AW_send;
  output [0:0]M01_SC_W_info;
  output [68:0]M01_SC_W_payld;
  input [0:0]M01_SC_W_recv;
  output [0:0]M01_SC_W_req;
  output [0:0]M01_SC_W_send;
  output [0:0]M02_SC_AR_info;
  output [181:0]M02_SC_AR_payld;
  input [0:0]M02_SC_AR_recv;
  output [0:0]M02_SC_AR_req;
  output [0:0]M02_SC_AR_send;
  output [0:0]M02_SC_AW_info;
  output [181:0]M02_SC_AW_payld;
  input [0:0]M02_SC_AW_recv;
  output [0:0]M02_SC_AW_req;
  output [0:0]M02_SC_AW_send;
  output [0:0]M02_SC_W_info;
  output [68:0]M02_SC_W_payld;
  input [0:0]M02_SC_W_recv;
  output [0:0]M02_SC_W_req;
  output [0:0]M02_SC_W_send;
  output [0:0]M03_SC_AR_info;
  output [181:0]M03_SC_AR_payld;
  input [0:0]M03_SC_AR_recv;
  output [0:0]M03_SC_AR_req;
  output [0:0]M03_SC_AR_send;
  output [0:0]M03_SC_AW_info;
  output [181:0]M03_SC_AW_payld;
  input [0:0]M03_SC_AW_recv;
  output [0:0]M03_SC_AW_req;
  output [0:0]M03_SC_AW_send;
  output [0:0]M03_SC_W_info;
  output [68:0]M03_SC_W_payld;
  input [0:0]M03_SC_W_recv;
  output [0:0]M03_SC_W_req;
  output [0:0]M03_SC_W_send;
  output [0:0]M04_SC_AR_info;
  output [181:0]M04_SC_AR_payld;
  input [0:0]M04_SC_AR_recv;
  output [0:0]M04_SC_AR_req;
  output [0:0]M04_SC_AR_send;
  output [0:0]M04_SC_AW_info;
  output [181:0]M04_SC_AW_payld;
  input [0:0]M04_SC_AW_recv;
  output [0:0]M04_SC_AW_req;
  output [0:0]M04_SC_AW_send;
  output [0:0]M04_SC_W_info;
  output [68:0]M04_SC_W_payld;
  input [0:0]M04_SC_W_recv;
  output [0:0]M04_SC_W_req;
  output [0:0]M04_SC_W_send;
  output [0:0]M05_SC_AR_info;
  output [181:0]M05_SC_AR_payld;
  input [0:0]M05_SC_AR_recv;
  output [0:0]M05_SC_AR_req;
  output [0:0]M05_SC_AR_send;
  output [0:0]M05_SC_AW_info;
  output [181:0]M05_SC_AW_payld;
  input [0:0]M05_SC_AW_recv;
  output [0:0]M05_SC_AW_req;
  output [0:0]M05_SC_AW_send;
  output [0:0]M05_SC_W_info;
  output [68:0]M05_SC_W_payld;
  input [0:0]M05_SC_W_recv;
  output [0:0]M05_SC_W_req;
  output [0:0]M05_SC_W_send;
  output [0:0]M06_SC_AR_info;
  output [181:0]M06_SC_AR_payld;
  input [0:0]M06_SC_AR_recv;
  output [0:0]M06_SC_AR_req;
  output [0:0]M06_SC_AR_send;
  output [0:0]M06_SC_AW_info;
  output [181:0]M06_SC_AW_payld;
  input [0:0]M06_SC_AW_recv;
  output [0:0]M06_SC_AW_req;
  output [0:0]M06_SC_AW_send;
  output [0:0]M06_SC_W_info;
  output [68:0]M06_SC_W_payld;
  input [0:0]M06_SC_W_recv;
  output [0:0]M06_SC_W_req;
  output [0:0]M06_SC_W_send;
  input [6:0]S00_SC_AR_info;
  input [181:0]S00_SC_AR_payld;
  output [6:0]S00_SC_AR_recv;
  input [6:0]S00_SC_AR_req;
  input [6:0]S00_SC_AR_send;
  input [6:0]S00_SC_AW_info;
  input [181:0]S00_SC_AW_payld;
  output [6:0]S00_SC_AW_recv;
  input [6:0]S00_SC_AW_req;
  input [6:0]S00_SC_AW_send;
  input [0:0]S00_SC_B_info;
  input [8:0]S00_SC_B_payld;
  output [0:0]S00_SC_B_recv;
  input [0:0]S00_SC_B_req;
  input [0:0]S00_SC_B_send;
  input [0:0]S00_SC_R_info;
  input [54:0]S00_SC_R_payld;
  output [0:0]S00_SC_R_recv;
  input [0:0]S00_SC_R_req;
  input [0:0]S00_SC_R_send;
  input [6:0]S00_SC_W_info;
  input [68:0]S00_SC_W_payld;
  output [6:0]S00_SC_W_recv;
  input [6:0]S00_SC_W_req;
  input [6:0]S00_SC_W_send;
  input [0:0]S01_SC_B_info;
  input [8:0]S01_SC_B_payld;
  output [0:0]S01_SC_B_recv;
  input [0:0]S01_SC_B_req;
  input [0:0]S01_SC_B_send;
  input [0:0]S01_SC_R_info;
  input [54:0]S01_SC_R_payld;
  output [0:0]S01_SC_R_recv;
  input [0:0]S01_SC_R_req;
  input [0:0]S01_SC_R_send;
  input [0:0]S02_SC_B_info;
  input [8:0]S02_SC_B_payld;
  output [0:0]S02_SC_B_recv;
  input [0:0]S02_SC_B_req;
  input [0:0]S02_SC_B_send;
  input [0:0]S02_SC_R_info;
  input [54:0]S02_SC_R_payld;
  output [0:0]S02_SC_R_recv;
  input [0:0]S02_SC_R_req;
  input [0:0]S02_SC_R_send;
  input [0:0]S03_SC_B_info;
  input [8:0]S03_SC_B_payld;
  output [0:0]S03_SC_B_recv;
  input [0:0]S03_SC_B_req;
  input [0:0]S03_SC_B_send;
  input [0:0]S03_SC_R_info;
  input [54:0]S03_SC_R_payld;
  output [0:0]S03_SC_R_recv;
  input [0:0]S03_SC_R_req;
  input [0:0]S03_SC_R_send;
  input [0:0]S04_SC_B_info;
  input [8:0]S04_SC_B_payld;
  output [0:0]S04_SC_B_recv;
  input [0:0]S04_SC_B_req;
  input [0:0]S04_SC_B_send;
  input [0:0]S04_SC_R_info;
  input [54:0]S04_SC_R_payld;
  output [0:0]S04_SC_R_recv;
  input [0:0]S04_SC_R_req;
  input [0:0]S04_SC_R_send;
  input [0:0]S05_SC_B_info;
  input [8:0]S05_SC_B_payld;
  output [0:0]S05_SC_B_recv;
  input [0:0]S05_SC_B_req;
  input [0:0]S05_SC_B_send;
  input [0:0]S05_SC_R_info;
  input [54:0]S05_SC_R_payld;
  output [0:0]S05_SC_R_recv;
  input [0:0]S05_SC_R_req;
  input [0:0]S05_SC_R_send;
  input [0:0]S06_SC_B_info;
  input [8:0]S06_SC_B_payld;
  output [0:0]S06_SC_B_recv;
  input [0:0]S06_SC_B_req;
  input [0:0]S06_SC_B_send;
  input [0:0]S06_SC_R_info;
  input [54:0]S06_SC_R_payld;
  output [0:0]S06_SC_R_recv;
  input [0:0]S06_SC_R_req;
  input [0:0]S06_SC_R_send;
  input aclk;

  wire [6:0]S00_SC_AR_1_INFO;
  wire [181:0]S00_SC_AR_1_PAYLD;
  wire [6:0]S00_SC_AR_1_RECV;
  wire [6:0]S00_SC_AR_1_REQ;
  wire [6:0]S00_SC_AR_1_SEND;
  wire [6:0]S00_SC_AW_1_INFO;
  wire [181:0]S00_SC_AW_1_PAYLD;
  wire [6:0]S00_SC_AW_1_RECV;
  wire [6:0]S00_SC_AW_1_REQ;
  wire [6:0]S00_SC_AW_1_SEND;
  wire [0:0]S00_SC_B_1_INFO;
  wire [8:0]S00_SC_B_1_PAYLD;
  wire [0:0]S00_SC_B_1_RECV;
  wire [0:0]S00_SC_B_1_REQ;
  wire [0:0]S00_SC_B_1_SEND;
  wire [0:0]S00_SC_R_1_INFO;
  wire [54:0]S00_SC_R_1_PAYLD;
  wire [0:0]S00_SC_R_1_RECV;
  wire [0:0]S00_SC_R_1_REQ;
  wire [0:0]S00_SC_R_1_SEND;
  wire [6:0]S00_SC_W_1_INFO;
  wire [68:0]S00_SC_W_1_PAYLD;
  wire [6:0]S00_SC_W_1_RECV;
  wire [6:0]S00_SC_W_1_REQ;
  wire [6:0]S00_SC_W_1_SEND;
  wire [0:0]S01_SC_B_1_INFO;
  wire [8:0]S01_SC_B_1_PAYLD;
  wire [1:1]S01_SC_B_1_RECV;
  wire [0:0]S01_SC_B_1_REQ;
  wire [0:0]S01_SC_B_1_SEND;
  wire [0:0]S01_SC_R_1_INFO;
  wire [54:0]S01_SC_R_1_PAYLD;
  wire [1:1]S01_SC_R_1_RECV;
  wire [0:0]S01_SC_R_1_REQ;
  wire [0:0]S01_SC_R_1_SEND;
  wire [0:0]S02_SC_B_1_INFO;
  wire [8:0]S02_SC_B_1_PAYLD;
  wire [2:2]S02_SC_B_1_RECV;
  wire [0:0]S02_SC_B_1_REQ;
  wire [0:0]S02_SC_B_1_SEND;
  wire [0:0]S02_SC_R_1_INFO;
  wire [54:0]S02_SC_R_1_PAYLD;
  wire [2:2]S02_SC_R_1_RECV;
  wire [0:0]S02_SC_R_1_REQ;
  wire [0:0]S02_SC_R_1_SEND;
  wire [0:0]S03_SC_B_1_INFO;
  wire [8:0]S03_SC_B_1_PAYLD;
  wire [3:3]S03_SC_B_1_RECV;
  wire [0:0]S03_SC_B_1_REQ;
  wire [0:0]S03_SC_B_1_SEND;
  wire [0:0]S03_SC_R_1_INFO;
  wire [54:0]S03_SC_R_1_PAYLD;
  wire [3:3]S03_SC_R_1_RECV;
  wire [0:0]S03_SC_R_1_REQ;
  wire [0:0]S03_SC_R_1_SEND;
  wire [0:0]S04_SC_B_1_INFO;
  wire [8:0]S04_SC_B_1_PAYLD;
  wire [4:4]S04_SC_B_1_RECV;
  wire [0:0]S04_SC_B_1_REQ;
  wire [0:0]S04_SC_B_1_SEND;
  wire [0:0]S04_SC_R_1_INFO;
  wire [54:0]S04_SC_R_1_PAYLD;
  wire [4:4]S04_SC_R_1_RECV;
  wire [0:0]S04_SC_R_1_REQ;
  wire [0:0]S04_SC_R_1_SEND;
  wire [0:0]S05_SC_B_1_INFO;
  wire [8:0]S05_SC_B_1_PAYLD;
  wire [5:5]S05_SC_B_1_RECV;
  wire [0:0]S05_SC_B_1_REQ;
  wire [0:0]S05_SC_B_1_SEND;
  wire [0:0]S05_SC_R_1_INFO;
  wire [54:0]S05_SC_R_1_PAYLD;
  wire [5:5]S05_SC_R_1_RECV;
  wire [0:0]S05_SC_R_1_REQ;
  wire [0:0]S05_SC_R_1_SEND;
  wire [0:0]S06_SC_B_1_INFO;
  wire [8:0]S06_SC_B_1_PAYLD;
  wire [6:6]S06_SC_B_1_RECV;
  wire [0:0]S06_SC_B_1_REQ;
  wire [0:0]S06_SC_B_1_SEND;
  wire [0:0]S06_SC_R_1_INFO;
  wire [54:0]S06_SC_R_1_PAYLD;
  wire [6:6]S06_SC_R_1_RECV;
  wire [0:0]S06_SC_R_1_REQ;
  wire [0:0]S06_SC_R_1_SEND;
  wire aclk_1;
  wire [0:0]ar_la_out_swbd_0_M00_SC_INFO;
  wire [181:0]ar_la_out_swbd_0_M00_SC_PAYLD;
  wire [0:0]ar_la_out_swbd_0_M00_SC_RECV;
  wire [0:0]ar_la_out_swbd_0_M00_SC_REQ;
  wire [0:0]ar_la_out_swbd_0_M00_SC_SEND;
  wire [1:1]ar_la_out_swbd_0_M01_SC_INFO;
  wire [363:182]ar_la_out_swbd_0_M01_SC_PAYLD;
  wire [0:0]ar_la_out_swbd_0_M01_SC_RECV;
  wire [1:1]ar_la_out_swbd_0_M01_SC_REQ;
  wire [1:1]ar_la_out_swbd_0_M01_SC_SEND;
  wire [2:2]ar_la_out_swbd_0_M02_SC_INFO;
  wire [545:364]ar_la_out_swbd_0_M02_SC_PAYLD;
  wire [0:0]ar_la_out_swbd_0_M02_SC_RECV;
  wire [2:2]ar_la_out_swbd_0_M02_SC_REQ;
  wire [2:2]ar_la_out_swbd_0_M02_SC_SEND;
  wire [3:3]ar_la_out_swbd_0_M03_SC_INFO;
  wire [727:546]ar_la_out_swbd_0_M03_SC_PAYLD;
  wire [0:0]ar_la_out_swbd_0_M03_SC_RECV;
  wire [3:3]ar_la_out_swbd_0_M03_SC_REQ;
  wire [3:3]ar_la_out_swbd_0_M03_SC_SEND;
  wire [4:4]ar_la_out_swbd_0_M04_SC_INFO;
  wire [909:728]ar_la_out_swbd_0_M04_SC_PAYLD;
  wire [0:0]ar_la_out_swbd_0_M04_SC_RECV;
  wire [4:4]ar_la_out_swbd_0_M04_SC_REQ;
  wire [4:4]ar_la_out_swbd_0_M04_SC_SEND;
  wire [5:5]ar_la_out_swbd_0_M05_SC_INFO;
  wire [1091:910]ar_la_out_swbd_0_M05_SC_PAYLD;
  wire [0:0]ar_la_out_swbd_0_M05_SC_RECV;
  wire [5:5]ar_la_out_swbd_0_M05_SC_REQ;
  wire [5:5]ar_la_out_swbd_0_M05_SC_SEND;
  wire [6:6]ar_la_out_swbd_0_M06_SC_INFO;
  wire [1273:1092]ar_la_out_swbd_0_M06_SC_PAYLD;
  wire [0:0]ar_la_out_swbd_0_M06_SC_RECV;
  wire [6:6]ar_la_out_swbd_0_M06_SC_REQ;
  wire [6:6]ar_la_out_swbd_0_M06_SC_SEND;
  wire [0:0]aw_la_out_swbd_0_M00_SC_INFO;
  wire [181:0]aw_la_out_swbd_0_M00_SC_PAYLD;
  wire [0:0]aw_la_out_swbd_0_M00_SC_RECV;
  wire [0:0]aw_la_out_swbd_0_M00_SC_REQ;
  wire [0:0]aw_la_out_swbd_0_M00_SC_SEND;
  wire [1:1]aw_la_out_swbd_0_M01_SC_INFO;
  wire [363:182]aw_la_out_swbd_0_M01_SC_PAYLD;
  wire [0:0]aw_la_out_swbd_0_M01_SC_RECV;
  wire [1:1]aw_la_out_swbd_0_M01_SC_REQ;
  wire [1:1]aw_la_out_swbd_0_M01_SC_SEND;
  wire [2:2]aw_la_out_swbd_0_M02_SC_INFO;
  wire [545:364]aw_la_out_swbd_0_M02_SC_PAYLD;
  wire [0:0]aw_la_out_swbd_0_M02_SC_RECV;
  wire [2:2]aw_la_out_swbd_0_M02_SC_REQ;
  wire [2:2]aw_la_out_swbd_0_M02_SC_SEND;
  wire [3:3]aw_la_out_swbd_0_M03_SC_INFO;
  wire [727:546]aw_la_out_swbd_0_M03_SC_PAYLD;
  wire [0:0]aw_la_out_swbd_0_M03_SC_RECV;
  wire [3:3]aw_la_out_swbd_0_M03_SC_REQ;
  wire [3:3]aw_la_out_swbd_0_M03_SC_SEND;
  wire [4:4]aw_la_out_swbd_0_M04_SC_INFO;
  wire [909:728]aw_la_out_swbd_0_M04_SC_PAYLD;
  wire [0:0]aw_la_out_swbd_0_M04_SC_RECV;
  wire [4:4]aw_la_out_swbd_0_M04_SC_REQ;
  wire [4:4]aw_la_out_swbd_0_M04_SC_SEND;
  wire [5:5]aw_la_out_swbd_0_M05_SC_INFO;
  wire [1091:910]aw_la_out_swbd_0_M05_SC_PAYLD;
  wire [0:0]aw_la_out_swbd_0_M05_SC_RECV;
  wire [5:5]aw_la_out_swbd_0_M05_SC_REQ;
  wire [5:5]aw_la_out_swbd_0_M05_SC_SEND;
  wire [6:6]aw_la_out_swbd_0_M06_SC_INFO;
  wire [1273:1092]aw_la_out_swbd_0_M06_SC_PAYLD;
  wire [0:0]aw_la_out_swbd_0_M06_SC_RECV;
  wire [6:6]aw_la_out_swbd_0_M06_SC_REQ;
  wire [6:6]aw_la_out_swbd_0_M06_SC_SEND;
  wire [6:0]b_la_out_swbd_0_M00_SC_INFO;
  wire [8:0]b_la_out_swbd_0_M00_SC_PAYLD;
  wire [6:0]b_la_out_swbd_0_M00_SC_RECV;
  wire [6:0]b_la_out_swbd_0_M00_SC_REQ;
  wire [6:0]b_la_out_swbd_0_M00_SC_SEND;
  wire [6:0]r_la_out_swbd_0_M00_SC_INFO;
  wire [54:0]r_la_out_swbd_0_M00_SC_PAYLD;
  wire [6:0]r_la_out_swbd_0_M00_SC_RECV;
  wire [6:0]r_la_out_swbd_0_M00_SC_REQ;
  wire [6:0]r_la_out_swbd_0_M00_SC_SEND;
  wire [0:0]w_la_out_swbd_0_M00_SC_INFO;
  wire [68:0]w_la_out_swbd_0_M00_SC_PAYLD;
  wire [0:0]w_la_out_swbd_0_M00_SC_RECV;
  wire [0:0]w_la_out_swbd_0_M00_SC_REQ;
  wire [0:0]w_la_out_swbd_0_M00_SC_SEND;
  wire [1:1]w_la_out_swbd_0_M01_SC_INFO;
  wire [137:69]w_la_out_swbd_0_M01_SC_PAYLD;
  wire [0:0]w_la_out_swbd_0_M01_SC_RECV;
  wire [1:1]w_la_out_swbd_0_M01_SC_REQ;
  wire [1:1]w_la_out_swbd_0_M01_SC_SEND;
  wire [2:2]w_la_out_swbd_0_M02_SC_INFO;
  wire [206:138]w_la_out_swbd_0_M02_SC_PAYLD;
  wire [0:0]w_la_out_swbd_0_M02_SC_RECV;
  wire [2:2]w_la_out_swbd_0_M02_SC_REQ;
  wire [2:2]w_la_out_swbd_0_M02_SC_SEND;
  wire [3:3]w_la_out_swbd_0_M03_SC_INFO;
  wire [275:207]w_la_out_swbd_0_M03_SC_PAYLD;
  wire [0:0]w_la_out_swbd_0_M03_SC_RECV;
  wire [3:3]w_la_out_swbd_0_M03_SC_REQ;
  wire [3:3]w_la_out_swbd_0_M03_SC_SEND;
  wire [4:4]w_la_out_swbd_0_M04_SC_INFO;
  wire [344:276]w_la_out_swbd_0_M04_SC_PAYLD;
  wire [0:0]w_la_out_swbd_0_M04_SC_RECV;
  wire [4:4]w_la_out_swbd_0_M04_SC_REQ;
  wire [4:4]w_la_out_swbd_0_M04_SC_SEND;
  wire [5:5]w_la_out_swbd_0_M05_SC_INFO;
  wire [413:345]w_la_out_swbd_0_M05_SC_PAYLD;
  wire [0:0]w_la_out_swbd_0_M05_SC_RECV;
  wire [5:5]w_la_out_swbd_0_M05_SC_REQ;
  wire [5:5]w_la_out_swbd_0_M05_SC_SEND;
  wire [6:6]w_la_out_swbd_0_M06_SC_INFO;
  wire [482:414]w_la_out_swbd_0_M06_SC_PAYLD;
  wire [0:0]w_la_out_swbd_0_M06_SC_RECV;
  wire [6:6]w_la_out_swbd_0_M06_SC_REQ;
  wire [6:6]w_la_out_swbd_0_M06_SC_SEND;

  assign M00_SC_AR_info[0] = ar_la_out_swbd_0_M00_SC_INFO;
  assign M00_SC_AR_payld[181:0] = ar_la_out_swbd_0_M00_SC_PAYLD;
  assign M00_SC_AR_req[0] = ar_la_out_swbd_0_M00_SC_REQ;
  assign M00_SC_AR_send[0] = ar_la_out_swbd_0_M00_SC_SEND;
  assign M00_SC_AW_info[0] = aw_la_out_swbd_0_M00_SC_INFO;
  assign M00_SC_AW_payld[181:0] = aw_la_out_swbd_0_M00_SC_PAYLD;
  assign M00_SC_AW_req[0] = aw_la_out_swbd_0_M00_SC_REQ;
  assign M00_SC_AW_send[0] = aw_la_out_swbd_0_M00_SC_SEND;
  assign M00_SC_B_info[6:0] = b_la_out_swbd_0_M00_SC_INFO;
  assign M00_SC_B_payld[8:0] = b_la_out_swbd_0_M00_SC_PAYLD;
  assign M00_SC_B_req[6:0] = b_la_out_swbd_0_M00_SC_REQ;
  assign M00_SC_B_send[6:0] = b_la_out_swbd_0_M00_SC_SEND;
  assign M00_SC_R_info[6:0] = r_la_out_swbd_0_M00_SC_INFO;
  assign M00_SC_R_payld[54:0] = r_la_out_swbd_0_M00_SC_PAYLD;
  assign M00_SC_R_req[6:0] = r_la_out_swbd_0_M00_SC_REQ;
  assign M00_SC_R_send[6:0] = r_la_out_swbd_0_M00_SC_SEND;
  assign M00_SC_W_info[0] = w_la_out_swbd_0_M00_SC_INFO;
  assign M00_SC_W_payld[68:0] = w_la_out_swbd_0_M00_SC_PAYLD;
  assign M00_SC_W_req[0] = w_la_out_swbd_0_M00_SC_REQ;
  assign M00_SC_W_send[0] = w_la_out_swbd_0_M00_SC_SEND;
  assign M01_SC_AR_info[0] = ar_la_out_swbd_0_M01_SC_INFO;
  assign M01_SC_AR_payld[181:0] = ar_la_out_swbd_0_M01_SC_PAYLD;
  assign M01_SC_AR_req[0] = ar_la_out_swbd_0_M01_SC_REQ;
  assign M01_SC_AR_send[0] = ar_la_out_swbd_0_M01_SC_SEND;
  assign M01_SC_AW_info[0] = aw_la_out_swbd_0_M01_SC_INFO;
  assign M01_SC_AW_payld[181:0] = aw_la_out_swbd_0_M01_SC_PAYLD;
  assign M01_SC_AW_req[0] = aw_la_out_swbd_0_M01_SC_REQ;
  assign M01_SC_AW_send[0] = aw_la_out_swbd_0_M01_SC_SEND;
  assign M01_SC_W_info[0] = w_la_out_swbd_0_M01_SC_INFO;
  assign M01_SC_W_payld[68:0] = w_la_out_swbd_0_M01_SC_PAYLD;
  assign M01_SC_W_req[0] = w_la_out_swbd_0_M01_SC_REQ;
  assign M01_SC_W_send[0] = w_la_out_swbd_0_M01_SC_SEND;
  assign M02_SC_AR_info[0] = ar_la_out_swbd_0_M02_SC_INFO;
  assign M02_SC_AR_payld[181:0] = ar_la_out_swbd_0_M02_SC_PAYLD;
  assign M02_SC_AR_req[0] = ar_la_out_swbd_0_M02_SC_REQ;
  assign M02_SC_AR_send[0] = ar_la_out_swbd_0_M02_SC_SEND;
  assign M02_SC_AW_info[0] = aw_la_out_swbd_0_M02_SC_INFO;
  assign M02_SC_AW_payld[181:0] = aw_la_out_swbd_0_M02_SC_PAYLD;
  assign M02_SC_AW_req[0] = aw_la_out_swbd_0_M02_SC_REQ;
  assign M02_SC_AW_send[0] = aw_la_out_swbd_0_M02_SC_SEND;
  assign M02_SC_W_info[0] = w_la_out_swbd_0_M02_SC_INFO;
  assign M02_SC_W_payld[68:0] = w_la_out_swbd_0_M02_SC_PAYLD;
  assign M02_SC_W_req[0] = w_la_out_swbd_0_M02_SC_REQ;
  assign M02_SC_W_send[0] = w_la_out_swbd_0_M02_SC_SEND;
  assign M03_SC_AR_info[0] = ar_la_out_swbd_0_M03_SC_INFO;
  assign M03_SC_AR_payld[181:0] = ar_la_out_swbd_0_M03_SC_PAYLD;
  assign M03_SC_AR_req[0] = ar_la_out_swbd_0_M03_SC_REQ;
  assign M03_SC_AR_send[0] = ar_la_out_swbd_0_M03_SC_SEND;
  assign M03_SC_AW_info[0] = aw_la_out_swbd_0_M03_SC_INFO;
  assign M03_SC_AW_payld[181:0] = aw_la_out_swbd_0_M03_SC_PAYLD;
  assign M03_SC_AW_req[0] = aw_la_out_swbd_0_M03_SC_REQ;
  assign M03_SC_AW_send[0] = aw_la_out_swbd_0_M03_SC_SEND;
  assign M03_SC_W_info[0] = w_la_out_swbd_0_M03_SC_INFO;
  assign M03_SC_W_payld[68:0] = w_la_out_swbd_0_M03_SC_PAYLD;
  assign M03_SC_W_req[0] = w_la_out_swbd_0_M03_SC_REQ;
  assign M03_SC_W_send[0] = w_la_out_swbd_0_M03_SC_SEND;
  assign M04_SC_AR_info[0] = ar_la_out_swbd_0_M04_SC_INFO;
  assign M04_SC_AR_payld[181:0] = ar_la_out_swbd_0_M04_SC_PAYLD;
  assign M04_SC_AR_req[0] = ar_la_out_swbd_0_M04_SC_REQ;
  assign M04_SC_AR_send[0] = ar_la_out_swbd_0_M04_SC_SEND;
  assign M04_SC_AW_info[0] = aw_la_out_swbd_0_M04_SC_INFO;
  assign M04_SC_AW_payld[181:0] = aw_la_out_swbd_0_M04_SC_PAYLD;
  assign M04_SC_AW_req[0] = aw_la_out_swbd_0_M04_SC_REQ;
  assign M04_SC_AW_send[0] = aw_la_out_swbd_0_M04_SC_SEND;
  assign M04_SC_W_info[0] = w_la_out_swbd_0_M04_SC_INFO;
  assign M04_SC_W_payld[68:0] = w_la_out_swbd_0_M04_SC_PAYLD;
  assign M04_SC_W_req[0] = w_la_out_swbd_0_M04_SC_REQ;
  assign M04_SC_W_send[0] = w_la_out_swbd_0_M04_SC_SEND;
  assign M05_SC_AR_info[0] = ar_la_out_swbd_0_M05_SC_INFO;
  assign M05_SC_AR_payld[181:0] = ar_la_out_swbd_0_M05_SC_PAYLD;
  assign M05_SC_AR_req[0] = ar_la_out_swbd_0_M05_SC_REQ;
  assign M05_SC_AR_send[0] = ar_la_out_swbd_0_M05_SC_SEND;
  assign M05_SC_AW_info[0] = aw_la_out_swbd_0_M05_SC_INFO;
  assign M05_SC_AW_payld[181:0] = aw_la_out_swbd_0_M05_SC_PAYLD;
  assign M05_SC_AW_req[0] = aw_la_out_swbd_0_M05_SC_REQ;
  assign M05_SC_AW_send[0] = aw_la_out_swbd_0_M05_SC_SEND;
  assign M05_SC_W_info[0] = w_la_out_swbd_0_M05_SC_INFO;
  assign M05_SC_W_payld[68:0] = w_la_out_swbd_0_M05_SC_PAYLD;
  assign M05_SC_W_req[0] = w_la_out_swbd_0_M05_SC_REQ;
  assign M05_SC_W_send[0] = w_la_out_swbd_0_M05_SC_SEND;
  assign M06_SC_AR_info[0] = ar_la_out_swbd_0_M06_SC_INFO;
  assign M06_SC_AR_payld[181:0] = ar_la_out_swbd_0_M06_SC_PAYLD;
  assign M06_SC_AR_req[0] = ar_la_out_swbd_0_M06_SC_REQ;
  assign M06_SC_AR_send[0] = ar_la_out_swbd_0_M06_SC_SEND;
  assign M06_SC_AW_info[0] = aw_la_out_swbd_0_M06_SC_INFO;
  assign M06_SC_AW_payld[181:0] = aw_la_out_swbd_0_M06_SC_PAYLD;
  assign M06_SC_AW_req[0] = aw_la_out_swbd_0_M06_SC_REQ;
  assign M06_SC_AW_send[0] = aw_la_out_swbd_0_M06_SC_SEND;
  assign M06_SC_W_info[0] = w_la_out_swbd_0_M06_SC_INFO;
  assign M06_SC_W_payld[68:0] = w_la_out_swbd_0_M06_SC_PAYLD;
  assign M06_SC_W_req[0] = w_la_out_swbd_0_M06_SC_REQ;
  assign M06_SC_W_send[0] = w_la_out_swbd_0_M06_SC_SEND;
  assign S00_SC_AR_1_INFO = S00_SC_AR_info[6:0];
  assign S00_SC_AR_1_PAYLD = S00_SC_AR_payld[181:0];
  assign S00_SC_AR_1_REQ = S00_SC_AR_req[6:0];
  assign S00_SC_AR_1_SEND = S00_SC_AR_send[6:0];
  assign S00_SC_AR_recv[6:0] = S00_SC_AR_1_RECV;
  assign S00_SC_AW_1_INFO = S00_SC_AW_info[6:0];
  assign S00_SC_AW_1_PAYLD = S00_SC_AW_payld[181:0];
  assign S00_SC_AW_1_REQ = S00_SC_AW_req[6:0];
  assign S00_SC_AW_1_SEND = S00_SC_AW_send[6:0];
  assign S00_SC_AW_recv[6:0] = S00_SC_AW_1_RECV;
  assign S00_SC_B_1_INFO = S00_SC_B_info[0];
  assign S00_SC_B_1_PAYLD = S00_SC_B_payld[8:0];
  assign S00_SC_B_1_REQ = S00_SC_B_req[0];
  assign S00_SC_B_1_SEND = S00_SC_B_send[0];
  assign S00_SC_B_recv[0] = S00_SC_B_1_RECV;
  assign S00_SC_R_1_INFO = S00_SC_R_info[0];
  assign S00_SC_R_1_PAYLD = S00_SC_R_payld[54:0];
  assign S00_SC_R_1_REQ = S00_SC_R_req[0];
  assign S00_SC_R_1_SEND = S00_SC_R_send[0];
  assign S00_SC_R_recv[0] = S00_SC_R_1_RECV;
  assign S00_SC_W_1_INFO = S00_SC_W_info[6:0];
  assign S00_SC_W_1_PAYLD = S00_SC_W_payld[68:0];
  assign S00_SC_W_1_REQ = S00_SC_W_req[6:0];
  assign S00_SC_W_1_SEND = S00_SC_W_send[6:0];
  assign S00_SC_W_recv[6:0] = S00_SC_W_1_RECV;
  assign S01_SC_B_1_INFO = S01_SC_B_info[0];
  assign S01_SC_B_1_PAYLD = S01_SC_B_payld[8:0];
  assign S01_SC_B_1_REQ = S01_SC_B_req[0];
  assign S01_SC_B_1_SEND = S01_SC_B_send[0];
  assign S01_SC_B_recv[0] = S01_SC_B_1_RECV;
  assign S01_SC_R_1_INFO = S01_SC_R_info[0];
  assign S01_SC_R_1_PAYLD = S01_SC_R_payld[54:0];
  assign S01_SC_R_1_REQ = S01_SC_R_req[0];
  assign S01_SC_R_1_SEND = S01_SC_R_send[0];
  assign S01_SC_R_recv[0] = S01_SC_R_1_RECV;
  assign S02_SC_B_1_INFO = S02_SC_B_info[0];
  assign S02_SC_B_1_PAYLD = S02_SC_B_payld[8:0];
  assign S02_SC_B_1_REQ = S02_SC_B_req[0];
  assign S02_SC_B_1_SEND = S02_SC_B_send[0];
  assign S02_SC_B_recv[0] = S02_SC_B_1_RECV;
  assign S02_SC_R_1_INFO = S02_SC_R_info[0];
  assign S02_SC_R_1_PAYLD = S02_SC_R_payld[54:0];
  assign S02_SC_R_1_REQ = S02_SC_R_req[0];
  assign S02_SC_R_1_SEND = S02_SC_R_send[0];
  assign S02_SC_R_recv[0] = S02_SC_R_1_RECV;
  assign S03_SC_B_1_INFO = S03_SC_B_info[0];
  assign S03_SC_B_1_PAYLD = S03_SC_B_payld[8:0];
  assign S03_SC_B_1_REQ = S03_SC_B_req[0];
  assign S03_SC_B_1_SEND = S03_SC_B_send[0];
  assign S03_SC_B_recv[0] = S03_SC_B_1_RECV;
  assign S03_SC_R_1_INFO = S03_SC_R_info[0];
  assign S03_SC_R_1_PAYLD = S03_SC_R_payld[54:0];
  assign S03_SC_R_1_REQ = S03_SC_R_req[0];
  assign S03_SC_R_1_SEND = S03_SC_R_send[0];
  assign S03_SC_R_recv[0] = S03_SC_R_1_RECV;
  assign S04_SC_B_1_INFO = S04_SC_B_info[0];
  assign S04_SC_B_1_PAYLD = S04_SC_B_payld[8:0];
  assign S04_SC_B_1_REQ = S04_SC_B_req[0];
  assign S04_SC_B_1_SEND = S04_SC_B_send[0];
  assign S04_SC_B_recv[0] = S04_SC_B_1_RECV;
  assign S04_SC_R_1_INFO = S04_SC_R_info[0];
  assign S04_SC_R_1_PAYLD = S04_SC_R_payld[54:0];
  assign S04_SC_R_1_REQ = S04_SC_R_req[0];
  assign S04_SC_R_1_SEND = S04_SC_R_send[0];
  assign S04_SC_R_recv[0] = S04_SC_R_1_RECV;
  assign S05_SC_B_1_INFO = S05_SC_B_info[0];
  assign S05_SC_B_1_PAYLD = S05_SC_B_payld[8:0];
  assign S05_SC_B_1_REQ = S05_SC_B_req[0];
  assign S05_SC_B_1_SEND = S05_SC_B_send[0];
  assign S05_SC_B_recv[0] = S05_SC_B_1_RECV;
  assign S05_SC_R_1_INFO = S05_SC_R_info[0];
  assign S05_SC_R_1_PAYLD = S05_SC_R_payld[54:0];
  assign S05_SC_R_1_REQ = S05_SC_R_req[0];
  assign S05_SC_R_1_SEND = S05_SC_R_send[0];
  assign S05_SC_R_recv[0] = S05_SC_R_1_RECV;
  assign S06_SC_B_1_INFO = S06_SC_B_info[0];
  assign S06_SC_B_1_PAYLD = S06_SC_B_payld[8:0];
  assign S06_SC_B_1_REQ = S06_SC_B_req[0];
  assign S06_SC_B_1_SEND = S06_SC_B_send[0];
  assign S06_SC_B_recv[0] = S06_SC_B_1_RECV;
  assign S06_SC_R_1_INFO = S06_SC_R_info[0];
  assign S06_SC_R_1_PAYLD = S06_SC_R_payld[54:0];
  assign S06_SC_R_1_REQ = S06_SC_R_req[0];
  assign S06_SC_R_1_SEND = S06_SC_R_send[0];
  assign S06_SC_R_recv[0] = S06_SC_R_1_RECV;
  assign aclk_1 = aclk;
  assign ar_la_out_swbd_0_M00_SC_RECV = M00_SC_AR_recv[0];
  assign ar_la_out_swbd_0_M01_SC_RECV = M01_SC_AR_recv[0];
  assign ar_la_out_swbd_0_M02_SC_RECV = M02_SC_AR_recv[0];
  assign ar_la_out_swbd_0_M03_SC_RECV = M03_SC_AR_recv[0];
  assign ar_la_out_swbd_0_M04_SC_RECV = M04_SC_AR_recv[0];
  assign ar_la_out_swbd_0_M05_SC_RECV = M05_SC_AR_recv[0];
  assign ar_la_out_swbd_0_M06_SC_RECV = M06_SC_AR_recv[0];
  assign aw_la_out_swbd_0_M00_SC_RECV = M00_SC_AW_recv[0];
  assign aw_la_out_swbd_0_M01_SC_RECV = M01_SC_AW_recv[0];
  assign aw_la_out_swbd_0_M02_SC_RECV = M02_SC_AW_recv[0];
  assign aw_la_out_swbd_0_M03_SC_RECV = M03_SC_AW_recv[0];
  assign aw_la_out_swbd_0_M04_SC_RECV = M04_SC_AW_recv[0];
  assign aw_la_out_swbd_0_M05_SC_RECV = M05_SC_AW_recv[0];
  assign aw_la_out_swbd_0_M06_SC_RECV = M06_SC_AW_recv[0];
  assign b_la_out_swbd_0_M00_SC_RECV = M00_SC_B_recv[6:0];
  assign r_la_out_swbd_0_M00_SC_RECV = M00_SC_R_recv[6:0];
  assign w_la_out_swbd_0_M00_SC_RECV = M00_SC_W_recv[0];
  assign w_la_out_swbd_0_M01_SC_RECV = M01_SC_W_recv[0];
  assign w_la_out_swbd_0_M02_SC_RECV = M02_SC_W_recv[0];
  assign w_la_out_swbd_0_M03_SC_RECV = M03_SC_W_recv[0];
  assign w_la_out_swbd_0_M04_SC_RECV = M04_SC_W_recv[0];
  assign w_la_out_swbd_0_M05_SC_RECV = M05_SC_W_recv[0];
  assign w_la_out_swbd_0_M06_SC_RECV = M06_SC_W_recv[0];
  bd_afc3_arinsw_1 ar_la_out_swbd_0
       (.aclk(aclk_1),
        .aclken(1'b1),
        .m_sc_info({ar_la_out_swbd_0_M06_SC_INFO,ar_la_out_swbd_0_M05_SC_INFO,ar_la_out_swbd_0_M04_SC_INFO,ar_la_out_swbd_0_M03_SC_INFO,ar_la_out_swbd_0_M02_SC_INFO,ar_la_out_swbd_0_M01_SC_INFO,ar_la_out_swbd_0_M00_SC_INFO}),
        .m_sc_payld({ar_la_out_swbd_0_M06_SC_PAYLD,ar_la_out_swbd_0_M05_SC_PAYLD,ar_la_out_swbd_0_M04_SC_PAYLD,ar_la_out_swbd_0_M03_SC_PAYLD,ar_la_out_swbd_0_M02_SC_PAYLD,ar_la_out_swbd_0_M01_SC_PAYLD,ar_la_out_swbd_0_M00_SC_PAYLD}),
        .m_sc_recv({ar_la_out_swbd_0_M06_SC_RECV,ar_la_out_swbd_0_M05_SC_RECV,ar_la_out_swbd_0_M04_SC_RECV,ar_la_out_swbd_0_M03_SC_RECV,ar_la_out_swbd_0_M02_SC_RECV,ar_la_out_swbd_0_M01_SC_RECV,ar_la_out_swbd_0_M00_SC_RECV}),
        .m_sc_req({ar_la_out_swbd_0_M06_SC_REQ,ar_la_out_swbd_0_M05_SC_REQ,ar_la_out_swbd_0_M04_SC_REQ,ar_la_out_swbd_0_M03_SC_REQ,ar_la_out_swbd_0_M02_SC_REQ,ar_la_out_swbd_0_M01_SC_REQ,ar_la_out_swbd_0_M00_SC_REQ}),
        .m_sc_send({ar_la_out_swbd_0_M06_SC_SEND,ar_la_out_swbd_0_M05_SC_SEND,ar_la_out_swbd_0_M04_SC_SEND,ar_la_out_swbd_0_M03_SC_SEND,ar_la_out_swbd_0_M02_SC_SEND,ar_la_out_swbd_0_M01_SC_SEND,ar_la_out_swbd_0_M00_SC_SEND}),
        .s_sc_info(S00_SC_AR_1_INFO),
        .s_sc_payld(S00_SC_AR_1_PAYLD),
        .s_sc_recv(S00_SC_AR_1_RECV),
        .s_sc_req(S00_SC_AR_1_REQ),
        .s_sc_send(S00_SC_AR_1_SEND));
  bd_afc3_awinsw_1 aw_la_out_swbd_0
       (.aclk(aclk_1),
        .aclken(1'b1),
        .m_sc_info({aw_la_out_swbd_0_M06_SC_INFO,aw_la_out_swbd_0_M05_SC_INFO,aw_la_out_swbd_0_M04_SC_INFO,aw_la_out_swbd_0_M03_SC_INFO,aw_la_out_swbd_0_M02_SC_INFO,aw_la_out_swbd_0_M01_SC_INFO,aw_la_out_swbd_0_M00_SC_INFO}),
        .m_sc_payld({aw_la_out_swbd_0_M06_SC_PAYLD,aw_la_out_swbd_0_M05_SC_PAYLD,aw_la_out_swbd_0_M04_SC_PAYLD,aw_la_out_swbd_0_M03_SC_PAYLD,aw_la_out_swbd_0_M02_SC_PAYLD,aw_la_out_swbd_0_M01_SC_PAYLD,aw_la_out_swbd_0_M00_SC_PAYLD}),
        .m_sc_recv({aw_la_out_swbd_0_M06_SC_RECV,aw_la_out_swbd_0_M05_SC_RECV,aw_la_out_swbd_0_M04_SC_RECV,aw_la_out_swbd_0_M03_SC_RECV,aw_la_out_swbd_0_M02_SC_RECV,aw_la_out_swbd_0_M01_SC_RECV,aw_la_out_swbd_0_M00_SC_RECV}),
        .m_sc_req({aw_la_out_swbd_0_M06_SC_REQ,aw_la_out_swbd_0_M05_SC_REQ,aw_la_out_swbd_0_M04_SC_REQ,aw_la_out_swbd_0_M03_SC_REQ,aw_la_out_swbd_0_M02_SC_REQ,aw_la_out_swbd_0_M01_SC_REQ,aw_la_out_swbd_0_M00_SC_REQ}),
        .m_sc_send({aw_la_out_swbd_0_M06_SC_SEND,aw_la_out_swbd_0_M05_SC_SEND,aw_la_out_swbd_0_M04_SC_SEND,aw_la_out_swbd_0_M03_SC_SEND,aw_la_out_swbd_0_M02_SC_SEND,aw_la_out_swbd_0_M01_SC_SEND,aw_la_out_swbd_0_M00_SC_SEND}),
        .s_sc_info(S00_SC_AW_1_INFO),
        .s_sc_payld(S00_SC_AW_1_PAYLD),
        .s_sc_recv(S00_SC_AW_1_RECV),
        .s_sc_req(S00_SC_AW_1_REQ),
        .s_sc_send(S00_SC_AW_1_SEND));
  bd_afc3_binsw_1 b_la_out_swbd_0
       (.aclk(aclk_1),
        .aclken(1'b1),
        .m_sc_info(b_la_out_swbd_0_M00_SC_INFO),
        .m_sc_payld(b_la_out_swbd_0_M00_SC_PAYLD),
        .m_sc_recv(b_la_out_swbd_0_M00_SC_RECV),
        .m_sc_req(b_la_out_swbd_0_M00_SC_REQ),
        .m_sc_send(b_la_out_swbd_0_M00_SC_SEND),
        .s_sc_info({S06_SC_B_1_INFO,S05_SC_B_1_INFO,S04_SC_B_1_INFO,S03_SC_B_1_INFO,S02_SC_B_1_INFO,S01_SC_B_1_INFO,S00_SC_B_1_INFO}),
        .s_sc_payld({S06_SC_B_1_PAYLD,S05_SC_B_1_PAYLD,S04_SC_B_1_PAYLD,S03_SC_B_1_PAYLD,S02_SC_B_1_PAYLD,S01_SC_B_1_PAYLD,S00_SC_B_1_PAYLD}),
        .s_sc_recv({S06_SC_B_1_RECV,S05_SC_B_1_RECV,S04_SC_B_1_RECV,S03_SC_B_1_RECV,S02_SC_B_1_RECV,S01_SC_B_1_RECV,S00_SC_B_1_RECV}),
        .s_sc_req({S06_SC_B_1_REQ,S05_SC_B_1_REQ,S04_SC_B_1_REQ,S03_SC_B_1_REQ,S02_SC_B_1_REQ,S01_SC_B_1_REQ,S00_SC_B_1_REQ}),
        .s_sc_send({S06_SC_B_1_SEND,S05_SC_B_1_SEND,S04_SC_B_1_SEND,S03_SC_B_1_SEND,S02_SC_B_1_SEND,S01_SC_B_1_SEND,S00_SC_B_1_SEND}));
  bd_afc3_rinsw_1 r_la_out_swbd_0
       (.aclk(aclk_1),
        .aclken(1'b1),
        .m_sc_info(r_la_out_swbd_0_M00_SC_INFO),
        .m_sc_payld(r_la_out_swbd_0_M00_SC_PAYLD),
        .m_sc_recv(r_la_out_swbd_0_M00_SC_RECV),
        .m_sc_req(r_la_out_swbd_0_M00_SC_REQ),
        .m_sc_send(r_la_out_swbd_0_M00_SC_SEND),
        .s_sc_info({S06_SC_R_1_INFO,S05_SC_R_1_INFO,S04_SC_R_1_INFO,S03_SC_R_1_INFO,S02_SC_R_1_INFO,S01_SC_R_1_INFO,S00_SC_R_1_INFO}),
        .s_sc_payld({S06_SC_R_1_PAYLD,S05_SC_R_1_PAYLD,S04_SC_R_1_PAYLD,S03_SC_R_1_PAYLD,S02_SC_R_1_PAYLD,S01_SC_R_1_PAYLD,S00_SC_R_1_PAYLD}),
        .s_sc_recv({S06_SC_R_1_RECV,S05_SC_R_1_RECV,S04_SC_R_1_RECV,S03_SC_R_1_RECV,S02_SC_R_1_RECV,S01_SC_R_1_RECV,S00_SC_R_1_RECV}),
        .s_sc_req({S06_SC_R_1_REQ,S05_SC_R_1_REQ,S04_SC_R_1_REQ,S03_SC_R_1_REQ,S02_SC_R_1_REQ,S01_SC_R_1_REQ,S00_SC_R_1_REQ}),
        .s_sc_send({S06_SC_R_1_SEND,S05_SC_R_1_SEND,S04_SC_R_1_SEND,S03_SC_R_1_SEND,S02_SC_R_1_SEND,S01_SC_R_1_SEND,S00_SC_R_1_SEND}));
  bd_afc3_winsw_1 w_la_out_swbd_0
       (.aclk(aclk_1),
        .aclken(1'b1),
        .m_sc_info({w_la_out_swbd_0_M06_SC_INFO,w_la_out_swbd_0_M05_SC_INFO,w_la_out_swbd_0_M04_SC_INFO,w_la_out_swbd_0_M03_SC_INFO,w_la_out_swbd_0_M02_SC_INFO,w_la_out_swbd_0_M01_SC_INFO,w_la_out_swbd_0_M00_SC_INFO}),
        .m_sc_payld({w_la_out_swbd_0_M06_SC_PAYLD,w_la_out_swbd_0_M05_SC_PAYLD,w_la_out_swbd_0_M04_SC_PAYLD,w_la_out_swbd_0_M03_SC_PAYLD,w_la_out_swbd_0_M02_SC_PAYLD,w_la_out_swbd_0_M01_SC_PAYLD,w_la_out_swbd_0_M00_SC_PAYLD}),
        .m_sc_recv({w_la_out_swbd_0_M06_SC_RECV,w_la_out_swbd_0_M05_SC_RECV,w_la_out_swbd_0_M04_SC_RECV,w_la_out_swbd_0_M03_SC_RECV,w_la_out_swbd_0_M02_SC_RECV,w_la_out_swbd_0_M01_SC_RECV,w_la_out_swbd_0_M00_SC_RECV}),
        .m_sc_req({w_la_out_swbd_0_M06_SC_REQ,w_la_out_swbd_0_M05_SC_REQ,w_la_out_swbd_0_M04_SC_REQ,w_la_out_swbd_0_M03_SC_REQ,w_la_out_swbd_0_M02_SC_REQ,w_la_out_swbd_0_M01_SC_REQ,w_la_out_swbd_0_M00_SC_REQ}),
        .m_sc_send({w_la_out_swbd_0_M06_SC_SEND,w_la_out_swbd_0_M05_SC_SEND,w_la_out_swbd_0_M04_SC_SEND,w_la_out_swbd_0_M03_SC_SEND,w_la_out_swbd_0_M02_SC_SEND,w_la_out_swbd_0_M01_SC_SEND,w_la_out_swbd_0_M00_SC_SEND}),
        .s_sc_info(S00_SC_W_1_INFO),
        .s_sc_payld(S00_SC_W_1_PAYLD),
        .s_sc_recv(S00_SC_W_1_RECV),
        .s_sc_req(S00_SC_W_1_REQ),
        .s_sc_send(S00_SC_W_1_SEND));
endmodule

module out_swbd_1_imp_1GG8WQ2
   (M00_SC_AR_info,
    M00_SC_AR_payld,
    M00_SC_AR_recv,
    M00_SC_AR_req,
    M00_SC_AR_send,
    M00_SC_AW_info,
    M00_SC_AW_payld,
    M00_SC_AW_recv,
    M00_SC_AW_req,
    M00_SC_AW_send,
    M00_SC_B_info,
    M00_SC_B_payld,
    M00_SC_B_recv,
    M00_SC_B_req,
    M00_SC_B_send,
    M00_SC_R_info,
    M00_SC_R_payld,
    M00_SC_R_recv,
    M00_SC_R_req,
    M00_SC_R_send,
    M00_SC_W_info,
    M00_SC_W_payld,
    M00_SC_W_recv,
    M00_SC_W_req,
    M00_SC_W_send,
    M01_SC_AR_info,
    M01_SC_AR_payld,
    M01_SC_AR_recv,
    M01_SC_AR_req,
    M01_SC_AR_send,
    M01_SC_AW_info,
    M01_SC_AW_payld,
    M01_SC_AW_recv,
    M01_SC_AW_req,
    M01_SC_AW_send,
    M01_SC_W_info,
    M01_SC_W_payld,
    M01_SC_W_recv,
    M01_SC_W_req,
    M01_SC_W_send,
    M02_SC_AR_info,
    M02_SC_AR_payld,
    M02_SC_AR_recv,
    M02_SC_AR_req,
    M02_SC_AR_send,
    M02_SC_AW_info,
    M02_SC_AW_payld,
    M02_SC_AW_recv,
    M02_SC_AW_req,
    M02_SC_AW_send,
    M02_SC_W_info,
    M02_SC_W_payld,
    M02_SC_W_recv,
    M02_SC_W_req,
    M02_SC_W_send,
    M03_SC_AR_info,
    M03_SC_AR_payld,
    M03_SC_AR_recv,
    M03_SC_AR_req,
    M03_SC_AR_send,
    M03_SC_AW_info,
    M03_SC_AW_payld,
    M03_SC_AW_recv,
    M03_SC_AW_req,
    M03_SC_AW_send,
    M03_SC_W_info,
    M03_SC_W_payld,
    M03_SC_W_recv,
    M03_SC_W_req,
    M03_SC_W_send,
    M04_SC_AR_info,
    M04_SC_AR_payld,
    M04_SC_AR_recv,
    M04_SC_AR_req,
    M04_SC_AR_send,
    M04_SC_AW_info,
    M04_SC_AW_payld,
    M04_SC_AW_recv,
    M04_SC_AW_req,
    M04_SC_AW_send,
    M04_SC_W_info,
    M04_SC_W_payld,
    M04_SC_W_recv,
    M04_SC_W_req,
    M04_SC_W_send,
    M05_SC_AR_info,
    M05_SC_AR_payld,
    M05_SC_AR_recv,
    M05_SC_AR_req,
    M05_SC_AR_send,
    M05_SC_AW_info,
    M05_SC_AW_payld,
    M05_SC_AW_recv,
    M05_SC_AW_req,
    M05_SC_AW_send,
    M05_SC_W_info,
    M05_SC_W_payld,
    M05_SC_W_recv,
    M05_SC_W_req,
    M05_SC_W_send,
    M06_SC_AR_info,
    M06_SC_AR_payld,
    M06_SC_AR_recv,
    M06_SC_AR_req,
    M06_SC_AR_send,
    M06_SC_AW_info,
    M06_SC_AW_payld,
    M06_SC_AW_recv,
    M06_SC_AW_req,
    M06_SC_AW_send,
    M06_SC_W_info,
    M06_SC_W_payld,
    M06_SC_W_recv,
    M06_SC_W_req,
    M06_SC_W_send,
    S00_SC_AR_info,
    S00_SC_AR_payld,
    S00_SC_AR_recv,
    S00_SC_AR_req,
    S00_SC_AR_send,
    S00_SC_AW_info,
    S00_SC_AW_payld,
    S00_SC_AW_recv,
    S00_SC_AW_req,
    S00_SC_AW_send,
    S00_SC_B_info,
    S00_SC_B_payld,
    S00_SC_B_recv,
    S00_SC_B_req,
    S00_SC_B_send,
    S00_SC_R_info,
    S00_SC_R_payld,
    S00_SC_R_recv,
    S00_SC_R_req,
    S00_SC_R_send,
    S00_SC_W_info,
    S00_SC_W_payld,
    S00_SC_W_recv,
    S00_SC_W_req,
    S00_SC_W_send,
    S01_SC_B_info,
    S01_SC_B_payld,
    S01_SC_B_recv,
    S01_SC_B_req,
    S01_SC_B_send,
    S01_SC_R_info,
    S01_SC_R_payld,
    S01_SC_R_recv,
    S01_SC_R_req,
    S01_SC_R_send,
    S02_SC_B_info,
    S02_SC_B_payld,
    S02_SC_B_recv,
    S02_SC_B_req,
    S02_SC_B_send,
    S02_SC_R_info,
    S02_SC_R_payld,
    S02_SC_R_recv,
    S02_SC_R_req,
    S02_SC_R_send,
    S03_SC_B_info,
    S03_SC_B_payld,
    S03_SC_B_recv,
    S03_SC_B_req,
    S03_SC_B_send,
    S03_SC_R_info,
    S03_SC_R_payld,
    S03_SC_R_recv,
    S03_SC_R_req,
    S03_SC_R_send,
    S04_SC_B_info,
    S04_SC_B_payld,
    S04_SC_B_recv,
    S04_SC_B_req,
    S04_SC_B_send,
    S04_SC_R_info,
    S04_SC_R_payld,
    S04_SC_R_recv,
    S04_SC_R_req,
    S04_SC_R_send,
    S05_SC_B_info,
    S05_SC_B_payld,
    S05_SC_B_recv,
    S05_SC_B_req,
    S05_SC_B_send,
    S05_SC_R_info,
    S05_SC_R_payld,
    S05_SC_R_recv,
    S05_SC_R_req,
    S05_SC_R_send,
    S06_SC_B_info,
    S06_SC_B_payld,
    S06_SC_B_recv,
    S06_SC_B_req,
    S06_SC_B_send,
    S06_SC_R_info,
    S06_SC_R_payld,
    S06_SC_R_recv,
    S06_SC_R_req,
    S06_SC_R_send,
    aclk);
  output [0:0]M00_SC_AR_info;
  output [181:0]M00_SC_AR_payld;
  input [0:0]M00_SC_AR_recv;
  output [0:0]M00_SC_AR_req;
  output [0:0]M00_SC_AR_send;
  output [0:0]M00_SC_AW_info;
  output [181:0]M00_SC_AW_payld;
  input [0:0]M00_SC_AW_recv;
  output [0:0]M00_SC_AW_req;
  output [0:0]M00_SC_AW_send;
  output [6:0]M00_SC_B_info;
  output [8:0]M00_SC_B_payld;
  input [6:0]M00_SC_B_recv;
  output [6:0]M00_SC_B_req;
  output [6:0]M00_SC_B_send;
  output [6:0]M00_SC_R_info;
  output [54:0]M00_SC_R_payld;
  input [6:0]M00_SC_R_recv;
  output [6:0]M00_SC_R_req;
  output [6:0]M00_SC_R_send;
  output [0:0]M00_SC_W_info;
  output [68:0]M00_SC_W_payld;
  input [0:0]M00_SC_W_recv;
  output [0:0]M00_SC_W_req;
  output [0:0]M00_SC_W_send;
  output [0:0]M01_SC_AR_info;
  output [181:0]M01_SC_AR_payld;
  input [0:0]M01_SC_AR_recv;
  output [0:0]M01_SC_AR_req;
  output [0:0]M01_SC_AR_send;
  output [0:0]M01_SC_AW_info;
  output [181:0]M01_SC_AW_payld;
  input [0:0]M01_SC_AW_recv;
  output [0:0]M01_SC_AW_req;
  output [0:0]M01_SC_AW_send;
  output [0:0]M01_SC_W_info;
  output [68:0]M01_SC_W_payld;
  input [0:0]M01_SC_W_recv;
  output [0:0]M01_SC_W_req;
  output [0:0]M01_SC_W_send;
  output [0:0]M02_SC_AR_info;
  output [181:0]M02_SC_AR_payld;
  input [0:0]M02_SC_AR_recv;
  output [0:0]M02_SC_AR_req;
  output [0:0]M02_SC_AR_send;
  output [0:0]M02_SC_AW_info;
  output [181:0]M02_SC_AW_payld;
  input [0:0]M02_SC_AW_recv;
  output [0:0]M02_SC_AW_req;
  output [0:0]M02_SC_AW_send;
  output [0:0]M02_SC_W_info;
  output [68:0]M02_SC_W_payld;
  input [0:0]M02_SC_W_recv;
  output [0:0]M02_SC_W_req;
  output [0:0]M02_SC_W_send;
  output [0:0]M03_SC_AR_info;
  output [181:0]M03_SC_AR_payld;
  input [0:0]M03_SC_AR_recv;
  output [0:0]M03_SC_AR_req;
  output [0:0]M03_SC_AR_send;
  output [0:0]M03_SC_AW_info;
  output [181:0]M03_SC_AW_payld;
  input [0:0]M03_SC_AW_recv;
  output [0:0]M03_SC_AW_req;
  output [0:0]M03_SC_AW_send;
  output [0:0]M03_SC_W_info;
  output [68:0]M03_SC_W_payld;
  input [0:0]M03_SC_W_recv;
  output [0:0]M03_SC_W_req;
  output [0:0]M03_SC_W_send;
  output [0:0]M04_SC_AR_info;
  output [181:0]M04_SC_AR_payld;
  input [0:0]M04_SC_AR_recv;
  output [0:0]M04_SC_AR_req;
  output [0:0]M04_SC_AR_send;
  output [0:0]M04_SC_AW_info;
  output [181:0]M04_SC_AW_payld;
  input [0:0]M04_SC_AW_recv;
  output [0:0]M04_SC_AW_req;
  output [0:0]M04_SC_AW_send;
  output [0:0]M04_SC_W_info;
  output [68:0]M04_SC_W_payld;
  input [0:0]M04_SC_W_recv;
  output [0:0]M04_SC_W_req;
  output [0:0]M04_SC_W_send;
  output [0:0]M05_SC_AR_info;
  output [181:0]M05_SC_AR_payld;
  input [0:0]M05_SC_AR_recv;
  output [0:0]M05_SC_AR_req;
  output [0:0]M05_SC_AR_send;
  output [0:0]M05_SC_AW_info;
  output [181:0]M05_SC_AW_payld;
  input [0:0]M05_SC_AW_recv;
  output [0:0]M05_SC_AW_req;
  output [0:0]M05_SC_AW_send;
  output [0:0]M05_SC_W_info;
  output [68:0]M05_SC_W_payld;
  input [0:0]M05_SC_W_recv;
  output [0:0]M05_SC_W_req;
  output [0:0]M05_SC_W_send;
  output [0:0]M06_SC_AR_info;
  output [181:0]M06_SC_AR_payld;
  input [0:0]M06_SC_AR_recv;
  output [0:0]M06_SC_AR_req;
  output [0:0]M06_SC_AR_send;
  output [0:0]M06_SC_AW_info;
  output [181:0]M06_SC_AW_payld;
  input [0:0]M06_SC_AW_recv;
  output [0:0]M06_SC_AW_req;
  output [0:0]M06_SC_AW_send;
  output [0:0]M06_SC_W_info;
  output [68:0]M06_SC_W_payld;
  input [0:0]M06_SC_W_recv;
  output [0:0]M06_SC_W_req;
  output [0:0]M06_SC_W_send;
  input [6:0]S00_SC_AR_info;
  input [181:0]S00_SC_AR_payld;
  output [6:0]S00_SC_AR_recv;
  input [6:0]S00_SC_AR_req;
  input [6:0]S00_SC_AR_send;
  input [6:0]S00_SC_AW_info;
  input [181:0]S00_SC_AW_payld;
  output [6:0]S00_SC_AW_recv;
  input [6:0]S00_SC_AW_req;
  input [6:0]S00_SC_AW_send;
  input [0:0]S00_SC_B_info;
  input [8:0]S00_SC_B_payld;
  output [0:0]S00_SC_B_recv;
  input [0:0]S00_SC_B_req;
  input [0:0]S00_SC_B_send;
  input [0:0]S00_SC_R_info;
  input [54:0]S00_SC_R_payld;
  output [0:0]S00_SC_R_recv;
  input [0:0]S00_SC_R_req;
  input [0:0]S00_SC_R_send;
  input [6:0]S00_SC_W_info;
  input [68:0]S00_SC_W_payld;
  output [6:0]S00_SC_W_recv;
  input [6:0]S00_SC_W_req;
  input [6:0]S00_SC_W_send;
  input [0:0]S01_SC_B_info;
  input [8:0]S01_SC_B_payld;
  output [0:0]S01_SC_B_recv;
  input [0:0]S01_SC_B_req;
  input [0:0]S01_SC_B_send;
  input [0:0]S01_SC_R_info;
  input [54:0]S01_SC_R_payld;
  output [0:0]S01_SC_R_recv;
  input [0:0]S01_SC_R_req;
  input [0:0]S01_SC_R_send;
  input [0:0]S02_SC_B_info;
  input [8:0]S02_SC_B_payld;
  output [0:0]S02_SC_B_recv;
  input [0:0]S02_SC_B_req;
  input [0:0]S02_SC_B_send;
  input [0:0]S02_SC_R_info;
  input [54:0]S02_SC_R_payld;
  output [0:0]S02_SC_R_recv;
  input [0:0]S02_SC_R_req;
  input [0:0]S02_SC_R_send;
  input [0:0]S03_SC_B_info;
  input [8:0]S03_SC_B_payld;
  output [0:0]S03_SC_B_recv;
  input [0:0]S03_SC_B_req;
  input [0:0]S03_SC_B_send;
  input [0:0]S03_SC_R_info;
  input [54:0]S03_SC_R_payld;
  output [0:0]S03_SC_R_recv;
  input [0:0]S03_SC_R_req;
  input [0:0]S03_SC_R_send;
  input [0:0]S04_SC_B_info;
  input [8:0]S04_SC_B_payld;
  output [0:0]S04_SC_B_recv;
  input [0:0]S04_SC_B_req;
  input [0:0]S04_SC_B_send;
  input [0:0]S04_SC_R_info;
  input [54:0]S04_SC_R_payld;
  output [0:0]S04_SC_R_recv;
  input [0:0]S04_SC_R_req;
  input [0:0]S04_SC_R_send;
  input [0:0]S05_SC_B_info;
  input [8:0]S05_SC_B_payld;
  output [0:0]S05_SC_B_recv;
  input [0:0]S05_SC_B_req;
  input [0:0]S05_SC_B_send;
  input [0:0]S05_SC_R_info;
  input [54:0]S05_SC_R_payld;
  output [0:0]S05_SC_R_recv;
  input [0:0]S05_SC_R_req;
  input [0:0]S05_SC_R_send;
  input [0:0]S06_SC_B_info;
  input [8:0]S06_SC_B_payld;
  output [0:0]S06_SC_B_recv;
  input [0:0]S06_SC_B_req;
  input [0:0]S06_SC_B_send;
  input [0:0]S06_SC_R_info;
  input [54:0]S06_SC_R_payld;
  output [0:0]S06_SC_R_recv;
  input [0:0]S06_SC_R_req;
  input [0:0]S06_SC_R_send;
  input aclk;

  wire [6:0]S00_SC_AR_1_INFO;
  wire [181:0]S00_SC_AR_1_PAYLD;
  wire [6:0]S00_SC_AR_1_RECV;
  wire [6:0]S00_SC_AR_1_REQ;
  wire [6:0]S00_SC_AR_1_SEND;
  wire [6:0]S00_SC_AW_1_INFO;
  wire [181:0]S00_SC_AW_1_PAYLD;
  wire [6:0]S00_SC_AW_1_RECV;
  wire [6:0]S00_SC_AW_1_REQ;
  wire [6:0]S00_SC_AW_1_SEND;
  wire [0:0]S00_SC_B_1_INFO;
  wire [8:0]S00_SC_B_1_PAYLD;
  wire [0:0]S00_SC_B_1_RECV;
  wire [0:0]S00_SC_B_1_REQ;
  wire [0:0]S00_SC_B_1_SEND;
  wire [0:0]S00_SC_R_1_INFO;
  wire [54:0]S00_SC_R_1_PAYLD;
  wire [0:0]S00_SC_R_1_RECV;
  wire [0:0]S00_SC_R_1_REQ;
  wire [0:0]S00_SC_R_1_SEND;
  wire [6:0]S00_SC_W_1_INFO;
  wire [68:0]S00_SC_W_1_PAYLD;
  wire [6:0]S00_SC_W_1_RECV;
  wire [6:0]S00_SC_W_1_REQ;
  wire [6:0]S00_SC_W_1_SEND;
  wire [0:0]S01_SC_B_1_INFO;
  wire [8:0]S01_SC_B_1_PAYLD;
  wire [1:1]S01_SC_B_1_RECV;
  wire [0:0]S01_SC_B_1_REQ;
  wire [0:0]S01_SC_B_1_SEND;
  wire [0:0]S01_SC_R_1_INFO;
  wire [54:0]S01_SC_R_1_PAYLD;
  wire [1:1]S01_SC_R_1_RECV;
  wire [0:0]S01_SC_R_1_REQ;
  wire [0:0]S01_SC_R_1_SEND;
  wire [0:0]S02_SC_B_1_INFO;
  wire [8:0]S02_SC_B_1_PAYLD;
  wire [2:2]S02_SC_B_1_RECV;
  wire [0:0]S02_SC_B_1_REQ;
  wire [0:0]S02_SC_B_1_SEND;
  wire [0:0]S02_SC_R_1_INFO;
  wire [54:0]S02_SC_R_1_PAYLD;
  wire [2:2]S02_SC_R_1_RECV;
  wire [0:0]S02_SC_R_1_REQ;
  wire [0:0]S02_SC_R_1_SEND;
  wire [0:0]S03_SC_B_1_INFO;
  wire [8:0]S03_SC_B_1_PAYLD;
  wire [3:3]S03_SC_B_1_RECV;
  wire [0:0]S03_SC_B_1_REQ;
  wire [0:0]S03_SC_B_1_SEND;
  wire [0:0]S03_SC_R_1_INFO;
  wire [54:0]S03_SC_R_1_PAYLD;
  wire [3:3]S03_SC_R_1_RECV;
  wire [0:0]S03_SC_R_1_REQ;
  wire [0:0]S03_SC_R_1_SEND;
  wire [0:0]S04_SC_B_1_INFO;
  wire [8:0]S04_SC_B_1_PAYLD;
  wire [4:4]S04_SC_B_1_RECV;
  wire [0:0]S04_SC_B_1_REQ;
  wire [0:0]S04_SC_B_1_SEND;
  wire [0:0]S04_SC_R_1_INFO;
  wire [54:0]S04_SC_R_1_PAYLD;
  wire [4:4]S04_SC_R_1_RECV;
  wire [0:0]S04_SC_R_1_REQ;
  wire [0:0]S04_SC_R_1_SEND;
  wire [0:0]S05_SC_B_1_INFO;
  wire [8:0]S05_SC_B_1_PAYLD;
  wire [5:5]S05_SC_B_1_RECV;
  wire [0:0]S05_SC_B_1_REQ;
  wire [0:0]S05_SC_B_1_SEND;
  wire [0:0]S05_SC_R_1_INFO;
  wire [54:0]S05_SC_R_1_PAYLD;
  wire [5:5]S05_SC_R_1_RECV;
  wire [0:0]S05_SC_R_1_REQ;
  wire [0:0]S05_SC_R_1_SEND;
  wire [0:0]S06_SC_B_1_INFO;
  wire [8:0]S06_SC_B_1_PAYLD;
  wire [6:6]S06_SC_B_1_RECV;
  wire [0:0]S06_SC_B_1_REQ;
  wire [0:0]S06_SC_B_1_SEND;
  wire [0:0]S06_SC_R_1_INFO;
  wire [54:0]S06_SC_R_1_PAYLD;
  wire [6:6]S06_SC_R_1_RECV;
  wire [0:0]S06_SC_R_1_REQ;
  wire [0:0]S06_SC_R_1_SEND;
  wire aclk_1;
  wire [0:0]ar_la_out_swbd_1_M00_SC_INFO;
  wire [181:0]ar_la_out_swbd_1_M00_SC_PAYLD;
  wire [0:0]ar_la_out_swbd_1_M00_SC_RECV;
  wire [0:0]ar_la_out_swbd_1_M00_SC_REQ;
  wire [0:0]ar_la_out_swbd_1_M00_SC_SEND;
  wire [1:1]ar_la_out_swbd_1_M01_SC_INFO;
  wire [363:182]ar_la_out_swbd_1_M01_SC_PAYLD;
  wire [0:0]ar_la_out_swbd_1_M01_SC_RECV;
  wire [1:1]ar_la_out_swbd_1_M01_SC_REQ;
  wire [1:1]ar_la_out_swbd_1_M01_SC_SEND;
  wire [2:2]ar_la_out_swbd_1_M02_SC_INFO;
  wire [545:364]ar_la_out_swbd_1_M02_SC_PAYLD;
  wire [0:0]ar_la_out_swbd_1_M02_SC_RECV;
  wire [2:2]ar_la_out_swbd_1_M02_SC_REQ;
  wire [2:2]ar_la_out_swbd_1_M02_SC_SEND;
  wire [3:3]ar_la_out_swbd_1_M03_SC_INFO;
  wire [727:546]ar_la_out_swbd_1_M03_SC_PAYLD;
  wire [0:0]ar_la_out_swbd_1_M03_SC_RECV;
  wire [3:3]ar_la_out_swbd_1_M03_SC_REQ;
  wire [3:3]ar_la_out_swbd_1_M03_SC_SEND;
  wire [4:4]ar_la_out_swbd_1_M04_SC_INFO;
  wire [909:728]ar_la_out_swbd_1_M04_SC_PAYLD;
  wire [0:0]ar_la_out_swbd_1_M04_SC_RECV;
  wire [4:4]ar_la_out_swbd_1_M04_SC_REQ;
  wire [4:4]ar_la_out_swbd_1_M04_SC_SEND;
  wire [5:5]ar_la_out_swbd_1_M05_SC_INFO;
  wire [1091:910]ar_la_out_swbd_1_M05_SC_PAYLD;
  wire [0:0]ar_la_out_swbd_1_M05_SC_RECV;
  wire [5:5]ar_la_out_swbd_1_M05_SC_REQ;
  wire [5:5]ar_la_out_swbd_1_M05_SC_SEND;
  wire [6:6]ar_la_out_swbd_1_M06_SC_INFO;
  wire [1273:1092]ar_la_out_swbd_1_M06_SC_PAYLD;
  wire [0:0]ar_la_out_swbd_1_M06_SC_RECV;
  wire [6:6]ar_la_out_swbd_1_M06_SC_REQ;
  wire [6:6]ar_la_out_swbd_1_M06_SC_SEND;
  wire [0:0]aw_la_out_swbd_1_M00_SC_INFO;
  wire [181:0]aw_la_out_swbd_1_M00_SC_PAYLD;
  wire [0:0]aw_la_out_swbd_1_M00_SC_RECV;
  wire [0:0]aw_la_out_swbd_1_M00_SC_REQ;
  wire [0:0]aw_la_out_swbd_1_M00_SC_SEND;
  wire [1:1]aw_la_out_swbd_1_M01_SC_INFO;
  wire [363:182]aw_la_out_swbd_1_M01_SC_PAYLD;
  wire [0:0]aw_la_out_swbd_1_M01_SC_RECV;
  wire [1:1]aw_la_out_swbd_1_M01_SC_REQ;
  wire [1:1]aw_la_out_swbd_1_M01_SC_SEND;
  wire [2:2]aw_la_out_swbd_1_M02_SC_INFO;
  wire [545:364]aw_la_out_swbd_1_M02_SC_PAYLD;
  wire [0:0]aw_la_out_swbd_1_M02_SC_RECV;
  wire [2:2]aw_la_out_swbd_1_M02_SC_REQ;
  wire [2:2]aw_la_out_swbd_1_M02_SC_SEND;
  wire [3:3]aw_la_out_swbd_1_M03_SC_INFO;
  wire [727:546]aw_la_out_swbd_1_M03_SC_PAYLD;
  wire [0:0]aw_la_out_swbd_1_M03_SC_RECV;
  wire [3:3]aw_la_out_swbd_1_M03_SC_REQ;
  wire [3:3]aw_la_out_swbd_1_M03_SC_SEND;
  wire [4:4]aw_la_out_swbd_1_M04_SC_INFO;
  wire [909:728]aw_la_out_swbd_1_M04_SC_PAYLD;
  wire [0:0]aw_la_out_swbd_1_M04_SC_RECV;
  wire [4:4]aw_la_out_swbd_1_M04_SC_REQ;
  wire [4:4]aw_la_out_swbd_1_M04_SC_SEND;
  wire [5:5]aw_la_out_swbd_1_M05_SC_INFO;
  wire [1091:910]aw_la_out_swbd_1_M05_SC_PAYLD;
  wire [0:0]aw_la_out_swbd_1_M05_SC_RECV;
  wire [5:5]aw_la_out_swbd_1_M05_SC_REQ;
  wire [5:5]aw_la_out_swbd_1_M05_SC_SEND;
  wire [6:6]aw_la_out_swbd_1_M06_SC_INFO;
  wire [1273:1092]aw_la_out_swbd_1_M06_SC_PAYLD;
  wire [0:0]aw_la_out_swbd_1_M06_SC_RECV;
  wire [6:6]aw_la_out_swbd_1_M06_SC_REQ;
  wire [6:6]aw_la_out_swbd_1_M06_SC_SEND;
  wire [6:0]b_la_out_swbd_1_M00_SC_INFO;
  wire [8:0]b_la_out_swbd_1_M00_SC_PAYLD;
  wire [6:0]b_la_out_swbd_1_M00_SC_RECV;
  wire [6:0]b_la_out_swbd_1_M00_SC_REQ;
  wire [6:0]b_la_out_swbd_1_M00_SC_SEND;
  wire [6:0]r_la_out_swbd_1_M00_SC_INFO;
  wire [54:0]r_la_out_swbd_1_M00_SC_PAYLD;
  wire [6:0]r_la_out_swbd_1_M00_SC_RECV;
  wire [6:0]r_la_out_swbd_1_M00_SC_REQ;
  wire [6:0]r_la_out_swbd_1_M00_SC_SEND;
  wire [0:0]w_la_out_swbd_1_M00_SC_INFO;
  wire [68:0]w_la_out_swbd_1_M00_SC_PAYLD;
  wire [0:0]w_la_out_swbd_1_M00_SC_RECV;
  wire [0:0]w_la_out_swbd_1_M00_SC_REQ;
  wire [0:0]w_la_out_swbd_1_M00_SC_SEND;
  wire [1:1]w_la_out_swbd_1_M01_SC_INFO;
  wire [137:69]w_la_out_swbd_1_M01_SC_PAYLD;
  wire [0:0]w_la_out_swbd_1_M01_SC_RECV;
  wire [1:1]w_la_out_swbd_1_M01_SC_REQ;
  wire [1:1]w_la_out_swbd_1_M01_SC_SEND;
  wire [2:2]w_la_out_swbd_1_M02_SC_INFO;
  wire [206:138]w_la_out_swbd_1_M02_SC_PAYLD;
  wire [0:0]w_la_out_swbd_1_M02_SC_RECV;
  wire [2:2]w_la_out_swbd_1_M02_SC_REQ;
  wire [2:2]w_la_out_swbd_1_M02_SC_SEND;
  wire [3:3]w_la_out_swbd_1_M03_SC_INFO;
  wire [275:207]w_la_out_swbd_1_M03_SC_PAYLD;
  wire [0:0]w_la_out_swbd_1_M03_SC_RECV;
  wire [3:3]w_la_out_swbd_1_M03_SC_REQ;
  wire [3:3]w_la_out_swbd_1_M03_SC_SEND;
  wire [4:4]w_la_out_swbd_1_M04_SC_INFO;
  wire [344:276]w_la_out_swbd_1_M04_SC_PAYLD;
  wire [0:0]w_la_out_swbd_1_M04_SC_RECV;
  wire [4:4]w_la_out_swbd_1_M04_SC_REQ;
  wire [4:4]w_la_out_swbd_1_M04_SC_SEND;
  wire [5:5]w_la_out_swbd_1_M05_SC_INFO;
  wire [413:345]w_la_out_swbd_1_M05_SC_PAYLD;
  wire [0:0]w_la_out_swbd_1_M05_SC_RECV;
  wire [5:5]w_la_out_swbd_1_M05_SC_REQ;
  wire [5:5]w_la_out_swbd_1_M05_SC_SEND;
  wire [6:6]w_la_out_swbd_1_M06_SC_INFO;
  wire [482:414]w_la_out_swbd_1_M06_SC_PAYLD;
  wire [0:0]w_la_out_swbd_1_M06_SC_RECV;
  wire [6:6]w_la_out_swbd_1_M06_SC_REQ;
  wire [6:6]w_la_out_swbd_1_M06_SC_SEND;

  assign M00_SC_AR_info[0] = ar_la_out_swbd_1_M00_SC_INFO;
  assign M00_SC_AR_payld[181:0] = ar_la_out_swbd_1_M00_SC_PAYLD;
  assign M00_SC_AR_req[0] = ar_la_out_swbd_1_M00_SC_REQ;
  assign M00_SC_AR_send[0] = ar_la_out_swbd_1_M00_SC_SEND;
  assign M00_SC_AW_info[0] = aw_la_out_swbd_1_M00_SC_INFO;
  assign M00_SC_AW_payld[181:0] = aw_la_out_swbd_1_M00_SC_PAYLD;
  assign M00_SC_AW_req[0] = aw_la_out_swbd_1_M00_SC_REQ;
  assign M00_SC_AW_send[0] = aw_la_out_swbd_1_M00_SC_SEND;
  assign M00_SC_B_info[6:0] = b_la_out_swbd_1_M00_SC_INFO;
  assign M00_SC_B_payld[8:0] = b_la_out_swbd_1_M00_SC_PAYLD;
  assign M00_SC_B_req[6:0] = b_la_out_swbd_1_M00_SC_REQ;
  assign M00_SC_B_send[6:0] = b_la_out_swbd_1_M00_SC_SEND;
  assign M00_SC_R_info[6:0] = r_la_out_swbd_1_M00_SC_INFO;
  assign M00_SC_R_payld[54:0] = r_la_out_swbd_1_M00_SC_PAYLD;
  assign M00_SC_R_req[6:0] = r_la_out_swbd_1_M00_SC_REQ;
  assign M00_SC_R_send[6:0] = r_la_out_swbd_1_M00_SC_SEND;
  assign M00_SC_W_info[0] = w_la_out_swbd_1_M00_SC_INFO;
  assign M00_SC_W_payld[68:0] = w_la_out_swbd_1_M00_SC_PAYLD;
  assign M00_SC_W_req[0] = w_la_out_swbd_1_M00_SC_REQ;
  assign M00_SC_W_send[0] = w_la_out_swbd_1_M00_SC_SEND;
  assign M01_SC_AR_info[0] = ar_la_out_swbd_1_M01_SC_INFO;
  assign M01_SC_AR_payld[181:0] = ar_la_out_swbd_1_M01_SC_PAYLD;
  assign M01_SC_AR_req[0] = ar_la_out_swbd_1_M01_SC_REQ;
  assign M01_SC_AR_send[0] = ar_la_out_swbd_1_M01_SC_SEND;
  assign M01_SC_AW_info[0] = aw_la_out_swbd_1_M01_SC_INFO;
  assign M01_SC_AW_payld[181:0] = aw_la_out_swbd_1_M01_SC_PAYLD;
  assign M01_SC_AW_req[0] = aw_la_out_swbd_1_M01_SC_REQ;
  assign M01_SC_AW_send[0] = aw_la_out_swbd_1_M01_SC_SEND;
  assign M01_SC_W_info[0] = w_la_out_swbd_1_M01_SC_INFO;
  assign M01_SC_W_payld[68:0] = w_la_out_swbd_1_M01_SC_PAYLD;
  assign M01_SC_W_req[0] = w_la_out_swbd_1_M01_SC_REQ;
  assign M01_SC_W_send[0] = w_la_out_swbd_1_M01_SC_SEND;
  assign M02_SC_AR_info[0] = ar_la_out_swbd_1_M02_SC_INFO;
  assign M02_SC_AR_payld[181:0] = ar_la_out_swbd_1_M02_SC_PAYLD;
  assign M02_SC_AR_req[0] = ar_la_out_swbd_1_M02_SC_REQ;
  assign M02_SC_AR_send[0] = ar_la_out_swbd_1_M02_SC_SEND;
  assign M02_SC_AW_info[0] = aw_la_out_swbd_1_M02_SC_INFO;
  assign M02_SC_AW_payld[181:0] = aw_la_out_swbd_1_M02_SC_PAYLD;
  assign M02_SC_AW_req[0] = aw_la_out_swbd_1_M02_SC_REQ;
  assign M02_SC_AW_send[0] = aw_la_out_swbd_1_M02_SC_SEND;
  assign M02_SC_W_info[0] = w_la_out_swbd_1_M02_SC_INFO;
  assign M02_SC_W_payld[68:0] = w_la_out_swbd_1_M02_SC_PAYLD;
  assign M02_SC_W_req[0] = w_la_out_swbd_1_M02_SC_REQ;
  assign M02_SC_W_send[0] = w_la_out_swbd_1_M02_SC_SEND;
  assign M03_SC_AR_info[0] = ar_la_out_swbd_1_M03_SC_INFO;
  assign M03_SC_AR_payld[181:0] = ar_la_out_swbd_1_M03_SC_PAYLD;
  assign M03_SC_AR_req[0] = ar_la_out_swbd_1_M03_SC_REQ;
  assign M03_SC_AR_send[0] = ar_la_out_swbd_1_M03_SC_SEND;
  assign M03_SC_AW_info[0] = aw_la_out_swbd_1_M03_SC_INFO;
  assign M03_SC_AW_payld[181:0] = aw_la_out_swbd_1_M03_SC_PAYLD;
  assign M03_SC_AW_req[0] = aw_la_out_swbd_1_M03_SC_REQ;
  assign M03_SC_AW_send[0] = aw_la_out_swbd_1_M03_SC_SEND;
  assign M03_SC_W_info[0] = w_la_out_swbd_1_M03_SC_INFO;
  assign M03_SC_W_payld[68:0] = w_la_out_swbd_1_M03_SC_PAYLD;
  assign M03_SC_W_req[0] = w_la_out_swbd_1_M03_SC_REQ;
  assign M03_SC_W_send[0] = w_la_out_swbd_1_M03_SC_SEND;
  assign M04_SC_AR_info[0] = ar_la_out_swbd_1_M04_SC_INFO;
  assign M04_SC_AR_payld[181:0] = ar_la_out_swbd_1_M04_SC_PAYLD;
  assign M04_SC_AR_req[0] = ar_la_out_swbd_1_M04_SC_REQ;
  assign M04_SC_AR_send[0] = ar_la_out_swbd_1_M04_SC_SEND;
  assign M04_SC_AW_info[0] = aw_la_out_swbd_1_M04_SC_INFO;
  assign M04_SC_AW_payld[181:0] = aw_la_out_swbd_1_M04_SC_PAYLD;
  assign M04_SC_AW_req[0] = aw_la_out_swbd_1_M04_SC_REQ;
  assign M04_SC_AW_send[0] = aw_la_out_swbd_1_M04_SC_SEND;
  assign M04_SC_W_info[0] = w_la_out_swbd_1_M04_SC_INFO;
  assign M04_SC_W_payld[68:0] = w_la_out_swbd_1_M04_SC_PAYLD;
  assign M04_SC_W_req[0] = w_la_out_swbd_1_M04_SC_REQ;
  assign M04_SC_W_send[0] = w_la_out_swbd_1_M04_SC_SEND;
  assign M05_SC_AR_info[0] = ar_la_out_swbd_1_M05_SC_INFO;
  assign M05_SC_AR_payld[181:0] = ar_la_out_swbd_1_M05_SC_PAYLD;
  assign M05_SC_AR_req[0] = ar_la_out_swbd_1_M05_SC_REQ;
  assign M05_SC_AR_send[0] = ar_la_out_swbd_1_M05_SC_SEND;
  assign M05_SC_AW_info[0] = aw_la_out_swbd_1_M05_SC_INFO;
  assign M05_SC_AW_payld[181:0] = aw_la_out_swbd_1_M05_SC_PAYLD;
  assign M05_SC_AW_req[0] = aw_la_out_swbd_1_M05_SC_REQ;
  assign M05_SC_AW_send[0] = aw_la_out_swbd_1_M05_SC_SEND;
  assign M05_SC_W_info[0] = w_la_out_swbd_1_M05_SC_INFO;
  assign M05_SC_W_payld[68:0] = w_la_out_swbd_1_M05_SC_PAYLD;
  assign M05_SC_W_req[0] = w_la_out_swbd_1_M05_SC_REQ;
  assign M05_SC_W_send[0] = w_la_out_swbd_1_M05_SC_SEND;
  assign M06_SC_AR_info[0] = ar_la_out_swbd_1_M06_SC_INFO;
  assign M06_SC_AR_payld[181:0] = ar_la_out_swbd_1_M06_SC_PAYLD;
  assign M06_SC_AR_req[0] = ar_la_out_swbd_1_M06_SC_REQ;
  assign M06_SC_AR_send[0] = ar_la_out_swbd_1_M06_SC_SEND;
  assign M06_SC_AW_info[0] = aw_la_out_swbd_1_M06_SC_INFO;
  assign M06_SC_AW_payld[181:0] = aw_la_out_swbd_1_M06_SC_PAYLD;
  assign M06_SC_AW_req[0] = aw_la_out_swbd_1_M06_SC_REQ;
  assign M06_SC_AW_send[0] = aw_la_out_swbd_1_M06_SC_SEND;
  assign M06_SC_W_info[0] = w_la_out_swbd_1_M06_SC_INFO;
  assign M06_SC_W_payld[68:0] = w_la_out_swbd_1_M06_SC_PAYLD;
  assign M06_SC_W_req[0] = w_la_out_swbd_1_M06_SC_REQ;
  assign M06_SC_W_send[0] = w_la_out_swbd_1_M06_SC_SEND;
  assign S00_SC_AR_1_INFO = S00_SC_AR_info[6:0];
  assign S00_SC_AR_1_PAYLD = S00_SC_AR_payld[181:0];
  assign S00_SC_AR_1_REQ = S00_SC_AR_req[6:0];
  assign S00_SC_AR_1_SEND = S00_SC_AR_send[6:0];
  assign S00_SC_AR_recv[6:0] = S00_SC_AR_1_RECV;
  assign S00_SC_AW_1_INFO = S00_SC_AW_info[6:0];
  assign S00_SC_AW_1_PAYLD = S00_SC_AW_payld[181:0];
  assign S00_SC_AW_1_REQ = S00_SC_AW_req[6:0];
  assign S00_SC_AW_1_SEND = S00_SC_AW_send[6:0];
  assign S00_SC_AW_recv[6:0] = S00_SC_AW_1_RECV;
  assign S00_SC_B_1_INFO = S00_SC_B_info[0];
  assign S00_SC_B_1_PAYLD = S00_SC_B_payld[8:0];
  assign S00_SC_B_1_REQ = S00_SC_B_req[0];
  assign S00_SC_B_1_SEND = S00_SC_B_send[0];
  assign S00_SC_B_recv[0] = S00_SC_B_1_RECV;
  assign S00_SC_R_1_INFO = S00_SC_R_info[0];
  assign S00_SC_R_1_PAYLD = S00_SC_R_payld[54:0];
  assign S00_SC_R_1_REQ = S00_SC_R_req[0];
  assign S00_SC_R_1_SEND = S00_SC_R_send[0];
  assign S00_SC_R_recv[0] = S00_SC_R_1_RECV;
  assign S00_SC_W_1_INFO = S00_SC_W_info[6:0];
  assign S00_SC_W_1_PAYLD = S00_SC_W_payld[68:0];
  assign S00_SC_W_1_REQ = S00_SC_W_req[6:0];
  assign S00_SC_W_1_SEND = S00_SC_W_send[6:0];
  assign S00_SC_W_recv[6:0] = S00_SC_W_1_RECV;
  assign S01_SC_B_1_INFO = S01_SC_B_info[0];
  assign S01_SC_B_1_PAYLD = S01_SC_B_payld[8:0];
  assign S01_SC_B_1_REQ = S01_SC_B_req[0];
  assign S01_SC_B_1_SEND = S01_SC_B_send[0];
  assign S01_SC_B_recv[0] = S01_SC_B_1_RECV;
  assign S01_SC_R_1_INFO = S01_SC_R_info[0];
  assign S01_SC_R_1_PAYLD = S01_SC_R_payld[54:0];
  assign S01_SC_R_1_REQ = S01_SC_R_req[0];
  assign S01_SC_R_1_SEND = S01_SC_R_send[0];
  assign S01_SC_R_recv[0] = S01_SC_R_1_RECV;
  assign S02_SC_B_1_INFO = S02_SC_B_info[0];
  assign S02_SC_B_1_PAYLD = S02_SC_B_payld[8:0];
  assign S02_SC_B_1_REQ = S02_SC_B_req[0];
  assign S02_SC_B_1_SEND = S02_SC_B_send[0];
  assign S02_SC_B_recv[0] = S02_SC_B_1_RECV;
  assign S02_SC_R_1_INFO = S02_SC_R_info[0];
  assign S02_SC_R_1_PAYLD = S02_SC_R_payld[54:0];
  assign S02_SC_R_1_REQ = S02_SC_R_req[0];
  assign S02_SC_R_1_SEND = S02_SC_R_send[0];
  assign S02_SC_R_recv[0] = S02_SC_R_1_RECV;
  assign S03_SC_B_1_INFO = S03_SC_B_info[0];
  assign S03_SC_B_1_PAYLD = S03_SC_B_payld[8:0];
  assign S03_SC_B_1_REQ = S03_SC_B_req[0];
  assign S03_SC_B_1_SEND = S03_SC_B_send[0];
  assign S03_SC_B_recv[0] = S03_SC_B_1_RECV;
  assign S03_SC_R_1_INFO = S03_SC_R_info[0];
  assign S03_SC_R_1_PAYLD = S03_SC_R_payld[54:0];
  assign S03_SC_R_1_REQ = S03_SC_R_req[0];
  assign S03_SC_R_1_SEND = S03_SC_R_send[0];
  assign S03_SC_R_recv[0] = S03_SC_R_1_RECV;
  assign S04_SC_B_1_INFO = S04_SC_B_info[0];
  assign S04_SC_B_1_PAYLD = S04_SC_B_payld[8:0];
  assign S04_SC_B_1_REQ = S04_SC_B_req[0];
  assign S04_SC_B_1_SEND = S04_SC_B_send[0];
  assign S04_SC_B_recv[0] = S04_SC_B_1_RECV;
  assign S04_SC_R_1_INFO = S04_SC_R_info[0];
  assign S04_SC_R_1_PAYLD = S04_SC_R_payld[54:0];
  assign S04_SC_R_1_REQ = S04_SC_R_req[0];
  assign S04_SC_R_1_SEND = S04_SC_R_send[0];
  assign S04_SC_R_recv[0] = S04_SC_R_1_RECV;
  assign S05_SC_B_1_INFO = S05_SC_B_info[0];
  assign S05_SC_B_1_PAYLD = S05_SC_B_payld[8:0];
  assign S05_SC_B_1_REQ = S05_SC_B_req[0];
  assign S05_SC_B_1_SEND = S05_SC_B_send[0];
  assign S05_SC_B_recv[0] = S05_SC_B_1_RECV;
  assign S05_SC_R_1_INFO = S05_SC_R_info[0];
  assign S05_SC_R_1_PAYLD = S05_SC_R_payld[54:0];
  assign S05_SC_R_1_REQ = S05_SC_R_req[0];
  assign S05_SC_R_1_SEND = S05_SC_R_send[0];
  assign S05_SC_R_recv[0] = S05_SC_R_1_RECV;
  assign S06_SC_B_1_INFO = S06_SC_B_info[0];
  assign S06_SC_B_1_PAYLD = S06_SC_B_payld[8:0];
  assign S06_SC_B_1_REQ = S06_SC_B_req[0];
  assign S06_SC_B_1_SEND = S06_SC_B_send[0];
  assign S06_SC_B_recv[0] = S06_SC_B_1_RECV;
  assign S06_SC_R_1_INFO = S06_SC_R_info[0];
  assign S06_SC_R_1_PAYLD = S06_SC_R_payld[54:0];
  assign S06_SC_R_1_REQ = S06_SC_R_req[0];
  assign S06_SC_R_1_SEND = S06_SC_R_send[0];
  assign S06_SC_R_recv[0] = S06_SC_R_1_RECV;
  assign aclk_1 = aclk;
  assign ar_la_out_swbd_1_M00_SC_RECV = M00_SC_AR_recv[0];
  assign ar_la_out_swbd_1_M01_SC_RECV = M01_SC_AR_recv[0];
  assign ar_la_out_swbd_1_M02_SC_RECV = M02_SC_AR_recv[0];
  assign ar_la_out_swbd_1_M03_SC_RECV = M03_SC_AR_recv[0];
  assign ar_la_out_swbd_1_M04_SC_RECV = M04_SC_AR_recv[0];
  assign ar_la_out_swbd_1_M05_SC_RECV = M05_SC_AR_recv[0];
  assign ar_la_out_swbd_1_M06_SC_RECV = M06_SC_AR_recv[0];
  assign aw_la_out_swbd_1_M00_SC_RECV = M00_SC_AW_recv[0];
  assign aw_la_out_swbd_1_M01_SC_RECV = M01_SC_AW_recv[0];
  assign aw_la_out_swbd_1_M02_SC_RECV = M02_SC_AW_recv[0];
  assign aw_la_out_swbd_1_M03_SC_RECV = M03_SC_AW_recv[0];
  assign aw_la_out_swbd_1_M04_SC_RECV = M04_SC_AW_recv[0];
  assign aw_la_out_swbd_1_M05_SC_RECV = M05_SC_AW_recv[0];
  assign aw_la_out_swbd_1_M06_SC_RECV = M06_SC_AW_recv[0];
  assign b_la_out_swbd_1_M00_SC_RECV = M00_SC_B_recv[6:0];
  assign r_la_out_swbd_1_M00_SC_RECV = M00_SC_R_recv[6:0];
  assign w_la_out_swbd_1_M00_SC_RECV = M00_SC_W_recv[0];
  assign w_la_out_swbd_1_M01_SC_RECV = M01_SC_W_recv[0];
  assign w_la_out_swbd_1_M02_SC_RECV = M02_SC_W_recv[0];
  assign w_la_out_swbd_1_M03_SC_RECV = M03_SC_W_recv[0];
  assign w_la_out_swbd_1_M04_SC_RECV = M04_SC_W_recv[0];
  assign w_la_out_swbd_1_M05_SC_RECV = M05_SC_W_recv[0];
  assign w_la_out_swbd_1_M06_SC_RECV = M06_SC_W_recv[0];
  bd_afc3_arinsw_2 ar_la_out_swbd_1
       (.aclk(aclk_1),
        .aclken(1'b1),
        .m_sc_info({ar_la_out_swbd_1_M06_SC_INFO,ar_la_out_swbd_1_M05_SC_INFO,ar_la_out_swbd_1_M04_SC_INFO,ar_la_out_swbd_1_M03_SC_INFO,ar_la_out_swbd_1_M02_SC_INFO,ar_la_out_swbd_1_M01_SC_INFO,ar_la_out_swbd_1_M00_SC_INFO}),
        .m_sc_payld({ar_la_out_swbd_1_M06_SC_PAYLD,ar_la_out_swbd_1_M05_SC_PAYLD,ar_la_out_swbd_1_M04_SC_PAYLD,ar_la_out_swbd_1_M03_SC_PAYLD,ar_la_out_swbd_1_M02_SC_PAYLD,ar_la_out_swbd_1_M01_SC_PAYLD,ar_la_out_swbd_1_M00_SC_PAYLD}),
        .m_sc_recv({ar_la_out_swbd_1_M06_SC_RECV,ar_la_out_swbd_1_M05_SC_RECV,ar_la_out_swbd_1_M04_SC_RECV,ar_la_out_swbd_1_M03_SC_RECV,ar_la_out_swbd_1_M02_SC_RECV,ar_la_out_swbd_1_M01_SC_RECV,ar_la_out_swbd_1_M00_SC_RECV}),
        .m_sc_req({ar_la_out_swbd_1_M06_SC_REQ,ar_la_out_swbd_1_M05_SC_REQ,ar_la_out_swbd_1_M04_SC_REQ,ar_la_out_swbd_1_M03_SC_REQ,ar_la_out_swbd_1_M02_SC_REQ,ar_la_out_swbd_1_M01_SC_REQ,ar_la_out_swbd_1_M00_SC_REQ}),
        .m_sc_send({ar_la_out_swbd_1_M06_SC_SEND,ar_la_out_swbd_1_M05_SC_SEND,ar_la_out_swbd_1_M04_SC_SEND,ar_la_out_swbd_1_M03_SC_SEND,ar_la_out_swbd_1_M02_SC_SEND,ar_la_out_swbd_1_M01_SC_SEND,ar_la_out_swbd_1_M00_SC_SEND}),
        .s_sc_info(S00_SC_AR_1_INFO),
        .s_sc_payld(S00_SC_AR_1_PAYLD),
        .s_sc_recv(S00_SC_AR_1_RECV),
        .s_sc_req(S00_SC_AR_1_REQ),
        .s_sc_send(S00_SC_AR_1_SEND));
  bd_afc3_awinsw_2 aw_la_out_swbd_1
       (.aclk(aclk_1),
        .aclken(1'b1),
        .m_sc_info({aw_la_out_swbd_1_M06_SC_INFO,aw_la_out_swbd_1_M05_SC_INFO,aw_la_out_swbd_1_M04_SC_INFO,aw_la_out_swbd_1_M03_SC_INFO,aw_la_out_swbd_1_M02_SC_INFO,aw_la_out_swbd_1_M01_SC_INFO,aw_la_out_swbd_1_M00_SC_INFO}),
        .m_sc_payld({aw_la_out_swbd_1_M06_SC_PAYLD,aw_la_out_swbd_1_M05_SC_PAYLD,aw_la_out_swbd_1_M04_SC_PAYLD,aw_la_out_swbd_1_M03_SC_PAYLD,aw_la_out_swbd_1_M02_SC_PAYLD,aw_la_out_swbd_1_M01_SC_PAYLD,aw_la_out_swbd_1_M00_SC_PAYLD}),
        .m_sc_recv({aw_la_out_swbd_1_M06_SC_RECV,aw_la_out_swbd_1_M05_SC_RECV,aw_la_out_swbd_1_M04_SC_RECV,aw_la_out_swbd_1_M03_SC_RECV,aw_la_out_swbd_1_M02_SC_RECV,aw_la_out_swbd_1_M01_SC_RECV,aw_la_out_swbd_1_M00_SC_RECV}),
        .m_sc_req({aw_la_out_swbd_1_M06_SC_REQ,aw_la_out_swbd_1_M05_SC_REQ,aw_la_out_swbd_1_M04_SC_REQ,aw_la_out_swbd_1_M03_SC_REQ,aw_la_out_swbd_1_M02_SC_REQ,aw_la_out_swbd_1_M01_SC_REQ,aw_la_out_swbd_1_M00_SC_REQ}),
        .m_sc_send({aw_la_out_swbd_1_M06_SC_SEND,aw_la_out_swbd_1_M05_SC_SEND,aw_la_out_swbd_1_M04_SC_SEND,aw_la_out_swbd_1_M03_SC_SEND,aw_la_out_swbd_1_M02_SC_SEND,aw_la_out_swbd_1_M01_SC_SEND,aw_la_out_swbd_1_M00_SC_SEND}),
        .s_sc_info(S00_SC_AW_1_INFO),
        .s_sc_payld(S00_SC_AW_1_PAYLD),
        .s_sc_recv(S00_SC_AW_1_RECV),
        .s_sc_req(S00_SC_AW_1_REQ),
        .s_sc_send(S00_SC_AW_1_SEND));
  bd_afc3_binsw_2 b_la_out_swbd_1
       (.aclk(aclk_1),
        .aclken(1'b1),
        .m_sc_info(b_la_out_swbd_1_M00_SC_INFO),
        .m_sc_payld(b_la_out_swbd_1_M00_SC_PAYLD),
        .m_sc_recv(b_la_out_swbd_1_M00_SC_RECV),
        .m_sc_req(b_la_out_swbd_1_M00_SC_REQ),
        .m_sc_send(b_la_out_swbd_1_M00_SC_SEND),
        .s_sc_info({S06_SC_B_1_INFO,S05_SC_B_1_INFO,S04_SC_B_1_INFO,S03_SC_B_1_INFO,S02_SC_B_1_INFO,S01_SC_B_1_INFO,S00_SC_B_1_INFO}),
        .s_sc_payld({S06_SC_B_1_PAYLD,S05_SC_B_1_PAYLD,S04_SC_B_1_PAYLD,S03_SC_B_1_PAYLD,S02_SC_B_1_PAYLD,S01_SC_B_1_PAYLD,S00_SC_B_1_PAYLD}),
        .s_sc_recv({S06_SC_B_1_RECV,S05_SC_B_1_RECV,S04_SC_B_1_RECV,S03_SC_B_1_RECV,S02_SC_B_1_RECV,S01_SC_B_1_RECV,S00_SC_B_1_RECV}),
        .s_sc_req({S06_SC_B_1_REQ,S05_SC_B_1_REQ,S04_SC_B_1_REQ,S03_SC_B_1_REQ,S02_SC_B_1_REQ,S01_SC_B_1_REQ,S00_SC_B_1_REQ}),
        .s_sc_send({S06_SC_B_1_SEND,S05_SC_B_1_SEND,S04_SC_B_1_SEND,S03_SC_B_1_SEND,S02_SC_B_1_SEND,S01_SC_B_1_SEND,S00_SC_B_1_SEND}));
  bd_afc3_rinsw_2 r_la_out_swbd_1
       (.aclk(aclk_1),
        .aclken(1'b1),
        .m_sc_info(r_la_out_swbd_1_M00_SC_INFO),
        .m_sc_payld(r_la_out_swbd_1_M00_SC_PAYLD),
        .m_sc_recv(r_la_out_swbd_1_M00_SC_RECV),
        .m_sc_req(r_la_out_swbd_1_M00_SC_REQ),
        .m_sc_send(r_la_out_swbd_1_M00_SC_SEND),
        .s_sc_info({S06_SC_R_1_INFO,S05_SC_R_1_INFO,S04_SC_R_1_INFO,S03_SC_R_1_INFO,S02_SC_R_1_INFO,S01_SC_R_1_INFO,S00_SC_R_1_INFO}),
        .s_sc_payld({S06_SC_R_1_PAYLD,S05_SC_R_1_PAYLD,S04_SC_R_1_PAYLD,S03_SC_R_1_PAYLD,S02_SC_R_1_PAYLD,S01_SC_R_1_PAYLD,S00_SC_R_1_PAYLD}),
        .s_sc_recv({S06_SC_R_1_RECV,S05_SC_R_1_RECV,S04_SC_R_1_RECV,S03_SC_R_1_RECV,S02_SC_R_1_RECV,S01_SC_R_1_RECV,S00_SC_R_1_RECV}),
        .s_sc_req({S06_SC_R_1_REQ,S05_SC_R_1_REQ,S04_SC_R_1_REQ,S03_SC_R_1_REQ,S02_SC_R_1_REQ,S01_SC_R_1_REQ,S00_SC_R_1_REQ}),
        .s_sc_send({S06_SC_R_1_SEND,S05_SC_R_1_SEND,S04_SC_R_1_SEND,S03_SC_R_1_SEND,S02_SC_R_1_SEND,S01_SC_R_1_SEND,S00_SC_R_1_SEND}));
  bd_afc3_winsw_2 w_la_out_swbd_1
       (.aclk(aclk_1),
        .aclken(1'b1),
        .m_sc_info({w_la_out_swbd_1_M06_SC_INFO,w_la_out_swbd_1_M05_SC_INFO,w_la_out_swbd_1_M04_SC_INFO,w_la_out_swbd_1_M03_SC_INFO,w_la_out_swbd_1_M02_SC_INFO,w_la_out_swbd_1_M01_SC_INFO,w_la_out_swbd_1_M00_SC_INFO}),
        .m_sc_payld({w_la_out_swbd_1_M06_SC_PAYLD,w_la_out_swbd_1_M05_SC_PAYLD,w_la_out_swbd_1_M04_SC_PAYLD,w_la_out_swbd_1_M03_SC_PAYLD,w_la_out_swbd_1_M02_SC_PAYLD,w_la_out_swbd_1_M01_SC_PAYLD,w_la_out_swbd_1_M00_SC_PAYLD}),
        .m_sc_recv({w_la_out_swbd_1_M06_SC_RECV,w_la_out_swbd_1_M05_SC_RECV,w_la_out_swbd_1_M04_SC_RECV,w_la_out_swbd_1_M03_SC_RECV,w_la_out_swbd_1_M02_SC_RECV,w_la_out_swbd_1_M01_SC_RECV,w_la_out_swbd_1_M00_SC_RECV}),
        .m_sc_req({w_la_out_swbd_1_M06_SC_REQ,w_la_out_swbd_1_M05_SC_REQ,w_la_out_swbd_1_M04_SC_REQ,w_la_out_swbd_1_M03_SC_REQ,w_la_out_swbd_1_M02_SC_REQ,w_la_out_swbd_1_M01_SC_REQ,w_la_out_swbd_1_M00_SC_REQ}),
        .m_sc_send({w_la_out_swbd_1_M06_SC_SEND,w_la_out_swbd_1_M05_SC_SEND,w_la_out_swbd_1_M04_SC_SEND,w_la_out_swbd_1_M03_SC_SEND,w_la_out_swbd_1_M02_SC_SEND,w_la_out_swbd_1_M01_SC_SEND,w_la_out_swbd_1_M00_SC_SEND}),
        .s_sc_info(S00_SC_W_1_INFO),
        .s_sc_payld(S00_SC_W_1_PAYLD),
        .s_sc_recv(S00_SC_W_1_RECV),
        .s_sc_req(S00_SC_W_1_REQ),
        .s_sc_send(S00_SC_W_1_SEND));
endmodule

module out_swbd_2_imp_EAOHFT
   (M00_SC_AR_info,
    M00_SC_AR_payld,
    M00_SC_AR_recv,
    M00_SC_AR_req,
    M00_SC_AR_send,
    M00_SC_AW_info,
    M00_SC_AW_payld,
    M00_SC_AW_recv,
    M00_SC_AW_req,
    M00_SC_AW_send,
    M00_SC_B_info,
    M00_SC_B_payld,
    M00_SC_B_recv,
    M00_SC_B_req,
    M00_SC_B_send,
    M00_SC_R_info,
    M00_SC_R_payld,
    M00_SC_R_recv,
    M00_SC_R_req,
    M00_SC_R_send,
    M00_SC_W_info,
    M00_SC_W_payld,
    M00_SC_W_recv,
    M00_SC_W_req,
    M00_SC_W_send,
    M01_SC_AR_info,
    M01_SC_AR_payld,
    M01_SC_AR_recv,
    M01_SC_AR_req,
    M01_SC_AR_send,
    M01_SC_AW_info,
    M01_SC_AW_payld,
    M01_SC_AW_recv,
    M01_SC_AW_req,
    M01_SC_AW_send,
    M01_SC_W_info,
    M01_SC_W_payld,
    M01_SC_W_recv,
    M01_SC_W_req,
    M01_SC_W_send,
    M02_SC_AR_info,
    M02_SC_AR_payld,
    M02_SC_AR_recv,
    M02_SC_AR_req,
    M02_SC_AR_send,
    M02_SC_AW_info,
    M02_SC_AW_payld,
    M02_SC_AW_recv,
    M02_SC_AW_req,
    M02_SC_AW_send,
    M02_SC_W_info,
    M02_SC_W_payld,
    M02_SC_W_recv,
    M02_SC_W_req,
    M02_SC_W_send,
    M03_SC_AR_info,
    M03_SC_AR_payld,
    M03_SC_AR_recv,
    M03_SC_AR_req,
    M03_SC_AR_send,
    M03_SC_AW_info,
    M03_SC_AW_payld,
    M03_SC_AW_recv,
    M03_SC_AW_req,
    M03_SC_AW_send,
    M03_SC_W_info,
    M03_SC_W_payld,
    M03_SC_W_recv,
    M03_SC_W_req,
    M03_SC_W_send,
    M04_SC_AR_info,
    M04_SC_AR_payld,
    M04_SC_AR_recv,
    M04_SC_AR_req,
    M04_SC_AR_send,
    M04_SC_AW_info,
    M04_SC_AW_payld,
    M04_SC_AW_recv,
    M04_SC_AW_req,
    M04_SC_AW_send,
    M04_SC_W_info,
    M04_SC_W_payld,
    M04_SC_W_recv,
    M04_SC_W_req,
    M04_SC_W_send,
    M05_SC_AR_info,
    M05_SC_AR_payld,
    M05_SC_AR_recv,
    M05_SC_AR_req,
    M05_SC_AR_send,
    M05_SC_AW_info,
    M05_SC_AW_payld,
    M05_SC_AW_recv,
    M05_SC_AW_req,
    M05_SC_AW_send,
    M05_SC_W_info,
    M05_SC_W_payld,
    M05_SC_W_recv,
    M05_SC_W_req,
    M05_SC_W_send,
    M06_SC_AR_info,
    M06_SC_AR_payld,
    M06_SC_AR_recv,
    M06_SC_AR_req,
    M06_SC_AR_send,
    M06_SC_AW_info,
    M06_SC_AW_payld,
    M06_SC_AW_recv,
    M06_SC_AW_req,
    M06_SC_AW_send,
    M06_SC_W_info,
    M06_SC_W_payld,
    M06_SC_W_recv,
    M06_SC_W_req,
    M06_SC_W_send,
    S00_SC_AR_info,
    S00_SC_AR_payld,
    S00_SC_AR_recv,
    S00_SC_AR_req,
    S00_SC_AR_send,
    S00_SC_AW_info,
    S00_SC_AW_payld,
    S00_SC_AW_recv,
    S00_SC_AW_req,
    S00_SC_AW_send,
    S00_SC_B_info,
    S00_SC_B_payld,
    S00_SC_B_recv,
    S00_SC_B_req,
    S00_SC_B_send,
    S00_SC_R_info,
    S00_SC_R_payld,
    S00_SC_R_recv,
    S00_SC_R_req,
    S00_SC_R_send,
    S00_SC_W_info,
    S00_SC_W_payld,
    S00_SC_W_recv,
    S00_SC_W_req,
    S00_SC_W_send,
    S01_SC_B_info,
    S01_SC_B_payld,
    S01_SC_B_recv,
    S01_SC_B_req,
    S01_SC_B_send,
    S01_SC_R_info,
    S01_SC_R_payld,
    S01_SC_R_recv,
    S01_SC_R_req,
    S01_SC_R_send,
    S02_SC_B_info,
    S02_SC_B_payld,
    S02_SC_B_recv,
    S02_SC_B_req,
    S02_SC_B_send,
    S02_SC_R_info,
    S02_SC_R_payld,
    S02_SC_R_recv,
    S02_SC_R_req,
    S02_SC_R_send,
    S03_SC_B_info,
    S03_SC_B_payld,
    S03_SC_B_recv,
    S03_SC_B_req,
    S03_SC_B_send,
    S03_SC_R_info,
    S03_SC_R_payld,
    S03_SC_R_recv,
    S03_SC_R_req,
    S03_SC_R_send,
    S04_SC_B_info,
    S04_SC_B_payld,
    S04_SC_B_recv,
    S04_SC_B_req,
    S04_SC_B_send,
    S04_SC_R_info,
    S04_SC_R_payld,
    S04_SC_R_recv,
    S04_SC_R_req,
    S04_SC_R_send,
    S05_SC_B_info,
    S05_SC_B_payld,
    S05_SC_B_recv,
    S05_SC_B_req,
    S05_SC_B_send,
    S05_SC_R_info,
    S05_SC_R_payld,
    S05_SC_R_recv,
    S05_SC_R_req,
    S05_SC_R_send,
    S06_SC_B_info,
    S06_SC_B_payld,
    S06_SC_B_recv,
    S06_SC_B_req,
    S06_SC_B_send,
    S06_SC_R_info,
    S06_SC_R_payld,
    S06_SC_R_recv,
    S06_SC_R_req,
    S06_SC_R_send,
    aclk);
  output [0:0]M00_SC_AR_info;
  output [181:0]M00_SC_AR_payld;
  input [0:0]M00_SC_AR_recv;
  output [0:0]M00_SC_AR_req;
  output [0:0]M00_SC_AR_send;
  output [0:0]M00_SC_AW_info;
  output [181:0]M00_SC_AW_payld;
  input [0:0]M00_SC_AW_recv;
  output [0:0]M00_SC_AW_req;
  output [0:0]M00_SC_AW_send;
  output [6:0]M00_SC_B_info;
  output [8:0]M00_SC_B_payld;
  input [6:0]M00_SC_B_recv;
  output [6:0]M00_SC_B_req;
  output [6:0]M00_SC_B_send;
  output [6:0]M00_SC_R_info;
  output [54:0]M00_SC_R_payld;
  input [6:0]M00_SC_R_recv;
  output [6:0]M00_SC_R_req;
  output [6:0]M00_SC_R_send;
  output [0:0]M00_SC_W_info;
  output [68:0]M00_SC_W_payld;
  input [0:0]M00_SC_W_recv;
  output [0:0]M00_SC_W_req;
  output [0:0]M00_SC_W_send;
  output [0:0]M01_SC_AR_info;
  output [181:0]M01_SC_AR_payld;
  input [0:0]M01_SC_AR_recv;
  output [0:0]M01_SC_AR_req;
  output [0:0]M01_SC_AR_send;
  output [0:0]M01_SC_AW_info;
  output [181:0]M01_SC_AW_payld;
  input [0:0]M01_SC_AW_recv;
  output [0:0]M01_SC_AW_req;
  output [0:0]M01_SC_AW_send;
  output [0:0]M01_SC_W_info;
  output [68:0]M01_SC_W_payld;
  input [0:0]M01_SC_W_recv;
  output [0:0]M01_SC_W_req;
  output [0:0]M01_SC_W_send;
  output [0:0]M02_SC_AR_info;
  output [181:0]M02_SC_AR_payld;
  input [0:0]M02_SC_AR_recv;
  output [0:0]M02_SC_AR_req;
  output [0:0]M02_SC_AR_send;
  output [0:0]M02_SC_AW_info;
  output [181:0]M02_SC_AW_payld;
  input [0:0]M02_SC_AW_recv;
  output [0:0]M02_SC_AW_req;
  output [0:0]M02_SC_AW_send;
  output [0:0]M02_SC_W_info;
  output [68:0]M02_SC_W_payld;
  input [0:0]M02_SC_W_recv;
  output [0:0]M02_SC_W_req;
  output [0:0]M02_SC_W_send;
  output [0:0]M03_SC_AR_info;
  output [181:0]M03_SC_AR_payld;
  input [0:0]M03_SC_AR_recv;
  output [0:0]M03_SC_AR_req;
  output [0:0]M03_SC_AR_send;
  output [0:0]M03_SC_AW_info;
  output [181:0]M03_SC_AW_payld;
  input [0:0]M03_SC_AW_recv;
  output [0:0]M03_SC_AW_req;
  output [0:0]M03_SC_AW_send;
  output [0:0]M03_SC_W_info;
  output [68:0]M03_SC_W_payld;
  input [0:0]M03_SC_W_recv;
  output [0:0]M03_SC_W_req;
  output [0:0]M03_SC_W_send;
  output [0:0]M04_SC_AR_info;
  output [181:0]M04_SC_AR_payld;
  input [0:0]M04_SC_AR_recv;
  output [0:0]M04_SC_AR_req;
  output [0:0]M04_SC_AR_send;
  output [0:0]M04_SC_AW_info;
  output [181:0]M04_SC_AW_payld;
  input [0:0]M04_SC_AW_recv;
  output [0:0]M04_SC_AW_req;
  output [0:0]M04_SC_AW_send;
  output [0:0]M04_SC_W_info;
  output [68:0]M04_SC_W_payld;
  input [0:0]M04_SC_W_recv;
  output [0:0]M04_SC_W_req;
  output [0:0]M04_SC_W_send;
  output [0:0]M05_SC_AR_info;
  output [181:0]M05_SC_AR_payld;
  input [0:0]M05_SC_AR_recv;
  output [0:0]M05_SC_AR_req;
  output [0:0]M05_SC_AR_send;
  output [0:0]M05_SC_AW_info;
  output [181:0]M05_SC_AW_payld;
  input [0:0]M05_SC_AW_recv;
  output [0:0]M05_SC_AW_req;
  output [0:0]M05_SC_AW_send;
  output [0:0]M05_SC_W_info;
  output [68:0]M05_SC_W_payld;
  input [0:0]M05_SC_W_recv;
  output [0:0]M05_SC_W_req;
  output [0:0]M05_SC_W_send;
  output [0:0]M06_SC_AR_info;
  output [181:0]M06_SC_AR_payld;
  input [0:0]M06_SC_AR_recv;
  output [0:0]M06_SC_AR_req;
  output [0:0]M06_SC_AR_send;
  output [0:0]M06_SC_AW_info;
  output [181:0]M06_SC_AW_payld;
  input [0:0]M06_SC_AW_recv;
  output [0:0]M06_SC_AW_req;
  output [0:0]M06_SC_AW_send;
  output [0:0]M06_SC_W_info;
  output [68:0]M06_SC_W_payld;
  input [0:0]M06_SC_W_recv;
  output [0:0]M06_SC_W_req;
  output [0:0]M06_SC_W_send;
  input [6:0]S00_SC_AR_info;
  input [181:0]S00_SC_AR_payld;
  output [6:0]S00_SC_AR_recv;
  input [6:0]S00_SC_AR_req;
  input [6:0]S00_SC_AR_send;
  input [6:0]S00_SC_AW_info;
  input [181:0]S00_SC_AW_payld;
  output [6:0]S00_SC_AW_recv;
  input [6:0]S00_SC_AW_req;
  input [6:0]S00_SC_AW_send;
  input [0:0]S00_SC_B_info;
  input [8:0]S00_SC_B_payld;
  output [0:0]S00_SC_B_recv;
  input [0:0]S00_SC_B_req;
  input [0:0]S00_SC_B_send;
  input [0:0]S00_SC_R_info;
  input [54:0]S00_SC_R_payld;
  output [0:0]S00_SC_R_recv;
  input [0:0]S00_SC_R_req;
  input [0:0]S00_SC_R_send;
  input [6:0]S00_SC_W_info;
  input [68:0]S00_SC_W_payld;
  output [6:0]S00_SC_W_recv;
  input [6:0]S00_SC_W_req;
  input [6:0]S00_SC_W_send;
  input [0:0]S01_SC_B_info;
  input [8:0]S01_SC_B_payld;
  output [0:0]S01_SC_B_recv;
  input [0:0]S01_SC_B_req;
  input [0:0]S01_SC_B_send;
  input [0:0]S01_SC_R_info;
  input [54:0]S01_SC_R_payld;
  output [0:0]S01_SC_R_recv;
  input [0:0]S01_SC_R_req;
  input [0:0]S01_SC_R_send;
  input [0:0]S02_SC_B_info;
  input [8:0]S02_SC_B_payld;
  output [0:0]S02_SC_B_recv;
  input [0:0]S02_SC_B_req;
  input [0:0]S02_SC_B_send;
  input [0:0]S02_SC_R_info;
  input [54:0]S02_SC_R_payld;
  output [0:0]S02_SC_R_recv;
  input [0:0]S02_SC_R_req;
  input [0:0]S02_SC_R_send;
  input [0:0]S03_SC_B_info;
  input [8:0]S03_SC_B_payld;
  output [0:0]S03_SC_B_recv;
  input [0:0]S03_SC_B_req;
  input [0:0]S03_SC_B_send;
  input [0:0]S03_SC_R_info;
  input [54:0]S03_SC_R_payld;
  output [0:0]S03_SC_R_recv;
  input [0:0]S03_SC_R_req;
  input [0:0]S03_SC_R_send;
  input [0:0]S04_SC_B_info;
  input [8:0]S04_SC_B_payld;
  output [0:0]S04_SC_B_recv;
  input [0:0]S04_SC_B_req;
  input [0:0]S04_SC_B_send;
  input [0:0]S04_SC_R_info;
  input [54:0]S04_SC_R_payld;
  output [0:0]S04_SC_R_recv;
  input [0:0]S04_SC_R_req;
  input [0:0]S04_SC_R_send;
  input [0:0]S05_SC_B_info;
  input [8:0]S05_SC_B_payld;
  output [0:0]S05_SC_B_recv;
  input [0:0]S05_SC_B_req;
  input [0:0]S05_SC_B_send;
  input [0:0]S05_SC_R_info;
  input [54:0]S05_SC_R_payld;
  output [0:0]S05_SC_R_recv;
  input [0:0]S05_SC_R_req;
  input [0:0]S05_SC_R_send;
  input [0:0]S06_SC_B_info;
  input [8:0]S06_SC_B_payld;
  output [0:0]S06_SC_B_recv;
  input [0:0]S06_SC_B_req;
  input [0:0]S06_SC_B_send;
  input [0:0]S06_SC_R_info;
  input [54:0]S06_SC_R_payld;
  output [0:0]S06_SC_R_recv;
  input [0:0]S06_SC_R_req;
  input [0:0]S06_SC_R_send;
  input aclk;

  wire [6:0]S00_SC_AR_1_INFO;
  wire [181:0]S00_SC_AR_1_PAYLD;
  wire [6:0]S00_SC_AR_1_RECV;
  wire [6:0]S00_SC_AR_1_REQ;
  wire [6:0]S00_SC_AR_1_SEND;
  wire [6:0]S00_SC_AW_1_INFO;
  wire [181:0]S00_SC_AW_1_PAYLD;
  wire [6:0]S00_SC_AW_1_RECV;
  wire [6:0]S00_SC_AW_1_REQ;
  wire [6:0]S00_SC_AW_1_SEND;
  wire [0:0]S00_SC_B_1_INFO;
  wire [8:0]S00_SC_B_1_PAYLD;
  wire [0:0]S00_SC_B_1_RECV;
  wire [0:0]S00_SC_B_1_REQ;
  wire [0:0]S00_SC_B_1_SEND;
  wire [0:0]S00_SC_R_1_INFO;
  wire [54:0]S00_SC_R_1_PAYLD;
  wire [0:0]S00_SC_R_1_RECV;
  wire [0:0]S00_SC_R_1_REQ;
  wire [0:0]S00_SC_R_1_SEND;
  wire [6:0]S00_SC_W_1_INFO;
  wire [68:0]S00_SC_W_1_PAYLD;
  wire [6:0]S00_SC_W_1_RECV;
  wire [6:0]S00_SC_W_1_REQ;
  wire [6:0]S00_SC_W_1_SEND;
  wire [0:0]S01_SC_B_1_INFO;
  wire [8:0]S01_SC_B_1_PAYLD;
  wire [1:1]S01_SC_B_1_RECV;
  wire [0:0]S01_SC_B_1_REQ;
  wire [0:0]S01_SC_B_1_SEND;
  wire [0:0]S01_SC_R_1_INFO;
  wire [54:0]S01_SC_R_1_PAYLD;
  wire [1:1]S01_SC_R_1_RECV;
  wire [0:0]S01_SC_R_1_REQ;
  wire [0:0]S01_SC_R_1_SEND;
  wire [0:0]S02_SC_B_1_INFO;
  wire [8:0]S02_SC_B_1_PAYLD;
  wire [2:2]S02_SC_B_1_RECV;
  wire [0:0]S02_SC_B_1_REQ;
  wire [0:0]S02_SC_B_1_SEND;
  wire [0:0]S02_SC_R_1_INFO;
  wire [54:0]S02_SC_R_1_PAYLD;
  wire [2:2]S02_SC_R_1_RECV;
  wire [0:0]S02_SC_R_1_REQ;
  wire [0:0]S02_SC_R_1_SEND;
  wire [0:0]S03_SC_B_1_INFO;
  wire [8:0]S03_SC_B_1_PAYLD;
  wire [3:3]S03_SC_B_1_RECV;
  wire [0:0]S03_SC_B_1_REQ;
  wire [0:0]S03_SC_B_1_SEND;
  wire [0:0]S03_SC_R_1_INFO;
  wire [54:0]S03_SC_R_1_PAYLD;
  wire [3:3]S03_SC_R_1_RECV;
  wire [0:0]S03_SC_R_1_REQ;
  wire [0:0]S03_SC_R_1_SEND;
  wire [0:0]S04_SC_B_1_INFO;
  wire [8:0]S04_SC_B_1_PAYLD;
  wire [4:4]S04_SC_B_1_RECV;
  wire [0:0]S04_SC_B_1_REQ;
  wire [0:0]S04_SC_B_1_SEND;
  wire [0:0]S04_SC_R_1_INFO;
  wire [54:0]S04_SC_R_1_PAYLD;
  wire [4:4]S04_SC_R_1_RECV;
  wire [0:0]S04_SC_R_1_REQ;
  wire [0:0]S04_SC_R_1_SEND;
  wire [0:0]S05_SC_B_1_INFO;
  wire [8:0]S05_SC_B_1_PAYLD;
  wire [5:5]S05_SC_B_1_RECV;
  wire [0:0]S05_SC_B_1_REQ;
  wire [0:0]S05_SC_B_1_SEND;
  wire [0:0]S05_SC_R_1_INFO;
  wire [54:0]S05_SC_R_1_PAYLD;
  wire [5:5]S05_SC_R_1_RECV;
  wire [0:0]S05_SC_R_1_REQ;
  wire [0:0]S05_SC_R_1_SEND;
  wire [0:0]S06_SC_B_1_INFO;
  wire [8:0]S06_SC_B_1_PAYLD;
  wire [6:6]S06_SC_B_1_RECV;
  wire [0:0]S06_SC_B_1_REQ;
  wire [0:0]S06_SC_B_1_SEND;
  wire [0:0]S06_SC_R_1_INFO;
  wire [54:0]S06_SC_R_1_PAYLD;
  wire [6:6]S06_SC_R_1_RECV;
  wire [0:0]S06_SC_R_1_REQ;
  wire [0:0]S06_SC_R_1_SEND;
  wire aclk_1;
  wire [0:0]ar_la_out_swbd_2_M00_SC_INFO;
  wire [181:0]ar_la_out_swbd_2_M00_SC_PAYLD;
  wire [0:0]ar_la_out_swbd_2_M00_SC_RECV;
  wire [0:0]ar_la_out_swbd_2_M00_SC_REQ;
  wire [0:0]ar_la_out_swbd_2_M00_SC_SEND;
  wire [1:1]ar_la_out_swbd_2_M01_SC_INFO;
  wire [363:182]ar_la_out_swbd_2_M01_SC_PAYLD;
  wire [0:0]ar_la_out_swbd_2_M01_SC_RECV;
  wire [1:1]ar_la_out_swbd_2_M01_SC_REQ;
  wire [1:1]ar_la_out_swbd_2_M01_SC_SEND;
  wire [2:2]ar_la_out_swbd_2_M02_SC_INFO;
  wire [545:364]ar_la_out_swbd_2_M02_SC_PAYLD;
  wire [0:0]ar_la_out_swbd_2_M02_SC_RECV;
  wire [2:2]ar_la_out_swbd_2_M02_SC_REQ;
  wire [2:2]ar_la_out_swbd_2_M02_SC_SEND;
  wire [3:3]ar_la_out_swbd_2_M03_SC_INFO;
  wire [727:546]ar_la_out_swbd_2_M03_SC_PAYLD;
  wire [0:0]ar_la_out_swbd_2_M03_SC_RECV;
  wire [3:3]ar_la_out_swbd_2_M03_SC_REQ;
  wire [3:3]ar_la_out_swbd_2_M03_SC_SEND;
  wire [4:4]ar_la_out_swbd_2_M04_SC_INFO;
  wire [909:728]ar_la_out_swbd_2_M04_SC_PAYLD;
  wire [0:0]ar_la_out_swbd_2_M04_SC_RECV;
  wire [4:4]ar_la_out_swbd_2_M04_SC_REQ;
  wire [4:4]ar_la_out_swbd_2_M04_SC_SEND;
  wire [5:5]ar_la_out_swbd_2_M05_SC_INFO;
  wire [1091:910]ar_la_out_swbd_2_M05_SC_PAYLD;
  wire [0:0]ar_la_out_swbd_2_M05_SC_RECV;
  wire [5:5]ar_la_out_swbd_2_M05_SC_REQ;
  wire [5:5]ar_la_out_swbd_2_M05_SC_SEND;
  wire [6:6]ar_la_out_swbd_2_M06_SC_INFO;
  wire [1273:1092]ar_la_out_swbd_2_M06_SC_PAYLD;
  wire [0:0]ar_la_out_swbd_2_M06_SC_RECV;
  wire [6:6]ar_la_out_swbd_2_M06_SC_REQ;
  wire [6:6]ar_la_out_swbd_2_M06_SC_SEND;
  wire [0:0]aw_la_out_swbd_2_M00_SC_INFO;
  wire [181:0]aw_la_out_swbd_2_M00_SC_PAYLD;
  wire [0:0]aw_la_out_swbd_2_M00_SC_RECV;
  wire [0:0]aw_la_out_swbd_2_M00_SC_REQ;
  wire [0:0]aw_la_out_swbd_2_M00_SC_SEND;
  wire [1:1]aw_la_out_swbd_2_M01_SC_INFO;
  wire [363:182]aw_la_out_swbd_2_M01_SC_PAYLD;
  wire [0:0]aw_la_out_swbd_2_M01_SC_RECV;
  wire [1:1]aw_la_out_swbd_2_M01_SC_REQ;
  wire [1:1]aw_la_out_swbd_2_M01_SC_SEND;
  wire [2:2]aw_la_out_swbd_2_M02_SC_INFO;
  wire [545:364]aw_la_out_swbd_2_M02_SC_PAYLD;
  wire [0:0]aw_la_out_swbd_2_M02_SC_RECV;
  wire [2:2]aw_la_out_swbd_2_M02_SC_REQ;
  wire [2:2]aw_la_out_swbd_2_M02_SC_SEND;
  wire [3:3]aw_la_out_swbd_2_M03_SC_INFO;
  wire [727:546]aw_la_out_swbd_2_M03_SC_PAYLD;
  wire [0:0]aw_la_out_swbd_2_M03_SC_RECV;
  wire [3:3]aw_la_out_swbd_2_M03_SC_REQ;
  wire [3:3]aw_la_out_swbd_2_M03_SC_SEND;
  wire [4:4]aw_la_out_swbd_2_M04_SC_INFO;
  wire [909:728]aw_la_out_swbd_2_M04_SC_PAYLD;
  wire [0:0]aw_la_out_swbd_2_M04_SC_RECV;
  wire [4:4]aw_la_out_swbd_2_M04_SC_REQ;
  wire [4:4]aw_la_out_swbd_2_M04_SC_SEND;
  wire [5:5]aw_la_out_swbd_2_M05_SC_INFO;
  wire [1091:910]aw_la_out_swbd_2_M05_SC_PAYLD;
  wire [0:0]aw_la_out_swbd_2_M05_SC_RECV;
  wire [5:5]aw_la_out_swbd_2_M05_SC_REQ;
  wire [5:5]aw_la_out_swbd_2_M05_SC_SEND;
  wire [6:6]aw_la_out_swbd_2_M06_SC_INFO;
  wire [1273:1092]aw_la_out_swbd_2_M06_SC_PAYLD;
  wire [0:0]aw_la_out_swbd_2_M06_SC_RECV;
  wire [6:6]aw_la_out_swbd_2_M06_SC_REQ;
  wire [6:6]aw_la_out_swbd_2_M06_SC_SEND;
  wire [6:0]b_la_out_swbd_2_M00_SC_INFO;
  wire [8:0]b_la_out_swbd_2_M00_SC_PAYLD;
  wire [6:0]b_la_out_swbd_2_M00_SC_RECV;
  wire [6:0]b_la_out_swbd_2_M00_SC_REQ;
  wire [6:0]b_la_out_swbd_2_M00_SC_SEND;
  wire [6:0]r_la_out_swbd_2_M00_SC_INFO;
  wire [54:0]r_la_out_swbd_2_M00_SC_PAYLD;
  wire [6:0]r_la_out_swbd_2_M00_SC_RECV;
  wire [6:0]r_la_out_swbd_2_M00_SC_REQ;
  wire [6:0]r_la_out_swbd_2_M00_SC_SEND;
  wire [0:0]w_la_out_swbd_2_M00_SC_INFO;
  wire [68:0]w_la_out_swbd_2_M00_SC_PAYLD;
  wire [0:0]w_la_out_swbd_2_M00_SC_RECV;
  wire [0:0]w_la_out_swbd_2_M00_SC_REQ;
  wire [0:0]w_la_out_swbd_2_M00_SC_SEND;
  wire [1:1]w_la_out_swbd_2_M01_SC_INFO;
  wire [137:69]w_la_out_swbd_2_M01_SC_PAYLD;
  wire [0:0]w_la_out_swbd_2_M01_SC_RECV;
  wire [1:1]w_la_out_swbd_2_M01_SC_REQ;
  wire [1:1]w_la_out_swbd_2_M01_SC_SEND;
  wire [2:2]w_la_out_swbd_2_M02_SC_INFO;
  wire [206:138]w_la_out_swbd_2_M02_SC_PAYLD;
  wire [0:0]w_la_out_swbd_2_M02_SC_RECV;
  wire [2:2]w_la_out_swbd_2_M02_SC_REQ;
  wire [2:2]w_la_out_swbd_2_M02_SC_SEND;
  wire [3:3]w_la_out_swbd_2_M03_SC_INFO;
  wire [275:207]w_la_out_swbd_2_M03_SC_PAYLD;
  wire [0:0]w_la_out_swbd_2_M03_SC_RECV;
  wire [3:3]w_la_out_swbd_2_M03_SC_REQ;
  wire [3:3]w_la_out_swbd_2_M03_SC_SEND;
  wire [4:4]w_la_out_swbd_2_M04_SC_INFO;
  wire [344:276]w_la_out_swbd_2_M04_SC_PAYLD;
  wire [0:0]w_la_out_swbd_2_M04_SC_RECV;
  wire [4:4]w_la_out_swbd_2_M04_SC_REQ;
  wire [4:4]w_la_out_swbd_2_M04_SC_SEND;
  wire [5:5]w_la_out_swbd_2_M05_SC_INFO;
  wire [413:345]w_la_out_swbd_2_M05_SC_PAYLD;
  wire [0:0]w_la_out_swbd_2_M05_SC_RECV;
  wire [5:5]w_la_out_swbd_2_M05_SC_REQ;
  wire [5:5]w_la_out_swbd_2_M05_SC_SEND;
  wire [6:6]w_la_out_swbd_2_M06_SC_INFO;
  wire [482:414]w_la_out_swbd_2_M06_SC_PAYLD;
  wire [0:0]w_la_out_swbd_2_M06_SC_RECV;
  wire [6:6]w_la_out_swbd_2_M06_SC_REQ;
  wire [6:6]w_la_out_swbd_2_M06_SC_SEND;

  assign M00_SC_AR_info[0] = ar_la_out_swbd_2_M00_SC_INFO;
  assign M00_SC_AR_payld[181:0] = ar_la_out_swbd_2_M00_SC_PAYLD;
  assign M00_SC_AR_req[0] = ar_la_out_swbd_2_M00_SC_REQ;
  assign M00_SC_AR_send[0] = ar_la_out_swbd_2_M00_SC_SEND;
  assign M00_SC_AW_info[0] = aw_la_out_swbd_2_M00_SC_INFO;
  assign M00_SC_AW_payld[181:0] = aw_la_out_swbd_2_M00_SC_PAYLD;
  assign M00_SC_AW_req[0] = aw_la_out_swbd_2_M00_SC_REQ;
  assign M00_SC_AW_send[0] = aw_la_out_swbd_2_M00_SC_SEND;
  assign M00_SC_B_info[6:0] = b_la_out_swbd_2_M00_SC_INFO;
  assign M00_SC_B_payld[8:0] = b_la_out_swbd_2_M00_SC_PAYLD;
  assign M00_SC_B_req[6:0] = b_la_out_swbd_2_M00_SC_REQ;
  assign M00_SC_B_send[6:0] = b_la_out_swbd_2_M00_SC_SEND;
  assign M00_SC_R_info[6:0] = r_la_out_swbd_2_M00_SC_INFO;
  assign M00_SC_R_payld[54:0] = r_la_out_swbd_2_M00_SC_PAYLD;
  assign M00_SC_R_req[6:0] = r_la_out_swbd_2_M00_SC_REQ;
  assign M00_SC_R_send[6:0] = r_la_out_swbd_2_M00_SC_SEND;
  assign M00_SC_W_info[0] = w_la_out_swbd_2_M00_SC_INFO;
  assign M00_SC_W_payld[68:0] = w_la_out_swbd_2_M00_SC_PAYLD;
  assign M00_SC_W_req[0] = w_la_out_swbd_2_M00_SC_REQ;
  assign M00_SC_W_send[0] = w_la_out_swbd_2_M00_SC_SEND;
  assign M01_SC_AR_info[0] = ar_la_out_swbd_2_M01_SC_INFO;
  assign M01_SC_AR_payld[181:0] = ar_la_out_swbd_2_M01_SC_PAYLD;
  assign M01_SC_AR_req[0] = ar_la_out_swbd_2_M01_SC_REQ;
  assign M01_SC_AR_send[0] = ar_la_out_swbd_2_M01_SC_SEND;
  assign M01_SC_AW_info[0] = aw_la_out_swbd_2_M01_SC_INFO;
  assign M01_SC_AW_payld[181:0] = aw_la_out_swbd_2_M01_SC_PAYLD;
  assign M01_SC_AW_req[0] = aw_la_out_swbd_2_M01_SC_REQ;
  assign M01_SC_AW_send[0] = aw_la_out_swbd_2_M01_SC_SEND;
  assign M01_SC_W_info[0] = w_la_out_swbd_2_M01_SC_INFO;
  assign M01_SC_W_payld[68:0] = w_la_out_swbd_2_M01_SC_PAYLD;
  assign M01_SC_W_req[0] = w_la_out_swbd_2_M01_SC_REQ;
  assign M01_SC_W_send[0] = w_la_out_swbd_2_M01_SC_SEND;
  assign M02_SC_AR_info[0] = ar_la_out_swbd_2_M02_SC_INFO;
  assign M02_SC_AR_payld[181:0] = ar_la_out_swbd_2_M02_SC_PAYLD;
  assign M02_SC_AR_req[0] = ar_la_out_swbd_2_M02_SC_REQ;
  assign M02_SC_AR_send[0] = ar_la_out_swbd_2_M02_SC_SEND;
  assign M02_SC_AW_info[0] = aw_la_out_swbd_2_M02_SC_INFO;
  assign M02_SC_AW_payld[181:0] = aw_la_out_swbd_2_M02_SC_PAYLD;
  assign M02_SC_AW_req[0] = aw_la_out_swbd_2_M02_SC_REQ;
  assign M02_SC_AW_send[0] = aw_la_out_swbd_2_M02_SC_SEND;
  assign M02_SC_W_info[0] = w_la_out_swbd_2_M02_SC_INFO;
  assign M02_SC_W_payld[68:0] = w_la_out_swbd_2_M02_SC_PAYLD;
  assign M02_SC_W_req[0] = w_la_out_swbd_2_M02_SC_REQ;
  assign M02_SC_W_send[0] = w_la_out_swbd_2_M02_SC_SEND;
  assign M03_SC_AR_info[0] = ar_la_out_swbd_2_M03_SC_INFO;
  assign M03_SC_AR_payld[181:0] = ar_la_out_swbd_2_M03_SC_PAYLD;
  assign M03_SC_AR_req[0] = ar_la_out_swbd_2_M03_SC_REQ;
  assign M03_SC_AR_send[0] = ar_la_out_swbd_2_M03_SC_SEND;
  assign M03_SC_AW_info[0] = aw_la_out_swbd_2_M03_SC_INFO;
  assign M03_SC_AW_payld[181:0] = aw_la_out_swbd_2_M03_SC_PAYLD;
  assign M03_SC_AW_req[0] = aw_la_out_swbd_2_M03_SC_REQ;
  assign M03_SC_AW_send[0] = aw_la_out_swbd_2_M03_SC_SEND;
  assign M03_SC_W_info[0] = w_la_out_swbd_2_M03_SC_INFO;
  assign M03_SC_W_payld[68:0] = w_la_out_swbd_2_M03_SC_PAYLD;
  assign M03_SC_W_req[0] = w_la_out_swbd_2_M03_SC_REQ;
  assign M03_SC_W_send[0] = w_la_out_swbd_2_M03_SC_SEND;
  assign M04_SC_AR_info[0] = ar_la_out_swbd_2_M04_SC_INFO;
  assign M04_SC_AR_payld[181:0] = ar_la_out_swbd_2_M04_SC_PAYLD;
  assign M04_SC_AR_req[0] = ar_la_out_swbd_2_M04_SC_REQ;
  assign M04_SC_AR_send[0] = ar_la_out_swbd_2_M04_SC_SEND;
  assign M04_SC_AW_info[0] = aw_la_out_swbd_2_M04_SC_INFO;
  assign M04_SC_AW_payld[181:0] = aw_la_out_swbd_2_M04_SC_PAYLD;
  assign M04_SC_AW_req[0] = aw_la_out_swbd_2_M04_SC_REQ;
  assign M04_SC_AW_send[0] = aw_la_out_swbd_2_M04_SC_SEND;
  assign M04_SC_W_info[0] = w_la_out_swbd_2_M04_SC_INFO;
  assign M04_SC_W_payld[68:0] = w_la_out_swbd_2_M04_SC_PAYLD;
  assign M04_SC_W_req[0] = w_la_out_swbd_2_M04_SC_REQ;
  assign M04_SC_W_send[0] = w_la_out_swbd_2_M04_SC_SEND;
  assign M05_SC_AR_info[0] = ar_la_out_swbd_2_M05_SC_INFO;
  assign M05_SC_AR_payld[181:0] = ar_la_out_swbd_2_M05_SC_PAYLD;
  assign M05_SC_AR_req[0] = ar_la_out_swbd_2_M05_SC_REQ;
  assign M05_SC_AR_send[0] = ar_la_out_swbd_2_M05_SC_SEND;
  assign M05_SC_AW_info[0] = aw_la_out_swbd_2_M05_SC_INFO;
  assign M05_SC_AW_payld[181:0] = aw_la_out_swbd_2_M05_SC_PAYLD;
  assign M05_SC_AW_req[0] = aw_la_out_swbd_2_M05_SC_REQ;
  assign M05_SC_AW_send[0] = aw_la_out_swbd_2_M05_SC_SEND;
  assign M05_SC_W_info[0] = w_la_out_swbd_2_M05_SC_INFO;
  assign M05_SC_W_payld[68:0] = w_la_out_swbd_2_M05_SC_PAYLD;
  assign M05_SC_W_req[0] = w_la_out_swbd_2_M05_SC_REQ;
  assign M05_SC_W_send[0] = w_la_out_swbd_2_M05_SC_SEND;
  assign M06_SC_AR_info[0] = ar_la_out_swbd_2_M06_SC_INFO;
  assign M06_SC_AR_payld[181:0] = ar_la_out_swbd_2_M06_SC_PAYLD;
  assign M06_SC_AR_req[0] = ar_la_out_swbd_2_M06_SC_REQ;
  assign M06_SC_AR_send[0] = ar_la_out_swbd_2_M06_SC_SEND;
  assign M06_SC_AW_info[0] = aw_la_out_swbd_2_M06_SC_INFO;
  assign M06_SC_AW_payld[181:0] = aw_la_out_swbd_2_M06_SC_PAYLD;
  assign M06_SC_AW_req[0] = aw_la_out_swbd_2_M06_SC_REQ;
  assign M06_SC_AW_send[0] = aw_la_out_swbd_2_M06_SC_SEND;
  assign M06_SC_W_info[0] = w_la_out_swbd_2_M06_SC_INFO;
  assign M06_SC_W_payld[68:0] = w_la_out_swbd_2_M06_SC_PAYLD;
  assign M06_SC_W_req[0] = w_la_out_swbd_2_M06_SC_REQ;
  assign M06_SC_W_send[0] = w_la_out_swbd_2_M06_SC_SEND;
  assign S00_SC_AR_1_INFO = S00_SC_AR_info[6:0];
  assign S00_SC_AR_1_PAYLD = S00_SC_AR_payld[181:0];
  assign S00_SC_AR_1_REQ = S00_SC_AR_req[6:0];
  assign S00_SC_AR_1_SEND = S00_SC_AR_send[6:0];
  assign S00_SC_AR_recv[6:0] = S00_SC_AR_1_RECV;
  assign S00_SC_AW_1_INFO = S00_SC_AW_info[6:0];
  assign S00_SC_AW_1_PAYLD = S00_SC_AW_payld[181:0];
  assign S00_SC_AW_1_REQ = S00_SC_AW_req[6:0];
  assign S00_SC_AW_1_SEND = S00_SC_AW_send[6:0];
  assign S00_SC_AW_recv[6:0] = S00_SC_AW_1_RECV;
  assign S00_SC_B_1_INFO = S00_SC_B_info[0];
  assign S00_SC_B_1_PAYLD = S00_SC_B_payld[8:0];
  assign S00_SC_B_1_REQ = S00_SC_B_req[0];
  assign S00_SC_B_1_SEND = S00_SC_B_send[0];
  assign S00_SC_B_recv[0] = S00_SC_B_1_RECV;
  assign S00_SC_R_1_INFO = S00_SC_R_info[0];
  assign S00_SC_R_1_PAYLD = S00_SC_R_payld[54:0];
  assign S00_SC_R_1_REQ = S00_SC_R_req[0];
  assign S00_SC_R_1_SEND = S00_SC_R_send[0];
  assign S00_SC_R_recv[0] = S00_SC_R_1_RECV;
  assign S00_SC_W_1_INFO = S00_SC_W_info[6:0];
  assign S00_SC_W_1_PAYLD = S00_SC_W_payld[68:0];
  assign S00_SC_W_1_REQ = S00_SC_W_req[6:0];
  assign S00_SC_W_1_SEND = S00_SC_W_send[6:0];
  assign S00_SC_W_recv[6:0] = S00_SC_W_1_RECV;
  assign S01_SC_B_1_INFO = S01_SC_B_info[0];
  assign S01_SC_B_1_PAYLD = S01_SC_B_payld[8:0];
  assign S01_SC_B_1_REQ = S01_SC_B_req[0];
  assign S01_SC_B_1_SEND = S01_SC_B_send[0];
  assign S01_SC_B_recv[0] = S01_SC_B_1_RECV;
  assign S01_SC_R_1_INFO = S01_SC_R_info[0];
  assign S01_SC_R_1_PAYLD = S01_SC_R_payld[54:0];
  assign S01_SC_R_1_REQ = S01_SC_R_req[0];
  assign S01_SC_R_1_SEND = S01_SC_R_send[0];
  assign S01_SC_R_recv[0] = S01_SC_R_1_RECV;
  assign S02_SC_B_1_INFO = S02_SC_B_info[0];
  assign S02_SC_B_1_PAYLD = S02_SC_B_payld[8:0];
  assign S02_SC_B_1_REQ = S02_SC_B_req[0];
  assign S02_SC_B_1_SEND = S02_SC_B_send[0];
  assign S02_SC_B_recv[0] = S02_SC_B_1_RECV;
  assign S02_SC_R_1_INFO = S02_SC_R_info[0];
  assign S02_SC_R_1_PAYLD = S02_SC_R_payld[54:0];
  assign S02_SC_R_1_REQ = S02_SC_R_req[0];
  assign S02_SC_R_1_SEND = S02_SC_R_send[0];
  assign S02_SC_R_recv[0] = S02_SC_R_1_RECV;
  assign S03_SC_B_1_INFO = S03_SC_B_info[0];
  assign S03_SC_B_1_PAYLD = S03_SC_B_payld[8:0];
  assign S03_SC_B_1_REQ = S03_SC_B_req[0];
  assign S03_SC_B_1_SEND = S03_SC_B_send[0];
  assign S03_SC_B_recv[0] = S03_SC_B_1_RECV;
  assign S03_SC_R_1_INFO = S03_SC_R_info[0];
  assign S03_SC_R_1_PAYLD = S03_SC_R_payld[54:0];
  assign S03_SC_R_1_REQ = S03_SC_R_req[0];
  assign S03_SC_R_1_SEND = S03_SC_R_send[0];
  assign S03_SC_R_recv[0] = S03_SC_R_1_RECV;
  assign S04_SC_B_1_INFO = S04_SC_B_info[0];
  assign S04_SC_B_1_PAYLD = S04_SC_B_payld[8:0];
  assign S04_SC_B_1_REQ = S04_SC_B_req[0];
  assign S04_SC_B_1_SEND = S04_SC_B_send[0];
  assign S04_SC_B_recv[0] = S04_SC_B_1_RECV;
  assign S04_SC_R_1_INFO = S04_SC_R_info[0];
  assign S04_SC_R_1_PAYLD = S04_SC_R_payld[54:0];
  assign S04_SC_R_1_REQ = S04_SC_R_req[0];
  assign S04_SC_R_1_SEND = S04_SC_R_send[0];
  assign S04_SC_R_recv[0] = S04_SC_R_1_RECV;
  assign S05_SC_B_1_INFO = S05_SC_B_info[0];
  assign S05_SC_B_1_PAYLD = S05_SC_B_payld[8:0];
  assign S05_SC_B_1_REQ = S05_SC_B_req[0];
  assign S05_SC_B_1_SEND = S05_SC_B_send[0];
  assign S05_SC_B_recv[0] = S05_SC_B_1_RECV;
  assign S05_SC_R_1_INFO = S05_SC_R_info[0];
  assign S05_SC_R_1_PAYLD = S05_SC_R_payld[54:0];
  assign S05_SC_R_1_REQ = S05_SC_R_req[0];
  assign S05_SC_R_1_SEND = S05_SC_R_send[0];
  assign S05_SC_R_recv[0] = S05_SC_R_1_RECV;
  assign S06_SC_B_1_INFO = S06_SC_B_info[0];
  assign S06_SC_B_1_PAYLD = S06_SC_B_payld[8:0];
  assign S06_SC_B_1_REQ = S06_SC_B_req[0];
  assign S06_SC_B_1_SEND = S06_SC_B_send[0];
  assign S06_SC_B_recv[0] = S06_SC_B_1_RECV;
  assign S06_SC_R_1_INFO = S06_SC_R_info[0];
  assign S06_SC_R_1_PAYLD = S06_SC_R_payld[54:0];
  assign S06_SC_R_1_REQ = S06_SC_R_req[0];
  assign S06_SC_R_1_SEND = S06_SC_R_send[0];
  assign S06_SC_R_recv[0] = S06_SC_R_1_RECV;
  assign aclk_1 = aclk;
  assign ar_la_out_swbd_2_M00_SC_RECV = M00_SC_AR_recv[0];
  assign ar_la_out_swbd_2_M01_SC_RECV = M01_SC_AR_recv[0];
  assign ar_la_out_swbd_2_M02_SC_RECV = M02_SC_AR_recv[0];
  assign ar_la_out_swbd_2_M03_SC_RECV = M03_SC_AR_recv[0];
  assign ar_la_out_swbd_2_M04_SC_RECV = M04_SC_AR_recv[0];
  assign ar_la_out_swbd_2_M05_SC_RECV = M05_SC_AR_recv[0];
  assign ar_la_out_swbd_2_M06_SC_RECV = M06_SC_AR_recv[0];
  assign aw_la_out_swbd_2_M00_SC_RECV = M00_SC_AW_recv[0];
  assign aw_la_out_swbd_2_M01_SC_RECV = M01_SC_AW_recv[0];
  assign aw_la_out_swbd_2_M02_SC_RECV = M02_SC_AW_recv[0];
  assign aw_la_out_swbd_2_M03_SC_RECV = M03_SC_AW_recv[0];
  assign aw_la_out_swbd_2_M04_SC_RECV = M04_SC_AW_recv[0];
  assign aw_la_out_swbd_2_M05_SC_RECV = M05_SC_AW_recv[0];
  assign aw_la_out_swbd_2_M06_SC_RECV = M06_SC_AW_recv[0];
  assign b_la_out_swbd_2_M00_SC_RECV = M00_SC_B_recv[6:0];
  assign r_la_out_swbd_2_M00_SC_RECV = M00_SC_R_recv[6:0];
  assign w_la_out_swbd_2_M00_SC_RECV = M00_SC_W_recv[0];
  assign w_la_out_swbd_2_M01_SC_RECV = M01_SC_W_recv[0];
  assign w_la_out_swbd_2_M02_SC_RECV = M02_SC_W_recv[0];
  assign w_la_out_swbd_2_M03_SC_RECV = M03_SC_W_recv[0];
  assign w_la_out_swbd_2_M04_SC_RECV = M04_SC_W_recv[0];
  assign w_la_out_swbd_2_M05_SC_RECV = M05_SC_W_recv[0];
  assign w_la_out_swbd_2_M06_SC_RECV = M06_SC_W_recv[0];
  bd_afc3_arinsw_3 ar_la_out_swbd_2
       (.aclk(aclk_1),
        .aclken(1'b1),
        .m_sc_info({ar_la_out_swbd_2_M06_SC_INFO,ar_la_out_swbd_2_M05_SC_INFO,ar_la_out_swbd_2_M04_SC_INFO,ar_la_out_swbd_2_M03_SC_INFO,ar_la_out_swbd_2_M02_SC_INFO,ar_la_out_swbd_2_M01_SC_INFO,ar_la_out_swbd_2_M00_SC_INFO}),
        .m_sc_payld({ar_la_out_swbd_2_M06_SC_PAYLD,ar_la_out_swbd_2_M05_SC_PAYLD,ar_la_out_swbd_2_M04_SC_PAYLD,ar_la_out_swbd_2_M03_SC_PAYLD,ar_la_out_swbd_2_M02_SC_PAYLD,ar_la_out_swbd_2_M01_SC_PAYLD,ar_la_out_swbd_2_M00_SC_PAYLD}),
        .m_sc_recv({ar_la_out_swbd_2_M06_SC_RECV,ar_la_out_swbd_2_M05_SC_RECV,ar_la_out_swbd_2_M04_SC_RECV,ar_la_out_swbd_2_M03_SC_RECV,ar_la_out_swbd_2_M02_SC_RECV,ar_la_out_swbd_2_M01_SC_RECV,ar_la_out_swbd_2_M00_SC_RECV}),
        .m_sc_req({ar_la_out_swbd_2_M06_SC_REQ,ar_la_out_swbd_2_M05_SC_REQ,ar_la_out_swbd_2_M04_SC_REQ,ar_la_out_swbd_2_M03_SC_REQ,ar_la_out_swbd_2_M02_SC_REQ,ar_la_out_swbd_2_M01_SC_REQ,ar_la_out_swbd_2_M00_SC_REQ}),
        .m_sc_send({ar_la_out_swbd_2_M06_SC_SEND,ar_la_out_swbd_2_M05_SC_SEND,ar_la_out_swbd_2_M04_SC_SEND,ar_la_out_swbd_2_M03_SC_SEND,ar_la_out_swbd_2_M02_SC_SEND,ar_la_out_swbd_2_M01_SC_SEND,ar_la_out_swbd_2_M00_SC_SEND}),
        .s_sc_info(S00_SC_AR_1_INFO),
        .s_sc_payld(S00_SC_AR_1_PAYLD),
        .s_sc_recv(S00_SC_AR_1_RECV),
        .s_sc_req(S00_SC_AR_1_REQ),
        .s_sc_send(S00_SC_AR_1_SEND));
  bd_afc3_awinsw_3 aw_la_out_swbd_2
       (.aclk(aclk_1),
        .aclken(1'b1),
        .m_sc_info({aw_la_out_swbd_2_M06_SC_INFO,aw_la_out_swbd_2_M05_SC_INFO,aw_la_out_swbd_2_M04_SC_INFO,aw_la_out_swbd_2_M03_SC_INFO,aw_la_out_swbd_2_M02_SC_INFO,aw_la_out_swbd_2_M01_SC_INFO,aw_la_out_swbd_2_M00_SC_INFO}),
        .m_sc_payld({aw_la_out_swbd_2_M06_SC_PAYLD,aw_la_out_swbd_2_M05_SC_PAYLD,aw_la_out_swbd_2_M04_SC_PAYLD,aw_la_out_swbd_2_M03_SC_PAYLD,aw_la_out_swbd_2_M02_SC_PAYLD,aw_la_out_swbd_2_M01_SC_PAYLD,aw_la_out_swbd_2_M00_SC_PAYLD}),
        .m_sc_recv({aw_la_out_swbd_2_M06_SC_RECV,aw_la_out_swbd_2_M05_SC_RECV,aw_la_out_swbd_2_M04_SC_RECV,aw_la_out_swbd_2_M03_SC_RECV,aw_la_out_swbd_2_M02_SC_RECV,aw_la_out_swbd_2_M01_SC_RECV,aw_la_out_swbd_2_M00_SC_RECV}),
        .m_sc_req({aw_la_out_swbd_2_M06_SC_REQ,aw_la_out_swbd_2_M05_SC_REQ,aw_la_out_swbd_2_M04_SC_REQ,aw_la_out_swbd_2_M03_SC_REQ,aw_la_out_swbd_2_M02_SC_REQ,aw_la_out_swbd_2_M01_SC_REQ,aw_la_out_swbd_2_M00_SC_REQ}),
        .m_sc_send({aw_la_out_swbd_2_M06_SC_SEND,aw_la_out_swbd_2_M05_SC_SEND,aw_la_out_swbd_2_M04_SC_SEND,aw_la_out_swbd_2_M03_SC_SEND,aw_la_out_swbd_2_M02_SC_SEND,aw_la_out_swbd_2_M01_SC_SEND,aw_la_out_swbd_2_M00_SC_SEND}),
        .s_sc_info(S00_SC_AW_1_INFO),
        .s_sc_payld(S00_SC_AW_1_PAYLD),
        .s_sc_recv(S00_SC_AW_1_RECV),
        .s_sc_req(S00_SC_AW_1_REQ),
        .s_sc_send(S00_SC_AW_1_SEND));
  bd_afc3_binsw_3 b_la_out_swbd_2
       (.aclk(aclk_1),
        .aclken(1'b1),
        .m_sc_info(b_la_out_swbd_2_M00_SC_INFO),
        .m_sc_payld(b_la_out_swbd_2_M00_SC_PAYLD),
        .m_sc_recv(b_la_out_swbd_2_M00_SC_RECV),
        .m_sc_req(b_la_out_swbd_2_M00_SC_REQ),
        .m_sc_send(b_la_out_swbd_2_M00_SC_SEND),
        .s_sc_info({S06_SC_B_1_INFO,S05_SC_B_1_INFO,S04_SC_B_1_INFO,S03_SC_B_1_INFO,S02_SC_B_1_INFO,S01_SC_B_1_INFO,S00_SC_B_1_INFO}),
        .s_sc_payld({S06_SC_B_1_PAYLD,S05_SC_B_1_PAYLD,S04_SC_B_1_PAYLD,S03_SC_B_1_PAYLD,S02_SC_B_1_PAYLD,S01_SC_B_1_PAYLD,S00_SC_B_1_PAYLD}),
        .s_sc_recv({S06_SC_B_1_RECV,S05_SC_B_1_RECV,S04_SC_B_1_RECV,S03_SC_B_1_RECV,S02_SC_B_1_RECV,S01_SC_B_1_RECV,S00_SC_B_1_RECV}),
        .s_sc_req({S06_SC_B_1_REQ,S05_SC_B_1_REQ,S04_SC_B_1_REQ,S03_SC_B_1_REQ,S02_SC_B_1_REQ,S01_SC_B_1_REQ,S00_SC_B_1_REQ}),
        .s_sc_send({S06_SC_B_1_SEND,S05_SC_B_1_SEND,S04_SC_B_1_SEND,S03_SC_B_1_SEND,S02_SC_B_1_SEND,S01_SC_B_1_SEND,S00_SC_B_1_SEND}));
  bd_afc3_rinsw_3 r_la_out_swbd_2
       (.aclk(aclk_1),
        .aclken(1'b1),
        .m_sc_info(r_la_out_swbd_2_M00_SC_INFO),
        .m_sc_payld(r_la_out_swbd_2_M00_SC_PAYLD),
        .m_sc_recv(r_la_out_swbd_2_M00_SC_RECV),
        .m_sc_req(r_la_out_swbd_2_M00_SC_REQ),
        .m_sc_send(r_la_out_swbd_2_M00_SC_SEND),
        .s_sc_info({S06_SC_R_1_INFO,S05_SC_R_1_INFO,S04_SC_R_1_INFO,S03_SC_R_1_INFO,S02_SC_R_1_INFO,S01_SC_R_1_INFO,S00_SC_R_1_INFO}),
        .s_sc_payld({S06_SC_R_1_PAYLD,S05_SC_R_1_PAYLD,S04_SC_R_1_PAYLD,S03_SC_R_1_PAYLD,S02_SC_R_1_PAYLD,S01_SC_R_1_PAYLD,S00_SC_R_1_PAYLD}),
        .s_sc_recv({S06_SC_R_1_RECV,S05_SC_R_1_RECV,S04_SC_R_1_RECV,S03_SC_R_1_RECV,S02_SC_R_1_RECV,S01_SC_R_1_RECV,S00_SC_R_1_RECV}),
        .s_sc_req({S06_SC_R_1_REQ,S05_SC_R_1_REQ,S04_SC_R_1_REQ,S03_SC_R_1_REQ,S02_SC_R_1_REQ,S01_SC_R_1_REQ,S00_SC_R_1_REQ}),
        .s_sc_send({S06_SC_R_1_SEND,S05_SC_R_1_SEND,S04_SC_R_1_SEND,S03_SC_R_1_SEND,S02_SC_R_1_SEND,S01_SC_R_1_SEND,S00_SC_R_1_SEND}));
  bd_afc3_winsw_3 w_la_out_swbd_2
       (.aclk(aclk_1),
        .aclken(1'b1),
        .m_sc_info({w_la_out_swbd_2_M06_SC_INFO,w_la_out_swbd_2_M05_SC_INFO,w_la_out_swbd_2_M04_SC_INFO,w_la_out_swbd_2_M03_SC_INFO,w_la_out_swbd_2_M02_SC_INFO,w_la_out_swbd_2_M01_SC_INFO,w_la_out_swbd_2_M00_SC_INFO}),
        .m_sc_payld({w_la_out_swbd_2_M06_SC_PAYLD,w_la_out_swbd_2_M05_SC_PAYLD,w_la_out_swbd_2_M04_SC_PAYLD,w_la_out_swbd_2_M03_SC_PAYLD,w_la_out_swbd_2_M02_SC_PAYLD,w_la_out_swbd_2_M01_SC_PAYLD,w_la_out_swbd_2_M00_SC_PAYLD}),
        .m_sc_recv({w_la_out_swbd_2_M06_SC_RECV,w_la_out_swbd_2_M05_SC_RECV,w_la_out_swbd_2_M04_SC_RECV,w_la_out_swbd_2_M03_SC_RECV,w_la_out_swbd_2_M02_SC_RECV,w_la_out_swbd_2_M01_SC_RECV,w_la_out_swbd_2_M00_SC_RECV}),
        .m_sc_req({w_la_out_swbd_2_M06_SC_REQ,w_la_out_swbd_2_M05_SC_REQ,w_la_out_swbd_2_M04_SC_REQ,w_la_out_swbd_2_M03_SC_REQ,w_la_out_swbd_2_M02_SC_REQ,w_la_out_swbd_2_M01_SC_REQ,w_la_out_swbd_2_M00_SC_REQ}),
        .m_sc_send({w_la_out_swbd_2_M06_SC_SEND,w_la_out_swbd_2_M05_SC_SEND,w_la_out_swbd_2_M04_SC_SEND,w_la_out_swbd_2_M03_SC_SEND,w_la_out_swbd_2_M02_SC_SEND,w_la_out_swbd_2_M01_SC_SEND,w_la_out_swbd_2_M00_SC_SEND}),
        .s_sc_info(S00_SC_W_1_INFO),
        .s_sc_payld(S00_SC_W_1_PAYLD),
        .s_sc_recv(S00_SC_W_1_RECV),
        .s_sc_req(S00_SC_W_1_REQ),
        .s_sc_send(S00_SC_W_1_SEND));
endmodule

module out_swbd_3_imp_1YSV8IF
   (M00_SC_AR_info,
    M00_SC_AR_payld,
    M00_SC_AR_recv,
    M00_SC_AR_req,
    M00_SC_AR_send,
    M00_SC_AW_info,
    M00_SC_AW_payld,
    M00_SC_AW_recv,
    M00_SC_AW_req,
    M00_SC_AW_send,
    M00_SC_B_info,
    M00_SC_B_payld,
    M00_SC_B_recv,
    M00_SC_B_req,
    M00_SC_B_send,
    M00_SC_R_info,
    M00_SC_R_payld,
    M00_SC_R_recv,
    M00_SC_R_req,
    M00_SC_R_send,
    M00_SC_W_info,
    M00_SC_W_payld,
    M00_SC_W_recv,
    M00_SC_W_req,
    M00_SC_W_send,
    M01_SC_AR_info,
    M01_SC_AR_payld,
    M01_SC_AR_recv,
    M01_SC_AR_req,
    M01_SC_AR_send,
    M01_SC_AW_info,
    M01_SC_AW_payld,
    M01_SC_AW_recv,
    M01_SC_AW_req,
    M01_SC_AW_send,
    M01_SC_W_info,
    M01_SC_W_payld,
    M01_SC_W_recv,
    M01_SC_W_req,
    M01_SC_W_send,
    M02_SC_AR_info,
    M02_SC_AR_payld,
    M02_SC_AR_recv,
    M02_SC_AR_req,
    M02_SC_AR_send,
    M02_SC_AW_info,
    M02_SC_AW_payld,
    M02_SC_AW_recv,
    M02_SC_AW_req,
    M02_SC_AW_send,
    M02_SC_W_info,
    M02_SC_W_payld,
    M02_SC_W_recv,
    M02_SC_W_req,
    M02_SC_W_send,
    M03_SC_AR_info,
    M03_SC_AR_payld,
    M03_SC_AR_recv,
    M03_SC_AR_req,
    M03_SC_AR_send,
    M03_SC_AW_info,
    M03_SC_AW_payld,
    M03_SC_AW_recv,
    M03_SC_AW_req,
    M03_SC_AW_send,
    M03_SC_W_info,
    M03_SC_W_payld,
    M03_SC_W_recv,
    M03_SC_W_req,
    M03_SC_W_send,
    M04_SC_AR_info,
    M04_SC_AR_payld,
    M04_SC_AR_recv,
    M04_SC_AR_req,
    M04_SC_AR_send,
    M04_SC_AW_info,
    M04_SC_AW_payld,
    M04_SC_AW_recv,
    M04_SC_AW_req,
    M04_SC_AW_send,
    M04_SC_W_info,
    M04_SC_W_payld,
    M04_SC_W_recv,
    M04_SC_W_req,
    M04_SC_W_send,
    M05_SC_AR_info,
    M05_SC_AR_payld,
    M05_SC_AR_recv,
    M05_SC_AR_req,
    M05_SC_AR_send,
    M05_SC_AW_info,
    M05_SC_AW_payld,
    M05_SC_AW_recv,
    M05_SC_AW_req,
    M05_SC_AW_send,
    M05_SC_W_info,
    M05_SC_W_payld,
    M05_SC_W_recv,
    M05_SC_W_req,
    M05_SC_W_send,
    S00_SC_AR_info,
    S00_SC_AR_payld,
    S00_SC_AR_recv,
    S00_SC_AR_req,
    S00_SC_AR_send,
    S00_SC_AW_info,
    S00_SC_AW_payld,
    S00_SC_AW_recv,
    S00_SC_AW_req,
    S00_SC_AW_send,
    S00_SC_B_info,
    S00_SC_B_payld,
    S00_SC_B_recv,
    S00_SC_B_req,
    S00_SC_B_send,
    S00_SC_R_info,
    S00_SC_R_payld,
    S00_SC_R_recv,
    S00_SC_R_req,
    S00_SC_R_send,
    S00_SC_W_info,
    S00_SC_W_payld,
    S00_SC_W_recv,
    S00_SC_W_req,
    S00_SC_W_send,
    S01_SC_B_info,
    S01_SC_B_payld,
    S01_SC_B_recv,
    S01_SC_B_req,
    S01_SC_B_send,
    S01_SC_R_info,
    S01_SC_R_payld,
    S01_SC_R_recv,
    S01_SC_R_req,
    S01_SC_R_send,
    S02_SC_B_info,
    S02_SC_B_payld,
    S02_SC_B_recv,
    S02_SC_B_req,
    S02_SC_B_send,
    S02_SC_R_info,
    S02_SC_R_payld,
    S02_SC_R_recv,
    S02_SC_R_req,
    S02_SC_R_send,
    S03_SC_B_info,
    S03_SC_B_payld,
    S03_SC_B_recv,
    S03_SC_B_req,
    S03_SC_B_send,
    S03_SC_R_info,
    S03_SC_R_payld,
    S03_SC_R_recv,
    S03_SC_R_req,
    S03_SC_R_send,
    S04_SC_B_info,
    S04_SC_B_payld,
    S04_SC_B_recv,
    S04_SC_B_req,
    S04_SC_B_send,
    S04_SC_R_info,
    S04_SC_R_payld,
    S04_SC_R_recv,
    S04_SC_R_req,
    S04_SC_R_send,
    S05_SC_B_info,
    S05_SC_B_payld,
    S05_SC_B_recv,
    S05_SC_B_req,
    S05_SC_B_send,
    S05_SC_R_info,
    S05_SC_R_payld,
    S05_SC_R_recv,
    S05_SC_R_req,
    S05_SC_R_send,
    aclk);
  output [0:0]M00_SC_AR_info;
  output [181:0]M00_SC_AR_payld;
  input [0:0]M00_SC_AR_recv;
  output [0:0]M00_SC_AR_req;
  output [0:0]M00_SC_AR_send;
  output [0:0]M00_SC_AW_info;
  output [181:0]M00_SC_AW_payld;
  input [0:0]M00_SC_AW_recv;
  output [0:0]M00_SC_AW_req;
  output [0:0]M00_SC_AW_send;
  output [5:0]M00_SC_B_info;
  output [8:0]M00_SC_B_payld;
  input [5:0]M00_SC_B_recv;
  output [5:0]M00_SC_B_req;
  output [5:0]M00_SC_B_send;
  output [5:0]M00_SC_R_info;
  output [54:0]M00_SC_R_payld;
  input [5:0]M00_SC_R_recv;
  output [5:0]M00_SC_R_req;
  output [5:0]M00_SC_R_send;
  output [0:0]M00_SC_W_info;
  output [68:0]M00_SC_W_payld;
  input [0:0]M00_SC_W_recv;
  output [0:0]M00_SC_W_req;
  output [0:0]M00_SC_W_send;
  output [0:0]M01_SC_AR_info;
  output [181:0]M01_SC_AR_payld;
  input [0:0]M01_SC_AR_recv;
  output [0:0]M01_SC_AR_req;
  output [0:0]M01_SC_AR_send;
  output [0:0]M01_SC_AW_info;
  output [181:0]M01_SC_AW_payld;
  input [0:0]M01_SC_AW_recv;
  output [0:0]M01_SC_AW_req;
  output [0:0]M01_SC_AW_send;
  output [0:0]M01_SC_W_info;
  output [68:0]M01_SC_W_payld;
  input [0:0]M01_SC_W_recv;
  output [0:0]M01_SC_W_req;
  output [0:0]M01_SC_W_send;
  output [0:0]M02_SC_AR_info;
  output [181:0]M02_SC_AR_payld;
  input [0:0]M02_SC_AR_recv;
  output [0:0]M02_SC_AR_req;
  output [0:0]M02_SC_AR_send;
  output [0:0]M02_SC_AW_info;
  output [181:0]M02_SC_AW_payld;
  input [0:0]M02_SC_AW_recv;
  output [0:0]M02_SC_AW_req;
  output [0:0]M02_SC_AW_send;
  output [0:0]M02_SC_W_info;
  output [68:0]M02_SC_W_payld;
  input [0:0]M02_SC_W_recv;
  output [0:0]M02_SC_W_req;
  output [0:0]M02_SC_W_send;
  output [0:0]M03_SC_AR_info;
  output [181:0]M03_SC_AR_payld;
  input [0:0]M03_SC_AR_recv;
  output [0:0]M03_SC_AR_req;
  output [0:0]M03_SC_AR_send;
  output [0:0]M03_SC_AW_info;
  output [181:0]M03_SC_AW_payld;
  input [0:0]M03_SC_AW_recv;
  output [0:0]M03_SC_AW_req;
  output [0:0]M03_SC_AW_send;
  output [0:0]M03_SC_W_info;
  output [68:0]M03_SC_W_payld;
  input [0:0]M03_SC_W_recv;
  output [0:0]M03_SC_W_req;
  output [0:0]M03_SC_W_send;
  output [0:0]M04_SC_AR_info;
  output [181:0]M04_SC_AR_payld;
  input [0:0]M04_SC_AR_recv;
  output [0:0]M04_SC_AR_req;
  output [0:0]M04_SC_AR_send;
  output [0:0]M04_SC_AW_info;
  output [181:0]M04_SC_AW_payld;
  input [0:0]M04_SC_AW_recv;
  output [0:0]M04_SC_AW_req;
  output [0:0]M04_SC_AW_send;
  output [0:0]M04_SC_W_info;
  output [68:0]M04_SC_W_payld;
  input [0:0]M04_SC_W_recv;
  output [0:0]M04_SC_W_req;
  output [0:0]M04_SC_W_send;
  output [0:0]M05_SC_AR_info;
  output [181:0]M05_SC_AR_payld;
  input [0:0]M05_SC_AR_recv;
  output [0:0]M05_SC_AR_req;
  output [0:0]M05_SC_AR_send;
  output [0:0]M05_SC_AW_info;
  output [181:0]M05_SC_AW_payld;
  input [0:0]M05_SC_AW_recv;
  output [0:0]M05_SC_AW_req;
  output [0:0]M05_SC_AW_send;
  output [0:0]M05_SC_W_info;
  output [68:0]M05_SC_W_payld;
  input [0:0]M05_SC_W_recv;
  output [0:0]M05_SC_W_req;
  output [0:0]M05_SC_W_send;
  input [5:0]S00_SC_AR_info;
  input [181:0]S00_SC_AR_payld;
  output [5:0]S00_SC_AR_recv;
  input [5:0]S00_SC_AR_req;
  input [5:0]S00_SC_AR_send;
  input [5:0]S00_SC_AW_info;
  input [181:0]S00_SC_AW_payld;
  output [5:0]S00_SC_AW_recv;
  input [5:0]S00_SC_AW_req;
  input [5:0]S00_SC_AW_send;
  input [0:0]S00_SC_B_info;
  input [8:0]S00_SC_B_payld;
  output [0:0]S00_SC_B_recv;
  input [0:0]S00_SC_B_req;
  input [0:0]S00_SC_B_send;
  input [0:0]S00_SC_R_info;
  input [54:0]S00_SC_R_payld;
  output [0:0]S00_SC_R_recv;
  input [0:0]S00_SC_R_req;
  input [0:0]S00_SC_R_send;
  input [5:0]S00_SC_W_info;
  input [68:0]S00_SC_W_payld;
  output [5:0]S00_SC_W_recv;
  input [5:0]S00_SC_W_req;
  input [5:0]S00_SC_W_send;
  input [0:0]S01_SC_B_info;
  input [8:0]S01_SC_B_payld;
  output [0:0]S01_SC_B_recv;
  input [0:0]S01_SC_B_req;
  input [0:0]S01_SC_B_send;
  input [0:0]S01_SC_R_info;
  input [54:0]S01_SC_R_payld;
  output [0:0]S01_SC_R_recv;
  input [0:0]S01_SC_R_req;
  input [0:0]S01_SC_R_send;
  input [0:0]S02_SC_B_info;
  input [8:0]S02_SC_B_payld;
  output [0:0]S02_SC_B_recv;
  input [0:0]S02_SC_B_req;
  input [0:0]S02_SC_B_send;
  input [0:0]S02_SC_R_info;
  input [54:0]S02_SC_R_payld;
  output [0:0]S02_SC_R_recv;
  input [0:0]S02_SC_R_req;
  input [0:0]S02_SC_R_send;
  input [0:0]S03_SC_B_info;
  input [8:0]S03_SC_B_payld;
  output [0:0]S03_SC_B_recv;
  input [0:0]S03_SC_B_req;
  input [0:0]S03_SC_B_send;
  input [0:0]S03_SC_R_info;
  input [54:0]S03_SC_R_payld;
  output [0:0]S03_SC_R_recv;
  input [0:0]S03_SC_R_req;
  input [0:0]S03_SC_R_send;
  input [0:0]S04_SC_B_info;
  input [8:0]S04_SC_B_payld;
  output [0:0]S04_SC_B_recv;
  input [0:0]S04_SC_B_req;
  input [0:0]S04_SC_B_send;
  input [0:0]S04_SC_R_info;
  input [54:0]S04_SC_R_payld;
  output [0:0]S04_SC_R_recv;
  input [0:0]S04_SC_R_req;
  input [0:0]S04_SC_R_send;
  input [0:0]S05_SC_B_info;
  input [8:0]S05_SC_B_payld;
  output [0:0]S05_SC_B_recv;
  input [0:0]S05_SC_B_req;
  input [0:0]S05_SC_B_send;
  input [0:0]S05_SC_R_info;
  input [54:0]S05_SC_R_payld;
  output [0:0]S05_SC_R_recv;
  input [0:0]S05_SC_R_req;
  input [0:0]S05_SC_R_send;
  input aclk;

  wire [5:0]S00_SC_AR_1_INFO;
  wire [181:0]S00_SC_AR_1_PAYLD;
  wire [5:0]S00_SC_AR_1_RECV;
  wire [5:0]S00_SC_AR_1_REQ;
  wire [5:0]S00_SC_AR_1_SEND;
  wire [5:0]S00_SC_AW_1_INFO;
  wire [181:0]S00_SC_AW_1_PAYLD;
  wire [5:0]S00_SC_AW_1_RECV;
  wire [5:0]S00_SC_AW_1_REQ;
  wire [5:0]S00_SC_AW_1_SEND;
  wire [0:0]S00_SC_B_1_INFO;
  wire [8:0]S00_SC_B_1_PAYLD;
  wire [0:0]S00_SC_B_1_RECV;
  wire [0:0]S00_SC_B_1_REQ;
  wire [0:0]S00_SC_B_1_SEND;
  wire [0:0]S00_SC_R_1_INFO;
  wire [54:0]S00_SC_R_1_PAYLD;
  wire [0:0]S00_SC_R_1_RECV;
  wire [0:0]S00_SC_R_1_REQ;
  wire [0:0]S00_SC_R_1_SEND;
  wire [5:0]S00_SC_W_1_INFO;
  wire [68:0]S00_SC_W_1_PAYLD;
  wire [5:0]S00_SC_W_1_RECV;
  wire [5:0]S00_SC_W_1_REQ;
  wire [5:0]S00_SC_W_1_SEND;
  wire [0:0]S01_SC_B_1_INFO;
  wire [8:0]S01_SC_B_1_PAYLD;
  wire [1:1]S01_SC_B_1_RECV;
  wire [0:0]S01_SC_B_1_REQ;
  wire [0:0]S01_SC_B_1_SEND;
  wire [0:0]S01_SC_R_1_INFO;
  wire [54:0]S01_SC_R_1_PAYLD;
  wire [1:1]S01_SC_R_1_RECV;
  wire [0:0]S01_SC_R_1_REQ;
  wire [0:0]S01_SC_R_1_SEND;
  wire [0:0]S02_SC_B_1_INFO;
  wire [8:0]S02_SC_B_1_PAYLD;
  wire [2:2]S02_SC_B_1_RECV;
  wire [0:0]S02_SC_B_1_REQ;
  wire [0:0]S02_SC_B_1_SEND;
  wire [0:0]S02_SC_R_1_INFO;
  wire [54:0]S02_SC_R_1_PAYLD;
  wire [2:2]S02_SC_R_1_RECV;
  wire [0:0]S02_SC_R_1_REQ;
  wire [0:0]S02_SC_R_1_SEND;
  wire [0:0]S03_SC_B_1_INFO;
  wire [8:0]S03_SC_B_1_PAYLD;
  wire [3:3]S03_SC_B_1_RECV;
  wire [0:0]S03_SC_B_1_REQ;
  wire [0:0]S03_SC_B_1_SEND;
  wire [0:0]S03_SC_R_1_INFO;
  wire [54:0]S03_SC_R_1_PAYLD;
  wire [3:3]S03_SC_R_1_RECV;
  wire [0:0]S03_SC_R_1_REQ;
  wire [0:0]S03_SC_R_1_SEND;
  wire [0:0]S04_SC_B_1_INFO;
  wire [8:0]S04_SC_B_1_PAYLD;
  wire [4:4]S04_SC_B_1_RECV;
  wire [0:0]S04_SC_B_1_REQ;
  wire [0:0]S04_SC_B_1_SEND;
  wire [0:0]S04_SC_R_1_INFO;
  wire [54:0]S04_SC_R_1_PAYLD;
  wire [4:4]S04_SC_R_1_RECV;
  wire [0:0]S04_SC_R_1_REQ;
  wire [0:0]S04_SC_R_1_SEND;
  wire [0:0]S05_SC_B_1_INFO;
  wire [8:0]S05_SC_B_1_PAYLD;
  wire [5:5]S05_SC_B_1_RECV;
  wire [0:0]S05_SC_B_1_REQ;
  wire [0:0]S05_SC_B_1_SEND;
  wire [0:0]S05_SC_R_1_INFO;
  wire [54:0]S05_SC_R_1_PAYLD;
  wire [5:5]S05_SC_R_1_RECV;
  wire [0:0]S05_SC_R_1_REQ;
  wire [0:0]S05_SC_R_1_SEND;
  wire aclk_1;
  wire [0:0]ar_la_out_swbd_3_M00_SC_INFO;
  wire [181:0]ar_la_out_swbd_3_M00_SC_PAYLD;
  wire [0:0]ar_la_out_swbd_3_M00_SC_RECV;
  wire [0:0]ar_la_out_swbd_3_M00_SC_REQ;
  wire [0:0]ar_la_out_swbd_3_M00_SC_SEND;
  wire [1:1]ar_la_out_swbd_3_M01_SC_INFO;
  wire [363:182]ar_la_out_swbd_3_M01_SC_PAYLD;
  wire [0:0]ar_la_out_swbd_3_M01_SC_RECV;
  wire [1:1]ar_la_out_swbd_3_M01_SC_REQ;
  wire [1:1]ar_la_out_swbd_3_M01_SC_SEND;
  wire [2:2]ar_la_out_swbd_3_M02_SC_INFO;
  wire [545:364]ar_la_out_swbd_3_M02_SC_PAYLD;
  wire [0:0]ar_la_out_swbd_3_M02_SC_RECV;
  wire [2:2]ar_la_out_swbd_3_M02_SC_REQ;
  wire [2:2]ar_la_out_swbd_3_M02_SC_SEND;
  wire [3:3]ar_la_out_swbd_3_M03_SC_INFO;
  wire [727:546]ar_la_out_swbd_3_M03_SC_PAYLD;
  wire [0:0]ar_la_out_swbd_3_M03_SC_RECV;
  wire [3:3]ar_la_out_swbd_3_M03_SC_REQ;
  wire [3:3]ar_la_out_swbd_3_M03_SC_SEND;
  wire [4:4]ar_la_out_swbd_3_M04_SC_INFO;
  wire [909:728]ar_la_out_swbd_3_M04_SC_PAYLD;
  wire [0:0]ar_la_out_swbd_3_M04_SC_RECV;
  wire [4:4]ar_la_out_swbd_3_M04_SC_REQ;
  wire [4:4]ar_la_out_swbd_3_M04_SC_SEND;
  wire [5:5]ar_la_out_swbd_3_M05_SC_INFO;
  wire [1091:910]ar_la_out_swbd_3_M05_SC_PAYLD;
  wire [0:0]ar_la_out_swbd_3_M05_SC_RECV;
  wire [5:5]ar_la_out_swbd_3_M05_SC_REQ;
  wire [5:5]ar_la_out_swbd_3_M05_SC_SEND;
  wire [0:0]aw_la_out_swbd_3_M00_SC_INFO;
  wire [181:0]aw_la_out_swbd_3_M00_SC_PAYLD;
  wire [0:0]aw_la_out_swbd_3_M00_SC_RECV;
  wire [0:0]aw_la_out_swbd_3_M00_SC_REQ;
  wire [0:0]aw_la_out_swbd_3_M00_SC_SEND;
  wire [1:1]aw_la_out_swbd_3_M01_SC_INFO;
  wire [363:182]aw_la_out_swbd_3_M01_SC_PAYLD;
  wire [0:0]aw_la_out_swbd_3_M01_SC_RECV;
  wire [1:1]aw_la_out_swbd_3_M01_SC_REQ;
  wire [1:1]aw_la_out_swbd_3_M01_SC_SEND;
  wire [2:2]aw_la_out_swbd_3_M02_SC_INFO;
  wire [545:364]aw_la_out_swbd_3_M02_SC_PAYLD;
  wire [0:0]aw_la_out_swbd_3_M02_SC_RECV;
  wire [2:2]aw_la_out_swbd_3_M02_SC_REQ;
  wire [2:2]aw_la_out_swbd_3_M02_SC_SEND;
  wire [3:3]aw_la_out_swbd_3_M03_SC_INFO;
  wire [727:546]aw_la_out_swbd_3_M03_SC_PAYLD;
  wire [0:0]aw_la_out_swbd_3_M03_SC_RECV;
  wire [3:3]aw_la_out_swbd_3_M03_SC_REQ;
  wire [3:3]aw_la_out_swbd_3_M03_SC_SEND;
  wire [4:4]aw_la_out_swbd_3_M04_SC_INFO;
  wire [909:728]aw_la_out_swbd_3_M04_SC_PAYLD;
  wire [0:0]aw_la_out_swbd_3_M04_SC_RECV;
  wire [4:4]aw_la_out_swbd_3_M04_SC_REQ;
  wire [4:4]aw_la_out_swbd_3_M04_SC_SEND;
  wire [5:5]aw_la_out_swbd_3_M05_SC_INFO;
  wire [1091:910]aw_la_out_swbd_3_M05_SC_PAYLD;
  wire [0:0]aw_la_out_swbd_3_M05_SC_RECV;
  wire [5:5]aw_la_out_swbd_3_M05_SC_REQ;
  wire [5:5]aw_la_out_swbd_3_M05_SC_SEND;
  wire [5:0]b_la_out_swbd_3_M00_SC_INFO;
  wire [8:0]b_la_out_swbd_3_M00_SC_PAYLD;
  wire [5:0]b_la_out_swbd_3_M00_SC_RECV;
  wire [5:0]b_la_out_swbd_3_M00_SC_REQ;
  wire [5:0]b_la_out_swbd_3_M00_SC_SEND;
  wire [5:0]r_la_out_swbd_3_M00_SC_INFO;
  wire [54:0]r_la_out_swbd_3_M00_SC_PAYLD;
  wire [5:0]r_la_out_swbd_3_M00_SC_RECV;
  wire [5:0]r_la_out_swbd_3_M00_SC_REQ;
  wire [5:0]r_la_out_swbd_3_M00_SC_SEND;
  wire [0:0]w_la_out_swbd_3_M00_SC_INFO;
  wire [68:0]w_la_out_swbd_3_M00_SC_PAYLD;
  wire [0:0]w_la_out_swbd_3_M00_SC_RECV;
  wire [0:0]w_la_out_swbd_3_M00_SC_REQ;
  wire [0:0]w_la_out_swbd_3_M00_SC_SEND;
  wire [1:1]w_la_out_swbd_3_M01_SC_INFO;
  wire [137:69]w_la_out_swbd_3_M01_SC_PAYLD;
  wire [0:0]w_la_out_swbd_3_M01_SC_RECV;
  wire [1:1]w_la_out_swbd_3_M01_SC_REQ;
  wire [1:1]w_la_out_swbd_3_M01_SC_SEND;
  wire [2:2]w_la_out_swbd_3_M02_SC_INFO;
  wire [206:138]w_la_out_swbd_3_M02_SC_PAYLD;
  wire [0:0]w_la_out_swbd_3_M02_SC_RECV;
  wire [2:2]w_la_out_swbd_3_M02_SC_REQ;
  wire [2:2]w_la_out_swbd_3_M02_SC_SEND;
  wire [3:3]w_la_out_swbd_3_M03_SC_INFO;
  wire [275:207]w_la_out_swbd_3_M03_SC_PAYLD;
  wire [0:0]w_la_out_swbd_3_M03_SC_RECV;
  wire [3:3]w_la_out_swbd_3_M03_SC_REQ;
  wire [3:3]w_la_out_swbd_3_M03_SC_SEND;
  wire [4:4]w_la_out_swbd_3_M04_SC_INFO;
  wire [344:276]w_la_out_swbd_3_M04_SC_PAYLD;
  wire [0:0]w_la_out_swbd_3_M04_SC_RECV;
  wire [4:4]w_la_out_swbd_3_M04_SC_REQ;
  wire [4:4]w_la_out_swbd_3_M04_SC_SEND;
  wire [5:5]w_la_out_swbd_3_M05_SC_INFO;
  wire [413:345]w_la_out_swbd_3_M05_SC_PAYLD;
  wire [0:0]w_la_out_swbd_3_M05_SC_RECV;
  wire [5:5]w_la_out_swbd_3_M05_SC_REQ;
  wire [5:5]w_la_out_swbd_3_M05_SC_SEND;

  assign M00_SC_AR_info[0] = ar_la_out_swbd_3_M00_SC_INFO;
  assign M00_SC_AR_payld[181:0] = ar_la_out_swbd_3_M00_SC_PAYLD;
  assign M00_SC_AR_req[0] = ar_la_out_swbd_3_M00_SC_REQ;
  assign M00_SC_AR_send[0] = ar_la_out_swbd_3_M00_SC_SEND;
  assign M00_SC_AW_info[0] = aw_la_out_swbd_3_M00_SC_INFO;
  assign M00_SC_AW_payld[181:0] = aw_la_out_swbd_3_M00_SC_PAYLD;
  assign M00_SC_AW_req[0] = aw_la_out_swbd_3_M00_SC_REQ;
  assign M00_SC_AW_send[0] = aw_la_out_swbd_3_M00_SC_SEND;
  assign M00_SC_B_info[5:0] = b_la_out_swbd_3_M00_SC_INFO;
  assign M00_SC_B_payld[8:0] = b_la_out_swbd_3_M00_SC_PAYLD;
  assign M00_SC_B_req[5:0] = b_la_out_swbd_3_M00_SC_REQ;
  assign M00_SC_B_send[5:0] = b_la_out_swbd_3_M00_SC_SEND;
  assign M00_SC_R_info[5:0] = r_la_out_swbd_3_M00_SC_INFO;
  assign M00_SC_R_payld[54:0] = r_la_out_swbd_3_M00_SC_PAYLD;
  assign M00_SC_R_req[5:0] = r_la_out_swbd_3_M00_SC_REQ;
  assign M00_SC_R_send[5:0] = r_la_out_swbd_3_M00_SC_SEND;
  assign M00_SC_W_info[0] = w_la_out_swbd_3_M00_SC_INFO;
  assign M00_SC_W_payld[68:0] = w_la_out_swbd_3_M00_SC_PAYLD;
  assign M00_SC_W_req[0] = w_la_out_swbd_3_M00_SC_REQ;
  assign M00_SC_W_send[0] = w_la_out_swbd_3_M00_SC_SEND;
  assign M01_SC_AR_info[0] = ar_la_out_swbd_3_M01_SC_INFO;
  assign M01_SC_AR_payld[181:0] = ar_la_out_swbd_3_M01_SC_PAYLD;
  assign M01_SC_AR_req[0] = ar_la_out_swbd_3_M01_SC_REQ;
  assign M01_SC_AR_send[0] = ar_la_out_swbd_3_M01_SC_SEND;
  assign M01_SC_AW_info[0] = aw_la_out_swbd_3_M01_SC_INFO;
  assign M01_SC_AW_payld[181:0] = aw_la_out_swbd_3_M01_SC_PAYLD;
  assign M01_SC_AW_req[0] = aw_la_out_swbd_3_M01_SC_REQ;
  assign M01_SC_AW_send[0] = aw_la_out_swbd_3_M01_SC_SEND;
  assign M01_SC_W_info[0] = w_la_out_swbd_3_M01_SC_INFO;
  assign M01_SC_W_payld[68:0] = w_la_out_swbd_3_M01_SC_PAYLD;
  assign M01_SC_W_req[0] = w_la_out_swbd_3_M01_SC_REQ;
  assign M01_SC_W_send[0] = w_la_out_swbd_3_M01_SC_SEND;
  assign M02_SC_AR_info[0] = ar_la_out_swbd_3_M02_SC_INFO;
  assign M02_SC_AR_payld[181:0] = ar_la_out_swbd_3_M02_SC_PAYLD;
  assign M02_SC_AR_req[0] = ar_la_out_swbd_3_M02_SC_REQ;
  assign M02_SC_AR_send[0] = ar_la_out_swbd_3_M02_SC_SEND;
  assign M02_SC_AW_info[0] = aw_la_out_swbd_3_M02_SC_INFO;
  assign M02_SC_AW_payld[181:0] = aw_la_out_swbd_3_M02_SC_PAYLD;
  assign M02_SC_AW_req[0] = aw_la_out_swbd_3_M02_SC_REQ;
  assign M02_SC_AW_send[0] = aw_la_out_swbd_3_M02_SC_SEND;
  assign M02_SC_W_info[0] = w_la_out_swbd_3_M02_SC_INFO;
  assign M02_SC_W_payld[68:0] = w_la_out_swbd_3_M02_SC_PAYLD;
  assign M02_SC_W_req[0] = w_la_out_swbd_3_M02_SC_REQ;
  assign M02_SC_W_send[0] = w_la_out_swbd_3_M02_SC_SEND;
  assign M03_SC_AR_info[0] = ar_la_out_swbd_3_M03_SC_INFO;
  assign M03_SC_AR_payld[181:0] = ar_la_out_swbd_3_M03_SC_PAYLD;
  assign M03_SC_AR_req[0] = ar_la_out_swbd_3_M03_SC_REQ;
  assign M03_SC_AR_send[0] = ar_la_out_swbd_3_M03_SC_SEND;
  assign M03_SC_AW_info[0] = aw_la_out_swbd_3_M03_SC_INFO;
  assign M03_SC_AW_payld[181:0] = aw_la_out_swbd_3_M03_SC_PAYLD;
  assign M03_SC_AW_req[0] = aw_la_out_swbd_3_M03_SC_REQ;
  assign M03_SC_AW_send[0] = aw_la_out_swbd_3_M03_SC_SEND;
  assign M03_SC_W_info[0] = w_la_out_swbd_3_M03_SC_INFO;
  assign M03_SC_W_payld[68:0] = w_la_out_swbd_3_M03_SC_PAYLD;
  assign M03_SC_W_req[0] = w_la_out_swbd_3_M03_SC_REQ;
  assign M03_SC_W_send[0] = w_la_out_swbd_3_M03_SC_SEND;
  assign M04_SC_AR_info[0] = ar_la_out_swbd_3_M04_SC_INFO;
  assign M04_SC_AR_payld[181:0] = ar_la_out_swbd_3_M04_SC_PAYLD;
  assign M04_SC_AR_req[0] = ar_la_out_swbd_3_M04_SC_REQ;
  assign M04_SC_AR_send[0] = ar_la_out_swbd_3_M04_SC_SEND;
  assign M04_SC_AW_info[0] = aw_la_out_swbd_3_M04_SC_INFO;
  assign M04_SC_AW_payld[181:0] = aw_la_out_swbd_3_M04_SC_PAYLD;
  assign M04_SC_AW_req[0] = aw_la_out_swbd_3_M04_SC_REQ;
  assign M04_SC_AW_send[0] = aw_la_out_swbd_3_M04_SC_SEND;
  assign M04_SC_W_info[0] = w_la_out_swbd_3_M04_SC_INFO;
  assign M04_SC_W_payld[68:0] = w_la_out_swbd_3_M04_SC_PAYLD;
  assign M04_SC_W_req[0] = w_la_out_swbd_3_M04_SC_REQ;
  assign M04_SC_W_send[0] = w_la_out_swbd_3_M04_SC_SEND;
  assign M05_SC_AR_info[0] = ar_la_out_swbd_3_M05_SC_INFO;
  assign M05_SC_AR_payld[181:0] = ar_la_out_swbd_3_M05_SC_PAYLD;
  assign M05_SC_AR_req[0] = ar_la_out_swbd_3_M05_SC_REQ;
  assign M05_SC_AR_send[0] = ar_la_out_swbd_3_M05_SC_SEND;
  assign M05_SC_AW_info[0] = aw_la_out_swbd_3_M05_SC_INFO;
  assign M05_SC_AW_payld[181:0] = aw_la_out_swbd_3_M05_SC_PAYLD;
  assign M05_SC_AW_req[0] = aw_la_out_swbd_3_M05_SC_REQ;
  assign M05_SC_AW_send[0] = aw_la_out_swbd_3_M05_SC_SEND;
  assign M05_SC_W_info[0] = w_la_out_swbd_3_M05_SC_INFO;
  assign M05_SC_W_payld[68:0] = w_la_out_swbd_3_M05_SC_PAYLD;
  assign M05_SC_W_req[0] = w_la_out_swbd_3_M05_SC_REQ;
  assign M05_SC_W_send[0] = w_la_out_swbd_3_M05_SC_SEND;
  assign S00_SC_AR_1_INFO = S00_SC_AR_info[5:0];
  assign S00_SC_AR_1_PAYLD = S00_SC_AR_payld[181:0];
  assign S00_SC_AR_1_REQ = S00_SC_AR_req[5:0];
  assign S00_SC_AR_1_SEND = S00_SC_AR_send[5:0];
  assign S00_SC_AR_recv[5:0] = S00_SC_AR_1_RECV;
  assign S00_SC_AW_1_INFO = S00_SC_AW_info[5:0];
  assign S00_SC_AW_1_PAYLD = S00_SC_AW_payld[181:0];
  assign S00_SC_AW_1_REQ = S00_SC_AW_req[5:0];
  assign S00_SC_AW_1_SEND = S00_SC_AW_send[5:0];
  assign S00_SC_AW_recv[5:0] = S00_SC_AW_1_RECV;
  assign S00_SC_B_1_INFO = S00_SC_B_info[0];
  assign S00_SC_B_1_PAYLD = S00_SC_B_payld[8:0];
  assign S00_SC_B_1_REQ = S00_SC_B_req[0];
  assign S00_SC_B_1_SEND = S00_SC_B_send[0];
  assign S00_SC_B_recv[0] = S00_SC_B_1_RECV;
  assign S00_SC_R_1_INFO = S00_SC_R_info[0];
  assign S00_SC_R_1_PAYLD = S00_SC_R_payld[54:0];
  assign S00_SC_R_1_REQ = S00_SC_R_req[0];
  assign S00_SC_R_1_SEND = S00_SC_R_send[0];
  assign S00_SC_R_recv[0] = S00_SC_R_1_RECV;
  assign S00_SC_W_1_INFO = S00_SC_W_info[5:0];
  assign S00_SC_W_1_PAYLD = S00_SC_W_payld[68:0];
  assign S00_SC_W_1_REQ = S00_SC_W_req[5:0];
  assign S00_SC_W_1_SEND = S00_SC_W_send[5:0];
  assign S00_SC_W_recv[5:0] = S00_SC_W_1_RECV;
  assign S01_SC_B_1_INFO = S01_SC_B_info[0];
  assign S01_SC_B_1_PAYLD = S01_SC_B_payld[8:0];
  assign S01_SC_B_1_REQ = S01_SC_B_req[0];
  assign S01_SC_B_1_SEND = S01_SC_B_send[0];
  assign S01_SC_B_recv[0] = S01_SC_B_1_RECV;
  assign S01_SC_R_1_INFO = S01_SC_R_info[0];
  assign S01_SC_R_1_PAYLD = S01_SC_R_payld[54:0];
  assign S01_SC_R_1_REQ = S01_SC_R_req[0];
  assign S01_SC_R_1_SEND = S01_SC_R_send[0];
  assign S01_SC_R_recv[0] = S01_SC_R_1_RECV;
  assign S02_SC_B_1_INFO = S02_SC_B_info[0];
  assign S02_SC_B_1_PAYLD = S02_SC_B_payld[8:0];
  assign S02_SC_B_1_REQ = S02_SC_B_req[0];
  assign S02_SC_B_1_SEND = S02_SC_B_send[0];
  assign S02_SC_B_recv[0] = S02_SC_B_1_RECV;
  assign S02_SC_R_1_INFO = S02_SC_R_info[0];
  assign S02_SC_R_1_PAYLD = S02_SC_R_payld[54:0];
  assign S02_SC_R_1_REQ = S02_SC_R_req[0];
  assign S02_SC_R_1_SEND = S02_SC_R_send[0];
  assign S02_SC_R_recv[0] = S02_SC_R_1_RECV;
  assign S03_SC_B_1_INFO = S03_SC_B_info[0];
  assign S03_SC_B_1_PAYLD = S03_SC_B_payld[8:0];
  assign S03_SC_B_1_REQ = S03_SC_B_req[0];
  assign S03_SC_B_1_SEND = S03_SC_B_send[0];
  assign S03_SC_B_recv[0] = S03_SC_B_1_RECV;
  assign S03_SC_R_1_INFO = S03_SC_R_info[0];
  assign S03_SC_R_1_PAYLD = S03_SC_R_payld[54:0];
  assign S03_SC_R_1_REQ = S03_SC_R_req[0];
  assign S03_SC_R_1_SEND = S03_SC_R_send[0];
  assign S03_SC_R_recv[0] = S03_SC_R_1_RECV;
  assign S04_SC_B_1_INFO = S04_SC_B_info[0];
  assign S04_SC_B_1_PAYLD = S04_SC_B_payld[8:0];
  assign S04_SC_B_1_REQ = S04_SC_B_req[0];
  assign S04_SC_B_1_SEND = S04_SC_B_send[0];
  assign S04_SC_B_recv[0] = S04_SC_B_1_RECV;
  assign S04_SC_R_1_INFO = S04_SC_R_info[0];
  assign S04_SC_R_1_PAYLD = S04_SC_R_payld[54:0];
  assign S04_SC_R_1_REQ = S04_SC_R_req[0];
  assign S04_SC_R_1_SEND = S04_SC_R_send[0];
  assign S04_SC_R_recv[0] = S04_SC_R_1_RECV;
  assign S05_SC_B_1_INFO = S05_SC_B_info[0];
  assign S05_SC_B_1_PAYLD = S05_SC_B_payld[8:0];
  assign S05_SC_B_1_REQ = S05_SC_B_req[0];
  assign S05_SC_B_1_SEND = S05_SC_B_send[0];
  assign S05_SC_B_recv[0] = S05_SC_B_1_RECV;
  assign S05_SC_R_1_INFO = S05_SC_R_info[0];
  assign S05_SC_R_1_PAYLD = S05_SC_R_payld[54:0];
  assign S05_SC_R_1_REQ = S05_SC_R_req[0];
  assign S05_SC_R_1_SEND = S05_SC_R_send[0];
  assign S05_SC_R_recv[0] = S05_SC_R_1_RECV;
  assign aclk_1 = aclk;
  assign ar_la_out_swbd_3_M00_SC_RECV = M00_SC_AR_recv[0];
  assign ar_la_out_swbd_3_M01_SC_RECV = M01_SC_AR_recv[0];
  assign ar_la_out_swbd_3_M02_SC_RECV = M02_SC_AR_recv[0];
  assign ar_la_out_swbd_3_M03_SC_RECV = M03_SC_AR_recv[0];
  assign ar_la_out_swbd_3_M04_SC_RECV = M04_SC_AR_recv[0];
  assign ar_la_out_swbd_3_M05_SC_RECV = M05_SC_AR_recv[0];
  assign aw_la_out_swbd_3_M00_SC_RECV = M00_SC_AW_recv[0];
  assign aw_la_out_swbd_3_M01_SC_RECV = M01_SC_AW_recv[0];
  assign aw_la_out_swbd_3_M02_SC_RECV = M02_SC_AW_recv[0];
  assign aw_la_out_swbd_3_M03_SC_RECV = M03_SC_AW_recv[0];
  assign aw_la_out_swbd_3_M04_SC_RECV = M04_SC_AW_recv[0];
  assign aw_la_out_swbd_3_M05_SC_RECV = M05_SC_AW_recv[0];
  assign b_la_out_swbd_3_M00_SC_RECV = M00_SC_B_recv[5:0];
  assign r_la_out_swbd_3_M00_SC_RECV = M00_SC_R_recv[5:0];
  assign w_la_out_swbd_3_M00_SC_RECV = M00_SC_W_recv[0];
  assign w_la_out_swbd_3_M01_SC_RECV = M01_SC_W_recv[0];
  assign w_la_out_swbd_3_M02_SC_RECV = M02_SC_W_recv[0];
  assign w_la_out_swbd_3_M03_SC_RECV = M03_SC_W_recv[0];
  assign w_la_out_swbd_3_M04_SC_RECV = M04_SC_W_recv[0];
  assign w_la_out_swbd_3_M05_SC_RECV = M05_SC_W_recv[0];
  bd_afc3_arinsw_4 ar_la_out_swbd_3
       (.aclk(aclk_1),
        .aclken(1'b1),
        .m_sc_info({ar_la_out_swbd_3_M05_SC_INFO,ar_la_out_swbd_3_M04_SC_INFO,ar_la_out_swbd_3_M03_SC_INFO,ar_la_out_swbd_3_M02_SC_INFO,ar_la_out_swbd_3_M01_SC_INFO,ar_la_out_swbd_3_M00_SC_INFO}),
        .m_sc_payld({ar_la_out_swbd_3_M05_SC_PAYLD,ar_la_out_swbd_3_M04_SC_PAYLD,ar_la_out_swbd_3_M03_SC_PAYLD,ar_la_out_swbd_3_M02_SC_PAYLD,ar_la_out_swbd_3_M01_SC_PAYLD,ar_la_out_swbd_3_M00_SC_PAYLD}),
        .m_sc_recv({ar_la_out_swbd_3_M05_SC_RECV,ar_la_out_swbd_3_M04_SC_RECV,ar_la_out_swbd_3_M03_SC_RECV,ar_la_out_swbd_3_M02_SC_RECV,ar_la_out_swbd_3_M01_SC_RECV,ar_la_out_swbd_3_M00_SC_RECV}),
        .m_sc_req({ar_la_out_swbd_3_M05_SC_REQ,ar_la_out_swbd_3_M04_SC_REQ,ar_la_out_swbd_3_M03_SC_REQ,ar_la_out_swbd_3_M02_SC_REQ,ar_la_out_swbd_3_M01_SC_REQ,ar_la_out_swbd_3_M00_SC_REQ}),
        .m_sc_send({ar_la_out_swbd_3_M05_SC_SEND,ar_la_out_swbd_3_M04_SC_SEND,ar_la_out_swbd_3_M03_SC_SEND,ar_la_out_swbd_3_M02_SC_SEND,ar_la_out_swbd_3_M01_SC_SEND,ar_la_out_swbd_3_M00_SC_SEND}),
        .s_sc_info(S00_SC_AR_1_INFO),
        .s_sc_payld(S00_SC_AR_1_PAYLD),
        .s_sc_recv(S00_SC_AR_1_RECV),
        .s_sc_req(S00_SC_AR_1_REQ),
        .s_sc_send(S00_SC_AR_1_SEND));
  bd_afc3_awinsw_4 aw_la_out_swbd_3
       (.aclk(aclk_1),
        .aclken(1'b1),
        .m_sc_info({aw_la_out_swbd_3_M05_SC_INFO,aw_la_out_swbd_3_M04_SC_INFO,aw_la_out_swbd_3_M03_SC_INFO,aw_la_out_swbd_3_M02_SC_INFO,aw_la_out_swbd_3_M01_SC_INFO,aw_la_out_swbd_3_M00_SC_INFO}),
        .m_sc_payld({aw_la_out_swbd_3_M05_SC_PAYLD,aw_la_out_swbd_3_M04_SC_PAYLD,aw_la_out_swbd_3_M03_SC_PAYLD,aw_la_out_swbd_3_M02_SC_PAYLD,aw_la_out_swbd_3_M01_SC_PAYLD,aw_la_out_swbd_3_M00_SC_PAYLD}),
        .m_sc_recv({aw_la_out_swbd_3_M05_SC_RECV,aw_la_out_swbd_3_M04_SC_RECV,aw_la_out_swbd_3_M03_SC_RECV,aw_la_out_swbd_3_M02_SC_RECV,aw_la_out_swbd_3_M01_SC_RECV,aw_la_out_swbd_3_M00_SC_RECV}),
        .m_sc_req({aw_la_out_swbd_3_M05_SC_REQ,aw_la_out_swbd_3_M04_SC_REQ,aw_la_out_swbd_3_M03_SC_REQ,aw_la_out_swbd_3_M02_SC_REQ,aw_la_out_swbd_3_M01_SC_REQ,aw_la_out_swbd_3_M00_SC_REQ}),
        .m_sc_send({aw_la_out_swbd_3_M05_SC_SEND,aw_la_out_swbd_3_M04_SC_SEND,aw_la_out_swbd_3_M03_SC_SEND,aw_la_out_swbd_3_M02_SC_SEND,aw_la_out_swbd_3_M01_SC_SEND,aw_la_out_swbd_3_M00_SC_SEND}),
        .s_sc_info(S00_SC_AW_1_INFO),
        .s_sc_payld(S00_SC_AW_1_PAYLD),
        .s_sc_recv(S00_SC_AW_1_RECV),
        .s_sc_req(S00_SC_AW_1_REQ),
        .s_sc_send(S00_SC_AW_1_SEND));
  bd_afc3_binsw_4 b_la_out_swbd_3
       (.aclk(aclk_1),
        .aclken(1'b1),
        .m_sc_info(b_la_out_swbd_3_M00_SC_INFO),
        .m_sc_payld(b_la_out_swbd_3_M00_SC_PAYLD),
        .m_sc_recv(b_la_out_swbd_3_M00_SC_RECV),
        .m_sc_req(b_la_out_swbd_3_M00_SC_REQ),
        .m_sc_send(b_la_out_swbd_3_M00_SC_SEND),
        .s_sc_info({S05_SC_B_1_INFO,S04_SC_B_1_INFO,S03_SC_B_1_INFO,S02_SC_B_1_INFO,S01_SC_B_1_INFO,S00_SC_B_1_INFO}),
        .s_sc_payld({S05_SC_B_1_PAYLD,S04_SC_B_1_PAYLD,S03_SC_B_1_PAYLD,S02_SC_B_1_PAYLD,S01_SC_B_1_PAYLD,S00_SC_B_1_PAYLD}),
        .s_sc_recv({S05_SC_B_1_RECV,S04_SC_B_1_RECV,S03_SC_B_1_RECV,S02_SC_B_1_RECV,S01_SC_B_1_RECV,S00_SC_B_1_RECV}),
        .s_sc_req({S05_SC_B_1_REQ,S04_SC_B_1_REQ,S03_SC_B_1_REQ,S02_SC_B_1_REQ,S01_SC_B_1_REQ,S00_SC_B_1_REQ}),
        .s_sc_send({S05_SC_B_1_SEND,S04_SC_B_1_SEND,S03_SC_B_1_SEND,S02_SC_B_1_SEND,S01_SC_B_1_SEND,S00_SC_B_1_SEND}));
  bd_afc3_rinsw_4 r_la_out_swbd_3
       (.aclk(aclk_1),
        .aclken(1'b1),
        .m_sc_info(r_la_out_swbd_3_M00_SC_INFO),
        .m_sc_payld(r_la_out_swbd_3_M00_SC_PAYLD),
        .m_sc_recv(r_la_out_swbd_3_M00_SC_RECV),
        .m_sc_req(r_la_out_swbd_3_M00_SC_REQ),
        .m_sc_send(r_la_out_swbd_3_M00_SC_SEND),
        .s_sc_info({S05_SC_R_1_INFO,S04_SC_R_1_INFO,S03_SC_R_1_INFO,S02_SC_R_1_INFO,S01_SC_R_1_INFO,S00_SC_R_1_INFO}),
        .s_sc_payld({S05_SC_R_1_PAYLD,S04_SC_R_1_PAYLD,S03_SC_R_1_PAYLD,S02_SC_R_1_PAYLD,S01_SC_R_1_PAYLD,S00_SC_R_1_PAYLD}),
        .s_sc_recv({S05_SC_R_1_RECV,S04_SC_R_1_RECV,S03_SC_R_1_RECV,S02_SC_R_1_RECV,S01_SC_R_1_RECV,S00_SC_R_1_RECV}),
        .s_sc_req({S05_SC_R_1_REQ,S04_SC_R_1_REQ,S03_SC_R_1_REQ,S02_SC_R_1_REQ,S01_SC_R_1_REQ,S00_SC_R_1_REQ}),
        .s_sc_send({S05_SC_R_1_SEND,S04_SC_R_1_SEND,S03_SC_R_1_SEND,S02_SC_R_1_SEND,S01_SC_R_1_SEND,S00_SC_R_1_SEND}));
  bd_afc3_winsw_4 w_la_out_swbd_3
       (.aclk(aclk_1),
        .aclken(1'b1),
        .m_sc_info({w_la_out_swbd_3_M05_SC_INFO,w_la_out_swbd_3_M04_SC_INFO,w_la_out_swbd_3_M03_SC_INFO,w_la_out_swbd_3_M02_SC_INFO,w_la_out_swbd_3_M01_SC_INFO,w_la_out_swbd_3_M00_SC_INFO}),
        .m_sc_payld({w_la_out_swbd_3_M05_SC_PAYLD,w_la_out_swbd_3_M04_SC_PAYLD,w_la_out_swbd_3_M03_SC_PAYLD,w_la_out_swbd_3_M02_SC_PAYLD,w_la_out_swbd_3_M01_SC_PAYLD,w_la_out_swbd_3_M00_SC_PAYLD}),
        .m_sc_recv({w_la_out_swbd_3_M05_SC_RECV,w_la_out_swbd_3_M04_SC_RECV,w_la_out_swbd_3_M03_SC_RECV,w_la_out_swbd_3_M02_SC_RECV,w_la_out_swbd_3_M01_SC_RECV,w_la_out_swbd_3_M00_SC_RECV}),
        .m_sc_req({w_la_out_swbd_3_M05_SC_REQ,w_la_out_swbd_3_M04_SC_REQ,w_la_out_swbd_3_M03_SC_REQ,w_la_out_swbd_3_M02_SC_REQ,w_la_out_swbd_3_M01_SC_REQ,w_la_out_swbd_3_M00_SC_REQ}),
        .m_sc_send({w_la_out_swbd_3_M05_SC_SEND,w_la_out_swbd_3_M04_SC_SEND,w_la_out_swbd_3_M03_SC_SEND,w_la_out_swbd_3_M02_SC_SEND,w_la_out_swbd_3_M01_SC_SEND,w_la_out_swbd_3_M00_SC_SEND}),
        .s_sc_info(S00_SC_W_1_INFO),
        .s_sc_payld(S00_SC_W_1_PAYLD),
        .s_sc_recv(S00_SC_W_1_RECV),
        .s_sc_req(S00_SC_W_1_REQ),
        .s_sc_send(S00_SC_W_1_SEND));
endmodule

module out_swbd_4_imp_1W8CTSE
   (M00_SC_AR_info,
    M00_SC_AR_payld,
    M00_SC_AR_recv,
    M00_SC_AR_req,
    M00_SC_AR_send,
    M00_SC_AW_info,
    M00_SC_AW_payld,
    M00_SC_AW_recv,
    M00_SC_AW_req,
    M00_SC_AW_send,
    M00_SC_B_info,
    M00_SC_B_payld,
    M00_SC_B_recv,
    M00_SC_B_req,
    M00_SC_B_send,
    M00_SC_R_info,
    M00_SC_R_payld,
    M00_SC_R_recv,
    M00_SC_R_req,
    M00_SC_R_send,
    M00_SC_W_info,
    M00_SC_W_payld,
    M00_SC_W_recv,
    M00_SC_W_req,
    M00_SC_W_send,
    M01_SC_AR_info,
    M01_SC_AR_payld,
    M01_SC_AR_recv,
    M01_SC_AR_req,
    M01_SC_AR_send,
    M01_SC_AW_info,
    M01_SC_AW_payld,
    M01_SC_AW_recv,
    M01_SC_AW_req,
    M01_SC_AW_send,
    M01_SC_W_info,
    M01_SC_W_payld,
    M01_SC_W_recv,
    M01_SC_W_req,
    M01_SC_W_send,
    M02_SC_AR_info,
    M02_SC_AR_payld,
    M02_SC_AR_recv,
    M02_SC_AR_req,
    M02_SC_AR_send,
    M02_SC_AW_info,
    M02_SC_AW_payld,
    M02_SC_AW_recv,
    M02_SC_AW_req,
    M02_SC_AW_send,
    M02_SC_W_info,
    M02_SC_W_payld,
    M02_SC_W_recv,
    M02_SC_W_req,
    M02_SC_W_send,
    M03_SC_AR_info,
    M03_SC_AR_payld,
    M03_SC_AR_recv,
    M03_SC_AR_req,
    M03_SC_AR_send,
    M03_SC_AW_info,
    M03_SC_AW_payld,
    M03_SC_AW_recv,
    M03_SC_AW_req,
    M03_SC_AW_send,
    M03_SC_W_info,
    M03_SC_W_payld,
    M03_SC_W_recv,
    M03_SC_W_req,
    M03_SC_W_send,
    M04_SC_AR_info,
    M04_SC_AR_payld,
    M04_SC_AR_recv,
    M04_SC_AR_req,
    M04_SC_AR_send,
    M04_SC_AW_info,
    M04_SC_AW_payld,
    M04_SC_AW_recv,
    M04_SC_AW_req,
    M04_SC_AW_send,
    M04_SC_W_info,
    M04_SC_W_payld,
    M04_SC_W_recv,
    M04_SC_W_req,
    M04_SC_W_send,
    M05_SC_AR_info,
    M05_SC_AR_payld,
    M05_SC_AR_recv,
    M05_SC_AR_req,
    M05_SC_AR_send,
    M05_SC_AW_info,
    M05_SC_AW_payld,
    M05_SC_AW_recv,
    M05_SC_AW_req,
    M05_SC_AW_send,
    M05_SC_W_info,
    M05_SC_W_payld,
    M05_SC_W_recv,
    M05_SC_W_req,
    M05_SC_W_send,
    S00_SC_AR_info,
    S00_SC_AR_payld,
    S00_SC_AR_recv,
    S00_SC_AR_req,
    S00_SC_AR_send,
    S00_SC_AW_info,
    S00_SC_AW_payld,
    S00_SC_AW_recv,
    S00_SC_AW_req,
    S00_SC_AW_send,
    S00_SC_B_info,
    S00_SC_B_payld,
    S00_SC_B_recv,
    S00_SC_B_req,
    S00_SC_B_send,
    S00_SC_R_info,
    S00_SC_R_payld,
    S00_SC_R_recv,
    S00_SC_R_req,
    S00_SC_R_send,
    S00_SC_W_info,
    S00_SC_W_payld,
    S00_SC_W_recv,
    S00_SC_W_req,
    S00_SC_W_send,
    S01_SC_B_info,
    S01_SC_B_payld,
    S01_SC_B_recv,
    S01_SC_B_req,
    S01_SC_B_send,
    S01_SC_R_info,
    S01_SC_R_payld,
    S01_SC_R_recv,
    S01_SC_R_req,
    S01_SC_R_send,
    S02_SC_B_info,
    S02_SC_B_payld,
    S02_SC_B_recv,
    S02_SC_B_req,
    S02_SC_B_send,
    S02_SC_R_info,
    S02_SC_R_payld,
    S02_SC_R_recv,
    S02_SC_R_req,
    S02_SC_R_send,
    S03_SC_B_info,
    S03_SC_B_payld,
    S03_SC_B_recv,
    S03_SC_B_req,
    S03_SC_B_send,
    S03_SC_R_info,
    S03_SC_R_payld,
    S03_SC_R_recv,
    S03_SC_R_req,
    S03_SC_R_send,
    S04_SC_B_info,
    S04_SC_B_payld,
    S04_SC_B_recv,
    S04_SC_B_req,
    S04_SC_B_send,
    S04_SC_R_info,
    S04_SC_R_payld,
    S04_SC_R_recv,
    S04_SC_R_req,
    S04_SC_R_send,
    S05_SC_B_info,
    S05_SC_B_payld,
    S05_SC_B_recv,
    S05_SC_B_req,
    S05_SC_B_send,
    S05_SC_R_info,
    S05_SC_R_payld,
    S05_SC_R_recv,
    S05_SC_R_req,
    S05_SC_R_send,
    aclk);
  output [0:0]M00_SC_AR_info;
  output [181:0]M00_SC_AR_payld;
  input [0:0]M00_SC_AR_recv;
  output [0:0]M00_SC_AR_req;
  output [0:0]M00_SC_AR_send;
  output [0:0]M00_SC_AW_info;
  output [181:0]M00_SC_AW_payld;
  input [0:0]M00_SC_AW_recv;
  output [0:0]M00_SC_AW_req;
  output [0:0]M00_SC_AW_send;
  output [5:0]M00_SC_B_info;
  output [8:0]M00_SC_B_payld;
  input [5:0]M00_SC_B_recv;
  output [5:0]M00_SC_B_req;
  output [5:0]M00_SC_B_send;
  output [5:0]M00_SC_R_info;
  output [54:0]M00_SC_R_payld;
  input [5:0]M00_SC_R_recv;
  output [5:0]M00_SC_R_req;
  output [5:0]M00_SC_R_send;
  output [0:0]M00_SC_W_info;
  output [68:0]M00_SC_W_payld;
  input [0:0]M00_SC_W_recv;
  output [0:0]M00_SC_W_req;
  output [0:0]M00_SC_W_send;
  output [0:0]M01_SC_AR_info;
  output [181:0]M01_SC_AR_payld;
  input [0:0]M01_SC_AR_recv;
  output [0:0]M01_SC_AR_req;
  output [0:0]M01_SC_AR_send;
  output [0:0]M01_SC_AW_info;
  output [181:0]M01_SC_AW_payld;
  input [0:0]M01_SC_AW_recv;
  output [0:0]M01_SC_AW_req;
  output [0:0]M01_SC_AW_send;
  output [0:0]M01_SC_W_info;
  output [68:0]M01_SC_W_payld;
  input [0:0]M01_SC_W_recv;
  output [0:0]M01_SC_W_req;
  output [0:0]M01_SC_W_send;
  output [0:0]M02_SC_AR_info;
  output [181:0]M02_SC_AR_payld;
  input [0:0]M02_SC_AR_recv;
  output [0:0]M02_SC_AR_req;
  output [0:0]M02_SC_AR_send;
  output [0:0]M02_SC_AW_info;
  output [181:0]M02_SC_AW_payld;
  input [0:0]M02_SC_AW_recv;
  output [0:0]M02_SC_AW_req;
  output [0:0]M02_SC_AW_send;
  output [0:0]M02_SC_W_info;
  output [68:0]M02_SC_W_payld;
  input [0:0]M02_SC_W_recv;
  output [0:0]M02_SC_W_req;
  output [0:0]M02_SC_W_send;
  output [0:0]M03_SC_AR_info;
  output [181:0]M03_SC_AR_payld;
  input [0:0]M03_SC_AR_recv;
  output [0:0]M03_SC_AR_req;
  output [0:0]M03_SC_AR_send;
  output [0:0]M03_SC_AW_info;
  output [181:0]M03_SC_AW_payld;
  input [0:0]M03_SC_AW_recv;
  output [0:0]M03_SC_AW_req;
  output [0:0]M03_SC_AW_send;
  output [0:0]M03_SC_W_info;
  output [68:0]M03_SC_W_payld;
  input [0:0]M03_SC_W_recv;
  output [0:0]M03_SC_W_req;
  output [0:0]M03_SC_W_send;
  output [0:0]M04_SC_AR_info;
  output [181:0]M04_SC_AR_payld;
  input [0:0]M04_SC_AR_recv;
  output [0:0]M04_SC_AR_req;
  output [0:0]M04_SC_AR_send;
  output [0:0]M04_SC_AW_info;
  output [181:0]M04_SC_AW_payld;
  input [0:0]M04_SC_AW_recv;
  output [0:0]M04_SC_AW_req;
  output [0:0]M04_SC_AW_send;
  output [0:0]M04_SC_W_info;
  output [68:0]M04_SC_W_payld;
  input [0:0]M04_SC_W_recv;
  output [0:0]M04_SC_W_req;
  output [0:0]M04_SC_W_send;
  output [0:0]M05_SC_AR_info;
  output [181:0]M05_SC_AR_payld;
  input [0:0]M05_SC_AR_recv;
  output [0:0]M05_SC_AR_req;
  output [0:0]M05_SC_AR_send;
  output [0:0]M05_SC_AW_info;
  output [181:0]M05_SC_AW_payld;
  input [0:0]M05_SC_AW_recv;
  output [0:0]M05_SC_AW_req;
  output [0:0]M05_SC_AW_send;
  output [0:0]M05_SC_W_info;
  output [68:0]M05_SC_W_payld;
  input [0:0]M05_SC_W_recv;
  output [0:0]M05_SC_W_req;
  output [0:0]M05_SC_W_send;
  input [5:0]S00_SC_AR_info;
  input [181:0]S00_SC_AR_payld;
  output [5:0]S00_SC_AR_recv;
  input [5:0]S00_SC_AR_req;
  input [5:0]S00_SC_AR_send;
  input [5:0]S00_SC_AW_info;
  input [181:0]S00_SC_AW_payld;
  output [5:0]S00_SC_AW_recv;
  input [5:0]S00_SC_AW_req;
  input [5:0]S00_SC_AW_send;
  input [0:0]S00_SC_B_info;
  input [8:0]S00_SC_B_payld;
  output [0:0]S00_SC_B_recv;
  input [0:0]S00_SC_B_req;
  input [0:0]S00_SC_B_send;
  input [0:0]S00_SC_R_info;
  input [54:0]S00_SC_R_payld;
  output [0:0]S00_SC_R_recv;
  input [0:0]S00_SC_R_req;
  input [0:0]S00_SC_R_send;
  input [5:0]S00_SC_W_info;
  input [68:0]S00_SC_W_payld;
  output [5:0]S00_SC_W_recv;
  input [5:0]S00_SC_W_req;
  input [5:0]S00_SC_W_send;
  input [0:0]S01_SC_B_info;
  input [8:0]S01_SC_B_payld;
  output [0:0]S01_SC_B_recv;
  input [0:0]S01_SC_B_req;
  input [0:0]S01_SC_B_send;
  input [0:0]S01_SC_R_info;
  input [54:0]S01_SC_R_payld;
  output [0:0]S01_SC_R_recv;
  input [0:0]S01_SC_R_req;
  input [0:0]S01_SC_R_send;
  input [0:0]S02_SC_B_info;
  input [8:0]S02_SC_B_payld;
  output [0:0]S02_SC_B_recv;
  input [0:0]S02_SC_B_req;
  input [0:0]S02_SC_B_send;
  input [0:0]S02_SC_R_info;
  input [54:0]S02_SC_R_payld;
  output [0:0]S02_SC_R_recv;
  input [0:0]S02_SC_R_req;
  input [0:0]S02_SC_R_send;
  input [0:0]S03_SC_B_info;
  input [8:0]S03_SC_B_payld;
  output [0:0]S03_SC_B_recv;
  input [0:0]S03_SC_B_req;
  input [0:0]S03_SC_B_send;
  input [0:0]S03_SC_R_info;
  input [54:0]S03_SC_R_payld;
  output [0:0]S03_SC_R_recv;
  input [0:0]S03_SC_R_req;
  input [0:0]S03_SC_R_send;
  input [0:0]S04_SC_B_info;
  input [8:0]S04_SC_B_payld;
  output [0:0]S04_SC_B_recv;
  input [0:0]S04_SC_B_req;
  input [0:0]S04_SC_B_send;
  input [0:0]S04_SC_R_info;
  input [54:0]S04_SC_R_payld;
  output [0:0]S04_SC_R_recv;
  input [0:0]S04_SC_R_req;
  input [0:0]S04_SC_R_send;
  input [0:0]S05_SC_B_info;
  input [8:0]S05_SC_B_payld;
  output [0:0]S05_SC_B_recv;
  input [0:0]S05_SC_B_req;
  input [0:0]S05_SC_B_send;
  input [0:0]S05_SC_R_info;
  input [54:0]S05_SC_R_payld;
  output [0:0]S05_SC_R_recv;
  input [0:0]S05_SC_R_req;
  input [0:0]S05_SC_R_send;
  input aclk;

  wire [5:0]S00_SC_AR_1_INFO;
  wire [181:0]S00_SC_AR_1_PAYLD;
  wire [5:0]S00_SC_AR_1_RECV;
  wire [5:0]S00_SC_AR_1_REQ;
  wire [5:0]S00_SC_AR_1_SEND;
  wire [5:0]S00_SC_AW_1_INFO;
  wire [181:0]S00_SC_AW_1_PAYLD;
  wire [5:0]S00_SC_AW_1_RECV;
  wire [5:0]S00_SC_AW_1_REQ;
  wire [5:0]S00_SC_AW_1_SEND;
  wire [0:0]S00_SC_B_1_INFO;
  wire [8:0]S00_SC_B_1_PAYLD;
  wire [0:0]S00_SC_B_1_RECV;
  wire [0:0]S00_SC_B_1_REQ;
  wire [0:0]S00_SC_B_1_SEND;
  wire [0:0]S00_SC_R_1_INFO;
  wire [54:0]S00_SC_R_1_PAYLD;
  wire [0:0]S00_SC_R_1_RECV;
  wire [0:0]S00_SC_R_1_REQ;
  wire [0:0]S00_SC_R_1_SEND;
  wire [5:0]S00_SC_W_1_INFO;
  wire [68:0]S00_SC_W_1_PAYLD;
  wire [5:0]S00_SC_W_1_RECV;
  wire [5:0]S00_SC_W_1_REQ;
  wire [5:0]S00_SC_W_1_SEND;
  wire [0:0]S01_SC_B_1_INFO;
  wire [8:0]S01_SC_B_1_PAYLD;
  wire [1:1]S01_SC_B_1_RECV;
  wire [0:0]S01_SC_B_1_REQ;
  wire [0:0]S01_SC_B_1_SEND;
  wire [0:0]S01_SC_R_1_INFO;
  wire [54:0]S01_SC_R_1_PAYLD;
  wire [1:1]S01_SC_R_1_RECV;
  wire [0:0]S01_SC_R_1_REQ;
  wire [0:0]S01_SC_R_1_SEND;
  wire [0:0]S02_SC_B_1_INFO;
  wire [8:0]S02_SC_B_1_PAYLD;
  wire [2:2]S02_SC_B_1_RECV;
  wire [0:0]S02_SC_B_1_REQ;
  wire [0:0]S02_SC_B_1_SEND;
  wire [0:0]S02_SC_R_1_INFO;
  wire [54:0]S02_SC_R_1_PAYLD;
  wire [2:2]S02_SC_R_1_RECV;
  wire [0:0]S02_SC_R_1_REQ;
  wire [0:0]S02_SC_R_1_SEND;
  wire [0:0]S03_SC_B_1_INFO;
  wire [8:0]S03_SC_B_1_PAYLD;
  wire [3:3]S03_SC_B_1_RECV;
  wire [0:0]S03_SC_B_1_REQ;
  wire [0:0]S03_SC_B_1_SEND;
  wire [0:0]S03_SC_R_1_INFO;
  wire [54:0]S03_SC_R_1_PAYLD;
  wire [3:3]S03_SC_R_1_RECV;
  wire [0:0]S03_SC_R_1_REQ;
  wire [0:0]S03_SC_R_1_SEND;
  wire [0:0]S04_SC_B_1_INFO;
  wire [8:0]S04_SC_B_1_PAYLD;
  wire [4:4]S04_SC_B_1_RECV;
  wire [0:0]S04_SC_B_1_REQ;
  wire [0:0]S04_SC_B_1_SEND;
  wire [0:0]S04_SC_R_1_INFO;
  wire [54:0]S04_SC_R_1_PAYLD;
  wire [4:4]S04_SC_R_1_RECV;
  wire [0:0]S04_SC_R_1_REQ;
  wire [0:0]S04_SC_R_1_SEND;
  wire [0:0]S05_SC_B_1_INFO;
  wire [8:0]S05_SC_B_1_PAYLD;
  wire [5:5]S05_SC_B_1_RECV;
  wire [0:0]S05_SC_B_1_REQ;
  wire [0:0]S05_SC_B_1_SEND;
  wire [0:0]S05_SC_R_1_INFO;
  wire [54:0]S05_SC_R_1_PAYLD;
  wire [5:5]S05_SC_R_1_RECV;
  wire [0:0]S05_SC_R_1_REQ;
  wire [0:0]S05_SC_R_1_SEND;
  wire aclk_1;
  wire [0:0]ar_la_out_swbd_4_M00_SC_INFO;
  wire [181:0]ar_la_out_swbd_4_M00_SC_PAYLD;
  wire [0:0]ar_la_out_swbd_4_M00_SC_RECV;
  wire [0:0]ar_la_out_swbd_4_M00_SC_REQ;
  wire [0:0]ar_la_out_swbd_4_M00_SC_SEND;
  wire [1:1]ar_la_out_swbd_4_M01_SC_INFO;
  wire [363:182]ar_la_out_swbd_4_M01_SC_PAYLD;
  wire [0:0]ar_la_out_swbd_4_M01_SC_RECV;
  wire [1:1]ar_la_out_swbd_4_M01_SC_REQ;
  wire [1:1]ar_la_out_swbd_4_M01_SC_SEND;
  wire [2:2]ar_la_out_swbd_4_M02_SC_INFO;
  wire [545:364]ar_la_out_swbd_4_M02_SC_PAYLD;
  wire [0:0]ar_la_out_swbd_4_M02_SC_RECV;
  wire [2:2]ar_la_out_swbd_4_M02_SC_REQ;
  wire [2:2]ar_la_out_swbd_4_M02_SC_SEND;
  wire [3:3]ar_la_out_swbd_4_M03_SC_INFO;
  wire [727:546]ar_la_out_swbd_4_M03_SC_PAYLD;
  wire [0:0]ar_la_out_swbd_4_M03_SC_RECV;
  wire [3:3]ar_la_out_swbd_4_M03_SC_REQ;
  wire [3:3]ar_la_out_swbd_4_M03_SC_SEND;
  wire [4:4]ar_la_out_swbd_4_M04_SC_INFO;
  wire [909:728]ar_la_out_swbd_4_M04_SC_PAYLD;
  wire [0:0]ar_la_out_swbd_4_M04_SC_RECV;
  wire [4:4]ar_la_out_swbd_4_M04_SC_REQ;
  wire [4:4]ar_la_out_swbd_4_M04_SC_SEND;
  wire [5:5]ar_la_out_swbd_4_M05_SC_INFO;
  wire [1091:910]ar_la_out_swbd_4_M05_SC_PAYLD;
  wire [0:0]ar_la_out_swbd_4_M05_SC_RECV;
  wire [5:5]ar_la_out_swbd_4_M05_SC_REQ;
  wire [5:5]ar_la_out_swbd_4_M05_SC_SEND;
  wire [0:0]aw_la_out_swbd_4_M00_SC_INFO;
  wire [181:0]aw_la_out_swbd_4_M00_SC_PAYLD;
  wire [0:0]aw_la_out_swbd_4_M00_SC_RECV;
  wire [0:0]aw_la_out_swbd_4_M00_SC_REQ;
  wire [0:0]aw_la_out_swbd_4_M00_SC_SEND;
  wire [1:1]aw_la_out_swbd_4_M01_SC_INFO;
  wire [363:182]aw_la_out_swbd_4_M01_SC_PAYLD;
  wire [0:0]aw_la_out_swbd_4_M01_SC_RECV;
  wire [1:1]aw_la_out_swbd_4_M01_SC_REQ;
  wire [1:1]aw_la_out_swbd_4_M01_SC_SEND;
  wire [2:2]aw_la_out_swbd_4_M02_SC_INFO;
  wire [545:364]aw_la_out_swbd_4_M02_SC_PAYLD;
  wire [0:0]aw_la_out_swbd_4_M02_SC_RECV;
  wire [2:2]aw_la_out_swbd_4_M02_SC_REQ;
  wire [2:2]aw_la_out_swbd_4_M02_SC_SEND;
  wire [3:3]aw_la_out_swbd_4_M03_SC_INFO;
  wire [727:546]aw_la_out_swbd_4_M03_SC_PAYLD;
  wire [0:0]aw_la_out_swbd_4_M03_SC_RECV;
  wire [3:3]aw_la_out_swbd_4_M03_SC_REQ;
  wire [3:3]aw_la_out_swbd_4_M03_SC_SEND;
  wire [4:4]aw_la_out_swbd_4_M04_SC_INFO;
  wire [909:728]aw_la_out_swbd_4_M04_SC_PAYLD;
  wire [0:0]aw_la_out_swbd_4_M04_SC_RECV;
  wire [4:4]aw_la_out_swbd_4_M04_SC_REQ;
  wire [4:4]aw_la_out_swbd_4_M04_SC_SEND;
  wire [5:5]aw_la_out_swbd_4_M05_SC_INFO;
  wire [1091:910]aw_la_out_swbd_4_M05_SC_PAYLD;
  wire [0:0]aw_la_out_swbd_4_M05_SC_RECV;
  wire [5:5]aw_la_out_swbd_4_M05_SC_REQ;
  wire [5:5]aw_la_out_swbd_4_M05_SC_SEND;
  wire [5:0]b_la_out_swbd_4_M00_SC_INFO;
  wire [8:0]b_la_out_swbd_4_M00_SC_PAYLD;
  wire [5:0]b_la_out_swbd_4_M00_SC_RECV;
  wire [5:0]b_la_out_swbd_4_M00_SC_REQ;
  wire [5:0]b_la_out_swbd_4_M00_SC_SEND;
  wire [5:0]r_la_out_swbd_4_M00_SC_INFO;
  wire [54:0]r_la_out_swbd_4_M00_SC_PAYLD;
  wire [5:0]r_la_out_swbd_4_M00_SC_RECV;
  wire [5:0]r_la_out_swbd_4_M00_SC_REQ;
  wire [5:0]r_la_out_swbd_4_M00_SC_SEND;
  wire [0:0]w_la_out_swbd_4_M00_SC_INFO;
  wire [68:0]w_la_out_swbd_4_M00_SC_PAYLD;
  wire [0:0]w_la_out_swbd_4_M00_SC_RECV;
  wire [0:0]w_la_out_swbd_4_M00_SC_REQ;
  wire [0:0]w_la_out_swbd_4_M00_SC_SEND;
  wire [1:1]w_la_out_swbd_4_M01_SC_INFO;
  wire [137:69]w_la_out_swbd_4_M01_SC_PAYLD;
  wire [0:0]w_la_out_swbd_4_M01_SC_RECV;
  wire [1:1]w_la_out_swbd_4_M01_SC_REQ;
  wire [1:1]w_la_out_swbd_4_M01_SC_SEND;
  wire [2:2]w_la_out_swbd_4_M02_SC_INFO;
  wire [206:138]w_la_out_swbd_4_M02_SC_PAYLD;
  wire [0:0]w_la_out_swbd_4_M02_SC_RECV;
  wire [2:2]w_la_out_swbd_4_M02_SC_REQ;
  wire [2:2]w_la_out_swbd_4_M02_SC_SEND;
  wire [3:3]w_la_out_swbd_4_M03_SC_INFO;
  wire [275:207]w_la_out_swbd_4_M03_SC_PAYLD;
  wire [0:0]w_la_out_swbd_4_M03_SC_RECV;
  wire [3:3]w_la_out_swbd_4_M03_SC_REQ;
  wire [3:3]w_la_out_swbd_4_M03_SC_SEND;
  wire [4:4]w_la_out_swbd_4_M04_SC_INFO;
  wire [344:276]w_la_out_swbd_4_M04_SC_PAYLD;
  wire [0:0]w_la_out_swbd_4_M04_SC_RECV;
  wire [4:4]w_la_out_swbd_4_M04_SC_REQ;
  wire [4:4]w_la_out_swbd_4_M04_SC_SEND;
  wire [5:5]w_la_out_swbd_4_M05_SC_INFO;
  wire [413:345]w_la_out_swbd_4_M05_SC_PAYLD;
  wire [0:0]w_la_out_swbd_4_M05_SC_RECV;
  wire [5:5]w_la_out_swbd_4_M05_SC_REQ;
  wire [5:5]w_la_out_swbd_4_M05_SC_SEND;

  assign M00_SC_AR_info[0] = ar_la_out_swbd_4_M00_SC_INFO;
  assign M00_SC_AR_payld[181:0] = ar_la_out_swbd_4_M00_SC_PAYLD;
  assign M00_SC_AR_req[0] = ar_la_out_swbd_4_M00_SC_REQ;
  assign M00_SC_AR_send[0] = ar_la_out_swbd_4_M00_SC_SEND;
  assign M00_SC_AW_info[0] = aw_la_out_swbd_4_M00_SC_INFO;
  assign M00_SC_AW_payld[181:0] = aw_la_out_swbd_4_M00_SC_PAYLD;
  assign M00_SC_AW_req[0] = aw_la_out_swbd_4_M00_SC_REQ;
  assign M00_SC_AW_send[0] = aw_la_out_swbd_4_M00_SC_SEND;
  assign M00_SC_B_info[5:0] = b_la_out_swbd_4_M00_SC_INFO;
  assign M00_SC_B_payld[8:0] = b_la_out_swbd_4_M00_SC_PAYLD;
  assign M00_SC_B_req[5:0] = b_la_out_swbd_4_M00_SC_REQ;
  assign M00_SC_B_send[5:0] = b_la_out_swbd_4_M00_SC_SEND;
  assign M00_SC_R_info[5:0] = r_la_out_swbd_4_M00_SC_INFO;
  assign M00_SC_R_payld[54:0] = r_la_out_swbd_4_M00_SC_PAYLD;
  assign M00_SC_R_req[5:0] = r_la_out_swbd_4_M00_SC_REQ;
  assign M00_SC_R_send[5:0] = r_la_out_swbd_4_M00_SC_SEND;
  assign M00_SC_W_info[0] = w_la_out_swbd_4_M00_SC_INFO;
  assign M00_SC_W_payld[68:0] = w_la_out_swbd_4_M00_SC_PAYLD;
  assign M00_SC_W_req[0] = w_la_out_swbd_4_M00_SC_REQ;
  assign M00_SC_W_send[0] = w_la_out_swbd_4_M00_SC_SEND;
  assign M01_SC_AR_info[0] = ar_la_out_swbd_4_M01_SC_INFO;
  assign M01_SC_AR_payld[181:0] = ar_la_out_swbd_4_M01_SC_PAYLD;
  assign M01_SC_AR_req[0] = ar_la_out_swbd_4_M01_SC_REQ;
  assign M01_SC_AR_send[0] = ar_la_out_swbd_4_M01_SC_SEND;
  assign M01_SC_AW_info[0] = aw_la_out_swbd_4_M01_SC_INFO;
  assign M01_SC_AW_payld[181:0] = aw_la_out_swbd_4_M01_SC_PAYLD;
  assign M01_SC_AW_req[0] = aw_la_out_swbd_4_M01_SC_REQ;
  assign M01_SC_AW_send[0] = aw_la_out_swbd_4_M01_SC_SEND;
  assign M01_SC_W_info[0] = w_la_out_swbd_4_M01_SC_INFO;
  assign M01_SC_W_payld[68:0] = w_la_out_swbd_4_M01_SC_PAYLD;
  assign M01_SC_W_req[0] = w_la_out_swbd_4_M01_SC_REQ;
  assign M01_SC_W_send[0] = w_la_out_swbd_4_M01_SC_SEND;
  assign M02_SC_AR_info[0] = ar_la_out_swbd_4_M02_SC_INFO;
  assign M02_SC_AR_payld[181:0] = ar_la_out_swbd_4_M02_SC_PAYLD;
  assign M02_SC_AR_req[0] = ar_la_out_swbd_4_M02_SC_REQ;
  assign M02_SC_AR_send[0] = ar_la_out_swbd_4_M02_SC_SEND;
  assign M02_SC_AW_info[0] = aw_la_out_swbd_4_M02_SC_INFO;
  assign M02_SC_AW_payld[181:0] = aw_la_out_swbd_4_M02_SC_PAYLD;
  assign M02_SC_AW_req[0] = aw_la_out_swbd_4_M02_SC_REQ;
  assign M02_SC_AW_send[0] = aw_la_out_swbd_4_M02_SC_SEND;
  assign M02_SC_W_info[0] = w_la_out_swbd_4_M02_SC_INFO;
  assign M02_SC_W_payld[68:0] = w_la_out_swbd_4_M02_SC_PAYLD;
  assign M02_SC_W_req[0] = w_la_out_swbd_4_M02_SC_REQ;
  assign M02_SC_W_send[0] = w_la_out_swbd_4_M02_SC_SEND;
  assign M03_SC_AR_info[0] = ar_la_out_swbd_4_M03_SC_INFO;
  assign M03_SC_AR_payld[181:0] = ar_la_out_swbd_4_M03_SC_PAYLD;
  assign M03_SC_AR_req[0] = ar_la_out_swbd_4_M03_SC_REQ;
  assign M03_SC_AR_send[0] = ar_la_out_swbd_4_M03_SC_SEND;
  assign M03_SC_AW_info[0] = aw_la_out_swbd_4_M03_SC_INFO;
  assign M03_SC_AW_payld[181:0] = aw_la_out_swbd_4_M03_SC_PAYLD;
  assign M03_SC_AW_req[0] = aw_la_out_swbd_4_M03_SC_REQ;
  assign M03_SC_AW_send[0] = aw_la_out_swbd_4_M03_SC_SEND;
  assign M03_SC_W_info[0] = w_la_out_swbd_4_M03_SC_INFO;
  assign M03_SC_W_payld[68:0] = w_la_out_swbd_4_M03_SC_PAYLD;
  assign M03_SC_W_req[0] = w_la_out_swbd_4_M03_SC_REQ;
  assign M03_SC_W_send[0] = w_la_out_swbd_4_M03_SC_SEND;
  assign M04_SC_AR_info[0] = ar_la_out_swbd_4_M04_SC_INFO;
  assign M04_SC_AR_payld[181:0] = ar_la_out_swbd_4_M04_SC_PAYLD;
  assign M04_SC_AR_req[0] = ar_la_out_swbd_4_M04_SC_REQ;
  assign M04_SC_AR_send[0] = ar_la_out_swbd_4_M04_SC_SEND;
  assign M04_SC_AW_info[0] = aw_la_out_swbd_4_M04_SC_INFO;
  assign M04_SC_AW_payld[181:0] = aw_la_out_swbd_4_M04_SC_PAYLD;
  assign M04_SC_AW_req[0] = aw_la_out_swbd_4_M04_SC_REQ;
  assign M04_SC_AW_send[0] = aw_la_out_swbd_4_M04_SC_SEND;
  assign M04_SC_W_info[0] = w_la_out_swbd_4_M04_SC_INFO;
  assign M04_SC_W_payld[68:0] = w_la_out_swbd_4_M04_SC_PAYLD;
  assign M04_SC_W_req[0] = w_la_out_swbd_4_M04_SC_REQ;
  assign M04_SC_W_send[0] = w_la_out_swbd_4_M04_SC_SEND;
  assign M05_SC_AR_info[0] = ar_la_out_swbd_4_M05_SC_INFO;
  assign M05_SC_AR_payld[181:0] = ar_la_out_swbd_4_M05_SC_PAYLD;
  assign M05_SC_AR_req[0] = ar_la_out_swbd_4_M05_SC_REQ;
  assign M05_SC_AR_send[0] = ar_la_out_swbd_4_M05_SC_SEND;
  assign M05_SC_AW_info[0] = aw_la_out_swbd_4_M05_SC_INFO;
  assign M05_SC_AW_payld[181:0] = aw_la_out_swbd_4_M05_SC_PAYLD;
  assign M05_SC_AW_req[0] = aw_la_out_swbd_4_M05_SC_REQ;
  assign M05_SC_AW_send[0] = aw_la_out_swbd_4_M05_SC_SEND;
  assign M05_SC_W_info[0] = w_la_out_swbd_4_M05_SC_INFO;
  assign M05_SC_W_payld[68:0] = w_la_out_swbd_4_M05_SC_PAYLD;
  assign M05_SC_W_req[0] = w_la_out_swbd_4_M05_SC_REQ;
  assign M05_SC_W_send[0] = w_la_out_swbd_4_M05_SC_SEND;
  assign S00_SC_AR_1_INFO = S00_SC_AR_info[5:0];
  assign S00_SC_AR_1_PAYLD = S00_SC_AR_payld[181:0];
  assign S00_SC_AR_1_REQ = S00_SC_AR_req[5:0];
  assign S00_SC_AR_1_SEND = S00_SC_AR_send[5:0];
  assign S00_SC_AR_recv[5:0] = S00_SC_AR_1_RECV;
  assign S00_SC_AW_1_INFO = S00_SC_AW_info[5:0];
  assign S00_SC_AW_1_PAYLD = S00_SC_AW_payld[181:0];
  assign S00_SC_AW_1_REQ = S00_SC_AW_req[5:0];
  assign S00_SC_AW_1_SEND = S00_SC_AW_send[5:0];
  assign S00_SC_AW_recv[5:0] = S00_SC_AW_1_RECV;
  assign S00_SC_B_1_INFO = S00_SC_B_info[0];
  assign S00_SC_B_1_PAYLD = S00_SC_B_payld[8:0];
  assign S00_SC_B_1_REQ = S00_SC_B_req[0];
  assign S00_SC_B_1_SEND = S00_SC_B_send[0];
  assign S00_SC_B_recv[0] = S00_SC_B_1_RECV;
  assign S00_SC_R_1_INFO = S00_SC_R_info[0];
  assign S00_SC_R_1_PAYLD = S00_SC_R_payld[54:0];
  assign S00_SC_R_1_REQ = S00_SC_R_req[0];
  assign S00_SC_R_1_SEND = S00_SC_R_send[0];
  assign S00_SC_R_recv[0] = S00_SC_R_1_RECV;
  assign S00_SC_W_1_INFO = S00_SC_W_info[5:0];
  assign S00_SC_W_1_PAYLD = S00_SC_W_payld[68:0];
  assign S00_SC_W_1_REQ = S00_SC_W_req[5:0];
  assign S00_SC_W_1_SEND = S00_SC_W_send[5:0];
  assign S00_SC_W_recv[5:0] = S00_SC_W_1_RECV;
  assign S01_SC_B_1_INFO = S01_SC_B_info[0];
  assign S01_SC_B_1_PAYLD = S01_SC_B_payld[8:0];
  assign S01_SC_B_1_REQ = S01_SC_B_req[0];
  assign S01_SC_B_1_SEND = S01_SC_B_send[0];
  assign S01_SC_B_recv[0] = S01_SC_B_1_RECV;
  assign S01_SC_R_1_INFO = S01_SC_R_info[0];
  assign S01_SC_R_1_PAYLD = S01_SC_R_payld[54:0];
  assign S01_SC_R_1_REQ = S01_SC_R_req[0];
  assign S01_SC_R_1_SEND = S01_SC_R_send[0];
  assign S01_SC_R_recv[0] = S01_SC_R_1_RECV;
  assign S02_SC_B_1_INFO = S02_SC_B_info[0];
  assign S02_SC_B_1_PAYLD = S02_SC_B_payld[8:0];
  assign S02_SC_B_1_REQ = S02_SC_B_req[0];
  assign S02_SC_B_1_SEND = S02_SC_B_send[0];
  assign S02_SC_B_recv[0] = S02_SC_B_1_RECV;
  assign S02_SC_R_1_INFO = S02_SC_R_info[0];
  assign S02_SC_R_1_PAYLD = S02_SC_R_payld[54:0];
  assign S02_SC_R_1_REQ = S02_SC_R_req[0];
  assign S02_SC_R_1_SEND = S02_SC_R_send[0];
  assign S02_SC_R_recv[0] = S02_SC_R_1_RECV;
  assign S03_SC_B_1_INFO = S03_SC_B_info[0];
  assign S03_SC_B_1_PAYLD = S03_SC_B_payld[8:0];
  assign S03_SC_B_1_REQ = S03_SC_B_req[0];
  assign S03_SC_B_1_SEND = S03_SC_B_send[0];
  assign S03_SC_B_recv[0] = S03_SC_B_1_RECV;
  assign S03_SC_R_1_INFO = S03_SC_R_info[0];
  assign S03_SC_R_1_PAYLD = S03_SC_R_payld[54:0];
  assign S03_SC_R_1_REQ = S03_SC_R_req[0];
  assign S03_SC_R_1_SEND = S03_SC_R_send[0];
  assign S03_SC_R_recv[0] = S03_SC_R_1_RECV;
  assign S04_SC_B_1_INFO = S04_SC_B_info[0];
  assign S04_SC_B_1_PAYLD = S04_SC_B_payld[8:0];
  assign S04_SC_B_1_REQ = S04_SC_B_req[0];
  assign S04_SC_B_1_SEND = S04_SC_B_send[0];
  assign S04_SC_B_recv[0] = S04_SC_B_1_RECV;
  assign S04_SC_R_1_INFO = S04_SC_R_info[0];
  assign S04_SC_R_1_PAYLD = S04_SC_R_payld[54:0];
  assign S04_SC_R_1_REQ = S04_SC_R_req[0];
  assign S04_SC_R_1_SEND = S04_SC_R_send[0];
  assign S04_SC_R_recv[0] = S04_SC_R_1_RECV;
  assign S05_SC_B_1_INFO = S05_SC_B_info[0];
  assign S05_SC_B_1_PAYLD = S05_SC_B_payld[8:0];
  assign S05_SC_B_1_REQ = S05_SC_B_req[0];
  assign S05_SC_B_1_SEND = S05_SC_B_send[0];
  assign S05_SC_B_recv[0] = S05_SC_B_1_RECV;
  assign S05_SC_R_1_INFO = S05_SC_R_info[0];
  assign S05_SC_R_1_PAYLD = S05_SC_R_payld[54:0];
  assign S05_SC_R_1_REQ = S05_SC_R_req[0];
  assign S05_SC_R_1_SEND = S05_SC_R_send[0];
  assign S05_SC_R_recv[0] = S05_SC_R_1_RECV;
  assign aclk_1 = aclk;
  assign ar_la_out_swbd_4_M00_SC_RECV = M00_SC_AR_recv[0];
  assign ar_la_out_swbd_4_M01_SC_RECV = M01_SC_AR_recv[0];
  assign ar_la_out_swbd_4_M02_SC_RECV = M02_SC_AR_recv[0];
  assign ar_la_out_swbd_4_M03_SC_RECV = M03_SC_AR_recv[0];
  assign ar_la_out_swbd_4_M04_SC_RECV = M04_SC_AR_recv[0];
  assign ar_la_out_swbd_4_M05_SC_RECV = M05_SC_AR_recv[0];
  assign aw_la_out_swbd_4_M00_SC_RECV = M00_SC_AW_recv[0];
  assign aw_la_out_swbd_4_M01_SC_RECV = M01_SC_AW_recv[0];
  assign aw_la_out_swbd_4_M02_SC_RECV = M02_SC_AW_recv[0];
  assign aw_la_out_swbd_4_M03_SC_RECV = M03_SC_AW_recv[0];
  assign aw_la_out_swbd_4_M04_SC_RECV = M04_SC_AW_recv[0];
  assign aw_la_out_swbd_4_M05_SC_RECV = M05_SC_AW_recv[0];
  assign b_la_out_swbd_4_M00_SC_RECV = M00_SC_B_recv[5:0];
  assign r_la_out_swbd_4_M00_SC_RECV = M00_SC_R_recv[5:0];
  assign w_la_out_swbd_4_M00_SC_RECV = M00_SC_W_recv[0];
  assign w_la_out_swbd_4_M01_SC_RECV = M01_SC_W_recv[0];
  assign w_la_out_swbd_4_M02_SC_RECV = M02_SC_W_recv[0];
  assign w_la_out_swbd_4_M03_SC_RECV = M03_SC_W_recv[0];
  assign w_la_out_swbd_4_M04_SC_RECV = M04_SC_W_recv[0];
  assign w_la_out_swbd_4_M05_SC_RECV = M05_SC_W_recv[0];
  bd_afc3_arinsw_5 ar_la_out_swbd_4
       (.aclk(aclk_1),
        .aclken(1'b1),
        .m_sc_info({ar_la_out_swbd_4_M05_SC_INFO,ar_la_out_swbd_4_M04_SC_INFO,ar_la_out_swbd_4_M03_SC_INFO,ar_la_out_swbd_4_M02_SC_INFO,ar_la_out_swbd_4_M01_SC_INFO,ar_la_out_swbd_4_M00_SC_INFO}),
        .m_sc_payld({ar_la_out_swbd_4_M05_SC_PAYLD,ar_la_out_swbd_4_M04_SC_PAYLD,ar_la_out_swbd_4_M03_SC_PAYLD,ar_la_out_swbd_4_M02_SC_PAYLD,ar_la_out_swbd_4_M01_SC_PAYLD,ar_la_out_swbd_4_M00_SC_PAYLD}),
        .m_sc_recv({ar_la_out_swbd_4_M05_SC_RECV,ar_la_out_swbd_4_M04_SC_RECV,ar_la_out_swbd_4_M03_SC_RECV,ar_la_out_swbd_4_M02_SC_RECV,ar_la_out_swbd_4_M01_SC_RECV,ar_la_out_swbd_4_M00_SC_RECV}),
        .m_sc_req({ar_la_out_swbd_4_M05_SC_REQ,ar_la_out_swbd_4_M04_SC_REQ,ar_la_out_swbd_4_M03_SC_REQ,ar_la_out_swbd_4_M02_SC_REQ,ar_la_out_swbd_4_M01_SC_REQ,ar_la_out_swbd_4_M00_SC_REQ}),
        .m_sc_send({ar_la_out_swbd_4_M05_SC_SEND,ar_la_out_swbd_4_M04_SC_SEND,ar_la_out_swbd_4_M03_SC_SEND,ar_la_out_swbd_4_M02_SC_SEND,ar_la_out_swbd_4_M01_SC_SEND,ar_la_out_swbd_4_M00_SC_SEND}),
        .s_sc_info(S00_SC_AR_1_INFO),
        .s_sc_payld(S00_SC_AR_1_PAYLD),
        .s_sc_recv(S00_SC_AR_1_RECV),
        .s_sc_req(S00_SC_AR_1_REQ),
        .s_sc_send(S00_SC_AR_1_SEND));
  bd_afc3_awinsw_5 aw_la_out_swbd_4
       (.aclk(aclk_1),
        .aclken(1'b1),
        .m_sc_info({aw_la_out_swbd_4_M05_SC_INFO,aw_la_out_swbd_4_M04_SC_INFO,aw_la_out_swbd_4_M03_SC_INFO,aw_la_out_swbd_4_M02_SC_INFO,aw_la_out_swbd_4_M01_SC_INFO,aw_la_out_swbd_4_M00_SC_INFO}),
        .m_sc_payld({aw_la_out_swbd_4_M05_SC_PAYLD,aw_la_out_swbd_4_M04_SC_PAYLD,aw_la_out_swbd_4_M03_SC_PAYLD,aw_la_out_swbd_4_M02_SC_PAYLD,aw_la_out_swbd_4_M01_SC_PAYLD,aw_la_out_swbd_4_M00_SC_PAYLD}),
        .m_sc_recv({aw_la_out_swbd_4_M05_SC_RECV,aw_la_out_swbd_4_M04_SC_RECV,aw_la_out_swbd_4_M03_SC_RECV,aw_la_out_swbd_4_M02_SC_RECV,aw_la_out_swbd_4_M01_SC_RECV,aw_la_out_swbd_4_M00_SC_RECV}),
        .m_sc_req({aw_la_out_swbd_4_M05_SC_REQ,aw_la_out_swbd_4_M04_SC_REQ,aw_la_out_swbd_4_M03_SC_REQ,aw_la_out_swbd_4_M02_SC_REQ,aw_la_out_swbd_4_M01_SC_REQ,aw_la_out_swbd_4_M00_SC_REQ}),
        .m_sc_send({aw_la_out_swbd_4_M05_SC_SEND,aw_la_out_swbd_4_M04_SC_SEND,aw_la_out_swbd_4_M03_SC_SEND,aw_la_out_swbd_4_M02_SC_SEND,aw_la_out_swbd_4_M01_SC_SEND,aw_la_out_swbd_4_M00_SC_SEND}),
        .s_sc_info(S00_SC_AW_1_INFO),
        .s_sc_payld(S00_SC_AW_1_PAYLD),
        .s_sc_recv(S00_SC_AW_1_RECV),
        .s_sc_req(S00_SC_AW_1_REQ),
        .s_sc_send(S00_SC_AW_1_SEND));
  bd_afc3_binsw_5 b_la_out_swbd_4
       (.aclk(aclk_1),
        .aclken(1'b1),
        .m_sc_info(b_la_out_swbd_4_M00_SC_INFO),
        .m_sc_payld(b_la_out_swbd_4_M00_SC_PAYLD),
        .m_sc_recv(b_la_out_swbd_4_M00_SC_RECV),
        .m_sc_req(b_la_out_swbd_4_M00_SC_REQ),
        .m_sc_send(b_la_out_swbd_4_M00_SC_SEND),
        .s_sc_info({S05_SC_B_1_INFO,S04_SC_B_1_INFO,S03_SC_B_1_INFO,S02_SC_B_1_INFO,S01_SC_B_1_INFO,S00_SC_B_1_INFO}),
        .s_sc_payld({S05_SC_B_1_PAYLD,S04_SC_B_1_PAYLD,S03_SC_B_1_PAYLD,S02_SC_B_1_PAYLD,S01_SC_B_1_PAYLD,S00_SC_B_1_PAYLD}),
        .s_sc_recv({S05_SC_B_1_RECV,S04_SC_B_1_RECV,S03_SC_B_1_RECV,S02_SC_B_1_RECV,S01_SC_B_1_RECV,S00_SC_B_1_RECV}),
        .s_sc_req({S05_SC_B_1_REQ,S04_SC_B_1_REQ,S03_SC_B_1_REQ,S02_SC_B_1_REQ,S01_SC_B_1_REQ,S00_SC_B_1_REQ}),
        .s_sc_send({S05_SC_B_1_SEND,S04_SC_B_1_SEND,S03_SC_B_1_SEND,S02_SC_B_1_SEND,S01_SC_B_1_SEND,S00_SC_B_1_SEND}));
  bd_afc3_rinsw_5 r_la_out_swbd_4
       (.aclk(aclk_1),
        .aclken(1'b1),
        .m_sc_info(r_la_out_swbd_4_M00_SC_INFO),
        .m_sc_payld(r_la_out_swbd_4_M00_SC_PAYLD),
        .m_sc_recv(r_la_out_swbd_4_M00_SC_RECV),
        .m_sc_req(r_la_out_swbd_4_M00_SC_REQ),
        .m_sc_send(r_la_out_swbd_4_M00_SC_SEND),
        .s_sc_info({S05_SC_R_1_INFO,S04_SC_R_1_INFO,S03_SC_R_1_INFO,S02_SC_R_1_INFO,S01_SC_R_1_INFO,S00_SC_R_1_INFO}),
        .s_sc_payld({S05_SC_R_1_PAYLD,S04_SC_R_1_PAYLD,S03_SC_R_1_PAYLD,S02_SC_R_1_PAYLD,S01_SC_R_1_PAYLD,S00_SC_R_1_PAYLD}),
        .s_sc_recv({S05_SC_R_1_RECV,S04_SC_R_1_RECV,S03_SC_R_1_RECV,S02_SC_R_1_RECV,S01_SC_R_1_RECV,S00_SC_R_1_RECV}),
        .s_sc_req({S05_SC_R_1_REQ,S04_SC_R_1_REQ,S03_SC_R_1_REQ,S02_SC_R_1_REQ,S01_SC_R_1_REQ,S00_SC_R_1_REQ}),
        .s_sc_send({S05_SC_R_1_SEND,S04_SC_R_1_SEND,S03_SC_R_1_SEND,S02_SC_R_1_SEND,S01_SC_R_1_SEND,S00_SC_R_1_SEND}));
  bd_afc3_winsw_5 w_la_out_swbd_4
       (.aclk(aclk_1),
        .aclken(1'b1),
        .m_sc_info({w_la_out_swbd_4_M05_SC_INFO,w_la_out_swbd_4_M04_SC_INFO,w_la_out_swbd_4_M03_SC_INFO,w_la_out_swbd_4_M02_SC_INFO,w_la_out_swbd_4_M01_SC_INFO,w_la_out_swbd_4_M00_SC_INFO}),
        .m_sc_payld({w_la_out_swbd_4_M05_SC_PAYLD,w_la_out_swbd_4_M04_SC_PAYLD,w_la_out_swbd_4_M03_SC_PAYLD,w_la_out_swbd_4_M02_SC_PAYLD,w_la_out_swbd_4_M01_SC_PAYLD,w_la_out_swbd_4_M00_SC_PAYLD}),
        .m_sc_recv({w_la_out_swbd_4_M05_SC_RECV,w_la_out_swbd_4_M04_SC_RECV,w_la_out_swbd_4_M03_SC_RECV,w_la_out_swbd_4_M02_SC_RECV,w_la_out_swbd_4_M01_SC_RECV,w_la_out_swbd_4_M00_SC_RECV}),
        .m_sc_req({w_la_out_swbd_4_M05_SC_REQ,w_la_out_swbd_4_M04_SC_REQ,w_la_out_swbd_4_M03_SC_REQ,w_la_out_swbd_4_M02_SC_REQ,w_la_out_swbd_4_M01_SC_REQ,w_la_out_swbd_4_M00_SC_REQ}),
        .m_sc_send({w_la_out_swbd_4_M05_SC_SEND,w_la_out_swbd_4_M04_SC_SEND,w_la_out_swbd_4_M03_SC_SEND,w_la_out_swbd_4_M02_SC_SEND,w_la_out_swbd_4_M01_SC_SEND,w_la_out_swbd_4_M00_SC_SEND}),
        .s_sc_info(S00_SC_W_1_INFO),
        .s_sc_payld(S00_SC_W_1_PAYLD),
        .s_sc_recv(S00_SC_W_1_RECV),
        .s_sc_req(S00_SC_W_1_REQ),
        .s_sc_send(S00_SC_W_1_SEND));
endmodule

module out_swbd_5_imp_FVZZGW
   (M00_SC_AR_info,
    M00_SC_AR_payld,
    M00_SC_AR_recv,
    M00_SC_AR_req,
    M00_SC_AR_send,
    M00_SC_AW_info,
    M00_SC_AW_payld,
    M00_SC_AW_recv,
    M00_SC_AW_req,
    M00_SC_AW_send,
    M00_SC_B_info,
    M00_SC_B_payld,
    M00_SC_B_recv,
    M00_SC_B_req,
    M00_SC_B_send,
    M00_SC_R_info,
    M00_SC_R_payld,
    M00_SC_R_recv,
    M00_SC_R_req,
    M00_SC_R_send,
    M00_SC_W_info,
    M00_SC_W_payld,
    M00_SC_W_recv,
    M00_SC_W_req,
    M00_SC_W_send,
    M01_SC_AR_info,
    M01_SC_AR_payld,
    M01_SC_AR_recv,
    M01_SC_AR_req,
    M01_SC_AR_send,
    M01_SC_AW_info,
    M01_SC_AW_payld,
    M01_SC_AW_recv,
    M01_SC_AW_req,
    M01_SC_AW_send,
    M01_SC_W_info,
    M01_SC_W_payld,
    M01_SC_W_recv,
    M01_SC_W_req,
    M01_SC_W_send,
    M02_SC_AR_info,
    M02_SC_AR_payld,
    M02_SC_AR_recv,
    M02_SC_AR_req,
    M02_SC_AR_send,
    M02_SC_AW_info,
    M02_SC_AW_payld,
    M02_SC_AW_recv,
    M02_SC_AW_req,
    M02_SC_AW_send,
    M02_SC_W_info,
    M02_SC_W_payld,
    M02_SC_W_recv,
    M02_SC_W_req,
    M02_SC_W_send,
    M03_SC_AR_info,
    M03_SC_AR_payld,
    M03_SC_AR_recv,
    M03_SC_AR_req,
    M03_SC_AR_send,
    M03_SC_AW_info,
    M03_SC_AW_payld,
    M03_SC_AW_recv,
    M03_SC_AW_req,
    M03_SC_AW_send,
    M03_SC_W_info,
    M03_SC_W_payld,
    M03_SC_W_recv,
    M03_SC_W_req,
    M03_SC_W_send,
    M04_SC_AR_info,
    M04_SC_AR_payld,
    M04_SC_AR_recv,
    M04_SC_AR_req,
    M04_SC_AR_send,
    M04_SC_AW_info,
    M04_SC_AW_payld,
    M04_SC_AW_recv,
    M04_SC_AW_req,
    M04_SC_AW_send,
    M04_SC_W_info,
    M04_SC_W_payld,
    M04_SC_W_recv,
    M04_SC_W_req,
    M04_SC_W_send,
    M05_SC_AR_info,
    M05_SC_AR_payld,
    M05_SC_AR_recv,
    M05_SC_AR_req,
    M05_SC_AR_send,
    M05_SC_AW_info,
    M05_SC_AW_payld,
    M05_SC_AW_recv,
    M05_SC_AW_req,
    M05_SC_AW_send,
    M05_SC_W_info,
    M05_SC_W_payld,
    M05_SC_W_recv,
    M05_SC_W_req,
    M05_SC_W_send,
    S00_SC_AR_info,
    S00_SC_AR_payld,
    S00_SC_AR_recv,
    S00_SC_AR_req,
    S00_SC_AR_send,
    S00_SC_AW_info,
    S00_SC_AW_payld,
    S00_SC_AW_recv,
    S00_SC_AW_req,
    S00_SC_AW_send,
    S00_SC_B_info,
    S00_SC_B_payld,
    S00_SC_B_recv,
    S00_SC_B_req,
    S00_SC_B_send,
    S00_SC_R_info,
    S00_SC_R_payld,
    S00_SC_R_recv,
    S00_SC_R_req,
    S00_SC_R_send,
    S00_SC_W_info,
    S00_SC_W_payld,
    S00_SC_W_recv,
    S00_SC_W_req,
    S00_SC_W_send,
    S01_SC_B_info,
    S01_SC_B_payld,
    S01_SC_B_recv,
    S01_SC_B_req,
    S01_SC_B_send,
    S01_SC_R_info,
    S01_SC_R_payld,
    S01_SC_R_recv,
    S01_SC_R_req,
    S01_SC_R_send,
    S02_SC_B_info,
    S02_SC_B_payld,
    S02_SC_B_recv,
    S02_SC_B_req,
    S02_SC_B_send,
    S02_SC_R_info,
    S02_SC_R_payld,
    S02_SC_R_recv,
    S02_SC_R_req,
    S02_SC_R_send,
    S03_SC_B_info,
    S03_SC_B_payld,
    S03_SC_B_recv,
    S03_SC_B_req,
    S03_SC_B_send,
    S03_SC_R_info,
    S03_SC_R_payld,
    S03_SC_R_recv,
    S03_SC_R_req,
    S03_SC_R_send,
    S04_SC_B_info,
    S04_SC_B_payld,
    S04_SC_B_recv,
    S04_SC_B_req,
    S04_SC_B_send,
    S04_SC_R_info,
    S04_SC_R_payld,
    S04_SC_R_recv,
    S04_SC_R_req,
    S04_SC_R_send,
    S05_SC_B_info,
    S05_SC_B_payld,
    S05_SC_B_recv,
    S05_SC_B_req,
    S05_SC_B_send,
    S05_SC_R_info,
    S05_SC_R_payld,
    S05_SC_R_recv,
    S05_SC_R_req,
    S05_SC_R_send,
    aclk);
  output [0:0]M00_SC_AR_info;
  output [181:0]M00_SC_AR_payld;
  input [0:0]M00_SC_AR_recv;
  output [0:0]M00_SC_AR_req;
  output [0:0]M00_SC_AR_send;
  output [0:0]M00_SC_AW_info;
  output [181:0]M00_SC_AW_payld;
  input [0:0]M00_SC_AW_recv;
  output [0:0]M00_SC_AW_req;
  output [0:0]M00_SC_AW_send;
  output [5:0]M00_SC_B_info;
  output [8:0]M00_SC_B_payld;
  input [5:0]M00_SC_B_recv;
  output [5:0]M00_SC_B_req;
  output [5:0]M00_SC_B_send;
  output [5:0]M00_SC_R_info;
  output [54:0]M00_SC_R_payld;
  input [5:0]M00_SC_R_recv;
  output [5:0]M00_SC_R_req;
  output [5:0]M00_SC_R_send;
  output [0:0]M00_SC_W_info;
  output [68:0]M00_SC_W_payld;
  input [0:0]M00_SC_W_recv;
  output [0:0]M00_SC_W_req;
  output [0:0]M00_SC_W_send;
  output [0:0]M01_SC_AR_info;
  output [181:0]M01_SC_AR_payld;
  input [0:0]M01_SC_AR_recv;
  output [0:0]M01_SC_AR_req;
  output [0:0]M01_SC_AR_send;
  output [0:0]M01_SC_AW_info;
  output [181:0]M01_SC_AW_payld;
  input [0:0]M01_SC_AW_recv;
  output [0:0]M01_SC_AW_req;
  output [0:0]M01_SC_AW_send;
  output [0:0]M01_SC_W_info;
  output [68:0]M01_SC_W_payld;
  input [0:0]M01_SC_W_recv;
  output [0:0]M01_SC_W_req;
  output [0:0]M01_SC_W_send;
  output [0:0]M02_SC_AR_info;
  output [181:0]M02_SC_AR_payld;
  input [0:0]M02_SC_AR_recv;
  output [0:0]M02_SC_AR_req;
  output [0:0]M02_SC_AR_send;
  output [0:0]M02_SC_AW_info;
  output [181:0]M02_SC_AW_payld;
  input [0:0]M02_SC_AW_recv;
  output [0:0]M02_SC_AW_req;
  output [0:0]M02_SC_AW_send;
  output [0:0]M02_SC_W_info;
  output [68:0]M02_SC_W_payld;
  input [0:0]M02_SC_W_recv;
  output [0:0]M02_SC_W_req;
  output [0:0]M02_SC_W_send;
  output [0:0]M03_SC_AR_info;
  output [181:0]M03_SC_AR_payld;
  input [0:0]M03_SC_AR_recv;
  output [0:0]M03_SC_AR_req;
  output [0:0]M03_SC_AR_send;
  output [0:0]M03_SC_AW_info;
  output [181:0]M03_SC_AW_payld;
  input [0:0]M03_SC_AW_recv;
  output [0:0]M03_SC_AW_req;
  output [0:0]M03_SC_AW_send;
  output [0:0]M03_SC_W_info;
  output [68:0]M03_SC_W_payld;
  input [0:0]M03_SC_W_recv;
  output [0:0]M03_SC_W_req;
  output [0:0]M03_SC_W_send;
  output [0:0]M04_SC_AR_info;
  output [181:0]M04_SC_AR_payld;
  input [0:0]M04_SC_AR_recv;
  output [0:0]M04_SC_AR_req;
  output [0:0]M04_SC_AR_send;
  output [0:0]M04_SC_AW_info;
  output [181:0]M04_SC_AW_payld;
  input [0:0]M04_SC_AW_recv;
  output [0:0]M04_SC_AW_req;
  output [0:0]M04_SC_AW_send;
  output [0:0]M04_SC_W_info;
  output [68:0]M04_SC_W_payld;
  input [0:0]M04_SC_W_recv;
  output [0:0]M04_SC_W_req;
  output [0:0]M04_SC_W_send;
  output [0:0]M05_SC_AR_info;
  output [181:0]M05_SC_AR_payld;
  input [0:0]M05_SC_AR_recv;
  output [0:0]M05_SC_AR_req;
  output [0:0]M05_SC_AR_send;
  output [0:0]M05_SC_AW_info;
  output [181:0]M05_SC_AW_payld;
  input [0:0]M05_SC_AW_recv;
  output [0:0]M05_SC_AW_req;
  output [0:0]M05_SC_AW_send;
  output [0:0]M05_SC_W_info;
  output [68:0]M05_SC_W_payld;
  input [0:0]M05_SC_W_recv;
  output [0:0]M05_SC_W_req;
  output [0:0]M05_SC_W_send;
  input [5:0]S00_SC_AR_info;
  input [181:0]S00_SC_AR_payld;
  output [5:0]S00_SC_AR_recv;
  input [5:0]S00_SC_AR_req;
  input [5:0]S00_SC_AR_send;
  input [5:0]S00_SC_AW_info;
  input [181:0]S00_SC_AW_payld;
  output [5:0]S00_SC_AW_recv;
  input [5:0]S00_SC_AW_req;
  input [5:0]S00_SC_AW_send;
  input [0:0]S00_SC_B_info;
  input [8:0]S00_SC_B_payld;
  output [0:0]S00_SC_B_recv;
  input [0:0]S00_SC_B_req;
  input [0:0]S00_SC_B_send;
  input [0:0]S00_SC_R_info;
  input [54:0]S00_SC_R_payld;
  output [0:0]S00_SC_R_recv;
  input [0:0]S00_SC_R_req;
  input [0:0]S00_SC_R_send;
  input [5:0]S00_SC_W_info;
  input [68:0]S00_SC_W_payld;
  output [5:0]S00_SC_W_recv;
  input [5:0]S00_SC_W_req;
  input [5:0]S00_SC_W_send;
  input [0:0]S01_SC_B_info;
  input [8:0]S01_SC_B_payld;
  output [0:0]S01_SC_B_recv;
  input [0:0]S01_SC_B_req;
  input [0:0]S01_SC_B_send;
  input [0:0]S01_SC_R_info;
  input [54:0]S01_SC_R_payld;
  output [0:0]S01_SC_R_recv;
  input [0:0]S01_SC_R_req;
  input [0:0]S01_SC_R_send;
  input [0:0]S02_SC_B_info;
  input [8:0]S02_SC_B_payld;
  output [0:0]S02_SC_B_recv;
  input [0:0]S02_SC_B_req;
  input [0:0]S02_SC_B_send;
  input [0:0]S02_SC_R_info;
  input [54:0]S02_SC_R_payld;
  output [0:0]S02_SC_R_recv;
  input [0:0]S02_SC_R_req;
  input [0:0]S02_SC_R_send;
  input [0:0]S03_SC_B_info;
  input [8:0]S03_SC_B_payld;
  output [0:0]S03_SC_B_recv;
  input [0:0]S03_SC_B_req;
  input [0:0]S03_SC_B_send;
  input [0:0]S03_SC_R_info;
  input [54:0]S03_SC_R_payld;
  output [0:0]S03_SC_R_recv;
  input [0:0]S03_SC_R_req;
  input [0:0]S03_SC_R_send;
  input [0:0]S04_SC_B_info;
  input [8:0]S04_SC_B_payld;
  output [0:0]S04_SC_B_recv;
  input [0:0]S04_SC_B_req;
  input [0:0]S04_SC_B_send;
  input [0:0]S04_SC_R_info;
  input [54:0]S04_SC_R_payld;
  output [0:0]S04_SC_R_recv;
  input [0:0]S04_SC_R_req;
  input [0:0]S04_SC_R_send;
  input [0:0]S05_SC_B_info;
  input [8:0]S05_SC_B_payld;
  output [0:0]S05_SC_B_recv;
  input [0:0]S05_SC_B_req;
  input [0:0]S05_SC_B_send;
  input [0:0]S05_SC_R_info;
  input [54:0]S05_SC_R_payld;
  output [0:0]S05_SC_R_recv;
  input [0:0]S05_SC_R_req;
  input [0:0]S05_SC_R_send;
  input aclk;

  wire [5:0]S00_SC_AR_1_INFO;
  wire [181:0]S00_SC_AR_1_PAYLD;
  wire [5:0]S00_SC_AR_1_RECV;
  wire [5:0]S00_SC_AR_1_REQ;
  wire [5:0]S00_SC_AR_1_SEND;
  wire [5:0]S00_SC_AW_1_INFO;
  wire [181:0]S00_SC_AW_1_PAYLD;
  wire [5:0]S00_SC_AW_1_RECV;
  wire [5:0]S00_SC_AW_1_REQ;
  wire [5:0]S00_SC_AW_1_SEND;
  wire [0:0]S00_SC_B_1_INFO;
  wire [8:0]S00_SC_B_1_PAYLD;
  wire [0:0]S00_SC_B_1_RECV;
  wire [0:0]S00_SC_B_1_REQ;
  wire [0:0]S00_SC_B_1_SEND;
  wire [0:0]S00_SC_R_1_INFO;
  wire [54:0]S00_SC_R_1_PAYLD;
  wire [0:0]S00_SC_R_1_RECV;
  wire [0:0]S00_SC_R_1_REQ;
  wire [0:0]S00_SC_R_1_SEND;
  wire [5:0]S00_SC_W_1_INFO;
  wire [68:0]S00_SC_W_1_PAYLD;
  wire [5:0]S00_SC_W_1_RECV;
  wire [5:0]S00_SC_W_1_REQ;
  wire [5:0]S00_SC_W_1_SEND;
  wire [0:0]S01_SC_B_1_INFO;
  wire [8:0]S01_SC_B_1_PAYLD;
  wire [1:1]S01_SC_B_1_RECV;
  wire [0:0]S01_SC_B_1_REQ;
  wire [0:0]S01_SC_B_1_SEND;
  wire [0:0]S01_SC_R_1_INFO;
  wire [54:0]S01_SC_R_1_PAYLD;
  wire [1:1]S01_SC_R_1_RECV;
  wire [0:0]S01_SC_R_1_REQ;
  wire [0:0]S01_SC_R_1_SEND;
  wire [0:0]S02_SC_B_1_INFO;
  wire [8:0]S02_SC_B_1_PAYLD;
  wire [2:2]S02_SC_B_1_RECV;
  wire [0:0]S02_SC_B_1_REQ;
  wire [0:0]S02_SC_B_1_SEND;
  wire [0:0]S02_SC_R_1_INFO;
  wire [54:0]S02_SC_R_1_PAYLD;
  wire [2:2]S02_SC_R_1_RECV;
  wire [0:0]S02_SC_R_1_REQ;
  wire [0:0]S02_SC_R_1_SEND;
  wire [0:0]S03_SC_B_1_INFO;
  wire [8:0]S03_SC_B_1_PAYLD;
  wire [3:3]S03_SC_B_1_RECV;
  wire [0:0]S03_SC_B_1_REQ;
  wire [0:0]S03_SC_B_1_SEND;
  wire [0:0]S03_SC_R_1_INFO;
  wire [54:0]S03_SC_R_1_PAYLD;
  wire [3:3]S03_SC_R_1_RECV;
  wire [0:0]S03_SC_R_1_REQ;
  wire [0:0]S03_SC_R_1_SEND;
  wire [0:0]S04_SC_B_1_INFO;
  wire [8:0]S04_SC_B_1_PAYLD;
  wire [4:4]S04_SC_B_1_RECV;
  wire [0:0]S04_SC_B_1_REQ;
  wire [0:0]S04_SC_B_1_SEND;
  wire [0:0]S04_SC_R_1_INFO;
  wire [54:0]S04_SC_R_1_PAYLD;
  wire [4:4]S04_SC_R_1_RECV;
  wire [0:0]S04_SC_R_1_REQ;
  wire [0:0]S04_SC_R_1_SEND;
  wire [0:0]S05_SC_B_1_INFO;
  wire [8:0]S05_SC_B_1_PAYLD;
  wire [5:5]S05_SC_B_1_RECV;
  wire [0:0]S05_SC_B_1_REQ;
  wire [0:0]S05_SC_B_1_SEND;
  wire [0:0]S05_SC_R_1_INFO;
  wire [54:0]S05_SC_R_1_PAYLD;
  wire [5:5]S05_SC_R_1_RECV;
  wire [0:0]S05_SC_R_1_REQ;
  wire [0:0]S05_SC_R_1_SEND;
  wire aclk_1;
  wire [0:0]ar_la_out_swbd_5_M00_SC_INFO;
  wire [181:0]ar_la_out_swbd_5_M00_SC_PAYLD;
  wire [0:0]ar_la_out_swbd_5_M00_SC_RECV;
  wire [0:0]ar_la_out_swbd_5_M00_SC_REQ;
  wire [0:0]ar_la_out_swbd_5_M00_SC_SEND;
  wire [1:1]ar_la_out_swbd_5_M01_SC_INFO;
  wire [363:182]ar_la_out_swbd_5_M01_SC_PAYLD;
  wire [0:0]ar_la_out_swbd_5_M01_SC_RECV;
  wire [1:1]ar_la_out_swbd_5_M01_SC_REQ;
  wire [1:1]ar_la_out_swbd_5_M01_SC_SEND;
  wire [2:2]ar_la_out_swbd_5_M02_SC_INFO;
  wire [545:364]ar_la_out_swbd_5_M02_SC_PAYLD;
  wire [0:0]ar_la_out_swbd_5_M02_SC_RECV;
  wire [2:2]ar_la_out_swbd_5_M02_SC_REQ;
  wire [2:2]ar_la_out_swbd_5_M02_SC_SEND;
  wire [3:3]ar_la_out_swbd_5_M03_SC_INFO;
  wire [727:546]ar_la_out_swbd_5_M03_SC_PAYLD;
  wire [0:0]ar_la_out_swbd_5_M03_SC_RECV;
  wire [3:3]ar_la_out_swbd_5_M03_SC_REQ;
  wire [3:3]ar_la_out_swbd_5_M03_SC_SEND;
  wire [4:4]ar_la_out_swbd_5_M04_SC_INFO;
  wire [909:728]ar_la_out_swbd_5_M04_SC_PAYLD;
  wire [0:0]ar_la_out_swbd_5_M04_SC_RECV;
  wire [4:4]ar_la_out_swbd_5_M04_SC_REQ;
  wire [4:4]ar_la_out_swbd_5_M04_SC_SEND;
  wire [5:5]ar_la_out_swbd_5_M05_SC_INFO;
  wire [1091:910]ar_la_out_swbd_5_M05_SC_PAYLD;
  wire [0:0]ar_la_out_swbd_5_M05_SC_RECV;
  wire [5:5]ar_la_out_swbd_5_M05_SC_REQ;
  wire [5:5]ar_la_out_swbd_5_M05_SC_SEND;
  wire [0:0]aw_la_out_swbd_5_M00_SC_INFO;
  wire [181:0]aw_la_out_swbd_5_M00_SC_PAYLD;
  wire [0:0]aw_la_out_swbd_5_M00_SC_RECV;
  wire [0:0]aw_la_out_swbd_5_M00_SC_REQ;
  wire [0:0]aw_la_out_swbd_5_M00_SC_SEND;
  wire [1:1]aw_la_out_swbd_5_M01_SC_INFO;
  wire [363:182]aw_la_out_swbd_5_M01_SC_PAYLD;
  wire [0:0]aw_la_out_swbd_5_M01_SC_RECV;
  wire [1:1]aw_la_out_swbd_5_M01_SC_REQ;
  wire [1:1]aw_la_out_swbd_5_M01_SC_SEND;
  wire [2:2]aw_la_out_swbd_5_M02_SC_INFO;
  wire [545:364]aw_la_out_swbd_5_M02_SC_PAYLD;
  wire [0:0]aw_la_out_swbd_5_M02_SC_RECV;
  wire [2:2]aw_la_out_swbd_5_M02_SC_REQ;
  wire [2:2]aw_la_out_swbd_5_M02_SC_SEND;
  wire [3:3]aw_la_out_swbd_5_M03_SC_INFO;
  wire [727:546]aw_la_out_swbd_5_M03_SC_PAYLD;
  wire [0:0]aw_la_out_swbd_5_M03_SC_RECV;
  wire [3:3]aw_la_out_swbd_5_M03_SC_REQ;
  wire [3:3]aw_la_out_swbd_5_M03_SC_SEND;
  wire [4:4]aw_la_out_swbd_5_M04_SC_INFO;
  wire [909:728]aw_la_out_swbd_5_M04_SC_PAYLD;
  wire [0:0]aw_la_out_swbd_5_M04_SC_RECV;
  wire [4:4]aw_la_out_swbd_5_M04_SC_REQ;
  wire [4:4]aw_la_out_swbd_5_M04_SC_SEND;
  wire [5:5]aw_la_out_swbd_5_M05_SC_INFO;
  wire [1091:910]aw_la_out_swbd_5_M05_SC_PAYLD;
  wire [0:0]aw_la_out_swbd_5_M05_SC_RECV;
  wire [5:5]aw_la_out_swbd_5_M05_SC_REQ;
  wire [5:5]aw_la_out_swbd_5_M05_SC_SEND;
  wire [5:0]b_la_out_swbd_5_M00_SC_INFO;
  wire [8:0]b_la_out_swbd_5_M00_SC_PAYLD;
  wire [5:0]b_la_out_swbd_5_M00_SC_RECV;
  wire [5:0]b_la_out_swbd_5_M00_SC_REQ;
  wire [5:0]b_la_out_swbd_5_M00_SC_SEND;
  wire [5:0]r_la_out_swbd_5_M00_SC_INFO;
  wire [54:0]r_la_out_swbd_5_M00_SC_PAYLD;
  wire [5:0]r_la_out_swbd_5_M00_SC_RECV;
  wire [5:0]r_la_out_swbd_5_M00_SC_REQ;
  wire [5:0]r_la_out_swbd_5_M00_SC_SEND;
  wire [0:0]w_la_out_swbd_5_M00_SC_INFO;
  wire [68:0]w_la_out_swbd_5_M00_SC_PAYLD;
  wire [0:0]w_la_out_swbd_5_M00_SC_RECV;
  wire [0:0]w_la_out_swbd_5_M00_SC_REQ;
  wire [0:0]w_la_out_swbd_5_M00_SC_SEND;
  wire [1:1]w_la_out_swbd_5_M01_SC_INFO;
  wire [137:69]w_la_out_swbd_5_M01_SC_PAYLD;
  wire [0:0]w_la_out_swbd_5_M01_SC_RECV;
  wire [1:1]w_la_out_swbd_5_M01_SC_REQ;
  wire [1:1]w_la_out_swbd_5_M01_SC_SEND;
  wire [2:2]w_la_out_swbd_5_M02_SC_INFO;
  wire [206:138]w_la_out_swbd_5_M02_SC_PAYLD;
  wire [0:0]w_la_out_swbd_5_M02_SC_RECV;
  wire [2:2]w_la_out_swbd_5_M02_SC_REQ;
  wire [2:2]w_la_out_swbd_5_M02_SC_SEND;
  wire [3:3]w_la_out_swbd_5_M03_SC_INFO;
  wire [275:207]w_la_out_swbd_5_M03_SC_PAYLD;
  wire [0:0]w_la_out_swbd_5_M03_SC_RECV;
  wire [3:3]w_la_out_swbd_5_M03_SC_REQ;
  wire [3:3]w_la_out_swbd_5_M03_SC_SEND;
  wire [4:4]w_la_out_swbd_5_M04_SC_INFO;
  wire [344:276]w_la_out_swbd_5_M04_SC_PAYLD;
  wire [0:0]w_la_out_swbd_5_M04_SC_RECV;
  wire [4:4]w_la_out_swbd_5_M04_SC_REQ;
  wire [4:4]w_la_out_swbd_5_M04_SC_SEND;
  wire [5:5]w_la_out_swbd_5_M05_SC_INFO;
  wire [413:345]w_la_out_swbd_5_M05_SC_PAYLD;
  wire [0:0]w_la_out_swbd_5_M05_SC_RECV;
  wire [5:5]w_la_out_swbd_5_M05_SC_REQ;
  wire [5:5]w_la_out_swbd_5_M05_SC_SEND;

  assign M00_SC_AR_info[0] = ar_la_out_swbd_5_M00_SC_INFO;
  assign M00_SC_AR_payld[181:0] = ar_la_out_swbd_5_M00_SC_PAYLD;
  assign M00_SC_AR_req[0] = ar_la_out_swbd_5_M00_SC_REQ;
  assign M00_SC_AR_send[0] = ar_la_out_swbd_5_M00_SC_SEND;
  assign M00_SC_AW_info[0] = aw_la_out_swbd_5_M00_SC_INFO;
  assign M00_SC_AW_payld[181:0] = aw_la_out_swbd_5_M00_SC_PAYLD;
  assign M00_SC_AW_req[0] = aw_la_out_swbd_5_M00_SC_REQ;
  assign M00_SC_AW_send[0] = aw_la_out_swbd_5_M00_SC_SEND;
  assign M00_SC_B_info[5:0] = b_la_out_swbd_5_M00_SC_INFO;
  assign M00_SC_B_payld[8:0] = b_la_out_swbd_5_M00_SC_PAYLD;
  assign M00_SC_B_req[5:0] = b_la_out_swbd_5_M00_SC_REQ;
  assign M00_SC_B_send[5:0] = b_la_out_swbd_5_M00_SC_SEND;
  assign M00_SC_R_info[5:0] = r_la_out_swbd_5_M00_SC_INFO;
  assign M00_SC_R_payld[54:0] = r_la_out_swbd_5_M00_SC_PAYLD;
  assign M00_SC_R_req[5:0] = r_la_out_swbd_5_M00_SC_REQ;
  assign M00_SC_R_send[5:0] = r_la_out_swbd_5_M00_SC_SEND;
  assign M00_SC_W_info[0] = w_la_out_swbd_5_M00_SC_INFO;
  assign M00_SC_W_payld[68:0] = w_la_out_swbd_5_M00_SC_PAYLD;
  assign M00_SC_W_req[0] = w_la_out_swbd_5_M00_SC_REQ;
  assign M00_SC_W_send[0] = w_la_out_swbd_5_M00_SC_SEND;
  assign M01_SC_AR_info[0] = ar_la_out_swbd_5_M01_SC_INFO;
  assign M01_SC_AR_payld[181:0] = ar_la_out_swbd_5_M01_SC_PAYLD;
  assign M01_SC_AR_req[0] = ar_la_out_swbd_5_M01_SC_REQ;
  assign M01_SC_AR_send[0] = ar_la_out_swbd_5_M01_SC_SEND;
  assign M01_SC_AW_info[0] = aw_la_out_swbd_5_M01_SC_INFO;
  assign M01_SC_AW_payld[181:0] = aw_la_out_swbd_5_M01_SC_PAYLD;
  assign M01_SC_AW_req[0] = aw_la_out_swbd_5_M01_SC_REQ;
  assign M01_SC_AW_send[0] = aw_la_out_swbd_5_M01_SC_SEND;
  assign M01_SC_W_info[0] = w_la_out_swbd_5_M01_SC_INFO;
  assign M01_SC_W_payld[68:0] = w_la_out_swbd_5_M01_SC_PAYLD;
  assign M01_SC_W_req[0] = w_la_out_swbd_5_M01_SC_REQ;
  assign M01_SC_W_send[0] = w_la_out_swbd_5_M01_SC_SEND;
  assign M02_SC_AR_info[0] = ar_la_out_swbd_5_M02_SC_INFO;
  assign M02_SC_AR_payld[181:0] = ar_la_out_swbd_5_M02_SC_PAYLD;
  assign M02_SC_AR_req[0] = ar_la_out_swbd_5_M02_SC_REQ;
  assign M02_SC_AR_send[0] = ar_la_out_swbd_5_M02_SC_SEND;
  assign M02_SC_AW_info[0] = aw_la_out_swbd_5_M02_SC_INFO;
  assign M02_SC_AW_payld[181:0] = aw_la_out_swbd_5_M02_SC_PAYLD;
  assign M02_SC_AW_req[0] = aw_la_out_swbd_5_M02_SC_REQ;
  assign M02_SC_AW_send[0] = aw_la_out_swbd_5_M02_SC_SEND;
  assign M02_SC_W_info[0] = w_la_out_swbd_5_M02_SC_INFO;
  assign M02_SC_W_payld[68:0] = w_la_out_swbd_5_M02_SC_PAYLD;
  assign M02_SC_W_req[0] = w_la_out_swbd_5_M02_SC_REQ;
  assign M02_SC_W_send[0] = w_la_out_swbd_5_M02_SC_SEND;
  assign M03_SC_AR_info[0] = ar_la_out_swbd_5_M03_SC_INFO;
  assign M03_SC_AR_payld[181:0] = ar_la_out_swbd_5_M03_SC_PAYLD;
  assign M03_SC_AR_req[0] = ar_la_out_swbd_5_M03_SC_REQ;
  assign M03_SC_AR_send[0] = ar_la_out_swbd_5_M03_SC_SEND;
  assign M03_SC_AW_info[0] = aw_la_out_swbd_5_M03_SC_INFO;
  assign M03_SC_AW_payld[181:0] = aw_la_out_swbd_5_M03_SC_PAYLD;
  assign M03_SC_AW_req[0] = aw_la_out_swbd_5_M03_SC_REQ;
  assign M03_SC_AW_send[0] = aw_la_out_swbd_5_M03_SC_SEND;
  assign M03_SC_W_info[0] = w_la_out_swbd_5_M03_SC_INFO;
  assign M03_SC_W_payld[68:0] = w_la_out_swbd_5_M03_SC_PAYLD;
  assign M03_SC_W_req[0] = w_la_out_swbd_5_M03_SC_REQ;
  assign M03_SC_W_send[0] = w_la_out_swbd_5_M03_SC_SEND;
  assign M04_SC_AR_info[0] = ar_la_out_swbd_5_M04_SC_INFO;
  assign M04_SC_AR_payld[181:0] = ar_la_out_swbd_5_M04_SC_PAYLD;
  assign M04_SC_AR_req[0] = ar_la_out_swbd_5_M04_SC_REQ;
  assign M04_SC_AR_send[0] = ar_la_out_swbd_5_M04_SC_SEND;
  assign M04_SC_AW_info[0] = aw_la_out_swbd_5_M04_SC_INFO;
  assign M04_SC_AW_payld[181:0] = aw_la_out_swbd_5_M04_SC_PAYLD;
  assign M04_SC_AW_req[0] = aw_la_out_swbd_5_M04_SC_REQ;
  assign M04_SC_AW_send[0] = aw_la_out_swbd_5_M04_SC_SEND;
  assign M04_SC_W_info[0] = w_la_out_swbd_5_M04_SC_INFO;
  assign M04_SC_W_payld[68:0] = w_la_out_swbd_5_M04_SC_PAYLD;
  assign M04_SC_W_req[0] = w_la_out_swbd_5_M04_SC_REQ;
  assign M04_SC_W_send[0] = w_la_out_swbd_5_M04_SC_SEND;
  assign M05_SC_AR_info[0] = ar_la_out_swbd_5_M05_SC_INFO;
  assign M05_SC_AR_payld[181:0] = ar_la_out_swbd_5_M05_SC_PAYLD;
  assign M05_SC_AR_req[0] = ar_la_out_swbd_5_M05_SC_REQ;
  assign M05_SC_AR_send[0] = ar_la_out_swbd_5_M05_SC_SEND;
  assign M05_SC_AW_info[0] = aw_la_out_swbd_5_M05_SC_INFO;
  assign M05_SC_AW_payld[181:0] = aw_la_out_swbd_5_M05_SC_PAYLD;
  assign M05_SC_AW_req[0] = aw_la_out_swbd_5_M05_SC_REQ;
  assign M05_SC_AW_send[0] = aw_la_out_swbd_5_M05_SC_SEND;
  assign M05_SC_W_info[0] = w_la_out_swbd_5_M05_SC_INFO;
  assign M05_SC_W_payld[68:0] = w_la_out_swbd_5_M05_SC_PAYLD;
  assign M05_SC_W_req[0] = w_la_out_swbd_5_M05_SC_REQ;
  assign M05_SC_W_send[0] = w_la_out_swbd_5_M05_SC_SEND;
  assign S00_SC_AR_1_INFO = S00_SC_AR_info[5:0];
  assign S00_SC_AR_1_PAYLD = S00_SC_AR_payld[181:0];
  assign S00_SC_AR_1_REQ = S00_SC_AR_req[5:0];
  assign S00_SC_AR_1_SEND = S00_SC_AR_send[5:0];
  assign S00_SC_AR_recv[5:0] = S00_SC_AR_1_RECV;
  assign S00_SC_AW_1_INFO = S00_SC_AW_info[5:0];
  assign S00_SC_AW_1_PAYLD = S00_SC_AW_payld[181:0];
  assign S00_SC_AW_1_REQ = S00_SC_AW_req[5:0];
  assign S00_SC_AW_1_SEND = S00_SC_AW_send[5:0];
  assign S00_SC_AW_recv[5:0] = S00_SC_AW_1_RECV;
  assign S00_SC_B_1_INFO = S00_SC_B_info[0];
  assign S00_SC_B_1_PAYLD = S00_SC_B_payld[8:0];
  assign S00_SC_B_1_REQ = S00_SC_B_req[0];
  assign S00_SC_B_1_SEND = S00_SC_B_send[0];
  assign S00_SC_B_recv[0] = S00_SC_B_1_RECV;
  assign S00_SC_R_1_INFO = S00_SC_R_info[0];
  assign S00_SC_R_1_PAYLD = S00_SC_R_payld[54:0];
  assign S00_SC_R_1_REQ = S00_SC_R_req[0];
  assign S00_SC_R_1_SEND = S00_SC_R_send[0];
  assign S00_SC_R_recv[0] = S00_SC_R_1_RECV;
  assign S00_SC_W_1_INFO = S00_SC_W_info[5:0];
  assign S00_SC_W_1_PAYLD = S00_SC_W_payld[68:0];
  assign S00_SC_W_1_REQ = S00_SC_W_req[5:0];
  assign S00_SC_W_1_SEND = S00_SC_W_send[5:0];
  assign S00_SC_W_recv[5:0] = S00_SC_W_1_RECV;
  assign S01_SC_B_1_INFO = S01_SC_B_info[0];
  assign S01_SC_B_1_PAYLD = S01_SC_B_payld[8:0];
  assign S01_SC_B_1_REQ = S01_SC_B_req[0];
  assign S01_SC_B_1_SEND = S01_SC_B_send[0];
  assign S01_SC_B_recv[0] = S01_SC_B_1_RECV;
  assign S01_SC_R_1_INFO = S01_SC_R_info[0];
  assign S01_SC_R_1_PAYLD = S01_SC_R_payld[54:0];
  assign S01_SC_R_1_REQ = S01_SC_R_req[0];
  assign S01_SC_R_1_SEND = S01_SC_R_send[0];
  assign S01_SC_R_recv[0] = S01_SC_R_1_RECV;
  assign S02_SC_B_1_INFO = S02_SC_B_info[0];
  assign S02_SC_B_1_PAYLD = S02_SC_B_payld[8:0];
  assign S02_SC_B_1_REQ = S02_SC_B_req[0];
  assign S02_SC_B_1_SEND = S02_SC_B_send[0];
  assign S02_SC_B_recv[0] = S02_SC_B_1_RECV;
  assign S02_SC_R_1_INFO = S02_SC_R_info[0];
  assign S02_SC_R_1_PAYLD = S02_SC_R_payld[54:0];
  assign S02_SC_R_1_REQ = S02_SC_R_req[0];
  assign S02_SC_R_1_SEND = S02_SC_R_send[0];
  assign S02_SC_R_recv[0] = S02_SC_R_1_RECV;
  assign S03_SC_B_1_INFO = S03_SC_B_info[0];
  assign S03_SC_B_1_PAYLD = S03_SC_B_payld[8:0];
  assign S03_SC_B_1_REQ = S03_SC_B_req[0];
  assign S03_SC_B_1_SEND = S03_SC_B_send[0];
  assign S03_SC_B_recv[0] = S03_SC_B_1_RECV;
  assign S03_SC_R_1_INFO = S03_SC_R_info[0];
  assign S03_SC_R_1_PAYLD = S03_SC_R_payld[54:0];
  assign S03_SC_R_1_REQ = S03_SC_R_req[0];
  assign S03_SC_R_1_SEND = S03_SC_R_send[0];
  assign S03_SC_R_recv[0] = S03_SC_R_1_RECV;
  assign S04_SC_B_1_INFO = S04_SC_B_info[0];
  assign S04_SC_B_1_PAYLD = S04_SC_B_payld[8:0];
  assign S04_SC_B_1_REQ = S04_SC_B_req[0];
  assign S04_SC_B_1_SEND = S04_SC_B_send[0];
  assign S04_SC_B_recv[0] = S04_SC_B_1_RECV;
  assign S04_SC_R_1_INFO = S04_SC_R_info[0];
  assign S04_SC_R_1_PAYLD = S04_SC_R_payld[54:0];
  assign S04_SC_R_1_REQ = S04_SC_R_req[0];
  assign S04_SC_R_1_SEND = S04_SC_R_send[0];
  assign S04_SC_R_recv[0] = S04_SC_R_1_RECV;
  assign S05_SC_B_1_INFO = S05_SC_B_info[0];
  assign S05_SC_B_1_PAYLD = S05_SC_B_payld[8:0];
  assign S05_SC_B_1_REQ = S05_SC_B_req[0];
  assign S05_SC_B_1_SEND = S05_SC_B_send[0];
  assign S05_SC_B_recv[0] = S05_SC_B_1_RECV;
  assign S05_SC_R_1_INFO = S05_SC_R_info[0];
  assign S05_SC_R_1_PAYLD = S05_SC_R_payld[54:0];
  assign S05_SC_R_1_REQ = S05_SC_R_req[0];
  assign S05_SC_R_1_SEND = S05_SC_R_send[0];
  assign S05_SC_R_recv[0] = S05_SC_R_1_RECV;
  assign aclk_1 = aclk;
  assign ar_la_out_swbd_5_M00_SC_RECV = M00_SC_AR_recv[0];
  assign ar_la_out_swbd_5_M01_SC_RECV = M01_SC_AR_recv[0];
  assign ar_la_out_swbd_5_M02_SC_RECV = M02_SC_AR_recv[0];
  assign ar_la_out_swbd_5_M03_SC_RECV = M03_SC_AR_recv[0];
  assign ar_la_out_swbd_5_M04_SC_RECV = M04_SC_AR_recv[0];
  assign ar_la_out_swbd_5_M05_SC_RECV = M05_SC_AR_recv[0];
  assign aw_la_out_swbd_5_M00_SC_RECV = M00_SC_AW_recv[0];
  assign aw_la_out_swbd_5_M01_SC_RECV = M01_SC_AW_recv[0];
  assign aw_la_out_swbd_5_M02_SC_RECV = M02_SC_AW_recv[0];
  assign aw_la_out_swbd_5_M03_SC_RECV = M03_SC_AW_recv[0];
  assign aw_la_out_swbd_5_M04_SC_RECV = M04_SC_AW_recv[0];
  assign aw_la_out_swbd_5_M05_SC_RECV = M05_SC_AW_recv[0];
  assign b_la_out_swbd_5_M00_SC_RECV = M00_SC_B_recv[5:0];
  assign r_la_out_swbd_5_M00_SC_RECV = M00_SC_R_recv[5:0];
  assign w_la_out_swbd_5_M00_SC_RECV = M00_SC_W_recv[0];
  assign w_la_out_swbd_5_M01_SC_RECV = M01_SC_W_recv[0];
  assign w_la_out_swbd_5_M02_SC_RECV = M02_SC_W_recv[0];
  assign w_la_out_swbd_5_M03_SC_RECV = M03_SC_W_recv[0];
  assign w_la_out_swbd_5_M04_SC_RECV = M04_SC_W_recv[0];
  assign w_la_out_swbd_5_M05_SC_RECV = M05_SC_W_recv[0];
  bd_afc3_arinsw_6 ar_la_out_swbd_5
       (.aclk(aclk_1),
        .aclken(1'b1),
        .m_sc_info({ar_la_out_swbd_5_M05_SC_INFO,ar_la_out_swbd_5_M04_SC_INFO,ar_la_out_swbd_5_M03_SC_INFO,ar_la_out_swbd_5_M02_SC_INFO,ar_la_out_swbd_5_M01_SC_INFO,ar_la_out_swbd_5_M00_SC_INFO}),
        .m_sc_payld({ar_la_out_swbd_5_M05_SC_PAYLD,ar_la_out_swbd_5_M04_SC_PAYLD,ar_la_out_swbd_5_M03_SC_PAYLD,ar_la_out_swbd_5_M02_SC_PAYLD,ar_la_out_swbd_5_M01_SC_PAYLD,ar_la_out_swbd_5_M00_SC_PAYLD}),
        .m_sc_recv({ar_la_out_swbd_5_M05_SC_RECV,ar_la_out_swbd_5_M04_SC_RECV,ar_la_out_swbd_5_M03_SC_RECV,ar_la_out_swbd_5_M02_SC_RECV,ar_la_out_swbd_5_M01_SC_RECV,ar_la_out_swbd_5_M00_SC_RECV}),
        .m_sc_req({ar_la_out_swbd_5_M05_SC_REQ,ar_la_out_swbd_5_M04_SC_REQ,ar_la_out_swbd_5_M03_SC_REQ,ar_la_out_swbd_5_M02_SC_REQ,ar_la_out_swbd_5_M01_SC_REQ,ar_la_out_swbd_5_M00_SC_REQ}),
        .m_sc_send({ar_la_out_swbd_5_M05_SC_SEND,ar_la_out_swbd_5_M04_SC_SEND,ar_la_out_swbd_5_M03_SC_SEND,ar_la_out_swbd_5_M02_SC_SEND,ar_la_out_swbd_5_M01_SC_SEND,ar_la_out_swbd_5_M00_SC_SEND}),
        .s_sc_info(S00_SC_AR_1_INFO),
        .s_sc_payld(S00_SC_AR_1_PAYLD),
        .s_sc_recv(S00_SC_AR_1_RECV),
        .s_sc_req(S00_SC_AR_1_REQ),
        .s_sc_send(S00_SC_AR_1_SEND));
  bd_afc3_awinsw_6 aw_la_out_swbd_5
       (.aclk(aclk_1),
        .aclken(1'b1),
        .m_sc_info({aw_la_out_swbd_5_M05_SC_INFO,aw_la_out_swbd_5_M04_SC_INFO,aw_la_out_swbd_5_M03_SC_INFO,aw_la_out_swbd_5_M02_SC_INFO,aw_la_out_swbd_5_M01_SC_INFO,aw_la_out_swbd_5_M00_SC_INFO}),
        .m_sc_payld({aw_la_out_swbd_5_M05_SC_PAYLD,aw_la_out_swbd_5_M04_SC_PAYLD,aw_la_out_swbd_5_M03_SC_PAYLD,aw_la_out_swbd_5_M02_SC_PAYLD,aw_la_out_swbd_5_M01_SC_PAYLD,aw_la_out_swbd_5_M00_SC_PAYLD}),
        .m_sc_recv({aw_la_out_swbd_5_M05_SC_RECV,aw_la_out_swbd_5_M04_SC_RECV,aw_la_out_swbd_5_M03_SC_RECV,aw_la_out_swbd_5_M02_SC_RECV,aw_la_out_swbd_5_M01_SC_RECV,aw_la_out_swbd_5_M00_SC_RECV}),
        .m_sc_req({aw_la_out_swbd_5_M05_SC_REQ,aw_la_out_swbd_5_M04_SC_REQ,aw_la_out_swbd_5_M03_SC_REQ,aw_la_out_swbd_5_M02_SC_REQ,aw_la_out_swbd_5_M01_SC_REQ,aw_la_out_swbd_5_M00_SC_REQ}),
        .m_sc_send({aw_la_out_swbd_5_M05_SC_SEND,aw_la_out_swbd_5_M04_SC_SEND,aw_la_out_swbd_5_M03_SC_SEND,aw_la_out_swbd_5_M02_SC_SEND,aw_la_out_swbd_5_M01_SC_SEND,aw_la_out_swbd_5_M00_SC_SEND}),
        .s_sc_info(S00_SC_AW_1_INFO),
        .s_sc_payld(S00_SC_AW_1_PAYLD),
        .s_sc_recv(S00_SC_AW_1_RECV),
        .s_sc_req(S00_SC_AW_1_REQ),
        .s_sc_send(S00_SC_AW_1_SEND));
  bd_afc3_binsw_6 b_la_out_swbd_5
       (.aclk(aclk_1),
        .aclken(1'b1),
        .m_sc_info(b_la_out_swbd_5_M00_SC_INFO),
        .m_sc_payld(b_la_out_swbd_5_M00_SC_PAYLD),
        .m_sc_recv(b_la_out_swbd_5_M00_SC_RECV),
        .m_sc_req(b_la_out_swbd_5_M00_SC_REQ),
        .m_sc_send(b_la_out_swbd_5_M00_SC_SEND),
        .s_sc_info({S05_SC_B_1_INFO,S04_SC_B_1_INFO,S03_SC_B_1_INFO,S02_SC_B_1_INFO,S01_SC_B_1_INFO,S00_SC_B_1_INFO}),
        .s_sc_payld({S05_SC_B_1_PAYLD,S04_SC_B_1_PAYLD,S03_SC_B_1_PAYLD,S02_SC_B_1_PAYLD,S01_SC_B_1_PAYLD,S00_SC_B_1_PAYLD}),
        .s_sc_recv({S05_SC_B_1_RECV,S04_SC_B_1_RECV,S03_SC_B_1_RECV,S02_SC_B_1_RECV,S01_SC_B_1_RECV,S00_SC_B_1_RECV}),
        .s_sc_req({S05_SC_B_1_REQ,S04_SC_B_1_REQ,S03_SC_B_1_REQ,S02_SC_B_1_REQ,S01_SC_B_1_REQ,S00_SC_B_1_REQ}),
        .s_sc_send({S05_SC_B_1_SEND,S04_SC_B_1_SEND,S03_SC_B_1_SEND,S02_SC_B_1_SEND,S01_SC_B_1_SEND,S00_SC_B_1_SEND}));
  bd_afc3_rinsw_6 r_la_out_swbd_5
       (.aclk(aclk_1),
        .aclken(1'b1),
        .m_sc_info(r_la_out_swbd_5_M00_SC_INFO),
        .m_sc_payld(r_la_out_swbd_5_M00_SC_PAYLD),
        .m_sc_recv(r_la_out_swbd_5_M00_SC_RECV),
        .m_sc_req(r_la_out_swbd_5_M00_SC_REQ),
        .m_sc_send(r_la_out_swbd_5_M00_SC_SEND),
        .s_sc_info({S05_SC_R_1_INFO,S04_SC_R_1_INFO,S03_SC_R_1_INFO,S02_SC_R_1_INFO,S01_SC_R_1_INFO,S00_SC_R_1_INFO}),
        .s_sc_payld({S05_SC_R_1_PAYLD,S04_SC_R_1_PAYLD,S03_SC_R_1_PAYLD,S02_SC_R_1_PAYLD,S01_SC_R_1_PAYLD,S00_SC_R_1_PAYLD}),
        .s_sc_recv({S05_SC_R_1_RECV,S04_SC_R_1_RECV,S03_SC_R_1_RECV,S02_SC_R_1_RECV,S01_SC_R_1_RECV,S00_SC_R_1_RECV}),
        .s_sc_req({S05_SC_R_1_REQ,S04_SC_R_1_REQ,S03_SC_R_1_REQ,S02_SC_R_1_REQ,S01_SC_R_1_REQ,S00_SC_R_1_REQ}),
        .s_sc_send({S05_SC_R_1_SEND,S04_SC_R_1_SEND,S03_SC_R_1_SEND,S02_SC_R_1_SEND,S01_SC_R_1_SEND,S00_SC_R_1_SEND}));
  bd_afc3_winsw_6 w_la_out_swbd_5
       (.aclk(aclk_1),
        .aclken(1'b1),
        .m_sc_info({w_la_out_swbd_5_M05_SC_INFO,w_la_out_swbd_5_M04_SC_INFO,w_la_out_swbd_5_M03_SC_INFO,w_la_out_swbd_5_M02_SC_INFO,w_la_out_swbd_5_M01_SC_INFO,w_la_out_swbd_5_M00_SC_INFO}),
        .m_sc_payld({w_la_out_swbd_5_M05_SC_PAYLD,w_la_out_swbd_5_M04_SC_PAYLD,w_la_out_swbd_5_M03_SC_PAYLD,w_la_out_swbd_5_M02_SC_PAYLD,w_la_out_swbd_5_M01_SC_PAYLD,w_la_out_swbd_5_M00_SC_PAYLD}),
        .m_sc_recv({w_la_out_swbd_5_M05_SC_RECV,w_la_out_swbd_5_M04_SC_RECV,w_la_out_swbd_5_M03_SC_RECV,w_la_out_swbd_5_M02_SC_RECV,w_la_out_swbd_5_M01_SC_RECV,w_la_out_swbd_5_M00_SC_RECV}),
        .m_sc_req({w_la_out_swbd_5_M05_SC_REQ,w_la_out_swbd_5_M04_SC_REQ,w_la_out_swbd_5_M03_SC_REQ,w_la_out_swbd_5_M02_SC_REQ,w_la_out_swbd_5_M01_SC_REQ,w_la_out_swbd_5_M00_SC_REQ}),
        .m_sc_send({w_la_out_swbd_5_M05_SC_SEND,w_la_out_swbd_5_M04_SC_SEND,w_la_out_swbd_5_M03_SC_SEND,w_la_out_swbd_5_M02_SC_SEND,w_la_out_swbd_5_M01_SC_SEND,w_la_out_swbd_5_M00_SC_SEND}),
        .s_sc_info(S00_SC_W_1_INFO),
        .s_sc_payld(S00_SC_W_1_PAYLD),
        .s_sc_recv(S00_SC_W_1_RECV),
        .s_sc_req(S00_SC_W_1_REQ),
        .s_sc_send(S00_SC_W_1_SEND));
endmodule

module out_swbd_6_imp_1EZXAK3
   (M00_SC_AR_info,
    M00_SC_AR_payld,
    M00_SC_AR_recv,
    M00_SC_AR_req,
    M00_SC_AR_send,
    M00_SC_AW_info,
    M00_SC_AW_payld,
    M00_SC_AW_recv,
    M00_SC_AW_req,
    M00_SC_AW_send,
    M00_SC_B_info,
    M00_SC_B_payld,
    M00_SC_B_recv,
    M00_SC_B_req,
    M00_SC_B_send,
    M00_SC_R_info,
    M00_SC_R_payld,
    M00_SC_R_recv,
    M00_SC_R_req,
    M00_SC_R_send,
    M00_SC_W_info,
    M00_SC_W_payld,
    M00_SC_W_recv,
    M00_SC_W_req,
    M00_SC_W_send,
    M01_SC_AR_info,
    M01_SC_AR_payld,
    M01_SC_AR_recv,
    M01_SC_AR_req,
    M01_SC_AR_send,
    M01_SC_AW_info,
    M01_SC_AW_payld,
    M01_SC_AW_recv,
    M01_SC_AW_req,
    M01_SC_AW_send,
    M01_SC_W_info,
    M01_SC_W_payld,
    M01_SC_W_recv,
    M01_SC_W_req,
    M01_SC_W_send,
    M02_SC_AR_info,
    M02_SC_AR_payld,
    M02_SC_AR_recv,
    M02_SC_AR_req,
    M02_SC_AR_send,
    M02_SC_AW_info,
    M02_SC_AW_payld,
    M02_SC_AW_recv,
    M02_SC_AW_req,
    M02_SC_AW_send,
    M02_SC_W_info,
    M02_SC_W_payld,
    M02_SC_W_recv,
    M02_SC_W_req,
    M02_SC_W_send,
    M03_SC_AR_info,
    M03_SC_AR_payld,
    M03_SC_AR_recv,
    M03_SC_AR_req,
    M03_SC_AR_send,
    M03_SC_AW_info,
    M03_SC_AW_payld,
    M03_SC_AW_recv,
    M03_SC_AW_req,
    M03_SC_AW_send,
    M03_SC_W_info,
    M03_SC_W_payld,
    M03_SC_W_recv,
    M03_SC_W_req,
    M03_SC_W_send,
    M04_SC_AR_info,
    M04_SC_AR_payld,
    M04_SC_AR_recv,
    M04_SC_AR_req,
    M04_SC_AR_send,
    M04_SC_AW_info,
    M04_SC_AW_payld,
    M04_SC_AW_recv,
    M04_SC_AW_req,
    M04_SC_AW_send,
    M04_SC_W_info,
    M04_SC_W_payld,
    M04_SC_W_recv,
    M04_SC_W_req,
    M04_SC_W_send,
    M05_SC_AR_info,
    M05_SC_AR_payld,
    M05_SC_AR_recv,
    M05_SC_AR_req,
    M05_SC_AR_send,
    M05_SC_AW_info,
    M05_SC_AW_payld,
    M05_SC_AW_recv,
    M05_SC_AW_req,
    M05_SC_AW_send,
    M05_SC_W_info,
    M05_SC_W_payld,
    M05_SC_W_recv,
    M05_SC_W_req,
    M05_SC_W_send,
    S00_SC_AR_info,
    S00_SC_AR_payld,
    S00_SC_AR_recv,
    S00_SC_AR_req,
    S00_SC_AR_send,
    S00_SC_AW_info,
    S00_SC_AW_payld,
    S00_SC_AW_recv,
    S00_SC_AW_req,
    S00_SC_AW_send,
    S00_SC_B_info,
    S00_SC_B_payld,
    S00_SC_B_recv,
    S00_SC_B_req,
    S00_SC_B_send,
    S00_SC_R_info,
    S00_SC_R_payld,
    S00_SC_R_recv,
    S00_SC_R_req,
    S00_SC_R_send,
    S00_SC_W_info,
    S00_SC_W_payld,
    S00_SC_W_recv,
    S00_SC_W_req,
    S00_SC_W_send,
    S01_SC_B_info,
    S01_SC_B_payld,
    S01_SC_B_recv,
    S01_SC_B_req,
    S01_SC_B_send,
    S01_SC_R_info,
    S01_SC_R_payld,
    S01_SC_R_recv,
    S01_SC_R_req,
    S01_SC_R_send,
    S02_SC_B_info,
    S02_SC_B_payld,
    S02_SC_B_recv,
    S02_SC_B_req,
    S02_SC_B_send,
    S02_SC_R_info,
    S02_SC_R_payld,
    S02_SC_R_recv,
    S02_SC_R_req,
    S02_SC_R_send,
    S03_SC_B_info,
    S03_SC_B_payld,
    S03_SC_B_recv,
    S03_SC_B_req,
    S03_SC_B_send,
    S03_SC_R_info,
    S03_SC_R_payld,
    S03_SC_R_recv,
    S03_SC_R_req,
    S03_SC_R_send,
    S04_SC_B_info,
    S04_SC_B_payld,
    S04_SC_B_recv,
    S04_SC_B_req,
    S04_SC_B_send,
    S04_SC_R_info,
    S04_SC_R_payld,
    S04_SC_R_recv,
    S04_SC_R_req,
    S04_SC_R_send,
    S05_SC_B_info,
    S05_SC_B_payld,
    S05_SC_B_recv,
    S05_SC_B_req,
    S05_SC_B_send,
    S05_SC_R_info,
    S05_SC_R_payld,
    S05_SC_R_recv,
    S05_SC_R_req,
    S05_SC_R_send,
    aclk);
  output [0:0]M00_SC_AR_info;
  output [181:0]M00_SC_AR_payld;
  input [0:0]M00_SC_AR_recv;
  output [0:0]M00_SC_AR_req;
  output [0:0]M00_SC_AR_send;
  output [0:0]M00_SC_AW_info;
  output [181:0]M00_SC_AW_payld;
  input [0:0]M00_SC_AW_recv;
  output [0:0]M00_SC_AW_req;
  output [0:0]M00_SC_AW_send;
  output [5:0]M00_SC_B_info;
  output [8:0]M00_SC_B_payld;
  input [5:0]M00_SC_B_recv;
  output [5:0]M00_SC_B_req;
  output [5:0]M00_SC_B_send;
  output [5:0]M00_SC_R_info;
  output [54:0]M00_SC_R_payld;
  input [5:0]M00_SC_R_recv;
  output [5:0]M00_SC_R_req;
  output [5:0]M00_SC_R_send;
  output [0:0]M00_SC_W_info;
  output [68:0]M00_SC_W_payld;
  input [0:0]M00_SC_W_recv;
  output [0:0]M00_SC_W_req;
  output [0:0]M00_SC_W_send;
  output [0:0]M01_SC_AR_info;
  output [181:0]M01_SC_AR_payld;
  input [0:0]M01_SC_AR_recv;
  output [0:0]M01_SC_AR_req;
  output [0:0]M01_SC_AR_send;
  output [0:0]M01_SC_AW_info;
  output [181:0]M01_SC_AW_payld;
  input [0:0]M01_SC_AW_recv;
  output [0:0]M01_SC_AW_req;
  output [0:0]M01_SC_AW_send;
  output [0:0]M01_SC_W_info;
  output [68:0]M01_SC_W_payld;
  input [0:0]M01_SC_W_recv;
  output [0:0]M01_SC_W_req;
  output [0:0]M01_SC_W_send;
  output [0:0]M02_SC_AR_info;
  output [181:0]M02_SC_AR_payld;
  input [0:0]M02_SC_AR_recv;
  output [0:0]M02_SC_AR_req;
  output [0:0]M02_SC_AR_send;
  output [0:0]M02_SC_AW_info;
  output [181:0]M02_SC_AW_payld;
  input [0:0]M02_SC_AW_recv;
  output [0:0]M02_SC_AW_req;
  output [0:0]M02_SC_AW_send;
  output [0:0]M02_SC_W_info;
  output [68:0]M02_SC_W_payld;
  input [0:0]M02_SC_W_recv;
  output [0:0]M02_SC_W_req;
  output [0:0]M02_SC_W_send;
  output [0:0]M03_SC_AR_info;
  output [181:0]M03_SC_AR_payld;
  input [0:0]M03_SC_AR_recv;
  output [0:0]M03_SC_AR_req;
  output [0:0]M03_SC_AR_send;
  output [0:0]M03_SC_AW_info;
  output [181:0]M03_SC_AW_payld;
  input [0:0]M03_SC_AW_recv;
  output [0:0]M03_SC_AW_req;
  output [0:0]M03_SC_AW_send;
  output [0:0]M03_SC_W_info;
  output [68:0]M03_SC_W_payld;
  input [0:0]M03_SC_W_recv;
  output [0:0]M03_SC_W_req;
  output [0:0]M03_SC_W_send;
  output [0:0]M04_SC_AR_info;
  output [181:0]M04_SC_AR_payld;
  input [0:0]M04_SC_AR_recv;
  output [0:0]M04_SC_AR_req;
  output [0:0]M04_SC_AR_send;
  output [0:0]M04_SC_AW_info;
  output [181:0]M04_SC_AW_payld;
  input [0:0]M04_SC_AW_recv;
  output [0:0]M04_SC_AW_req;
  output [0:0]M04_SC_AW_send;
  output [0:0]M04_SC_W_info;
  output [68:0]M04_SC_W_payld;
  input [0:0]M04_SC_W_recv;
  output [0:0]M04_SC_W_req;
  output [0:0]M04_SC_W_send;
  output [0:0]M05_SC_AR_info;
  output [181:0]M05_SC_AR_payld;
  input [0:0]M05_SC_AR_recv;
  output [0:0]M05_SC_AR_req;
  output [0:0]M05_SC_AR_send;
  output [0:0]M05_SC_AW_info;
  output [181:0]M05_SC_AW_payld;
  input [0:0]M05_SC_AW_recv;
  output [0:0]M05_SC_AW_req;
  output [0:0]M05_SC_AW_send;
  output [0:0]M05_SC_W_info;
  output [68:0]M05_SC_W_payld;
  input [0:0]M05_SC_W_recv;
  output [0:0]M05_SC_W_req;
  output [0:0]M05_SC_W_send;
  input [5:0]S00_SC_AR_info;
  input [181:0]S00_SC_AR_payld;
  output [5:0]S00_SC_AR_recv;
  input [5:0]S00_SC_AR_req;
  input [5:0]S00_SC_AR_send;
  input [5:0]S00_SC_AW_info;
  input [181:0]S00_SC_AW_payld;
  output [5:0]S00_SC_AW_recv;
  input [5:0]S00_SC_AW_req;
  input [5:0]S00_SC_AW_send;
  input [0:0]S00_SC_B_info;
  input [8:0]S00_SC_B_payld;
  output [0:0]S00_SC_B_recv;
  input [0:0]S00_SC_B_req;
  input [0:0]S00_SC_B_send;
  input [0:0]S00_SC_R_info;
  input [54:0]S00_SC_R_payld;
  output [0:0]S00_SC_R_recv;
  input [0:0]S00_SC_R_req;
  input [0:0]S00_SC_R_send;
  input [5:0]S00_SC_W_info;
  input [68:0]S00_SC_W_payld;
  output [5:0]S00_SC_W_recv;
  input [5:0]S00_SC_W_req;
  input [5:0]S00_SC_W_send;
  input [0:0]S01_SC_B_info;
  input [8:0]S01_SC_B_payld;
  output [0:0]S01_SC_B_recv;
  input [0:0]S01_SC_B_req;
  input [0:0]S01_SC_B_send;
  input [0:0]S01_SC_R_info;
  input [54:0]S01_SC_R_payld;
  output [0:0]S01_SC_R_recv;
  input [0:0]S01_SC_R_req;
  input [0:0]S01_SC_R_send;
  input [0:0]S02_SC_B_info;
  input [8:0]S02_SC_B_payld;
  output [0:0]S02_SC_B_recv;
  input [0:0]S02_SC_B_req;
  input [0:0]S02_SC_B_send;
  input [0:0]S02_SC_R_info;
  input [54:0]S02_SC_R_payld;
  output [0:0]S02_SC_R_recv;
  input [0:0]S02_SC_R_req;
  input [0:0]S02_SC_R_send;
  input [0:0]S03_SC_B_info;
  input [8:0]S03_SC_B_payld;
  output [0:0]S03_SC_B_recv;
  input [0:0]S03_SC_B_req;
  input [0:0]S03_SC_B_send;
  input [0:0]S03_SC_R_info;
  input [54:0]S03_SC_R_payld;
  output [0:0]S03_SC_R_recv;
  input [0:0]S03_SC_R_req;
  input [0:0]S03_SC_R_send;
  input [0:0]S04_SC_B_info;
  input [8:0]S04_SC_B_payld;
  output [0:0]S04_SC_B_recv;
  input [0:0]S04_SC_B_req;
  input [0:0]S04_SC_B_send;
  input [0:0]S04_SC_R_info;
  input [54:0]S04_SC_R_payld;
  output [0:0]S04_SC_R_recv;
  input [0:0]S04_SC_R_req;
  input [0:0]S04_SC_R_send;
  input [0:0]S05_SC_B_info;
  input [8:0]S05_SC_B_payld;
  output [0:0]S05_SC_B_recv;
  input [0:0]S05_SC_B_req;
  input [0:0]S05_SC_B_send;
  input [0:0]S05_SC_R_info;
  input [54:0]S05_SC_R_payld;
  output [0:0]S05_SC_R_recv;
  input [0:0]S05_SC_R_req;
  input [0:0]S05_SC_R_send;
  input aclk;

  wire [5:0]S00_SC_AR_1_INFO;
  wire [181:0]S00_SC_AR_1_PAYLD;
  wire [5:0]S00_SC_AR_1_RECV;
  wire [5:0]S00_SC_AR_1_REQ;
  wire [5:0]S00_SC_AR_1_SEND;
  wire [5:0]S00_SC_AW_1_INFO;
  wire [181:0]S00_SC_AW_1_PAYLD;
  wire [5:0]S00_SC_AW_1_RECV;
  wire [5:0]S00_SC_AW_1_REQ;
  wire [5:0]S00_SC_AW_1_SEND;
  wire [0:0]S00_SC_B_1_INFO;
  wire [8:0]S00_SC_B_1_PAYLD;
  wire [0:0]S00_SC_B_1_RECV;
  wire [0:0]S00_SC_B_1_REQ;
  wire [0:0]S00_SC_B_1_SEND;
  wire [0:0]S00_SC_R_1_INFO;
  wire [54:0]S00_SC_R_1_PAYLD;
  wire [0:0]S00_SC_R_1_RECV;
  wire [0:0]S00_SC_R_1_REQ;
  wire [0:0]S00_SC_R_1_SEND;
  wire [5:0]S00_SC_W_1_INFO;
  wire [68:0]S00_SC_W_1_PAYLD;
  wire [5:0]S00_SC_W_1_RECV;
  wire [5:0]S00_SC_W_1_REQ;
  wire [5:0]S00_SC_W_1_SEND;
  wire [0:0]S01_SC_B_1_INFO;
  wire [8:0]S01_SC_B_1_PAYLD;
  wire [1:1]S01_SC_B_1_RECV;
  wire [0:0]S01_SC_B_1_REQ;
  wire [0:0]S01_SC_B_1_SEND;
  wire [0:0]S01_SC_R_1_INFO;
  wire [54:0]S01_SC_R_1_PAYLD;
  wire [1:1]S01_SC_R_1_RECV;
  wire [0:0]S01_SC_R_1_REQ;
  wire [0:0]S01_SC_R_1_SEND;
  wire [0:0]S02_SC_B_1_INFO;
  wire [8:0]S02_SC_B_1_PAYLD;
  wire [2:2]S02_SC_B_1_RECV;
  wire [0:0]S02_SC_B_1_REQ;
  wire [0:0]S02_SC_B_1_SEND;
  wire [0:0]S02_SC_R_1_INFO;
  wire [54:0]S02_SC_R_1_PAYLD;
  wire [2:2]S02_SC_R_1_RECV;
  wire [0:0]S02_SC_R_1_REQ;
  wire [0:0]S02_SC_R_1_SEND;
  wire [0:0]S03_SC_B_1_INFO;
  wire [8:0]S03_SC_B_1_PAYLD;
  wire [3:3]S03_SC_B_1_RECV;
  wire [0:0]S03_SC_B_1_REQ;
  wire [0:0]S03_SC_B_1_SEND;
  wire [0:0]S03_SC_R_1_INFO;
  wire [54:0]S03_SC_R_1_PAYLD;
  wire [3:3]S03_SC_R_1_RECV;
  wire [0:0]S03_SC_R_1_REQ;
  wire [0:0]S03_SC_R_1_SEND;
  wire [0:0]S04_SC_B_1_INFO;
  wire [8:0]S04_SC_B_1_PAYLD;
  wire [4:4]S04_SC_B_1_RECV;
  wire [0:0]S04_SC_B_1_REQ;
  wire [0:0]S04_SC_B_1_SEND;
  wire [0:0]S04_SC_R_1_INFO;
  wire [54:0]S04_SC_R_1_PAYLD;
  wire [4:4]S04_SC_R_1_RECV;
  wire [0:0]S04_SC_R_1_REQ;
  wire [0:0]S04_SC_R_1_SEND;
  wire [0:0]S05_SC_B_1_INFO;
  wire [8:0]S05_SC_B_1_PAYLD;
  wire [5:5]S05_SC_B_1_RECV;
  wire [0:0]S05_SC_B_1_REQ;
  wire [0:0]S05_SC_B_1_SEND;
  wire [0:0]S05_SC_R_1_INFO;
  wire [54:0]S05_SC_R_1_PAYLD;
  wire [5:5]S05_SC_R_1_RECV;
  wire [0:0]S05_SC_R_1_REQ;
  wire [0:0]S05_SC_R_1_SEND;
  wire aclk_1;
  wire [0:0]ar_la_out_swbd_6_M00_SC_INFO;
  wire [181:0]ar_la_out_swbd_6_M00_SC_PAYLD;
  wire [0:0]ar_la_out_swbd_6_M00_SC_RECV;
  wire [0:0]ar_la_out_swbd_6_M00_SC_REQ;
  wire [0:0]ar_la_out_swbd_6_M00_SC_SEND;
  wire [1:1]ar_la_out_swbd_6_M01_SC_INFO;
  wire [363:182]ar_la_out_swbd_6_M01_SC_PAYLD;
  wire [0:0]ar_la_out_swbd_6_M01_SC_RECV;
  wire [1:1]ar_la_out_swbd_6_M01_SC_REQ;
  wire [1:1]ar_la_out_swbd_6_M01_SC_SEND;
  wire [2:2]ar_la_out_swbd_6_M02_SC_INFO;
  wire [545:364]ar_la_out_swbd_6_M02_SC_PAYLD;
  wire [0:0]ar_la_out_swbd_6_M02_SC_RECV;
  wire [2:2]ar_la_out_swbd_6_M02_SC_REQ;
  wire [2:2]ar_la_out_swbd_6_M02_SC_SEND;
  wire [3:3]ar_la_out_swbd_6_M03_SC_INFO;
  wire [727:546]ar_la_out_swbd_6_M03_SC_PAYLD;
  wire [0:0]ar_la_out_swbd_6_M03_SC_RECV;
  wire [3:3]ar_la_out_swbd_6_M03_SC_REQ;
  wire [3:3]ar_la_out_swbd_6_M03_SC_SEND;
  wire [4:4]ar_la_out_swbd_6_M04_SC_INFO;
  wire [909:728]ar_la_out_swbd_6_M04_SC_PAYLD;
  wire [0:0]ar_la_out_swbd_6_M04_SC_RECV;
  wire [4:4]ar_la_out_swbd_6_M04_SC_REQ;
  wire [4:4]ar_la_out_swbd_6_M04_SC_SEND;
  wire [5:5]ar_la_out_swbd_6_M05_SC_INFO;
  wire [1091:910]ar_la_out_swbd_6_M05_SC_PAYLD;
  wire [0:0]ar_la_out_swbd_6_M05_SC_RECV;
  wire [5:5]ar_la_out_swbd_6_M05_SC_REQ;
  wire [5:5]ar_la_out_swbd_6_M05_SC_SEND;
  wire [0:0]aw_la_out_swbd_6_M00_SC_INFO;
  wire [181:0]aw_la_out_swbd_6_M00_SC_PAYLD;
  wire [0:0]aw_la_out_swbd_6_M00_SC_RECV;
  wire [0:0]aw_la_out_swbd_6_M00_SC_REQ;
  wire [0:0]aw_la_out_swbd_6_M00_SC_SEND;
  wire [1:1]aw_la_out_swbd_6_M01_SC_INFO;
  wire [363:182]aw_la_out_swbd_6_M01_SC_PAYLD;
  wire [0:0]aw_la_out_swbd_6_M01_SC_RECV;
  wire [1:1]aw_la_out_swbd_6_M01_SC_REQ;
  wire [1:1]aw_la_out_swbd_6_M01_SC_SEND;
  wire [2:2]aw_la_out_swbd_6_M02_SC_INFO;
  wire [545:364]aw_la_out_swbd_6_M02_SC_PAYLD;
  wire [0:0]aw_la_out_swbd_6_M02_SC_RECV;
  wire [2:2]aw_la_out_swbd_6_M02_SC_REQ;
  wire [2:2]aw_la_out_swbd_6_M02_SC_SEND;
  wire [3:3]aw_la_out_swbd_6_M03_SC_INFO;
  wire [727:546]aw_la_out_swbd_6_M03_SC_PAYLD;
  wire [0:0]aw_la_out_swbd_6_M03_SC_RECV;
  wire [3:3]aw_la_out_swbd_6_M03_SC_REQ;
  wire [3:3]aw_la_out_swbd_6_M03_SC_SEND;
  wire [4:4]aw_la_out_swbd_6_M04_SC_INFO;
  wire [909:728]aw_la_out_swbd_6_M04_SC_PAYLD;
  wire [0:0]aw_la_out_swbd_6_M04_SC_RECV;
  wire [4:4]aw_la_out_swbd_6_M04_SC_REQ;
  wire [4:4]aw_la_out_swbd_6_M04_SC_SEND;
  wire [5:5]aw_la_out_swbd_6_M05_SC_INFO;
  wire [1091:910]aw_la_out_swbd_6_M05_SC_PAYLD;
  wire [0:0]aw_la_out_swbd_6_M05_SC_RECV;
  wire [5:5]aw_la_out_swbd_6_M05_SC_REQ;
  wire [5:5]aw_la_out_swbd_6_M05_SC_SEND;
  wire [5:0]b_la_out_swbd_6_M00_SC_INFO;
  wire [8:0]b_la_out_swbd_6_M00_SC_PAYLD;
  wire [5:0]b_la_out_swbd_6_M00_SC_RECV;
  wire [5:0]b_la_out_swbd_6_M00_SC_REQ;
  wire [5:0]b_la_out_swbd_6_M00_SC_SEND;
  wire [5:0]r_la_out_swbd_6_M00_SC_INFO;
  wire [54:0]r_la_out_swbd_6_M00_SC_PAYLD;
  wire [5:0]r_la_out_swbd_6_M00_SC_RECV;
  wire [5:0]r_la_out_swbd_6_M00_SC_REQ;
  wire [5:0]r_la_out_swbd_6_M00_SC_SEND;
  wire [0:0]w_la_out_swbd_6_M00_SC_INFO;
  wire [68:0]w_la_out_swbd_6_M00_SC_PAYLD;
  wire [0:0]w_la_out_swbd_6_M00_SC_RECV;
  wire [0:0]w_la_out_swbd_6_M00_SC_REQ;
  wire [0:0]w_la_out_swbd_6_M00_SC_SEND;
  wire [1:1]w_la_out_swbd_6_M01_SC_INFO;
  wire [137:69]w_la_out_swbd_6_M01_SC_PAYLD;
  wire [0:0]w_la_out_swbd_6_M01_SC_RECV;
  wire [1:1]w_la_out_swbd_6_M01_SC_REQ;
  wire [1:1]w_la_out_swbd_6_M01_SC_SEND;
  wire [2:2]w_la_out_swbd_6_M02_SC_INFO;
  wire [206:138]w_la_out_swbd_6_M02_SC_PAYLD;
  wire [0:0]w_la_out_swbd_6_M02_SC_RECV;
  wire [2:2]w_la_out_swbd_6_M02_SC_REQ;
  wire [2:2]w_la_out_swbd_6_M02_SC_SEND;
  wire [3:3]w_la_out_swbd_6_M03_SC_INFO;
  wire [275:207]w_la_out_swbd_6_M03_SC_PAYLD;
  wire [0:0]w_la_out_swbd_6_M03_SC_RECV;
  wire [3:3]w_la_out_swbd_6_M03_SC_REQ;
  wire [3:3]w_la_out_swbd_6_M03_SC_SEND;
  wire [4:4]w_la_out_swbd_6_M04_SC_INFO;
  wire [344:276]w_la_out_swbd_6_M04_SC_PAYLD;
  wire [0:0]w_la_out_swbd_6_M04_SC_RECV;
  wire [4:4]w_la_out_swbd_6_M04_SC_REQ;
  wire [4:4]w_la_out_swbd_6_M04_SC_SEND;
  wire [5:5]w_la_out_swbd_6_M05_SC_INFO;
  wire [413:345]w_la_out_swbd_6_M05_SC_PAYLD;
  wire [0:0]w_la_out_swbd_6_M05_SC_RECV;
  wire [5:5]w_la_out_swbd_6_M05_SC_REQ;
  wire [5:5]w_la_out_swbd_6_M05_SC_SEND;

  assign M00_SC_AR_info[0] = ar_la_out_swbd_6_M00_SC_INFO;
  assign M00_SC_AR_payld[181:0] = ar_la_out_swbd_6_M00_SC_PAYLD;
  assign M00_SC_AR_req[0] = ar_la_out_swbd_6_M00_SC_REQ;
  assign M00_SC_AR_send[0] = ar_la_out_swbd_6_M00_SC_SEND;
  assign M00_SC_AW_info[0] = aw_la_out_swbd_6_M00_SC_INFO;
  assign M00_SC_AW_payld[181:0] = aw_la_out_swbd_6_M00_SC_PAYLD;
  assign M00_SC_AW_req[0] = aw_la_out_swbd_6_M00_SC_REQ;
  assign M00_SC_AW_send[0] = aw_la_out_swbd_6_M00_SC_SEND;
  assign M00_SC_B_info[5:0] = b_la_out_swbd_6_M00_SC_INFO;
  assign M00_SC_B_payld[8:0] = b_la_out_swbd_6_M00_SC_PAYLD;
  assign M00_SC_B_req[5:0] = b_la_out_swbd_6_M00_SC_REQ;
  assign M00_SC_B_send[5:0] = b_la_out_swbd_6_M00_SC_SEND;
  assign M00_SC_R_info[5:0] = r_la_out_swbd_6_M00_SC_INFO;
  assign M00_SC_R_payld[54:0] = r_la_out_swbd_6_M00_SC_PAYLD;
  assign M00_SC_R_req[5:0] = r_la_out_swbd_6_M00_SC_REQ;
  assign M00_SC_R_send[5:0] = r_la_out_swbd_6_M00_SC_SEND;
  assign M00_SC_W_info[0] = w_la_out_swbd_6_M00_SC_INFO;
  assign M00_SC_W_payld[68:0] = w_la_out_swbd_6_M00_SC_PAYLD;
  assign M00_SC_W_req[0] = w_la_out_swbd_6_M00_SC_REQ;
  assign M00_SC_W_send[0] = w_la_out_swbd_6_M00_SC_SEND;
  assign M01_SC_AR_info[0] = ar_la_out_swbd_6_M01_SC_INFO;
  assign M01_SC_AR_payld[181:0] = ar_la_out_swbd_6_M01_SC_PAYLD;
  assign M01_SC_AR_req[0] = ar_la_out_swbd_6_M01_SC_REQ;
  assign M01_SC_AR_send[0] = ar_la_out_swbd_6_M01_SC_SEND;
  assign M01_SC_AW_info[0] = aw_la_out_swbd_6_M01_SC_INFO;
  assign M01_SC_AW_payld[181:0] = aw_la_out_swbd_6_M01_SC_PAYLD;
  assign M01_SC_AW_req[0] = aw_la_out_swbd_6_M01_SC_REQ;
  assign M01_SC_AW_send[0] = aw_la_out_swbd_6_M01_SC_SEND;
  assign M01_SC_W_info[0] = w_la_out_swbd_6_M01_SC_INFO;
  assign M01_SC_W_payld[68:0] = w_la_out_swbd_6_M01_SC_PAYLD;
  assign M01_SC_W_req[0] = w_la_out_swbd_6_M01_SC_REQ;
  assign M01_SC_W_send[0] = w_la_out_swbd_6_M01_SC_SEND;
  assign M02_SC_AR_info[0] = ar_la_out_swbd_6_M02_SC_INFO;
  assign M02_SC_AR_payld[181:0] = ar_la_out_swbd_6_M02_SC_PAYLD;
  assign M02_SC_AR_req[0] = ar_la_out_swbd_6_M02_SC_REQ;
  assign M02_SC_AR_send[0] = ar_la_out_swbd_6_M02_SC_SEND;
  assign M02_SC_AW_info[0] = aw_la_out_swbd_6_M02_SC_INFO;
  assign M02_SC_AW_payld[181:0] = aw_la_out_swbd_6_M02_SC_PAYLD;
  assign M02_SC_AW_req[0] = aw_la_out_swbd_6_M02_SC_REQ;
  assign M02_SC_AW_send[0] = aw_la_out_swbd_6_M02_SC_SEND;
  assign M02_SC_W_info[0] = w_la_out_swbd_6_M02_SC_INFO;
  assign M02_SC_W_payld[68:0] = w_la_out_swbd_6_M02_SC_PAYLD;
  assign M02_SC_W_req[0] = w_la_out_swbd_6_M02_SC_REQ;
  assign M02_SC_W_send[0] = w_la_out_swbd_6_M02_SC_SEND;
  assign M03_SC_AR_info[0] = ar_la_out_swbd_6_M03_SC_INFO;
  assign M03_SC_AR_payld[181:0] = ar_la_out_swbd_6_M03_SC_PAYLD;
  assign M03_SC_AR_req[0] = ar_la_out_swbd_6_M03_SC_REQ;
  assign M03_SC_AR_send[0] = ar_la_out_swbd_6_M03_SC_SEND;
  assign M03_SC_AW_info[0] = aw_la_out_swbd_6_M03_SC_INFO;
  assign M03_SC_AW_payld[181:0] = aw_la_out_swbd_6_M03_SC_PAYLD;
  assign M03_SC_AW_req[0] = aw_la_out_swbd_6_M03_SC_REQ;
  assign M03_SC_AW_send[0] = aw_la_out_swbd_6_M03_SC_SEND;
  assign M03_SC_W_info[0] = w_la_out_swbd_6_M03_SC_INFO;
  assign M03_SC_W_payld[68:0] = w_la_out_swbd_6_M03_SC_PAYLD;
  assign M03_SC_W_req[0] = w_la_out_swbd_6_M03_SC_REQ;
  assign M03_SC_W_send[0] = w_la_out_swbd_6_M03_SC_SEND;
  assign M04_SC_AR_info[0] = ar_la_out_swbd_6_M04_SC_INFO;
  assign M04_SC_AR_payld[181:0] = ar_la_out_swbd_6_M04_SC_PAYLD;
  assign M04_SC_AR_req[0] = ar_la_out_swbd_6_M04_SC_REQ;
  assign M04_SC_AR_send[0] = ar_la_out_swbd_6_M04_SC_SEND;
  assign M04_SC_AW_info[0] = aw_la_out_swbd_6_M04_SC_INFO;
  assign M04_SC_AW_payld[181:0] = aw_la_out_swbd_6_M04_SC_PAYLD;
  assign M04_SC_AW_req[0] = aw_la_out_swbd_6_M04_SC_REQ;
  assign M04_SC_AW_send[0] = aw_la_out_swbd_6_M04_SC_SEND;
  assign M04_SC_W_info[0] = w_la_out_swbd_6_M04_SC_INFO;
  assign M04_SC_W_payld[68:0] = w_la_out_swbd_6_M04_SC_PAYLD;
  assign M04_SC_W_req[0] = w_la_out_swbd_6_M04_SC_REQ;
  assign M04_SC_W_send[0] = w_la_out_swbd_6_M04_SC_SEND;
  assign M05_SC_AR_info[0] = ar_la_out_swbd_6_M05_SC_INFO;
  assign M05_SC_AR_payld[181:0] = ar_la_out_swbd_6_M05_SC_PAYLD;
  assign M05_SC_AR_req[0] = ar_la_out_swbd_6_M05_SC_REQ;
  assign M05_SC_AR_send[0] = ar_la_out_swbd_6_M05_SC_SEND;
  assign M05_SC_AW_info[0] = aw_la_out_swbd_6_M05_SC_INFO;
  assign M05_SC_AW_payld[181:0] = aw_la_out_swbd_6_M05_SC_PAYLD;
  assign M05_SC_AW_req[0] = aw_la_out_swbd_6_M05_SC_REQ;
  assign M05_SC_AW_send[0] = aw_la_out_swbd_6_M05_SC_SEND;
  assign M05_SC_W_info[0] = w_la_out_swbd_6_M05_SC_INFO;
  assign M05_SC_W_payld[68:0] = w_la_out_swbd_6_M05_SC_PAYLD;
  assign M05_SC_W_req[0] = w_la_out_swbd_6_M05_SC_REQ;
  assign M05_SC_W_send[0] = w_la_out_swbd_6_M05_SC_SEND;
  assign S00_SC_AR_1_INFO = S00_SC_AR_info[5:0];
  assign S00_SC_AR_1_PAYLD = S00_SC_AR_payld[181:0];
  assign S00_SC_AR_1_REQ = S00_SC_AR_req[5:0];
  assign S00_SC_AR_1_SEND = S00_SC_AR_send[5:0];
  assign S00_SC_AR_recv[5:0] = S00_SC_AR_1_RECV;
  assign S00_SC_AW_1_INFO = S00_SC_AW_info[5:0];
  assign S00_SC_AW_1_PAYLD = S00_SC_AW_payld[181:0];
  assign S00_SC_AW_1_REQ = S00_SC_AW_req[5:0];
  assign S00_SC_AW_1_SEND = S00_SC_AW_send[5:0];
  assign S00_SC_AW_recv[5:0] = S00_SC_AW_1_RECV;
  assign S00_SC_B_1_INFO = S00_SC_B_info[0];
  assign S00_SC_B_1_PAYLD = S00_SC_B_payld[8:0];
  assign S00_SC_B_1_REQ = S00_SC_B_req[0];
  assign S00_SC_B_1_SEND = S00_SC_B_send[0];
  assign S00_SC_B_recv[0] = S00_SC_B_1_RECV;
  assign S00_SC_R_1_INFO = S00_SC_R_info[0];
  assign S00_SC_R_1_PAYLD = S00_SC_R_payld[54:0];
  assign S00_SC_R_1_REQ = S00_SC_R_req[0];
  assign S00_SC_R_1_SEND = S00_SC_R_send[0];
  assign S00_SC_R_recv[0] = S00_SC_R_1_RECV;
  assign S00_SC_W_1_INFO = S00_SC_W_info[5:0];
  assign S00_SC_W_1_PAYLD = S00_SC_W_payld[68:0];
  assign S00_SC_W_1_REQ = S00_SC_W_req[5:0];
  assign S00_SC_W_1_SEND = S00_SC_W_send[5:0];
  assign S00_SC_W_recv[5:0] = S00_SC_W_1_RECV;
  assign S01_SC_B_1_INFO = S01_SC_B_info[0];
  assign S01_SC_B_1_PAYLD = S01_SC_B_payld[8:0];
  assign S01_SC_B_1_REQ = S01_SC_B_req[0];
  assign S01_SC_B_1_SEND = S01_SC_B_send[0];
  assign S01_SC_B_recv[0] = S01_SC_B_1_RECV;
  assign S01_SC_R_1_INFO = S01_SC_R_info[0];
  assign S01_SC_R_1_PAYLD = S01_SC_R_payld[54:0];
  assign S01_SC_R_1_REQ = S01_SC_R_req[0];
  assign S01_SC_R_1_SEND = S01_SC_R_send[0];
  assign S01_SC_R_recv[0] = S01_SC_R_1_RECV;
  assign S02_SC_B_1_INFO = S02_SC_B_info[0];
  assign S02_SC_B_1_PAYLD = S02_SC_B_payld[8:0];
  assign S02_SC_B_1_REQ = S02_SC_B_req[0];
  assign S02_SC_B_1_SEND = S02_SC_B_send[0];
  assign S02_SC_B_recv[0] = S02_SC_B_1_RECV;
  assign S02_SC_R_1_INFO = S02_SC_R_info[0];
  assign S02_SC_R_1_PAYLD = S02_SC_R_payld[54:0];
  assign S02_SC_R_1_REQ = S02_SC_R_req[0];
  assign S02_SC_R_1_SEND = S02_SC_R_send[0];
  assign S02_SC_R_recv[0] = S02_SC_R_1_RECV;
  assign S03_SC_B_1_INFO = S03_SC_B_info[0];
  assign S03_SC_B_1_PAYLD = S03_SC_B_payld[8:0];
  assign S03_SC_B_1_REQ = S03_SC_B_req[0];
  assign S03_SC_B_1_SEND = S03_SC_B_send[0];
  assign S03_SC_B_recv[0] = S03_SC_B_1_RECV;
  assign S03_SC_R_1_INFO = S03_SC_R_info[0];
  assign S03_SC_R_1_PAYLD = S03_SC_R_payld[54:0];
  assign S03_SC_R_1_REQ = S03_SC_R_req[0];
  assign S03_SC_R_1_SEND = S03_SC_R_send[0];
  assign S03_SC_R_recv[0] = S03_SC_R_1_RECV;
  assign S04_SC_B_1_INFO = S04_SC_B_info[0];
  assign S04_SC_B_1_PAYLD = S04_SC_B_payld[8:0];
  assign S04_SC_B_1_REQ = S04_SC_B_req[0];
  assign S04_SC_B_1_SEND = S04_SC_B_send[0];
  assign S04_SC_B_recv[0] = S04_SC_B_1_RECV;
  assign S04_SC_R_1_INFO = S04_SC_R_info[0];
  assign S04_SC_R_1_PAYLD = S04_SC_R_payld[54:0];
  assign S04_SC_R_1_REQ = S04_SC_R_req[0];
  assign S04_SC_R_1_SEND = S04_SC_R_send[0];
  assign S04_SC_R_recv[0] = S04_SC_R_1_RECV;
  assign S05_SC_B_1_INFO = S05_SC_B_info[0];
  assign S05_SC_B_1_PAYLD = S05_SC_B_payld[8:0];
  assign S05_SC_B_1_REQ = S05_SC_B_req[0];
  assign S05_SC_B_1_SEND = S05_SC_B_send[0];
  assign S05_SC_B_recv[0] = S05_SC_B_1_RECV;
  assign S05_SC_R_1_INFO = S05_SC_R_info[0];
  assign S05_SC_R_1_PAYLD = S05_SC_R_payld[54:0];
  assign S05_SC_R_1_REQ = S05_SC_R_req[0];
  assign S05_SC_R_1_SEND = S05_SC_R_send[0];
  assign S05_SC_R_recv[0] = S05_SC_R_1_RECV;
  assign aclk_1 = aclk;
  assign ar_la_out_swbd_6_M00_SC_RECV = M00_SC_AR_recv[0];
  assign ar_la_out_swbd_6_M01_SC_RECV = M01_SC_AR_recv[0];
  assign ar_la_out_swbd_6_M02_SC_RECV = M02_SC_AR_recv[0];
  assign ar_la_out_swbd_6_M03_SC_RECV = M03_SC_AR_recv[0];
  assign ar_la_out_swbd_6_M04_SC_RECV = M04_SC_AR_recv[0];
  assign ar_la_out_swbd_6_M05_SC_RECV = M05_SC_AR_recv[0];
  assign aw_la_out_swbd_6_M00_SC_RECV = M00_SC_AW_recv[0];
  assign aw_la_out_swbd_6_M01_SC_RECV = M01_SC_AW_recv[0];
  assign aw_la_out_swbd_6_M02_SC_RECV = M02_SC_AW_recv[0];
  assign aw_la_out_swbd_6_M03_SC_RECV = M03_SC_AW_recv[0];
  assign aw_la_out_swbd_6_M04_SC_RECV = M04_SC_AW_recv[0];
  assign aw_la_out_swbd_6_M05_SC_RECV = M05_SC_AW_recv[0];
  assign b_la_out_swbd_6_M00_SC_RECV = M00_SC_B_recv[5:0];
  assign r_la_out_swbd_6_M00_SC_RECV = M00_SC_R_recv[5:0];
  assign w_la_out_swbd_6_M00_SC_RECV = M00_SC_W_recv[0];
  assign w_la_out_swbd_6_M01_SC_RECV = M01_SC_W_recv[0];
  assign w_la_out_swbd_6_M02_SC_RECV = M02_SC_W_recv[0];
  assign w_la_out_swbd_6_M03_SC_RECV = M03_SC_W_recv[0];
  assign w_la_out_swbd_6_M04_SC_RECV = M04_SC_W_recv[0];
  assign w_la_out_swbd_6_M05_SC_RECV = M05_SC_W_recv[0];
  bd_afc3_arinsw_7 ar_la_out_swbd_6
       (.aclk(aclk_1),
        .aclken(1'b1),
        .m_sc_info({ar_la_out_swbd_6_M05_SC_INFO,ar_la_out_swbd_6_M04_SC_INFO,ar_la_out_swbd_6_M03_SC_INFO,ar_la_out_swbd_6_M02_SC_INFO,ar_la_out_swbd_6_M01_SC_INFO,ar_la_out_swbd_6_M00_SC_INFO}),
        .m_sc_payld({ar_la_out_swbd_6_M05_SC_PAYLD,ar_la_out_swbd_6_M04_SC_PAYLD,ar_la_out_swbd_6_M03_SC_PAYLD,ar_la_out_swbd_6_M02_SC_PAYLD,ar_la_out_swbd_6_M01_SC_PAYLD,ar_la_out_swbd_6_M00_SC_PAYLD}),
        .m_sc_recv({ar_la_out_swbd_6_M05_SC_RECV,ar_la_out_swbd_6_M04_SC_RECV,ar_la_out_swbd_6_M03_SC_RECV,ar_la_out_swbd_6_M02_SC_RECV,ar_la_out_swbd_6_M01_SC_RECV,ar_la_out_swbd_6_M00_SC_RECV}),
        .m_sc_req({ar_la_out_swbd_6_M05_SC_REQ,ar_la_out_swbd_6_M04_SC_REQ,ar_la_out_swbd_6_M03_SC_REQ,ar_la_out_swbd_6_M02_SC_REQ,ar_la_out_swbd_6_M01_SC_REQ,ar_la_out_swbd_6_M00_SC_REQ}),
        .m_sc_send({ar_la_out_swbd_6_M05_SC_SEND,ar_la_out_swbd_6_M04_SC_SEND,ar_la_out_swbd_6_M03_SC_SEND,ar_la_out_swbd_6_M02_SC_SEND,ar_la_out_swbd_6_M01_SC_SEND,ar_la_out_swbd_6_M00_SC_SEND}),
        .s_sc_info(S00_SC_AR_1_INFO),
        .s_sc_payld(S00_SC_AR_1_PAYLD),
        .s_sc_recv(S00_SC_AR_1_RECV),
        .s_sc_req(S00_SC_AR_1_REQ),
        .s_sc_send(S00_SC_AR_1_SEND));
  bd_afc3_awinsw_7 aw_la_out_swbd_6
       (.aclk(aclk_1),
        .aclken(1'b1),
        .m_sc_info({aw_la_out_swbd_6_M05_SC_INFO,aw_la_out_swbd_6_M04_SC_INFO,aw_la_out_swbd_6_M03_SC_INFO,aw_la_out_swbd_6_M02_SC_INFO,aw_la_out_swbd_6_M01_SC_INFO,aw_la_out_swbd_6_M00_SC_INFO}),
        .m_sc_payld({aw_la_out_swbd_6_M05_SC_PAYLD,aw_la_out_swbd_6_M04_SC_PAYLD,aw_la_out_swbd_6_M03_SC_PAYLD,aw_la_out_swbd_6_M02_SC_PAYLD,aw_la_out_swbd_6_M01_SC_PAYLD,aw_la_out_swbd_6_M00_SC_PAYLD}),
        .m_sc_recv({aw_la_out_swbd_6_M05_SC_RECV,aw_la_out_swbd_6_M04_SC_RECV,aw_la_out_swbd_6_M03_SC_RECV,aw_la_out_swbd_6_M02_SC_RECV,aw_la_out_swbd_6_M01_SC_RECV,aw_la_out_swbd_6_M00_SC_RECV}),
        .m_sc_req({aw_la_out_swbd_6_M05_SC_REQ,aw_la_out_swbd_6_M04_SC_REQ,aw_la_out_swbd_6_M03_SC_REQ,aw_la_out_swbd_6_M02_SC_REQ,aw_la_out_swbd_6_M01_SC_REQ,aw_la_out_swbd_6_M00_SC_REQ}),
        .m_sc_send({aw_la_out_swbd_6_M05_SC_SEND,aw_la_out_swbd_6_M04_SC_SEND,aw_la_out_swbd_6_M03_SC_SEND,aw_la_out_swbd_6_M02_SC_SEND,aw_la_out_swbd_6_M01_SC_SEND,aw_la_out_swbd_6_M00_SC_SEND}),
        .s_sc_info(S00_SC_AW_1_INFO),
        .s_sc_payld(S00_SC_AW_1_PAYLD),
        .s_sc_recv(S00_SC_AW_1_RECV),
        .s_sc_req(S00_SC_AW_1_REQ),
        .s_sc_send(S00_SC_AW_1_SEND));
  bd_afc3_binsw_7 b_la_out_swbd_6
       (.aclk(aclk_1),
        .aclken(1'b1),
        .m_sc_info(b_la_out_swbd_6_M00_SC_INFO),
        .m_sc_payld(b_la_out_swbd_6_M00_SC_PAYLD),
        .m_sc_recv(b_la_out_swbd_6_M00_SC_RECV),
        .m_sc_req(b_la_out_swbd_6_M00_SC_REQ),
        .m_sc_send(b_la_out_swbd_6_M00_SC_SEND),
        .s_sc_info({S05_SC_B_1_INFO,S04_SC_B_1_INFO,S03_SC_B_1_INFO,S02_SC_B_1_INFO,S01_SC_B_1_INFO,S00_SC_B_1_INFO}),
        .s_sc_payld({S05_SC_B_1_PAYLD,S04_SC_B_1_PAYLD,S03_SC_B_1_PAYLD,S02_SC_B_1_PAYLD,S01_SC_B_1_PAYLD,S00_SC_B_1_PAYLD}),
        .s_sc_recv({S05_SC_B_1_RECV,S04_SC_B_1_RECV,S03_SC_B_1_RECV,S02_SC_B_1_RECV,S01_SC_B_1_RECV,S00_SC_B_1_RECV}),
        .s_sc_req({S05_SC_B_1_REQ,S04_SC_B_1_REQ,S03_SC_B_1_REQ,S02_SC_B_1_REQ,S01_SC_B_1_REQ,S00_SC_B_1_REQ}),
        .s_sc_send({S05_SC_B_1_SEND,S04_SC_B_1_SEND,S03_SC_B_1_SEND,S02_SC_B_1_SEND,S01_SC_B_1_SEND,S00_SC_B_1_SEND}));
  bd_afc3_rinsw_7 r_la_out_swbd_6
       (.aclk(aclk_1),
        .aclken(1'b1),
        .m_sc_info(r_la_out_swbd_6_M00_SC_INFO),
        .m_sc_payld(r_la_out_swbd_6_M00_SC_PAYLD),
        .m_sc_recv(r_la_out_swbd_6_M00_SC_RECV),
        .m_sc_req(r_la_out_swbd_6_M00_SC_REQ),
        .m_sc_send(r_la_out_swbd_6_M00_SC_SEND),
        .s_sc_info({S05_SC_R_1_INFO,S04_SC_R_1_INFO,S03_SC_R_1_INFO,S02_SC_R_1_INFO,S01_SC_R_1_INFO,S00_SC_R_1_INFO}),
        .s_sc_payld({S05_SC_R_1_PAYLD,S04_SC_R_1_PAYLD,S03_SC_R_1_PAYLD,S02_SC_R_1_PAYLD,S01_SC_R_1_PAYLD,S00_SC_R_1_PAYLD}),
        .s_sc_recv({S05_SC_R_1_RECV,S04_SC_R_1_RECV,S03_SC_R_1_RECV,S02_SC_R_1_RECV,S01_SC_R_1_RECV,S00_SC_R_1_RECV}),
        .s_sc_req({S05_SC_R_1_REQ,S04_SC_R_1_REQ,S03_SC_R_1_REQ,S02_SC_R_1_REQ,S01_SC_R_1_REQ,S00_SC_R_1_REQ}),
        .s_sc_send({S05_SC_R_1_SEND,S04_SC_R_1_SEND,S03_SC_R_1_SEND,S02_SC_R_1_SEND,S01_SC_R_1_SEND,S00_SC_R_1_SEND}));
  bd_afc3_winsw_7 w_la_out_swbd_6
       (.aclk(aclk_1),
        .aclken(1'b1),
        .m_sc_info({w_la_out_swbd_6_M05_SC_INFO,w_la_out_swbd_6_M04_SC_INFO,w_la_out_swbd_6_M03_SC_INFO,w_la_out_swbd_6_M02_SC_INFO,w_la_out_swbd_6_M01_SC_INFO,w_la_out_swbd_6_M00_SC_INFO}),
        .m_sc_payld({w_la_out_swbd_6_M05_SC_PAYLD,w_la_out_swbd_6_M04_SC_PAYLD,w_la_out_swbd_6_M03_SC_PAYLD,w_la_out_swbd_6_M02_SC_PAYLD,w_la_out_swbd_6_M01_SC_PAYLD,w_la_out_swbd_6_M00_SC_PAYLD}),
        .m_sc_recv({w_la_out_swbd_6_M05_SC_RECV,w_la_out_swbd_6_M04_SC_RECV,w_la_out_swbd_6_M03_SC_RECV,w_la_out_swbd_6_M02_SC_RECV,w_la_out_swbd_6_M01_SC_RECV,w_la_out_swbd_6_M00_SC_RECV}),
        .m_sc_req({w_la_out_swbd_6_M05_SC_REQ,w_la_out_swbd_6_M04_SC_REQ,w_la_out_swbd_6_M03_SC_REQ,w_la_out_swbd_6_M02_SC_REQ,w_la_out_swbd_6_M01_SC_REQ,w_la_out_swbd_6_M00_SC_REQ}),
        .m_sc_send({w_la_out_swbd_6_M05_SC_SEND,w_la_out_swbd_6_M04_SC_SEND,w_la_out_swbd_6_M03_SC_SEND,w_la_out_swbd_6_M02_SC_SEND,w_la_out_swbd_6_M01_SC_SEND,w_la_out_swbd_6_M00_SC_SEND}),
        .s_sc_info(S00_SC_W_1_INFO),
        .s_sc_payld(S00_SC_W_1_PAYLD),
        .s_sc_recv(S00_SC_W_1_RECV),
        .s_sc_req(S00_SC_W_1_REQ),
        .s_sc_send(S00_SC_W_1_SEND));
endmodule

module out_swbd_7_imp_Y8MDKD
   (M00_SC_AR_info,
    M00_SC_AR_payld,
    M00_SC_AR_recv,
    M00_SC_AR_req,
    M00_SC_AR_send,
    M00_SC_AW_info,
    M00_SC_AW_payld,
    M00_SC_AW_recv,
    M00_SC_AW_req,
    M00_SC_AW_send,
    M00_SC_B_info,
    M00_SC_B_payld,
    M00_SC_B_recv,
    M00_SC_B_req,
    M00_SC_B_send,
    M00_SC_R_info,
    M00_SC_R_payld,
    M00_SC_R_recv,
    M00_SC_R_req,
    M00_SC_R_send,
    M00_SC_W_info,
    M00_SC_W_payld,
    M00_SC_W_recv,
    M00_SC_W_req,
    M00_SC_W_send,
    M01_SC_AR_info,
    M01_SC_AR_payld,
    M01_SC_AR_recv,
    M01_SC_AR_req,
    M01_SC_AR_send,
    M01_SC_AW_info,
    M01_SC_AW_payld,
    M01_SC_AW_recv,
    M01_SC_AW_req,
    M01_SC_AW_send,
    M01_SC_W_info,
    M01_SC_W_payld,
    M01_SC_W_recv,
    M01_SC_W_req,
    M01_SC_W_send,
    M02_SC_AR_info,
    M02_SC_AR_payld,
    M02_SC_AR_recv,
    M02_SC_AR_req,
    M02_SC_AR_send,
    M02_SC_AW_info,
    M02_SC_AW_payld,
    M02_SC_AW_recv,
    M02_SC_AW_req,
    M02_SC_AW_send,
    M02_SC_W_info,
    M02_SC_W_payld,
    M02_SC_W_recv,
    M02_SC_W_req,
    M02_SC_W_send,
    M03_SC_AR_info,
    M03_SC_AR_payld,
    M03_SC_AR_recv,
    M03_SC_AR_req,
    M03_SC_AR_send,
    M03_SC_AW_info,
    M03_SC_AW_payld,
    M03_SC_AW_recv,
    M03_SC_AW_req,
    M03_SC_AW_send,
    M03_SC_W_info,
    M03_SC_W_payld,
    M03_SC_W_recv,
    M03_SC_W_req,
    M03_SC_W_send,
    M04_SC_AR_info,
    M04_SC_AR_payld,
    M04_SC_AR_recv,
    M04_SC_AR_req,
    M04_SC_AR_send,
    M04_SC_AW_info,
    M04_SC_AW_payld,
    M04_SC_AW_recv,
    M04_SC_AW_req,
    M04_SC_AW_send,
    M04_SC_W_info,
    M04_SC_W_payld,
    M04_SC_W_recv,
    M04_SC_W_req,
    M04_SC_W_send,
    M05_SC_AR_info,
    M05_SC_AR_payld,
    M05_SC_AR_recv,
    M05_SC_AR_req,
    M05_SC_AR_send,
    M05_SC_AW_info,
    M05_SC_AW_payld,
    M05_SC_AW_recv,
    M05_SC_AW_req,
    M05_SC_AW_send,
    M05_SC_W_info,
    M05_SC_W_payld,
    M05_SC_W_recv,
    M05_SC_W_req,
    M05_SC_W_send,
    S00_SC_AR_info,
    S00_SC_AR_payld,
    S00_SC_AR_recv,
    S00_SC_AR_req,
    S00_SC_AR_send,
    S00_SC_AW_info,
    S00_SC_AW_payld,
    S00_SC_AW_recv,
    S00_SC_AW_req,
    S00_SC_AW_send,
    S00_SC_B_info,
    S00_SC_B_payld,
    S00_SC_B_recv,
    S00_SC_B_req,
    S00_SC_B_send,
    S00_SC_R_info,
    S00_SC_R_payld,
    S00_SC_R_recv,
    S00_SC_R_req,
    S00_SC_R_send,
    S00_SC_W_info,
    S00_SC_W_payld,
    S00_SC_W_recv,
    S00_SC_W_req,
    S00_SC_W_send,
    S01_SC_B_info,
    S01_SC_B_payld,
    S01_SC_B_recv,
    S01_SC_B_req,
    S01_SC_B_send,
    S01_SC_R_info,
    S01_SC_R_payld,
    S01_SC_R_recv,
    S01_SC_R_req,
    S01_SC_R_send,
    S02_SC_B_info,
    S02_SC_B_payld,
    S02_SC_B_recv,
    S02_SC_B_req,
    S02_SC_B_send,
    S02_SC_R_info,
    S02_SC_R_payld,
    S02_SC_R_recv,
    S02_SC_R_req,
    S02_SC_R_send,
    S03_SC_B_info,
    S03_SC_B_payld,
    S03_SC_B_recv,
    S03_SC_B_req,
    S03_SC_B_send,
    S03_SC_R_info,
    S03_SC_R_payld,
    S03_SC_R_recv,
    S03_SC_R_req,
    S03_SC_R_send,
    S04_SC_B_info,
    S04_SC_B_payld,
    S04_SC_B_recv,
    S04_SC_B_req,
    S04_SC_B_send,
    S04_SC_R_info,
    S04_SC_R_payld,
    S04_SC_R_recv,
    S04_SC_R_req,
    S04_SC_R_send,
    S05_SC_B_info,
    S05_SC_B_payld,
    S05_SC_B_recv,
    S05_SC_B_req,
    S05_SC_B_send,
    S05_SC_R_info,
    S05_SC_R_payld,
    S05_SC_R_recv,
    S05_SC_R_req,
    S05_SC_R_send,
    aclk);
  output [0:0]M00_SC_AR_info;
  output [181:0]M00_SC_AR_payld;
  input [0:0]M00_SC_AR_recv;
  output [0:0]M00_SC_AR_req;
  output [0:0]M00_SC_AR_send;
  output [0:0]M00_SC_AW_info;
  output [181:0]M00_SC_AW_payld;
  input [0:0]M00_SC_AW_recv;
  output [0:0]M00_SC_AW_req;
  output [0:0]M00_SC_AW_send;
  output [5:0]M00_SC_B_info;
  output [8:0]M00_SC_B_payld;
  input [5:0]M00_SC_B_recv;
  output [5:0]M00_SC_B_req;
  output [5:0]M00_SC_B_send;
  output [5:0]M00_SC_R_info;
  output [54:0]M00_SC_R_payld;
  input [5:0]M00_SC_R_recv;
  output [5:0]M00_SC_R_req;
  output [5:0]M00_SC_R_send;
  output [0:0]M00_SC_W_info;
  output [68:0]M00_SC_W_payld;
  input [0:0]M00_SC_W_recv;
  output [0:0]M00_SC_W_req;
  output [0:0]M00_SC_W_send;
  output [0:0]M01_SC_AR_info;
  output [181:0]M01_SC_AR_payld;
  input [0:0]M01_SC_AR_recv;
  output [0:0]M01_SC_AR_req;
  output [0:0]M01_SC_AR_send;
  output [0:0]M01_SC_AW_info;
  output [181:0]M01_SC_AW_payld;
  input [0:0]M01_SC_AW_recv;
  output [0:0]M01_SC_AW_req;
  output [0:0]M01_SC_AW_send;
  output [0:0]M01_SC_W_info;
  output [68:0]M01_SC_W_payld;
  input [0:0]M01_SC_W_recv;
  output [0:0]M01_SC_W_req;
  output [0:0]M01_SC_W_send;
  output [0:0]M02_SC_AR_info;
  output [181:0]M02_SC_AR_payld;
  input [0:0]M02_SC_AR_recv;
  output [0:0]M02_SC_AR_req;
  output [0:0]M02_SC_AR_send;
  output [0:0]M02_SC_AW_info;
  output [181:0]M02_SC_AW_payld;
  input [0:0]M02_SC_AW_recv;
  output [0:0]M02_SC_AW_req;
  output [0:0]M02_SC_AW_send;
  output [0:0]M02_SC_W_info;
  output [68:0]M02_SC_W_payld;
  input [0:0]M02_SC_W_recv;
  output [0:0]M02_SC_W_req;
  output [0:0]M02_SC_W_send;
  output [0:0]M03_SC_AR_info;
  output [181:0]M03_SC_AR_payld;
  input [0:0]M03_SC_AR_recv;
  output [0:0]M03_SC_AR_req;
  output [0:0]M03_SC_AR_send;
  output [0:0]M03_SC_AW_info;
  output [181:0]M03_SC_AW_payld;
  input [0:0]M03_SC_AW_recv;
  output [0:0]M03_SC_AW_req;
  output [0:0]M03_SC_AW_send;
  output [0:0]M03_SC_W_info;
  output [68:0]M03_SC_W_payld;
  input [0:0]M03_SC_W_recv;
  output [0:0]M03_SC_W_req;
  output [0:0]M03_SC_W_send;
  output [0:0]M04_SC_AR_info;
  output [181:0]M04_SC_AR_payld;
  input [0:0]M04_SC_AR_recv;
  output [0:0]M04_SC_AR_req;
  output [0:0]M04_SC_AR_send;
  output [0:0]M04_SC_AW_info;
  output [181:0]M04_SC_AW_payld;
  input [0:0]M04_SC_AW_recv;
  output [0:0]M04_SC_AW_req;
  output [0:0]M04_SC_AW_send;
  output [0:0]M04_SC_W_info;
  output [68:0]M04_SC_W_payld;
  input [0:0]M04_SC_W_recv;
  output [0:0]M04_SC_W_req;
  output [0:0]M04_SC_W_send;
  output [0:0]M05_SC_AR_info;
  output [181:0]M05_SC_AR_payld;
  input [0:0]M05_SC_AR_recv;
  output [0:0]M05_SC_AR_req;
  output [0:0]M05_SC_AR_send;
  output [0:0]M05_SC_AW_info;
  output [181:0]M05_SC_AW_payld;
  input [0:0]M05_SC_AW_recv;
  output [0:0]M05_SC_AW_req;
  output [0:0]M05_SC_AW_send;
  output [0:0]M05_SC_W_info;
  output [68:0]M05_SC_W_payld;
  input [0:0]M05_SC_W_recv;
  output [0:0]M05_SC_W_req;
  output [0:0]M05_SC_W_send;
  input [5:0]S00_SC_AR_info;
  input [181:0]S00_SC_AR_payld;
  output [5:0]S00_SC_AR_recv;
  input [5:0]S00_SC_AR_req;
  input [5:0]S00_SC_AR_send;
  input [5:0]S00_SC_AW_info;
  input [181:0]S00_SC_AW_payld;
  output [5:0]S00_SC_AW_recv;
  input [5:0]S00_SC_AW_req;
  input [5:0]S00_SC_AW_send;
  input [0:0]S00_SC_B_info;
  input [8:0]S00_SC_B_payld;
  output [0:0]S00_SC_B_recv;
  input [0:0]S00_SC_B_req;
  input [0:0]S00_SC_B_send;
  input [0:0]S00_SC_R_info;
  input [54:0]S00_SC_R_payld;
  output [0:0]S00_SC_R_recv;
  input [0:0]S00_SC_R_req;
  input [0:0]S00_SC_R_send;
  input [5:0]S00_SC_W_info;
  input [68:0]S00_SC_W_payld;
  output [5:0]S00_SC_W_recv;
  input [5:0]S00_SC_W_req;
  input [5:0]S00_SC_W_send;
  input [0:0]S01_SC_B_info;
  input [8:0]S01_SC_B_payld;
  output [0:0]S01_SC_B_recv;
  input [0:0]S01_SC_B_req;
  input [0:0]S01_SC_B_send;
  input [0:0]S01_SC_R_info;
  input [54:0]S01_SC_R_payld;
  output [0:0]S01_SC_R_recv;
  input [0:0]S01_SC_R_req;
  input [0:0]S01_SC_R_send;
  input [0:0]S02_SC_B_info;
  input [8:0]S02_SC_B_payld;
  output [0:0]S02_SC_B_recv;
  input [0:0]S02_SC_B_req;
  input [0:0]S02_SC_B_send;
  input [0:0]S02_SC_R_info;
  input [54:0]S02_SC_R_payld;
  output [0:0]S02_SC_R_recv;
  input [0:0]S02_SC_R_req;
  input [0:0]S02_SC_R_send;
  input [0:0]S03_SC_B_info;
  input [8:0]S03_SC_B_payld;
  output [0:0]S03_SC_B_recv;
  input [0:0]S03_SC_B_req;
  input [0:0]S03_SC_B_send;
  input [0:0]S03_SC_R_info;
  input [54:0]S03_SC_R_payld;
  output [0:0]S03_SC_R_recv;
  input [0:0]S03_SC_R_req;
  input [0:0]S03_SC_R_send;
  input [0:0]S04_SC_B_info;
  input [8:0]S04_SC_B_payld;
  output [0:0]S04_SC_B_recv;
  input [0:0]S04_SC_B_req;
  input [0:0]S04_SC_B_send;
  input [0:0]S04_SC_R_info;
  input [54:0]S04_SC_R_payld;
  output [0:0]S04_SC_R_recv;
  input [0:0]S04_SC_R_req;
  input [0:0]S04_SC_R_send;
  input [0:0]S05_SC_B_info;
  input [8:0]S05_SC_B_payld;
  output [0:0]S05_SC_B_recv;
  input [0:0]S05_SC_B_req;
  input [0:0]S05_SC_B_send;
  input [0:0]S05_SC_R_info;
  input [54:0]S05_SC_R_payld;
  output [0:0]S05_SC_R_recv;
  input [0:0]S05_SC_R_req;
  input [0:0]S05_SC_R_send;
  input aclk;

  wire [5:0]S00_SC_AR_1_INFO;
  wire [181:0]S00_SC_AR_1_PAYLD;
  wire [5:0]S00_SC_AR_1_RECV;
  wire [5:0]S00_SC_AR_1_REQ;
  wire [5:0]S00_SC_AR_1_SEND;
  wire [5:0]S00_SC_AW_1_INFO;
  wire [181:0]S00_SC_AW_1_PAYLD;
  wire [5:0]S00_SC_AW_1_RECV;
  wire [5:0]S00_SC_AW_1_REQ;
  wire [5:0]S00_SC_AW_1_SEND;
  wire [0:0]S00_SC_B_1_INFO;
  wire [8:0]S00_SC_B_1_PAYLD;
  wire [0:0]S00_SC_B_1_RECV;
  wire [0:0]S00_SC_B_1_REQ;
  wire [0:0]S00_SC_B_1_SEND;
  wire [0:0]S00_SC_R_1_INFO;
  wire [54:0]S00_SC_R_1_PAYLD;
  wire [0:0]S00_SC_R_1_RECV;
  wire [0:0]S00_SC_R_1_REQ;
  wire [0:0]S00_SC_R_1_SEND;
  wire [5:0]S00_SC_W_1_INFO;
  wire [68:0]S00_SC_W_1_PAYLD;
  wire [5:0]S00_SC_W_1_RECV;
  wire [5:0]S00_SC_W_1_REQ;
  wire [5:0]S00_SC_W_1_SEND;
  wire [0:0]S01_SC_B_1_INFO;
  wire [8:0]S01_SC_B_1_PAYLD;
  wire [1:1]S01_SC_B_1_RECV;
  wire [0:0]S01_SC_B_1_REQ;
  wire [0:0]S01_SC_B_1_SEND;
  wire [0:0]S01_SC_R_1_INFO;
  wire [54:0]S01_SC_R_1_PAYLD;
  wire [1:1]S01_SC_R_1_RECV;
  wire [0:0]S01_SC_R_1_REQ;
  wire [0:0]S01_SC_R_1_SEND;
  wire [0:0]S02_SC_B_1_INFO;
  wire [8:0]S02_SC_B_1_PAYLD;
  wire [2:2]S02_SC_B_1_RECV;
  wire [0:0]S02_SC_B_1_REQ;
  wire [0:0]S02_SC_B_1_SEND;
  wire [0:0]S02_SC_R_1_INFO;
  wire [54:0]S02_SC_R_1_PAYLD;
  wire [2:2]S02_SC_R_1_RECV;
  wire [0:0]S02_SC_R_1_REQ;
  wire [0:0]S02_SC_R_1_SEND;
  wire [0:0]S03_SC_B_1_INFO;
  wire [8:0]S03_SC_B_1_PAYLD;
  wire [3:3]S03_SC_B_1_RECV;
  wire [0:0]S03_SC_B_1_REQ;
  wire [0:0]S03_SC_B_1_SEND;
  wire [0:0]S03_SC_R_1_INFO;
  wire [54:0]S03_SC_R_1_PAYLD;
  wire [3:3]S03_SC_R_1_RECV;
  wire [0:0]S03_SC_R_1_REQ;
  wire [0:0]S03_SC_R_1_SEND;
  wire [0:0]S04_SC_B_1_INFO;
  wire [8:0]S04_SC_B_1_PAYLD;
  wire [4:4]S04_SC_B_1_RECV;
  wire [0:0]S04_SC_B_1_REQ;
  wire [0:0]S04_SC_B_1_SEND;
  wire [0:0]S04_SC_R_1_INFO;
  wire [54:0]S04_SC_R_1_PAYLD;
  wire [4:4]S04_SC_R_1_RECV;
  wire [0:0]S04_SC_R_1_REQ;
  wire [0:0]S04_SC_R_1_SEND;
  wire [0:0]S05_SC_B_1_INFO;
  wire [8:0]S05_SC_B_1_PAYLD;
  wire [5:5]S05_SC_B_1_RECV;
  wire [0:0]S05_SC_B_1_REQ;
  wire [0:0]S05_SC_B_1_SEND;
  wire [0:0]S05_SC_R_1_INFO;
  wire [54:0]S05_SC_R_1_PAYLD;
  wire [5:5]S05_SC_R_1_RECV;
  wire [0:0]S05_SC_R_1_REQ;
  wire [0:0]S05_SC_R_1_SEND;
  wire aclk_1;
  wire [0:0]ar_la_out_swbd_7_M00_SC_INFO;
  wire [181:0]ar_la_out_swbd_7_M00_SC_PAYLD;
  wire [0:0]ar_la_out_swbd_7_M00_SC_RECV;
  wire [0:0]ar_la_out_swbd_7_M00_SC_REQ;
  wire [0:0]ar_la_out_swbd_7_M00_SC_SEND;
  wire [1:1]ar_la_out_swbd_7_M01_SC_INFO;
  wire [363:182]ar_la_out_swbd_7_M01_SC_PAYLD;
  wire [0:0]ar_la_out_swbd_7_M01_SC_RECV;
  wire [1:1]ar_la_out_swbd_7_M01_SC_REQ;
  wire [1:1]ar_la_out_swbd_7_M01_SC_SEND;
  wire [2:2]ar_la_out_swbd_7_M02_SC_INFO;
  wire [545:364]ar_la_out_swbd_7_M02_SC_PAYLD;
  wire [0:0]ar_la_out_swbd_7_M02_SC_RECV;
  wire [2:2]ar_la_out_swbd_7_M02_SC_REQ;
  wire [2:2]ar_la_out_swbd_7_M02_SC_SEND;
  wire [3:3]ar_la_out_swbd_7_M03_SC_INFO;
  wire [727:546]ar_la_out_swbd_7_M03_SC_PAYLD;
  wire [0:0]ar_la_out_swbd_7_M03_SC_RECV;
  wire [3:3]ar_la_out_swbd_7_M03_SC_REQ;
  wire [3:3]ar_la_out_swbd_7_M03_SC_SEND;
  wire [4:4]ar_la_out_swbd_7_M04_SC_INFO;
  wire [909:728]ar_la_out_swbd_7_M04_SC_PAYLD;
  wire [0:0]ar_la_out_swbd_7_M04_SC_RECV;
  wire [4:4]ar_la_out_swbd_7_M04_SC_REQ;
  wire [4:4]ar_la_out_swbd_7_M04_SC_SEND;
  wire [5:5]ar_la_out_swbd_7_M05_SC_INFO;
  wire [1091:910]ar_la_out_swbd_7_M05_SC_PAYLD;
  wire [0:0]ar_la_out_swbd_7_M05_SC_RECV;
  wire [5:5]ar_la_out_swbd_7_M05_SC_REQ;
  wire [5:5]ar_la_out_swbd_7_M05_SC_SEND;
  wire [0:0]aw_la_out_swbd_7_M00_SC_INFO;
  wire [181:0]aw_la_out_swbd_7_M00_SC_PAYLD;
  wire [0:0]aw_la_out_swbd_7_M00_SC_RECV;
  wire [0:0]aw_la_out_swbd_7_M00_SC_REQ;
  wire [0:0]aw_la_out_swbd_7_M00_SC_SEND;
  wire [1:1]aw_la_out_swbd_7_M01_SC_INFO;
  wire [363:182]aw_la_out_swbd_7_M01_SC_PAYLD;
  wire [0:0]aw_la_out_swbd_7_M01_SC_RECV;
  wire [1:1]aw_la_out_swbd_7_M01_SC_REQ;
  wire [1:1]aw_la_out_swbd_7_M01_SC_SEND;
  wire [2:2]aw_la_out_swbd_7_M02_SC_INFO;
  wire [545:364]aw_la_out_swbd_7_M02_SC_PAYLD;
  wire [0:0]aw_la_out_swbd_7_M02_SC_RECV;
  wire [2:2]aw_la_out_swbd_7_M02_SC_REQ;
  wire [2:2]aw_la_out_swbd_7_M02_SC_SEND;
  wire [3:3]aw_la_out_swbd_7_M03_SC_INFO;
  wire [727:546]aw_la_out_swbd_7_M03_SC_PAYLD;
  wire [0:0]aw_la_out_swbd_7_M03_SC_RECV;
  wire [3:3]aw_la_out_swbd_7_M03_SC_REQ;
  wire [3:3]aw_la_out_swbd_7_M03_SC_SEND;
  wire [4:4]aw_la_out_swbd_7_M04_SC_INFO;
  wire [909:728]aw_la_out_swbd_7_M04_SC_PAYLD;
  wire [0:0]aw_la_out_swbd_7_M04_SC_RECV;
  wire [4:4]aw_la_out_swbd_7_M04_SC_REQ;
  wire [4:4]aw_la_out_swbd_7_M04_SC_SEND;
  wire [5:5]aw_la_out_swbd_7_M05_SC_INFO;
  wire [1091:910]aw_la_out_swbd_7_M05_SC_PAYLD;
  wire [0:0]aw_la_out_swbd_7_M05_SC_RECV;
  wire [5:5]aw_la_out_swbd_7_M05_SC_REQ;
  wire [5:5]aw_la_out_swbd_7_M05_SC_SEND;
  wire [5:0]b_la_out_swbd_7_M00_SC_INFO;
  wire [8:0]b_la_out_swbd_7_M00_SC_PAYLD;
  wire [5:0]b_la_out_swbd_7_M00_SC_RECV;
  wire [5:0]b_la_out_swbd_7_M00_SC_REQ;
  wire [5:0]b_la_out_swbd_7_M00_SC_SEND;
  wire [5:0]r_la_out_swbd_7_M00_SC_INFO;
  wire [54:0]r_la_out_swbd_7_M00_SC_PAYLD;
  wire [5:0]r_la_out_swbd_7_M00_SC_RECV;
  wire [5:0]r_la_out_swbd_7_M00_SC_REQ;
  wire [5:0]r_la_out_swbd_7_M00_SC_SEND;
  wire [0:0]w_la_out_swbd_7_M00_SC_INFO;
  wire [68:0]w_la_out_swbd_7_M00_SC_PAYLD;
  wire [0:0]w_la_out_swbd_7_M00_SC_RECV;
  wire [0:0]w_la_out_swbd_7_M00_SC_REQ;
  wire [0:0]w_la_out_swbd_7_M00_SC_SEND;
  wire [1:1]w_la_out_swbd_7_M01_SC_INFO;
  wire [137:69]w_la_out_swbd_7_M01_SC_PAYLD;
  wire [0:0]w_la_out_swbd_7_M01_SC_RECV;
  wire [1:1]w_la_out_swbd_7_M01_SC_REQ;
  wire [1:1]w_la_out_swbd_7_M01_SC_SEND;
  wire [2:2]w_la_out_swbd_7_M02_SC_INFO;
  wire [206:138]w_la_out_swbd_7_M02_SC_PAYLD;
  wire [0:0]w_la_out_swbd_7_M02_SC_RECV;
  wire [2:2]w_la_out_swbd_7_M02_SC_REQ;
  wire [2:2]w_la_out_swbd_7_M02_SC_SEND;
  wire [3:3]w_la_out_swbd_7_M03_SC_INFO;
  wire [275:207]w_la_out_swbd_7_M03_SC_PAYLD;
  wire [0:0]w_la_out_swbd_7_M03_SC_RECV;
  wire [3:3]w_la_out_swbd_7_M03_SC_REQ;
  wire [3:3]w_la_out_swbd_7_M03_SC_SEND;
  wire [4:4]w_la_out_swbd_7_M04_SC_INFO;
  wire [344:276]w_la_out_swbd_7_M04_SC_PAYLD;
  wire [0:0]w_la_out_swbd_7_M04_SC_RECV;
  wire [4:4]w_la_out_swbd_7_M04_SC_REQ;
  wire [4:4]w_la_out_swbd_7_M04_SC_SEND;
  wire [5:5]w_la_out_swbd_7_M05_SC_INFO;
  wire [413:345]w_la_out_swbd_7_M05_SC_PAYLD;
  wire [0:0]w_la_out_swbd_7_M05_SC_RECV;
  wire [5:5]w_la_out_swbd_7_M05_SC_REQ;
  wire [5:5]w_la_out_swbd_7_M05_SC_SEND;

  assign M00_SC_AR_info[0] = ar_la_out_swbd_7_M00_SC_INFO;
  assign M00_SC_AR_payld[181:0] = ar_la_out_swbd_7_M00_SC_PAYLD;
  assign M00_SC_AR_req[0] = ar_la_out_swbd_7_M00_SC_REQ;
  assign M00_SC_AR_send[0] = ar_la_out_swbd_7_M00_SC_SEND;
  assign M00_SC_AW_info[0] = aw_la_out_swbd_7_M00_SC_INFO;
  assign M00_SC_AW_payld[181:0] = aw_la_out_swbd_7_M00_SC_PAYLD;
  assign M00_SC_AW_req[0] = aw_la_out_swbd_7_M00_SC_REQ;
  assign M00_SC_AW_send[0] = aw_la_out_swbd_7_M00_SC_SEND;
  assign M00_SC_B_info[5:0] = b_la_out_swbd_7_M00_SC_INFO;
  assign M00_SC_B_payld[8:0] = b_la_out_swbd_7_M00_SC_PAYLD;
  assign M00_SC_B_req[5:0] = b_la_out_swbd_7_M00_SC_REQ;
  assign M00_SC_B_send[5:0] = b_la_out_swbd_7_M00_SC_SEND;
  assign M00_SC_R_info[5:0] = r_la_out_swbd_7_M00_SC_INFO;
  assign M00_SC_R_payld[54:0] = r_la_out_swbd_7_M00_SC_PAYLD;
  assign M00_SC_R_req[5:0] = r_la_out_swbd_7_M00_SC_REQ;
  assign M00_SC_R_send[5:0] = r_la_out_swbd_7_M00_SC_SEND;
  assign M00_SC_W_info[0] = w_la_out_swbd_7_M00_SC_INFO;
  assign M00_SC_W_payld[68:0] = w_la_out_swbd_7_M00_SC_PAYLD;
  assign M00_SC_W_req[0] = w_la_out_swbd_7_M00_SC_REQ;
  assign M00_SC_W_send[0] = w_la_out_swbd_7_M00_SC_SEND;
  assign M01_SC_AR_info[0] = ar_la_out_swbd_7_M01_SC_INFO;
  assign M01_SC_AR_payld[181:0] = ar_la_out_swbd_7_M01_SC_PAYLD;
  assign M01_SC_AR_req[0] = ar_la_out_swbd_7_M01_SC_REQ;
  assign M01_SC_AR_send[0] = ar_la_out_swbd_7_M01_SC_SEND;
  assign M01_SC_AW_info[0] = aw_la_out_swbd_7_M01_SC_INFO;
  assign M01_SC_AW_payld[181:0] = aw_la_out_swbd_7_M01_SC_PAYLD;
  assign M01_SC_AW_req[0] = aw_la_out_swbd_7_M01_SC_REQ;
  assign M01_SC_AW_send[0] = aw_la_out_swbd_7_M01_SC_SEND;
  assign M01_SC_W_info[0] = w_la_out_swbd_7_M01_SC_INFO;
  assign M01_SC_W_payld[68:0] = w_la_out_swbd_7_M01_SC_PAYLD;
  assign M01_SC_W_req[0] = w_la_out_swbd_7_M01_SC_REQ;
  assign M01_SC_W_send[0] = w_la_out_swbd_7_M01_SC_SEND;
  assign M02_SC_AR_info[0] = ar_la_out_swbd_7_M02_SC_INFO;
  assign M02_SC_AR_payld[181:0] = ar_la_out_swbd_7_M02_SC_PAYLD;
  assign M02_SC_AR_req[0] = ar_la_out_swbd_7_M02_SC_REQ;
  assign M02_SC_AR_send[0] = ar_la_out_swbd_7_M02_SC_SEND;
  assign M02_SC_AW_info[0] = aw_la_out_swbd_7_M02_SC_INFO;
  assign M02_SC_AW_payld[181:0] = aw_la_out_swbd_7_M02_SC_PAYLD;
  assign M02_SC_AW_req[0] = aw_la_out_swbd_7_M02_SC_REQ;
  assign M02_SC_AW_send[0] = aw_la_out_swbd_7_M02_SC_SEND;
  assign M02_SC_W_info[0] = w_la_out_swbd_7_M02_SC_INFO;
  assign M02_SC_W_payld[68:0] = w_la_out_swbd_7_M02_SC_PAYLD;
  assign M02_SC_W_req[0] = w_la_out_swbd_7_M02_SC_REQ;
  assign M02_SC_W_send[0] = w_la_out_swbd_7_M02_SC_SEND;
  assign M03_SC_AR_info[0] = ar_la_out_swbd_7_M03_SC_INFO;
  assign M03_SC_AR_payld[181:0] = ar_la_out_swbd_7_M03_SC_PAYLD;
  assign M03_SC_AR_req[0] = ar_la_out_swbd_7_M03_SC_REQ;
  assign M03_SC_AR_send[0] = ar_la_out_swbd_7_M03_SC_SEND;
  assign M03_SC_AW_info[0] = aw_la_out_swbd_7_M03_SC_INFO;
  assign M03_SC_AW_payld[181:0] = aw_la_out_swbd_7_M03_SC_PAYLD;
  assign M03_SC_AW_req[0] = aw_la_out_swbd_7_M03_SC_REQ;
  assign M03_SC_AW_send[0] = aw_la_out_swbd_7_M03_SC_SEND;
  assign M03_SC_W_info[0] = w_la_out_swbd_7_M03_SC_INFO;
  assign M03_SC_W_payld[68:0] = w_la_out_swbd_7_M03_SC_PAYLD;
  assign M03_SC_W_req[0] = w_la_out_swbd_7_M03_SC_REQ;
  assign M03_SC_W_send[0] = w_la_out_swbd_7_M03_SC_SEND;
  assign M04_SC_AR_info[0] = ar_la_out_swbd_7_M04_SC_INFO;
  assign M04_SC_AR_payld[181:0] = ar_la_out_swbd_7_M04_SC_PAYLD;
  assign M04_SC_AR_req[0] = ar_la_out_swbd_7_M04_SC_REQ;
  assign M04_SC_AR_send[0] = ar_la_out_swbd_7_M04_SC_SEND;
  assign M04_SC_AW_info[0] = aw_la_out_swbd_7_M04_SC_INFO;
  assign M04_SC_AW_payld[181:0] = aw_la_out_swbd_7_M04_SC_PAYLD;
  assign M04_SC_AW_req[0] = aw_la_out_swbd_7_M04_SC_REQ;
  assign M04_SC_AW_send[0] = aw_la_out_swbd_7_M04_SC_SEND;
  assign M04_SC_W_info[0] = w_la_out_swbd_7_M04_SC_INFO;
  assign M04_SC_W_payld[68:0] = w_la_out_swbd_7_M04_SC_PAYLD;
  assign M04_SC_W_req[0] = w_la_out_swbd_7_M04_SC_REQ;
  assign M04_SC_W_send[0] = w_la_out_swbd_7_M04_SC_SEND;
  assign M05_SC_AR_info[0] = ar_la_out_swbd_7_M05_SC_INFO;
  assign M05_SC_AR_payld[181:0] = ar_la_out_swbd_7_M05_SC_PAYLD;
  assign M05_SC_AR_req[0] = ar_la_out_swbd_7_M05_SC_REQ;
  assign M05_SC_AR_send[0] = ar_la_out_swbd_7_M05_SC_SEND;
  assign M05_SC_AW_info[0] = aw_la_out_swbd_7_M05_SC_INFO;
  assign M05_SC_AW_payld[181:0] = aw_la_out_swbd_7_M05_SC_PAYLD;
  assign M05_SC_AW_req[0] = aw_la_out_swbd_7_M05_SC_REQ;
  assign M05_SC_AW_send[0] = aw_la_out_swbd_7_M05_SC_SEND;
  assign M05_SC_W_info[0] = w_la_out_swbd_7_M05_SC_INFO;
  assign M05_SC_W_payld[68:0] = w_la_out_swbd_7_M05_SC_PAYLD;
  assign M05_SC_W_req[0] = w_la_out_swbd_7_M05_SC_REQ;
  assign M05_SC_W_send[0] = w_la_out_swbd_7_M05_SC_SEND;
  assign S00_SC_AR_1_INFO = S00_SC_AR_info[5:0];
  assign S00_SC_AR_1_PAYLD = S00_SC_AR_payld[181:0];
  assign S00_SC_AR_1_REQ = S00_SC_AR_req[5:0];
  assign S00_SC_AR_1_SEND = S00_SC_AR_send[5:0];
  assign S00_SC_AR_recv[5:0] = S00_SC_AR_1_RECV;
  assign S00_SC_AW_1_INFO = S00_SC_AW_info[5:0];
  assign S00_SC_AW_1_PAYLD = S00_SC_AW_payld[181:0];
  assign S00_SC_AW_1_REQ = S00_SC_AW_req[5:0];
  assign S00_SC_AW_1_SEND = S00_SC_AW_send[5:0];
  assign S00_SC_AW_recv[5:0] = S00_SC_AW_1_RECV;
  assign S00_SC_B_1_INFO = S00_SC_B_info[0];
  assign S00_SC_B_1_PAYLD = S00_SC_B_payld[8:0];
  assign S00_SC_B_1_REQ = S00_SC_B_req[0];
  assign S00_SC_B_1_SEND = S00_SC_B_send[0];
  assign S00_SC_B_recv[0] = S00_SC_B_1_RECV;
  assign S00_SC_R_1_INFO = S00_SC_R_info[0];
  assign S00_SC_R_1_PAYLD = S00_SC_R_payld[54:0];
  assign S00_SC_R_1_REQ = S00_SC_R_req[0];
  assign S00_SC_R_1_SEND = S00_SC_R_send[0];
  assign S00_SC_R_recv[0] = S00_SC_R_1_RECV;
  assign S00_SC_W_1_INFO = S00_SC_W_info[5:0];
  assign S00_SC_W_1_PAYLD = S00_SC_W_payld[68:0];
  assign S00_SC_W_1_REQ = S00_SC_W_req[5:0];
  assign S00_SC_W_1_SEND = S00_SC_W_send[5:0];
  assign S00_SC_W_recv[5:0] = S00_SC_W_1_RECV;
  assign S01_SC_B_1_INFO = S01_SC_B_info[0];
  assign S01_SC_B_1_PAYLD = S01_SC_B_payld[8:0];
  assign S01_SC_B_1_REQ = S01_SC_B_req[0];
  assign S01_SC_B_1_SEND = S01_SC_B_send[0];
  assign S01_SC_B_recv[0] = S01_SC_B_1_RECV;
  assign S01_SC_R_1_INFO = S01_SC_R_info[0];
  assign S01_SC_R_1_PAYLD = S01_SC_R_payld[54:0];
  assign S01_SC_R_1_REQ = S01_SC_R_req[0];
  assign S01_SC_R_1_SEND = S01_SC_R_send[0];
  assign S01_SC_R_recv[0] = S01_SC_R_1_RECV;
  assign S02_SC_B_1_INFO = S02_SC_B_info[0];
  assign S02_SC_B_1_PAYLD = S02_SC_B_payld[8:0];
  assign S02_SC_B_1_REQ = S02_SC_B_req[0];
  assign S02_SC_B_1_SEND = S02_SC_B_send[0];
  assign S02_SC_B_recv[0] = S02_SC_B_1_RECV;
  assign S02_SC_R_1_INFO = S02_SC_R_info[0];
  assign S02_SC_R_1_PAYLD = S02_SC_R_payld[54:0];
  assign S02_SC_R_1_REQ = S02_SC_R_req[0];
  assign S02_SC_R_1_SEND = S02_SC_R_send[0];
  assign S02_SC_R_recv[0] = S02_SC_R_1_RECV;
  assign S03_SC_B_1_INFO = S03_SC_B_info[0];
  assign S03_SC_B_1_PAYLD = S03_SC_B_payld[8:0];
  assign S03_SC_B_1_REQ = S03_SC_B_req[0];
  assign S03_SC_B_1_SEND = S03_SC_B_send[0];
  assign S03_SC_B_recv[0] = S03_SC_B_1_RECV;
  assign S03_SC_R_1_INFO = S03_SC_R_info[0];
  assign S03_SC_R_1_PAYLD = S03_SC_R_payld[54:0];
  assign S03_SC_R_1_REQ = S03_SC_R_req[0];
  assign S03_SC_R_1_SEND = S03_SC_R_send[0];
  assign S03_SC_R_recv[0] = S03_SC_R_1_RECV;
  assign S04_SC_B_1_INFO = S04_SC_B_info[0];
  assign S04_SC_B_1_PAYLD = S04_SC_B_payld[8:0];
  assign S04_SC_B_1_REQ = S04_SC_B_req[0];
  assign S04_SC_B_1_SEND = S04_SC_B_send[0];
  assign S04_SC_B_recv[0] = S04_SC_B_1_RECV;
  assign S04_SC_R_1_INFO = S04_SC_R_info[0];
  assign S04_SC_R_1_PAYLD = S04_SC_R_payld[54:0];
  assign S04_SC_R_1_REQ = S04_SC_R_req[0];
  assign S04_SC_R_1_SEND = S04_SC_R_send[0];
  assign S04_SC_R_recv[0] = S04_SC_R_1_RECV;
  assign S05_SC_B_1_INFO = S05_SC_B_info[0];
  assign S05_SC_B_1_PAYLD = S05_SC_B_payld[8:0];
  assign S05_SC_B_1_REQ = S05_SC_B_req[0];
  assign S05_SC_B_1_SEND = S05_SC_B_send[0];
  assign S05_SC_B_recv[0] = S05_SC_B_1_RECV;
  assign S05_SC_R_1_INFO = S05_SC_R_info[0];
  assign S05_SC_R_1_PAYLD = S05_SC_R_payld[54:0];
  assign S05_SC_R_1_REQ = S05_SC_R_req[0];
  assign S05_SC_R_1_SEND = S05_SC_R_send[0];
  assign S05_SC_R_recv[0] = S05_SC_R_1_RECV;
  assign aclk_1 = aclk;
  assign ar_la_out_swbd_7_M00_SC_RECV = M00_SC_AR_recv[0];
  assign ar_la_out_swbd_7_M01_SC_RECV = M01_SC_AR_recv[0];
  assign ar_la_out_swbd_7_M02_SC_RECV = M02_SC_AR_recv[0];
  assign ar_la_out_swbd_7_M03_SC_RECV = M03_SC_AR_recv[0];
  assign ar_la_out_swbd_7_M04_SC_RECV = M04_SC_AR_recv[0];
  assign ar_la_out_swbd_7_M05_SC_RECV = M05_SC_AR_recv[0];
  assign aw_la_out_swbd_7_M00_SC_RECV = M00_SC_AW_recv[0];
  assign aw_la_out_swbd_7_M01_SC_RECV = M01_SC_AW_recv[0];
  assign aw_la_out_swbd_7_M02_SC_RECV = M02_SC_AW_recv[0];
  assign aw_la_out_swbd_7_M03_SC_RECV = M03_SC_AW_recv[0];
  assign aw_la_out_swbd_7_M04_SC_RECV = M04_SC_AW_recv[0];
  assign aw_la_out_swbd_7_M05_SC_RECV = M05_SC_AW_recv[0];
  assign b_la_out_swbd_7_M00_SC_RECV = M00_SC_B_recv[5:0];
  assign r_la_out_swbd_7_M00_SC_RECV = M00_SC_R_recv[5:0];
  assign w_la_out_swbd_7_M00_SC_RECV = M00_SC_W_recv[0];
  assign w_la_out_swbd_7_M01_SC_RECV = M01_SC_W_recv[0];
  assign w_la_out_swbd_7_M02_SC_RECV = M02_SC_W_recv[0];
  assign w_la_out_swbd_7_M03_SC_RECV = M03_SC_W_recv[0];
  assign w_la_out_swbd_7_M04_SC_RECV = M04_SC_W_recv[0];
  assign w_la_out_swbd_7_M05_SC_RECV = M05_SC_W_recv[0];
  bd_afc3_arinsw_8 ar_la_out_swbd_7
       (.aclk(aclk_1),
        .aclken(1'b1),
        .m_sc_info({ar_la_out_swbd_7_M05_SC_INFO,ar_la_out_swbd_7_M04_SC_INFO,ar_la_out_swbd_7_M03_SC_INFO,ar_la_out_swbd_7_M02_SC_INFO,ar_la_out_swbd_7_M01_SC_INFO,ar_la_out_swbd_7_M00_SC_INFO}),
        .m_sc_payld({ar_la_out_swbd_7_M05_SC_PAYLD,ar_la_out_swbd_7_M04_SC_PAYLD,ar_la_out_swbd_7_M03_SC_PAYLD,ar_la_out_swbd_7_M02_SC_PAYLD,ar_la_out_swbd_7_M01_SC_PAYLD,ar_la_out_swbd_7_M00_SC_PAYLD}),
        .m_sc_recv({ar_la_out_swbd_7_M05_SC_RECV,ar_la_out_swbd_7_M04_SC_RECV,ar_la_out_swbd_7_M03_SC_RECV,ar_la_out_swbd_7_M02_SC_RECV,ar_la_out_swbd_7_M01_SC_RECV,ar_la_out_swbd_7_M00_SC_RECV}),
        .m_sc_req({ar_la_out_swbd_7_M05_SC_REQ,ar_la_out_swbd_7_M04_SC_REQ,ar_la_out_swbd_7_M03_SC_REQ,ar_la_out_swbd_7_M02_SC_REQ,ar_la_out_swbd_7_M01_SC_REQ,ar_la_out_swbd_7_M00_SC_REQ}),
        .m_sc_send({ar_la_out_swbd_7_M05_SC_SEND,ar_la_out_swbd_7_M04_SC_SEND,ar_la_out_swbd_7_M03_SC_SEND,ar_la_out_swbd_7_M02_SC_SEND,ar_la_out_swbd_7_M01_SC_SEND,ar_la_out_swbd_7_M00_SC_SEND}),
        .s_sc_info(S00_SC_AR_1_INFO),
        .s_sc_payld(S00_SC_AR_1_PAYLD),
        .s_sc_recv(S00_SC_AR_1_RECV),
        .s_sc_req(S00_SC_AR_1_REQ),
        .s_sc_send(S00_SC_AR_1_SEND));
  bd_afc3_awinsw_8 aw_la_out_swbd_7
       (.aclk(aclk_1),
        .aclken(1'b1),
        .m_sc_info({aw_la_out_swbd_7_M05_SC_INFO,aw_la_out_swbd_7_M04_SC_INFO,aw_la_out_swbd_7_M03_SC_INFO,aw_la_out_swbd_7_M02_SC_INFO,aw_la_out_swbd_7_M01_SC_INFO,aw_la_out_swbd_7_M00_SC_INFO}),
        .m_sc_payld({aw_la_out_swbd_7_M05_SC_PAYLD,aw_la_out_swbd_7_M04_SC_PAYLD,aw_la_out_swbd_7_M03_SC_PAYLD,aw_la_out_swbd_7_M02_SC_PAYLD,aw_la_out_swbd_7_M01_SC_PAYLD,aw_la_out_swbd_7_M00_SC_PAYLD}),
        .m_sc_recv({aw_la_out_swbd_7_M05_SC_RECV,aw_la_out_swbd_7_M04_SC_RECV,aw_la_out_swbd_7_M03_SC_RECV,aw_la_out_swbd_7_M02_SC_RECV,aw_la_out_swbd_7_M01_SC_RECV,aw_la_out_swbd_7_M00_SC_RECV}),
        .m_sc_req({aw_la_out_swbd_7_M05_SC_REQ,aw_la_out_swbd_7_M04_SC_REQ,aw_la_out_swbd_7_M03_SC_REQ,aw_la_out_swbd_7_M02_SC_REQ,aw_la_out_swbd_7_M01_SC_REQ,aw_la_out_swbd_7_M00_SC_REQ}),
        .m_sc_send({aw_la_out_swbd_7_M05_SC_SEND,aw_la_out_swbd_7_M04_SC_SEND,aw_la_out_swbd_7_M03_SC_SEND,aw_la_out_swbd_7_M02_SC_SEND,aw_la_out_swbd_7_M01_SC_SEND,aw_la_out_swbd_7_M00_SC_SEND}),
        .s_sc_info(S00_SC_AW_1_INFO),
        .s_sc_payld(S00_SC_AW_1_PAYLD),
        .s_sc_recv(S00_SC_AW_1_RECV),
        .s_sc_req(S00_SC_AW_1_REQ),
        .s_sc_send(S00_SC_AW_1_SEND));
  bd_afc3_binsw_8 b_la_out_swbd_7
       (.aclk(aclk_1),
        .aclken(1'b1),
        .m_sc_info(b_la_out_swbd_7_M00_SC_INFO),
        .m_sc_payld(b_la_out_swbd_7_M00_SC_PAYLD),
        .m_sc_recv(b_la_out_swbd_7_M00_SC_RECV),
        .m_sc_req(b_la_out_swbd_7_M00_SC_REQ),
        .m_sc_send(b_la_out_swbd_7_M00_SC_SEND),
        .s_sc_info({S05_SC_B_1_INFO,S04_SC_B_1_INFO,S03_SC_B_1_INFO,S02_SC_B_1_INFO,S01_SC_B_1_INFO,S00_SC_B_1_INFO}),
        .s_sc_payld({S05_SC_B_1_PAYLD,S04_SC_B_1_PAYLD,S03_SC_B_1_PAYLD,S02_SC_B_1_PAYLD,S01_SC_B_1_PAYLD,S00_SC_B_1_PAYLD}),
        .s_sc_recv({S05_SC_B_1_RECV,S04_SC_B_1_RECV,S03_SC_B_1_RECV,S02_SC_B_1_RECV,S01_SC_B_1_RECV,S00_SC_B_1_RECV}),
        .s_sc_req({S05_SC_B_1_REQ,S04_SC_B_1_REQ,S03_SC_B_1_REQ,S02_SC_B_1_REQ,S01_SC_B_1_REQ,S00_SC_B_1_REQ}),
        .s_sc_send({S05_SC_B_1_SEND,S04_SC_B_1_SEND,S03_SC_B_1_SEND,S02_SC_B_1_SEND,S01_SC_B_1_SEND,S00_SC_B_1_SEND}));
  bd_afc3_rinsw_8 r_la_out_swbd_7
       (.aclk(aclk_1),
        .aclken(1'b1),
        .m_sc_info(r_la_out_swbd_7_M00_SC_INFO),
        .m_sc_payld(r_la_out_swbd_7_M00_SC_PAYLD),
        .m_sc_recv(r_la_out_swbd_7_M00_SC_RECV),
        .m_sc_req(r_la_out_swbd_7_M00_SC_REQ),
        .m_sc_send(r_la_out_swbd_7_M00_SC_SEND),
        .s_sc_info({S05_SC_R_1_INFO,S04_SC_R_1_INFO,S03_SC_R_1_INFO,S02_SC_R_1_INFO,S01_SC_R_1_INFO,S00_SC_R_1_INFO}),
        .s_sc_payld({S05_SC_R_1_PAYLD,S04_SC_R_1_PAYLD,S03_SC_R_1_PAYLD,S02_SC_R_1_PAYLD,S01_SC_R_1_PAYLD,S00_SC_R_1_PAYLD}),
        .s_sc_recv({S05_SC_R_1_RECV,S04_SC_R_1_RECV,S03_SC_R_1_RECV,S02_SC_R_1_RECV,S01_SC_R_1_RECV,S00_SC_R_1_RECV}),
        .s_sc_req({S05_SC_R_1_REQ,S04_SC_R_1_REQ,S03_SC_R_1_REQ,S02_SC_R_1_REQ,S01_SC_R_1_REQ,S00_SC_R_1_REQ}),
        .s_sc_send({S05_SC_R_1_SEND,S04_SC_R_1_SEND,S03_SC_R_1_SEND,S02_SC_R_1_SEND,S01_SC_R_1_SEND,S00_SC_R_1_SEND}));
  bd_afc3_winsw_8 w_la_out_swbd_7
       (.aclk(aclk_1),
        .aclken(1'b1),
        .m_sc_info({w_la_out_swbd_7_M05_SC_INFO,w_la_out_swbd_7_M04_SC_INFO,w_la_out_swbd_7_M03_SC_INFO,w_la_out_swbd_7_M02_SC_INFO,w_la_out_swbd_7_M01_SC_INFO,w_la_out_swbd_7_M00_SC_INFO}),
        .m_sc_payld({w_la_out_swbd_7_M05_SC_PAYLD,w_la_out_swbd_7_M04_SC_PAYLD,w_la_out_swbd_7_M03_SC_PAYLD,w_la_out_swbd_7_M02_SC_PAYLD,w_la_out_swbd_7_M01_SC_PAYLD,w_la_out_swbd_7_M00_SC_PAYLD}),
        .m_sc_recv({w_la_out_swbd_7_M05_SC_RECV,w_la_out_swbd_7_M04_SC_RECV,w_la_out_swbd_7_M03_SC_RECV,w_la_out_swbd_7_M02_SC_RECV,w_la_out_swbd_7_M01_SC_RECV,w_la_out_swbd_7_M00_SC_RECV}),
        .m_sc_req({w_la_out_swbd_7_M05_SC_REQ,w_la_out_swbd_7_M04_SC_REQ,w_la_out_swbd_7_M03_SC_REQ,w_la_out_swbd_7_M02_SC_REQ,w_la_out_swbd_7_M01_SC_REQ,w_la_out_swbd_7_M00_SC_REQ}),
        .m_sc_send({w_la_out_swbd_7_M05_SC_SEND,w_la_out_swbd_7_M04_SC_SEND,w_la_out_swbd_7_M03_SC_SEND,w_la_out_swbd_7_M02_SC_SEND,w_la_out_swbd_7_M01_SC_SEND,w_la_out_swbd_7_M00_SC_SEND}),
        .s_sc_info(S00_SC_W_1_INFO),
        .s_sc_payld(S00_SC_W_1_PAYLD),
        .s_sc_recv(S00_SC_W_1_RECV),
        .s_sc_req(S00_SC_W_1_REQ),
        .s_sc_send(S00_SC_W_1_SEND));
endmodule

module s00_entry_pipeline_imp_USCCV8
   (aclk,
    aresetn,
    m_axi_araddr,
    m_axi_arcache,
    m_axi_arid,
    m_axi_arlen,
    m_axi_arlock,
    m_axi_arprot,
    m_axi_arqos,
    m_axi_arready,
    m_axi_aruser,
    m_axi_arvalid,
    m_axi_awaddr,
    m_axi_awcache,
    m_axi_awid,
    m_axi_awlen,
    m_axi_awlock,
    m_axi_awprot,
    m_axi_awqos,
    m_axi_awready,
    m_axi_awuser,
    m_axi_awvalid,
    m_axi_bid,
    m_axi_bready,
    m_axi_bresp,
    m_axi_buser,
    m_axi_bvalid,
    m_axi_rdata,
    m_axi_rid,
    m_axi_rlast,
    m_axi_rready,
    m_axi_rresp,
    m_axi_ruser,
    m_axi_rvalid,
    m_axi_wdata,
    m_axi_wlast,
    m_axi_wready,
    m_axi_wstrb,
    m_axi_wuser,
    m_axi_wvalid,
    s_axi_araddr,
    s_axi_arburst,
    s_axi_arcache,
    s_axi_arid,
    s_axi_arlen,
    s_axi_arlock,
    s_axi_arprot,
    s_axi_arqos,
    s_axi_arready,
    s_axi_arsize,
    s_axi_aruser,
    s_axi_arvalid,
    s_axi_awaddr,
    s_axi_awburst,
    s_axi_awcache,
    s_axi_awid,
    s_axi_awlen,
    s_axi_awlock,
    s_axi_awprot,
    s_axi_awqos,
    s_axi_awready,
    s_axi_awsize,
    s_axi_awuser,
    s_axi_awvalid,
    s_axi_bid,
    s_axi_bready,
    s_axi_bresp,
    s_axi_bvalid,
    s_axi_rdata,
    s_axi_rid,
    s_axi_rlast,
    s_axi_rready,
    s_axi_rresp,
    s_axi_rvalid,
    s_axi_wdata,
    s_axi_wlast,
    s_axi_wready,
    s_axi_wstrb,
    s_axi_wvalid);
  input aclk;
  input aresetn;
  output [39:0]m_axi_araddr;
  output [3:0]m_axi_arcache;
  output [2:0]m_axi_arid;
  output [7:0]m_axi_arlen;
  output [0:0]m_axi_arlock;
  output [2:0]m_axi_arprot;
  output [3:0]m_axi_arqos;
  input m_axi_arready;
  output [1023:0]m_axi_aruser;
  output m_axi_arvalid;
  output [39:0]m_axi_awaddr;
  output [3:0]m_axi_awcache;
  output [2:0]m_axi_awid;
  output [7:0]m_axi_awlen;
  output [0:0]m_axi_awlock;
  output [2:0]m_axi_awprot;
  output [3:0]m_axi_awqos;
  input m_axi_awready;
  output [1023:0]m_axi_awuser;
  output m_axi_awvalid;
  input [2:0]m_axi_bid;
  output m_axi_bready;
  input [1:0]m_axi_bresp;
  input [1023:0]m_axi_buser;
  input m_axi_bvalid;
  input [31:0]m_axi_rdata;
  input [2:0]m_axi_rid;
  input m_axi_rlast;
  output m_axi_rready;
  input [1:0]m_axi_rresp;
  input [1023:0]m_axi_ruser;
  input m_axi_rvalid;
  output [31:0]m_axi_wdata;
  output m_axi_wlast;
  input m_axi_wready;
  output [3:0]m_axi_wstrb;
  output [1023:0]m_axi_wuser;
  output m_axi_wvalid;
  input [39:0]s_axi_araddr;
  input [1:0]s_axi_arburst;
  input [3:0]s_axi_arcache;
  input [15:0]s_axi_arid;
  input [7:0]s_axi_arlen;
  input [0:0]s_axi_arlock;
  input [2:0]s_axi_arprot;
  input [3:0]s_axi_arqos;
  output s_axi_arready;
  input [2:0]s_axi_arsize;
  input [15:0]s_axi_aruser;
  input s_axi_arvalid;
  input [39:0]s_axi_awaddr;
  input [1:0]s_axi_awburst;
  input [3:0]s_axi_awcache;
  input [15:0]s_axi_awid;
  input [7:0]s_axi_awlen;
  input [0:0]s_axi_awlock;
  input [2:0]s_axi_awprot;
  input [3:0]s_axi_awqos;
  output s_axi_awready;
  input [2:0]s_axi_awsize;
  input [15:0]s_axi_awuser;
  input s_axi_awvalid;
  output [15:0]s_axi_bid;
  input s_axi_bready;
  output [1:0]s_axi_bresp;
  output s_axi_bvalid;
  output [31:0]s_axi_rdata;
  output [15:0]s_axi_rid;
  output s_axi_rlast;
  input s_axi_rready;
  output [1:0]s_axi_rresp;
  output s_axi_rvalid;
  input [31:0]s_axi_wdata;
  input s_axi_wlast;
  output s_axi_wready;
  input [3:0]s_axi_wstrb;
  input s_axi_wvalid;

  wire aclk_1;
  wire aresetn_1;
  wire [39:0]s00_mmu_M_AXI_ARADDR;
  wire [1:0]s00_mmu_M_AXI_ARBURST;
  wire [3:0]s00_mmu_M_AXI_ARCACHE;
  wire [15:0]s00_mmu_M_AXI_ARID;
  wire [7:0]s00_mmu_M_AXI_ARLEN;
  wire [0:0]s00_mmu_M_AXI_ARLOCK;
  wire [2:0]s00_mmu_M_AXI_ARPROT;
  wire [3:0]s00_mmu_M_AXI_ARQOS;
  wire s00_mmu_M_AXI_ARREADY;
  wire [2:0]s00_mmu_M_AXI_ARSIZE;
  wire [1023:0]s00_mmu_M_AXI_ARUSER;
  wire s00_mmu_M_AXI_ARVALID;
  wire [39:0]s00_mmu_M_AXI_AWADDR;
  wire [1:0]s00_mmu_M_AXI_AWBURST;
  wire [3:0]s00_mmu_M_AXI_AWCACHE;
  wire [15:0]s00_mmu_M_AXI_AWID;
  wire [7:0]s00_mmu_M_AXI_AWLEN;
  wire [0:0]s00_mmu_M_AXI_AWLOCK;
  wire [2:0]s00_mmu_M_AXI_AWPROT;
  wire [3:0]s00_mmu_M_AXI_AWQOS;
  wire s00_mmu_M_AXI_AWREADY;
  wire [2:0]s00_mmu_M_AXI_AWSIZE;
  wire [1023:0]s00_mmu_M_AXI_AWUSER;
  wire s00_mmu_M_AXI_AWVALID;
  wire [15:0]s00_mmu_M_AXI_BID;
  wire s00_mmu_M_AXI_BREADY;
  wire [1:0]s00_mmu_M_AXI_BRESP;
  wire [1023:0]s00_mmu_M_AXI_BUSER;
  wire s00_mmu_M_AXI_BVALID;
  wire [31:0]s00_mmu_M_AXI_RDATA;
  wire [15:0]s00_mmu_M_AXI_RID;
  wire s00_mmu_M_AXI_RLAST;
  wire s00_mmu_M_AXI_RREADY;
  wire [1:0]s00_mmu_M_AXI_RRESP;
  wire [1023:0]s00_mmu_M_AXI_RUSER;
  wire s00_mmu_M_AXI_RVALID;
  wire [31:0]s00_mmu_M_AXI_WDATA;
  wire s00_mmu_M_AXI_WLAST;
  wire s00_mmu_M_AXI_WREADY;
  wire [3:0]s00_mmu_M_AXI_WSTRB;
  wire [1023:0]s00_mmu_M_AXI_WUSER;
  wire s00_mmu_M_AXI_WVALID;
  wire [39:0]s00_si_converter_M_AXI_ARADDR;
  wire [3:0]s00_si_converter_M_AXI_ARCACHE;
  wire [2:0]s00_si_converter_M_AXI_ARID;
  wire [7:0]s00_si_converter_M_AXI_ARLEN;
  wire [0:0]s00_si_converter_M_AXI_ARLOCK;
  wire [2:0]s00_si_converter_M_AXI_ARPROT;
  wire [3:0]s00_si_converter_M_AXI_ARQOS;
  wire s00_si_converter_M_AXI_ARREADY;
  wire [1023:0]s00_si_converter_M_AXI_ARUSER;
  wire s00_si_converter_M_AXI_ARVALID;
  wire [39:0]s00_si_converter_M_AXI_AWADDR;
  wire [3:0]s00_si_converter_M_AXI_AWCACHE;
  wire [2:0]s00_si_converter_M_AXI_AWID;
  wire [7:0]s00_si_converter_M_AXI_AWLEN;
  wire [0:0]s00_si_converter_M_AXI_AWLOCK;
  wire [2:0]s00_si_converter_M_AXI_AWPROT;
  wire [3:0]s00_si_converter_M_AXI_AWQOS;
  wire s00_si_converter_M_AXI_AWREADY;
  wire [1023:0]s00_si_converter_M_AXI_AWUSER;
  wire s00_si_converter_M_AXI_AWVALID;
  wire [2:0]s00_si_converter_M_AXI_BID;
  wire s00_si_converter_M_AXI_BREADY;
  wire [1:0]s00_si_converter_M_AXI_BRESP;
  wire [1023:0]s00_si_converter_M_AXI_BUSER;
  wire s00_si_converter_M_AXI_BVALID;
  wire [31:0]s00_si_converter_M_AXI_RDATA;
  wire [2:0]s00_si_converter_M_AXI_RID;
  wire s00_si_converter_M_AXI_RLAST;
  wire s00_si_converter_M_AXI_RREADY;
  wire [1:0]s00_si_converter_M_AXI_RRESP;
  wire [1023:0]s00_si_converter_M_AXI_RUSER;
  wire s00_si_converter_M_AXI_RVALID;
  wire [31:0]s00_si_converter_M_AXI_WDATA;
  wire s00_si_converter_M_AXI_WLAST;
  wire s00_si_converter_M_AXI_WREADY;
  wire [3:0]s00_si_converter_M_AXI_WSTRB;
  wire [1023:0]s00_si_converter_M_AXI_WUSER;
  wire s00_si_converter_M_AXI_WVALID;
  wire [39:0]s00_transaction_regulator_M_AXI_ARADDR;
  wire [1:0]s00_transaction_regulator_M_AXI_ARBURST;
  wire [3:0]s00_transaction_regulator_M_AXI_ARCACHE;
  wire [0:0]s00_transaction_regulator_M_AXI_ARID;
  wire [7:0]s00_transaction_regulator_M_AXI_ARLEN;
  wire [0:0]s00_transaction_regulator_M_AXI_ARLOCK;
  wire [2:0]s00_transaction_regulator_M_AXI_ARPROT;
  wire [3:0]s00_transaction_regulator_M_AXI_ARQOS;
  wire s00_transaction_regulator_M_AXI_ARREADY;
  wire [2:0]s00_transaction_regulator_M_AXI_ARSIZE;
  wire [1023:0]s00_transaction_regulator_M_AXI_ARUSER;
  wire s00_transaction_regulator_M_AXI_ARVALID;
  wire [39:0]s00_transaction_regulator_M_AXI_AWADDR;
  wire [1:0]s00_transaction_regulator_M_AXI_AWBURST;
  wire [3:0]s00_transaction_regulator_M_AXI_AWCACHE;
  wire [0:0]s00_transaction_regulator_M_AXI_AWID;
  wire [7:0]s00_transaction_regulator_M_AXI_AWLEN;
  wire [0:0]s00_transaction_regulator_M_AXI_AWLOCK;
  wire [2:0]s00_transaction_regulator_M_AXI_AWPROT;
  wire [3:0]s00_transaction_regulator_M_AXI_AWQOS;
  wire s00_transaction_regulator_M_AXI_AWREADY;
  wire [2:0]s00_transaction_regulator_M_AXI_AWSIZE;
  wire [1023:0]s00_transaction_regulator_M_AXI_AWUSER;
  wire s00_transaction_regulator_M_AXI_AWVALID;
  wire [2:0]s00_transaction_regulator_M_AXI_BID;
  wire s00_transaction_regulator_M_AXI_BREADY;
  wire [1:0]s00_transaction_regulator_M_AXI_BRESP;
  wire [1023:0]s00_transaction_regulator_M_AXI_BUSER;
  wire s00_transaction_regulator_M_AXI_BVALID;
  wire [31:0]s00_transaction_regulator_M_AXI_RDATA;
  wire [2:0]s00_transaction_regulator_M_AXI_RID;
  wire s00_transaction_regulator_M_AXI_RLAST;
  wire s00_transaction_regulator_M_AXI_RREADY;
  wire [1:0]s00_transaction_regulator_M_AXI_RRESP;
  wire [1023:0]s00_transaction_regulator_M_AXI_RUSER;
  wire s00_transaction_regulator_M_AXI_RVALID;
  wire [31:0]s00_transaction_regulator_M_AXI_WDATA;
  wire s00_transaction_regulator_M_AXI_WLAST;
  wire s00_transaction_regulator_M_AXI_WREADY;
  wire [3:0]s00_transaction_regulator_M_AXI_WSTRB;
  wire [1023:0]s00_transaction_regulator_M_AXI_WUSER;
  wire s00_transaction_regulator_M_AXI_WVALID;
  wire [39:0]s_axi_1_ARADDR;
  wire [1:0]s_axi_1_ARBURST;
  wire [3:0]s_axi_1_ARCACHE;
  wire [15:0]s_axi_1_ARID;
  wire [7:0]s_axi_1_ARLEN;
  wire [0:0]s_axi_1_ARLOCK;
  wire [2:0]s_axi_1_ARPROT;
  wire [3:0]s_axi_1_ARQOS;
  wire s_axi_1_ARREADY;
  wire [2:0]s_axi_1_ARSIZE;
  wire [15:0]s_axi_1_ARUSER;
  wire s_axi_1_ARVALID;
  wire [39:0]s_axi_1_AWADDR;
  wire [1:0]s_axi_1_AWBURST;
  wire [3:0]s_axi_1_AWCACHE;
  wire [15:0]s_axi_1_AWID;
  wire [7:0]s_axi_1_AWLEN;
  wire [0:0]s_axi_1_AWLOCK;
  wire [2:0]s_axi_1_AWPROT;
  wire [3:0]s_axi_1_AWQOS;
  wire s_axi_1_AWREADY;
  wire [2:0]s_axi_1_AWSIZE;
  wire [15:0]s_axi_1_AWUSER;
  wire s_axi_1_AWVALID;
  wire [15:0]s_axi_1_BID;
  wire s_axi_1_BREADY;
  wire [1:0]s_axi_1_BRESP;
  wire s_axi_1_BVALID;
  wire [31:0]s_axi_1_RDATA;
  wire [15:0]s_axi_1_RID;
  wire s_axi_1_RLAST;
  wire s_axi_1_RREADY;
  wire [1:0]s_axi_1_RRESP;
  wire s_axi_1_RVALID;
  wire [31:0]s_axi_1_WDATA;
  wire s_axi_1_WLAST;
  wire s_axi_1_WREADY;
  wire [3:0]s_axi_1_WSTRB;
  wire s_axi_1_WVALID;

  assign aclk_1 = aclk;
  assign aresetn_1 = aresetn;
  assign m_axi_araddr[39:0] = s00_si_converter_M_AXI_ARADDR;
  assign m_axi_arcache[3:0] = s00_si_converter_M_AXI_ARCACHE;
  assign m_axi_arid[2:0] = s00_si_converter_M_AXI_ARID;
  assign m_axi_arlen[7:0] = s00_si_converter_M_AXI_ARLEN;
  assign m_axi_arlock[0] = s00_si_converter_M_AXI_ARLOCK;
  assign m_axi_arprot[2:0] = s00_si_converter_M_AXI_ARPROT;
  assign m_axi_arqos[3:0] = s00_si_converter_M_AXI_ARQOS;
  assign m_axi_aruser[1023:0] = s00_si_converter_M_AXI_ARUSER;
  assign m_axi_arvalid = s00_si_converter_M_AXI_ARVALID;
  assign m_axi_awaddr[39:0] = s00_si_converter_M_AXI_AWADDR;
  assign m_axi_awcache[3:0] = s00_si_converter_M_AXI_AWCACHE;
  assign m_axi_awid[2:0] = s00_si_converter_M_AXI_AWID;
  assign m_axi_awlen[7:0] = s00_si_converter_M_AXI_AWLEN;
  assign m_axi_awlock[0] = s00_si_converter_M_AXI_AWLOCK;
  assign m_axi_awprot[2:0] = s00_si_converter_M_AXI_AWPROT;
  assign m_axi_awqos[3:0] = s00_si_converter_M_AXI_AWQOS;
  assign m_axi_awuser[1023:0] = s00_si_converter_M_AXI_AWUSER;
  assign m_axi_awvalid = s00_si_converter_M_AXI_AWVALID;
  assign m_axi_bready = s00_si_converter_M_AXI_BREADY;
  assign m_axi_rready = s00_si_converter_M_AXI_RREADY;
  assign m_axi_wdata[31:0] = s00_si_converter_M_AXI_WDATA;
  assign m_axi_wlast = s00_si_converter_M_AXI_WLAST;
  assign m_axi_wstrb[3:0] = s00_si_converter_M_AXI_WSTRB;
  assign m_axi_wuser[1023:0] = s00_si_converter_M_AXI_WUSER;
  assign m_axi_wvalid = s00_si_converter_M_AXI_WVALID;
  assign s00_si_converter_M_AXI_ARREADY = m_axi_arready;
  assign s00_si_converter_M_AXI_AWREADY = m_axi_awready;
  assign s00_si_converter_M_AXI_BID = m_axi_bid[2:0];
  assign s00_si_converter_M_AXI_BRESP = m_axi_bresp[1:0];
  assign s00_si_converter_M_AXI_BUSER = m_axi_buser[1023:0];
  assign s00_si_converter_M_AXI_BVALID = m_axi_bvalid;
  assign s00_si_converter_M_AXI_RDATA = m_axi_rdata[31:0];
  assign s00_si_converter_M_AXI_RID = m_axi_rid[2:0];
  assign s00_si_converter_M_AXI_RLAST = m_axi_rlast;
  assign s00_si_converter_M_AXI_RRESP = m_axi_rresp[1:0];
  assign s00_si_converter_M_AXI_RUSER = m_axi_ruser[1023:0];
  assign s00_si_converter_M_AXI_RVALID = m_axi_rvalid;
  assign s00_si_converter_M_AXI_WREADY = m_axi_wready;
  assign s_axi_1_ARADDR = s_axi_araddr[39:0];
  assign s_axi_1_ARBURST = s_axi_arburst[1:0];
  assign s_axi_1_ARCACHE = s_axi_arcache[3:0];
  assign s_axi_1_ARID = s_axi_arid[15:0];
  assign s_axi_1_ARLEN = s_axi_arlen[7:0];
  assign s_axi_1_ARLOCK = s_axi_arlock[0];
  assign s_axi_1_ARPROT = s_axi_arprot[2:0];
  assign s_axi_1_ARQOS = s_axi_arqos[3:0];
  assign s_axi_1_ARSIZE = s_axi_arsize[2:0];
  assign s_axi_1_ARUSER = s_axi_aruser[15:0];
  assign s_axi_1_ARVALID = s_axi_arvalid;
  assign s_axi_1_AWADDR = s_axi_awaddr[39:0];
  assign s_axi_1_AWBURST = s_axi_awburst[1:0];
  assign s_axi_1_AWCACHE = s_axi_awcache[3:0];
  assign s_axi_1_AWID = s_axi_awid[15:0];
  assign s_axi_1_AWLEN = s_axi_awlen[7:0];
  assign s_axi_1_AWLOCK = s_axi_awlock[0];
  assign s_axi_1_AWPROT = s_axi_awprot[2:0];
  assign s_axi_1_AWQOS = s_axi_awqos[3:0];
  assign s_axi_1_AWSIZE = s_axi_awsize[2:0];
  assign s_axi_1_AWUSER = s_axi_awuser[15:0];
  assign s_axi_1_AWVALID = s_axi_awvalid;
  assign s_axi_1_BREADY = s_axi_bready;
  assign s_axi_1_RREADY = s_axi_rready;
  assign s_axi_1_WDATA = s_axi_wdata[31:0];
  assign s_axi_1_WLAST = s_axi_wlast;
  assign s_axi_1_WSTRB = s_axi_wstrb[3:0];
  assign s_axi_1_WVALID = s_axi_wvalid;
  assign s_axi_arready = s_axi_1_ARREADY;
  assign s_axi_awready = s_axi_1_AWREADY;
  assign s_axi_bid[15:0] = s_axi_1_BID;
  assign s_axi_bresp[1:0] = s_axi_1_BRESP;
  assign s_axi_bvalid = s_axi_1_BVALID;
  assign s_axi_rdata[31:0] = s_axi_1_RDATA;
  assign s_axi_rid[15:0] = s_axi_1_RID;
  assign s_axi_rlast = s_axi_1_RLAST;
  assign s_axi_rresp[1:0] = s_axi_1_RRESP;
  assign s_axi_rvalid = s_axi_1_RVALID;
  assign s_axi_wready = s_axi_1_WREADY;
  bd_afc3_s00mmu_0 s00_mmu
       (.aclk(aclk_1),
        .aresetn(aresetn_1),
        .m_axi_araddr(s00_mmu_M_AXI_ARADDR),
        .m_axi_arburst(s00_mmu_M_AXI_ARBURST),
        .m_axi_arcache(s00_mmu_M_AXI_ARCACHE),
        .m_axi_arid(s00_mmu_M_AXI_ARID),
        .m_axi_arlen(s00_mmu_M_AXI_ARLEN),
        .m_axi_arlock(s00_mmu_M_AXI_ARLOCK),
        .m_axi_arprot(s00_mmu_M_AXI_ARPROT),
        .m_axi_arqos(s00_mmu_M_AXI_ARQOS),
        .m_axi_arready(s00_mmu_M_AXI_ARREADY),
        .m_axi_arsize(s00_mmu_M_AXI_ARSIZE),
        .m_axi_aruser(s00_mmu_M_AXI_ARUSER),
        .m_axi_arvalid(s00_mmu_M_AXI_ARVALID),
        .m_axi_awaddr(s00_mmu_M_AXI_AWADDR),
        .m_axi_awburst(s00_mmu_M_AXI_AWBURST),
        .m_axi_awcache(s00_mmu_M_AXI_AWCACHE),
        .m_axi_awid(s00_mmu_M_AXI_AWID),
        .m_axi_awlen(s00_mmu_M_AXI_AWLEN),
        .m_axi_awlock(s00_mmu_M_AXI_AWLOCK),
        .m_axi_awprot(s00_mmu_M_AXI_AWPROT),
        .m_axi_awqos(s00_mmu_M_AXI_AWQOS),
        .m_axi_awready(s00_mmu_M_AXI_AWREADY),
        .m_axi_awsize(s00_mmu_M_AXI_AWSIZE),
        .m_axi_awuser(s00_mmu_M_AXI_AWUSER),
        .m_axi_awvalid(s00_mmu_M_AXI_AWVALID),
        .m_axi_bid(s00_mmu_M_AXI_BID),
        .m_axi_bready(s00_mmu_M_AXI_BREADY),
        .m_axi_bresp(s00_mmu_M_AXI_BRESP),
        .m_axi_buser(s00_mmu_M_AXI_BUSER),
        .m_axi_bvalid(s00_mmu_M_AXI_BVALID),
        .m_axi_rdata(s00_mmu_M_AXI_RDATA),
        .m_axi_rid(s00_mmu_M_AXI_RID),
        .m_axi_rlast(s00_mmu_M_AXI_RLAST),
        .m_axi_rready(s00_mmu_M_AXI_RREADY),
        .m_axi_rresp(s00_mmu_M_AXI_RRESP),
        .m_axi_ruser(s00_mmu_M_AXI_RUSER),
        .m_axi_rvalid(s00_mmu_M_AXI_RVALID),
        .m_axi_wdata(s00_mmu_M_AXI_WDATA),
        .m_axi_wlast(s00_mmu_M_AXI_WLAST),
        .m_axi_wready(s00_mmu_M_AXI_WREADY),
        .m_axi_wstrb(s00_mmu_M_AXI_WSTRB),
        .m_axi_wuser(s00_mmu_M_AXI_WUSER),
        .m_axi_wvalid(s00_mmu_M_AXI_WVALID),
        .s_axi_araddr(s_axi_1_ARADDR),
        .s_axi_arburst(s_axi_1_ARBURST),
        .s_axi_arcache(s_axi_1_ARCACHE),
        .s_axi_arid(s_axi_1_ARID),
        .s_axi_arlen(s_axi_1_ARLEN),
        .s_axi_arlock(s_axi_1_ARLOCK),
        .s_axi_arprot(s_axi_1_ARPROT),
        .s_axi_arqos(s_axi_1_ARQOS),
        .s_axi_arready(s_axi_1_ARREADY),
        .s_axi_arsize(s_axi_1_ARSIZE),
        .s_axi_aruser(s_axi_1_ARUSER),
        .s_axi_arvalid(s_axi_1_ARVALID),
        .s_axi_awaddr(s_axi_1_AWADDR),
        .s_axi_awburst(s_axi_1_AWBURST),
        .s_axi_awcache(s_axi_1_AWCACHE),
        .s_axi_awid(s_axi_1_AWID),
        .s_axi_awlen(s_axi_1_AWLEN),
        .s_axi_awlock(s_axi_1_AWLOCK),
        .s_axi_awprot(s_axi_1_AWPROT),
        .s_axi_awqos(s_axi_1_AWQOS),
        .s_axi_awready(s_axi_1_AWREADY),
        .s_axi_awsize(s_axi_1_AWSIZE),
        .s_axi_awuser(s_axi_1_AWUSER),
        .s_axi_awvalid(s_axi_1_AWVALID),
        .s_axi_bid(s_axi_1_BID),
        .s_axi_bready(s_axi_1_BREADY),
        .s_axi_bresp(s_axi_1_BRESP),
        .s_axi_bvalid(s_axi_1_BVALID),
        .s_axi_rdata(s_axi_1_RDATA),
        .s_axi_rid(s_axi_1_RID),
        .s_axi_rlast(s_axi_1_RLAST),
        .s_axi_rready(s_axi_1_RREADY),
        .s_axi_rresp(s_axi_1_RRESP),
        .s_axi_rvalid(s_axi_1_RVALID),
        .s_axi_wdata(s_axi_1_WDATA),
        .s_axi_wlast(s_axi_1_WLAST),
        .s_axi_wready(s_axi_1_WREADY),
        .s_axi_wstrb(s_axi_1_WSTRB),
        .s_axi_wvalid(s_axi_1_WVALID));
  bd_afc3_s00sic_0 s00_si_converter
       (.aclk(aclk_1),
        .aresetn(aresetn_1),
        .m_axi_araddr(s00_si_converter_M_AXI_ARADDR),
        .m_axi_arcache(s00_si_converter_M_AXI_ARCACHE),
        .m_axi_arid(s00_si_converter_M_AXI_ARID),
        .m_axi_arlen(s00_si_converter_M_AXI_ARLEN),
        .m_axi_arlock(s00_si_converter_M_AXI_ARLOCK),
        .m_axi_arprot(s00_si_converter_M_AXI_ARPROT),
        .m_axi_arqos(s00_si_converter_M_AXI_ARQOS),
        .m_axi_arready(s00_si_converter_M_AXI_ARREADY),
        .m_axi_aruser(s00_si_converter_M_AXI_ARUSER),
        .m_axi_arvalid(s00_si_converter_M_AXI_ARVALID),
        .m_axi_awaddr(s00_si_converter_M_AXI_AWADDR),
        .m_axi_awcache(s00_si_converter_M_AXI_AWCACHE),
        .m_axi_awid(s00_si_converter_M_AXI_AWID),
        .m_axi_awlen(s00_si_converter_M_AXI_AWLEN),
        .m_axi_awlock(s00_si_converter_M_AXI_AWLOCK),
        .m_axi_awprot(s00_si_converter_M_AXI_AWPROT),
        .m_axi_awqos(s00_si_converter_M_AXI_AWQOS),
        .m_axi_awready(s00_si_converter_M_AXI_AWREADY),
        .m_axi_awuser(s00_si_converter_M_AXI_AWUSER),
        .m_axi_awvalid(s00_si_converter_M_AXI_AWVALID),
        .m_axi_bid(s00_si_converter_M_AXI_BID),
        .m_axi_bready(s00_si_converter_M_AXI_BREADY),
        .m_axi_bresp(s00_si_converter_M_AXI_BRESP),
        .m_axi_buser(s00_si_converter_M_AXI_BUSER),
        .m_axi_bvalid(s00_si_converter_M_AXI_BVALID),
        .m_axi_rdata(s00_si_converter_M_AXI_RDATA),
        .m_axi_rid(s00_si_converter_M_AXI_RID),
        .m_axi_rlast(s00_si_converter_M_AXI_RLAST),
        .m_axi_rready(s00_si_converter_M_AXI_RREADY),
        .m_axi_rresp(s00_si_converter_M_AXI_RRESP),
        .m_axi_ruser(s00_si_converter_M_AXI_RUSER),
        .m_axi_rvalid(s00_si_converter_M_AXI_RVALID),
        .m_axi_wdata(s00_si_converter_M_AXI_WDATA),
        .m_axi_wlast(s00_si_converter_M_AXI_WLAST),
        .m_axi_wready(s00_si_converter_M_AXI_WREADY),
        .m_axi_wstrb(s00_si_converter_M_AXI_WSTRB),
        .m_axi_wuser(s00_si_converter_M_AXI_WUSER),
        .m_axi_wvalid(s00_si_converter_M_AXI_WVALID),
        .s_axi_araddr(s00_transaction_regulator_M_AXI_ARADDR),
        .s_axi_arburst(s00_transaction_regulator_M_AXI_ARBURST),
        .s_axi_arcache(s00_transaction_regulator_M_AXI_ARCACHE),
        .s_axi_arid({1'b0,1'b0,s00_transaction_regulator_M_AXI_ARID}),
        .s_axi_arlen(s00_transaction_regulator_M_AXI_ARLEN),
        .s_axi_arlock(s00_transaction_regulator_M_AXI_ARLOCK),
        .s_axi_arprot(s00_transaction_regulator_M_AXI_ARPROT),
        .s_axi_arqos(s00_transaction_regulator_M_AXI_ARQOS),
        .s_axi_arready(s00_transaction_regulator_M_AXI_ARREADY),
        .s_axi_arsize(s00_transaction_regulator_M_AXI_ARSIZE),
        .s_axi_aruser(s00_transaction_regulator_M_AXI_ARUSER),
        .s_axi_arvalid(s00_transaction_regulator_M_AXI_ARVALID),
        .s_axi_awaddr(s00_transaction_regulator_M_AXI_AWADDR),
        .s_axi_awburst(s00_transaction_regulator_M_AXI_AWBURST),
        .s_axi_awcache(s00_transaction_regulator_M_AXI_AWCACHE),
        .s_axi_awid({1'b0,1'b0,s00_transaction_regulator_M_AXI_AWID}),
        .s_axi_awlen(s00_transaction_regulator_M_AXI_AWLEN),
        .s_axi_awlock(s00_transaction_regulator_M_AXI_AWLOCK),
        .s_axi_awprot(s00_transaction_regulator_M_AXI_AWPROT),
        .s_axi_awqos(s00_transaction_regulator_M_AXI_AWQOS),
        .s_axi_awready(s00_transaction_regulator_M_AXI_AWREADY),
        .s_axi_awsize(s00_transaction_regulator_M_AXI_AWSIZE),
        .s_axi_awuser(s00_transaction_regulator_M_AXI_AWUSER),
        .s_axi_awvalid(s00_transaction_regulator_M_AXI_AWVALID),
        .s_axi_bid(s00_transaction_regulator_M_AXI_BID),
        .s_axi_bready(s00_transaction_regulator_M_AXI_BREADY),
        .s_axi_bresp(s00_transaction_regulator_M_AXI_BRESP),
        .s_axi_buser(s00_transaction_regulator_M_AXI_BUSER),
        .s_axi_bvalid(s00_transaction_regulator_M_AXI_BVALID),
        .s_axi_rdata(s00_transaction_regulator_M_AXI_RDATA),
        .s_axi_rid(s00_transaction_regulator_M_AXI_RID),
        .s_axi_rlast(s00_transaction_regulator_M_AXI_RLAST),
        .s_axi_rready(s00_transaction_regulator_M_AXI_RREADY),
        .s_axi_rresp(s00_transaction_regulator_M_AXI_RRESP),
        .s_axi_ruser(s00_transaction_regulator_M_AXI_RUSER),
        .s_axi_rvalid(s00_transaction_regulator_M_AXI_RVALID),
        .s_axi_wdata(s00_transaction_regulator_M_AXI_WDATA),
        .s_axi_wlast(s00_transaction_regulator_M_AXI_WLAST),
        .s_axi_wready(s00_transaction_regulator_M_AXI_WREADY),
        .s_axi_wstrb(s00_transaction_regulator_M_AXI_WSTRB),
        .s_axi_wuser(s00_transaction_regulator_M_AXI_WUSER),
        .s_axi_wvalid(s00_transaction_regulator_M_AXI_WVALID));
  bd_afc3_s00tr_0 s00_transaction_regulator
       (.aclk(aclk_1),
        .aresetn(aresetn_1),
        .m_axi_araddr(s00_transaction_regulator_M_AXI_ARADDR),
        .m_axi_arburst(s00_transaction_regulator_M_AXI_ARBURST),
        .m_axi_arcache(s00_transaction_regulator_M_AXI_ARCACHE),
        .m_axi_arid(s00_transaction_regulator_M_AXI_ARID),
        .m_axi_arlen(s00_transaction_regulator_M_AXI_ARLEN),
        .m_axi_arlock(s00_transaction_regulator_M_AXI_ARLOCK),
        .m_axi_arprot(s00_transaction_regulator_M_AXI_ARPROT),
        .m_axi_arqos(s00_transaction_regulator_M_AXI_ARQOS),
        .m_axi_arready(s00_transaction_regulator_M_AXI_ARREADY),
        .m_axi_arsize(s00_transaction_regulator_M_AXI_ARSIZE),
        .m_axi_aruser(s00_transaction_regulator_M_AXI_ARUSER),
        .m_axi_arvalid(s00_transaction_regulator_M_AXI_ARVALID),
        .m_axi_awaddr(s00_transaction_regulator_M_AXI_AWADDR),
        .m_axi_awburst(s00_transaction_regulator_M_AXI_AWBURST),
        .m_axi_awcache(s00_transaction_regulator_M_AXI_AWCACHE),
        .m_axi_awid(s00_transaction_regulator_M_AXI_AWID),
        .m_axi_awlen(s00_transaction_regulator_M_AXI_AWLEN),
        .m_axi_awlock(s00_transaction_regulator_M_AXI_AWLOCK),
        .m_axi_awprot(s00_transaction_regulator_M_AXI_AWPROT),
        .m_axi_awqos(s00_transaction_regulator_M_AXI_AWQOS),
        .m_axi_awready(s00_transaction_regulator_M_AXI_AWREADY),
        .m_axi_awsize(s00_transaction_regulator_M_AXI_AWSIZE),
        .m_axi_awuser(s00_transaction_regulator_M_AXI_AWUSER),
        .m_axi_awvalid(s00_transaction_regulator_M_AXI_AWVALID),
        .m_axi_bid(s00_transaction_regulator_M_AXI_BID[0]),
        .m_axi_bready(s00_transaction_regulator_M_AXI_BREADY),
        .m_axi_bresp(s00_transaction_regulator_M_AXI_BRESP),
        .m_axi_buser(s00_transaction_regulator_M_AXI_BUSER),
        .m_axi_bvalid(s00_transaction_regulator_M_AXI_BVALID),
        .m_axi_rdata(s00_transaction_regulator_M_AXI_RDATA),
        .m_axi_rid(s00_transaction_regulator_M_AXI_RID[0]),
        .m_axi_rlast(s00_transaction_regulator_M_AXI_RLAST),
        .m_axi_rready(s00_transaction_regulator_M_AXI_RREADY),
        .m_axi_rresp(s00_transaction_regulator_M_AXI_RRESP),
        .m_axi_ruser(s00_transaction_regulator_M_AXI_RUSER),
        .m_axi_rvalid(s00_transaction_regulator_M_AXI_RVALID),
        .m_axi_wdata(s00_transaction_regulator_M_AXI_WDATA),
        .m_axi_wlast(s00_transaction_regulator_M_AXI_WLAST),
        .m_axi_wready(s00_transaction_regulator_M_AXI_WREADY),
        .m_axi_wstrb(s00_transaction_regulator_M_AXI_WSTRB),
        .m_axi_wuser(s00_transaction_regulator_M_AXI_WUSER),
        .m_axi_wvalid(s00_transaction_regulator_M_AXI_WVALID),
        .s_axi_araddr(s00_mmu_M_AXI_ARADDR),
        .s_axi_arburst(s00_mmu_M_AXI_ARBURST),
        .s_axi_arcache(s00_mmu_M_AXI_ARCACHE),
        .s_axi_arid(s00_mmu_M_AXI_ARID),
        .s_axi_arlen(s00_mmu_M_AXI_ARLEN),
        .s_axi_arlock(s00_mmu_M_AXI_ARLOCK),
        .s_axi_arprot(s00_mmu_M_AXI_ARPROT),
        .s_axi_arqos(s00_mmu_M_AXI_ARQOS),
        .s_axi_arready(s00_mmu_M_AXI_ARREADY),
        .s_axi_arsize(s00_mmu_M_AXI_ARSIZE),
        .s_axi_aruser(s00_mmu_M_AXI_ARUSER),
        .s_axi_arvalid(s00_mmu_M_AXI_ARVALID),
        .s_axi_awaddr(s00_mmu_M_AXI_AWADDR),
        .s_axi_awburst(s00_mmu_M_AXI_AWBURST),
        .s_axi_awcache(s00_mmu_M_AXI_AWCACHE),
        .s_axi_awid(s00_mmu_M_AXI_AWID),
        .s_axi_awlen(s00_mmu_M_AXI_AWLEN),
        .s_axi_awlock(s00_mmu_M_AXI_AWLOCK),
        .s_axi_awprot(s00_mmu_M_AXI_AWPROT),
        .s_axi_awqos(s00_mmu_M_AXI_AWQOS),
        .s_axi_awready(s00_mmu_M_AXI_AWREADY),
        .s_axi_awsize(s00_mmu_M_AXI_AWSIZE),
        .s_axi_awuser(s00_mmu_M_AXI_AWUSER),
        .s_axi_awvalid(s00_mmu_M_AXI_AWVALID),
        .s_axi_bid(s00_mmu_M_AXI_BID),
        .s_axi_bready(s00_mmu_M_AXI_BREADY),
        .s_axi_bresp(s00_mmu_M_AXI_BRESP),
        .s_axi_buser(s00_mmu_M_AXI_BUSER),
        .s_axi_bvalid(s00_mmu_M_AXI_BVALID),
        .s_axi_rdata(s00_mmu_M_AXI_RDATA),
        .s_axi_rid(s00_mmu_M_AXI_RID),
        .s_axi_rlast(s00_mmu_M_AXI_RLAST),
        .s_axi_rready(s00_mmu_M_AXI_RREADY),
        .s_axi_rresp(s00_mmu_M_AXI_RRESP),
        .s_axi_ruser(s00_mmu_M_AXI_RUSER),
        .s_axi_rvalid(s00_mmu_M_AXI_RVALID),
        .s_axi_wdata(s00_mmu_M_AXI_WDATA),
        .s_axi_wlast(s00_mmu_M_AXI_WLAST),
        .s_axi_wready(s00_mmu_M_AXI_WREADY),
        .s_axi_wstrb(s00_mmu_M_AXI_WSTRB),
        .s_axi_wuser(s00_mmu_M_AXI_WUSER),
        .s_axi_wvalid(s00_mmu_M_AXI_WVALID));
endmodule

module s00_nodes_imp_Y7M43I
   (M_SC_AR_info,
    M_SC_AR_payld,
    M_SC_AR_recv,
    M_SC_AR_req,
    M_SC_AR_send,
    M_SC_AW_info,
    M_SC_AW_payld,
    M_SC_AW_recv,
    M_SC_AW_req,
    M_SC_AW_send,
    M_SC_B_info,
    M_SC_B_payld,
    M_SC_B_recv,
    M_SC_B_req,
    M_SC_B_send,
    M_SC_R_info,
    M_SC_R_payld,
    M_SC_R_recv,
    M_SC_R_req,
    M_SC_R_send,
    M_SC_W_info,
    M_SC_W_payld,
    M_SC_W_recv,
    M_SC_W_req,
    M_SC_W_send,
    S_SC_AR_info,
    S_SC_AR_payld,
    S_SC_AR_recv,
    S_SC_AR_req,
    S_SC_AR_send,
    S_SC_AW_info,
    S_SC_AW_payld,
    S_SC_AW_recv,
    S_SC_AW_req,
    S_SC_AW_send,
    S_SC_B_info,
    S_SC_B_payld,
    S_SC_B_recv,
    S_SC_B_req,
    S_SC_B_send,
    S_SC_R_info,
    S_SC_R_payld,
    S_SC_R_recv,
    S_SC_R_req,
    S_SC_R_send,
    S_SC_W_info,
    S_SC_W_payld,
    S_SC_W_recv,
    S_SC_W_req,
    S_SC_W_send,
    m_sc_clk,
    m_sc_resetn,
    s_sc_clk,
    s_sc_resetn);
  output [7:0]M_SC_AR_info;
  output [181:0]M_SC_AR_payld;
  input [7:0]M_SC_AR_recv;
  output [7:0]M_SC_AR_req;
  output [7:0]M_SC_AR_send;
  output [7:0]M_SC_AW_info;
  output [181:0]M_SC_AW_payld;
  input [7:0]M_SC_AW_recv;
  output [7:0]M_SC_AW_req;
  output [7:0]M_SC_AW_send;
  output [0:0]M_SC_B_info;
  output [8:0]M_SC_B_payld;
  input [0:0]M_SC_B_recv;
  output [0:0]M_SC_B_req;
  output [0:0]M_SC_B_send;
  output [0:0]M_SC_R_info;
  output [54:0]M_SC_R_payld;
  input [0:0]M_SC_R_recv;
  output [0:0]M_SC_R_req;
  output [0:0]M_SC_R_send;
  output [7:0]M_SC_W_info;
  output [68:0]M_SC_W_payld;
  input [7:0]M_SC_W_recv;
  output [7:0]M_SC_W_req;
  output [7:0]M_SC_W_send;
  input [0:0]S_SC_AR_info;
  input [179:0]S_SC_AR_payld;
  output [0:0]S_SC_AR_recv;
  input [0:0]S_SC_AR_req;
  input [0:0]S_SC_AR_send;
  input [0:0]S_SC_AW_info;
  input [179:0]S_SC_AW_payld;
  output [0:0]S_SC_AW_recv;
  input [0:0]S_SC_AW_req;
  input [0:0]S_SC_AW_send;
  input [7:0]S_SC_B_info;
  input [8:0]S_SC_B_payld;
  output [7:0]S_SC_B_recv;
  input [7:0]S_SC_B_req;
  input [7:0]S_SC_B_send;
  input [7:0]S_SC_R_info;
  input [54:0]S_SC_R_payld;
  output [7:0]S_SC_R_recv;
  input [7:0]S_SC_R_req;
  input [7:0]S_SC_R_send;
  input [0:0]S_SC_W_info;
  input [66:0]S_SC_W_payld;
  output [0:0]S_SC_W_recv;
  input [0:0]S_SC_W_req;
  input [0:0]S_SC_W_send;
  input m_sc_clk;
  input m_sc_resetn;
  input s_sc_clk;
  input s_sc_resetn;

  wire [0:0]S_SC_AR_1_INFO;
  wire [179:0]S_SC_AR_1_PAYLD;
  wire [0:0]S_SC_AR_1_RECV;
  wire [0:0]S_SC_AR_1_REQ;
  wire [0:0]S_SC_AR_1_SEND;
  wire [0:0]S_SC_AW_1_INFO;
  wire [179:0]S_SC_AW_1_PAYLD;
  wire [0:0]S_SC_AW_1_RECV;
  wire [0:0]S_SC_AW_1_REQ;
  wire [0:0]S_SC_AW_1_SEND;
  wire [7:0]S_SC_B_1_INFO;
  wire [8:0]S_SC_B_1_PAYLD;
  wire [7:0]S_SC_B_1_RECV;
  wire [7:0]S_SC_B_1_REQ;
  wire [7:0]S_SC_B_1_SEND;
  wire [7:0]S_SC_R_1_INFO;
  wire [54:0]S_SC_R_1_PAYLD;
  wire [7:0]S_SC_R_1_RECV;
  wire [7:0]S_SC_R_1_REQ;
  wire [7:0]S_SC_R_1_SEND;
  wire [0:0]S_SC_W_1_INFO;
  wire [66:0]S_SC_W_1_PAYLD;
  wire [0:0]S_SC_W_1_RECV;
  wire [0:0]S_SC_W_1_REQ;
  wire [0:0]S_SC_W_1_SEND;
  wire m_sc_clk_1;
  wire m_sc_resetn_1;
  wire [7:0]s00_ar_node_M_SC_INFO;
  wire [181:0]s00_ar_node_M_SC_PAYLD;
  wire [7:0]s00_ar_node_M_SC_RECV;
  wire [7:0]s00_ar_node_M_SC_REQ;
  wire [7:0]s00_ar_node_M_SC_SEND;
  wire [7:0]s00_aw_node_M_SC_INFO;
  wire [181:0]s00_aw_node_M_SC_PAYLD;
  wire [7:0]s00_aw_node_M_SC_RECV;
  wire [7:0]s00_aw_node_M_SC_REQ;
  wire [7:0]s00_aw_node_M_SC_SEND;
  wire [0:0]s00_b_node_M_SC_INFO;
  wire [8:0]s00_b_node_M_SC_PAYLD;
  wire [0:0]s00_b_node_M_SC_RECV;
  wire [0:0]s00_b_node_M_SC_REQ;
  wire [0:0]s00_b_node_M_SC_SEND;
  wire [0:0]s00_r_node_M_SC_INFO;
  wire [54:0]s00_r_node_M_SC_PAYLD;
  wire [0:0]s00_r_node_M_SC_RECV;
  wire [0:0]s00_r_node_M_SC_REQ;
  wire [0:0]s00_r_node_M_SC_SEND;
  wire [7:0]s00_w_node_M_SC_INFO;
  wire [68:0]s00_w_node_M_SC_PAYLD;
  wire [7:0]s00_w_node_M_SC_RECV;
  wire [7:0]s00_w_node_M_SC_REQ;
  wire [7:0]s00_w_node_M_SC_SEND;
  wire s_sc_clk_1;
  wire s_sc_resetn_1;

  assign M_SC_AR_info[7:0] = s00_ar_node_M_SC_INFO;
  assign M_SC_AR_payld[181:0] = s00_ar_node_M_SC_PAYLD;
  assign M_SC_AR_req[7:0] = s00_ar_node_M_SC_REQ;
  assign M_SC_AR_send[7:0] = s00_ar_node_M_SC_SEND;
  assign M_SC_AW_info[7:0] = s00_aw_node_M_SC_INFO;
  assign M_SC_AW_payld[181:0] = s00_aw_node_M_SC_PAYLD;
  assign M_SC_AW_req[7:0] = s00_aw_node_M_SC_REQ;
  assign M_SC_AW_send[7:0] = s00_aw_node_M_SC_SEND;
  assign M_SC_B_info[0] = s00_b_node_M_SC_INFO;
  assign M_SC_B_payld[8:0] = s00_b_node_M_SC_PAYLD;
  assign M_SC_B_req[0] = s00_b_node_M_SC_REQ;
  assign M_SC_B_send[0] = s00_b_node_M_SC_SEND;
  assign M_SC_R_info[0] = s00_r_node_M_SC_INFO;
  assign M_SC_R_payld[54:0] = s00_r_node_M_SC_PAYLD;
  assign M_SC_R_req[0] = s00_r_node_M_SC_REQ;
  assign M_SC_R_send[0] = s00_r_node_M_SC_SEND;
  assign M_SC_W_info[7:0] = s00_w_node_M_SC_INFO;
  assign M_SC_W_payld[68:0] = s00_w_node_M_SC_PAYLD;
  assign M_SC_W_req[7:0] = s00_w_node_M_SC_REQ;
  assign M_SC_W_send[7:0] = s00_w_node_M_SC_SEND;
  assign S_SC_AR_1_INFO = S_SC_AR_info[0];
  assign S_SC_AR_1_PAYLD = S_SC_AR_payld[179:0];
  assign S_SC_AR_1_REQ = S_SC_AR_req[0];
  assign S_SC_AR_1_SEND = S_SC_AR_send[0];
  assign S_SC_AR_recv[0] = S_SC_AR_1_RECV;
  assign S_SC_AW_1_INFO = S_SC_AW_info[0];
  assign S_SC_AW_1_PAYLD = S_SC_AW_payld[179:0];
  assign S_SC_AW_1_REQ = S_SC_AW_req[0];
  assign S_SC_AW_1_SEND = S_SC_AW_send[0];
  assign S_SC_AW_recv[0] = S_SC_AW_1_RECV;
  assign S_SC_B_1_INFO = S_SC_B_info[7:0];
  assign S_SC_B_1_PAYLD = S_SC_B_payld[8:0];
  assign S_SC_B_1_REQ = S_SC_B_req[7:0];
  assign S_SC_B_1_SEND = S_SC_B_send[7:0];
  assign S_SC_B_recv[7:0] = S_SC_B_1_RECV;
  assign S_SC_R_1_INFO = S_SC_R_info[7:0];
  assign S_SC_R_1_PAYLD = S_SC_R_payld[54:0];
  assign S_SC_R_1_REQ = S_SC_R_req[7:0];
  assign S_SC_R_1_SEND = S_SC_R_send[7:0];
  assign S_SC_R_recv[7:0] = S_SC_R_1_RECV;
  assign S_SC_W_1_INFO = S_SC_W_info[0];
  assign S_SC_W_1_PAYLD = S_SC_W_payld[66:0];
  assign S_SC_W_1_REQ = S_SC_W_req[0];
  assign S_SC_W_1_SEND = S_SC_W_send[0];
  assign S_SC_W_recv[0] = S_SC_W_1_RECV;
  assign m_sc_clk_1 = m_sc_clk;
  assign m_sc_resetn_1 = m_sc_resetn;
  assign s00_ar_node_M_SC_RECV = M_SC_AR_recv[7:0];
  assign s00_aw_node_M_SC_RECV = M_SC_AW_recv[7:0];
  assign s00_b_node_M_SC_RECV = M_SC_B_recv[0];
  assign s00_r_node_M_SC_RECV = M_SC_R_recv[0];
  assign s00_w_node_M_SC_RECV = M_SC_W_recv[7:0];
  assign s_sc_clk_1 = s_sc_clk;
  assign s_sc_resetn_1 = s_sc_resetn;
  bd_afc3_sarn_0 s00_ar_node
       (.m_sc_aclk(m_sc_clk_1),
        .m_sc_aresetn(m_sc_resetn_1),
        .m_sc_info(s00_ar_node_M_SC_INFO),
        .m_sc_payld(s00_ar_node_M_SC_PAYLD),
        .m_sc_recv(s00_ar_node_M_SC_RECV),
        .m_sc_req(s00_ar_node_M_SC_REQ),
        .m_sc_send(s00_ar_node_M_SC_SEND),
        .s_sc_aclk(s_sc_clk_1),
        .s_sc_aresetn(s_sc_resetn_1),
        .s_sc_info(S_SC_AR_1_INFO),
        .s_sc_payld({1'b0,1'b0,S_SC_AR_1_PAYLD}),
        .s_sc_recv(S_SC_AR_1_RECV),
        .s_sc_req(S_SC_AR_1_REQ),
        .s_sc_send(S_SC_AR_1_SEND));
  bd_afc3_sawn_0 s00_aw_node
       (.m_sc_aclk(m_sc_clk_1),
        .m_sc_aresetn(m_sc_resetn_1),
        .m_sc_info(s00_aw_node_M_SC_INFO),
        .m_sc_payld(s00_aw_node_M_SC_PAYLD),
        .m_sc_recv(s00_aw_node_M_SC_RECV),
        .m_sc_req(s00_aw_node_M_SC_REQ),
        .m_sc_send(s00_aw_node_M_SC_SEND),
        .s_sc_aclk(s_sc_clk_1),
        .s_sc_aresetn(s_sc_resetn_1),
        .s_sc_info(S_SC_AW_1_INFO),
        .s_sc_payld({1'b0,1'b0,S_SC_AW_1_PAYLD}),
        .s_sc_recv(S_SC_AW_1_RECV),
        .s_sc_req(S_SC_AW_1_REQ),
        .s_sc_send(S_SC_AW_1_SEND));
  bd_afc3_sbn_0 s00_b_node
       (.m_sc_aclk(s_sc_clk_1),
        .m_sc_aresetn(s_sc_resetn_1),
        .m_sc_info(s00_b_node_M_SC_INFO),
        .m_sc_payld(s00_b_node_M_SC_PAYLD),
        .m_sc_recv(s00_b_node_M_SC_RECV),
        .m_sc_req(s00_b_node_M_SC_REQ),
        .m_sc_send(s00_b_node_M_SC_SEND),
        .s_sc_aclk(m_sc_clk_1),
        .s_sc_aresetn(m_sc_resetn_1),
        .s_sc_info(S_SC_B_1_INFO),
        .s_sc_payld(S_SC_B_1_PAYLD),
        .s_sc_recv(S_SC_B_1_RECV),
        .s_sc_req(S_SC_B_1_REQ),
        .s_sc_send(S_SC_B_1_SEND));
  bd_afc3_srn_0 s00_r_node
       (.m_sc_aclk(s_sc_clk_1),
        .m_sc_aresetn(s_sc_resetn_1),
        .m_sc_info(s00_r_node_M_SC_INFO),
        .m_sc_payld(s00_r_node_M_SC_PAYLD),
        .m_sc_recv(s00_r_node_M_SC_RECV),
        .m_sc_req(s00_r_node_M_SC_REQ),
        .m_sc_send(s00_r_node_M_SC_SEND),
        .s_sc_aclk(m_sc_clk_1),
        .s_sc_aresetn(m_sc_resetn_1),
        .s_sc_info(S_SC_R_1_INFO),
        .s_sc_payld(S_SC_R_1_PAYLD),
        .s_sc_recv(S_SC_R_1_RECV),
        .s_sc_req(S_SC_R_1_REQ),
        .s_sc_send(S_SC_R_1_SEND));
  bd_afc3_swn_0 s00_w_node
       (.m_sc_aclk(m_sc_clk_1),
        .m_sc_aresetn(m_sc_resetn_1),
        .m_sc_info(s00_w_node_M_SC_INFO),
        .m_sc_payld(s00_w_node_M_SC_PAYLD),
        .m_sc_recv(s00_w_node_M_SC_RECV),
        .m_sc_req(s00_w_node_M_SC_REQ),
        .m_sc_send(s00_w_node_M_SC_SEND),
        .s_sc_aclk(s_sc_clk_1),
        .s_sc_aresetn(s_sc_resetn_1),
        .s_sc_info(S_SC_W_1_INFO),
        .s_sc_payld({1'b0,1'b0,S_SC_W_1_PAYLD}),
        .s_sc_recv(S_SC_W_1_RECV),
        .s_sc_req(S_SC_W_1_REQ),
        .s_sc_send(S_SC_W_1_SEND));
endmodule

module switchboards_imp_4N4PBE
   (M00_SC_AR_info,
    M00_SC_AR_payld,
    M00_SC_AR_recv,
    M00_SC_AR_req,
    M00_SC_AR_send,
    M00_SC_AW_info,
    M00_SC_AW_payld,
    M00_SC_AW_recv,
    M00_SC_AW_req,
    M00_SC_AW_send,
    M00_SC_B_info,
    M00_SC_B_payld,
    M00_SC_B_recv,
    M00_SC_B_req,
    M00_SC_B_send,
    M00_SC_R_info,
    M00_SC_R_payld,
    M00_SC_R_recv,
    M00_SC_R_req,
    M00_SC_R_send,
    M00_SC_W_info,
    M00_SC_W_payld,
    M00_SC_W_recv,
    M00_SC_W_req,
    M00_SC_W_send,
    M01_SC_AR_info,
    M01_SC_AR_payld,
    M01_SC_AR_recv,
    M01_SC_AR_req,
    M01_SC_AR_send,
    M01_SC_AW_info,
    M01_SC_AW_payld,
    M01_SC_AW_recv,
    M01_SC_AW_req,
    M01_SC_AW_send,
    M01_SC_W_info,
    M01_SC_W_payld,
    M01_SC_W_recv,
    M01_SC_W_req,
    M01_SC_W_send,
    M02_SC_AR_info,
    M02_SC_AR_payld,
    M02_SC_AR_recv,
    M02_SC_AR_req,
    M02_SC_AR_send,
    M02_SC_AW_info,
    M02_SC_AW_payld,
    M02_SC_AW_recv,
    M02_SC_AW_req,
    M02_SC_AW_send,
    M02_SC_W_info,
    M02_SC_W_payld,
    M02_SC_W_recv,
    M02_SC_W_req,
    M02_SC_W_send,
    M03_SC_AR_info,
    M03_SC_AR_payld,
    M03_SC_AR_recv,
    M03_SC_AR_req,
    M03_SC_AR_send,
    M03_SC_AW_info,
    M03_SC_AW_payld,
    M03_SC_AW_recv,
    M03_SC_AW_req,
    M03_SC_AW_send,
    M03_SC_W_info,
    M03_SC_W_payld,
    M03_SC_W_recv,
    M03_SC_W_req,
    M03_SC_W_send,
    M04_SC_AR_info,
    M04_SC_AR_payld,
    M04_SC_AR_recv,
    M04_SC_AR_req,
    M04_SC_AR_send,
    M04_SC_AW_info,
    M04_SC_AW_payld,
    M04_SC_AW_recv,
    M04_SC_AW_req,
    M04_SC_AW_send,
    M04_SC_W_info,
    M04_SC_W_payld,
    M04_SC_W_recv,
    M04_SC_W_req,
    M04_SC_W_send,
    M05_SC_AR_info,
    M05_SC_AR_payld,
    M05_SC_AR_recv,
    M05_SC_AR_req,
    M05_SC_AR_send,
    M05_SC_AW_info,
    M05_SC_AW_payld,
    M05_SC_AW_recv,
    M05_SC_AW_req,
    M05_SC_AW_send,
    M05_SC_W_info,
    M05_SC_W_payld,
    M05_SC_W_recv,
    M05_SC_W_req,
    M05_SC_W_send,
    M06_SC_AR_info,
    M06_SC_AR_payld,
    M06_SC_AR_recv,
    M06_SC_AR_req,
    M06_SC_AR_send,
    M06_SC_AW_info,
    M06_SC_AW_payld,
    M06_SC_AW_recv,
    M06_SC_AW_req,
    M06_SC_AW_send,
    M06_SC_W_info,
    M06_SC_W_payld,
    M06_SC_W_recv,
    M06_SC_W_req,
    M06_SC_W_send,
    M07_SC_AR_info,
    M07_SC_AR_payld,
    M07_SC_AR_recv,
    M07_SC_AR_req,
    M07_SC_AR_send,
    M07_SC_AW_info,
    M07_SC_AW_payld,
    M07_SC_AW_recv,
    M07_SC_AW_req,
    M07_SC_AW_send,
    M07_SC_W_info,
    M07_SC_W_payld,
    M07_SC_W_recv,
    M07_SC_W_req,
    M07_SC_W_send,
    M08_SC_AR_info,
    M08_SC_AR_payld,
    M08_SC_AR_recv,
    M08_SC_AR_req,
    M08_SC_AR_send,
    M08_SC_AW_info,
    M08_SC_AW_payld,
    M08_SC_AW_recv,
    M08_SC_AW_req,
    M08_SC_AW_send,
    M08_SC_W_info,
    M08_SC_W_payld,
    M08_SC_W_recv,
    M08_SC_W_req,
    M08_SC_W_send,
    M09_SC_AR_info,
    M09_SC_AR_payld,
    M09_SC_AR_recv,
    M09_SC_AR_req,
    M09_SC_AR_send,
    M09_SC_AW_info,
    M09_SC_AW_payld,
    M09_SC_AW_recv,
    M09_SC_AW_req,
    M09_SC_AW_send,
    M09_SC_W_info,
    M09_SC_W_payld,
    M09_SC_W_recv,
    M09_SC_W_req,
    M09_SC_W_send,
    M10_SC_AR_info,
    M10_SC_AR_payld,
    M10_SC_AR_recv,
    M10_SC_AR_req,
    M10_SC_AR_send,
    M10_SC_AW_info,
    M10_SC_AW_payld,
    M10_SC_AW_recv,
    M10_SC_AW_req,
    M10_SC_AW_send,
    M10_SC_W_info,
    M10_SC_W_payld,
    M10_SC_W_recv,
    M10_SC_W_req,
    M10_SC_W_send,
    M11_SC_AR_info,
    M11_SC_AR_payld,
    M11_SC_AR_recv,
    M11_SC_AR_req,
    M11_SC_AR_send,
    M11_SC_AW_info,
    M11_SC_AW_payld,
    M11_SC_AW_recv,
    M11_SC_AW_req,
    M11_SC_AW_send,
    M11_SC_W_info,
    M11_SC_W_payld,
    M11_SC_W_recv,
    M11_SC_W_req,
    M11_SC_W_send,
    M12_SC_AR_info,
    M12_SC_AR_payld,
    M12_SC_AR_recv,
    M12_SC_AR_req,
    M12_SC_AR_send,
    M12_SC_AW_info,
    M12_SC_AW_payld,
    M12_SC_AW_recv,
    M12_SC_AW_req,
    M12_SC_AW_send,
    M12_SC_W_info,
    M12_SC_W_payld,
    M12_SC_W_recv,
    M12_SC_W_req,
    M12_SC_W_send,
    M13_SC_AR_info,
    M13_SC_AR_payld,
    M13_SC_AR_recv,
    M13_SC_AR_req,
    M13_SC_AR_send,
    M13_SC_AW_info,
    M13_SC_AW_payld,
    M13_SC_AW_recv,
    M13_SC_AW_req,
    M13_SC_AW_send,
    M13_SC_W_info,
    M13_SC_W_payld,
    M13_SC_W_recv,
    M13_SC_W_req,
    M13_SC_W_send,
    M14_SC_AR_info,
    M14_SC_AR_payld,
    M14_SC_AR_recv,
    M14_SC_AR_req,
    M14_SC_AR_send,
    M14_SC_AW_info,
    M14_SC_AW_payld,
    M14_SC_AW_recv,
    M14_SC_AW_req,
    M14_SC_AW_send,
    M14_SC_W_info,
    M14_SC_W_payld,
    M14_SC_W_recv,
    M14_SC_W_req,
    M14_SC_W_send,
    M15_SC_AR_info,
    M15_SC_AR_payld,
    M15_SC_AR_recv,
    M15_SC_AR_req,
    M15_SC_AR_send,
    M15_SC_AW_info,
    M15_SC_AW_payld,
    M15_SC_AW_recv,
    M15_SC_AW_req,
    M15_SC_AW_send,
    M15_SC_W_info,
    M15_SC_W_payld,
    M15_SC_W_recv,
    M15_SC_W_req,
    M15_SC_W_send,
    M16_SC_AR_info,
    M16_SC_AR_payld,
    M16_SC_AR_recv,
    M16_SC_AR_req,
    M16_SC_AR_send,
    M16_SC_AW_info,
    M16_SC_AW_payld,
    M16_SC_AW_recv,
    M16_SC_AW_req,
    M16_SC_AW_send,
    M16_SC_W_info,
    M16_SC_W_payld,
    M16_SC_W_recv,
    M16_SC_W_req,
    M16_SC_W_send,
    M17_SC_AR_info,
    M17_SC_AR_payld,
    M17_SC_AR_recv,
    M17_SC_AR_req,
    M17_SC_AR_send,
    M17_SC_AW_info,
    M17_SC_AW_payld,
    M17_SC_AW_recv,
    M17_SC_AW_req,
    M17_SC_AW_send,
    M17_SC_W_info,
    M17_SC_W_payld,
    M17_SC_W_recv,
    M17_SC_W_req,
    M17_SC_W_send,
    M18_SC_AR_info,
    M18_SC_AR_payld,
    M18_SC_AR_recv,
    M18_SC_AR_req,
    M18_SC_AR_send,
    M18_SC_AW_info,
    M18_SC_AW_payld,
    M18_SC_AW_recv,
    M18_SC_AW_req,
    M18_SC_AW_send,
    M18_SC_W_info,
    M18_SC_W_payld,
    M18_SC_W_recv,
    M18_SC_W_req,
    M18_SC_W_send,
    M19_SC_AR_info,
    M19_SC_AR_payld,
    M19_SC_AR_recv,
    M19_SC_AR_req,
    M19_SC_AR_send,
    M19_SC_AW_info,
    M19_SC_AW_payld,
    M19_SC_AW_recv,
    M19_SC_AW_req,
    M19_SC_AW_send,
    M19_SC_W_info,
    M19_SC_W_payld,
    M19_SC_W_recv,
    M19_SC_W_req,
    M19_SC_W_send,
    M20_SC_AR_info,
    M20_SC_AR_payld,
    M20_SC_AR_recv,
    M20_SC_AR_req,
    M20_SC_AR_send,
    M20_SC_AW_info,
    M20_SC_AW_payld,
    M20_SC_AW_recv,
    M20_SC_AW_req,
    M20_SC_AW_send,
    M20_SC_W_info,
    M20_SC_W_payld,
    M20_SC_W_recv,
    M20_SC_W_req,
    M20_SC_W_send,
    M21_SC_AR_info,
    M21_SC_AR_payld,
    M21_SC_AR_recv,
    M21_SC_AR_req,
    M21_SC_AR_send,
    M21_SC_AW_info,
    M21_SC_AW_payld,
    M21_SC_AW_recv,
    M21_SC_AW_req,
    M21_SC_AW_send,
    M21_SC_W_info,
    M21_SC_W_payld,
    M21_SC_W_recv,
    M21_SC_W_req,
    M21_SC_W_send,
    M22_SC_AR_info,
    M22_SC_AR_payld,
    M22_SC_AR_recv,
    M22_SC_AR_req,
    M22_SC_AR_send,
    M22_SC_AW_info,
    M22_SC_AW_payld,
    M22_SC_AW_recv,
    M22_SC_AW_req,
    M22_SC_AW_send,
    M22_SC_W_info,
    M22_SC_W_payld,
    M22_SC_W_recv,
    M22_SC_W_req,
    M22_SC_W_send,
    M23_SC_AR_info,
    M23_SC_AR_payld,
    M23_SC_AR_recv,
    M23_SC_AR_req,
    M23_SC_AR_send,
    M23_SC_AW_info,
    M23_SC_AW_payld,
    M23_SC_AW_recv,
    M23_SC_AW_req,
    M23_SC_AW_send,
    M23_SC_W_info,
    M23_SC_W_payld,
    M23_SC_W_recv,
    M23_SC_W_req,
    M23_SC_W_send,
    M24_SC_AR_info,
    M24_SC_AR_payld,
    M24_SC_AR_recv,
    M24_SC_AR_req,
    M24_SC_AR_send,
    M24_SC_AW_info,
    M24_SC_AW_payld,
    M24_SC_AW_recv,
    M24_SC_AW_req,
    M24_SC_AW_send,
    M24_SC_W_info,
    M24_SC_W_payld,
    M24_SC_W_recv,
    M24_SC_W_req,
    M24_SC_W_send,
    M25_SC_AR_info,
    M25_SC_AR_payld,
    M25_SC_AR_recv,
    M25_SC_AR_req,
    M25_SC_AR_send,
    M25_SC_AW_info,
    M25_SC_AW_payld,
    M25_SC_AW_recv,
    M25_SC_AW_req,
    M25_SC_AW_send,
    M25_SC_W_info,
    M25_SC_W_payld,
    M25_SC_W_recv,
    M25_SC_W_req,
    M25_SC_W_send,
    M26_SC_AR_info,
    M26_SC_AR_payld,
    M26_SC_AR_recv,
    M26_SC_AR_req,
    M26_SC_AR_send,
    M26_SC_AW_info,
    M26_SC_AW_payld,
    M26_SC_AW_recv,
    M26_SC_AW_req,
    M26_SC_AW_send,
    M26_SC_W_info,
    M26_SC_W_payld,
    M26_SC_W_recv,
    M26_SC_W_req,
    M26_SC_W_send,
    M27_SC_AR_info,
    M27_SC_AR_payld,
    M27_SC_AR_recv,
    M27_SC_AR_req,
    M27_SC_AR_send,
    M27_SC_AW_info,
    M27_SC_AW_payld,
    M27_SC_AW_recv,
    M27_SC_AW_req,
    M27_SC_AW_send,
    M27_SC_W_info,
    M27_SC_W_payld,
    M27_SC_W_recv,
    M27_SC_W_req,
    M27_SC_W_send,
    M28_SC_AR_info,
    M28_SC_AR_payld,
    M28_SC_AR_recv,
    M28_SC_AR_req,
    M28_SC_AR_send,
    M28_SC_AW_info,
    M28_SC_AW_payld,
    M28_SC_AW_recv,
    M28_SC_AW_req,
    M28_SC_AW_send,
    M28_SC_W_info,
    M28_SC_W_payld,
    M28_SC_W_recv,
    M28_SC_W_req,
    M28_SC_W_send,
    M29_SC_AR_info,
    M29_SC_AR_payld,
    M29_SC_AR_recv,
    M29_SC_AR_req,
    M29_SC_AR_send,
    M29_SC_AW_info,
    M29_SC_AW_payld,
    M29_SC_AW_recv,
    M29_SC_AW_req,
    M29_SC_AW_send,
    M29_SC_W_info,
    M29_SC_W_payld,
    M29_SC_W_recv,
    M29_SC_W_req,
    M29_SC_W_send,
    M30_SC_AR_info,
    M30_SC_AR_payld,
    M30_SC_AR_recv,
    M30_SC_AR_req,
    M30_SC_AR_send,
    M30_SC_AW_info,
    M30_SC_AW_payld,
    M30_SC_AW_recv,
    M30_SC_AW_req,
    M30_SC_AW_send,
    M30_SC_W_info,
    M30_SC_W_payld,
    M30_SC_W_recv,
    M30_SC_W_req,
    M30_SC_W_send,
    M31_SC_AR_info,
    M31_SC_AR_payld,
    M31_SC_AR_recv,
    M31_SC_AR_req,
    M31_SC_AR_send,
    M31_SC_AW_info,
    M31_SC_AW_payld,
    M31_SC_AW_recv,
    M31_SC_AW_req,
    M31_SC_AW_send,
    M31_SC_W_info,
    M31_SC_W_payld,
    M31_SC_W_recv,
    M31_SC_W_req,
    M31_SC_W_send,
    M32_SC_AR_info,
    M32_SC_AR_payld,
    M32_SC_AR_recv,
    M32_SC_AR_req,
    M32_SC_AR_send,
    M32_SC_AW_info,
    M32_SC_AW_payld,
    M32_SC_AW_recv,
    M32_SC_AW_req,
    M32_SC_AW_send,
    M32_SC_W_info,
    M32_SC_W_payld,
    M32_SC_W_recv,
    M32_SC_W_req,
    M32_SC_W_send,
    M33_SC_AR_info,
    M33_SC_AR_payld,
    M33_SC_AR_recv,
    M33_SC_AR_req,
    M33_SC_AR_send,
    M33_SC_AW_info,
    M33_SC_AW_payld,
    M33_SC_AW_recv,
    M33_SC_AW_req,
    M33_SC_AW_send,
    M33_SC_W_info,
    M33_SC_W_payld,
    M33_SC_W_recv,
    M33_SC_W_req,
    M33_SC_W_send,
    M34_SC_AR_info,
    M34_SC_AR_payld,
    M34_SC_AR_recv,
    M34_SC_AR_req,
    M34_SC_AR_send,
    M34_SC_AW_info,
    M34_SC_AW_payld,
    M34_SC_AW_recv,
    M34_SC_AW_req,
    M34_SC_AW_send,
    M34_SC_W_info,
    M34_SC_W_payld,
    M34_SC_W_recv,
    M34_SC_W_req,
    M34_SC_W_send,
    M35_SC_AR_info,
    M35_SC_AR_payld,
    M35_SC_AR_recv,
    M35_SC_AR_req,
    M35_SC_AR_send,
    M35_SC_AW_info,
    M35_SC_AW_payld,
    M35_SC_AW_recv,
    M35_SC_AW_req,
    M35_SC_AW_send,
    M35_SC_W_info,
    M35_SC_W_payld,
    M35_SC_W_recv,
    M35_SC_W_req,
    M35_SC_W_send,
    M36_SC_AR_info,
    M36_SC_AR_payld,
    M36_SC_AR_recv,
    M36_SC_AR_req,
    M36_SC_AR_send,
    M36_SC_AW_info,
    M36_SC_AW_payld,
    M36_SC_AW_recv,
    M36_SC_AW_req,
    M36_SC_AW_send,
    M36_SC_W_info,
    M36_SC_W_payld,
    M36_SC_W_recv,
    M36_SC_W_req,
    M36_SC_W_send,
    M37_SC_AR_info,
    M37_SC_AR_payld,
    M37_SC_AR_recv,
    M37_SC_AR_req,
    M37_SC_AR_send,
    M37_SC_AW_info,
    M37_SC_AW_payld,
    M37_SC_AW_recv,
    M37_SC_AW_req,
    M37_SC_AW_send,
    M37_SC_W_info,
    M37_SC_W_payld,
    M37_SC_W_recv,
    M37_SC_W_req,
    M37_SC_W_send,
    M38_SC_AR_info,
    M38_SC_AR_payld,
    M38_SC_AR_recv,
    M38_SC_AR_req,
    M38_SC_AR_send,
    M38_SC_AW_info,
    M38_SC_AW_payld,
    M38_SC_AW_recv,
    M38_SC_AW_req,
    M38_SC_AW_send,
    M38_SC_W_info,
    M38_SC_W_payld,
    M38_SC_W_recv,
    M38_SC_W_req,
    M38_SC_W_send,
    M39_SC_AR_info,
    M39_SC_AR_payld,
    M39_SC_AR_recv,
    M39_SC_AR_req,
    M39_SC_AR_send,
    M39_SC_AW_info,
    M39_SC_AW_payld,
    M39_SC_AW_recv,
    M39_SC_AW_req,
    M39_SC_AW_send,
    M39_SC_W_info,
    M39_SC_W_payld,
    M39_SC_W_recv,
    M39_SC_W_req,
    M39_SC_W_send,
    M40_SC_AR_info,
    M40_SC_AR_payld,
    M40_SC_AR_recv,
    M40_SC_AR_req,
    M40_SC_AR_send,
    M40_SC_AW_info,
    M40_SC_AW_payld,
    M40_SC_AW_recv,
    M40_SC_AW_req,
    M40_SC_AW_send,
    M40_SC_W_info,
    M40_SC_W_payld,
    M40_SC_W_recv,
    M40_SC_W_req,
    M40_SC_W_send,
    M41_SC_AR_info,
    M41_SC_AR_payld,
    M41_SC_AR_recv,
    M41_SC_AR_req,
    M41_SC_AR_send,
    M41_SC_AW_info,
    M41_SC_AW_payld,
    M41_SC_AW_recv,
    M41_SC_AW_req,
    M41_SC_AW_send,
    M41_SC_W_info,
    M41_SC_W_payld,
    M41_SC_W_recv,
    M41_SC_W_req,
    M41_SC_W_send,
    M42_SC_AR_info,
    M42_SC_AR_payld,
    M42_SC_AR_recv,
    M42_SC_AR_req,
    M42_SC_AR_send,
    M42_SC_AW_info,
    M42_SC_AW_payld,
    M42_SC_AW_recv,
    M42_SC_AW_req,
    M42_SC_AW_send,
    M42_SC_W_info,
    M42_SC_W_payld,
    M42_SC_W_recv,
    M42_SC_W_req,
    M42_SC_W_send,
    M43_SC_AR_info,
    M43_SC_AR_payld,
    M43_SC_AR_recv,
    M43_SC_AR_req,
    M43_SC_AR_send,
    M43_SC_AW_info,
    M43_SC_AW_payld,
    M43_SC_AW_recv,
    M43_SC_AW_req,
    M43_SC_AW_send,
    M43_SC_W_info,
    M43_SC_W_payld,
    M43_SC_W_recv,
    M43_SC_W_req,
    M43_SC_W_send,
    M44_SC_AR_info,
    M44_SC_AR_payld,
    M44_SC_AR_recv,
    M44_SC_AR_req,
    M44_SC_AR_send,
    M44_SC_AW_info,
    M44_SC_AW_payld,
    M44_SC_AW_recv,
    M44_SC_AW_req,
    M44_SC_AW_send,
    M44_SC_W_info,
    M44_SC_W_payld,
    M44_SC_W_recv,
    M44_SC_W_req,
    M44_SC_W_send,
    M45_SC_AR_info,
    M45_SC_AR_payld,
    M45_SC_AR_recv,
    M45_SC_AR_req,
    M45_SC_AR_send,
    M45_SC_AW_info,
    M45_SC_AW_payld,
    M45_SC_AW_recv,
    M45_SC_AW_req,
    M45_SC_AW_send,
    M45_SC_W_info,
    M45_SC_W_payld,
    M45_SC_W_recv,
    M45_SC_W_req,
    M45_SC_W_send,
    M46_SC_AR_info,
    M46_SC_AR_payld,
    M46_SC_AR_recv,
    M46_SC_AR_req,
    M46_SC_AR_send,
    M46_SC_AW_info,
    M46_SC_AW_payld,
    M46_SC_AW_recv,
    M46_SC_AW_req,
    M46_SC_AW_send,
    M46_SC_W_info,
    M46_SC_W_payld,
    M46_SC_W_recv,
    M46_SC_W_req,
    M46_SC_W_send,
    M47_SC_AR_info,
    M47_SC_AR_payld,
    M47_SC_AR_recv,
    M47_SC_AR_req,
    M47_SC_AR_send,
    M47_SC_AW_info,
    M47_SC_AW_payld,
    M47_SC_AW_recv,
    M47_SC_AW_req,
    M47_SC_AW_send,
    M47_SC_W_info,
    M47_SC_W_payld,
    M47_SC_W_recv,
    M47_SC_W_req,
    M47_SC_W_send,
    M48_SC_AR_info,
    M48_SC_AR_payld,
    M48_SC_AR_recv,
    M48_SC_AR_req,
    M48_SC_AR_send,
    M48_SC_AW_info,
    M48_SC_AW_payld,
    M48_SC_AW_recv,
    M48_SC_AW_req,
    M48_SC_AW_send,
    M48_SC_W_info,
    M48_SC_W_payld,
    M48_SC_W_recv,
    M48_SC_W_req,
    M48_SC_W_send,
    M49_SC_AR_info,
    M49_SC_AR_payld,
    M49_SC_AR_recv,
    M49_SC_AR_req,
    M49_SC_AR_send,
    M49_SC_AW_info,
    M49_SC_AW_payld,
    M49_SC_AW_recv,
    M49_SC_AW_req,
    M49_SC_AW_send,
    M49_SC_W_info,
    M49_SC_W_payld,
    M49_SC_W_recv,
    M49_SC_W_req,
    M49_SC_W_send,
    M50_SC_AR_info,
    M50_SC_AR_payld,
    M50_SC_AR_recv,
    M50_SC_AR_req,
    M50_SC_AR_send,
    M50_SC_AW_info,
    M50_SC_AW_payld,
    M50_SC_AW_recv,
    M50_SC_AW_req,
    M50_SC_AW_send,
    M50_SC_W_info,
    M50_SC_W_payld,
    M50_SC_W_recv,
    M50_SC_W_req,
    M50_SC_W_send,
    S00_SC_AR_info,
    S00_SC_AR_payld,
    S00_SC_AR_recv,
    S00_SC_AR_req,
    S00_SC_AR_send,
    S00_SC_AW_info,
    S00_SC_AW_payld,
    S00_SC_AW_recv,
    S00_SC_AW_req,
    S00_SC_AW_send,
    S00_SC_B_info,
    S00_SC_B_payld,
    S00_SC_B_recv,
    S00_SC_B_req,
    S00_SC_B_send,
    S00_SC_R_info,
    S00_SC_R_payld,
    S00_SC_R_recv,
    S00_SC_R_req,
    S00_SC_R_send,
    S00_SC_W_info,
    S00_SC_W_payld,
    S00_SC_W_recv,
    S00_SC_W_req,
    S00_SC_W_send,
    S01_SC_B_info,
    S01_SC_B_payld,
    S01_SC_B_recv,
    S01_SC_B_req,
    S01_SC_B_send,
    S01_SC_R_info,
    S01_SC_R_payld,
    S01_SC_R_recv,
    S01_SC_R_req,
    S01_SC_R_send,
    S02_SC_B_info,
    S02_SC_B_payld,
    S02_SC_B_recv,
    S02_SC_B_req,
    S02_SC_B_send,
    S02_SC_R_info,
    S02_SC_R_payld,
    S02_SC_R_recv,
    S02_SC_R_req,
    S02_SC_R_send,
    S03_SC_B_info,
    S03_SC_B_payld,
    S03_SC_B_recv,
    S03_SC_B_req,
    S03_SC_B_send,
    S03_SC_R_info,
    S03_SC_R_payld,
    S03_SC_R_recv,
    S03_SC_R_req,
    S03_SC_R_send,
    S04_SC_B_info,
    S04_SC_B_payld,
    S04_SC_B_recv,
    S04_SC_B_req,
    S04_SC_B_send,
    S04_SC_R_info,
    S04_SC_R_payld,
    S04_SC_R_recv,
    S04_SC_R_req,
    S04_SC_R_send,
    S05_SC_B_info,
    S05_SC_B_payld,
    S05_SC_B_recv,
    S05_SC_B_req,
    S05_SC_B_send,
    S05_SC_R_info,
    S05_SC_R_payld,
    S05_SC_R_recv,
    S05_SC_R_req,
    S05_SC_R_send,
    S06_SC_B_info,
    S06_SC_B_payld,
    S06_SC_B_recv,
    S06_SC_B_req,
    S06_SC_B_send,
    S06_SC_R_info,
    S06_SC_R_payld,
    S06_SC_R_recv,
    S06_SC_R_req,
    S06_SC_R_send,
    S07_SC_B_info,
    S07_SC_B_payld,
    S07_SC_B_recv,
    S07_SC_B_req,
    S07_SC_B_send,
    S07_SC_R_info,
    S07_SC_R_payld,
    S07_SC_R_recv,
    S07_SC_R_req,
    S07_SC_R_send,
    S08_SC_B_info,
    S08_SC_B_payld,
    S08_SC_B_recv,
    S08_SC_B_req,
    S08_SC_B_send,
    S08_SC_R_info,
    S08_SC_R_payld,
    S08_SC_R_recv,
    S08_SC_R_req,
    S08_SC_R_send,
    S09_SC_B_info,
    S09_SC_B_payld,
    S09_SC_B_recv,
    S09_SC_B_req,
    S09_SC_B_send,
    S09_SC_R_info,
    S09_SC_R_payld,
    S09_SC_R_recv,
    S09_SC_R_req,
    S09_SC_R_send,
    S10_SC_B_info,
    S10_SC_B_payld,
    S10_SC_B_recv,
    S10_SC_B_req,
    S10_SC_B_send,
    S10_SC_R_info,
    S10_SC_R_payld,
    S10_SC_R_recv,
    S10_SC_R_req,
    S10_SC_R_send,
    S11_SC_B_info,
    S11_SC_B_payld,
    S11_SC_B_recv,
    S11_SC_B_req,
    S11_SC_B_send,
    S11_SC_R_info,
    S11_SC_R_payld,
    S11_SC_R_recv,
    S11_SC_R_req,
    S11_SC_R_send,
    S12_SC_B_info,
    S12_SC_B_payld,
    S12_SC_B_recv,
    S12_SC_B_req,
    S12_SC_B_send,
    S12_SC_R_info,
    S12_SC_R_payld,
    S12_SC_R_recv,
    S12_SC_R_req,
    S12_SC_R_send,
    S13_SC_B_info,
    S13_SC_B_payld,
    S13_SC_B_recv,
    S13_SC_B_req,
    S13_SC_B_send,
    S13_SC_R_info,
    S13_SC_R_payld,
    S13_SC_R_recv,
    S13_SC_R_req,
    S13_SC_R_send,
    S14_SC_B_info,
    S14_SC_B_payld,
    S14_SC_B_recv,
    S14_SC_B_req,
    S14_SC_B_send,
    S14_SC_R_info,
    S14_SC_R_payld,
    S14_SC_R_recv,
    S14_SC_R_req,
    S14_SC_R_send,
    S15_SC_B_info,
    S15_SC_B_payld,
    S15_SC_B_recv,
    S15_SC_B_req,
    S15_SC_B_send,
    S15_SC_R_info,
    S15_SC_R_payld,
    S15_SC_R_recv,
    S15_SC_R_req,
    S15_SC_R_send,
    S16_SC_B_info,
    S16_SC_B_payld,
    S16_SC_B_recv,
    S16_SC_B_req,
    S16_SC_B_send,
    S16_SC_R_info,
    S16_SC_R_payld,
    S16_SC_R_recv,
    S16_SC_R_req,
    S16_SC_R_send,
    S17_SC_B_info,
    S17_SC_B_payld,
    S17_SC_B_recv,
    S17_SC_B_req,
    S17_SC_B_send,
    S17_SC_R_info,
    S17_SC_R_payld,
    S17_SC_R_recv,
    S17_SC_R_req,
    S17_SC_R_send,
    S18_SC_B_info,
    S18_SC_B_payld,
    S18_SC_B_recv,
    S18_SC_B_req,
    S18_SC_B_send,
    S18_SC_R_info,
    S18_SC_R_payld,
    S18_SC_R_recv,
    S18_SC_R_req,
    S18_SC_R_send,
    S19_SC_B_info,
    S19_SC_B_payld,
    S19_SC_B_recv,
    S19_SC_B_req,
    S19_SC_B_send,
    S19_SC_R_info,
    S19_SC_R_payld,
    S19_SC_R_recv,
    S19_SC_R_req,
    S19_SC_R_send,
    S20_SC_B_info,
    S20_SC_B_payld,
    S20_SC_B_recv,
    S20_SC_B_req,
    S20_SC_B_send,
    S20_SC_R_info,
    S20_SC_R_payld,
    S20_SC_R_recv,
    S20_SC_R_req,
    S20_SC_R_send,
    S21_SC_B_info,
    S21_SC_B_payld,
    S21_SC_B_recv,
    S21_SC_B_req,
    S21_SC_B_send,
    S21_SC_R_info,
    S21_SC_R_payld,
    S21_SC_R_recv,
    S21_SC_R_req,
    S21_SC_R_send,
    S22_SC_B_info,
    S22_SC_B_payld,
    S22_SC_B_recv,
    S22_SC_B_req,
    S22_SC_B_send,
    S22_SC_R_info,
    S22_SC_R_payld,
    S22_SC_R_recv,
    S22_SC_R_req,
    S22_SC_R_send,
    S23_SC_B_info,
    S23_SC_B_payld,
    S23_SC_B_recv,
    S23_SC_B_req,
    S23_SC_B_send,
    S23_SC_R_info,
    S23_SC_R_payld,
    S23_SC_R_recv,
    S23_SC_R_req,
    S23_SC_R_send,
    S24_SC_B_info,
    S24_SC_B_payld,
    S24_SC_B_recv,
    S24_SC_B_req,
    S24_SC_B_send,
    S24_SC_R_info,
    S24_SC_R_payld,
    S24_SC_R_recv,
    S24_SC_R_req,
    S24_SC_R_send,
    S25_SC_B_info,
    S25_SC_B_payld,
    S25_SC_B_recv,
    S25_SC_B_req,
    S25_SC_B_send,
    S25_SC_R_info,
    S25_SC_R_payld,
    S25_SC_R_recv,
    S25_SC_R_req,
    S25_SC_R_send,
    S26_SC_B_info,
    S26_SC_B_payld,
    S26_SC_B_recv,
    S26_SC_B_req,
    S26_SC_B_send,
    S26_SC_R_info,
    S26_SC_R_payld,
    S26_SC_R_recv,
    S26_SC_R_req,
    S26_SC_R_send,
    S27_SC_B_info,
    S27_SC_B_payld,
    S27_SC_B_recv,
    S27_SC_B_req,
    S27_SC_B_send,
    S27_SC_R_info,
    S27_SC_R_payld,
    S27_SC_R_recv,
    S27_SC_R_req,
    S27_SC_R_send,
    S28_SC_B_info,
    S28_SC_B_payld,
    S28_SC_B_recv,
    S28_SC_B_req,
    S28_SC_B_send,
    S28_SC_R_info,
    S28_SC_R_payld,
    S28_SC_R_recv,
    S28_SC_R_req,
    S28_SC_R_send,
    S29_SC_B_info,
    S29_SC_B_payld,
    S29_SC_B_recv,
    S29_SC_B_req,
    S29_SC_B_send,
    S29_SC_R_info,
    S29_SC_R_payld,
    S29_SC_R_recv,
    S29_SC_R_req,
    S29_SC_R_send,
    S30_SC_B_info,
    S30_SC_B_payld,
    S30_SC_B_recv,
    S30_SC_B_req,
    S30_SC_B_send,
    S30_SC_R_info,
    S30_SC_R_payld,
    S30_SC_R_recv,
    S30_SC_R_req,
    S30_SC_R_send,
    S31_SC_B_info,
    S31_SC_B_payld,
    S31_SC_B_recv,
    S31_SC_B_req,
    S31_SC_B_send,
    S31_SC_R_info,
    S31_SC_R_payld,
    S31_SC_R_recv,
    S31_SC_R_req,
    S31_SC_R_send,
    S32_SC_B_info,
    S32_SC_B_payld,
    S32_SC_B_recv,
    S32_SC_B_req,
    S32_SC_B_send,
    S32_SC_R_info,
    S32_SC_R_payld,
    S32_SC_R_recv,
    S32_SC_R_req,
    S32_SC_R_send,
    S33_SC_B_info,
    S33_SC_B_payld,
    S33_SC_B_recv,
    S33_SC_B_req,
    S33_SC_B_send,
    S33_SC_R_info,
    S33_SC_R_payld,
    S33_SC_R_recv,
    S33_SC_R_req,
    S33_SC_R_send,
    S34_SC_B_info,
    S34_SC_B_payld,
    S34_SC_B_recv,
    S34_SC_B_req,
    S34_SC_B_send,
    S34_SC_R_info,
    S34_SC_R_payld,
    S34_SC_R_recv,
    S34_SC_R_req,
    S34_SC_R_send,
    S35_SC_B_info,
    S35_SC_B_payld,
    S35_SC_B_recv,
    S35_SC_B_req,
    S35_SC_B_send,
    S35_SC_R_info,
    S35_SC_R_payld,
    S35_SC_R_recv,
    S35_SC_R_req,
    S35_SC_R_send,
    S36_SC_B_info,
    S36_SC_B_payld,
    S36_SC_B_recv,
    S36_SC_B_req,
    S36_SC_B_send,
    S36_SC_R_info,
    S36_SC_R_payld,
    S36_SC_R_recv,
    S36_SC_R_req,
    S36_SC_R_send,
    S37_SC_B_info,
    S37_SC_B_payld,
    S37_SC_B_recv,
    S37_SC_B_req,
    S37_SC_B_send,
    S37_SC_R_info,
    S37_SC_R_payld,
    S37_SC_R_recv,
    S37_SC_R_req,
    S37_SC_R_send,
    S38_SC_B_info,
    S38_SC_B_payld,
    S38_SC_B_recv,
    S38_SC_B_req,
    S38_SC_B_send,
    S38_SC_R_info,
    S38_SC_R_payld,
    S38_SC_R_recv,
    S38_SC_R_req,
    S38_SC_R_send,
    S39_SC_B_info,
    S39_SC_B_payld,
    S39_SC_B_recv,
    S39_SC_B_req,
    S39_SC_B_send,
    S39_SC_R_info,
    S39_SC_R_payld,
    S39_SC_R_recv,
    S39_SC_R_req,
    S39_SC_R_send,
    S40_SC_B_info,
    S40_SC_B_payld,
    S40_SC_B_recv,
    S40_SC_B_req,
    S40_SC_B_send,
    S40_SC_R_info,
    S40_SC_R_payld,
    S40_SC_R_recv,
    S40_SC_R_req,
    S40_SC_R_send,
    S41_SC_B_info,
    S41_SC_B_payld,
    S41_SC_B_recv,
    S41_SC_B_req,
    S41_SC_B_send,
    S41_SC_R_info,
    S41_SC_R_payld,
    S41_SC_R_recv,
    S41_SC_R_req,
    S41_SC_R_send,
    S42_SC_B_info,
    S42_SC_B_payld,
    S42_SC_B_recv,
    S42_SC_B_req,
    S42_SC_B_send,
    S42_SC_R_info,
    S42_SC_R_payld,
    S42_SC_R_recv,
    S42_SC_R_req,
    S42_SC_R_send,
    S43_SC_B_info,
    S43_SC_B_payld,
    S43_SC_B_recv,
    S43_SC_B_req,
    S43_SC_B_send,
    S43_SC_R_info,
    S43_SC_R_payld,
    S43_SC_R_recv,
    S43_SC_R_req,
    S43_SC_R_send,
    S44_SC_B_info,
    S44_SC_B_payld,
    S44_SC_B_recv,
    S44_SC_B_req,
    S44_SC_B_send,
    S44_SC_R_info,
    S44_SC_R_payld,
    S44_SC_R_recv,
    S44_SC_R_req,
    S44_SC_R_send,
    S45_SC_B_info,
    S45_SC_B_payld,
    S45_SC_B_recv,
    S45_SC_B_req,
    S45_SC_B_send,
    S45_SC_R_info,
    S45_SC_R_payld,
    S45_SC_R_recv,
    S45_SC_R_req,
    S45_SC_R_send,
    S46_SC_B_info,
    S46_SC_B_payld,
    S46_SC_B_recv,
    S46_SC_B_req,
    S46_SC_B_send,
    S46_SC_R_info,
    S46_SC_R_payld,
    S46_SC_R_recv,
    S46_SC_R_req,
    S46_SC_R_send,
    S47_SC_B_info,
    S47_SC_B_payld,
    S47_SC_B_recv,
    S47_SC_B_req,
    S47_SC_B_send,
    S47_SC_R_info,
    S47_SC_R_payld,
    S47_SC_R_recv,
    S47_SC_R_req,
    S47_SC_R_send,
    S48_SC_B_info,
    S48_SC_B_payld,
    S48_SC_B_recv,
    S48_SC_B_req,
    S48_SC_B_send,
    S48_SC_R_info,
    S48_SC_R_payld,
    S48_SC_R_recv,
    S48_SC_R_req,
    S48_SC_R_send,
    S49_SC_B_info,
    S49_SC_B_payld,
    S49_SC_B_recv,
    S49_SC_B_req,
    S49_SC_B_send,
    S49_SC_R_info,
    S49_SC_R_payld,
    S49_SC_R_recv,
    S49_SC_R_req,
    S49_SC_R_send,
    S50_SC_B_info,
    S50_SC_B_payld,
    S50_SC_B_recv,
    S50_SC_B_req,
    S50_SC_B_send,
    S50_SC_R_info,
    S50_SC_R_payld,
    S50_SC_R_recv,
    S50_SC_R_req,
    S50_SC_R_send,
    m_sc_aclk,
    m_sc_aresetn,
    s_sc_aclk,
    s_sc_aresetn);
  output [0:0]M00_SC_AR_info;
  output [181:0]M00_SC_AR_payld;
  input [0:0]M00_SC_AR_recv;
  output [0:0]M00_SC_AR_req;
  output [0:0]M00_SC_AR_send;
  output [0:0]M00_SC_AW_info;
  output [181:0]M00_SC_AW_payld;
  input [0:0]M00_SC_AW_recv;
  output [0:0]M00_SC_AW_req;
  output [0:0]M00_SC_AW_send;
  output [7:0]M00_SC_B_info;
  output [8:0]M00_SC_B_payld;
  input [7:0]M00_SC_B_recv;
  output [7:0]M00_SC_B_req;
  output [7:0]M00_SC_B_send;
  output [7:0]M00_SC_R_info;
  output [54:0]M00_SC_R_payld;
  input [7:0]M00_SC_R_recv;
  output [7:0]M00_SC_R_req;
  output [7:0]M00_SC_R_send;
  output [0:0]M00_SC_W_info;
  output [68:0]M00_SC_W_payld;
  input [0:0]M00_SC_W_recv;
  output [0:0]M00_SC_W_req;
  output [0:0]M00_SC_W_send;
  output [0:0]M01_SC_AR_info;
  output [181:0]M01_SC_AR_payld;
  input [0:0]M01_SC_AR_recv;
  output [0:0]M01_SC_AR_req;
  output [0:0]M01_SC_AR_send;
  output [0:0]M01_SC_AW_info;
  output [181:0]M01_SC_AW_payld;
  input [0:0]M01_SC_AW_recv;
  output [0:0]M01_SC_AW_req;
  output [0:0]M01_SC_AW_send;
  output [0:0]M01_SC_W_info;
  output [68:0]M01_SC_W_payld;
  input [0:0]M01_SC_W_recv;
  output [0:0]M01_SC_W_req;
  output [0:0]M01_SC_W_send;
  output [0:0]M02_SC_AR_info;
  output [181:0]M02_SC_AR_payld;
  input [0:0]M02_SC_AR_recv;
  output [0:0]M02_SC_AR_req;
  output [0:0]M02_SC_AR_send;
  output [0:0]M02_SC_AW_info;
  output [181:0]M02_SC_AW_payld;
  input [0:0]M02_SC_AW_recv;
  output [0:0]M02_SC_AW_req;
  output [0:0]M02_SC_AW_send;
  output [0:0]M02_SC_W_info;
  output [68:0]M02_SC_W_payld;
  input [0:0]M02_SC_W_recv;
  output [0:0]M02_SC_W_req;
  output [0:0]M02_SC_W_send;
  output [0:0]M03_SC_AR_info;
  output [181:0]M03_SC_AR_payld;
  input [0:0]M03_SC_AR_recv;
  output [0:0]M03_SC_AR_req;
  output [0:0]M03_SC_AR_send;
  output [0:0]M03_SC_AW_info;
  output [181:0]M03_SC_AW_payld;
  input [0:0]M03_SC_AW_recv;
  output [0:0]M03_SC_AW_req;
  output [0:0]M03_SC_AW_send;
  output [0:0]M03_SC_W_info;
  output [68:0]M03_SC_W_payld;
  input [0:0]M03_SC_W_recv;
  output [0:0]M03_SC_W_req;
  output [0:0]M03_SC_W_send;
  output [0:0]M04_SC_AR_info;
  output [181:0]M04_SC_AR_payld;
  input [0:0]M04_SC_AR_recv;
  output [0:0]M04_SC_AR_req;
  output [0:0]M04_SC_AR_send;
  output [0:0]M04_SC_AW_info;
  output [181:0]M04_SC_AW_payld;
  input [0:0]M04_SC_AW_recv;
  output [0:0]M04_SC_AW_req;
  output [0:0]M04_SC_AW_send;
  output [0:0]M04_SC_W_info;
  output [68:0]M04_SC_W_payld;
  input [0:0]M04_SC_W_recv;
  output [0:0]M04_SC_W_req;
  output [0:0]M04_SC_W_send;
  output [0:0]M05_SC_AR_info;
  output [181:0]M05_SC_AR_payld;
  input [0:0]M05_SC_AR_recv;
  output [0:0]M05_SC_AR_req;
  output [0:0]M05_SC_AR_send;
  output [0:0]M05_SC_AW_info;
  output [181:0]M05_SC_AW_payld;
  input [0:0]M05_SC_AW_recv;
  output [0:0]M05_SC_AW_req;
  output [0:0]M05_SC_AW_send;
  output [0:0]M05_SC_W_info;
  output [68:0]M05_SC_W_payld;
  input [0:0]M05_SC_W_recv;
  output [0:0]M05_SC_W_req;
  output [0:0]M05_SC_W_send;
  output [0:0]M06_SC_AR_info;
  output [181:0]M06_SC_AR_payld;
  input [0:0]M06_SC_AR_recv;
  output [0:0]M06_SC_AR_req;
  output [0:0]M06_SC_AR_send;
  output [0:0]M06_SC_AW_info;
  output [181:0]M06_SC_AW_payld;
  input [0:0]M06_SC_AW_recv;
  output [0:0]M06_SC_AW_req;
  output [0:0]M06_SC_AW_send;
  output [0:0]M06_SC_W_info;
  output [68:0]M06_SC_W_payld;
  input [0:0]M06_SC_W_recv;
  output [0:0]M06_SC_W_req;
  output [0:0]M06_SC_W_send;
  output [0:0]M07_SC_AR_info;
  output [181:0]M07_SC_AR_payld;
  input [0:0]M07_SC_AR_recv;
  output [0:0]M07_SC_AR_req;
  output [0:0]M07_SC_AR_send;
  output [0:0]M07_SC_AW_info;
  output [181:0]M07_SC_AW_payld;
  input [0:0]M07_SC_AW_recv;
  output [0:0]M07_SC_AW_req;
  output [0:0]M07_SC_AW_send;
  output [0:0]M07_SC_W_info;
  output [68:0]M07_SC_W_payld;
  input [0:0]M07_SC_W_recv;
  output [0:0]M07_SC_W_req;
  output [0:0]M07_SC_W_send;
  output [0:0]M08_SC_AR_info;
  output [181:0]M08_SC_AR_payld;
  input [0:0]M08_SC_AR_recv;
  output [0:0]M08_SC_AR_req;
  output [0:0]M08_SC_AR_send;
  output [0:0]M08_SC_AW_info;
  output [181:0]M08_SC_AW_payld;
  input [0:0]M08_SC_AW_recv;
  output [0:0]M08_SC_AW_req;
  output [0:0]M08_SC_AW_send;
  output [0:0]M08_SC_W_info;
  output [68:0]M08_SC_W_payld;
  input [0:0]M08_SC_W_recv;
  output [0:0]M08_SC_W_req;
  output [0:0]M08_SC_W_send;
  output [0:0]M09_SC_AR_info;
  output [181:0]M09_SC_AR_payld;
  input [0:0]M09_SC_AR_recv;
  output [0:0]M09_SC_AR_req;
  output [0:0]M09_SC_AR_send;
  output [0:0]M09_SC_AW_info;
  output [181:0]M09_SC_AW_payld;
  input [0:0]M09_SC_AW_recv;
  output [0:0]M09_SC_AW_req;
  output [0:0]M09_SC_AW_send;
  output [0:0]M09_SC_W_info;
  output [68:0]M09_SC_W_payld;
  input [0:0]M09_SC_W_recv;
  output [0:0]M09_SC_W_req;
  output [0:0]M09_SC_W_send;
  output [0:0]M10_SC_AR_info;
  output [181:0]M10_SC_AR_payld;
  input [0:0]M10_SC_AR_recv;
  output [0:0]M10_SC_AR_req;
  output [0:0]M10_SC_AR_send;
  output [0:0]M10_SC_AW_info;
  output [181:0]M10_SC_AW_payld;
  input [0:0]M10_SC_AW_recv;
  output [0:0]M10_SC_AW_req;
  output [0:0]M10_SC_AW_send;
  output [0:0]M10_SC_W_info;
  output [68:0]M10_SC_W_payld;
  input [0:0]M10_SC_W_recv;
  output [0:0]M10_SC_W_req;
  output [0:0]M10_SC_W_send;
  output [0:0]M11_SC_AR_info;
  output [181:0]M11_SC_AR_payld;
  input [0:0]M11_SC_AR_recv;
  output [0:0]M11_SC_AR_req;
  output [0:0]M11_SC_AR_send;
  output [0:0]M11_SC_AW_info;
  output [181:0]M11_SC_AW_payld;
  input [0:0]M11_SC_AW_recv;
  output [0:0]M11_SC_AW_req;
  output [0:0]M11_SC_AW_send;
  output [0:0]M11_SC_W_info;
  output [68:0]M11_SC_W_payld;
  input [0:0]M11_SC_W_recv;
  output [0:0]M11_SC_W_req;
  output [0:0]M11_SC_W_send;
  output [0:0]M12_SC_AR_info;
  output [181:0]M12_SC_AR_payld;
  input [0:0]M12_SC_AR_recv;
  output [0:0]M12_SC_AR_req;
  output [0:0]M12_SC_AR_send;
  output [0:0]M12_SC_AW_info;
  output [181:0]M12_SC_AW_payld;
  input [0:0]M12_SC_AW_recv;
  output [0:0]M12_SC_AW_req;
  output [0:0]M12_SC_AW_send;
  output [0:0]M12_SC_W_info;
  output [68:0]M12_SC_W_payld;
  input [0:0]M12_SC_W_recv;
  output [0:0]M12_SC_W_req;
  output [0:0]M12_SC_W_send;
  output [0:0]M13_SC_AR_info;
  output [181:0]M13_SC_AR_payld;
  input [0:0]M13_SC_AR_recv;
  output [0:0]M13_SC_AR_req;
  output [0:0]M13_SC_AR_send;
  output [0:0]M13_SC_AW_info;
  output [181:0]M13_SC_AW_payld;
  input [0:0]M13_SC_AW_recv;
  output [0:0]M13_SC_AW_req;
  output [0:0]M13_SC_AW_send;
  output [0:0]M13_SC_W_info;
  output [68:0]M13_SC_W_payld;
  input [0:0]M13_SC_W_recv;
  output [0:0]M13_SC_W_req;
  output [0:0]M13_SC_W_send;
  output [0:0]M14_SC_AR_info;
  output [181:0]M14_SC_AR_payld;
  input [0:0]M14_SC_AR_recv;
  output [0:0]M14_SC_AR_req;
  output [0:0]M14_SC_AR_send;
  output [0:0]M14_SC_AW_info;
  output [181:0]M14_SC_AW_payld;
  input [0:0]M14_SC_AW_recv;
  output [0:0]M14_SC_AW_req;
  output [0:0]M14_SC_AW_send;
  output [0:0]M14_SC_W_info;
  output [68:0]M14_SC_W_payld;
  input [0:0]M14_SC_W_recv;
  output [0:0]M14_SC_W_req;
  output [0:0]M14_SC_W_send;
  output [0:0]M15_SC_AR_info;
  output [181:0]M15_SC_AR_payld;
  input [0:0]M15_SC_AR_recv;
  output [0:0]M15_SC_AR_req;
  output [0:0]M15_SC_AR_send;
  output [0:0]M15_SC_AW_info;
  output [181:0]M15_SC_AW_payld;
  input [0:0]M15_SC_AW_recv;
  output [0:0]M15_SC_AW_req;
  output [0:0]M15_SC_AW_send;
  output [0:0]M15_SC_W_info;
  output [68:0]M15_SC_W_payld;
  input [0:0]M15_SC_W_recv;
  output [0:0]M15_SC_W_req;
  output [0:0]M15_SC_W_send;
  output [0:0]M16_SC_AR_info;
  output [181:0]M16_SC_AR_payld;
  input [0:0]M16_SC_AR_recv;
  output [0:0]M16_SC_AR_req;
  output [0:0]M16_SC_AR_send;
  output [0:0]M16_SC_AW_info;
  output [181:0]M16_SC_AW_payld;
  input [0:0]M16_SC_AW_recv;
  output [0:0]M16_SC_AW_req;
  output [0:0]M16_SC_AW_send;
  output [0:0]M16_SC_W_info;
  output [68:0]M16_SC_W_payld;
  input [0:0]M16_SC_W_recv;
  output [0:0]M16_SC_W_req;
  output [0:0]M16_SC_W_send;
  output [0:0]M17_SC_AR_info;
  output [181:0]M17_SC_AR_payld;
  input [0:0]M17_SC_AR_recv;
  output [0:0]M17_SC_AR_req;
  output [0:0]M17_SC_AR_send;
  output [0:0]M17_SC_AW_info;
  output [181:0]M17_SC_AW_payld;
  input [0:0]M17_SC_AW_recv;
  output [0:0]M17_SC_AW_req;
  output [0:0]M17_SC_AW_send;
  output [0:0]M17_SC_W_info;
  output [68:0]M17_SC_W_payld;
  input [0:0]M17_SC_W_recv;
  output [0:0]M17_SC_W_req;
  output [0:0]M17_SC_W_send;
  output [0:0]M18_SC_AR_info;
  output [181:0]M18_SC_AR_payld;
  input [0:0]M18_SC_AR_recv;
  output [0:0]M18_SC_AR_req;
  output [0:0]M18_SC_AR_send;
  output [0:0]M18_SC_AW_info;
  output [181:0]M18_SC_AW_payld;
  input [0:0]M18_SC_AW_recv;
  output [0:0]M18_SC_AW_req;
  output [0:0]M18_SC_AW_send;
  output [0:0]M18_SC_W_info;
  output [68:0]M18_SC_W_payld;
  input [0:0]M18_SC_W_recv;
  output [0:0]M18_SC_W_req;
  output [0:0]M18_SC_W_send;
  output [0:0]M19_SC_AR_info;
  output [181:0]M19_SC_AR_payld;
  input [0:0]M19_SC_AR_recv;
  output [0:0]M19_SC_AR_req;
  output [0:0]M19_SC_AR_send;
  output [0:0]M19_SC_AW_info;
  output [181:0]M19_SC_AW_payld;
  input [0:0]M19_SC_AW_recv;
  output [0:0]M19_SC_AW_req;
  output [0:0]M19_SC_AW_send;
  output [0:0]M19_SC_W_info;
  output [68:0]M19_SC_W_payld;
  input [0:0]M19_SC_W_recv;
  output [0:0]M19_SC_W_req;
  output [0:0]M19_SC_W_send;
  output [0:0]M20_SC_AR_info;
  output [181:0]M20_SC_AR_payld;
  input [0:0]M20_SC_AR_recv;
  output [0:0]M20_SC_AR_req;
  output [0:0]M20_SC_AR_send;
  output [0:0]M20_SC_AW_info;
  output [181:0]M20_SC_AW_payld;
  input [0:0]M20_SC_AW_recv;
  output [0:0]M20_SC_AW_req;
  output [0:0]M20_SC_AW_send;
  output [0:0]M20_SC_W_info;
  output [68:0]M20_SC_W_payld;
  input [0:0]M20_SC_W_recv;
  output [0:0]M20_SC_W_req;
  output [0:0]M20_SC_W_send;
  output [0:0]M21_SC_AR_info;
  output [181:0]M21_SC_AR_payld;
  input [0:0]M21_SC_AR_recv;
  output [0:0]M21_SC_AR_req;
  output [0:0]M21_SC_AR_send;
  output [0:0]M21_SC_AW_info;
  output [181:0]M21_SC_AW_payld;
  input [0:0]M21_SC_AW_recv;
  output [0:0]M21_SC_AW_req;
  output [0:0]M21_SC_AW_send;
  output [0:0]M21_SC_W_info;
  output [68:0]M21_SC_W_payld;
  input [0:0]M21_SC_W_recv;
  output [0:0]M21_SC_W_req;
  output [0:0]M21_SC_W_send;
  output [0:0]M22_SC_AR_info;
  output [181:0]M22_SC_AR_payld;
  input [0:0]M22_SC_AR_recv;
  output [0:0]M22_SC_AR_req;
  output [0:0]M22_SC_AR_send;
  output [0:0]M22_SC_AW_info;
  output [181:0]M22_SC_AW_payld;
  input [0:0]M22_SC_AW_recv;
  output [0:0]M22_SC_AW_req;
  output [0:0]M22_SC_AW_send;
  output [0:0]M22_SC_W_info;
  output [68:0]M22_SC_W_payld;
  input [0:0]M22_SC_W_recv;
  output [0:0]M22_SC_W_req;
  output [0:0]M22_SC_W_send;
  output [0:0]M23_SC_AR_info;
  output [181:0]M23_SC_AR_payld;
  input [0:0]M23_SC_AR_recv;
  output [0:0]M23_SC_AR_req;
  output [0:0]M23_SC_AR_send;
  output [0:0]M23_SC_AW_info;
  output [181:0]M23_SC_AW_payld;
  input [0:0]M23_SC_AW_recv;
  output [0:0]M23_SC_AW_req;
  output [0:0]M23_SC_AW_send;
  output [0:0]M23_SC_W_info;
  output [68:0]M23_SC_W_payld;
  input [0:0]M23_SC_W_recv;
  output [0:0]M23_SC_W_req;
  output [0:0]M23_SC_W_send;
  output [0:0]M24_SC_AR_info;
  output [181:0]M24_SC_AR_payld;
  input [0:0]M24_SC_AR_recv;
  output [0:0]M24_SC_AR_req;
  output [0:0]M24_SC_AR_send;
  output [0:0]M24_SC_AW_info;
  output [181:0]M24_SC_AW_payld;
  input [0:0]M24_SC_AW_recv;
  output [0:0]M24_SC_AW_req;
  output [0:0]M24_SC_AW_send;
  output [0:0]M24_SC_W_info;
  output [68:0]M24_SC_W_payld;
  input [0:0]M24_SC_W_recv;
  output [0:0]M24_SC_W_req;
  output [0:0]M24_SC_W_send;
  output [0:0]M25_SC_AR_info;
  output [181:0]M25_SC_AR_payld;
  input [0:0]M25_SC_AR_recv;
  output [0:0]M25_SC_AR_req;
  output [0:0]M25_SC_AR_send;
  output [0:0]M25_SC_AW_info;
  output [181:0]M25_SC_AW_payld;
  input [0:0]M25_SC_AW_recv;
  output [0:0]M25_SC_AW_req;
  output [0:0]M25_SC_AW_send;
  output [0:0]M25_SC_W_info;
  output [68:0]M25_SC_W_payld;
  input [0:0]M25_SC_W_recv;
  output [0:0]M25_SC_W_req;
  output [0:0]M25_SC_W_send;
  output [0:0]M26_SC_AR_info;
  output [181:0]M26_SC_AR_payld;
  input [0:0]M26_SC_AR_recv;
  output [0:0]M26_SC_AR_req;
  output [0:0]M26_SC_AR_send;
  output [0:0]M26_SC_AW_info;
  output [181:0]M26_SC_AW_payld;
  input [0:0]M26_SC_AW_recv;
  output [0:0]M26_SC_AW_req;
  output [0:0]M26_SC_AW_send;
  output [0:0]M26_SC_W_info;
  output [68:0]M26_SC_W_payld;
  input [0:0]M26_SC_W_recv;
  output [0:0]M26_SC_W_req;
  output [0:0]M26_SC_W_send;
  output [0:0]M27_SC_AR_info;
  output [181:0]M27_SC_AR_payld;
  input [0:0]M27_SC_AR_recv;
  output [0:0]M27_SC_AR_req;
  output [0:0]M27_SC_AR_send;
  output [0:0]M27_SC_AW_info;
  output [181:0]M27_SC_AW_payld;
  input [0:0]M27_SC_AW_recv;
  output [0:0]M27_SC_AW_req;
  output [0:0]M27_SC_AW_send;
  output [0:0]M27_SC_W_info;
  output [68:0]M27_SC_W_payld;
  input [0:0]M27_SC_W_recv;
  output [0:0]M27_SC_W_req;
  output [0:0]M27_SC_W_send;
  output [0:0]M28_SC_AR_info;
  output [181:0]M28_SC_AR_payld;
  input [0:0]M28_SC_AR_recv;
  output [0:0]M28_SC_AR_req;
  output [0:0]M28_SC_AR_send;
  output [0:0]M28_SC_AW_info;
  output [181:0]M28_SC_AW_payld;
  input [0:0]M28_SC_AW_recv;
  output [0:0]M28_SC_AW_req;
  output [0:0]M28_SC_AW_send;
  output [0:0]M28_SC_W_info;
  output [68:0]M28_SC_W_payld;
  input [0:0]M28_SC_W_recv;
  output [0:0]M28_SC_W_req;
  output [0:0]M28_SC_W_send;
  output [0:0]M29_SC_AR_info;
  output [181:0]M29_SC_AR_payld;
  input [0:0]M29_SC_AR_recv;
  output [0:0]M29_SC_AR_req;
  output [0:0]M29_SC_AR_send;
  output [0:0]M29_SC_AW_info;
  output [181:0]M29_SC_AW_payld;
  input [0:0]M29_SC_AW_recv;
  output [0:0]M29_SC_AW_req;
  output [0:0]M29_SC_AW_send;
  output [0:0]M29_SC_W_info;
  output [68:0]M29_SC_W_payld;
  input [0:0]M29_SC_W_recv;
  output [0:0]M29_SC_W_req;
  output [0:0]M29_SC_W_send;
  output [0:0]M30_SC_AR_info;
  output [181:0]M30_SC_AR_payld;
  input [0:0]M30_SC_AR_recv;
  output [0:0]M30_SC_AR_req;
  output [0:0]M30_SC_AR_send;
  output [0:0]M30_SC_AW_info;
  output [181:0]M30_SC_AW_payld;
  input [0:0]M30_SC_AW_recv;
  output [0:0]M30_SC_AW_req;
  output [0:0]M30_SC_AW_send;
  output [0:0]M30_SC_W_info;
  output [68:0]M30_SC_W_payld;
  input [0:0]M30_SC_W_recv;
  output [0:0]M30_SC_W_req;
  output [0:0]M30_SC_W_send;
  output [0:0]M31_SC_AR_info;
  output [181:0]M31_SC_AR_payld;
  input [0:0]M31_SC_AR_recv;
  output [0:0]M31_SC_AR_req;
  output [0:0]M31_SC_AR_send;
  output [0:0]M31_SC_AW_info;
  output [181:0]M31_SC_AW_payld;
  input [0:0]M31_SC_AW_recv;
  output [0:0]M31_SC_AW_req;
  output [0:0]M31_SC_AW_send;
  output [0:0]M31_SC_W_info;
  output [68:0]M31_SC_W_payld;
  input [0:0]M31_SC_W_recv;
  output [0:0]M31_SC_W_req;
  output [0:0]M31_SC_W_send;
  output [0:0]M32_SC_AR_info;
  output [181:0]M32_SC_AR_payld;
  input [0:0]M32_SC_AR_recv;
  output [0:0]M32_SC_AR_req;
  output [0:0]M32_SC_AR_send;
  output [0:0]M32_SC_AW_info;
  output [181:0]M32_SC_AW_payld;
  input [0:0]M32_SC_AW_recv;
  output [0:0]M32_SC_AW_req;
  output [0:0]M32_SC_AW_send;
  output [0:0]M32_SC_W_info;
  output [68:0]M32_SC_W_payld;
  input [0:0]M32_SC_W_recv;
  output [0:0]M32_SC_W_req;
  output [0:0]M32_SC_W_send;
  output [0:0]M33_SC_AR_info;
  output [181:0]M33_SC_AR_payld;
  input [0:0]M33_SC_AR_recv;
  output [0:0]M33_SC_AR_req;
  output [0:0]M33_SC_AR_send;
  output [0:0]M33_SC_AW_info;
  output [181:0]M33_SC_AW_payld;
  input [0:0]M33_SC_AW_recv;
  output [0:0]M33_SC_AW_req;
  output [0:0]M33_SC_AW_send;
  output [0:0]M33_SC_W_info;
  output [68:0]M33_SC_W_payld;
  input [0:0]M33_SC_W_recv;
  output [0:0]M33_SC_W_req;
  output [0:0]M33_SC_W_send;
  output [0:0]M34_SC_AR_info;
  output [181:0]M34_SC_AR_payld;
  input [0:0]M34_SC_AR_recv;
  output [0:0]M34_SC_AR_req;
  output [0:0]M34_SC_AR_send;
  output [0:0]M34_SC_AW_info;
  output [181:0]M34_SC_AW_payld;
  input [0:0]M34_SC_AW_recv;
  output [0:0]M34_SC_AW_req;
  output [0:0]M34_SC_AW_send;
  output [0:0]M34_SC_W_info;
  output [68:0]M34_SC_W_payld;
  input [0:0]M34_SC_W_recv;
  output [0:0]M34_SC_W_req;
  output [0:0]M34_SC_W_send;
  output [0:0]M35_SC_AR_info;
  output [181:0]M35_SC_AR_payld;
  input [0:0]M35_SC_AR_recv;
  output [0:0]M35_SC_AR_req;
  output [0:0]M35_SC_AR_send;
  output [0:0]M35_SC_AW_info;
  output [181:0]M35_SC_AW_payld;
  input [0:0]M35_SC_AW_recv;
  output [0:0]M35_SC_AW_req;
  output [0:0]M35_SC_AW_send;
  output [0:0]M35_SC_W_info;
  output [68:0]M35_SC_W_payld;
  input [0:0]M35_SC_W_recv;
  output [0:0]M35_SC_W_req;
  output [0:0]M35_SC_W_send;
  output [0:0]M36_SC_AR_info;
  output [181:0]M36_SC_AR_payld;
  input [0:0]M36_SC_AR_recv;
  output [0:0]M36_SC_AR_req;
  output [0:0]M36_SC_AR_send;
  output [0:0]M36_SC_AW_info;
  output [181:0]M36_SC_AW_payld;
  input [0:0]M36_SC_AW_recv;
  output [0:0]M36_SC_AW_req;
  output [0:0]M36_SC_AW_send;
  output [0:0]M36_SC_W_info;
  output [68:0]M36_SC_W_payld;
  input [0:0]M36_SC_W_recv;
  output [0:0]M36_SC_W_req;
  output [0:0]M36_SC_W_send;
  output [0:0]M37_SC_AR_info;
  output [181:0]M37_SC_AR_payld;
  input [0:0]M37_SC_AR_recv;
  output [0:0]M37_SC_AR_req;
  output [0:0]M37_SC_AR_send;
  output [0:0]M37_SC_AW_info;
  output [181:0]M37_SC_AW_payld;
  input [0:0]M37_SC_AW_recv;
  output [0:0]M37_SC_AW_req;
  output [0:0]M37_SC_AW_send;
  output [0:0]M37_SC_W_info;
  output [68:0]M37_SC_W_payld;
  input [0:0]M37_SC_W_recv;
  output [0:0]M37_SC_W_req;
  output [0:0]M37_SC_W_send;
  output [0:0]M38_SC_AR_info;
  output [181:0]M38_SC_AR_payld;
  input [0:0]M38_SC_AR_recv;
  output [0:0]M38_SC_AR_req;
  output [0:0]M38_SC_AR_send;
  output [0:0]M38_SC_AW_info;
  output [181:0]M38_SC_AW_payld;
  input [0:0]M38_SC_AW_recv;
  output [0:0]M38_SC_AW_req;
  output [0:0]M38_SC_AW_send;
  output [0:0]M38_SC_W_info;
  output [68:0]M38_SC_W_payld;
  input [0:0]M38_SC_W_recv;
  output [0:0]M38_SC_W_req;
  output [0:0]M38_SC_W_send;
  output [0:0]M39_SC_AR_info;
  output [181:0]M39_SC_AR_payld;
  input [0:0]M39_SC_AR_recv;
  output [0:0]M39_SC_AR_req;
  output [0:0]M39_SC_AR_send;
  output [0:0]M39_SC_AW_info;
  output [181:0]M39_SC_AW_payld;
  input [0:0]M39_SC_AW_recv;
  output [0:0]M39_SC_AW_req;
  output [0:0]M39_SC_AW_send;
  output [0:0]M39_SC_W_info;
  output [68:0]M39_SC_W_payld;
  input [0:0]M39_SC_W_recv;
  output [0:0]M39_SC_W_req;
  output [0:0]M39_SC_W_send;
  output [0:0]M40_SC_AR_info;
  output [181:0]M40_SC_AR_payld;
  input [0:0]M40_SC_AR_recv;
  output [0:0]M40_SC_AR_req;
  output [0:0]M40_SC_AR_send;
  output [0:0]M40_SC_AW_info;
  output [181:0]M40_SC_AW_payld;
  input [0:0]M40_SC_AW_recv;
  output [0:0]M40_SC_AW_req;
  output [0:0]M40_SC_AW_send;
  output [0:0]M40_SC_W_info;
  output [68:0]M40_SC_W_payld;
  input [0:0]M40_SC_W_recv;
  output [0:0]M40_SC_W_req;
  output [0:0]M40_SC_W_send;
  output [0:0]M41_SC_AR_info;
  output [181:0]M41_SC_AR_payld;
  input [0:0]M41_SC_AR_recv;
  output [0:0]M41_SC_AR_req;
  output [0:0]M41_SC_AR_send;
  output [0:0]M41_SC_AW_info;
  output [181:0]M41_SC_AW_payld;
  input [0:0]M41_SC_AW_recv;
  output [0:0]M41_SC_AW_req;
  output [0:0]M41_SC_AW_send;
  output [0:0]M41_SC_W_info;
  output [68:0]M41_SC_W_payld;
  input [0:0]M41_SC_W_recv;
  output [0:0]M41_SC_W_req;
  output [0:0]M41_SC_W_send;
  output [0:0]M42_SC_AR_info;
  output [181:0]M42_SC_AR_payld;
  input [0:0]M42_SC_AR_recv;
  output [0:0]M42_SC_AR_req;
  output [0:0]M42_SC_AR_send;
  output [0:0]M42_SC_AW_info;
  output [181:0]M42_SC_AW_payld;
  input [0:0]M42_SC_AW_recv;
  output [0:0]M42_SC_AW_req;
  output [0:0]M42_SC_AW_send;
  output [0:0]M42_SC_W_info;
  output [68:0]M42_SC_W_payld;
  input [0:0]M42_SC_W_recv;
  output [0:0]M42_SC_W_req;
  output [0:0]M42_SC_W_send;
  output [0:0]M43_SC_AR_info;
  output [181:0]M43_SC_AR_payld;
  input [0:0]M43_SC_AR_recv;
  output [0:0]M43_SC_AR_req;
  output [0:0]M43_SC_AR_send;
  output [0:0]M43_SC_AW_info;
  output [181:0]M43_SC_AW_payld;
  input [0:0]M43_SC_AW_recv;
  output [0:0]M43_SC_AW_req;
  output [0:0]M43_SC_AW_send;
  output [0:0]M43_SC_W_info;
  output [68:0]M43_SC_W_payld;
  input [0:0]M43_SC_W_recv;
  output [0:0]M43_SC_W_req;
  output [0:0]M43_SC_W_send;
  output [0:0]M44_SC_AR_info;
  output [181:0]M44_SC_AR_payld;
  input [0:0]M44_SC_AR_recv;
  output [0:0]M44_SC_AR_req;
  output [0:0]M44_SC_AR_send;
  output [0:0]M44_SC_AW_info;
  output [181:0]M44_SC_AW_payld;
  input [0:0]M44_SC_AW_recv;
  output [0:0]M44_SC_AW_req;
  output [0:0]M44_SC_AW_send;
  output [0:0]M44_SC_W_info;
  output [68:0]M44_SC_W_payld;
  input [0:0]M44_SC_W_recv;
  output [0:0]M44_SC_W_req;
  output [0:0]M44_SC_W_send;
  output [0:0]M45_SC_AR_info;
  output [181:0]M45_SC_AR_payld;
  input [0:0]M45_SC_AR_recv;
  output [0:0]M45_SC_AR_req;
  output [0:0]M45_SC_AR_send;
  output [0:0]M45_SC_AW_info;
  output [181:0]M45_SC_AW_payld;
  input [0:0]M45_SC_AW_recv;
  output [0:0]M45_SC_AW_req;
  output [0:0]M45_SC_AW_send;
  output [0:0]M45_SC_W_info;
  output [68:0]M45_SC_W_payld;
  input [0:0]M45_SC_W_recv;
  output [0:0]M45_SC_W_req;
  output [0:0]M45_SC_W_send;
  output [0:0]M46_SC_AR_info;
  output [181:0]M46_SC_AR_payld;
  input [0:0]M46_SC_AR_recv;
  output [0:0]M46_SC_AR_req;
  output [0:0]M46_SC_AR_send;
  output [0:0]M46_SC_AW_info;
  output [181:0]M46_SC_AW_payld;
  input [0:0]M46_SC_AW_recv;
  output [0:0]M46_SC_AW_req;
  output [0:0]M46_SC_AW_send;
  output [0:0]M46_SC_W_info;
  output [68:0]M46_SC_W_payld;
  input [0:0]M46_SC_W_recv;
  output [0:0]M46_SC_W_req;
  output [0:0]M46_SC_W_send;
  output [0:0]M47_SC_AR_info;
  output [181:0]M47_SC_AR_payld;
  input [0:0]M47_SC_AR_recv;
  output [0:0]M47_SC_AR_req;
  output [0:0]M47_SC_AR_send;
  output [0:0]M47_SC_AW_info;
  output [181:0]M47_SC_AW_payld;
  input [0:0]M47_SC_AW_recv;
  output [0:0]M47_SC_AW_req;
  output [0:0]M47_SC_AW_send;
  output [0:0]M47_SC_W_info;
  output [68:0]M47_SC_W_payld;
  input [0:0]M47_SC_W_recv;
  output [0:0]M47_SC_W_req;
  output [0:0]M47_SC_W_send;
  output [0:0]M48_SC_AR_info;
  output [181:0]M48_SC_AR_payld;
  input [0:0]M48_SC_AR_recv;
  output [0:0]M48_SC_AR_req;
  output [0:0]M48_SC_AR_send;
  output [0:0]M48_SC_AW_info;
  output [181:0]M48_SC_AW_payld;
  input [0:0]M48_SC_AW_recv;
  output [0:0]M48_SC_AW_req;
  output [0:0]M48_SC_AW_send;
  output [0:0]M48_SC_W_info;
  output [68:0]M48_SC_W_payld;
  input [0:0]M48_SC_W_recv;
  output [0:0]M48_SC_W_req;
  output [0:0]M48_SC_W_send;
  output [0:0]M49_SC_AR_info;
  output [181:0]M49_SC_AR_payld;
  input [0:0]M49_SC_AR_recv;
  output [0:0]M49_SC_AR_req;
  output [0:0]M49_SC_AR_send;
  output [0:0]M49_SC_AW_info;
  output [181:0]M49_SC_AW_payld;
  input [0:0]M49_SC_AW_recv;
  output [0:0]M49_SC_AW_req;
  output [0:0]M49_SC_AW_send;
  output [0:0]M49_SC_W_info;
  output [68:0]M49_SC_W_payld;
  input [0:0]M49_SC_W_recv;
  output [0:0]M49_SC_W_req;
  output [0:0]M49_SC_W_send;
  output [0:0]M50_SC_AR_info;
  output [181:0]M50_SC_AR_payld;
  input [0:0]M50_SC_AR_recv;
  output [0:0]M50_SC_AR_req;
  output [0:0]M50_SC_AR_send;
  output [0:0]M50_SC_AW_info;
  output [181:0]M50_SC_AW_payld;
  input [0:0]M50_SC_AW_recv;
  output [0:0]M50_SC_AW_req;
  output [0:0]M50_SC_AW_send;
  output [0:0]M50_SC_W_info;
  output [68:0]M50_SC_W_payld;
  input [0:0]M50_SC_W_recv;
  output [0:0]M50_SC_W_req;
  output [0:0]M50_SC_W_send;
  input [7:0]S00_SC_AR_info;
  input [181:0]S00_SC_AR_payld;
  output [7:0]S00_SC_AR_recv;
  input [7:0]S00_SC_AR_req;
  input [7:0]S00_SC_AR_send;
  input [7:0]S00_SC_AW_info;
  input [181:0]S00_SC_AW_payld;
  output [7:0]S00_SC_AW_recv;
  input [7:0]S00_SC_AW_req;
  input [7:0]S00_SC_AW_send;
  input [0:0]S00_SC_B_info;
  input [8:0]S00_SC_B_payld;
  output [0:0]S00_SC_B_recv;
  input [0:0]S00_SC_B_req;
  input [0:0]S00_SC_B_send;
  input [0:0]S00_SC_R_info;
  input [54:0]S00_SC_R_payld;
  output [0:0]S00_SC_R_recv;
  input [0:0]S00_SC_R_req;
  input [0:0]S00_SC_R_send;
  input [7:0]S00_SC_W_info;
  input [68:0]S00_SC_W_payld;
  output [7:0]S00_SC_W_recv;
  input [7:0]S00_SC_W_req;
  input [7:0]S00_SC_W_send;
  input [0:0]S01_SC_B_info;
  input [8:0]S01_SC_B_payld;
  output [0:0]S01_SC_B_recv;
  input [0:0]S01_SC_B_req;
  input [0:0]S01_SC_B_send;
  input [0:0]S01_SC_R_info;
  input [54:0]S01_SC_R_payld;
  output [0:0]S01_SC_R_recv;
  input [0:0]S01_SC_R_req;
  input [0:0]S01_SC_R_send;
  input [0:0]S02_SC_B_info;
  input [8:0]S02_SC_B_payld;
  output [0:0]S02_SC_B_recv;
  input [0:0]S02_SC_B_req;
  input [0:0]S02_SC_B_send;
  input [0:0]S02_SC_R_info;
  input [54:0]S02_SC_R_payld;
  output [0:0]S02_SC_R_recv;
  input [0:0]S02_SC_R_req;
  input [0:0]S02_SC_R_send;
  input [0:0]S03_SC_B_info;
  input [8:0]S03_SC_B_payld;
  output [0:0]S03_SC_B_recv;
  input [0:0]S03_SC_B_req;
  input [0:0]S03_SC_B_send;
  input [0:0]S03_SC_R_info;
  input [54:0]S03_SC_R_payld;
  output [0:0]S03_SC_R_recv;
  input [0:0]S03_SC_R_req;
  input [0:0]S03_SC_R_send;
  input [0:0]S04_SC_B_info;
  input [8:0]S04_SC_B_payld;
  output [0:0]S04_SC_B_recv;
  input [0:0]S04_SC_B_req;
  input [0:0]S04_SC_B_send;
  input [0:0]S04_SC_R_info;
  input [54:0]S04_SC_R_payld;
  output [0:0]S04_SC_R_recv;
  input [0:0]S04_SC_R_req;
  input [0:0]S04_SC_R_send;
  input [0:0]S05_SC_B_info;
  input [8:0]S05_SC_B_payld;
  output [0:0]S05_SC_B_recv;
  input [0:0]S05_SC_B_req;
  input [0:0]S05_SC_B_send;
  input [0:0]S05_SC_R_info;
  input [54:0]S05_SC_R_payld;
  output [0:0]S05_SC_R_recv;
  input [0:0]S05_SC_R_req;
  input [0:0]S05_SC_R_send;
  input [0:0]S06_SC_B_info;
  input [8:0]S06_SC_B_payld;
  output [0:0]S06_SC_B_recv;
  input [0:0]S06_SC_B_req;
  input [0:0]S06_SC_B_send;
  input [0:0]S06_SC_R_info;
  input [54:0]S06_SC_R_payld;
  output [0:0]S06_SC_R_recv;
  input [0:0]S06_SC_R_req;
  input [0:0]S06_SC_R_send;
  input [0:0]S07_SC_B_info;
  input [8:0]S07_SC_B_payld;
  output [0:0]S07_SC_B_recv;
  input [0:0]S07_SC_B_req;
  input [0:0]S07_SC_B_send;
  input [0:0]S07_SC_R_info;
  input [54:0]S07_SC_R_payld;
  output [0:0]S07_SC_R_recv;
  input [0:0]S07_SC_R_req;
  input [0:0]S07_SC_R_send;
  input [0:0]S08_SC_B_info;
  input [8:0]S08_SC_B_payld;
  output [0:0]S08_SC_B_recv;
  input [0:0]S08_SC_B_req;
  input [0:0]S08_SC_B_send;
  input [0:0]S08_SC_R_info;
  input [54:0]S08_SC_R_payld;
  output [0:0]S08_SC_R_recv;
  input [0:0]S08_SC_R_req;
  input [0:0]S08_SC_R_send;
  input [0:0]S09_SC_B_info;
  input [8:0]S09_SC_B_payld;
  output [0:0]S09_SC_B_recv;
  input [0:0]S09_SC_B_req;
  input [0:0]S09_SC_B_send;
  input [0:0]S09_SC_R_info;
  input [54:0]S09_SC_R_payld;
  output [0:0]S09_SC_R_recv;
  input [0:0]S09_SC_R_req;
  input [0:0]S09_SC_R_send;
  input [0:0]S10_SC_B_info;
  input [8:0]S10_SC_B_payld;
  output [0:0]S10_SC_B_recv;
  input [0:0]S10_SC_B_req;
  input [0:0]S10_SC_B_send;
  input [0:0]S10_SC_R_info;
  input [54:0]S10_SC_R_payld;
  output [0:0]S10_SC_R_recv;
  input [0:0]S10_SC_R_req;
  input [0:0]S10_SC_R_send;
  input [0:0]S11_SC_B_info;
  input [8:0]S11_SC_B_payld;
  output [0:0]S11_SC_B_recv;
  input [0:0]S11_SC_B_req;
  input [0:0]S11_SC_B_send;
  input [0:0]S11_SC_R_info;
  input [54:0]S11_SC_R_payld;
  output [0:0]S11_SC_R_recv;
  input [0:0]S11_SC_R_req;
  input [0:0]S11_SC_R_send;
  input [0:0]S12_SC_B_info;
  input [8:0]S12_SC_B_payld;
  output [0:0]S12_SC_B_recv;
  input [0:0]S12_SC_B_req;
  input [0:0]S12_SC_B_send;
  input [0:0]S12_SC_R_info;
  input [54:0]S12_SC_R_payld;
  output [0:0]S12_SC_R_recv;
  input [0:0]S12_SC_R_req;
  input [0:0]S12_SC_R_send;
  input [0:0]S13_SC_B_info;
  input [8:0]S13_SC_B_payld;
  output [0:0]S13_SC_B_recv;
  input [0:0]S13_SC_B_req;
  input [0:0]S13_SC_B_send;
  input [0:0]S13_SC_R_info;
  input [54:0]S13_SC_R_payld;
  output [0:0]S13_SC_R_recv;
  input [0:0]S13_SC_R_req;
  input [0:0]S13_SC_R_send;
  input [0:0]S14_SC_B_info;
  input [8:0]S14_SC_B_payld;
  output [0:0]S14_SC_B_recv;
  input [0:0]S14_SC_B_req;
  input [0:0]S14_SC_B_send;
  input [0:0]S14_SC_R_info;
  input [54:0]S14_SC_R_payld;
  output [0:0]S14_SC_R_recv;
  input [0:0]S14_SC_R_req;
  input [0:0]S14_SC_R_send;
  input [0:0]S15_SC_B_info;
  input [8:0]S15_SC_B_payld;
  output [0:0]S15_SC_B_recv;
  input [0:0]S15_SC_B_req;
  input [0:0]S15_SC_B_send;
  input [0:0]S15_SC_R_info;
  input [54:0]S15_SC_R_payld;
  output [0:0]S15_SC_R_recv;
  input [0:0]S15_SC_R_req;
  input [0:0]S15_SC_R_send;
  input [0:0]S16_SC_B_info;
  input [8:0]S16_SC_B_payld;
  output [0:0]S16_SC_B_recv;
  input [0:0]S16_SC_B_req;
  input [0:0]S16_SC_B_send;
  input [0:0]S16_SC_R_info;
  input [54:0]S16_SC_R_payld;
  output [0:0]S16_SC_R_recv;
  input [0:0]S16_SC_R_req;
  input [0:0]S16_SC_R_send;
  input [0:0]S17_SC_B_info;
  input [8:0]S17_SC_B_payld;
  output [0:0]S17_SC_B_recv;
  input [0:0]S17_SC_B_req;
  input [0:0]S17_SC_B_send;
  input [0:0]S17_SC_R_info;
  input [54:0]S17_SC_R_payld;
  output [0:0]S17_SC_R_recv;
  input [0:0]S17_SC_R_req;
  input [0:0]S17_SC_R_send;
  input [0:0]S18_SC_B_info;
  input [8:0]S18_SC_B_payld;
  output [0:0]S18_SC_B_recv;
  input [0:0]S18_SC_B_req;
  input [0:0]S18_SC_B_send;
  input [0:0]S18_SC_R_info;
  input [54:0]S18_SC_R_payld;
  output [0:0]S18_SC_R_recv;
  input [0:0]S18_SC_R_req;
  input [0:0]S18_SC_R_send;
  input [0:0]S19_SC_B_info;
  input [8:0]S19_SC_B_payld;
  output [0:0]S19_SC_B_recv;
  input [0:0]S19_SC_B_req;
  input [0:0]S19_SC_B_send;
  input [0:0]S19_SC_R_info;
  input [54:0]S19_SC_R_payld;
  output [0:0]S19_SC_R_recv;
  input [0:0]S19_SC_R_req;
  input [0:0]S19_SC_R_send;
  input [0:0]S20_SC_B_info;
  input [8:0]S20_SC_B_payld;
  output [0:0]S20_SC_B_recv;
  input [0:0]S20_SC_B_req;
  input [0:0]S20_SC_B_send;
  input [0:0]S20_SC_R_info;
  input [54:0]S20_SC_R_payld;
  output [0:0]S20_SC_R_recv;
  input [0:0]S20_SC_R_req;
  input [0:0]S20_SC_R_send;
  input [0:0]S21_SC_B_info;
  input [8:0]S21_SC_B_payld;
  output [0:0]S21_SC_B_recv;
  input [0:0]S21_SC_B_req;
  input [0:0]S21_SC_B_send;
  input [0:0]S21_SC_R_info;
  input [54:0]S21_SC_R_payld;
  output [0:0]S21_SC_R_recv;
  input [0:0]S21_SC_R_req;
  input [0:0]S21_SC_R_send;
  input [0:0]S22_SC_B_info;
  input [8:0]S22_SC_B_payld;
  output [0:0]S22_SC_B_recv;
  input [0:0]S22_SC_B_req;
  input [0:0]S22_SC_B_send;
  input [0:0]S22_SC_R_info;
  input [54:0]S22_SC_R_payld;
  output [0:0]S22_SC_R_recv;
  input [0:0]S22_SC_R_req;
  input [0:0]S22_SC_R_send;
  input [0:0]S23_SC_B_info;
  input [8:0]S23_SC_B_payld;
  output [0:0]S23_SC_B_recv;
  input [0:0]S23_SC_B_req;
  input [0:0]S23_SC_B_send;
  input [0:0]S23_SC_R_info;
  input [54:0]S23_SC_R_payld;
  output [0:0]S23_SC_R_recv;
  input [0:0]S23_SC_R_req;
  input [0:0]S23_SC_R_send;
  input [0:0]S24_SC_B_info;
  input [8:0]S24_SC_B_payld;
  output [0:0]S24_SC_B_recv;
  input [0:0]S24_SC_B_req;
  input [0:0]S24_SC_B_send;
  input [0:0]S24_SC_R_info;
  input [54:0]S24_SC_R_payld;
  output [0:0]S24_SC_R_recv;
  input [0:0]S24_SC_R_req;
  input [0:0]S24_SC_R_send;
  input [0:0]S25_SC_B_info;
  input [8:0]S25_SC_B_payld;
  output [0:0]S25_SC_B_recv;
  input [0:0]S25_SC_B_req;
  input [0:0]S25_SC_B_send;
  input [0:0]S25_SC_R_info;
  input [54:0]S25_SC_R_payld;
  output [0:0]S25_SC_R_recv;
  input [0:0]S25_SC_R_req;
  input [0:0]S25_SC_R_send;
  input [0:0]S26_SC_B_info;
  input [8:0]S26_SC_B_payld;
  output [0:0]S26_SC_B_recv;
  input [0:0]S26_SC_B_req;
  input [0:0]S26_SC_B_send;
  input [0:0]S26_SC_R_info;
  input [54:0]S26_SC_R_payld;
  output [0:0]S26_SC_R_recv;
  input [0:0]S26_SC_R_req;
  input [0:0]S26_SC_R_send;
  input [0:0]S27_SC_B_info;
  input [8:0]S27_SC_B_payld;
  output [0:0]S27_SC_B_recv;
  input [0:0]S27_SC_B_req;
  input [0:0]S27_SC_B_send;
  input [0:0]S27_SC_R_info;
  input [54:0]S27_SC_R_payld;
  output [0:0]S27_SC_R_recv;
  input [0:0]S27_SC_R_req;
  input [0:0]S27_SC_R_send;
  input [0:0]S28_SC_B_info;
  input [8:0]S28_SC_B_payld;
  output [0:0]S28_SC_B_recv;
  input [0:0]S28_SC_B_req;
  input [0:0]S28_SC_B_send;
  input [0:0]S28_SC_R_info;
  input [54:0]S28_SC_R_payld;
  output [0:0]S28_SC_R_recv;
  input [0:0]S28_SC_R_req;
  input [0:0]S28_SC_R_send;
  input [0:0]S29_SC_B_info;
  input [8:0]S29_SC_B_payld;
  output [0:0]S29_SC_B_recv;
  input [0:0]S29_SC_B_req;
  input [0:0]S29_SC_B_send;
  input [0:0]S29_SC_R_info;
  input [54:0]S29_SC_R_payld;
  output [0:0]S29_SC_R_recv;
  input [0:0]S29_SC_R_req;
  input [0:0]S29_SC_R_send;
  input [0:0]S30_SC_B_info;
  input [8:0]S30_SC_B_payld;
  output [0:0]S30_SC_B_recv;
  input [0:0]S30_SC_B_req;
  input [0:0]S30_SC_B_send;
  input [0:0]S30_SC_R_info;
  input [54:0]S30_SC_R_payld;
  output [0:0]S30_SC_R_recv;
  input [0:0]S30_SC_R_req;
  input [0:0]S30_SC_R_send;
  input [0:0]S31_SC_B_info;
  input [8:0]S31_SC_B_payld;
  output [0:0]S31_SC_B_recv;
  input [0:0]S31_SC_B_req;
  input [0:0]S31_SC_B_send;
  input [0:0]S31_SC_R_info;
  input [54:0]S31_SC_R_payld;
  output [0:0]S31_SC_R_recv;
  input [0:0]S31_SC_R_req;
  input [0:0]S31_SC_R_send;
  input [0:0]S32_SC_B_info;
  input [8:0]S32_SC_B_payld;
  output [0:0]S32_SC_B_recv;
  input [0:0]S32_SC_B_req;
  input [0:0]S32_SC_B_send;
  input [0:0]S32_SC_R_info;
  input [54:0]S32_SC_R_payld;
  output [0:0]S32_SC_R_recv;
  input [0:0]S32_SC_R_req;
  input [0:0]S32_SC_R_send;
  input [0:0]S33_SC_B_info;
  input [8:0]S33_SC_B_payld;
  output [0:0]S33_SC_B_recv;
  input [0:0]S33_SC_B_req;
  input [0:0]S33_SC_B_send;
  input [0:0]S33_SC_R_info;
  input [54:0]S33_SC_R_payld;
  output [0:0]S33_SC_R_recv;
  input [0:0]S33_SC_R_req;
  input [0:0]S33_SC_R_send;
  input [0:0]S34_SC_B_info;
  input [8:0]S34_SC_B_payld;
  output [0:0]S34_SC_B_recv;
  input [0:0]S34_SC_B_req;
  input [0:0]S34_SC_B_send;
  input [0:0]S34_SC_R_info;
  input [54:0]S34_SC_R_payld;
  output [0:0]S34_SC_R_recv;
  input [0:0]S34_SC_R_req;
  input [0:0]S34_SC_R_send;
  input [0:0]S35_SC_B_info;
  input [8:0]S35_SC_B_payld;
  output [0:0]S35_SC_B_recv;
  input [0:0]S35_SC_B_req;
  input [0:0]S35_SC_B_send;
  input [0:0]S35_SC_R_info;
  input [54:0]S35_SC_R_payld;
  output [0:0]S35_SC_R_recv;
  input [0:0]S35_SC_R_req;
  input [0:0]S35_SC_R_send;
  input [0:0]S36_SC_B_info;
  input [8:0]S36_SC_B_payld;
  output [0:0]S36_SC_B_recv;
  input [0:0]S36_SC_B_req;
  input [0:0]S36_SC_B_send;
  input [0:0]S36_SC_R_info;
  input [54:0]S36_SC_R_payld;
  output [0:0]S36_SC_R_recv;
  input [0:0]S36_SC_R_req;
  input [0:0]S36_SC_R_send;
  input [0:0]S37_SC_B_info;
  input [8:0]S37_SC_B_payld;
  output [0:0]S37_SC_B_recv;
  input [0:0]S37_SC_B_req;
  input [0:0]S37_SC_B_send;
  input [0:0]S37_SC_R_info;
  input [54:0]S37_SC_R_payld;
  output [0:0]S37_SC_R_recv;
  input [0:0]S37_SC_R_req;
  input [0:0]S37_SC_R_send;
  input [0:0]S38_SC_B_info;
  input [8:0]S38_SC_B_payld;
  output [0:0]S38_SC_B_recv;
  input [0:0]S38_SC_B_req;
  input [0:0]S38_SC_B_send;
  input [0:0]S38_SC_R_info;
  input [54:0]S38_SC_R_payld;
  output [0:0]S38_SC_R_recv;
  input [0:0]S38_SC_R_req;
  input [0:0]S38_SC_R_send;
  input [0:0]S39_SC_B_info;
  input [8:0]S39_SC_B_payld;
  output [0:0]S39_SC_B_recv;
  input [0:0]S39_SC_B_req;
  input [0:0]S39_SC_B_send;
  input [0:0]S39_SC_R_info;
  input [54:0]S39_SC_R_payld;
  output [0:0]S39_SC_R_recv;
  input [0:0]S39_SC_R_req;
  input [0:0]S39_SC_R_send;
  input [0:0]S40_SC_B_info;
  input [8:0]S40_SC_B_payld;
  output [0:0]S40_SC_B_recv;
  input [0:0]S40_SC_B_req;
  input [0:0]S40_SC_B_send;
  input [0:0]S40_SC_R_info;
  input [54:0]S40_SC_R_payld;
  output [0:0]S40_SC_R_recv;
  input [0:0]S40_SC_R_req;
  input [0:0]S40_SC_R_send;
  input [0:0]S41_SC_B_info;
  input [8:0]S41_SC_B_payld;
  output [0:0]S41_SC_B_recv;
  input [0:0]S41_SC_B_req;
  input [0:0]S41_SC_B_send;
  input [0:0]S41_SC_R_info;
  input [54:0]S41_SC_R_payld;
  output [0:0]S41_SC_R_recv;
  input [0:0]S41_SC_R_req;
  input [0:0]S41_SC_R_send;
  input [0:0]S42_SC_B_info;
  input [8:0]S42_SC_B_payld;
  output [0:0]S42_SC_B_recv;
  input [0:0]S42_SC_B_req;
  input [0:0]S42_SC_B_send;
  input [0:0]S42_SC_R_info;
  input [54:0]S42_SC_R_payld;
  output [0:0]S42_SC_R_recv;
  input [0:0]S42_SC_R_req;
  input [0:0]S42_SC_R_send;
  input [0:0]S43_SC_B_info;
  input [8:0]S43_SC_B_payld;
  output [0:0]S43_SC_B_recv;
  input [0:0]S43_SC_B_req;
  input [0:0]S43_SC_B_send;
  input [0:0]S43_SC_R_info;
  input [54:0]S43_SC_R_payld;
  output [0:0]S43_SC_R_recv;
  input [0:0]S43_SC_R_req;
  input [0:0]S43_SC_R_send;
  input [0:0]S44_SC_B_info;
  input [8:0]S44_SC_B_payld;
  output [0:0]S44_SC_B_recv;
  input [0:0]S44_SC_B_req;
  input [0:0]S44_SC_B_send;
  input [0:0]S44_SC_R_info;
  input [54:0]S44_SC_R_payld;
  output [0:0]S44_SC_R_recv;
  input [0:0]S44_SC_R_req;
  input [0:0]S44_SC_R_send;
  input [0:0]S45_SC_B_info;
  input [8:0]S45_SC_B_payld;
  output [0:0]S45_SC_B_recv;
  input [0:0]S45_SC_B_req;
  input [0:0]S45_SC_B_send;
  input [0:0]S45_SC_R_info;
  input [54:0]S45_SC_R_payld;
  output [0:0]S45_SC_R_recv;
  input [0:0]S45_SC_R_req;
  input [0:0]S45_SC_R_send;
  input [0:0]S46_SC_B_info;
  input [8:0]S46_SC_B_payld;
  output [0:0]S46_SC_B_recv;
  input [0:0]S46_SC_B_req;
  input [0:0]S46_SC_B_send;
  input [0:0]S46_SC_R_info;
  input [54:0]S46_SC_R_payld;
  output [0:0]S46_SC_R_recv;
  input [0:0]S46_SC_R_req;
  input [0:0]S46_SC_R_send;
  input [0:0]S47_SC_B_info;
  input [8:0]S47_SC_B_payld;
  output [0:0]S47_SC_B_recv;
  input [0:0]S47_SC_B_req;
  input [0:0]S47_SC_B_send;
  input [0:0]S47_SC_R_info;
  input [54:0]S47_SC_R_payld;
  output [0:0]S47_SC_R_recv;
  input [0:0]S47_SC_R_req;
  input [0:0]S47_SC_R_send;
  input [0:0]S48_SC_B_info;
  input [8:0]S48_SC_B_payld;
  output [0:0]S48_SC_B_recv;
  input [0:0]S48_SC_B_req;
  input [0:0]S48_SC_B_send;
  input [0:0]S48_SC_R_info;
  input [54:0]S48_SC_R_payld;
  output [0:0]S48_SC_R_recv;
  input [0:0]S48_SC_R_req;
  input [0:0]S48_SC_R_send;
  input [0:0]S49_SC_B_info;
  input [8:0]S49_SC_B_payld;
  output [0:0]S49_SC_B_recv;
  input [0:0]S49_SC_B_req;
  input [0:0]S49_SC_B_send;
  input [0:0]S49_SC_R_info;
  input [54:0]S49_SC_R_payld;
  output [0:0]S49_SC_R_recv;
  input [0:0]S49_SC_R_req;
  input [0:0]S49_SC_R_send;
  input [0:0]S50_SC_B_info;
  input [8:0]S50_SC_B_payld;
  output [0:0]S50_SC_B_recv;
  input [0:0]S50_SC_B_req;
  input [0:0]S50_SC_B_send;
  input [0:0]S50_SC_R_info;
  input [54:0]S50_SC_R_payld;
  output [0:0]S50_SC_R_recv;
  input [0:0]S50_SC_R_req;
  input [0:0]S50_SC_R_send;
  input m_sc_aclk;
  input m_sc_aresetn;
  input s_sc_aclk;
  input s_sc_aresetn;

  wire [7:0]S00_SC_AR_1_INFO;
  wire [181:0]S00_SC_AR_1_PAYLD;
  wire [7:0]S00_SC_AR_1_RECV;
  wire [7:0]S00_SC_AR_1_REQ;
  wire [7:0]S00_SC_AR_1_SEND;
  wire [6:0]S00_SC_AR_2_INFO;
  wire [181:0]S00_SC_AR_2_PAYLD;
  wire [6:0]S00_SC_AR_2_RECV;
  wire [6:0]S00_SC_AR_2_REQ;
  wire [6:0]S00_SC_AR_2_SEND;
  wire [6:0]S00_SC_AR_3_INFO;
  wire [181:0]S00_SC_AR_3_PAYLD;
  wire [6:0]S00_SC_AR_3_RECV;
  wire [6:0]S00_SC_AR_3_REQ;
  wire [6:0]S00_SC_AR_3_SEND;
  wire [6:0]S00_SC_AR_4_INFO;
  wire [181:0]S00_SC_AR_4_PAYLD;
  wire [6:0]S00_SC_AR_4_RECV;
  wire [6:0]S00_SC_AR_4_REQ;
  wire [6:0]S00_SC_AR_4_SEND;
  wire [5:0]S00_SC_AR_5_INFO;
  wire [181:0]S00_SC_AR_5_PAYLD;
  wire [5:0]S00_SC_AR_5_RECV;
  wire [5:0]S00_SC_AR_5_REQ;
  wire [5:0]S00_SC_AR_5_SEND;
  wire [5:0]S00_SC_AR_6_INFO;
  wire [181:0]S00_SC_AR_6_PAYLD;
  wire [5:0]S00_SC_AR_6_RECV;
  wire [5:0]S00_SC_AR_6_REQ;
  wire [5:0]S00_SC_AR_6_SEND;
  wire [5:0]S00_SC_AR_7_INFO;
  wire [181:0]S00_SC_AR_7_PAYLD;
  wire [5:0]S00_SC_AR_7_RECV;
  wire [5:0]S00_SC_AR_7_REQ;
  wire [5:0]S00_SC_AR_7_SEND;
  wire [5:0]S00_SC_AR_8_INFO;
  wire [181:0]S00_SC_AR_8_PAYLD;
  wire [5:0]S00_SC_AR_8_RECV;
  wire [5:0]S00_SC_AR_8_REQ;
  wire [5:0]S00_SC_AR_8_SEND;
  wire [5:0]S00_SC_AR_9_INFO;
  wire [181:0]S00_SC_AR_9_PAYLD;
  wire [5:0]S00_SC_AR_9_RECV;
  wire [5:0]S00_SC_AR_9_REQ;
  wire [5:0]S00_SC_AR_9_SEND;
  wire [7:0]S00_SC_AW_1_INFO;
  wire [181:0]S00_SC_AW_1_PAYLD;
  wire [7:0]S00_SC_AW_1_RECV;
  wire [7:0]S00_SC_AW_1_REQ;
  wire [7:0]S00_SC_AW_1_SEND;
  wire [6:0]S00_SC_AW_2_INFO;
  wire [181:0]S00_SC_AW_2_PAYLD;
  wire [6:0]S00_SC_AW_2_RECV;
  wire [6:0]S00_SC_AW_2_REQ;
  wire [6:0]S00_SC_AW_2_SEND;
  wire [6:0]S00_SC_AW_3_INFO;
  wire [181:0]S00_SC_AW_3_PAYLD;
  wire [6:0]S00_SC_AW_3_RECV;
  wire [6:0]S00_SC_AW_3_REQ;
  wire [6:0]S00_SC_AW_3_SEND;
  wire [6:0]S00_SC_AW_4_INFO;
  wire [181:0]S00_SC_AW_4_PAYLD;
  wire [6:0]S00_SC_AW_4_RECV;
  wire [6:0]S00_SC_AW_4_REQ;
  wire [6:0]S00_SC_AW_4_SEND;
  wire [5:0]S00_SC_AW_5_INFO;
  wire [181:0]S00_SC_AW_5_PAYLD;
  wire [5:0]S00_SC_AW_5_RECV;
  wire [5:0]S00_SC_AW_5_REQ;
  wire [5:0]S00_SC_AW_5_SEND;
  wire [5:0]S00_SC_AW_6_INFO;
  wire [181:0]S00_SC_AW_6_PAYLD;
  wire [5:0]S00_SC_AW_6_RECV;
  wire [5:0]S00_SC_AW_6_REQ;
  wire [5:0]S00_SC_AW_6_SEND;
  wire [5:0]S00_SC_AW_7_INFO;
  wire [181:0]S00_SC_AW_7_PAYLD;
  wire [5:0]S00_SC_AW_7_RECV;
  wire [5:0]S00_SC_AW_7_REQ;
  wire [5:0]S00_SC_AW_7_SEND;
  wire [5:0]S00_SC_AW_8_INFO;
  wire [181:0]S00_SC_AW_8_PAYLD;
  wire [5:0]S00_SC_AW_8_RECV;
  wire [5:0]S00_SC_AW_8_REQ;
  wire [5:0]S00_SC_AW_8_SEND;
  wire [5:0]S00_SC_AW_9_INFO;
  wire [181:0]S00_SC_AW_9_PAYLD;
  wire [5:0]S00_SC_AW_9_RECV;
  wire [5:0]S00_SC_AW_9_REQ;
  wire [5:0]S00_SC_AW_9_SEND;
  wire [0:0]S00_SC_B_1_INFO;
  wire [8:0]S00_SC_B_1_PAYLD;
  wire [0:0]S00_SC_B_1_RECV;
  wire [0:0]S00_SC_B_1_REQ;
  wire [0:0]S00_SC_B_1_SEND;
  wire [0:0]S00_SC_R_1_INFO;
  wire [54:0]S00_SC_R_1_PAYLD;
  wire [0:0]S00_SC_R_1_RECV;
  wire [0:0]S00_SC_R_1_REQ;
  wire [0:0]S00_SC_R_1_SEND;
  wire [7:0]S00_SC_W_1_INFO;
  wire [68:0]S00_SC_W_1_PAYLD;
  wire [7:0]S00_SC_W_1_RECV;
  wire [7:0]S00_SC_W_1_REQ;
  wire [7:0]S00_SC_W_1_SEND;
  wire [6:0]S00_SC_W_2_INFO;
  wire [68:0]S00_SC_W_2_PAYLD;
  wire [6:0]S00_SC_W_2_RECV;
  wire [6:0]S00_SC_W_2_REQ;
  wire [6:0]S00_SC_W_2_SEND;
  wire [6:0]S00_SC_W_3_INFO;
  wire [68:0]S00_SC_W_3_PAYLD;
  wire [6:0]S00_SC_W_3_RECV;
  wire [6:0]S00_SC_W_3_REQ;
  wire [6:0]S00_SC_W_3_SEND;
  wire [6:0]S00_SC_W_4_INFO;
  wire [68:0]S00_SC_W_4_PAYLD;
  wire [6:0]S00_SC_W_4_RECV;
  wire [6:0]S00_SC_W_4_REQ;
  wire [6:0]S00_SC_W_4_SEND;
  wire [5:0]S00_SC_W_5_INFO;
  wire [68:0]S00_SC_W_5_PAYLD;
  wire [5:0]S00_SC_W_5_RECV;
  wire [5:0]S00_SC_W_5_REQ;
  wire [5:0]S00_SC_W_5_SEND;
  wire [5:0]S00_SC_W_6_INFO;
  wire [68:0]S00_SC_W_6_PAYLD;
  wire [5:0]S00_SC_W_6_RECV;
  wire [5:0]S00_SC_W_6_REQ;
  wire [5:0]S00_SC_W_6_SEND;
  wire [5:0]S00_SC_W_7_INFO;
  wire [68:0]S00_SC_W_7_PAYLD;
  wire [5:0]S00_SC_W_7_RECV;
  wire [5:0]S00_SC_W_7_REQ;
  wire [5:0]S00_SC_W_7_SEND;
  wire [5:0]S00_SC_W_8_INFO;
  wire [68:0]S00_SC_W_8_PAYLD;
  wire [5:0]S00_SC_W_8_RECV;
  wire [5:0]S00_SC_W_8_REQ;
  wire [5:0]S00_SC_W_8_SEND;
  wire [5:0]S00_SC_W_9_INFO;
  wire [68:0]S00_SC_W_9_PAYLD;
  wire [5:0]S00_SC_W_9_RECV;
  wire [5:0]S00_SC_W_9_REQ;
  wire [5:0]S00_SC_W_9_SEND;
  wire [0:0]S01_SC_B_1_INFO;
  wire [8:0]S01_SC_B_1_PAYLD;
  wire [0:0]S01_SC_B_1_RECV;
  wire [0:0]S01_SC_B_1_REQ;
  wire [0:0]S01_SC_B_1_SEND;
  wire [0:0]S01_SC_R_1_INFO;
  wire [54:0]S01_SC_R_1_PAYLD;
  wire [0:0]S01_SC_R_1_RECV;
  wire [0:0]S01_SC_R_1_REQ;
  wire [0:0]S01_SC_R_1_SEND;
  wire [0:0]S02_SC_B_1_INFO;
  wire [8:0]S02_SC_B_1_PAYLD;
  wire [0:0]S02_SC_B_1_RECV;
  wire [0:0]S02_SC_B_1_REQ;
  wire [0:0]S02_SC_B_1_SEND;
  wire [0:0]S02_SC_R_1_INFO;
  wire [54:0]S02_SC_R_1_PAYLD;
  wire [0:0]S02_SC_R_1_RECV;
  wire [0:0]S02_SC_R_1_REQ;
  wire [0:0]S02_SC_R_1_SEND;
  wire [0:0]S03_SC_B_1_INFO;
  wire [8:0]S03_SC_B_1_PAYLD;
  wire [0:0]S03_SC_B_1_RECV;
  wire [0:0]S03_SC_B_1_REQ;
  wire [0:0]S03_SC_B_1_SEND;
  wire [0:0]S03_SC_R_1_INFO;
  wire [54:0]S03_SC_R_1_PAYLD;
  wire [0:0]S03_SC_R_1_RECV;
  wire [0:0]S03_SC_R_1_REQ;
  wire [0:0]S03_SC_R_1_SEND;
  wire [0:0]S04_SC_B_1_INFO;
  wire [8:0]S04_SC_B_1_PAYLD;
  wire [0:0]S04_SC_B_1_RECV;
  wire [0:0]S04_SC_B_1_REQ;
  wire [0:0]S04_SC_B_1_SEND;
  wire [0:0]S04_SC_R_1_INFO;
  wire [54:0]S04_SC_R_1_PAYLD;
  wire [0:0]S04_SC_R_1_RECV;
  wire [0:0]S04_SC_R_1_REQ;
  wire [0:0]S04_SC_R_1_SEND;
  wire [0:0]S05_SC_B_1_INFO;
  wire [8:0]S05_SC_B_1_PAYLD;
  wire [0:0]S05_SC_B_1_RECV;
  wire [0:0]S05_SC_B_1_REQ;
  wire [0:0]S05_SC_B_1_SEND;
  wire [0:0]S05_SC_R_1_INFO;
  wire [54:0]S05_SC_R_1_PAYLD;
  wire [0:0]S05_SC_R_1_RECV;
  wire [0:0]S05_SC_R_1_REQ;
  wire [0:0]S05_SC_R_1_SEND;
  wire [0:0]S06_SC_B_1_INFO;
  wire [8:0]S06_SC_B_1_PAYLD;
  wire [0:0]S06_SC_B_1_RECV;
  wire [0:0]S06_SC_B_1_REQ;
  wire [0:0]S06_SC_B_1_SEND;
  wire [0:0]S06_SC_R_1_INFO;
  wire [54:0]S06_SC_R_1_PAYLD;
  wire [0:0]S06_SC_R_1_RECV;
  wire [0:0]S06_SC_R_1_REQ;
  wire [0:0]S06_SC_R_1_SEND;
  wire [0:0]S07_SC_B_1_INFO;
  wire [8:0]S07_SC_B_1_PAYLD;
  wire [0:0]S07_SC_B_1_RECV;
  wire [0:0]S07_SC_B_1_REQ;
  wire [0:0]S07_SC_B_1_SEND;
  wire [0:0]S07_SC_R_1_INFO;
  wire [54:0]S07_SC_R_1_PAYLD;
  wire [0:0]S07_SC_R_1_RECV;
  wire [0:0]S07_SC_R_1_REQ;
  wire [0:0]S07_SC_R_1_SEND;
  wire [0:0]S08_SC_B_1_INFO;
  wire [8:0]S08_SC_B_1_PAYLD;
  wire [0:0]S08_SC_B_1_RECV;
  wire [0:0]S08_SC_B_1_REQ;
  wire [0:0]S08_SC_B_1_SEND;
  wire [0:0]S08_SC_R_1_INFO;
  wire [54:0]S08_SC_R_1_PAYLD;
  wire [0:0]S08_SC_R_1_RECV;
  wire [0:0]S08_SC_R_1_REQ;
  wire [0:0]S08_SC_R_1_SEND;
  wire [0:0]S09_SC_B_1_INFO;
  wire [8:0]S09_SC_B_1_PAYLD;
  wire [0:0]S09_SC_B_1_RECV;
  wire [0:0]S09_SC_B_1_REQ;
  wire [0:0]S09_SC_B_1_SEND;
  wire [0:0]S09_SC_R_1_INFO;
  wire [54:0]S09_SC_R_1_PAYLD;
  wire [0:0]S09_SC_R_1_RECV;
  wire [0:0]S09_SC_R_1_REQ;
  wire [0:0]S09_SC_R_1_SEND;
  wire [0:0]S10_SC_B_1_INFO;
  wire [8:0]S10_SC_B_1_PAYLD;
  wire [0:0]S10_SC_B_1_RECV;
  wire [0:0]S10_SC_B_1_REQ;
  wire [0:0]S10_SC_B_1_SEND;
  wire [0:0]S10_SC_R_1_INFO;
  wire [54:0]S10_SC_R_1_PAYLD;
  wire [0:0]S10_SC_R_1_RECV;
  wire [0:0]S10_SC_R_1_REQ;
  wire [0:0]S10_SC_R_1_SEND;
  wire [0:0]S11_SC_B_1_INFO;
  wire [8:0]S11_SC_B_1_PAYLD;
  wire [0:0]S11_SC_B_1_RECV;
  wire [0:0]S11_SC_B_1_REQ;
  wire [0:0]S11_SC_B_1_SEND;
  wire [0:0]S11_SC_R_1_INFO;
  wire [54:0]S11_SC_R_1_PAYLD;
  wire [0:0]S11_SC_R_1_RECV;
  wire [0:0]S11_SC_R_1_REQ;
  wire [0:0]S11_SC_R_1_SEND;
  wire [0:0]S12_SC_B_1_INFO;
  wire [8:0]S12_SC_B_1_PAYLD;
  wire [0:0]S12_SC_B_1_RECV;
  wire [0:0]S12_SC_B_1_REQ;
  wire [0:0]S12_SC_B_1_SEND;
  wire [0:0]S12_SC_R_1_INFO;
  wire [54:0]S12_SC_R_1_PAYLD;
  wire [0:0]S12_SC_R_1_RECV;
  wire [0:0]S12_SC_R_1_REQ;
  wire [0:0]S12_SC_R_1_SEND;
  wire [0:0]S13_SC_B_1_INFO;
  wire [8:0]S13_SC_B_1_PAYLD;
  wire [0:0]S13_SC_B_1_RECV;
  wire [0:0]S13_SC_B_1_REQ;
  wire [0:0]S13_SC_B_1_SEND;
  wire [0:0]S13_SC_R_1_INFO;
  wire [54:0]S13_SC_R_1_PAYLD;
  wire [0:0]S13_SC_R_1_RECV;
  wire [0:0]S13_SC_R_1_REQ;
  wire [0:0]S13_SC_R_1_SEND;
  wire [0:0]S14_SC_B_1_INFO;
  wire [8:0]S14_SC_B_1_PAYLD;
  wire [0:0]S14_SC_B_1_RECV;
  wire [0:0]S14_SC_B_1_REQ;
  wire [0:0]S14_SC_B_1_SEND;
  wire [0:0]S14_SC_R_1_INFO;
  wire [54:0]S14_SC_R_1_PAYLD;
  wire [0:0]S14_SC_R_1_RECV;
  wire [0:0]S14_SC_R_1_REQ;
  wire [0:0]S14_SC_R_1_SEND;
  wire [0:0]S15_SC_B_1_INFO;
  wire [8:0]S15_SC_B_1_PAYLD;
  wire [0:0]S15_SC_B_1_RECV;
  wire [0:0]S15_SC_B_1_REQ;
  wire [0:0]S15_SC_B_1_SEND;
  wire [0:0]S15_SC_R_1_INFO;
  wire [54:0]S15_SC_R_1_PAYLD;
  wire [0:0]S15_SC_R_1_RECV;
  wire [0:0]S15_SC_R_1_REQ;
  wire [0:0]S15_SC_R_1_SEND;
  wire [0:0]S16_SC_B_1_INFO;
  wire [8:0]S16_SC_B_1_PAYLD;
  wire [0:0]S16_SC_B_1_RECV;
  wire [0:0]S16_SC_B_1_REQ;
  wire [0:0]S16_SC_B_1_SEND;
  wire [0:0]S16_SC_R_1_INFO;
  wire [54:0]S16_SC_R_1_PAYLD;
  wire [0:0]S16_SC_R_1_RECV;
  wire [0:0]S16_SC_R_1_REQ;
  wire [0:0]S16_SC_R_1_SEND;
  wire [0:0]S17_SC_B_1_INFO;
  wire [8:0]S17_SC_B_1_PAYLD;
  wire [0:0]S17_SC_B_1_RECV;
  wire [0:0]S17_SC_B_1_REQ;
  wire [0:0]S17_SC_B_1_SEND;
  wire [0:0]S17_SC_R_1_INFO;
  wire [54:0]S17_SC_R_1_PAYLD;
  wire [0:0]S17_SC_R_1_RECV;
  wire [0:0]S17_SC_R_1_REQ;
  wire [0:0]S17_SC_R_1_SEND;
  wire [0:0]S18_SC_B_1_INFO;
  wire [8:0]S18_SC_B_1_PAYLD;
  wire [0:0]S18_SC_B_1_RECV;
  wire [0:0]S18_SC_B_1_REQ;
  wire [0:0]S18_SC_B_1_SEND;
  wire [0:0]S18_SC_R_1_INFO;
  wire [54:0]S18_SC_R_1_PAYLD;
  wire [0:0]S18_SC_R_1_RECV;
  wire [0:0]S18_SC_R_1_REQ;
  wire [0:0]S18_SC_R_1_SEND;
  wire [0:0]S19_SC_B_1_INFO;
  wire [8:0]S19_SC_B_1_PAYLD;
  wire [0:0]S19_SC_B_1_RECV;
  wire [0:0]S19_SC_B_1_REQ;
  wire [0:0]S19_SC_B_1_SEND;
  wire [0:0]S19_SC_R_1_INFO;
  wire [54:0]S19_SC_R_1_PAYLD;
  wire [0:0]S19_SC_R_1_RECV;
  wire [0:0]S19_SC_R_1_REQ;
  wire [0:0]S19_SC_R_1_SEND;
  wire [0:0]S20_SC_B_1_INFO;
  wire [8:0]S20_SC_B_1_PAYLD;
  wire [0:0]S20_SC_B_1_RECV;
  wire [0:0]S20_SC_B_1_REQ;
  wire [0:0]S20_SC_B_1_SEND;
  wire [0:0]S20_SC_R_1_INFO;
  wire [54:0]S20_SC_R_1_PAYLD;
  wire [0:0]S20_SC_R_1_RECV;
  wire [0:0]S20_SC_R_1_REQ;
  wire [0:0]S20_SC_R_1_SEND;
  wire [0:0]S21_SC_B_1_INFO;
  wire [8:0]S21_SC_B_1_PAYLD;
  wire [0:0]S21_SC_B_1_RECV;
  wire [0:0]S21_SC_B_1_REQ;
  wire [0:0]S21_SC_B_1_SEND;
  wire [0:0]S21_SC_R_1_INFO;
  wire [54:0]S21_SC_R_1_PAYLD;
  wire [0:0]S21_SC_R_1_RECV;
  wire [0:0]S21_SC_R_1_REQ;
  wire [0:0]S21_SC_R_1_SEND;
  wire [0:0]S22_SC_B_1_INFO;
  wire [8:0]S22_SC_B_1_PAYLD;
  wire [0:0]S22_SC_B_1_RECV;
  wire [0:0]S22_SC_B_1_REQ;
  wire [0:0]S22_SC_B_1_SEND;
  wire [0:0]S22_SC_R_1_INFO;
  wire [54:0]S22_SC_R_1_PAYLD;
  wire [0:0]S22_SC_R_1_RECV;
  wire [0:0]S22_SC_R_1_REQ;
  wire [0:0]S22_SC_R_1_SEND;
  wire [0:0]S23_SC_B_1_INFO;
  wire [8:0]S23_SC_B_1_PAYLD;
  wire [0:0]S23_SC_B_1_RECV;
  wire [0:0]S23_SC_B_1_REQ;
  wire [0:0]S23_SC_B_1_SEND;
  wire [0:0]S23_SC_R_1_INFO;
  wire [54:0]S23_SC_R_1_PAYLD;
  wire [0:0]S23_SC_R_1_RECV;
  wire [0:0]S23_SC_R_1_REQ;
  wire [0:0]S23_SC_R_1_SEND;
  wire [0:0]S24_SC_B_1_INFO;
  wire [8:0]S24_SC_B_1_PAYLD;
  wire [0:0]S24_SC_B_1_RECV;
  wire [0:0]S24_SC_B_1_REQ;
  wire [0:0]S24_SC_B_1_SEND;
  wire [0:0]S24_SC_R_1_INFO;
  wire [54:0]S24_SC_R_1_PAYLD;
  wire [0:0]S24_SC_R_1_RECV;
  wire [0:0]S24_SC_R_1_REQ;
  wire [0:0]S24_SC_R_1_SEND;
  wire [0:0]S25_SC_B_1_INFO;
  wire [8:0]S25_SC_B_1_PAYLD;
  wire [0:0]S25_SC_B_1_RECV;
  wire [0:0]S25_SC_B_1_REQ;
  wire [0:0]S25_SC_B_1_SEND;
  wire [0:0]S25_SC_R_1_INFO;
  wire [54:0]S25_SC_R_1_PAYLD;
  wire [0:0]S25_SC_R_1_RECV;
  wire [0:0]S25_SC_R_1_REQ;
  wire [0:0]S25_SC_R_1_SEND;
  wire [0:0]S26_SC_B_1_INFO;
  wire [8:0]S26_SC_B_1_PAYLD;
  wire [0:0]S26_SC_B_1_RECV;
  wire [0:0]S26_SC_B_1_REQ;
  wire [0:0]S26_SC_B_1_SEND;
  wire [0:0]S26_SC_R_1_INFO;
  wire [54:0]S26_SC_R_1_PAYLD;
  wire [0:0]S26_SC_R_1_RECV;
  wire [0:0]S26_SC_R_1_REQ;
  wire [0:0]S26_SC_R_1_SEND;
  wire [0:0]S27_SC_B_1_INFO;
  wire [8:0]S27_SC_B_1_PAYLD;
  wire [0:0]S27_SC_B_1_RECV;
  wire [0:0]S27_SC_B_1_REQ;
  wire [0:0]S27_SC_B_1_SEND;
  wire [0:0]S27_SC_R_1_INFO;
  wire [54:0]S27_SC_R_1_PAYLD;
  wire [0:0]S27_SC_R_1_RECV;
  wire [0:0]S27_SC_R_1_REQ;
  wire [0:0]S27_SC_R_1_SEND;
  wire [0:0]S28_SC_B_1_INFO;
  wire [8:0]S28_SC_B_1_PAYLD;
  wire [0:0]S28_SC_B_1_RECV;
  wire [0:0]S28_SC_B_1_REQ;
  wire [0:0]S28_SC_B_1_SEND;
  wire [0:0]S28_SC_R_1_INFO;
  wire [54:0]S28_SC_R_1_PAYLD;
  wire [0:0]S28_SC_R_1_RECV;
  wire [0:0]S28_SC_R_1_REQ;
  wire [0:0]S28_SC_R_1_SEND;
  wire [0:0]S29_SC_B_1_INFO;
  wire [8:0]S29_SC_B_1_PAYLD;
  wire [0:0]S29_SC_B_1_RECV;
  wire [0:0]S29_SC_B_1_REQ;
  wire [0:0]S29_SC_B_1_SEND;
  wire [0:0]S29_SC_R_1_INFO;
  wire [54:0]S29_SC_R_1_PAYLD;
  wire [0:0]S29_SC_R_1_RECV;
  wire [0:0]S29_SC_R_1_REQ;
  wire [0:0]S29_SC_R_1_SEND;
  wire [0:0]S30_SC_B_1_INFO;
  wire [8:0]S30_SC_B_1_PAYLD;
  wire [0:0]S30_SC_B_1_RECV;
  wire [0:0]S30_SC_B_1_REQ;
  wire [0:0]S30_SC_B_1_SEND;
  wire [0:0]S30_SC_R_1_INFO;
  wire [54:0]S30_SC_R_1_PAYLD;
  wire [0:0]S30_SC_R_1_RECV;
  wire [0:0]S30_SC_R_1_REQ;
  wire [0:0]S30_SC_R_1_SEND;
  wire [0:0]S31_SC_B_1_INFO;
  wire [8:0]S31_SC_B_1_PAYLD;
  wire [0:0]S31_SC_B_1_RECV;
  wire [0:0]S31_SC_B_1_REQ;
  wire [0:0]S31_SC_B_1_SEND;
  wire [0:0]S31_SC_R_1_INFO;
  wire [54:0]S31_SC_R_1_PAYLD;
  wire [0:0]S31_SC_R_1_RECV;
  wire [0:0]S31_SC_R_1_REQ;
  wire [0:0]S31_SC_R_1_SEND;
  wire [0:0]S32_SC_B_1_INFO;
  wire [8:0]S32_SC_B_1_PAYLD;
  wire [0:0]S32_SC_B_1_RECV;
  wire [0:0]S32_SC_B_1_REQ;
  wire [0:0]S32_SC_B_1_SEND;
  wire [0:0]S32_SC_R_1_INFO;
  wire [54:0]S32_SC_R_1_PAYLD;
  wire [0:0]S32_SC_R_1_RECV;
  wire [0:0]S32_SC_R_1_REQ;
  wire [0:0]S32_SC_R_1_SEND;
  wire [0:0]S33_SC_B_1_INFO;
  wire [8:0]S33_SC_B_1_PAYLD;
  wire [0:0]S33_SC_B_1_RECV;
  wire [0:0]S33_SC_B_1_REQ;
  wire [0:0]S33_SC_B_1_SEND;
  wire [0:0]S33_SC_R_1_INFO;
  wire [54:0]S33_SC_R_1_PAYLD;
  wire [0:0]S33_SC_R_1_RECV;
  wire [0:0]S33_SC_R_1_REQ;
  wire [0:0]S33_SC_R_1_SEND;
  wire [0:0]S34_SC_B_1_INFO;
  wire [8:0]S34_SC_B_1_PAYLD;
  wire [0:0]S34_SC_B_1_RECV;
  wire [0:0]S34_SC_B_1_REQ;
  wire [0:0]S34_SC_B_1_SEND;
  wire [0:0]S34_SC_R_1_INFO;
  wire [54:0]S34_SC_R_1_PAYLD;
  wire [0:0]S34_SC_R_1_RECV;
  wire [0:0]S34_SC_R_1_REQ;
  wire [0:0]S34_SC_R_1_SEND;
  wire [0:0]S35_SC_B_1_INFO;
  wire [8:0]S35_SC_B_1_PAYLD;
  wire [0:0]S35_SC_B_1_RECV;
  wire [0:0]S35_SC_B_1_REQ;
  wire [0:0]S35_SC_B_1_SEND;
  wire [0:0]S35_SC_R_1_INFO;
  wire [54:0]S35_SC_R_1_PAYLD;
  wire [0:0]S35_SC_R_1_RECV;
  wire [0:0]S35_SC_R_1_REQ;
  wire [0:0]S35_SC_R_1_SEND;
  wire [0:0]S36_SC_B_1_INFO;
  wire [8:0]S36_SC_B_1_PAYLD;
  wire [0:0]S36_SC_B_1_RECV;
  wire [0:0]S36_SC_B_1_REQ;
  wire [0:0]S36_SC_B_1_SEND;
  wire [0:0]S36_SC_R_1_INFO;
  wire [54:0]S36_SC_R_1_PAYLD;
  wire [0:0]S36_SC_R_1_RECV;
  wire [0:0]S36_SC_R_1_REQ;
  wire [0:0]S36_SC_R_1_SEND;
  wire [0:0]S37_SC_B_1_INFO;
  wire [8:0]S37_SC_B_1_PAYLD;
  wire [0:0]S37_SC_B_1_RECV;
  wire [0:0]S37_SC_B_1_REQ;
  wire [0:0]S37_SC_B_1_SEND;
  wire [0:0]S37_SC_R_1_INFO;
  wire [54:0]S37_SC_R_1_PAYLD;
  wire [0:0]S37_SC_R_1_RECV;
  wire [0:0]S37_SC_R_1_REQ;
  wire [0:0]S37_SC_R_1_SEND;
  wire [0:0]S38_SC_B_1_INFO;
  wire [8:0]S38_SC_B_1_PAYLD;
  wire [0:0]S38_SC_B_1_RECV;
  wire [0:0]S38_SC_B_1_REQ;
  wire [0:0]S38_SC_B_1_SEND;
  wire [0:0]S38_SC_R_1_INFO;
  wire [54:0]S38_SC_R_1_PAYLD;
  wire [0:0]S38_SC_R_1_RECV;
  wire [0:0]S38_SC_R_1_REQ;
  wire [0:0]S38_SC_R_1_SEND;
  wire [0:0]S39_SC_B_1_INFO;
  wire [8:0]S39_SC_B_1_PAYLD;
  wire [0:0]S39_SC_B_1_RECV;
  wire [0:0]S39_SC_B_1_REQ;
  wire [0:0]S39_SC_B_1_SEND;
  wire [0:0]S39_SC_R_1_INFO;
  wire [54:0]S39_SC_R_1_PAYLD;
  wire [0:0]S39_SC_R_1_RECV;
  wire [0:0]S39_SC_R_1_REQ;
  wire [0:0]S39_SC_R_1_SEND;
  wire [0:0]S40_SC_B_1_INFO;
  wire [8:0]S40_SC_B_1_PAYLD;
  wire [0:0]S40_SC_B_1_RECV;
  wire [0:0]S40_SC_B_1_REQ;
  wire [0:0]S40_SC_B_1_SEND;
  wire [0:0]S40_SC_R_1_INFO;
  wire [54:0]S40_SC_R_1_PAYLD;
  wire [0:0]S40_SC_R_1_RECV;
  wire [0:0]S40_SC_R_1_REQ;
  wire [0:0]S40_SC_R_1_SEND;
  wire [0:0]S41_SC_B_1_INFO;
  wire [8:0]S41_SC_B_1_PAYLD;
  wire [0:0]S41_SC_B_1_RECV;
  wire [0:0]S41_SC_B_1_REQ;
  wire [0:0]S41_SC_B_1_SEND;
  wire [0:0]S41_SC_R_1_INFO;
  wire [54:0]S41_SC_R_1_PAYLD;
  wire [0:0]S41_SC_R_1_RECV;
  wire [0:0]S41_SC_R_1_REQ;
  wire [0:0]S41_SC_R_1_SEND;
  wire [0:0]S42_SC_B_1_INFO;
  wire [8:0]S42_SC_B_1_PAYLD;
  wire [0:0]S42_SC_B_1_RECV;
  wire [0:0]S42_SC_B_1_REQ;
  wire [0:0]S42_SC_B_1_SEND;
  wire [0:0]S42_SC_R_1_INFO;
  wire [54:0]S42_SC_R_1_PAYLD;
  wire [0:0]S42_SC_R_1_RECV;
  wire [0:0]S42_SC_R_1_REQ;
  wire [0:0]S42_SC_R_1_SEND;
  wire [0:0]S43_SC_B_1_INFO;
  wire [8:0]S43_SC_B_1_PAYLD;
  wire [0:0]S43_SC_B_1_RECV;
  wire [0:0]S43_SC_B_1_REQ;
  wire [0:0]S43_SC_B_1_SEND;
  wire [0:0]S43_SC_R_1_INFO;
  wire [54:0]S43_SC_R_1_PAYLD;
  wire [0:0]S43_SC_R_1_RECV;
  wire [0:0]S43_SC_R_1_REQ;
  wire [0:0]S43_SC_R_1_SEND;
  wire [0:0]S44_SC_B_1_INFO;
  wire [8:0]S44_SC_B_1_PAYLD;
  wire [0:0]S44_SC_B_1_RECV;
  wire [0:0]S44_SC_B_1_REQ;
  wire [0:0]S44_SC_B_1_SEND;
  wire [0:0]S44_SC_R_1_INFO;
  wire [54:0]S44_SC_R_1_PAYLD;
  wire [0:0]S44_SC_R_1_RECV;
  wire [0:0]S44_SC_R_1_REQ;
  wire [0:0]S44_SC_R_1_SEND;
  wire [0:0]S45_SC_B_1_INFO;
  wire [8:0]S45_SC_B_1_PAYLD;
  wire [0:0]S45_SC_B_1_RECV;
  wire [0:0]S45_SC_B_1_REQ;
  wire [0:0]S45_SC_B_1_SEND;
  wire [0:0]S45_SC_R_1_INFO;
  wire [54:0]S45_SC_R_1_PAYLD;
  wire [0:0]S45_SC_R_1_RECV;
  wire [0:0]S45_SC_R_1_REQ;
  wire [0:0]S45_SC_R_1_SEND;
  wire [0:0]S46_SC_B_1_INFO;
  wire [8:0]S46_SC_B_1_PAYLD;
  wire [0:0]S46_SC_B_1_RECV;
  wire [0:0]S46_SC_B_1_REQ;
  wire [0:0]S46_SC_B_1_SEND;
  wire [0:0]S46_SC_R_1_INFO;
  wire [54:0]S46_SC_R_1_PAYLD;
  wire [0:0]S46_SC_R_1_RECV;
  wire [0:0]S46_SC_R_1_REQ;
  wire [0:0]S46_SC_R_1_SEND;
  wire [0:0]S47_SC_B_1_INFO;
  wire [8:0]S47_SC_B_1_PAYLD;
  wire [0:0]S47_SC_B_1_RECV;
  wire [0:0]S47_SC_B_1_REQ;
  wire [0:0]S47_SC_B_1_SEND;
  wire [0:0]S47_SC_R_1_INFO;
  wire [54:0]S47_SC_R_1_PAYLD;
  wire [0:0]S47_SC_R_1_RECV;
  wire [0:0]S47_SC_R_1_REQ;
  wire [0:0]S47_SC_R_1_SEND;
  wire [0:0]S48_SC_B_1_INFO;
  wire [8:0]S48_SC_B_1_PAYLD;
  wire [0:0]S48_SC_B_1_RECV;
  wire [0:0]S48_SC_B_1_REQ;
  wire [0:0]S48_SC_B_1_SEND;
  wire [0:0]S48_SC_R_1_INFO;
  wire [54:0]S48_SC_R_1_PAYLD;
  wire [0:0]S48_SC_R_1_RECV;
  wire [0:0]S48_SC_R_1_REQ;
  wire [0:0]S48_SC_R_1_SEND;
  wire [0:0]S49_SC_B_1_INFO;
  wire [8:0]S49_SC_B_1_PAYLD;
  wire [0:0]S49_SC_B_1_RECV;
  wire [0:0]S49_SC_B_1_REQ;
  wire [0:0]S49_SC_B_1_SEND;
  wire [0:0]S49_SC_R_1_INFO;
  wire [54:0]S49_SC_R_1_PAYLD;
  wire [0:0]S49_SC_R_1_RECV;
  wire [0:0]S49_SC_R_1_REQ;
  wire [0:0]S49_SC_R_1_SEND;
  wire [0:0]S50_SC_B_1_INFO;
  wire [8:0]S50_SC_B_1_PAYLD;
  wire [0:0]S50_SC_B_1_RECV;
  wire [0:0]S50_SC_B_1_REQ;
  wire [0:0]S50_SC_B_1_SEND;
  wire [0:0]S50_SC_R_1_INFO;
  wire [54:0]S50_SC_R_1_PAYLD;
  wire [0:0]S50_SC_R_1_RECV;
  wire [0:0]S50_SC_R_1_REQ;
  wire [0:0]S50_SC_R_1_SEND;
  wire [0:0]ar_la_in_swbd_M00_SC_INFO;
  wire [181:0]ar_la_in_swbd_M00_SC_PAYLD;
  wire [0:0]ar_la_in_swbd_M00_SC_RECV;
  wire [0:0]ar_la_in_swbd_M00_SC_REQ;
  wire [0:0]ar_la_in_swbd_M00_SC_SEND;
  wire [1:1]ar_la_in_swbd_M01_SC_INFO;
  wire [363:182]ar_la_in_swbd_M01_SC_PAYLD;
  wire [0:0]ar_la_in_swbd_M01_SC_RECV;
  wire [1:1]ar_la_in_swbd_M01_SC_REQ;
  wire [1:1]ar_la_in_swbd_M01_SC_SEND;
  wire [2:2]ar_la_in_swbd_M02_SC_INFO;
  wire [545:364]ar_la_in_swbd_M02_SC_PAYLD;
  wire [0:0]ar_la_in_swbd_M02_SC_RECV;
  wire [2:2]ar_la_in_swbd_M02_SC_REQ;
  wire [2:2]ar_la_in_swbd_M02_SC_SEND;
  wire [3:3]ar_la_in_swbd_M03_SC_INFO;
  wire [727:546]ar_la_in_swbd_M03_SC_PAYLD;
  wire [0:0]ar_la_in_swbd_M03_SC_RECV;
  wire [3:3]ar_la_in_swbd_M03_SC_REQ;
  wire [3:3]ar_la_in_swbd_M03_SC_SEND;
  wire [4:4]ar_la_in_swbd_M04_SC_INFO;
  wire [909:728]ar_la_in_swbd_M04_SC_PAYLD;
  wire [0:0]ar_la_in_swbd_M04_SC_RECV;
  wire [4:4]ar_la_in_swbd_M04_SC_REQ;
  wire [4:4]ar_la_in_swbd_M04_SC_SEND;
  wire [5:5]ar_la_in_swbd_M05_SC_INFO;
  wire [1091:910]ar_la_in_swbd_M05_SC_PAYLD;
  wire [0:0]ar_la_in_swbd_M05_SC_RECV;
  wire [5:5]ar_la_in_swbd_M05_SC_REQ;
  wire [5:5]ar_la_in_swbd_M05_SC_SEND;
  wire [6:6]ar_la_in_swbd_M06_SC_INFO;
  wire [1273:1092]ar_la_in_swbd_M06_SC_PAYLD;
  wire [0:0]ar_la_in_swbd_M06_SC_RECV;
  wire [6:6]ar_la_in_swbd_M06_SC_REQ;
  wire [6:6]ar_la_in_swbd_M06_SC_SEND;
  wire [7:7]ar_la_in_swbd_M07_SC_INFO;
  wire [1455:1274]ar_la_in_swbd_M07_SC_PAYLD;
  wire [0:0]ar_la_in_swbd_M07_SC_RECV;
  wire [7:7]ar_la_in_swbd_M07_SC_REQ;
  wire [7:7]ar_la_in_swbd_M07_SC_SEND;
  wire [0:0]aw_la_in_swbd_M00_SC_INFO;
  wire [181:0]aw_la_in_swbd_M00_SC_PAYLD;
  wire [0:0]aw_la_in_swbd_M00_SC_RECV;
  wire [0:0]aw_la_in_swbd_M00_SC_REQ;
  wire [0:0]aw_la_in_swbd_M00_SC_SEND;
  wire [1:1]aw_la_in_swbd_M01_SC_INFO;
  wire [363:182]aw_la_in_swbd_M01_SC_PAYLD;
  wire [0:0]aw_la_in_swbd_M01_SC_RECV;
  wire [1:1]aw_la_in_swbd_M01_SC_REQ;
  wire [1:1]aw_la_in_swbd_M01_SC_SEND;
  wire [2:2]aw_la_in_swbd_M02_SC_INFO;
  wire [545:364]aw_la_in_swbd_M02_SC_PAYLD;
  wire [0:0]aw_la_in_swbd_M02_SC_RECV;
  wire [2:2]aw_la_in_swbd_M02_SC_REQ;
  wire [2:2]aw_la_in_swbd_M02_SC_SEND;
  wire [3:3]aw_la_in_swbd_M03_SC_INFO;
  wire [727:546]aw_la_in_swbd_M03_SC_PAYLD;
  wire [0:0]aw_la_in_swbd_M03_SC_RECV;
  wire [3:3]aw_la_in_swbd_M03_SC_REQ;
  wire [3:3]aw_la_in_swbd_M03_SC_SEND;
  wire [4:4]aw_la_in_swbd_M04_SC_INFO;
  wire [909:728]aw_la_in_swbd_M04_SC_PAYLD;
  wire [0:0]aw_la_in_swbd_M04_SC_RECV;
  wire [4:4]aw_la_in_swbd_M04_SC_REQ;
  wire [4:4]aw_la_in_swbd_M04_SC_SEND;
  wire [5:5]aw_la_in_swbd_M05_SC_INFO;
  wire [1091:910]aw_la_in_swbd_M05_SC_PAYLD;
  wire [0:0]aw_la_in_swbd_M05_SC_RECV;
  wire [5:5]aw_la_in_swbd_M05_SC_REQ;
  wire [5:5]aw_la_in_swbd_M05_SC_SEND;
  wire [6:6]aw_la_in_swbd_M06_SC_INFO;
  wire [1273:1092]aw_la_in_swbd_M06_SC_PAYLD;
  wire [0:0]aw_la_in_swbd_M06_SC_RECV;
  wire [6:6]aw_la_in_swbd_M06_SC_REQ;
  wire [6:6]aw_la_in_swbd_M06_SC_SEND;
  wire [7:7]aw_la_in_swbd_M07_SC_INFO;
  wire [1455:1274]aw_la_in_swbd_M07_SC_PAYLD;
  wire [0:0]aw_la_in_swbd_M07_SC_RECV;
  wire [7:7]aw_la_in_swbd_M07_SC_REQ;
  wire [7:7]aw_la_in_swbd_M07_SC_SEND;
  wire [7:0]b_la_in_swbd_M00_SC_INFO;
  wire [8:0]b_la_in_swbd_M00_SC_PAYLD;
  wire [7:0]b_la_in_swbd_M00_SC_RECV;
  wire [7:0]b_la_in_swbd_M00_SC_REQ;
  wire [7:0]b_la_in_swbd_M00_SC_SEND;
  wire [0:0]i_nodes_0_M_SC_B_INFO;
  wire [8:0]i_nodes_0_M_SC_B_PAYLD;
  wire [0:0]i_nodes_0_M_SC_B_RECV;
  wire [0:0]i_nodes_0_M_SC_B_REQ;
  wire [0:0]i_nodes_0_M_SC_B_SEND;
  wire [0:0]i_nodes_0_M_SC_R_INFO;
  wire [54:0]i_nodes_0_M_SC_R_PAYLD;
  wire [0:0]i_nodes_0_M_SC_R_RECV;
  wire [0:0]i_nodes_0_M_SC_R_REQ;
  wire [0:0]i_nodes_0_M_SC_R_SEND;
  wire [0:0]i_nodes_1_M_SC_B_INFO;
  wire [8:0]i_nodes_1_M_SC_B_PAYLD;
  wire [1:1]i_nodes_1_M_SC_B_RECV;
  wire [0:0]i_nodes_1_M_SC_B_REQ;
  wire [0:0]i_nodes_1_M_SC_B_SEND;
  wire [0:0]i_nodes_1_M_SC_R_INFO;
  wire [54:0]i_nodes_1_M_SC_R_PAYLD;
  wire [1:1]i_nodes_1_M_SC_R_RECV;
  wire [0:0]i_nodes_1_M_SC_R_REQ;
  wire [0:0]i_nodes_1_M_SC_R_SEND;
  wire [0:0]i_nodes_2_M_SC_B_INFO;
  wire [8:0]i_nodes_2_M_SC_B_PAYLD;
  wire [2:2]i_nodes_2_M_SC_B_RECV;
  wire [0:0]i_nodes_2_M_SC_B_REQ;
  wire [0:0]i_nodes_2_M_SC_B_SEND;
  wire [0:0]i_nodes_2_M_SC_R_INFO;
  wire [54:0]i_nodes_2_M_SC_R_PAYLD;
  wire [2:2]i_nodes_2_M_SC_R_RECV;
  wire [0:0]i_nodes_2_M_SC_R_REQ;
  wire [0:0]i_nodes_2_M_SC_R_SEND;
  wire [0:0]i_nodes_3_M_SC_B_INFO;
  wire [8:0]i_nodes_3_M_SC_B_PAYLD;
  wire [3:3]i_nodes_3_M_SC_B_RECV;
  wire [0:0]i_nodes_3_M_SC_B_REQ;
  wire [0:0]i_nodes_3_M_SC_B_SEND;
  wire [0:0]i_nodes_3_M_SC_R_INFO;
  wire [54:0]i_nodes_3_M_SC_R_PAYLD;
  wire [3:3]i_nodes_3_M_SC_R_RECV;
  wire [0:0]i_nodes_3_M_SC_R_REQ;
  wire [0:0]i_nodes_3_M_SC_R_SEND;
  wire [0:0]i_nodes_4_M_SC_B_INFO;
  wire [8:0]i_nodes_4_M_SC_B_PAYLD;
  wire [4:4]i_nodes_4_M_SC_B_RECV;
  wire [0:0]i_nodes_4_M_SC_B_REQ;
  wire [0:0]i_nodes_4_M_SC_B_SEND;
  wire [0:0]i_nodes_4_M_SC_R_INFO;
  wire [54:0]i_nodes_4_M_SC_R_PAYLD;
  wire [4:4]i_nodes_4_M_SC_R_RECV;
  wire [0:0]i_nodes_4_M_SC_R_REQ;
  wire [0:0]i_nodes_4_M_SC_R_SEND;
  wire [0:0]i_nodes_5_M_SC_B_INFO;
  wire [8:0]i_nodes_5_M_SC_B_PAYLD;
  wire [5:5]i_nodes_5_M_SC_B_RECV;
  wire [0:0]i_nodes_5_M_SC_B_REQ;
  wire [0:0]i_nodes_5_M_SC_B_SEND;
  wire [0:0]i_nodes_5_M_SC_R_INFO;
  wire [54:0]i_nodes_5_M_SC_R_PAYLD;
  wire [5:5]i_nodes_5_M_SC_R_RECV;
  wire [0:0]i_nodes_5_M_SC_R_REQ;
  wire [0:0]i_nodes_5_M_SC_R_SEND;
  wire [0:0]i_nodes_6_M_SC_B_INFO;
  wire [8:0]i_nodes_6_M_SC_B_PAYLD;
  wire [6:6]i_nodes_6_M_SC_B_RECV;
  wire [0:0]i_nodes_6_M_SC_B_REQ;
  wire [0:0]i_nodes_6_M_SC_B_SEND;
  wire [0:0]i_nodes_6_M_SC_R_INFO;
  wire [54:0]i_nodes_6_M_SC_R_PAYLD;
  wire [6:6]i_nodes_6_M_SC_R_RECV;
  wire [0:0]i_nodes_6_M_SC_R_REQ;
  wire [0:0]i_nodes_6_M_SC_R_SEND;
  wire [0:0]i_nodes_7_M_SC_B_INFO;
  wire [8:0]i_nodes_7_M_SC_B_PAYLD;
  wire [7:7]i_nodes_7_M_SC_B_RECV;
  wire [0:0]i_nodes_7_M_SC_B_REQ;
  wire [0:0]i_nodes_7_M_SC_B_SEND;
  wire [0:0]i_nodes_7_M_SC_R_INFO;
  wire [54:0]i_nodes_7_M_SC_R_PAYLD;
  wire [7:7]i_nodes_7_M_SC_R_RECV;
  wire [0:0]i_nodes_7_M_SC_R_REQ;
  wire [0:0]i_nodes_7_M_SC_R_SEND;
  wire m_sc_aclk_1;
  wire m_sc_aresetn_1;
  wire [0:0]out_swbd_0_M00_SC_AR_INFO;
  wire [181:0]out_swbd_0_M00_SC_AR_PAYLD;
  wire [0:0]out_swbd_0_M00_SC_AR_RECV;
  wire [0:0]out_swbd_0_M00_SC_AR_REQ;
  wire [0:0]out_swbd_0_M00_SC_AR_SEND;
  wire [0:0]out_swbd_0_M00_SC_AW_INFO;
  wire [181:0]out_swbd_0_M00_SC_AW_PAYLD;
  wire [0:0]out_swbd_0_M00_SC_AW_RECV;
  wire [0:0]out_swbd_0_M00_SC_AW_REQ;
  wire [0:0]out_swbd_0_M00_SC_AW_SEND;
  wire [6:0]out_swbd_0_M00_SC_B_INFO;
  wire [8:0]out_swbd_0_M00_SC_B_PAYLD;
  wire [6:0]out_swbd_0_M00_SC_B_RECV;
  wire [6:0]out_swbd_0_M00_SC_B_REQ;
  wire [6:0]out_swbd_0_M00_SC_B_SEND;
  wire [6:0]out_swbd_0_M00_SC_R_INFO;
  wire [54:0]out_swbd_0_M00_SC_R_PAYLD;
  wire [6:0]out_swbd_0_M00_SC_R_RECV;
  wire [6:0]out_swbd_0_M00_SC_R_REQ;
  wire [6:0]out_swbd_0_M00_SC_R_SEND;
  wire [0:0]out_swbd_0_M00_SC_W_INFO;
  wire [68:0]out_swbd_0_M00_SC_W_PAYLD;
  wire [0:0]out_swbd_0_M00_SC_W_RECV;
  wire [0:0]out_swbd_0_M00_SC_W_REQ;
  wire [0:0]out_swbd_0_M00_SC_W_SEND;
  wire [0:0]out_swbd_0_M01_SC_AR_INFO;
  wire [181:0]out_swbd_0_M01_SC_AR_PAYLD;
  wire [0:0]out_swbd_0_M01_SC_AR_RECV;
  wire [0:0]out_swbd_0_M01_SC_AR_REQ;
  wire [0:0]out_swbd_0_M01_SC_AR_SEND;
  wire [0:0]out_swbd_0_M01_SC_AW_INFO;
  wire [181:0]out_swbd_0_M01_SC_AW_PAYLD;
  wire [0:0]out_swbd_0_M01_SC_AW_RECV;
  wire [0:0]out_swbd_0_M01_SC_AW_REQ;
  wire [0:0]out_swbd_0_M01_SC_AW_SEND;
  wire [0:0]out_swbd_0_M01_SC_W_INFO;
  wire [68:0]out_swbd_0_M01_SC_W_PAYLD;
  wire [0:0]out_swbd_0_M01_SC_W_RECV;
  wire [0:0]out_swbd_0_M01_SC_W_REQ;
  wire [0:0]out_swbd_0_M01_SC_W_SEND;
  wire [0:0]out_swbd_0_M02_SC_AR_INFO;
  wire [181:0]out_swbd_0_M02_SC_AR_PAYLD;
  wire [0:0]out_swbd_0_M02_SC_AR_RECV;
  wire [0:0]out_swbd_0_M02_SC_AR_REQ;
  wire [0:0]out_swbd_0_M02_SC_AR_SEND;
  wire [0:0]out_swbd_0_M02_SC_AW_INFO;
  wire [181:0]out_swbd_0_M02_SC_AW_PAYLD;
  wire [0:0]out_swbd_0_M02_SC_AW_RECV;
  wire [0:0]out_swbd_0_M02_SC_AW_REQ;
  wire [0:0]out_swbd_0_M02_SC_AW_SEND;
  wire [0:0]out_swbd_0_M02_SC_W_INFO;
  wire [68:0]out_swbd_0_M02_SC_W_PAYLD;
  wire [0:0]out_swbd_0_M02_SC_W_RECV;
  wire [0:0]out_swbd_0_M02_SC_W_REQ;
  wire [0:0]out_swbd_0_M02_SC_W_SEND;
  wire [0:0]out_swbd_0_M03_SC_AR_INFO;
  wire [181:0]out_swbd_0_M03_SC_AR_PAYLD;
  wire [0:0]out_swbd_0_M03_SC_AR_RECV;
  wire [0:0]out_swbd_0_M03_SC_AR_REQ;
  wire [0:0]out_swbd_0_M03_SC_AR_SEND;
  wire [0:0]out_swbd_0_M03_SC_AW_INFO;
  wire [181:0]out_swbd_0_M03_SC_AW_PAYLD;
  wire [0:0]out_swbd_0_M03_SC_AW_RECV;
  wire [0:0]out_swbd_0_M03_SC_AW_REQ;
  wire [0:0]out_swbd_0_M03_SC_AW_SEND;
  wire [0:0]out_swbd_0_M03_SC_W_INFO;
  wire [68:0]out_swbd_0_M03_SC_W_PAYLD;
  wire [0:0]out_swbd_0_M03_SC_W_RECV;
  wire [0:0]out_swbd_0_M03_SC_W_REQ;
  wire [0:0]out_swbd_0_M03_SC_W_SEND;
  wire [0:0]out_swbd_0_M04_SC_AR_INFO;
  wire [181:0]out_swbd_0_M04_SC_AR_PAYLD;
  wire [0:0]out_swbd_0_M04_SC_AR_RECV;
  wire [0:0]out_swbd_0_M04_SC_AR_REQ;
  wire [0:0]out_swbd_0_M04_SC_AR_SEND;
  wire [0:0]out_swbd_0_M04_SC_AW_INFO;
  wire [181:0]out_swbd_0_M04_SC_AW_PAYLD;
  wire [0:0]out_swbd_0_M04_SC_AW_RECV;
  wire [0:0]out_swbd_0_M04_SC_AW_REQ;
  wire [0:0]out_swbd_0_M04_SC_AW_SEND;
  wire [0:0]out_swbd_0_M04_SC_W_INFO;
  wire [68:0]out_swbd_0_M04_SC_W_PAYLD;
  wire [0:0]out_swbd_0_M04_SC_W_RECV;
  wire [0:0]out_swbd_0_M04_SC_W_REQ;
  wire [0:0]out_swbd_0_M04_SC_W_SEND;
  wire [0:0]out_swbd_0_M05_SC_AR_INFO;
  wire [181:0]out_swbd_0_M05_SC_AR_PAYLD;
  wire [0:0]out_swbd_0_M05_SC_AR_RECV;
  wire [0:0]out_swbd_0_M05_SC_AR_REQ;
  wire [0:0]out_swbd_0_M05_SC_AR_SEND;
  wire [0:0]out_swbd_0_M05_SC_AW_INFO;
  wire [181:0]out_swbd_0_M05_SC_AW_PAYLD;
  wire [0:0]out_swbd_0_M05_SC_AW_RECV;
  wire [0:0]out_swbd_0_M05_SC_AW_REQ;
  wire [0:0]out_swbd_0_M05_SC_AW_SEND;
  wire [0:0]out_swbd_0_M05_SC_W_INFO;
  wire [68:0]out_swbd_0_M05_SC_W_PAYLD;
  wire [0:0]out_swbd_0_M05_SC_W_RECV;
  wire [0:0]out_swbd_0_M05_SC_W_REQ;
  wire [0:0]out_swbd_0_M05_SC_W_SEND;
  wire [0:0]out_swbd_0_M06_SC_AR_INFO;
  wire [181:0]out_swbd_0_M06_SC_AR_PAYLD;
  wire [0:0]out_swbd_0_M06_SC_AR_RECV;
  wire [0:0]out_swbd_0_M06_SC_AR_REQ;
  wire [0:0]out_swbd_0_M06_SC_AR_SEND;
  wire [0:0]out_swbd_0_M06_SC_AW_INFO;
  wire [181:0]out_swbd_0_M06_SC_AW_PAYLD;
  wire [0:0]out_swbd_0_M06_SC_AW_RECV;
  wire [0:0]out_swbd_0_M06_SC_AW_REQ;
  wire [0:0]out_swbd_0_M06_SC_AW_SEND;
  wire [0:0]out_swbd_0_M06_SC_W_INFO;
  wire [68:0]out_swbd_0_M06_SC_W_PAYLD;
  wire [0:0]out_swbd_0_M06_SC_W_RECV;
  wire [0:0]out_swbd_0_M06_SC_W_REQ;
  wire [0:0]out_swbd_0_M06_SC_W_SEND;
  wire [0:0]out_swbd_1_M00_SC_AR_INFO;
  wire [181:0]out_swbd_1_M00_SC_AR_PAYLD;
  wire [0:0]out_swbd_1_M00_SC_AR_RECV;
  wire [0:0]out_swbd_1_M00_SC_AR_REQ;
  wire [0:0]out_swbd_1_M00_SC_AR_SEND;
  wire [0:0]out_swbd_1_M00_SC_AW_INFO;
  wire [181:0]out_swbd_1_M00_SC_AW_PAYLD;
  wire [0:0]out_swbd_1_M00_SC_AW_RECV;
  wire [0:0]out_swbd_1_M00_SC_AW_REQ;
  wire [0:0]out_swbd_1_M00_SC_AW_SEND;
  wire [6:0]out_swbd_1_M00_SC_B_INFO;
  wire [8:0]out_swbd_1_M00_SC_B_PAYLD;
  wire [6:0]out_swbd_1_M00_SC_B_RECV;
  wire [6:0]out_swbd_1_M00_SC_B_REQ;
  wire [6:0]out_swbd_1_M00_SC_B_SEND;
  wire [6:0]out_swbd_1_M00_SC_R_INFO;
  wire [54:0]out_swbd_1_M00_SC_R_PAYLD;
  wire [6:0]out_swbd_1_M00_SC_R_RECV;
  wire [6:0]out_swbd_1_M00_SC_R_REQ;
  wire [6:0]out_swbd_1_M00_SC_R_SEND;
  wire [0:0]out_swbd_1_M00_SC_W_INFO;
  wire [68:0]out_swbd_1_M00_SC_W_PAYLD;
  wire [0:0]out_swbd_1_M00_SC_W_RECV;
  wire [0:0]out_swbd_1_M00_SC_W_REQ;
  wire [0:0]out_swbd_1_M00_SC_W_SEND;
  wire [0:0]out_swbd_1_M01_SC_AR_INFO;
  wire [181:0]out_swbd_1_M01_SC_AR_PAYLD;
  wire [0:0]out_swbd_1_M01_SC_AR_RECV;
  wire [0:0]out_swbd_1_M01_SC_AR_REQ;
  wire [0:0]out_swbd_1_M01_SC_AR_SEND;
  wire [0:0]out_swbd_1_M01_SC_AW_INFO;
  wire [181:0]out_swbd_1_M01_SC_AW_PAYLD;
  wire [0:0]out_swbd_1_M01_SC_AW_RECV;
  wire [0:0]out_swbd_1_M01_SC_AW_REQ;
  wire [0:0]out_swbd_1_M01_SC_AW_SEND;
  wire [0:0]out_swbd_1_M01_SC_W_INFO;
  wire [68:0]out_swbd_1_M01_SC_W_PAYLD;
  wire [0:0]out_swbd_1_M01_SC_W_RECV;
  wire [0:0]out_swbd_1_M01_SC_W_REQ;
  wire [0:0]out_swbd_1_M01_SC_W_SEND;
  wire [0:0]out_swbd_1_M02_SC_AR_INFO;
  wire [181:0]out_swbd_1_M02_SC_AR_PAYLD;
  wire [0:0]out_swbd_1_M02_SC_AR_RECV;
  wire [0:0]out_swbd_1_M02_SC_AR_REQ;
  wire [0:0]out_swbd_1_M02_SC_AR_SEND;
  wire [0:0]out_swbd_1_M02_SC_AW_INFO;
  wire [181:0]out_swbd_1_M02_SC_AW_PAYLD;
  wire [0:0]out_swbd_1_M02_SC_AW_RECV;
  wire [0:0]out_swbd_1_M02_SC_AW_REQ;
  wire [0:0]out_swbd_1_M02_SC_AW_SEND;
  wire [0:0]out_swbd_1_M02_SC_W_INFO;
  wire [68:0]out_swbd_1_M02_SC_W_PAYLD;
  wire [0:0]out_swbd_1_M02_SC_W_RECV;
  wire [0:0]out_swbd_1_M02_SC_W_REQ;
  wire [0:0]out_swbd_1_M02_SC_W_SEND;
  wire [0:0]out_swbd_1_M03_SC_AR_INFO;
  wire [181:0]out_swbd_1_M03_SC_AR_PAYLD;
  wire [0:0]out_swbd_1_M03_SC_AR_RECV;
  wire [0:0]out_swbd_1_M03_SC_AR_REQ;
  wire [0:0]out_swbd_1_M03_SC_AR_SEND;
  wire [0:0]out_swbd_1_M03_SC_AW_INFO;
  wire [181:0]out_swbd_1_M03_SC_AW_PAYLD;
  wire [0:0]out_swbd_1_M03_SC_AW_RECV;
  wire [0:0]out_swbd_1_M03_SC_AW_REQ;
  wire [0:0]out_swbd_1_M03_SC_AW_SEND;
  wire [0:0]out_swbd_1_M03_SC_W_INFO;
  wire [68:0]out_swbd_1_M03_SC_W_PAYLD;
  wire [0:0]out_swbd_1_M03_SC_W_RECV;
  wire [0:0]out_swbd_1_M03_SC_W_REQ;
  wire [0:0]out_swbd_1_M03_SC_W_SEND;
  wire [0:0]out_swbd_1_M04_SC_AR_INFO;
  wire [181:0]out_swbd_1_M04_SC_AR_PAYLD;
  wire [0:0]out_swbd_1_M04_SC_AR_RECV;
  wire [0:0]out_swbd_1_M04_SC_AR_REQ;
  wire [0:0]out_swbd_1_M04_SC_AR_SEND;
  wire [0:0]out_swbd_1_M04_SC_AW_INFO;
  wire [181:0]out_swbd_1_M04_SC_AW_PAYLD;
  wire [0:0]out_swbd_1_M04_SC_AW_RECV;
  wire [0:0]out_swbd_1_M04_SC_AW_REQ;
  wire [0:0]out_swbd_1_M04_SC_AW_SEND;
  wire [0:0]out_swbd_1_M04_SC_W_INFO;
  wire [68:0]out_swbd_1_M04_SC_W_PAYLD;
  wire [0:0]out_swbd_1_M04_SC_W_RECV;
  wire [0:0]out_swbd_1_M04_SC_W_REQ;
  wire [0:0]out_swbd_1_M04_SC_W_SEND;
  wire [0:0]out_swbd_1_M05_SC_AR_INFO;
  wire [181:0]out_swbd_1_M05_SC_AR_PAYLD;
  wire [0:0]out_swbd_1_M05_SC_AR_RECV;
  wire [0:0]out_swbd_1_M05_SC_AR_REQ;
  wire [0:0]out_swbd_1_M05_SC_AR_SEND;
  wire [0:0]out_swbd_1_M05_SC_AW_INFO;
  wire [181:0]out_swbd_1_M05_SC_AW_PAYLD;
  wire [0:0]out_swbd_1_M05_SC_AW_RECV;
  wire [0:0]out_swbd_1_M05_SC_AW_REQ;
  wire [0:0]out_swbd_1_M05_SC_AW_SEND;
  wire [0:0]out_swbd_1_M05_SC_W_INFO;
  wire [68:0]out_swbd_1_M05_SC_W_PAYLD;
  wire [0:0]out_swbd_1_M05_SC_W_RECV;
  wire [0:0]out_swbd_1_M05_SC_W_REQ;
  wire [0:0]out_swbd_1_M05_SC_W_SEND;
  wire [0:0]out_swbd_1_M06_SC_AR_INFO;
  wire [181:0]out_swbd_1_M06_SC_AR_PAYLD;
  wire [0:0]out_swbd_1_M06_SC_AR_RECV;
  wire [0:0]out_swbd_1_M06_SC_AR_REQ;
  wire [0:0]out_swbd_1_M06_SC_AR_SEND;
  wire [0:0]out_swbd_1_M06_SC_AW_INFO;
  wire [181:0]out_swbd_1_M06_SC_AW_PAYLD;
  wire [0:0]out_swbd_1_M06_SC_AW_RECV;
  wire [0:0]out_swbd_1_M06_SC_AW_REQ;
  wire [0:0]out_swbd_1_M06_SC_AW_SEND;
  wire [0:0]out_swbd_1_M06_SC_W_INFO;
  wire [68:0]out_swbd_1_M06_SC_W_PAYLD;
  wire [0:0]out_swbd_1_M06_SC_W_RECV;
  wire [0:0]out_swbd_1_M06_SC_W_REQ;
  wire [0:0]out_swbd_1_M06_SC_W_SEND;
  wire [0:0]out_swbd_2_M00_SC_AR_INFO;
  wire [181:0]out_swbd_2_M00_SC_AR_PAYLD;
  wire [0:0]out_swbd_2_M00_SC_AR_RECV;
  wire [0:0]out_swbd_2_M00_SC_AR_REQ;
  wire [0:0]out_swbd_2_M00_SC_AR_SEND;
  wire [0:0]out_swbd_2_M00_SC_AW_INFO;
  wire [181:0]out_swbd_2_M00_SC_AW_PAYLD;
  wire [0:0]out_swbd_2_M00_SC_AW_RECV;
  wire [0:0]out_swbd_2_M00_SC_AW_REQ;
  wire [0:0]out_swbd_2_M00_SC_AW_SEND;
  wire [6:0]out_swbd_2_M00_SC_B_INFO;
  wire [8:0]out_swbd_2_M00_SC_B_PAYLD;
  wire [6:0]out_swbd_2_M00_SC_B_RECV;
  wire [6:0]out_swbd_2_M00_SC_B_REQ;
  wire [6:0]out_swbd_2_M00_SC_B_SEND;
  wire [6:0]out_swbd_2_M00_SC_R_INFO;
  wire [54:0]out_swbd_2_M00_SC_R_PAYLD;
  wire [6:0]out_swbd_2_M00_SC_R_RECV;
  wire [6:0]out_swbd_2_M00_SC_R_REQ;
  wire [6:0]out_swbd_2_M00_SC_R_SEND;
  wire [0:0]out_swbd_2_M00_SC_W_INFO;
  wire [68:0]out_swbd_2_M00_SC_W_PAYLD;
  wire [0:0]out_swbd_2_M00_SC_W_RECV;
  wire [0:0]out_swbd_2_M00_SC_W_REQ;
  wire [0:0]out_swbd_2_M00_SC_W_SEND;
  wire [0:0]out_swbd_2_M01_SC_AR_INFO;
  wire [181:0]out_swbd_2_M01_SC_AR_PAYLD;
  wire [0:0]out_swbd_2_M01_SC_AR_RECV;
  wire [0:0]out_swbd_2_M01_SC_AR_REQ;
  wire [0:0]out_swbd_2_M01_SC_AR_SEND;
  wire [0:0]out_swbd_2_M01_SC_AW_INFO;
  wire [181:0]out_swbd_2_M01_SC_AW_PAYLD;
  wire [0:0]out_swbd_2_M01_SC_AW_RECV;
  wire [0:0]out_swbd_2_M01_SC_AW_REQ;
  wire [0:0]out_swbd_2_M01_SC_AW_SEND;
  wire [0:0]out_swbd_2_M01_SC_W_INFO;
  wire [68:0]out_swbd_2_M01_SC_W_PAYLD;
  wire [0:0]out_swbd_2_M01_SC_W_RECV;
  wire [0:0]out_swbd_2_M01_SC_W_REQ;
  wire [0:0]out_swbd_2_M01_SC_W_SEND;
  wire [0:0]out_swbd_2_M02_SC_AR_INFO;
  wire [181:0]out_swbd_2_M02_SC_AR_PAYLD;
  wire [0:0]out_swbd_2_M02_SC_AR_RECV;
  wire [0:0]out_swbd_2_M02_SC_AR_REQ;
  wire [0:0]out_swbd_2_M02_SC_AR_SEND;
  wire [0:0]out_swbd_2_M02_SC_AW_INFO;
  wire [181:0]out_swbd_2_M02_SC_AW_PAYLD;
  wire [0:0]out_swbd_2_M02_SC_AW_RECV;
  wire [0:0]out_swbd_2_M02_SC_AW_REQ;
  wire [0:0]out_swbd_2_M02_SC_AW_SEND;
  wire [0:0]out_swbd_2_M02_SC_W_INFO;
  wire [68:0]out_swbd_2_M02_SC_W_PAYLD;
  wire [0:0]out_swbd_2_M02_SC_W_RECV;
  wire [0:0]out_swbd_2_M02_SC_W_REQ;
  wire [0:0]out_swbd_2_M02_SC_W_SEND;
  wire [0:0]out_swbd_2_M03_SC_AR_INFO;
  wire [181:0]out_swbd_2_M03_SC_AR_PAYLD;
  wire [0:0]out_swbd_2_M03_SC_AR_RECV;
  wire [0:0]out_swbd_2_M03_SC_AR_REQ;
  wire [0:0]out_swbd_2_M03_SC_AR_SEND;
  wire [0:0]out_swbd_2_M03_SC_AW_INFO;
  wire [181:0]out_swbd_2_M03_SC_AW_PAYLD;
  wire [0:0]out_swbd_2_M03_SC_AW_RECV;
  wire [0:0]out_swbd_2_M03_SC_AW_REQ;
  wire [0:0]out_swbd_2_M03_SC_AW_SEND;
  wire [0:0]out_swbd_2_M03_SC_W_INFO;
  wire [68:0]out_swbd_2_M03_SC_W_PAYLD;
  wire [0:0]out_swbd_2_M03_SC_W_RECV;
  wire [0:0]out_swbd_2_M03_SC_W_REQ;
  wire [0:0]out_swbd_2_M03_SC_W_SEND;
  wire [0:0]out_swbd_2_M04_SC_AR_INFO;
  wire [181:0]out_swbd_2_M04_SC_AR_PAYLD;
  wire [0:0]out_swbd_2_M04_SC_AR_RECV;
  wire [0:0]out_swbd_2_M04_SC_AR_REQ;
  wire [0:0]out_swbd_2_M04_SC_AR_SEND;
  wire [0:0]out_swbd_2_M04_SC_AW_INFO;
  wire [181:0]out_swbd_2_M04_SC_AW_PAYLD;
  wire [0:0]out_swbd_2_M04_SC_AW_RECV;
  wire [0:0]out_swbd_2_M04_SC_AW_REQ;
  wire [0:0]out_swbd_2_M04_SC_AW_SEND;
  wire [0:0]out_swbd_2_M04_SC_W_INFO;
  wire [68:0]out_swbd_2_M04_SC_W_PAYLD;
  wire [0:0]out_swbd_2_M04_SC_W_RECV;
  wire [0:0]out_swbd_2_M04_SC_W_REQ;
  wire [0:0]out_swbd_2_M04_SC_W_SEND;
  wire [0:0]out_swbd_2_M05_SC_AR_INFO;
  wire [181:0]out_swbd_2_M05_SC_AR_PAYLD;
  wire [0:0]out_swbd_2_M05_SC_AR_RECV;
  wire [0:0]out_swbd_2_M05_SC_AR_REQ;
  wire [0:0]out_swbd_2_M05_SC_AR_SEND;
  wire [0:0]out_swbd_2_M05_SC_AW_INFO;
  wire [181:0]out_swbd_2_M05_SC_AW_PAYLD;
  wire [0:0]out_swbd_2_M05_SC_AW_RECV;
  wire [0:0]out_swbd_2_M05_SC_AW_REQ;
  wire [0:0]out_swbd_2_M05_SC_AW_SEND;
  wire [0:0]out_swbd_2_M05_SC_W_INFO;
  wire [68:0]out_swbd_2_M05_SC_W_PAYLD;
  wire [0:0]out_swbd_2_M05_SC_W_RECV;
  wire [0:0]out_swbd_2_M05_SC_W_REQ;
  wire [0:0]out_swbd_2_M05_SC_W_SEND;
  wire [0:0]out_swbd_2_M06_SC_AR_INFO;
  wire [181:0]out_swbd_2_M06_SC_AR_PAYLD;
  wire [0:0]out_swbd_2_M06_SC_AR_RECV;
  wire [0:0]out_swbd_2_M06_SC_AR_REQ;
  wire [0:0]out_swbd_2_M06_SC_AR_SEND;
  wire [0:0]out_swbd_2_M06_SC_AW_INFO;
  wire [181:0]out_swbd_2_M06_SC_AW_PAYLD;
  wire [0:0]out_swbd_2_M06_SC_AW_RECV;
  wire [0:0]out_swbd_2_M06_SC_AW_REQ;
  wire [0:0]out_swbd_2_M06_SC_AW_SEND;
  wire [0:0]out_swbd_2_M06_SC_W_INFO;
  wire [68:0]out_swbd_2_M06_SC_W_PAYLD;
  wire [0:0]out_swbd_2_M06_SC_W_RECV;
  wire [0:0]out_swbd_2_M06_SC_W_REQ;
  wire [0:0]out_swbd_2_M06_SC_W_SEND;
  wire [0:0]out_swbd_3_M00_SC_AR_INFO;
  wire [181:0]out_swbd_3_M00_SC_AR_PAYLD;
  wire [0:0]out_swbd_3_M00_SC_AR_RECV;
  wire [0:0]out_swbd_3_M00_SC_AR_REQ;
  wire [0:0]out_swbd_3_M00_SC_AR_SEND;
  wire [0:0]out_swbd_3_M00_SC_AW_INFO;
  wire [181:0]out_swbd_3_M00_SC_AW_PAYLD;
  wire [0:0]out_swbd_3_M00_SC_AW_RECV;
  wire [0:0]out_swbd_3_M00_SC_AW_REQ;
  wire [0:0]out_swbd_3_M00_SC_AW_SEND;
  wire [5:0]out_swbd_3_M00_SC_B_INFO;
  wire [8:0]out_swbd_3_M00_SC_B_PAYLD;
  wire [5:0]out_swbd_3_M00_SC_B_RECV;
  wire [5:0]out_swbd_3_M00_SC_B_REQ;
  wire [5:0]out_swbd_3_M00_SC_B_SEND;
  wire [5:0]out_swbd_3_M00_SC_R_INFO;
  wire [54:0]out_swbd_3_M00_SC_R_PAYLD;
  wire [5:0]out_swbd_3_M00_SC_R_RECV;
  wire [5:0]out_swbd_3_M00_SC_R_REQ;
  wire [5:0]out_swbd_3_M00_SC_R_SEND;
  wire [0:0]out_swbd_3_M00_SC_W_INFO;
  wire [68:0]out_swbd_3_M00_SC_W_PAYLD;
  wire [0:0]out_swbd_3_M00_SC_W_RECV;
  wire [0:0]out_swbd_3_M00_SC_W_REQ;
  wire [0:0]out_swbd_3_M00_SC_W_SEND;
  wire [0:0]out_swbd_3_M01_SC_AR_INFO;
  wire [181:0]out_swbd_3_M01_SC_AR_PAYLD;
  wire [0:0]out_swbd_3_M01_SC_AR_RECV;
  wire [0:0]out_swbd_3_M01_SC_AR_REQ;
  wire [0:0]out_swbd_3_M01_SC_AR_SEND;
  wire [0:0]out_swbd_3_M01_SC_AW_INFO;
  wire [181:0]out_swbd_3_M01_SC_AW_PAYLD;
  wire [0:0]out_swbd_3_M01_SC_AW_RECV;
  wire [0:0]out_swbd_3_M01_SC_AW_REQ;
  wire [0:0]out_swbd_3_M01_SC_AW_SEND;
  wire [0:0]out_swbd_3_M01_SC_W_INFO;
  wire [68:0]out_swbd_3_M01_SC_W_PAYLD;
  wire [0:0]out_swbd_3_M01_SC_W_RECV;
  wire [0:0]out_swbd_3_M01_SC_W_REQ;
  wire [0:0]out_swbd_3_M01_SC_W_SEND;
  wire [0:0]out_swbd_3_M02_SC_AR_INFO;
  wire [181:0]out_swbd_3_M02_SC_AR_PAYLD;
  wire [0:0]out_swbd_3_M02_SC_AR_RECV;
  wire [0:0]out_swbd_3_M02_SC_AR_REQ;
  wire [0:0]out_swbd_3_M02_SC_AR_SEND;
  wire [0:0]out_swbd_3_M02_SC_AW_INFO;
  wire [181:0]out_swbd_3_M02_SC_AW_PAYLD;
  wire [0:0]out_swbd_3_M02_SC_AW_RECV;
  wire [0:0]out_swbd_3_M02_SC_AW_REQ;
  wire [0:0]out_swbd_3_M02_SC_AW_SEND;
  wire [0:0]out_swbd_3_M02_SC_W_INFO;
  wire [68:0]out_swbd_3_M02_SC_W_PAYLD;
  wire [0:0]out_swbd_3_M02_SC_W_RECV;
  wire [0:0]out_swbd_3_M02_SC_W_REQ;
  wire [0:0]out_swbd_3_M02_SC_W_SEND;
  wire [0:0]out_swbd_3_M03_SC_AR_INFO;
  wire [181:0]out_swbd_3_M03_SC_AR_PAYLD;
  wire [0:0]out_swbd_3_M03_SC_AR_RECV;
  wire [0:0]out_swbd_3_M03_SC_AR_REQ;
  wire [0:0]out_swbd_3_M03_SC_AR_SEND;
  wire [0:0]out_swbd_3_M03_SC_AW_INFO;
  wire [181:0]out_swbd_3_M03_SC_AW_PAYLD;
  wire [0:0]out_swbd_3_M03_SC_AW_RECV;
  wire [0:0]out_swbd_3_M03_SC_AW_REQ;
  wire [0:0]out_swbd_3_M03_SC_AW_SEND;
  wire [0:0]out_swbd_3_M03_SC_W_INFO;
  wire [68:0]out_swbd_3_M03_SC_W_PAYLD;
  wire [0:0]out_swbd_3_M03_SC_W_RECV;
  wire [0:0]out_swbd_3_M03_SC_W_REQ;
  wire [0:0]out_swbd_3_M03_SC_W_SEND;
  wire [0:0]out_swbd_3_M04_SC_AR_INFO;
  wire [181:0]out_swbd_3_M04_SC_AR_PAYLD;
  wire [0:0]out_swbd_3_M04_SC_AR_RECV;
  wire [0:0]out_swbd_3_M04_SC_AR_REQ;
  wire [0:0]out_swbd_3_M04_SC_AR_SEND;
  wire [0:0]out_swbd_3_M04_SC_AW_INFO;
  wire [181:0]out_swbd_3_M04_SC_AW_PAYLD;
  wire [0:0]out_swbd_3_M04_SC_AW_RECV;
  wire [0:0]out_swbd_3_M04_SC_AW_REQ;
  wire [0:0]out_swbd_3_M04_SC_AW_SEND;
  wire [0:0]out_swbd_3_M04_SC_W_INFO;
  wire [68:0]out_swbd_3_M04_SC_W_PAYLD;
  wire [0:0]out_swbd_3_M04_SC_W_RECV;
  wire [0:0]out_swbd_3_M04_SC_W_REQ;
  wire [0:0]out_swbd_3_M04_SC_W_SEND;
  wire [0:0]out_swbd_3_M05_SC_AR_INFO;
  wire [181:0]out_swbd_3_M05_SC_AR_PAYLD;
  wire [0:0]out_swbd_3_M05_SC_AR_RECV;
  wire [0:0]out_swbd_3_M05_SC_AR_REQ;
  wire [0:0]out_swbd_3_M05_SC_AR_SEND;
  wire [0:0]out_swbd_3_M05_SC_AW_INFO;
  wire [181:0]out_swbd_3_M05_SC_AW_PAYLD;
  wire [0:0]out_swbd_3_M05_SC_AW_RECV;
  wire [0:0]out_swbd_3_M05_SC_AW_REQ;
  wire [0:0]out_swbd_3_M05_SC_AW_SEND;
  wire [0:0]out_swbd_3_M05_SC_W_INFO;
  wire [68:0]out_swbd_3_M05_SC_W_PAYLD;
  wire [0:0]out_swbd_3_M05_SC_W_RECV;
  wire [0:0]out_swbd_3_M05_SC_W_REQ;
  wire [0:0]out_swbd_3_M05_SC_W_SEND;
  wire [0:0]out_swbd_4_M00_SC_AR_INFO;
  wire [181:0]out_swbd_4_M00_SC_AR_PAYLD;
  wire [0:0]out_swbd_4_M00_SC_AR_RECV;
  wire [0:0]out_swbd_4_M00_SC_AR_REQ;
  wire [0:0]out_swbd_4_M00_SC_AR_SEND;
  wire [0:0]out_swbd_4_M00_SC_AW_INFO;
  wire [181:0]out_swbd_4_M00_SC_AW_PAYLD;
  wire [0:0]out_swbd_4_M00_SC_AW_RECV;
  wire [0:0]out_swbd_4_M00_SC_AW_REQ;
  wire [0:0]out_swbd_4_M00_SC_AW_SEND;
  wire [5:0]out_swbd_4_M00_SC_B_INFO;
  wire [8:0]out_swbd_4_M00_SC_B_PAYLD;
  wire [5:0]out_swbd_4_M00_SC_B_RECV;
  wire [5:0]out_swbd_4_M00_SC_B_REQ;
  wire [5:0]out_swbd_4_M00_SC_B_SEND;
  wire [5:0]out_swbd_4_M00_SC_R_INFO;
  wire [54:0]out_swbd_4_M00_SC_R_PAYLD;
  wire [5:0]out_swbd_4_M00_SC_R_RECV;
  wire [5:0]out_swbd_4_M00_SC_R_REQ;
  wire [5:0]out_swbd_4_M00_SC_R_SEND;
  wire [0:0]out_swbd_4_M00_SC_W_INFO;
  wire [68:0]out_swbd_4_M00_SC_W_PAYLD;
  wire [0:0]out_swbd_4_M00_SC_W_RECV;
  wire [0:0]out_swbd_4_M00_SC_W_REQ;
  wire [0:0]out_swbd_4_M00_SC_W_SEND;
  wire [0:0]out_swbd_4_M01_SC_AR_INFO;
  wire [181:0]out_swbd_4_M01_SC_AR_PAYLD;
  wire [0:0]out_swbd_4_M01_SC_AR_RECV;
  wire [0:0]out_swbd_4_M01_SC_AR_REQ;
  wire [0:0]out_swbd_4_M01_SC_AR_SEND;
  wire [0:0]out_swbd_4_M01_SC_AW_INFO;
  wire [181:0]out_swbd_4_M01_SC_AW_PAYLD;
  wire [0:0]out_swbd_4_M01_SC_AW_RECV;
  wire [0:0]out_swbd_4_M01_SC_AW_REQ;
  wire [0:0]out_swbd_4_M01_SC_AW_SEND;
  wire [0:0]out_swbd_4_M01_SC_W_INFO;
  wire [68:0]out_swbd_4_M01_SC_W_PAYLD;
  wire [0:0]out_swbd_4_M01_SC_W_RECV;
  wire [0:0]out_swbd_4_M01_SC_W_REQ;
  wire [0:0]out_swbd_4_M01_SC_W_SEND;
  wire [0:0]out_swbd_4_M02_SC_AR_INFO;
  wire [181:0]out_swbd_4_M02_SC_AR_PAYLD;
  wire [0:0]out_swbd_4_M02_SC_AR_RECV;
  wire [0:0]out_swbd_4_M02_SC_AR_REQ;
  wire [0:0]out_swbd_4_M02_SC_AR_SEND;
  wire [0:0]out_swbd_4_M02_SC_AW_INFO;
  wire [181:0]out_swbd_4_M02_SC_AW_PAYLD;
  wire [0:0]out_swbd_4_M02_SC_AW_RECV;
  wire [0:0]out_swbd_4_M02_SC_AW_REQ;
  wire [0:0]out_swbd_4_M02_SC_AW_SEND;
  wire [0:0]out_swbd_4_M02_SC_W_INFO;
  wire [68:0]out_swbd_4_M02_SC_W_PAYLD;
  wire [0:0]out_swbd_4_M02_SC_W_RECV;
  wire [0:0]out_swbd_4_M02_SC_W_REQ;
  wire [0:0]out_swbd_4_M02_SC_W_SEND;
  wire [0:0]out_swbd_4_M03_SC_AR_INFO;
  wire [181:0]out_swbd_4_M03_SC_AR_PAYLD;
  wire [0:0]out_swbd_4_M03_SC_AR_RECV;
  wire [0:0]out_swbd_4_M03_SC_AR_REQ;
  wire [0:0]out_swbd_4_M03_SC_AR_SEND;
  wire [0:0]out_swbd_4_M03_SC_AW_INFO;
  wire [181:0]out_swbd_4_M03_SC_AW_PAYLD;
  wire [0:0]out_swbd_4_M03_SC_AW_RECV;
  wire [0:0]out_swbd_4_M03_SC_AW_REQ;
  wire [0:0]out_swbd_4_M03_SC_AW_SEND;
  wire [0:0]out_swbd_4_M03_SC_W_INFO;
  wire [68:0]out_swbd_4_M03_SC_W_PAYLD;
  wire [0:0]out_swbd_4_M03_SC_W_RECV;
  wire [0:0]out_swbd_4_M03_SC_W_REQ;
  wire [0:0]out_swbd_4_M03_SC_W_SEND;
  wire [0:0]out_swbd_4_M04_SC_AR_INFO;
  wire [181:0]out_swbd_4_M04_SC_AR_PAYLD;
  wire [0:0]out_swbd_4_M04_SC_AR_RECV;
  wire [0:0]out_swbd_4_M04_SC_AR_REQ;
  wire [0:0]out_swbd_4_M04_SC_AR_SEND;
  wire [0:0]out_swbd_4_M04_SC_AW_INFO;
  wire [181:0]out_swbd_4_M04_SC_AW_PAYLD;
  wire [0:0]out_swbd_4_M04_SC_AW_RECV;
  wire [0:0]out_swbd_4_M04_SC_AW_REQ;
  wire [0:0]out_swbd_4_M04_SC_AW_SEND;
  wire [0:0]out_swbd_4_M04_SC_W_INFO;
  wire [68:0]out_swbd_4_M04_SC_W_PAYLD;
  wire [0:0]out_swbd_4_M04_SC_W_RECV;
  wire [0:0]out_swbd_4_M04_SC_W_REQ;
  wire [0:0]out_swbd_4_M04_SC_W_SEND;
  wire [0:0]out_swbd_4_M05_SC_AR_INFO;
  wire [181:0]out_swbd_4_M05_SC_AR_PAYLD;
  wire [0:0]out_swbd_4_M05_SC_AR_RECV;
  wire [0:0]out_swbd_4_M05_SC_AR_REQ;
  wire [0:0]out_swbd_4_M05_SC_AR_SEND;
  wire [0:0]out_swbd_4_M05_SC_AW_INFO;
  wire [181:0]out_swbd_4_M05_SC_AW_PAYLD;
  wire [0:0]out_swbd_4_M05_SC_AW_RECV;
  wire [0:0]out_swbd_4_M05_SC_AW_REQ;
  wire [0:0]out_swbd_4_M05_SC_AW_SEND;
  wire [0:0]out_swbd_4_M05_SC_W_INFO;
  wire [68:0]out_swbd_4_M05_SC_W_PAYLD;
  wire [0:0]out_swbd_4_M05_SC_W_RECV;
  wire [0:0]out_swbd_4_M05_SC_W_REQ;
  wire [0:0]out_swbd_4_M05_SC_W_SEND;
  wire [0:0]out_swbd_5_M00_SC_AR_INFO;
  wire [181:0]out_swbd_5_M00_SC_AR_PAYLD;
  wire [0:0]out_swbd_5_M00_SC_AR_RECV;
  wire [0:0]out_swbd_5_M00_SC_AR_REQ;
  wire [0:0]out_swbd_5_M00_SC_AR_SEND;
  wire [0:0]out_swbd_5_M00_SC_AW_INFO;
  wire [181:0]out_swbd_5_M00_SC_AW_PAYLD;
  wire [0:0]out_swbd_5_M00_SC_AW_RECV;
  wire [0:0]out_swbd_5_M00_SC_AW_REQ;
  wire [0:0]out_swbd_5_M00_SC_AW_SEND;
  wire [5:0]out_swbd_5_M00_SC_B_INFO;
  wire [8:0]out_swbd_5_M00_SC_B_PAYLD;
  wire [5:0]out_swbd_5_M00_SC_B_RECV;
  wire [5:0]out_swbd_5_M00_SC_B_REQ;
  wire [5:0]out_swbd_5_M00_SC_B_SEND;
  wire [5:0]out_swbd_5_M00_SC_R_INFO;
  wire [54:0]out_swbd_5_M00_SC_R_PAYLD;
  wire [5:0]out_swbd_5_M00_SC_R_RECV;
  wire [5:0]out_swbd_5_M00_SC_R_REQ;
  wire [5:0]out_swbd_5_M00_SC_R_SEND;
  wire [0:0]out_swbd_5_M00_SC_W_INFO;
  wire [68:0]out_swbd_5_M00_SC_W_PAYLD;
  wire [0:0]out_swbd_5_M00_SC_W_RECV;
  wire [0:0]out_swbd_5_M00_SC_W_REQ;
  wire [0:0]out_swbd_5_M00_SC_W_SEND;
  wire [0:0]out_swbd_5_M01_SC_AR_INFO;
  wire [181:0]out_swbd_5_M01_SC_AR_PAYLD;
  wire [0:0]out_swbd_5_M01_SC_AR_RECV;
  wire [0:0]out_swbd_5_M01_SC_AR_REQ;
  wire [0:0]out_swbd_5_M01_SC_AR_SEND;
  wire [0:0]out_swbd_5_M01_SC_AW_INFO;
  wire [181:0]out_swbd_5_M01_SC_AW_PAYLD;
  wire [0:0]out_swbd_5_M01_SC_AW_RECV;
  wire [0:0]out_swbd_5_M01_SC_AW_REQ;
  wire [0:0]out_swbd_5_M01_SC_AW_SEND;
  wire [0:0]out_swbd_5_M01_SC_W_INFO;
  wire [68:0]out_swbd_5_M01_SC_W_PAYLD;
  wire [0:0]out_swbd_5_M01_SC_W_RECV;
  wire [0:0]out_swbd_5_M01_SC_W_REQ;
  wire [0:0]out_swbd_5_M01_SC_W_SEND;
  wire [0:0]out_swbd_5_M02_SC_AR_INFO;
  wire [181:0]out_swbd_5_M02_SC_AR_PAYLD;
  wire [0:0]out_swbd_5_M02_SC_AR_RECV;
  wire [0:0]out_swbd_5_M02_SC_AR_REQ;
  wire [0:0]out_swbd_5_M02_SC_AR_SEND;
  wire [0:0]out_swbd_5_M02_SC_AW_INFO;
  wire [181:0]out_swbd_5_M02_SC_AW_PAYLD;
  wire [0:0]out_swbd_5_M02_SC_AW_RECV;
  wire [0:0]out_swbd_5_M02_SC_AW_REQ;
  wire [0:0]out_swbd_5_M02_SC_AW_SEND;
  wire [0:0]out_swbd_5_M02_SC_W_INFO;
  wire [68:0]out_swbd_5_M02_SC_W_PAYLD;
  wire [0:0]out_swbd_5_M02_SC_W_RECV;
  wire [0:0]out_swbd_5_M02_SC_W_REQ;
  wire [0:0]out_swbd_5_M02_SC_W_SEND;
  wire [0:0]out_swbd_5_M03_SC_AR_INFO;
  wire [181:0]out_swbd_5_M03_SC_AR_PAYLD;
  wire [0:0]out_swbd_5_M03_SC_AR_RECV;
  wire [0:0]out_swbd_5_M03_SC_AR_REQ;
  wire [0:0]out_swbd_5_M03_SC_AR_SEND;
  wire [0:0]out_swbd_5_M03_SC_AW_INFO;
  wire [181:0]out_swbd_5_M03_SC_AW_PAYLD;
  wire [0:0]out_swbd_5_M03_SC_AW_RECV;
  wire [0:0]out_swbd_5_M03_SC_AW_REQ;
  wire [0:0]out_swbd_5_M03_SC_AW_SEND;
  wire [0:0]out_swbd_5_M03_SC_W_INFO;
  wire [68:0]out_swbd_5_M03_SC_W_PAYLD;
  wire [0:0]out_swbd_5_M03_SC_W_RECV;
  wire [0:0]out_swbd_5_M03_SC_W_REQ;
  wire [0:0]out_swbd_5_M03_SC_W_SEND;
  wire [0:0]out_swbd_5_M04_SC_AR_INFO;
  wire [181:0]out_swbd_5_M04_SC_AR_PAYLD;
  wire [0:0]out_swbd_5_M04_SC_AR_RECV;
  wire [0:0]out_swbd_5_M04_SC_AR_REQ;
  wire [0:0]out_swbd_5_M04_SC_AR_SEND;
  wire [0:0]out_swbd_5_M04_SC_AW_INFO;
  wire [181:0]out_swbd_5_M04_SC_AW_PAYLD;
  wire [0:0]out_swbd_5_M04_SC_AW_RECV;
  wire [0:0]out_swbd_5_M04_SC_AW_REQ;
  wire [0:0]out_swbd_5_M04_SC_AW_SEND;
  wire [0:0]out_swbd_5_M04_SC_W_INFO;
  wire [68:0]out_swbd_5_M04_SC_W_PAYLD;
  wire [0:0]out_swbd_5_M04_SC_W_RECV;
  wire [0:0]out_swbd_5_M04_SC_W_REQ;
  wire [0:0]out_swbd_5_M04_SC_W_SEND;
  wire [0:0]out_swbd_5_M05_SC_AR_INFO;
  wire [181:0]out_swbd_5_M05_SC_AR_PAYLD;
  wire [0:0]out_swbd_5_M05_SC_AR_RECV;
  wire [0:0]out_swbd_5_M05_SC_AR_REQ;
  wire [0:0]out_swbd_5_M05_SC_AR_SEND;
  wire [0:0]out_swbd_5_M05_SC_AW_INFO;
  wire [181:0]out_swbd_5_M05_SC_AW_PAYLD;
  wire [0:0]out_swbd_5_M05_SC_AW_RECV;
  wire [0:0]out_swbd_5_M05_SC_AW_REQ;
  wire [0:0]out_swbd_5_M05_SC_AW_SEND;
  wire [0:0]out_swbd_5_M05_SC_W_INFO;
  wire [68:0]out_swbd_5_M05_SC_W_PAYLD;
  wire [0:0]out_swbd_5_M05_SC_W_RECV;
  wire [0:0]out_swbd_5_M05_SC_W_REQ;
  wire [0:0]out_swbd_5_M05_SC_W_SEND;
  wire [0:0]out_swbd_6_M00_SC_AR_INFO;
  wire [181:0]out_swbd_6_M00_SC_AR_PAYLD;
  wire [0:0]out_swbd_6_M00_SC_AR_RECV;
  wire [0:0]out_swbd_6_M00_SC_AR_REQ;
  wire [0:0]out_swbd_6_M00_SC_AR_SEND;
  wire [0:0]out_swbd_6_M00_SC_AW_INFO;
  wire [181:0]out_swbd_6_M00_SC_AW_PAYLD;
  wire [0:0]out_swbd_6_M00_SC_AW_RECV;
  wire [0:0]out_swbd_6_M00_SC_AW_REQ;
  wire [0:0]out_swbd_6_M00_SC_AW_SEND;
  wire [5:0]out_swbd_6_M00_SC_B_INFO;
  wire [8:0]out_swbd_6_M00_SC_B_PAYLD;
  wire [5:0]out_swbd_6_M00_SC_B_RECV;
  wire [5:0]out_swbd_6_M00_SC_B_REQ;
  wire [5:0]out_swbd_6_M00_SC_B_SEND;
  wire [5:0]out_swbd_6_M00_SC_R_INFO;
  wire [54:0]out_swbd_6_M00_SC_R_PAYLD;
  wire [5:0]out_swbd_6_M00_SC_R_RECV;
  wire [5:0]out_swbd_6_M00_SC_R_REQ;
  wire [5:0]out_swbd_6_M00_SC_R_SEND;
  wire [0:0]out_swbd_6_M00_SC_W_INFO;
  wire [68:0]out_swbd_6_M00_SC_W_PAYLD;
  wire [0:0]out_swbd_6_M00_SC_W_RECV;
  wire [0:0]out_swbd_6_M00_SC_W_REQ;
  wire [0:0]out_swbd_6_M00_SC_W_SEND;
  wire [0:0]out_swbd_6_M01_SC_AR_INFO;
  wire [181:0]out_swbd_6_M01_SC_AR_PAYLD;
  wire [0:0]out_swbd_6_M01_SC_AR_RECV;
  wire [0:0]out_swbd_6_M01_SC_AR_REQ;
  wire [0:0]out_swbd_6_M01_SC_AR_SEND;
  wire [0:0]out_swbd_6_M01_SC_AW_INFO;
  wire [181:0]out_swbd_6_M01_SC_AW_PAYLD;
  wire [0:0]out_swbd_6_M01_SC_AW_RECV;
  wire [0:0]out_swbd_6_M01_SC_AW_REQ;
  wire [0:0]out_swbd_6_M01_SC_AW_SEND;
  wire [0:0]out_swbd_6_M01_SC_W_INFO;
  wire [68:0]out_swbd_6_M01_SC_W_PAYLD;
  wire [0:0]out_swbd_6_M01_SC_W_RECV;
  wire [0:0]out_swbd_6_M01_SC_W_REQ;
  wire [0:0]out_swbd_6_M01_SC_W_SEND;
  wire [0:0]out_swbd_6_M02_SC_AR_INFO;
  wire [181:0]out_swbd_6_M02_SC_AR_PAYLD;
  wire [0:0]out_swbd_6_M02_SC_AR_RECV;
  wire [0:0]out_swbd_6_M02_SC_AR_REQ;
  wire [0:0]out_swbd_6_M02_SC_AR_SEND;
  wire [0:0]out_swbd_6_M02_SC_AW_INFO;
  wire [181:0]out_swbd_6_M02_SC_AW_PAYLD;
  wire [0:0]out_swbd_6_M02_SC_AW_RECV;
  wire [0:0]out_swbd_6_M02_SC_AW_REQ;
  wire [0:0]out_swbd_6_M02_SC_AW_SEND;
  wire [0:0]out_swbd_6_M02_SC_W_INFO;
  wire [68:0]out_swbd_6_M02_SC_W_PAYLD;
  wire [0:0]out_swbd_6_M02_SC_W_RECV;
  wire [0:0]out_swbd_6_M02_SC_W_REQ;
  wire [0:0]out_swbd_6_M02_SC_W_SEND;
  wire [0:0]out_swbd_6_M03_SC_AR_INFO;
  wire [181:0]out_swbd_6_M03_SC_AR_PAYLD;
  wire [0:0]out_swbd_6_M03_SC_AR_RECV;
  wire [0:0]out_swbd_6_M03_SC_AR_REQ;
  wire [0:0]out_swbd_6_M03_SC_AR_SEND;
  wire [0:0]out_swbd_6_M03_SC_AW_INFO;
  wire [181:0]out_swbd_6_M03_SC_AW_PAYLD;
  wire [0:0]out_swbd_6_M03_SC_AW_RECV;
  wire [0:0]out_swbd_6_M03_SC_AW_REQ;
  wire [0:0]out_swbd_6_M03_SC_AW_SEND;
  wire [0:0]out_swbd_6_M03_SC_W_INFO;
  wire [68:0]out_swbd_6_M03_SC_W_PAYLD;
  wire [0:0]out_swbd_6_M03_SC_W_RECV;
  wire [0:0]out_swbd_6_M03_SC_W_REQ;
  wire [0:0]out_swbd_6_M03_SC_W_SEND;
  wire [0:0]out_swbd_6_M04_SC_AR_INFO;
  wire [181:0]out_swbd_6_M04_SC_AR_PAYLD;
  wire [0:0]out_swbd_6_M04_SC_AR_RECV;
  wire [0:0]out_swbd_6_M04_SC_AR_REQ;
  wire [0:0]out_swbd_6_M04_SC_AR_SEND;
  wire [0:0]out_swbd_6_M04_SC_AW_INFO;
  wire [181:0]out_swbd_6_M04_SC_AW_PAYLD;
  wire [0:0]out_swbd_6_M04_SC_AW_RECV;
  wire [0:0]out_swbd_6_M04_SC_AW_REQ;
  wire [0:0]out_swbd_6_M04_SC_AW_SEND;
  wire [0:0]out_swbd_6_M04_SC_W_INFO;
  wire [68:0]out_swbd_6_M04_SC_W_PAYLD;
  wire [0:0]out_swbd_6_M04_SC_W_RECV;
  wire [0:0]out_swbd_6_M04_SC_W_REQ;
  wire [0:0]out_swbd_6_M04_SC_W_SEND;
  wire [0:0]out_swbd_6_M05_SC_AR_INFO;
  wire [181:0]out_swbd_6_M05_SC_AR_PAYLD;
  wire [0:0]out_swbd_6_M05_SC_AR_RECV;
  wire [0:0]out_swbd_6_M05_SC_AR_REQ;
  wire [0:0]out_swbd_6_M05_SC_AR_SEND;
  wire [0:0]out_swbd_6_M05_SC_AW_INFO;
  wire [181:0]out_swbd_6_M05_SC_AW_PAYLD;
  wire [0:0]out_swbd_6_M05_SC_AW_RECV;
  wire [0:0]out_swbd_6_M05_SC_AW_REQ;
  wire [0:0]out_swbd_6_M05_SC_AW_SEND;
  wire [0:0]out_swbd_6_M05_SC_W_INFO;
  wire [68:0]out_swbd_6_M05_SC_W_PAYLD;
  wire [0:0]out_swbd_6_M05_SC_W_RECV;
  wire [0:0]out_swbd_6_M05_SC_W_REQ;
  wire [0:0]out_swbd_6_M05_SC_W_SEND;
  wire [0:0]out_swbd_7_M00_SC_AR_INFO;
  wire [181:0]out_swbd_7_M00_SC_AR_PAYLD;
  wire [0:0]out_swbd_7_M00_SC_AR_RECV;
  wire [0:0]out_swbd_7_M00_SC_AR_REQ;
  wire [0:0]out_swbd_7_M00_SC_AR_SEND;
  wire [0:0]out_swbd_7_M00_SC_AW_INFO;
  wire [181:0]out_swbd_7_M00_SC_AW_PAYLD;
  wire [0:0]out_swbd_7_M00_SC_AW_RECV;
  wire [0:0]out_swbd_7_M00_SC_AW_REQ;
  wire [0:0]out_swbd_7_M00_SC_AW_SEND;
  wire [5:0]out_swbd_7_M00_SC_B_INFO;
  wire [8:0]out_swbd_7_M00_SC_B_PAYLD;
  wire [5:0]out_swbd_7_M00_SC_B_RECV;
  wire [5:0]out_swbd_7_M00_SC_B_REQ;
  wire [5:0]out_swbd_7_M00_SC_B_SEND;
  wire [5:0]out_swbd_7_M00_SC_R_INFO;
  wire [54:0]out_swbd_7_M00_SC_R_PAYLD;
  wire [5:0]out_swbd_7_M00_SC_R_RECV;
  wire [5:0]out_swbd_7_M00_SC_R_REQ;
  wire [5:0]out_swbd_7_M00_SC_R_SEND;
  wire [0:0]out_swbd_7_M00_SC_W_INFO;
  wire [68:0]out_swbd_7_M00_SC_W_PAYLD;
  wire [0:0]out_swbd_7_M00_SC_W_RECV;
  wire [0:0]out_swbd_7_M00_SC_W_REQ;
  wire [0:0]out_swbd_7_M00_SC_W_SEND;
  wire [0:0]out_swbd_7_M01_SC_AR_INFO;
  wire [181:0]out_swbd_7_M01_SC_AR_PAYLD;
  wire [0:0]out_swbd_7_M01_SC_AR_RECV;
  wire [0:0]out_swbd_7_M01_SC_AR_REQ;
  wire [0:0]out_swbd_7_M01_SC_AR_SEND;
  wire [0:0]out_swbd_7_M01_SC_AW_INFO;
  wire [181:0]out_swbd_7_M01_SC_AW_PAYLD;
  wire [0:0]out_swbd_7_M01_SC_AW_RECV;
  wire [0:0]out_swbd_7_M01_SC_AW_REQ;
  wire [0:0]out_swbd_7_M01_SC_AW_SEND;
  wire [0:0]out_swbd_7_M01_SC_W_INFO;
  wire [68:0]out_swbd_7_M01_SC_W_PAYLD;
  wire [0:0]out_swbd_7_M01_SC_W_RECV;
  wire [0:0]out_swbd_7_M01_SC_W_REQ;
  wire [0:0]out_swbd_7_M01_SC_W_SEND;
  wire [0:0]out_swbd_7_M02_SC_AR_INFO;
  wire [181:0]out_swbd_7_M02_SC_AR_PAYLD;
  wire [0:0]out_swbd_7_M02_SC_AR_RECV;
  wire [0:0]out_swbd_7_M02_SC_AR_REQ;
  wire [0:0]out_swbd_7_M02_SC_AR_SEND;
  wire [0:0]out_swbd_7_M02_SC_AW_INFO;
  wire [181:0]out_swbd_7_M02_SC_AW_PAYLD;
  wire [0:0]out_swbd_7_M02_SC_AW_RECV;
  wire [0:0]out_swbd_7_M02_SC_AW_REQ;
  wire [0:0]out_swbd_7_M02_SC_AW_SEND;
  wire [0:0]out_swbd_7_M02_SC_W_INFO;
  wire [68:0]out_swbd_7_M02_SC_W_PAYLD;
  wire [0:0]out_swbd_7_M02_SC_W_RECV;
  wire [0:0]out_swbd_7_M02_SC_W_REQ;
  wire [0:0]out_swbd_7_M02_SC_W_SEND;
  wire [0:0]out_swbd_7_M03_SC_AR_INFO;
  wire [181:0]out_swbd_7_M03_SC_AR_PAYLD;
  wire [0:0]out_swbd_7_M03_SC_AR_RECV;
  wire [0:0]out_swbd_7_M03_SC_AR_REQ;
  wire [0:0]out_swbd_7_M03_SC_AR_SEND;
  wire [0:0]out_swbd_7_M03_SC_AW_INFO;
  wire [181:0]out_swbd_7_M03_SC_AW_PAYLD;
  wire [0:0]out_swbd_7_M03_SC_AW_RECV;
  wire [0:0]out_swbd_7_M03_SC_AW_REQ;
  wire [0:0]out_swbd_7_M03_SC_AW_SEND;
  wire [0:0]out_swbd_7_M03_SC_W_INFO;
  wire [68:0]out_swbd_7_M03_SC_W_PAYLD;
  wire [0:0]out_swbd_7_M03_SC_W_RECV;
  wire [0:0]out_swbd_7_M03_SC_W_REQ;
  wire [0:0]out_swbd_7_M03_SC_W_SEND;
  wire [0:0]out_swbd_7_M04_SC_AR_INFO;
  wire [181:0]out_swbd_7_M04_SC_AR_PAYLD;
  wire [0:0]out_swbd_7_M04_SC_AR_RECV;
  wire [0:0]out_swbd_7_M04_SC_AR_REQ;
  wire [0:0]out_swbd_7_M04_SC_AR_SEND;
  wire [0:0]out_swbd_7_M04_SC_AW_INFO;
  wire [181:0]out_swbd_7_M04_SC_AW_PAYLD;
  wire [0:0]out_swbd_7_M04_SC_AW_RECV;
  wire [0:0]out_swbd_7_M04_SC_AW_REQ;
  wire [0:0]out_swbd_7_M04_SC_AW_SEND;
  wire [0:0]out_swbd_7_M04_SC_W_INFO;
  wire [68:0]out_swbd_7_M04_SC_W_PAYLD;
  wire [0:0]out_swbd_7_M04_SC_W_RECV;
  wire [0:0]out_swbd_7_M04_SC_W_REQ;
  wire [0:0]out_swbd_7_M04_SC_W_SEND;
  wire [0:0]out_swbd_7_M05_SC_AR_INFO;
  wire [181:0]out_swbd_7_M05_SC_AR_PAYLD;
  wire [0:0]out_swbd_7_M05_SC_AR_RECV;
  wire [0:0]out_swbd_7_M05_SC_AR_REQ;
  wire [0:0]out_swbd_7_M05_SC_AR_SEND;
  wire [0:0]out_swbd_7_M05_SC_AW_INFO;
  wire [181:0]out_swbd_7_M05_SC_AW_PAYLD;
  wire [0:0]out_swbd_7_M05_SC_AW_RECV;
  wire [0:0]out_swbd_7_M05_SC_AW_REQ;
  wire [0:0]out_swbd_7_M05_SC_AW_SEND;
  wire [0:0]out_swbd_7_M05_SC_W_INFO;
  wire [68:0]out_swbd_7_M05_SC_W_PAYLD;
  wire [0:0]out_swbd_7_M05_SC_W_RECV;
  wire [0:0]out_swbd_7_M05_SC_W_REQ;
  wire [0:0]out_swbd_7_M05_SC_W_SEND;
  wire [7:0]r_la_in_swbd_M00_SC_INFO;
  wire [54:0]r_la_in_swbd_M00_SC_PAYLD;
  wire [7:0]r_la_in_swbd_M00_SC_RECV;
  wire [7:0]r_la_in_swbd_M00_SC_REQ;
  wire [7:0]r_la_in_swbd_M00_SC_SEND;
  wire s_sc_aclk_1;
  wire s_sc_aresetn_1;
  wire [0:0]w_la_in_swbd_M00_SC_INFO;
  wire [68:0]w_la_in_swbd_M00_SC_PAYLD;
  wire [0:0]w_la_in_swbd_M00_SC_RECV;
  wire [0:0]w_la_in_swbd_M00_SC_REQ;
  wire [0:0]w_la_in_swbd_M00_SC_SEND;
  wire [1:1]w_la_in_swbd_M01_SC_INFO;
  wire [137:69]w_la_in_swbd_M01_SC_PAYLD;
  wire [0:0]w_la_in_swbd_M01_SC_RECV;
  wire [1:1]w_la_in_swbd_M01_SC_REQ;
  wire [1:1]w_la_in_swbd_M01_SC_SEND;
  wire [2:2]w_la_in_swbd_M02_SC_INFO;
  wire [206:138]w_la_in_swbd_M02_SC_PAYLD;
  wire [0:0]w_la_in_swbd_M02_SC_RECV;
  wire [2:2]w_la_in_swbd_M02_SC_REQ;
  wire [2:2]w_la_in_swbd_M02_SC_SEND;
  wire [3:3]w_la_in_swbd_M03_SC_INFO;
  wire [275:207]w_la_in_swbd_M03_SC_PAYLD;
  wire [0:0]w_la_in_swbd_M03_SC_RECV;
  wire [3:3]w_la_in_swbd_M03_SC_REQ;
  wire [3:3]w_la_in_swbd_M03_SC_SEND;
  wire [4:4]w_la_in_swbd_M04_SC_INFO;
  wire [344:276]w_la_in_swbd_M04_SC_PAYLD;
  wire [0:0]w_la_in_swbd_M04_SC_RECV;
  wire [4:4]w_la_in_swbd_M04_SC_REQ;
  wire [4:4]w_la_in_swbd_M04_SC_SEND;
  wire [5:5]w_la_in_swbd_M05_SC_INFO;
  wire [413:345]w_la_in_swbd_M05_SC_PAYLD;
  wire [0:0]w_la_in_swbd_M05_SC_RECV;
  wire [5:5]w_la_in_swbd_M05_SC_REQ;
  wire [5:5]w_la_in_swbd_M05_SC_SEND;
  wire [6:6]w_la_in_swbd_M06_SC_INFO;
  wire [482:414]w_la_in_swbd_M06_SC_PAYLD;
  wire [0:0]w_la_in_swbd_M06_SC_RECV;
  wire [6:6]w_la_in_swbd_M06_SC_REQ;
  wire [6:6]w_la_in_swbd_M06_SC_SEND;
  wire [7:7]w_la_in_swbd_M07_SC_INFO;
  wire [551:483]w_la_in_swbd_M07_SC_PAYLD;
  wire [0:0]w_la_in_swbd_M07_SC_RECV;
  wire [7:7]w_la_in_swbd_M07_SC_REQ;
  wire [7:7]w_la_in_swbd_M07_SC_SEND;

  assign M00_SC_AR_info[0] = out_swbd_0_M00_SC_AR_INFO;
  assign M00_SC_AR_payld[181:0] = out_swbd_0_M00_SC_AR_PAYLD;
  assign M00_SC_AR_req[0] = out_swbd_0_M00_SC_AR_REQ;
  assign M00_SC_AR_send[0] = out_swbd_0_M00_SC_AR_SEND;
  assign M00_SC_AW_info[0] = out_swbd_0_M00_SC_AW_INFO;
  assign M00_SC_AW_payld[181:0] = out_swbd_0_M00_SC_AW_PAYLD;
  assign M00_SC_AW_req[0] = out_swbd_0_M00_SC_AW_REQ;
  assign M00_SC_AW_send[0] = out_swbd_0_M00_SC_AW_SEND;
  assign M00_SC_B_info[7:0] = b_la_in_swbd_M00_SC_INFO;
  assign M00_SC_B_payld[8:0] = b_la_in_swbd_M00_SC_PAYLD;
  assign M00_SC_B_req[7:0] = b_la_in_swbd_M00_SC_REQ;
  assign M00_SC_B_send[7:0] = b_la_in_swbd_M00_SC_SEND;
  assign M00_SC_R_info[7:0] = r_la_in_swbd_M00_SC_INFO;
  assign M00_SC_R_payld[54:0] = r_la_in_swbd_M00_SC_PAYLD;
  assign M00_SC_R_req[7:0] = r_la_in_swbd_M00_SC_REQ;
  assign M00_SC_R_send[7:0] = r_la_in_swbd_M00_SC_SEND;
  assign M00_SC_W_info[0] = out_swbd_0_M00_SC_W_INFO;
  assign M00_SC_W_payld[68:0] = out_swbd_0_M00_SC_W_PAYLD;
  assign M00_SC_W_req[0] = out_swbd_0_M00_SC_W_REQ;
  assign M00_SC_W_send[0] = out_swbd_0_M00_SC_W_SEND;
  assign M01_SC_AR_info[0] = out_swbd_0_M01_SC_AR_INFO;
  assign M01_SC_AR_payld[181:0] = out_swbd_0_M01_SC_AR_PAYLD;
  assign M01_SC_AR_req[0] = out_swbd_0_M01_SC_AR_REQ;
  assign M01_SC_AR_send[0] = out_swbd_0_M01_SC_AR_SEND;
  assign M01_SC_AW_info[0] = out_swbd_0_M01_SC_AW_INFO;
  assign M01_SC_AW_payld[181:0] = out_swbd_0_M01_SC_AW_PAYLD;
  assign M01_SC_AW_req[0] = out_swbd_0_M01_SC_AW_REQ;
  assign M01_SC_AW_send[0] = out_swbd_0_M01_SC_AW_SEND;
  assign M01_SC_W_info[0] = out_swbd_0_M01_SC_W_INFO;
  assign M01_SC_W_payld[68:0] = out_swbd_0_M01_SC_W_PAYLD;
  assign M01_SC_W_req[0] = out_swbd_0_M01_SC_W_REQ;
  assign M01_SC_W_send[0] = out_swbd_0_M01_SC_W_SEND;
  assign M02_SC_AR_info[0] = out_swbd_0_M02_SC_AR_INFO;
  assign M02_SC_AR_payld[181:0] = out_swbd_0_M02_SC_AR_PAYLD;
  assign M02_SC_AR_req[0] = out_swbd_0_M02_SC_AR_REQ;
  assign M02_SC_AR_send[0] = out_swbd_0_M02_SC_AR_SEND;
  assign M02_SC_AW_info[0] = out_swbd_0_M02_SC_AW_INFO;
  assign M02_SC_AW_payld[181:0] = out_swbd_0_M02_SC_AW_PAYLD;
  assign M02_SC_AW_req[0] = out_swbd_0_M02_SC_AW_REQ;
  assign M02_SC_AW_send[0] = out_swbd_0_M02_SC_AW_SEND;
  assign M02_SC_W_info[0] = out_swbd_0_M02_SC_W_INFO;
  assign M02_SC_W_payld[68:0] = out_swbd_0_M02_SC_W_PAYLD;
  assign M02_SC_W_req[0] = out_swbd_0_M02_SC_W_REQ;
  assign M02_SC_W_send[0] = out_swbd_0_M02_SC_W_SEND;
  assign M03_SC_AR_info[0] = out_swbd_0_M03_SC_AR_INFO;
  assign M03_SC_AR_payld[181:0] = out_swbd_0_M03_SC_AR_PAYLD;
  assign M03_SC_AR_req[0] = out_swbd_0_M03_SC_AR_REQ;
  assign M03_SC_AR_send[0] = out_swbd_0_M03_SC_AR_SEND;
  assign M03_SC_AW_info[0] = out_swbd_0_M03_SC_AW_INFO;
  assign M03_SC_AW_payld[181:0] = out_swbd_0_M03_SC_AW_PAYLD;
  assign M03_SC_AW_req[0] = out_swbd_0_M03_SC_AW_REQ;
  assign M03_SC_AW_send[0] = out_swbd_0_M03_SC_AW_SEND;
  assign M03_SC_W_info[0] = out_swbd_0_M03_SC_W_INFO;
  assign M03_SC_W_payld[68:0] = out_swbd_0_M03_SC_W_PAYLD;
  assign M03_SC_W_req[0] = out_swbd_0_M03_SC_W_REQ;
  assign M03_SC_W_send[0] = out_swbd_0_M03_SC_W_SEND;
  assign M04_SC_AR_info[0] = out_swbd_0_M04_SC_AR_INFO;
  assign M04_SC_AR_payld[181:0] = out_swbd_0_M04_SC_AR_PAYLD;
  assign M04_SC_AR_req[0] = out_swbd_0_M04_SC_AR_REQ;
  assign M04_SC_AR_send[0] = out_swbd_0_M04_SC_AR_SEND;
  assign M04_SC_AW_info[0] = out_swbd_0_M04_SC_AW_INFO;
  assign M04_SC_AW_payld[181:0] = out_swbd_0_M04_SC_AW_PAYLD;
  assign M04_SC_AW_req[0] = out_swbd_0_M04_SC_AW_REQ;
  assign M04_SC_AW_send[0] = out_swbd_0_M04_SC_AW_SEND;
  assign M04_SC_W_info[0] = out_swbd_0_M04_SC_W_INFO;
  assign M04_SC_W_payld[68:0] = out_swbd_0_M04_SC_W_PAYLD;
  assign M04_SC_W_req[0] = out_swbd_0_M04_SC_W_REQ;
  assign M04_SC_W_send[0] = out_swbd_0_M04_SC_W_SEND;
  assign M05_SC_AR_info[0] = out_swbd_0_M05_SC_AR_INFO;
  assign M05_SC_AR_payld[181:0] = out_swbd_0_M05_SC_AR_PAYLD;
  assign M05_SC_AR_req[0] = out_swbd_0_M05_SC_AR_REQ;
  assign M05_SC_AR_send[0] = out_swbd_0_M05_SC_AR_SEND;
  assign M05_SC_AW_info[0] = out_swbd_0_M05_SC_AW_INFO;
  assign M05_SC_AW_payld[181:0] = out_swbd_0_M05_SC_AW_PAYLD;
  assign M05_SC_AW_req[0] = out_swbd_0_M05_SC_AW_REQ;
  assign M05_SC_AW_send[0] = out_swbd_0_M05_SC_AW_SEND;
  assign M05_SC_W_info[0] = out_swbd_0_M05_SC_W_INFO;
  assign M05_SC_W_payld[68:0] = out_swbd_0_M05_SC_W_PAYLD;
  assign M05_SC_W_req[0] = out_swbd_0_M05_SC_W_REQ;
  assign M05_SC_W_send[0] = out_swbd_0_M05_SC_W_SEND;
  assign M06_SC_AR_info[0] = out_swbd_0_M06_SC_AR_INFO;
  assign M06_SC_AR_payld[181:0] = out_swbd_0_M06_SC_AR_PAYLD;
  assign M06_SC_AR_req[0] = out_swbd_0_M06_SC_AR_REQ;
  assign M06_SC_AR_send[0] = out_swbd_0_M06_SC_AR_SEND;
  assign M06_SC_AW_info[0] = out_swbd_0_M06_SC_AW_INFO;
  assign M06_SC_AW_payld[181:0] = out_swbd_0_M06_SC_AW_PAYLD;
  assign M06_SC_AW_req[0] = out_swbd_0_M06_SC_AW_REQ;
  assign M06_SC_AW_send[0] = out_swbd_0_M06_SC_AW_SEND;
  assign M06_SC_W_info[0] = out_swbd_0_M06_SC_W_INFO;
  assign M06_SC_W_payld[68:0] = out_swbd_0_M06_SC_W_PAYLD;
  assign M06_SC_W_req[0] = out_swbd_0_M06_SC_W_REQ;
  assign M06_SC_W_send[0] = out_swbd_0_M06_SC_W_SEND;
  assign M07_SC_AR_info[0] = out_swbd_1_M00_SC_AR_INFO;
  assign M07_SC_AR_payld[181:0] = out_swbd_1_M00_SC_AR_PAYLD;
  assign M07_SC_AR_req[0] = out_swbd_1_M00_SC_AR_REQ;
  assign M07_SC_AR_send[0] = out_swbd_1_M00_SC_AR_SEND;
  assign M07_SC_AW_info[0] = out_swbd_1_M00_SC_AW_INFO;
  assign M07_SC_AW_payld[181:0] = out_swbd_1_M00_SC_AW_PAYLD;
  assign M07_SC_AW_req[0] = out_swbd_1_M00_SC_AW_REQ;
  assign M07_SC_AW_send[0] = out_swbd_1_M00_SC_AW_SEND;
  assign M07_SC_W_info[0] = out_swbd_1_M00_SC_W_INFO;
  assign M07_SC_W_payld[68:0] = out_swbd_1_M00_SC_W_PAYLD;
  assign M07_SC_W_req[0] = out_swbd_1_M00_SC_W_REQ;
  assign M07_SC_W_send[0] = out_swbd_1_M00_SC_W_SEND;
  assign M08_SC_AR_info[0] = out_swbd_1_M01_SC_AR_INFO;
  assign M08_SC_AR_payld[181:0] = out_swbd_1_M01_SC_AR_PAYLD;
  assign M08_SC_AR_req[0] = out_swbd_1_M01_SC_AR_REQ;
  assign M08_SC_AR_send[0] = out_swbd_1_M01_SC_AR_SEND;
  assign M08_SC_AW_info[0] = out_swbd_1_M01_SC_AW_INFO;
  assign M08_SC_AW_payld[181:0] = out_swbd_1_M01_SC_AW_PAYLD;
  assign M08_SC_AW_req[0] = out_swbd_1_M01_SC_AW_REQ;
  assign M08_SC_AW_send[0] = out_swbd_1_M01_SC_AW_SEND;
  assign M08_SC_W_info[0] = out_swbd_1_M01_SC_W_INFO;
  assign M08_SC_W_payld[68:0] = out_swbd_1_M01_SC_W_PAYLD;
  assign M08_SC_W_req[0] = out_swbd_1_M01_SC_W_REQ;
  assign M08_SC_W_send[0] = out_swbd_1_M01_SC_W_SEND;
  assign M09_SC_AR_info[0] = out_swbd_1_M02_SC_AR_INFO;
  assign M09_SC_AR_payld[181:0] = out_swbd_1_M02_SC_AR_PAYLD;
  assign M09_SC_AR_req[0] = out_swbd_1_M02_SC_AR_REQ;
  assign M09_SC_AR_send[0] = out_swbd_1_M02_SC_AR_SEND;
  assign M09_SC_AW_info[0] = out_swbd_1_M02_SC_AW_INFO;
  assign M09_SC_AW_payld[181:0] = out_swbd_1_M02_SC_AW_PAYLD;
  assign M09_SC_AW_req[0] = out_swbd_1_M02_SC_AW_REQ;
  assign M09_SC_AW_send[0] = out_swbd_1_M02_SC_AW_SEND;
  assign M09_SC_W_info[0] = out_swbd_1_M02_SC_W_INFO;
  assign M09_SC_W_payld[68:0] = out_swbd_1_M02_SC_W_PAYLD;
  assign M09_SC_W_req[0] = out_swbd_1_M02_SC_W_REQ;
  assign M09_SC_W_send[0] = out_swbd_1_M02_SC_W_SEND;
  assign M10_SC_AR_info[0] = out_swbd_1_M03_SC_AR_INFO;
  assign M10_SC_AR_payld[181:0] = out_swbd_1_M03_SC_AR_PAYLD;
  assign M10_SC_AR_req[0] = out_swbd_1_M03_SC_AR_REQ;
  assign M10_SC_AR_send[0] = out_swbd_1_M03_SC_AR_SEND;
  assign M10_SC_AW_info[0] = out_swbd_1_M03_SC_AW_INFO;
  assign M10_SC_AW_payld[181:0] = out_swbd_1_M03_SC_AW_PAYLD;
  assign M10_SC_AW_req[0] = out_swbd_1_M03_SC_AW_REQ;
  assign M10_SC_AW_send[0] = out_swbd_1_M03_SC_AW_SEND;
  assign M10_SC_W_info[0] = out_swbd_1_M03_SC_W_INFO;
  assign M10_SC_W_payld[68:0] = out_swbd_1_M03_SC_W_PAYLD;
  assign M10_SC_W_req[0] = out_swbd_1_M03_SC_W_REQ;
  assign M10_SC_W_send[0] = out_swbd_1_M03_SC_W_SEND;
  assign M11_SC_AR_info[0] = out_swbd_1_M04_SC_AR_INFO;
  assign M11_SC_AR_payld[181:0] = out_swbd_1_M04_SC_AR_PAYLD;
  assign M11_SC_AR_req[0] = out_swbd_1_M04_SC_AR_REQ;
  assign M11_SC_AR_send[0] = out_swbd_1_M04_SC_AR_SEND;
  assign M11_SC_AW_info[0] = out_swbd_1_M04_SC_AW_INFO;
  assign M11_SC_AW_payld[181:0] = out_swbd_1_M04_SC_AW_PAYLD;
  assign M11_SC_AW_req[0] = out_swbd_1_M04_SC_AW_REQ;
  assign M11_SC_AW_send[0] = out_swbd_1_M04_SC_AW_SEND;
  assign M11_SC_W_info[0] = out_swbd_1_M04_SC_W_INFO;
  assign M11_SC_W_payld[68:0] = out_swbd_1_M04_SC_W_PAYLD;
  assign M11_SC_W_req[0] = out_swbd_1_M04_SC_W_REQ;
  assign M11_SC_W_send[0] = out_swbd_1_M04_SC_W_SEND;
  assign M12_SC_AR_info[0] = out_swbd_1_M05_SC_AR_INFO;
  assign M12_SC_AR_payld[181:0] = out_swbd_1_M05_SC_AR_PAYLD;
  assign M12_SC_AR_req[0] = out_swbd_1_M05_SC_AR_REQ;
  assign M12_SC_AR_send[0] = out_swbd_1_M05_SC_AR_SEND;
  assign M12_SC_AW_info[0] = out_swbd_1_M05_SC_AW_INFO;
  assign M12_SC_AW_payld[181:0] = out_swbd_1_M05_SC_AW_PAYLD;
  assign M12_SC_AW_req[0] = out_swbd_1_M05_SC_AW_REQ;
  assign M12_SC_AW_send[0] = out_swbd_1_M05_SC_AW_SEND;
  assign M12_SC_W_info[0] = out_swbd_1_M05_SC_W_INFO;
  assign M12_SC_W_payld[68:0] = out_swbd_1_M05_SC_W_PAYLD;
  assign M12_SC_W_req[0] = out_swbd_1_M05_SC_W_REQ;
  assign M12_SC_W_send[0] = out_swbd_1_M05_SC_W_SEND;
  assign M13_SC_AR_info[0] = out_swbd_1_M06_SC_AR_INFO;
  assign M13_SC_AR_payld[181:0] = out_swbd_1_M06_SC_AR_PAYLD;
  assign M13_SC_AR_req[0] = out_swbd_1_M06_SC_AR_REQ;
  assign M13_SC_AR_send[0] = out_swbd_1_M06_SC_AR_SEND;
  assign M13_SC_AW_info[0] = out_swbd_1_M06_SC_AW_INFO;
  assign M13_SC_AW_payld[181:0] = out_swbd_1_M06_SC_AW_PAYLD;
  assign M13_SC_AW_req[0] = out_swbd_1_M06_SC_AW_REQ;
  assign M13_SC_AW_send[0] = out_swbd_1_M06_SC_AW_SEND;
  assign M13_SC_W_info[0] = out_swbd_1_M06_SC_W_INFO;
  assign M13_SC_W_payld[68:0] = out_swbd_1_M06_SC_W_PAYLD;
  assign M13_SC_W_req[0] = out_swbd_1_M06_SC_W_REQ;
  assign M13_SC_W_send[0] = out_swbd_1_M06_SC_W_SEND;
  assign M14_SC_AR_info[0] = out_swbd_2_M00_SC_AR_INFO;
  assign M14_SC_AR_payld[181:0] = out_swbd_2_M00_SC_AR_PAYLD;
  assign M14_SC_AR_req[0] = out_swbd_2_M00_SC_AR_REQ;
  assign M14_SC_AR_send[0] = out_swbd_2_M00_SC_AR_SEND;
  assign M14_SC_AW_info[0] = out_swbd_2_M00_SC_AW_INFO;
  assign M14_SC_AW_payld[181:0] = out_swbd_2_M00_SC_AW_PAYLD;
  assign M14_SC_AW_req[0] = out_swbd_2_M00_SC_AW_REQ;
  assign M14_SC_AW_send[0] = out_swbd_2_M00_SC_AW_SEND;
  assign M14_SC_W_info[0] = out_swbd_2_M00_SC_W_INFO;
  assign M14_SC_W_payld[68:0] = out_swbd_2_M00_SC_W_PAYLD;
  assign M14_SC_W_req[0] = out_swbd_2_M00_SC_W_REQ;
  assign M14_SC_W_send[0] = out_swbd_2_M00_SC_W_SEND;
  assign M15_SC_AR_info[0] = out_swbd_2_M01_SC_AR_INFO;
  assign M15_SC_AR_payld[181:0] = out_swbd_2_M01_SC_AR_PAYLD;
  assign M15_SC_AR_req[0] = out_swbd_2_M01_SC_AR_REQ;
  assign M15_SC_AR_send[0] = out_swbd_2_M01_SC_AR_SEND;
  assign M15_SC_AW_info[0] = out_swbd_2_M01_SC_AW_INFO;
  assign M15_SC_AW_payld[181:0] = out_swbd_2_M01_SC_AW_PAYLD;
  assign M15_SC_AW_req[0] = out_swbd_2_M01_SC_AW_REQ;
  assign M15_SC_AW_send[0] = out_swbd_2_M01_SC_AW_SEND;
  assign M15_SC_W_info[0] = out_swbd_2_M01_SC_W_INFO;
  assign M15_SC_W_payld[68:0] = out_swbd_2_M01_SC_W_PAYLD;
  assign M15_SC_W_req[0] = out_swbd_2_M01_SC_W_REQ;
  assign M15_SC_W_send[0] = out_swbd_2_M01_SC_W_SEND;
  assign M16_SC_AR_info[0] = out_swbd_2_M02_SC_AR_INFO;
  assign M16_SC_AR_payld[181:0] = out_swbd_2_M02_SC_AR_PAYLD;
  assign M16_SC_AR_req[0] = out_swbd_2_M02_SC_AR_REQ;
  assign M16_SC_AR_send[0] = out_swbd_2_M02_SC_AR_SEND;
  assign M16_SC_AW_info[0] = out_swbd_2_M02_SC_AW_INFO;
  assign M16_SC_AW_payld[181:0] = out_swbd_2_M02_SC_AW_PAYLD;
  assign M16_SC_AW_req[0] = out_swbd_2_M02_SC_AW_REQ;
  assign M16_SC_AW_send[0] = out_swbd_2_M02_SC_AW_SEND;
  assign M16_SC_W_info[0] = out_swbd_2_M02_SC_W_INFO;
  assign M16_SC_W_payld[68:0] = out_swbd_2_M02_SC_W_PAYLD;
  assign M16_SC_W_req[0] = out_swbd_2_M02_SC_W_REQ;
  assign M16_SC_W_send[0] = out_swbd_2_M02_SC_W_SEND;
  assign M17_SC_AR_info[0] = out_swbd_2_M03_SC_AR_INFO;
  assign M17_SC_AR_payld[181:0] = out_swbd_2_M03_SC_AR_PAYLD;
  assign M17_SC_AR_req[0] = out_swbd_2_M03_SC_AR_REQ;
  assign M17_SC_AR_send[0] = out_swbd_2_M03_SC_AR_SEND;
  assign M17_SC_AW_info[0] = out_swbd_2_M03_SC_AW_INFO;
  assign M17_SC_AW_payld[181:0] = out_swbd_2_M03_SC_AW_PAYLD;
  assign M17_SC_AW_req[0] = out_swbd_2_M03_SC_AW_REQ;
  assign M17_SC_AW_send[0] = out_swbd_2_M03_SC_AW_SEND;
  assign M17_SC_W_info[0] = out_swbd_2_M03_SC_W_INFO;
  assign M17_SC_W_payld[68:0] = out_swbd_2_M03_SC_W_PAYLD;
  assign M17_SC_W_req[0] = out_swbd_2_M03_SC_W_REQ;
  assign M17_SC_W_send[0] = out_swbd_2_M03_SC_W_SEND;
  assign M18_SC_AR_info[0] = out_swbd_2_M04_SC_AR_INFO;
  assign M18_SC_AR_payld[181:0] = out_swbd_2_M04_SC_AR_PAYLD;
  assign M18_SC_AR_req[0] = out_swbd_2_M04_SC_AR_REQ;
  assign M18_SC_AR_send[0] = out_swbd_2_M04_SC_AR_SEND;
  assign M18_SC_AW_info[0] = out_swbd_2_M04_SC_AW_INFO;
  assign M18_SC_AW_payld[181:0] = out_swbd_2_M04_SC_AW_PAYLD;
  assign M18_SC_AW_req[0] = out_swbd_2_M04_SC_AW_REQ;
  assign M18_SC_AW_send[0] = out_swbd_2_M04_SC_AW_SEND;
  assign M18_SC_W_info[0] = out_swbd_2_M04_SC_W_INFO;
  assign M18_SC_W_payld[68:0] = out_swbd_2_M04_SC_W_PAYLD;
  assign M18_SC_W_req[0] = out_swbd_2_M04_SC_W_REQ;
  assign M18_SC_W_send[0] = out_swbd_2_M04_SC_W_SEND;
  assign M19_SC_AR_info[0] = out_swbd_2_M05_SC_AR_INFO;
  assign M19_SC_AR_payld[181:0] = out_swbd_2_M05_SC_AR_PAYLD;
  assign M19_SC_AR_req[0] = out_swbd_2_M05_SC_AR_REQ;
  assign M19_SC_AR_send[0] = out_swbd_2_M05_SC_AR_SEND;
  assign M19_SC_AW_info[0] = out_swbd_2_M05_SC_AW_INFO;
  assign M19_SC_AW_payld[181:0] = out_swbd_2_M05_SC_AW_PAYLD;
  assign M19_SC_AW_req[0] = out_swbd_2_M05_SC_AW_REQ;
  assign M19_SC_AW_send[0] = out_swbd_2_M05_SC_AW_SEND;
  assign M19_SC_W_info[0] = out_swbd_2_M05_SC_W_INFO;
  assign M19_SC_W_payld[68:0] = out_swbd_2_M05_SC_W_PAYLD;
  assign M19_SC_W_req[0] = out_swbd_2_M05_SC_W_REQ;
  assign M19_SC_W_send[0] = out_swbd_2_M05_SC_W_SEND;
  assign M20_SC_AR_info[0] = out_swbd_2_M06_SC_AR_INFO;
  assign M20_SC_AR_payld[181:0] = out_swbd_2_M06_SC_AR_PAYLD;
  assign M20_SC_AR_req[0] = out_swbd_2_M06_SC_AR_REQ;
  assign M20_SC_AR_send[0] = out_swbd_2_M06_SC_AR_SEND;
  assign M20_SC_AW_info[0] = out_swbd_2_M06_SC_AW_INFO;
  assign M20_SC_AW_payld[181:0] = out_swbd_2_M06_SC_AW_PAYLD;
  assign M20_SC_AW_req[0] = out_swbd_2_M06_SC_AW_REQ;
  assign M20_SC_AW_send[0] = out_swbd_2_M06_SC_AW_SEND;
  assign M20_SC_W_info[0] = out_swbd_2_M06_SC_W_INFO;
  assign M20_SC_W_payld[68:0] = out_swbd_2_M06_SC_W_PAYLD;
  assign M20_SC_W_req[0] = out_swbd_2_M06_SC_W_REQ;
  assign M20_SC_W_send[0] = out_swbd_2_M06_SC_W_SEND;
  assign M21_SC_AR_info[0] = out_swbd_3_M00_SC_AR_INFO;
  assign M21_SC_AR_payld[181:0] = out_swbd_3_M00_SC_AR_PAYLD;
  assign M21_SC_AR_req[0] = out_swbd_3_M00_SC_AR_REQ;
  assign M21_SC_AR_send[0] = out_swbd_3_M00_SC_AR_SEND;
  assign M21_SC_AW_info[0] = out_swbd_3_M00_SC_AW_INFO;
  assign M21_SC_AW_payld[181:0] = out_swbd_3_M00_SC_AW_PAYLD;
  assign M21_SC_AW_req[0] = out_swbd_3_M00_SC_AW_REQ;
  assign M21_SC_AW_send[0] = out_swbd_3_M00_SC_AW_SEND;
  assign M21_SC_W_info[0] = out_swbd_3_M00_SC_W_INFO;
  assign M21_SC_W_payld[68:0] = out_swbd_3_M00_SC_W_PAYLD;
  assign M21_SC_W_req[0] = out_swbd_3_M00_SC_W_REQ;
  assign M21_SC_W_send[0] = out_swbd_3_M00_SC_W_SEND;
  assign M22_SC_AR_info[0] = out_swbd_3_M01_SC_AR_INFO;
  assign M22_SC_AR_payld[181:0] = out_swbd_3_M01_SC_AR_PAYLD;
  assign M22_SC_AR_req[0] = out_swbd_3_M01_SC_AR_REQ;
  assign M22_SC_AR_send[0] = out_swbd_3_M01_SC_AR_SEND;
  assign M22_SC_AW_info[0] = out_swbd_3_M01_SC_AW_INFO;
  assign M22_SC_AW_payld[181:0] = out_swbd_3_M01_SC_AW_PAYLD;
  assign M22_SC_AW_req[0] = out_swbd_3_M01_SC_AW_REQ;
  assign M22_SC_AW_send[0] = out_swbd_3_M01_SC_AW_SEND;
  assign M22_SC_W_info[0] = out_swbd_3_M01_SC_W_INFO;
  assign M22_SC_W_payld[68:0] = out_swbd_3_M01_SC_W_PAYLD;
  assign M22_SC_W_req[0] = out_swbd_3_M01_SC_W_REQ;
  assign M22_SC_W_send[0] = out_swbd_3_M01_SC_W_SEND;
  assign M23_SC_AR_info[0] = out_swbd_3_M02_SC_AR_INFO;
  assign M23_SC_AR_payld[181:0] = out_swbd_3_M02_SC_AR_PAYLD;
  assign M23_SC_AR_req[0] = out_swbd_3_M02_SC_AR_REQ;
  assign M23_SC_AR_send[0] = out_swbd_3_M02_SC_AR_SEND;
  assign M23_SC_AW_info[0] = out_swbd_3_M02_SC_AW_INFO;
  assign M23_SC_AW_payld[181:0] = out_swbd_3_M02_SC_AW_PAYLD;
  assign M23_SC_AW_req[0] = out_swbd_3_M02_SC_AW_REQ;
  assign M23_SC_AW_send[0] = out_swbd_3_M02_SC_AW_SEND;
  assign M23_SC_W_info[0] = out_swbd_3_M02_SC_W_INFO;
  assign M23_SC_W_payld[68:0] = out_swbd_3_M02_SC_W_PAYLD;
  assign M23_SC_W_req[0] = out_swbd_3_M02_SC_W_REQ;
  assign M23_SC_W_send[0] = out_swbd_3_M02_SC_W_SEND;
  assign M24_SC_AR_info[0] = out_swbd_3_M03_SC_AR_INFO;
  assign M24_SC_AR_payld[181:0] = out_swbd_3_M03_SC_AR_PAYLD;
  assign M24_SC_AR_req[0] = out_swbd_3_M03_SC_AR_REQ;
  assign M24_SC_AR_send[0] = out_swbd_3_M03_SC_AR_SEND;
  assign M24_SC_AW_info[0] = out_swbd_3_M03_SC_AW_INFO;
  assign M24_SC_AW_payld[181:0] = out_swbd_3_M03_SC_AW_PAYLD;
  assign M24_SC_AW_req[0] = out_swbd_3_M03_SC_AW_REQ;
  assign M24_SC_AW_send[0] = out_swbd_3_M03_SC_AW_SEND;
  assign M24_SC_W_info[0] = out_swbd_3_M03_SC_W_INFO;
  assign M24_SC_W_payld[68:0] = out_swbd_3_M03_SC_W_PAYLD;
  assign M24_SC_W_req[0] = out_swbd_3_M03_SC_W_REQ;
  assign M24_SC_W_send[0] = out_swbd_3_M03_SC_W_SEND;
  assign M25_SC_AR_info[0] = out_swbd_3_M04_SC_AR_INFO;
  assign M25_SC_AR_payld[181:0] = out_swbd_3_M04_SC_AR_PAYLD;
  assign M25_SC_AR_req[0] = out_swbd_3_M04_SC_AR_REQ;
  assign M25_SC_AR_send[0] = out_swbd_3_M04_SC_AR_SEND;
  assign M25_SC_AW_info[0] = out_swbd_3_M04_SC_AW_INFO;
  assign M25_SC_AW_payld[181:0] = out_swbd_3_M04_SC_AW_PAYLD;
  assign M25_SC_AW_req[0] = out_swbd_3_M04_SC_AW_REQ;
  assign M25_SC_AW_send[0] = out_swbd_3_M04_SC_AW_SEND;
  assign M25_SC_W_info[0] = out_swbd_3_M04_SC_W_INFO;
  assign M25_SC_W_payld[68:0] = out_swbd_3_M04_SC_W_PAYLD;
  assign M25_SC_W_req[0] = out_swbd_3_M04_SC_W_REQ;
  assign M25_SC_W_send[0] = out_swbd_3_M04_SC_W_SEND;
  assign M26_SC_AR_info[0] = out_swbd_3_M05_SC_AR_INFO;
  assign M26_SC_AR_payld[181:0] = out_swbd_3_M05_SC_AR_PAYLD;
  assign M26_SC_AR_req[0] = out_swbd_3_M05_SC_AR_REQ;
  assign M26_SC_AR_send[0] = out_swbd_3_M05_SC_AR_SEND;
  assign M26_SC_AW_info[0] = out_swbd_3_M05_SC_AW_INFO;
  assign M26_SC_AW_payld[181:0] = out_swbd_3_M05_SC_AW_PAYLD;
  assign M26_SC_AW_req[0] = out_swbd_3_M05_SC_AW_REQ;
  assign M26_SC_AW_send[0] = out_swbd_3_M05_SC_AW_SEND;
  assign M26_SC_W_info[0] = out_swbd_3_M05_SC_W_INFO;
  assign M26_SC_W_payld[68:0] = out_swbd_3_M05_SC_W_PAYLD;
  assign M26_SC_W_req[0] = out_swbd_3_M05_SC_W_REQ;
  assign M26_SC_W_send[0] = out_swbd_3_M05_SC_W_SEND;
  assign M27_SC_AR_info[0] = out_swbd_4_M00_SC_AR_INFO;
  assign M27_SC_AR_payld[181:0] = out_swbd_4_M00_SC_AR_PAYLD;
  assign M27_SC_AR_req[0] = out_swbd_4_M00_SC_AR_REQ;
  assign M27_SC_AR_send[0] = out_swbd_4_M00_SC_AR_SEND;
  assign M27_SC_AW_info[0] = out_swbd_4_M00_SC_AW_INFO;
  assign M27_SC_AW_payld[181:0] = out_swbd_4_M00_SC_AW_PAYLD;
  assign M27_SC_AW_req[0] = out_swbd_4_M00_SC_AW_REQ;
  assign M27_SC_AW_send[0] = out_swbd_4_M00_SC_AW_SEND;
  assign M27_SC_W_info[0] = out_swbd_4_M00_SC_W_INFO;
  assign M27_SC_W_payld[68:0] = out_swbd_4_M00_SC_W_PAYLD;
  assign M27_SC_W_req[0] = out_swbd_4_M00_SC_W_REQ;
  assign M27_SC_W_send[0] = out_swbd_4_M00_SC_W_SEND;
  assign M28_SC_AR_info[0] = out_swbd_4_M01_SC_AR_INFO;
  assign M28_SC_AR_payld[181:0] = out_swbd_4_M01_SC_AR_PAYLD;
  assign M28_SC_AR_req[0] = out_swbd_4_M01_SC_AR_REQ;
  assign M28_SC_AR_send[0] = out_swbd_4_M01_SC_AR_SEND;
  assign M28_SC_AW_info[0] = out_swbd_4_M01_SC_AW_INFO;
  assign M28_SC_AW_payld[181:0] = out_swbd_4_M01_SC_AW_PAYLD;
  assign M28_SC_AW_req[0] = out_swbd_4_M01_SC_AW_REQ;
  assign M28_SC_AW_send[0] = out_swbd_4_M01_SC_AW_SEND;
  assign M28_SC_W_info[0] = out_swbd_4_M01_SC_W_INFO;
  assign M28_SC_W_payld[68:0] = out_swbd_4_M01_SC_W_PAYLD;
  assign M28_SC_W_req[0] = out_swbd_4_M01_SC_W_REQ;
  assign M28_SC_W_send[0] = out_swbd_4_M01_SC_W_SEND;
  assign M29_SC_AR_info[0] = out_swbd_4_M02_SC_AR_INFO;
  assign M29_SC_AR_payld[181:0] = out_swbd_4_M02_SC_AR_PAYLD;
  assign M29_SC_AR_req[0] = out_swbd_4_M02_SC_AR_REQ;
  assign M29_SC_AR_send[0] = out_swbd_4_M02_SC_AR_SEND;
  assign M29_SC_AW_info[0] = out_swbd_4_M02_SC_AW_INFO;
  assign M29_SC_AW_payld[181:0] = out_swbd_4_M02_SC_AW_PAYLD;
  assign M29_SC_AW_req[0] = out_swbd_4_M02_SC_AW_REQ;
  assign M29_SC_AW_send[0] = out_swbd_4_M02_SC_AW_SEND;
  assign M29_SC_W_info[0] = out_swbd_4_M02_SC_W_INFO;
  assign M29_SC_W_payld[68:0] = out_swbd_4_M02_SC_W_PAYLD;
  assign M29_SC_W_req[0] = out_swbd_4_M02_SC_W_REQ;
  assign M29_SC_W_send[0] = out_swbd_4_M02_SC_W_SEND;
  assign M30_SC_AR_info[0] = out_swbd_4_M03_SC_AR_INFO;
  assign M30_SC_AR_payld[181:0] = out_swbd_4_M03_SC_AR_PAYLD;
  assign M30_SC_AR_req[0] = out_swbd_4_M03_SC_AR_REQ;
  assign M30_SC_AR_send[0] = out_swbd_4_M03_SC_AR_SEND;
  assign M30_SC_AW_info[0] = out_swbd_4_M03_SC_AW_INFO;
  assign M30_SC_AW_payld[181:0] = out_swbd_4_M03_SC_AW_PAYLD;
  assign M30_SC_AW_req[0] = out_swbd_4_M03_SC_AW_REQ;
  assign M30_SC_AW_send[0] = out_swbd_4_M03_SC_AW_SEND;
  assign M30_SC_W_info[0] = out_swbd_4_M03_SC_W_INFO;
  assign M30_SC_W_payld[68:0] = out_swbd_4_M03_SC_W_PAYLD;
  assign M30_SC_W_req[0] = out_swbd_4_M03_SC_W_REQ;
  assign M30_SC_W_send[0] = out_swbd_4_M03_SC_W_SEND;
  assign M31_SC_AR_info[0] = out_swbd_4_M04_SC_AR_INFO;
  assign M31_SC_AR_payld[181:0] = out_swbd_4_M04_SC_AR_PAYLD;
  assign M31_SC_AR_req[0] = out_swbd_4_M04_SC_AR_REQ;
  assign M31_SC_AR_send[0] = out_swbd_4_M04_SC_AR_SEND;
  assign M31_SC_AW_info[0] = out_swbd_4_M04_SC_AW_INFO;
  assign M31_SC_AW_payld[181:0] = out_swbd_4_M04_SC_AW_PAYLD;
  assign M31_SC_AW_req[0] = out_swbd_4_M04_SC_AW_REQ;
  assign M31_SC_AW_send[0] = out_swbd_4_M04_SC_AW_SEND;
  assign M31_SC_W_info[0] = out_swbd_4_M04_SC_W_INFO;
  assign M31_SC_W_payld[68:0] = out_swbd_4_M04_SC_W_PAYLD;
  assign M31_SC_W_req[0] = out_swbd_4_M04_SC_W_REQ;
  assign M31_SC_W_send[0] = out_swbd_4_M04_SC_W_SEND;
  assign M32_SC_AR_info[0] = out_swbd_4_M05_SC_AR_INFO;
  assign M32_SC_AR_payld[181:0] = out_swbd_4_M05_SC_AR_PAYLD;
  assign M32_SC_AR_req[0] = out_swbd_4_M05_SC_AR_REQ;
  assign M32_SC_AR_send[0] = out_swbd_4_M05_SC_AR_SEND;
  assign M32_SC_AW_info[0] = out_swbd_4_M05_SC_AW_INFO;
  assign M32_SC_AW_payld[181:0] = out_swbd_4_M05_SC_AW_PAYLD;
  assign M32_SC_AW_req[0] = out_swbd_4_M05_SC_AW_REQ;
  assign M32_SC_AW_send[0] = out_swbd_4_M05_SC_AW_SEND;
  assign M32_SC_W_info[0] = out_swbd_4_M05_SC_W_INFO;
  assign M32_SC_W_payld[68:0] = out_swbd_4_M05_SC_W_PAYLD;
  assign M32_SC_W_req[0] = out_swbd_4_M05_SC_W_REQ;
  assign M32_SC_W_send[0] = out_swbd_4_M05_SC_W_SEND;
  assign M33_SC_AR_info[0] = out_swbd_5_M00_SC_AR_INFO;
  assign M33_SC_AR_payld[181:0] = out_swbd_5_M00_SC_AR_PAYLD;
  assign M33_SC_AR_req[0] = out_swbd_5_M00_SC_AR_REQ;
  assign M33_SC_AR_send[0] = out_swbd_5_M00_SC_AR_SEND;
  assign M33_SC_AW_info[0] = out_swbd_5_M00_SC_AW_INFO;
  assign M33_SC_AW_payld[181:0] = out_swbd_5_M00_SC_AW_PAYLD;
  assign M33_SC_AW_req[0] = out_swbd_5_M00_SC_AW_REQ;
  assign M33_SC_AW_send[0] = out_swbd_5_M00_SC_AW_SEND;
  assign M33_SC_W_info[0] = out_swbd_5_M00_SC_W_INFO;
  assign M33_SC_W_payld[68:0] = out_swbd_5_M00_SC_W_PAYLD;
  assign M33_SC_W_req[0] = out_swbd_5_M00_SC_W_REQ;
  assign M33_SC_W_send[0] = out_swbd_5_M00_SC_W_SEND;
  assign M34_SC_AR_info[0] = out_swbd_5_M01_SC_AR_INFO;
  assign M34_SC_AR_payld[181:0] = out_swbd_5_M01_SC_AR_PAYLD;
  assign M34_SC_AR_req[0] = out_swbd_5_M01_SC_AR_REQ;
  assign M34_SC_AR_send[0] = out_swbd_5_M01_SC_AR_SEND;
  assign M34_SC_AW_info[0] = out_swbd_5_M01_SC_AW_INFO;
  assign M34_SC_AW_payld[181:0] = out_swbd_5_M01_SC_AW_PAYLD;
  assign M34_SC_AW_req[0] = out_swbd_5_M01_SC_AW_REQ;
  assign M34_SC_AW_send[0] = out_swbd_5_M01_SC_AW_SEND;
  assign M34_SC_W_info[0] = out_swbd_5_M01_SC_W_INFO;
  assign M34_SC_W_payld[68:0] = out_swbd_5_M01_SC_W_PAYLD;
  assign M34_SC_W_req[0] = out_swbd_5_M01_SC_W_REQ;
  assign M34_SC_W_send[0] = out_swbd_5_M01_SC_W_SEND;
  assign M35_SC_AR_info[0] = out_swbd_5_M02_SC_AR_INFO;
  assign M35_SC_AR_payld[181:0] = out_swbd_5_M02_SC_AR_PAYLD;
  assign M35_SC_AR_req[0] = out_swbd_5_M02_SC_AR_REQ;
  assign M35_SC_AR_send[0] = out_swbd_5_M02_SC_AR_SEND;
  assign M35_SC_AW_info[0] = out_swbd_5_M02_SC_AW_INFO;
  assign M35_SC_AW_payld[181:0] = out_swbd_5_M02_SC_AW_PAYLD;
  assign M35_SC_AW_req[0] = out_swbd_5_M02_SC_AW_REQ;
  assign M35_SC_AW_send[0] = out_swbd_5_M02_SC_AW_SEND;
  assign M35_SC_W_info[0] = out_swbd_5_M02_SC_W_INFO;
  assign M35_SC_W_payld[68:0] = out_swbd_5_M02_SC_W_PAYLD;
  assign M35_SC_W_req[0] = out_swbd_5_M02_SC_W_REQ;
  assign M35_SC_W_send[0] = out_swbd_5_M02_SC_W_SEND;
  assign M36_SC_AR_info[0] = out_swbd_5_M03_SC_AR_INFO;
  assign M36_SC_AR_payld[181:0] = out_swbd_5_M03_SC_AR_PAYLD;
  assign M36_SC_AR_req[0] = out_swbd_5_M03_SC_AR_REQ;
  assign M36_SC_AR_send[0] = out_swbd_5_M03_SC_AR_SEND;
  assign M36_SC_AW_info[0] = out_swbd_5_M03_SC_AW_INFO;
  assign M36_SC_AW_payld[181:0] = out_swbd_5_M03_SC_AW_PAYLD;
  assign M36_SC_AW_req[0] = out_swbd_5_M03_SC_AW_REQ;
  assign M36_SC_AW_send[0] = out_swbd_5_M03_SC_AW_SEND;
  assign M36_SC_W_info[0] = out_swbd_5_M03_SC_W_INFO;
  assign M36_SC_W_payld[68:0] = out_swbd_5_M03_SC_W_PAYLD;
  assign M36_SC_W_req[0] = out_swbd_5_M03_SC_W_REQ;
  assign M36_SC_W_send[0] = out_swbd_5_M03_SC_W_SEND;
  assign M37_SC_AR_info[0] = out_swbd_5_M04_SC_AR_INFO;
  assign M37_SC_AR_payld[181:0] = out_swbd_5_M04_SC_AR_PAYLD;
  assign M37_SC_AR_req[0] = out_swbd_5_M04_SC_AR_REQ;
  assign M37_SC_AR_send[0] = out_swbd_5_M04_SC_AR_SEND;
  assign M37_SC_AW_info[0] = out_swbd_5_M04_SC_AW_INFO;
  assign M37_SC_AW_payld[181:0] = out_swbd_5_M04_SC_AW_PAYLD;
  assign M37_SC_AW_req[0] = out_swbd_5_M04_SC_AW_REQ;
  assign M37_SC_AW_send[0] = out_swbd_5_M04_SC_AW_SEND;
  assign M37_SC_W_info[0] = out_swbd_5_M04_SC_W_INFO;
  assign M37_SC_W_payld[68:0] = out_swbd_5_M04_SC_W_PAYLD;
  assign M37_SC_W_req[0] = out_swbd_5_M04_SC_W_REQ;
  assign M37_SC_W_send[0] = out_swbd_5_M04_SC_W_SEND;
  assign M38_SC_AR_info[0] = out_swbd_5_M05_SC_AR_INFO;
  assign M38_SC_AR_payld[181:0] = out_swbd_5_M05_SC_AR_PAYLD;
  assign M38_SC_AR_req[0] = out_swbd_5_M05_SC_AR_REQ;
  assign M38_SC_AR_send[0] = out_swbd_5_M05_SC_AR_SEND;
  assign M38_SC_AW_info[0] = out_swbd_5_M05_SC_AW_INFO;
  assign M38_SC_AW_payld[181:0] = out_swbd_5_M05_SC_AW_PAYLD;
  assign M38_SC_AW_req[0] = out_swbd_5_M05_SC_AW_REQ;
  assign M38_SC_AW_send[0] = out_swbd_5_M05_SC_AW_SEND;
  assign M38_SC_W_info[0] = out_swbd_5_M05_SC_W_INFO;
  assign M38_SC_W_payld[68:0] = out_swbd_5_M05_SC_W_PAYLD;
  assign M38_SC_W_req[0] = out_swbd_5_M05_SC_W_REQ;
  assign M38_SC_W_send[0] = out_swbd_5_M05_SC_W_SEND;
  assign M39_SC_AR_info[0] = out_swbd_6_M00_SC_AR_INFO;
  assign M39_SC_AR_payld[181:0] = out_swbd_6_M00_SC_AR_PAYLD;
  assign M39_SC_AR_req[0] = out_swbd_6_M00_SC_AR_REQ;
  assign M39_SC_AR_send[0] = out_swbd_6_M00_SC_AR_SEND;
  assign M39_SC_AW_info[0] = out_swbd_6_M00_SC_AW_INFO;
  assign M39_SC_AW_payld[181:0] = out_swbd_6_M00_SC_AW_PAYLD;
  assign M39_SC_AW_req[0] = out_swbd_6_M00_SC_AW_REQ;
  assign M39_SC_AW_send[0] = out_swbd_6_M00_SC_AW_SEND;
  assign M39_SC_W_info[0] = out_swbd_6_M00_SC_W_INFO;
  assign M39_SC_W_payld[68:0] = out_swbd_6_M00_SC_W_PAYLD;
  assign M39_SC_W_req[0] = out_swbd_6_M00_SC_W_REQ;
  assign M39_SC_W_send[0] = out_swbd_6_M00_SC_W_SEND;
  assign M40_SC_AR_info[0] = out_swbd_6_M01_SC_AR_INFO;
  assign M40_SC_AR_payld[181:0] = out_swbd_6_M01_SC_AR_PAYLD;
  assign M40_SC_AR_req[0] = out_swbd_6_M01_SC_AR_REQ;
  assign M40_SC_AR_send[0] = out_swbd_6_M01_SC_AR_SEND;
  assign M40_SC_AW_info[0] = out_swbd_6_M01_SC_AW_INFO;
  assign M40_SC_AW_payld[181:0] = out_swbd_6_M01_SC_AW_PAYLD;
  assign M40_SC_AW_req[0] = out_swbd_6_M01_SC_AW_REQ;
  assign M40_SC_AW_send[0] = out_swbd_6_M01_SC_AW_SEND;
  assign M40_SC_W_info[0] = out_swbd_6_M01_SC_W_INFO;
  assign M40_SC_W_payld[68:0] = out_swbd_6_M01_SC_W_PAYLD;
  assign M40_SC_W_req[0] = out_swbd_6_M01_SC_W_REQ;
  assign M40_SC_W_send[0] = out_swbd_6_M01_SC_W_SEND;
  assign M41_SC_AR_info[0] = out_swbd_6_M02_SC_AR_INFO;
  assign M41_SC_AR_payld[181:0] = out_swbd_6_M02_SC_AR_PAYLD;
  assign M41_SC_AR_req[0] = out_swbd_6_M02_SC_AR_REQ;
  assign M41_SC_AR_send[0] = out_swbd_6_M02_SC_AR_SEND;
  assign M41_SC_AW_info[0] = out_swbd_6_M02_SC_AW_INFO;
  assign M41_SC_AW_payld[181:0] = out_swbd_6_M02_SC_AW_PAYLD;
  assign M41_SC_AW_req[0] = out_swbd_6_M02_SC_AW_REQ;
  assign M41_SC_AW_send[0] = out_swbd_6_M02_SC_AW_SEND;
  assign M41_SC_W_info[0] = out_swbd_6_M02_SC_W_INFO;
  assign M41_SC_W_payld[68:0] = out_swbd_6_M02_SC_W_PAYLD;
  assign M41_SC_W_req[0] = out_swbd_6_M02_SC_W_REQ;
  assign M41_SC_W_send[0] = out_swbd_6_M02_SC_W_SEND;
  assign M42_SC_AR_info[0] = out_swbd_6_M03_SC_AR_INFO;
  assign M42_SC_AR_payld[181:0] = out_swbd_6_M03_SC_AR_PAYLD;
  assign M42_SC_AR_req[0] = out_swbd_6_M03_SC_AR_REQ;
  assign M42_SC_AR_send[0] = out_swbd_6_M03_SC_AR_SEND;
  assign M42_SC_AW_info[0] = out_swbd_6_M03_SC_AW_INFO;
  assign M42_SC_AW_payld[181:0] = out_swbd_6_M03_SC_AW_PAYLD;
  assign M42_SC_AW_req[0] = out_swbd_6_M03_SC_AW_REQ;
  assign M42_SC_AW_send[0] = out_swbd_6_M03_SC_AW_SEND;
  assign M42_SC_W_info[0] = out_swbd_6_M03_SC_W_INFO;
  assign M42_SC_W_payld[68:0] = out_swbd_6_M03_SC_W_PAYLD;
  assign M42_SC_W_req[0] = out_swbd_6_M03_SC_W_REQ;
  assign M42_SC_W_send[0] = out_swbd_6_M03_SC_W_SEND;
  assign M43_SC_AR_info[0] = out_swbd_6_M04_SC_AR_INFO;
  assign M43_SC_AR_payld[181:0] = out_swbd_6_M04_SC_AR_PAYLD;
  assign M43_SC_AR_req[0] = out_swbd_6_M04_SC_AR_REQ;
  assign M43_SC_AR_send[0] = out_swbd_6_M04_SC_AR_SEND;
  assign M43_SC_AW_info[0] = out_swbd_6_M04_SC_AW_INFO;
  assign M43_SC_AW_payld[181:0] = out_swbd_6_M04_SC_AW_PAYLD;
  assign M43_SC_AW_req[0] = out_swbd_6_M04_SC_AW_REQ;
  assign M43_SC_AW_send[0] = out_swbd_6_M04_SC_AW_SEND;
  assign M43_SC_W_info[0] = out_swbd_6_M04_SC_W_INFO;
  assign M43_SC_W_payld[68:0] = out_swbd_6_M04_SC_W_PAYLD;
  assign M43_SC_W_req[0] = out_swbd_6_M04_SC_W_REQ;
  assign M43_SC_W_send[0] = out_swbd_6_M04_SC_W_SEND;
  assign M44_SC_AR_info[0] = out_swbd_6_M05_SC_AR_INFO;
  assign M44_SC_AR_payld[181:0] = out_swbd_6_M05_SC_AR_PAYLD;
  assign M44_SC_AR_req[0] = out_swbd_6_M05_SC_AR_REQ;
  assign M44_SC_AR_send[0] = out_swbd_6_M05_SC_AR_SEND;
  assign M44_SC_AW_info[0] = out_swbd_6_M05_SC_AW_INFO;
  assign M44_SC_AW_payld[181:0] = out_swbd_6_M05_SC_AW_PAYLD;
  assign M44_SC_AW_req[0] = out_swbd_6_M05_SC_AW_REQ;
  assign M44_SC_AW_send[0] = out_swbd_6_M05_SC_AW_SEND;
  assign M44_SC_W_info[0] = out_swbd_6_M05_SC_W_INFO;
  assign M44_SC_W_payld[68:0] = out_swbd_6_M05_SC_W_PAYLD;
  assign M44_SC_W_req[0] = out_swbd_6_M05_SC_W_REQ;
  assign M44_SC_W_send[0] = out_swbd_6_M05_SC_W_SEND;
  assign M45_SC_AR_info[0] = out_swbd_7_M00_SC_AR_INFO;
  assign M45_SC_AR_payld[181:0] = out_swbd_7_M00_SC_AR_PAYLD;
  assign M45_SC_AR_req[0] = out_swbd_7_M00_SC_AR_REQ;
  assign M45_SC_AR_send[0] = out_swbd_7_M00_SC_AR_SEND;
  assign M45_SC_AW_info[0] = out_swbd_7_M00_SC_AW_INFO;
  assign M45_SC_AW_payld[181:0] = out_swbd_7_M00_SC_AW_PAYLD;
  assign M45_SC_AW_req[0] = out_swbd_7_M00_SC_AW_REQ;
  assign M45_SC_AW_send[0] = out_swbd_7_M00_SC_AW_SEND;
  assign M45_SC_W_info[0] = out_swbd_7_M00_SC_W_INFO;
  assign M45_SC_W_payld[68:0] = out_swbd_7_M00_SC_W_PAYLD;
  assign M45_SC_W_req[0] = out_swbd_7_M00_SC_W_REQ;
  assign M45_SC_W_send[0] = out_swbd_7_M00_SC_W_SEND;
  assign M46_SC_AR_info[0] = out_swbd_7_M01_SC_AR_INFO;
  assign M46_SC_AR_payld[181:0] = out_swbd_7_M01_SC_AR_PAYLD;
  assign M46_SC_AR_req[0] = out_swbd_7_M01_SC_AR_REQ;
  assign M46_SC_AR_send[0] = out_swbd_7_M01_SC_AR_SEND;
  assign M46_SC_AW_info[0] = out_swbd_7_M01_SC_AW_INFO;
  assign M46_SC_AW_payld[181:0] = out_swbd_7_M01_SC_AW_PAYLD;
  assign M46_SC_AW_req[0] = out_swbd_7_M01_SC_AW_REQ;
  assign M46_SC_AW_send[0] = out_swbd_7_M01_SC_AW_SEND;
  assign M46_SC_W_info[0] = out_swbd_7_M01_SC_W_INFO;
  assign M46_SC_W_payld[68:0] = out_swbd_7_M01_SC_W_PAYLD;
  assign M46_SC_W_req[0] = out_swbd_7_M01_SC_W_REQ;
  assign M46_SC_W_send[0] = out_swbd_7_M01_SC_W_SEND;
  assign M47_SC_AR_info[0] = out_swbd_7_M02_SC_AR_INFO;
  assign M47_SC_AR_payld[181:0] = out_swbd_7_M02_SC_AR_PAYLD;
  assign M47_SC_AR_req[0] = out_swbd_7_M02_SC_AR_REQ;
  assign M47_SC_AR_send[0] = out_swbd_7_M02_SC_AR_SEND;
  assign M47_SC_AW_info[0] = out_swbd_7_M02_SC_AW_INFO;
  assign M47_SC_AW_payld[181:0] = out_swbd_7_M02_SC_AW_PAYLD;
  assign M47_SC_AW_req[0] = out_swbd_7_M02_SC_AW_REQ;
  assign M47_SC_AW_send[0] = out_swbd_7_M02_SC_AW_SEND;
  assign M47_SC_W_info[0] = out_swbd_7_M02_SC_W_INFO;
  assign M47_SC_W_payld[68:0] = out_swbd_7_M02_SC_W_PAYLD;
  assign M47_SC_W_req[0] = out_swbd_7_M02_SC_W_REQ;
  assign M47_SC_W_send[0] = out_swbd_7_M02_SC_W_SEND;
  assign M48_SC_AR_info[0] = out_swbd_7_M03_SC_AR_INFO;
  assign M48_SC_AR_payld[181:0] = out_swbd_7_M03_SC_AR_PAYLD;
  assign M48_SC_AR_req[0] = out_swbd_7_M03_SC_AR_REQ;
  assign M48_SC_AR_send[0] = out_swbd_7_M03_SC_AR_SEND;
  assign M48_SC_AW_info[0] = out_swbd_7_M03_SC_AW_INFO;
  assign M48_SC_AW_payld[181:0] = out_swbd_7_M03_SC_AW_PAYLD;
  assign M48_SC_AW_req[0] = out_swbd_7_M03_SC_AW_REQ;
  assign M48_SC_AW_send[0] = out_swbd_7_M03_SC_AW_SEND;
  assign M48_SC_W_info[0] = out_swbd_7_M03_SC_W_INFO;
  assign M48_SC_W_payld[68:0] = out_swbd_7_M03_SC_W_PAYLD;
  assign M48_SC_W_req[0] = out_swbd_7_M03_SC_W_REQ;
  assign M48_SC_W_send[0] = out_swbd_7_M03_SC_W_SEND;
  assign M49_SC_AR_info[0] = out_swbd_7_M04_SC_AR_INFO;
  assign M49_SC_AR_payld[181:0] = out_swbd_7_M04_SC_AR_PAYLD;
  assign M49_SC_AR_req[0] = out_swbd_7_M04_SC_AR_REQ;
  assign M49_SC_AR_send[0] = out_swbd_7_M04_SC_AR_SEND;
  assign M49_SC_AW_info[0] = out_swbd_7_M04_SC_AW_INFO;
  assign M49_SC_AW_payld[181:0] = out_swbd_7_M04_SC_AW_PAYLD;
  assign M49_SC_AW_req[0] = out_swbd_7_M04_SC_AW_REQ;
  assign M49_SC_AW_send[0] = out_swbd_7_M04_SC_AW_SEND;
  assign M49_SC_W_info[0] = out_swbd_7_M04_SC_W_INFO;
  assign M49_SC_W_payld[68:0] = out_swbd_7_M04_SC_W_PAYLD;
  assign M49_SC_W_req[0] = out_swbd_7_M04_SC_W_REQ;
  assign M49_SC_W_send[0] = out_swbd_7_M04_SC_W_SEND;
  assign M50_SC_AR_info[0] = out_swbd_7_M05_SC_AR_INFO;
  assign M50_SC_AR_payld[181:0] = out_swbd_7_M05_SC_AR_PAYLD;
  assign M50_SC_AR_req[0] = out_swbd_7_M05_SC_AR_REQ;
  assign M50_SC_AR_send[0] = out_swbd_7_M05_SC_AR_SEND;
  assign M50_SC_AW_info[0] = out_swbd_7_M05_SC_AW_INFO;
  assign M50_SC_AW_payld[181:0] = out_swbd_7_M05_SC_AW_PAYLD;
  assign M50_SC_AW_req[0] = out_swbd_7_M05_SC_AW_REQ;
  assign M50_SC_AW_send[0] = out_swbd_7_M05_SC_AW_SEND;
  assign M50_SC_W_info[0] = out_swbd_7_M05_SC_W_INFO;
  assign M50_SC_W_payld[68:0] = out_swbd_7_M05_SC_W_PAYLD;
  assign M50_SC_W_req[0] = out_swbd_7_M05_SC_W_REQ;
  assign M50_SC_W_send[0] = out_swbd_7_M05_SC_W_SEND;
  assign S00_SC_AR_1_INFO = S00_SC_AR_info[7:0];
  assign S00_SC_AR_1_PAYLD = S00_SC_AR_payld[181:0];
  assign S00_SC_AR_1_REQ = S00_SC_AR_req[7:0];
  assign S00_SC_AR_1_SEND = S00_SC_AR_send[7:0];
  assign S00_SC_AR_recv[7:0] = S00_SC_AR_1_RECV;
  assign S00_SC_AW_1_INFO = S00_SC_AW_info[7:0];
  assign S00_SC_AW_1_PAYLD = S00_SC_AW_payld[181:0];
  assign S00_SC_AW_1_REQ = S00_SC_AW_req[7:0];
  assign S00_SC_AW_1_SEND = S00_SC_AW_send[7:0];
  assign S00_SC_AW_recv[7:0] = S00_SC_AW_1_RECV;
  assign S00_SC_B_1_INFO = S00_SC_B_info[0];
  assign S00_SC_B_1_PAYLD = S00_SC_B_payld[8:0];
  assign S00_SC_B_1_REQ = S00_SC_B_req[0];
  assign S00_SC_B_1_SEND = S00_SC_B_send[0];
  assign S00_SC_B_recv[0] = S00_SC_B_1_RECV;
  assign S00_SC_R_1_INFO = S00_SC_R_info[0];
  assign S00_SC_R_1_PAYLD = S00_SC_R_payld[54:0];
  assign S00_SC_R_1_REQ = S00_SC_R_req[0];
  assign S00_SC_R_1_SEND = S00_SC_R_send[0];
  assign S00_SC_R_recv[0] = S00_SC_R_1_RECV;
  assign S00_SC_W_1_INFO = S00_SC_W_info[7:0];
  assign S00_SC_W_1_PAYLD = S00_SC_W_payld[68:0];
  assign S00_SC_W_1_REQ = S00_SC_W_req[7:0];
  assign S00_SC_W_1_SEND = S00_SC_W_send[7:0];
  assign S00_SC_W_recv[7:0] = S00_SC_W_1_RECV;
  assign S01_SC_B_1_INFO = S01_SC_B_info[0];
  assign S01_SC_B_1_PAYLD = S01_SC_B_payld[8:0];
  assign S01_SC_B_1_REQ = S01_SC_B_req[0];
  assign S01_SC_B_1_SEND = S01_SC_B_send[0];
  assign S01_SC_B_recv[0] = S01_SC_B_1_RECV;
  assign S01_SC_R_1_INFO = S01_SC_R_info[0];
  assign S01_SC_R_1_PAYLD = S01_SC_R_payld[54:0];
  assign S01_SC_R_1_REQ = S01_SC_R_req[0];
  assign S01_SC_R_1_SEND = S01_SC_R_send[0];
  assign S01_SC_R_recv[0] = S01_SC_R_1_RECV;
  assign S02_SC_B_1_INFO = S02_SC_B_info[0];
  assign S02_SC_B_1_PAYLD = S02_SC_B_payld[8:0];
  assign S02_SC_B_1_REQ = S02_SC_B_req[0];
  assign S02_SC_B_1_SEND = S02_SC_B_send[0];
  assign S02_SC_B_recv[0] = S02_SC_B_1_RECV;
  assign S02_SC_R_1_INFO = S02_SC_R_info[0];
  assign S02_SC_R_1_PAYLD = S02_SC_R_payld[54:0];
  assign S02_SC_R_1_REQ = S02_SC_R_req[0];
  assign S02_SC_R_1_SEND = S02_SC_R_send[0];
  assign S02_SC_R_recv[0] = S02_SC_R_1_RECV;
  assign S03_SC_B_1_INFO = S03_SC_B_info[0];
  assign S03_SC_B_1_PAYLD = S03_SC_B_payld[8:0];
  assign S03_SC_B_1_REQ = S03_SC_B_req[0];
  assign S03_SC_B_1_SEND = S03_SC_B_send[0];
  assign S03_SC_B_recv[0] = S03_SC_B_1_RECV;
  assign S03_SC_R_1_INFO = S03_SC_R_info[0];
  assign S03_SC_R_1_PAYLD = S03_SC_R_payld[54:0];
  assign S03_SC_R_1_REQ = S03_SC_R_req[0];
  assign S03_SC_R_1_SEND = S03_SC_R_send[0];
  assign S03_SC_R_recv[0] = S03_SC_R_1_RECV;
  assign S04_SC_B_1_INFO = S04_SC_B_info[0];
  assign S04_SC_B_1_PAYLD = S04_SC_B_payld[8:0];
  assign S04_SC_B_1_REQ = S04_SC_B_req[0];
  assign S04_SC_B_1_SEND = S04_SC_B_send[0];
  assign S04_SC_B_recv[0] = S04_SC_B_1_RECV;
  assign S04_SC_R_1_INFO = S04_SC_R_info[0];
  assign S04_SC_R_1_PAYLD = S04_SC_R_payld[54:0];
  assign S04_SC_R_1_REQ = S04_SC_R_req[0];
  assign S04_SC_R_1_SEND = S04_SC_R_send[0];
  assign S04_SC_R_recv[0] = S04_SC_R_1_RECV;
  assign S05_SC_B_1_INFO = S05_SC_B_info[0];
  assign S05_SC_B_1_PAYLD = S05_SC_B_payld[8:0];
  assign S05_SC_B_1_REQ = S05_SC_B_req[0];
  assign S05_SC_B_1_SEND = S05_SC_B_send[0];
  assign S05_SC_B_recv[0] = S05_SC_B_1_RECV;
  assign S05_SC_R_1_INFO = S05_SC_R_info[0];
  assign S05_SC_R_1_PAYLD = S05_SC_R_payld[54:0];
  assign S05_SC_R_1_REQ = S05_SC_R_req[0];
  assign S05_SC_R_1_SEND = S05_SC_R_send[0];
  assign S05_SC_R_recv[0] = S05_SC_R_1_RECV;
  assign S06_SC_B_1_INFO = S06_SC_B_info[0];
  assign S06_SC_B_1_PAYLD = S06_SC_B_payld[8:0];
  assign S06_SC_B_1_REQ = S06_SC_B_req[0];
  assign S06_SC_B_1_SEND = S06_SC_B_send[0];
  assign S06_SC_B_recv[0] = S06_SC_B_1_RECV;
  assign S06_SC_R_1_INFO = S06_SC_R_info[0];
  assign S06_SC_R_1_PAYLD = S06_SC_R_payld[54:0];
  assign S06_SC_R_1_REQ = S06_SC_R_req[0];
  assign S06_SC_R_1_SEND = S06_SC_R_send[0];
  assign S06_SC_R_recv[0] = S06_SC_R_1_RECV;
  assign S07_SC_B_1_INFO = S07_SC_B_info[0];
  assign S07_SC_B_1_PAYLD = S07_SC_B_payld[8:0];
  assign S07_SC_B_1_REQ = S07_SC_B_req[0];
  assign S07_SC_B_1_SEND = S07_SC_B_send[0];
  assign S07_SC_B_recv[0] = S07_SC_B_1_RECV;
  assign S07_SC_R_1_INFO = S07_SC_R_info[0];
  assign S07_SC_R_1_PAYLD = S07_SC_R_payld[54:0];
  assign S07_SC_R_1_REQ = S07_SC_R_req[0];
  assign S07_SC_R_1_SEND = S07_SC_R_send[0];
  assign S07_SC_R_recv[0] = S07_SC_R_1_RECV;
  assign S08_SC_B_1_INFO = S08_SC_B_info[0];
  assign S08_SC_B_1_PAYLD = S08_SC_B_payld[8:0];
  assign S08_SC_B_1_REQ = S08_SC_B_req[0];
  assign S08_SC_B_1_SEND = S08_SC_B_send[0];
  assign S08_SC_B_recv[0] = S08_SC_B_1_RECV;
  assign S08_SC_R_1_INFO = S08_SC_R_info[0];
  assign S08_SC_R_1_PAYLD = S08_SC_R_payld[54:0];
  assign S08_SC_R_1_REQ = S08_SC_R_req[0];
  assign S08_SC_R_1_SEND = S08_SC_R_send[0];
  assign S08_SC_R_recv[0] = S08_SC_R_1_RECV;
  assign S09_SC_B_1_INFO = S09_SC_B_info[0];
  assign S09_SC_B_1_PAYLD = S09_SC_B_payld[8:0];
  assign S09_SC_B_1_REQ = S09_SC_B_req[0];
  assign S09_SC_B_1_SEND = S09_SC_B_send[0];
  assign S09_SC_B_recv[0] = S09_SC_B_1_RECV;
  assign S09_SC_R_1_INFO = S09_SC_R_info[0];
  assign S09_SC_R_1_PAYLD = S09_SC_R_payld[54:0];
  assign S09_SC_R_1_REQ = S09_SC_R_req[0];
  assign S09_SC_R_1_SEND = S09_SC_R_send[0];
  assign S09_SC_R_recv[0] = S09_SC_R_1_RECV;
  assign S10_SC_B_1_INFO = S10_SC_B_info[0];
  assign S10_SC_B_1_PAYLD = S10_SC_B_payld[8:0];
  assign S10_SC_B_1_REQ = S10_SC_B_req[0];
  assign S10_SC_B_1_SEND = S10_SC_B_send[0];
  assign S10_SC_B_recv[0] = S10_SC_B_1_RECV;
  assign S10_SC_R_1_INFO = S10_SC_R_info[0];
  assign S10_SC_R_1_PAYLD = S10_SC_R_payld[54:0];
  assign S10_SC_R_1_REQ = S10_SC_R_req[0];
  assign S10_SC_R_1_SEND = S10_SC_R_send[0];
  assign S10_SC_R_recv[0] = S10_SC_R_1_RECV;
  assign S11_SC_B_1_INFO = S11_SC_B_info[0];
  assign S11_SC_B_1_PAYLD = S11_SC_B_payld[8:0];
  assign S11_SC_B_1_REQ = S11_SC_B_req[0];
  assign S11_SC_B_1_SEND = S11_SC_B_send[0];
  assign S11_SC_B_recv[0] = S11_SC_B_1_RECV;
  assign S11_SC_R_1_INFO = S11_SC_R_info[0];
  assign S11_SC_R_1_PAYLD = S11_SC_R_payld[54:0];
  assign S11_SC_R_1_REQ = S11_SC_R_req[0];
  assign S11_SC_R_1_SEND = S11_SC_R_send[0];
  assign S11_SC_R_recv[0] = S11_SC_R_1_RECV;
  assign S12_SC_B_1_INFO = S12_SC_B_info[0];
  assign S12_SC_B_1_PAYLD = S12_SC_B_payld[8:0];
  assign S12_SC_B_1_REQ = S12_SC_B_req[0];
  assign S12_SC_B_1_SEND = S12_SC_B_send[0];
  assign S12_SC_B_recv[0] = S12_SC_B_1_RECV;
  assign S12_SC_R_1_INFO = S12_SC_R_info[0];
  assign S12_SC_R_1_PAYLD = S12_SC_R_payld[54:0];
  assign S12_SC_R_1_REQ = S12_SC_R_req[0];
  assign S12_SC_R_1_SEND = S12_SC_R_send[0];
  assign S12_SC_R_recv[0] = S12_SC_R_1_RECV;
  assign S13_SC_B_1_INFO = S13_SC_B_info[0];
  assign S13_SC_B_1_PAYLD = S13_SC_B_payld[8:0];
  assign S13_SC_B_1_REQ = S13_SC_B_req[0];
  assign S13_SC_B_1_SEND = S13_SC_B_send[0];
  assign S13_SC_B_recv[0] = S13_SC_B_1_RECV;
  assign S13_SC_R_1_INFO = S13_SC_R_info[0];
  assign S13_SC_R_1_PAYLD = S13_SC_R_payld[54:0];
  assign S13_SC_R_1_REQ = S13_SC_R_req[0];
  assign S13_SC_R_1_SEND = S13_SC_R_send[0];
  assign S13_SC_R_recv[0] = S13_SC_R_1_RECV;
  assign S14_SC_B_1_INFO = S14_SC_B_info[0];
  assign S14_SC_B_1_PAYLD = S14_SC_B_payld[8:0];
  assign S14_SC_B_1_REQ = S14_SC_B_req[0];
  assign S14_SC_B_1_SEND = S14_SC_B_send[0];
  assign S14_SC_B_recv[0] = S14_SC_B_1_RECV;
  assign S14_SC_R_1_INFO = S14_SC_R_info[0];
  assign S14_SC_R_1_PAYLD = S14_SC_R_payld[54:0];
  assign S14_SC_R_1_REQ = S14_SC_R_req[0];
  assign S14_SC_R_1_SEND = S14_SC_R_send[0];
  assign S14_SC_R_recv[0] = S14_SC_R_1_RECV;
  assign S15_SC_B_1_INFO = S15_SC_B_info[0];
  assign S15_SC_B_1_PAYLD = S15_SC_B_payld[8:0];
  assign S15_SC_B_1_REQ = S15_SC_B_req[0];
  assign S15_SC_B_1_SEND = S15_SC_B_send[0];
  assign S15_SC_B_recv[0] = S15_SC_B_1_RECV;
  assign S15_SC_R_1_INFO = S15_SC_R_info[0];
  assign S15_SC_R_1_PAYLD = S15_SC_R_payld[54:0];
  assign S15_SC_R_1_REQ = S15_SC_R_req[0];
  assign S15_SC_R_1_SEND = S15_SC_R_send[0];
  assign S15_SC_R_recv[0] = S15_SC_R_1_RECV;
  assign S16_SC_B_1_INFO = S16_SC_B_info[0];
  assign S16_SC_B_1_PAYLD = S16_SC_B_payld[8:0];
  assign S16_SC_B_1_REQ = S16_SC_B_req[0];
  assign S16_SC_B_1_SEND = S16_SC_B_send[0];
  assign S16_SC_B_recv[0] = S16_SC_B_1_RECV;
  assign S16_SC_R_1_INFO = S16_SC_R_info[0];
  assign S16_SC_R_1_PAYLD = S16_SC_R_payld[54:0];
  assign S16_SC_R_1_REQ = S16_SC_R_req[0];
  assign S16_SC_R_1_SEND = S16_SC_R_send[0];
  assign S16_SC_R_recv[0] = S16_SC_R_1_RECV;
  assign S17_SC_B_1_INFO = S17_SC_B_info[0];
  assign S17_SC_B_1_PAYLD = S17_SC_B_payld[8:0];
  assign S17_SC_B_1_REQ = S17_SC_B_req[0];
  assign S17_SC_B_1_SEND = S17_SC_B_send[0];
  assign S17_SC_B_recv[0] = S17_SC_B_1_RECV;
  assign S17_SC_R_1_INFO = S17_SC_R_info[0];
  assign S17_SC_R_1_PAYLD = S17_SC_R_payld[54:0];
  assign S17_SC_R_1_REQ = S17_SC_R_req[0];
  assign S17_SC_R_1_SEND = S17_SC_R_send[0];
  assign S17_SC_R_recv[0] = S17_SC_R_1_RECV;
  assign S18_SC_B_1_INFO = S18_SC_B_info[0];
  assign S18_SC_B_1_PAYLD = S18_SC_B_payld[8:0];
  assign S18_SC_B_1_REQ = S18_SC_B_req[0];
  assign S18_SC_B_1_SEND = S18_SC_B_send[0];
  assign S18_SC_B_recv[0] = S18_SC_B_1_RECV;
  assign S18_SC_R_1_INFO = S18_SC_R_info[0];
  assign S18_SC_R_1_PAYLD = S18_SC_R_payld[54:0];
  assign S18_SC_R_1_REQ = S18_SC_R_req[0];
  assign S18_SC_R_1_SEND = S18_SC_R_send[0];
  assign S18_SC_R_recv[0] = S18_SC_R_1_RECV;
  assign S19_SC_B_1_INFO = S19_SC_B_info[0];
  assign S19_SC_B_1_PAYLD = S19_SC_B_payld[8:0];
  assign S19_SC_B_1_REQ = S19_SC_B_req[0];
  assign S19_SC_B_1_SEND = S19_SC_B_send[0];
  assign S19_SC_B_recv[0] = S19_SC_B_1_RECV;
  assign S19_SC_R_1_INFO = S19_SC_R_info[0];
  assign S19_SC_R_1_PAYLD = S19_SC_R_payld[54:0];
  assign S19_SC_R_1_REQ = S19_SC_R_req[0];
  assign S19_SC_R_1_SEND = S19_SC_R_send[0];
  assign S19_SC_R_recv[0] = S19_SC_R_1_RECV;
  assign S20_SC_B_1_INFO = S20_SC_B_info[0];
  assign S20_SC_B_1_PAYLD = S20_SC_B_payld[8:0];
  assign S20_SC_B_1_REQ = S20_SC_B_req[0];
  assign S20_SC_B_1_SEND = S20_SC_B_send[0];
  assign S20_SC_B_recv[0] = S20_SC_B_1_RECV;
  assign S20_SC_R_1_INFO = S20_SC_R_info[0];
  assign S20_SC_R_1_PAYLD = S20_SC_R_payld[54:0];
  assign S20_SC_R_1_REQ = S20_SC_R_req[0];
  assign S20_SC_R_1_SEND = S20_SC_R_send[0];
  assign S20_SC_R_recv[0] = S20_SC_R_1_RECV;
  assign S21_SC_B_1_INFO = S21_SC_B_info[0];
  assign S21_SC_B_1_PAYLD = S21_SC_B_payld[8:0];
  assign S21_SC_B_1_REQ = S21_SC_B_req[0];
  assign S21_SC_B_1_SEND = S21_SC_B_send[0];
  assign S21_SC_B_recv[0] = S21_SC_B_1_RECV;
  assign S21_SC_R_1_INFO = S21_SC_R_info[0];
  assign S21_SC_R_1_PAYLD = S21_SC_R_payld[54:0];
  assign S21_SC_R_1_REQ = S21_SC_R_req[0];
  assign S21_SC_R_1_SEND = S21_SC_R_send[0];
  assign S21_SC_R_recv[0] = S21_SC_R_1_RECV;
  assign S22_SC_B_1_INFO = S22_SC_B_info[0];
  assign S22_SC_B_1_PAYLD = S22_SC_B_payld[8:0];
  assign S22_SC_B_1_REQ = S22_SC_B_req[0];
  assign S22_SC_B_1_SEND = S22_SC_B_send[0];
  assign S22_SC_B_recv[0] = S22_SC_B_1_RECV;
  assign S22_SC_R_1_INFO = S22_SC_R_info[0];
  assign S22_SC_R_1_PAYLD = S22_SC_R_payld[54:0];
  assign S22_SC_R_1_REQ = S22_SC_R_req[0];
  assign S22_SC_R_1_SEND = S22_SC_R_send[0];
  assign S22_SC_R_recv[0] = S22_SC_R_1_RECV;
  assign S23_SC_B_1_INFO = S23_SC_B_info[0];
  assign S23_SC_B_1_PAYLD = S23_SC_B_payld[8:0];
  assign S23_SC_B_1_REQ = S23_SC_B_req[0];
  assign S23_SC_B_1_SEND = S23_SC_B_send[0];
  assign S23_SC_B_recv[0] = S23_SC_B_1_RECV;
  assign S23_SC_R_1_INFO = S23_SC_R_info[0];
  assign S23_SC_R_1_PAYLD = S23_SC_R_payld[54:0];
  assign S23_SC_R_1_REQ = S23_SC_R_req[0];
  assign S23_SC_R_1_SEND = S23_SC_R_send[0];
  assign S23_SC_R_recv[0] = S23_SC_R_1_RECV;
  assign S24_SC_B_1_INFO = S24_SC_B_info[0];
  assign S24_SC_B_1_PAYLD = S24_SC_B_payld[8:0];
  assign S24_SC_B_1_REQ = S24_SC_B_req[0];
  assign S24_SC_B_1_SEND = S24_SC_B_send[0];
  assign S24_SC_B_recv[0] = S24_SC_B_1_RECV;
  assign S24_SC_R_1_INFO = S24_SC_R_info[0];
  assign S24_SC_R_1_PAYLD = S24_SC_R_payld[54:0];
  assign S24_SC_R_1_REQ = S24_SC_R_req[0];
  assign S24_SC_R_1_SEND = S24_SC_R_send[0];
  assign S24_SC_R_recv[0] = S24_SC_R_1_RECV;
  assign S25_SC_B_1_INFO = S25_SC_B_info[0];
  assign S25_SC_B_1_PAYLD = S25_SC_B_payld[8:0];
  assign S25_SC_B_1_REQ = S25_SC_B_req[0];
  assign S25_SC_B_1_SEND = S25_SC_B_send[0];
  assign S25_SC_B_recv[0] = S25_SC_B_1_RECV;
  assign S25_SC_R_1_INFO = S25_SC_R_info[0];
  assign S25_SC_R_1_PAYLD = S25_SC_R_payld[54:0];
  assign S25_SC_R_1_REQ = S25_SC_R_req[0];
  assign S25_SC_R_1_SEND = S25_SC_R_send[0];
  assign S25_SC_R_recv[0] = S25_SC_R_1_RECV;
  assign S26_SC_B_1_INFO = S26_SC_B_info[0];
  assign S26_SC_B_1_PAYLD = S26_SC_B_payld[8:0];
  assign S26_SC_B_1_REQ = S26_SC_B_req[0];
  assign S26_SC_B_1_SEND = S26_SC_B_send[0];
  assign S26_SC_B_recv[0] = S26_SC_B_1_RECV;
  assign S26_SC_R_1_INFO = S26_SC_R_info[0];
  assign S26_SC_R_1_PAYLD = S26_SC_R_payld[54:0];
  assign S26_SC_R_1_REQ = S26_SC_R_req[0];
  assign S26_SC_R_1_SEND = S26_SC_R_send[0];
  assign S26_SC_R_recv[0] = S26_SC_R_1_RECV;
  assign S27_SC_B_1_INFO = S27_SC_B_info[0];
  assign S27_SC_B_1_PAYLD = S27_SC_B_payld[8:0];
  assign S27_SC_B_1_REQ = S27_SC_B_req[0];
  assign S27_SC_B_1_SEND = S27_SC_B_send[0];
  assign S27_SC_B_recv[0] = S27_SC_B_1_RECV;
  assign S27_SC_R_1_INFO = S27_SC_R_info[0];
  assign S27_SC_R_1_PAYLD = S27_SC_R_payld[54:0];
  assign S27_SC_R_1_REQ = S27_SC_R_req[0];
  assign S27_SC_R_1_SEND = S27_SC_R_send[0];
  assign S27_SC_R_recv[0] = S27_SC_R_1_RECV;
  assign S28_SC_B_1_INFO = S28_SC_B_info[0];
  assign S28_SC_B_1_PAYLD = S28_SC_B_payld[8:0];
  assign S28_SC_B_1_REQ = S28_SC_B_req[0];
  assign S28_SC_B_1_SEND = S28_SC_B_send[0];
  assign S28_SC_B_recv[0] = S28_SC_B_1_RECV;
  assign S28_SC_R_1_INFO = S28_SC_R_info[0];
  assign S28_SC_R_1_PAYLD = S28_SC_R_payld[54:0];
  assign S28_SC_R_1_REQ = S28_SC_R_req[0];
  assign S28_SC_R_1_SEND = S28_SC_R_send[0];
  assign S28_SC_R_recv[0] = S28_SC_R_1_RECV;
  assign S29_SC_B_1_INFO = S29_SC_B_info[0];
  assign S29_SC_B_1_PAYLD = S29_SC_B_payld[8:0];
  assign S29_SC_B_1_REQ = S29_SC_B_req[0];
  assign S29_SC_B_1_SEND = S29_SC_B_send[0];
  assign S29_SC_B_recv[0] = S29_SC_B_1_RECV;
  assign S29_SC_R_1_INFO = S29_SC_R_info[0];
  assign S29_SC_R_1_PAYLD = S29_SC_R_payld[54:0];
  assign S29_SC_R_1_REQ = S29_SC_R_req[0];
  assign S29_SC_R_1_SEND = S29_SC_R_send[0];
  assign S29_SC_R_recv[0] = S29_SC_R_1_RECV;
  assign S30_SC_B_1_INFO = S30_SC_B_info[0];
  assign S30_SC_B_1_PAYLD = S30_SC_B_payld[8:0];
  assign S30_SC_B_1_REQ = S30_SC_B_req[0];
  assign S30_SC_B_1_SEND = S30_SC_B_send[0];
  assign S30_SC_B_recv[0] = S30_SC_B_1_RECV;
  assign S30_SC_R_1_INFO = S30_SC_R_info[0];
  assign S30_SC_R_1_PAYLD = S30_SC_R_payld[54:0];
  assign S30_SC_R_1_REQ = S30_SC_R_req[0];
  assign S30_SC_R_1_SEND = S30_SC_R_send[0];
  assign S30_SC_R_recv[0] = S30_SC_R_1_RECV;
  assign S31_SC_B_1_INFO = S31_SC_B_info[0];
  assign S31_SC_B_1_PAYLD = S31_SC_B_payld[8:0];
  assign S31_SC_B_1_REQ = S31_SC_B_req[0];
  assign S31_SC_B_1_SEND = S31_SC_B_send[0];
  assign S31_SC_B_recv[0] = S31_SC_B_1_RECV;
  assign S31_SC_R_1_INFO = S31_SC_R_info[0];
  assign S31_SC_R_1_PAYLD = S31_SC_R_payld[54:0];
  assign S31_SC_R_1_REQ = S31_SC_R_req[0];
  assign S31_SC_R_1_SEND = S31_SC_R_send[0];
  assign S31_SC_R_recv[0] = S31_SC_R_1_RECV;
  assign S32_SC_B_1_INFO = S32_SC_B_info[0];
  assign S32_SC_B_1_PAYLD = S32_SC_B_payld[8:0];
  assign S32_SC_B_1_REQ = S32_SC_B_req[0];
  assign S32_SC_B_1_SEND = S32_SC_B_send[0];
  assign S32_SC_B_recv[0] = S32_SC_B_1_RECV;
  assign S32_SC_R_1_INFO = S32_SC_R_info[0];
  assign S32_SC_R_1_PAYLD = S32_SC_R_payld[54:0];
  assign S32_SC_R_1_REQ = S32_SC_R_req[0];
  assign S32_SC_R_1_SEND = S32_SC_R_send[0];
  assign S32_SC_R_recv[0] = S32_SC_R_1_RECV;
  assign S33_SC_B_1_INFO = S33_SC_B_info[0];
  assign S33_SC_B_1_PAYLD = S33_SC_B_payld[8:0];
  assign S33_SC_B_1_REQ = S33_SC_B_req[0];
  assign S33_SC_B_1_SEND = S33_SC_B_send[0];
  assign S33_SC_B_recv[0] = S33_SC_B_1_RECV;
  assign S33_SC_R_1_INFO = S33_SC_R_info[0];
  assign S33_SC_R_1_PAYLD = S33_SC_R_payld[54:0];
  assign S33_SC_R_1_REQ = S33_SC_R_req[0];
  assign S33_SC_R_1_SEND = S33_SC_R_send[0];
  assign S33_SC_R_recv[0] = S33_SC_R_1_RECV;
  assign S34_SC_B_1_INFO = S34_SC_B_info[0];
  assign S34_SC_B_1_PAYLD = S34_SC_B_payld[8:0];
  assign S34_SC_B_1_REQ = S34_SC_B_req[0];
  assign S34_SC_B_1_SEND = S34_SC_B_send[0];
  assign S34_SC_B_recv[0] = S34_SC_B_1_RECV;
  assign S34_SC_R_1_INFO = S34_SC_R_info[0];
  assign S34_SC_R_1_PAYLD = S34_SC_R_payld[54:0];
  assign S34_SC_R_1_REQ = S34_SC_R_req[0];
  assign S34_SC_R_1_SEND = S34_SC_R_send[0];
  assign S34_SC_R_recv[0] = S34_SC_R_1_RECV;
  assign S35_SC_B_1_INFO = S35_SC_B_info[0];
  assign S35_SC_B_1_PAYLD = S35_SC_B_payld[8:0];
  assign S35_SC_B_1_REQ = S35_SC_B_req[0];
  assign S35_SC_B_1_SEND = S35_SC_B_send[0];
  assign S35_SC_B_recv[0] = S35_SC_B_1_RECV;
  assign S35_SC_R_1_INFO = S35_SC_R_info[0];
  assign S35_SC_R_1_PAYLD = S35_SC_R_payld[54:0];
  assign S35_SC_R_1_REQ = S35_SC_R_req[0];
  assign S35_SC_R_1_SEND = S35_SC_R_send[0];
  assign S35_SC_R_recv[0] = S35_SC_R_1_RECV;
  assign S36_SC_B_1_INFO = S36_SC_B_info[0];
  assign S36_SC_B_1_PAYLD = S36_SC_B_payld[8:0];
  assign S36_SC_B_1_REQ = S36_SC_B_req[0];
  assign S36_SC_B_1_SEND = S36_SC_B_send[0];
  assign S36_SC_B_recv[0] = S36_SC_B_1_RECV;
  assign S36_SC_R_1_INFO = S36_SC_R_info[0];
  assign S36_SC_R_1_PAYLD = S36_SC_R_payld[54:0];
  assign S36_SC_R_1_REQ = S36_SC_R_req[0];
  assign S36_SC_R_1_SEND = S36_SC_R_send[0];
  assign S36_SC_R_recv[0] = S36_SC_R_1_RECV;
  assign S37_SC_B_1_INFO = S37_SC_B_info[0];
  assign S37_SC_B_1_PAYLD = S37_SC_B_payld[8:0];
  assign S37_SC_B_1_REQ = S37_SC_B_req[0];
  assign S37_SC_B_1_SEND = S37_SC_B_send[0];
  assign S37_SC_B_recv[0] = S37_SC_B_1_RECV;
  assign S37_SC_R_1_INFO = S37_SC_R_info[0];
  assign S37_SC_R_1_PAYLD = S37_SC_R_payld[54:0];
  assign S37_SC_R_1_REQ = S37_SC_R_req[0];
  assign S37_SC_R_1_SEND = S37_SC_R_send[0];
  assign S37_SC_R_recv[0] = S37_SC_R_1_RECV;
  assign S38_SC_B_1_INFO = S38_SC_B_info[0];
  assign S38_SC_B_1_PAYLD = S38_SC_B_payld[8:0];
  assign S38_SC_B_1_REQ = S38_SC_B_req[0];
  assign S38_SC_B_1_SEND = S38_SC_B_send[0];
  assign S38_SC_B_recv[0] = S38_SC_B_1_RECV;
  assign S38_SC_R_1_INFO = S38_SC_R_info[0];
  assign S38_SC_R_1_PAYLD = S38_SC_R_payld[54:0];
  assign S38_SC_R_1_REQ = S38_SC_R_req[0];
  assign S38_SC_R_1_SEND = S38_SC_R_send[0];
  assign S38_SC_R_recv[0] = S38_SC_R_1_RECV;
  assign S39_SC_B_1_INFO = S39_SC_B_info[0];
  assign S39_SC_B_1_PAYLD = S39_SC_B_payld[8:0];
  assign S39_SC_B_1_REQ = S39_SC_B_req[0];
  assign S39_SC_B_1_SEND = S39_SC_B_send[0];
  assign S39_SC_B_recv[0] = S39_SC_B_1_RECV;
  assign S39_SC_R_1_INFO = S39_SC_R_info[0];
  assign S39_SC_R_1_PAYLD = S39_SC_R_payld[54:0];
  assign S39_SC_R_1_REQ = S39_SC_R_req[0];
  assign S39_SC_R_1_SEND = S39_SC_R_send[0];
  assign S39_SC_R_recv[0] = S39_SC_R_1_RECV;
  assign S40_SC_B_1_INFO = S40_SC_B_info[0];
  assign S40_SC_B_1_PAYLD = S40_SC_B_payld[8:0];
  assign S40_SC_B_1_REQ = S40_SC_B_req[0];
  assign S40_SC_B_1_SEND = S40_SC_B_send[0];
  assign S40_SC_B_recv[0] = S40_SC_B_1_RECV;
  assign S40_SC_R_1_INFO = S40_SC_R_info[0];
  assign S40_SC_R_1_PAYLD = S40_SC_R_payld[54:0];
  assign S40_SC_R_1_REQ = S40_SC_R_req[0];
  assign S40_SC_R_1_SEND = S40_SC_R_send[0];
  assign S40_SC_R_recv[0] = S40_SC_R_1_RECV;
  assign S41_SC_B_1_INFO = S41_SC_B_info[0];
  assign S41_SC_B_1_PAYLD = S41_SC_B_payld[8:0];
  assign S41_SC_B_1_REQ = S41_SC_B_req[0];
  assign S41_SC_B_1_SEND = S41_SC_B_send[0];
  assign S41_SC_B_recv[0] = S41_SC_B_1_RECV;
  assign S41_SC_R_1_INFO = S41_SC_R_info[0];
  assign S41_SC_R_1_PAYLD = S41_SC_R_payld[54:0];
  assign S41_SC_R_1_REQ = S41_SC_R_req[0];
  assign S41_SC_R_1_SEND = S41_SC_R_send[0];
  assign S41_SC_R_recv[0] = S41_SC_R_1_RECV;
  assign S42_SC_B_1_INFO = S42_SC_B_info[0];
  assign S42_SC_B_1_PAYLD = S42_SC_B_payld[8:0];
  assign S42_SC_B_1_REQ = S42_SC_B_req[0];
  assign S42_SC_B_1_SEND = S42_SC_B_send[0];
  assign S42_SC_B_recv[0] = S42_SC_B_1_RECV;
  assign S42_SC_R_1_INFO = S42_SC_R_info[0];
  assign S42_SC_R_1_PAYLD = S42_SC_R_payld[54:0];
  assign S42_SC_R_1_REQ = S42_SC_R_req[0];
  assign S42_SC_R_1_SEND = S42_SC_R_send[0];
  assign S42_SC_R_recv[0] = S42_SC_R_1_RECV;
  assign S43_SC_B_1_INFO = S43_SC_B_info[0];
  assign S43_SC_B_1_PAYLD = S43_SC_B_payld[8:0];
  assign S43_SC_B_1_REQ = S43_SC_B_req[0];
  assign S43_SC_B_1_SEND = S43_SC_B_send[0];
  assign S43_SC_B_recv[0] = S43_SC_B_1_RECV;
  assign S43_SC_R_1_INFO = S43_SC_R_info[0];
  assign S43_SC_R_1_PAYLD = S43_SC_R_payld[54:0];
  assign S43_SC_R_1_REQ = S43_SC_R_req[0];
  assign S43_SC_R_1_SEND = S43_SC_R_send[0];
  assign S43_SC_R_recv[0] = S43_SC_R_1_RECV;
  assign S44_SC_B_1_INFO = S44_SC_B_info[0];
  assign S44_SC_B_1_PAYLD = S44_SC_B_payld[8:0];
  assign S44_SC_B_1_REQ = S44_SC_B_req[0];
  assign S44_SC_B_1_SEND = S44_SC_B_send[0];
  assign S44_SC_B_recv[0] = S44_SC_B_1_RECV;
  assign S44_SC_R_1_INFO = S44_SC_R_info[0];
  assign S44_SC_R_1_PAYLD = S44_SC_R_payld[54:0];
  assign S44_SC_R_1_REQ = S44_SC_R_req[0];
  assign S44_SC_R_1_SEND = S44_SC_R_send[0];
  assign S44_SC_R_recv[0] = S44_SC_R_1_RECV;
  assign S45_SC_B_1_INFO = S45_SC_B_info[0];
  assign S45_SC_B_1_PAYLD = S45_SC_B_payld[8:0];
  assign S45_SC_B_1_REQ = S45_SC_B_req[0];
  assign S45_SC_B_1_SEND = S45_SC_B_send[0];
  assign S45_SC_B_recv[0] = S45_SC_B_1_RECV;
  assign S45_SC_R_1_INFO = S45_SC_R_info[0];
  assign S45_SC_R_1_PAYLD = S45_SC_R_payld[54:0];
  assign S45_SC_R_1_REQ = S45_SC_R_req[0];
  assign S45_SC_R_1_SEND = S45_SC_R_send[0];
  assign S45_SC_R_recv[0] = S45_SC_R_1_RECV;
  assign S46_SC_B_1_INFO = S46_SC_B_info[0];
  assign S46_SC_B_1_PAYLD = S46_SC_B_payld[8:0];
  assign S46_SC_B_1_REQ = S46_SC_B_req[0];
  assign S46_SC_B_1_SEND = S46_SC_B_send[0];
  assign S46_SC_B_recv[0] = S46_SC_B_1_RECV;
  assign S46_SC_R_1_INFO = S46_SC_R_info[0];
  assign S46_SC_R_1_PAYLD = S46_SC_R_payld[54:0];
  assign S46_SC_R_1_REQ = S46_SC_R_req[0];
  assign S46_SC_R_1_SEND = S46_SC_R_send[0];
  assign S46_SC_R_recv[0] = S46_SC_R_1_RECV;
  assign S47_SC_B_1_INFO = S47_SC_B_info[0];
  assign S47_SC_B_1_PAYLD = S47_SC_B_payld[8:0];
  assign S47_SC_B_1_REQ = S47_SC_B_req[0];
  assign S47_SC_B_1_SEND = S47_SC_B_send[0];
  assign S47_SC_B_recv[0] = S47_SC_B_1_RECV;
  assign S47_SC_R_1_INFO = S47_SC_R_info[0];
  assign S47_SC_R_1_PAYLD = S47_SC_R_payld[54:0];
  assign S47_SC_R_1_REQ = S47_SC_R_req[0];
  assign S47_SC_R_1_SEND = S47_SC_R_send[0];
  assign S47_SC_R_recv[0] = S47_SC_R_1_RECV;
  assign S48_SC_B_1_INFO = S48_SC_B_info[0];
  assign S48_SC_B_1_PAYLD = S48_SC_B_payld[8:0];
  assign S48_SC_B_1_REQ = S48_SC_B_req[0];
  assign S48_SC_B_1_SEND = S48_SC_B_send[0];
  assign S48_SC_B_recv[0] = S48_SC_B_1_RECV;
  assign S48_SC_R_1_INFO = S48_SC_R_info[0];
  assign S48_SC_R_1_PAYLD = S48_SC_R_payld[54:0];
  assign S48_SC_R_1_REQ = S48_SC_R_req[0];
  assign S48_SC_R_1_SEND = S48_SC_R_send[0];
  assign S48_SC_R_recv[0] = S48_SC_R_1_RECV;
  assign S49_SC_B_1_INFO = S49_SC_B_info[0];
  assign S49_SC_B_1_PAYLD = S49_SC_B_payld[8:0];
  assign S49_SC_B_1_REQ = S49_SC_B_req[0];
  assign S49_SC_B_1_SEND = S49_SC_B_send[0];
  assign S49_SC_B_recv[0] = S49_SC_B_1_RECV;
  assign S49_SC_R_1_INFO = S49_SC_R_info[0];
  assign S49_SC_R_1_PAYLD = S49_SC_R_payld[54:0];
  assign S49_SC_R_1_REQ = S49_SC_R_req[0];
  assign S49_SC_R_1_SEND = S49_SC_R_send[0];
  assign S49_SC_R_recv[0] = S49_SC_R_1_RECV;
  assign S50_SC_B_1_INFO = S50_SC_B_info[0];
  assign S50_SC_B_1_PAYLD = S50_SC_B_payld[8:0];
  assign S50_SC_B_1_REQ = S50_SC_B_req[0];
  assign S50_SC_B_1_SEND = S50_SC_B_send[0];
  assign S50_SC_B_recv[0] = S50_SC_B_1_RECV;
  assign S50_SC_R_1_INFO = S50_SC_R_info[0];
  assign S50_SC_R_1_PAYLD = S50_SC_R_payld[54:0];
  assign S50_SC_R_1_REQ = S50_SC_R_req[0];
  assign S50_SC_R_1_SEND = S50_SC_R_send[0];
  assign S50_SC_R_recv[0] = S50_SC_R_1_RECV;
  assign b_la_in_swbd_M00_SC_RECV = M00_SC_B_recv[7:0];
  assign m_sc_aclk_1 = m_sc_aclk;
  assign m_sc_aresetn_1 = m_sc_aresetn;
  assign out_swbd_0_M00_SC_AR_RECV = M00_SC_AR_recv[0];
  assign out_swbd_0_M00_SC_AW_RECV = M00_SC_AW_recv[0];
  assign out_swbd_0_M00_SC_W_RECV = M00_SC_W_recv[0];
  assign out_swbd_0_M01_SC_AR_RECV = M01_SC_AR_recv[0];
  assign out_swbd_0_M01_SC_AW_RECV = M01_SC_AW_recv[0];
  assign out_swbd_0_M01_SC_W_RECV = M01_SC_W_recv[0];
  assign out_swbd_0_M02_SC_AR_RECV = M02_SC_AR_recv[0];
  assign out_swbd_0_M02_SC_AW_RECV = M02_SC_AW_recv[0];
  assign out_swbd_0_M02_SC_W_RECV = M02_SC_W_recv[0];
  assign out_swbd_0_M03_SC_AR_RECV = M03_SC_AR_recv[0];
  assign out_swbd_0_M03_SC_AW_RECV = M03_SC_AW_recv[0];
  assign out_swbd_0_M03_SC_W_RECV = M03_SC_W_recv[0];
  assign out_swbd_0_M04_SC_AR_RECV = M04_SC_AR_recv[0];
  assign out_swbd_0_M04_SC_AW_RECV = M04_SC_AW_recv[0];
  assign out_swbd_0_M04_SC_W_RECV = M04_SC_W_recv[0];
  assign out_swbd_0_M05_SC_AR_RECV = M05_SC_AR_recv[0];
  assign out_swbd_0_M05_SC_AW_RECV = M05_SC_AW_recv[0];
  assign out_swbd_0_M05_SC_W_RECV = M05_SC_W_recv[0];
  assign out_swbd_0_M06_SC_AR_RECV = M06_SC_AR_recv[0];
  assign out_swbd_0_M06_SC_AW_RECV = M06_SC_AW_recv[0];
  assign out_swbd_0_M06_SC_W_RECV = M06_SC_W_recv[0];
  assign out_swbd_1_M00_SC_AR_RECV = M07_SC_AR_recv[0];
  assign out_swbd_1_M00_SC_AW_RECV = M07_SC_AW_recv[0];
  assign out_swbd_1_M00_SC_W_RECV = M07_SC_W_recv[0];
  assign out_swbd_1_M01_SC_AR_RECV = M08_SC_AR_recv[0];
  assign out_swbd_1_M01_SC_AW_RECV = M08_SC_AW_recv[0];
  assign out_swbd_1_M01_SC_W_RECV = M08_SC_W_recv[0];
  assign out_swbd_1_M02_SC_AR_RECV = M09_SC_AR_recv[0];
  assign out_swbd_1_M02_SC_AW_RECV = M09_SC_AW_recv[0];
  assign out_swbd_1_M02_SC_W_RECV = M09_SC_W_recv[0];
  assign out_swbd_1_M03_SC_AR_RECV = M10_SC_AR_recv[0];
  assign out_swbd_1_M03_SC_AW_RECV = M10_SC_AW_recv[0];
  assign out_swbd_1_M03_SC_W_RECV = M10_SC_W_recv[0];
  assign out_swbd_1_M04_SC_AR_RECV = M11_SC_AR_recv[0];
  assign out_swbd_1_M04_SC_AW_RECV = M11_SC_AW_recv[0];
  assign out_swbd_1_M04_SC_W_RECV = M11_SC_W_recv[0];
  assign out_swbd_1_M05_SC_AR_RECV = M12_SC_AR_recv[0];
  assign out_swbd_1_M05_SC_AW_RECV = M12_SC_AW_recv[0];
  assign out_swbd_1_M05_SC_W_RECV = M12_SC_W_recv[0];
  assign out_swbd_1_M06_SC_AR_RECV = M13_SC_AR_recv[0];
  assign out_swbd_1_M06_SC_AW_RECV = M13_SC_AW_recv[0];
  assign out_swbd_1_M06_SC_W_RECV = M13_SC_W_recv[0];
  assign out_swbd_2_M00_SC_AR_RECV = M14_SC_AR_recv[0];
  assign out_swbd_2_M00_SC_AW_RECV = M14_SC_AW_recv[0];
  assign out_swbd_2_M00_SC_W_RECV = M14_SC_W_recv[0];
  assign out_swbd_2_M01_SC_AR_RECV = M15_SC_AR_recv[0];
  assign out_swbd_2_M01_SC_AW_RECV = M15_SC_AW_recv[0];
  assign out_swbd_2_M01_SC_W_RECV = M15_SC_W_recv[0];
  assign out_swbd_2_M02_SC_AR_RECV = M16_SC_AR_recv[0];
  assign out_swbd_2_M02_SC_AW_RECV = M16_SC_AW_recv[0];
  assign out_swbd_2_M02_SC_W_RECV = M16_SC_W_recv[0];
  assign out_swbd_2_M03_SC_AR_RECV = M17_SC_AR_recv[0];
  assign out_swbd_2_M03_SC_AW_RECV = M17_SC_AW_recv[0];
  assign out_swbd_2_M03_SC_W_RECV = M17_SC_W_recv[0];
  assign out_swbd_2_M04_SC_AR_RECV = M18_SC_AR_recv[0];
  assign out_swbd_2_M04_SC_AW_RECV = M18_SC_AW_recv[0];
  assign out_swbd_2_M04_SC_W_RECV = M18_SC_W_recv[0];
  assign out_swbd_2_M05_SC_AR_RECV = M19_SC_AR_recv[0];
  assign out_swbd_2_M05_SC_AW_RECV = M19_SC_AW_recv[0];
  assign out_swbd_2_M05_SC_W_RECV = M19_SC_W_recv[0];
  assign out_swbd_2_M06_SC_AR_RECV = M20_SC_AR_recv[0];
  assign out_swbd_2_M06_SC_AW_RECV = M20_SC_AW_recv[0];
  assign out_swbd_2_M06_SC_W_RECV = M20_SC_W_recv[0];
  assign out_swbd_3_M00_SC_AR_RECV = M21_SC_AR_recv[0];
  assign out_swbd_3_M00_SC_AW_RECV = M21_SC_AW_recv[0];
  assign out_swbd_3_M00_SC_W_RECV = M21_SC_W_recv[0];
  assign out_swbd_3_M01_SC_AR_RECV = M22_SC_AR_recv[0];
  assign out_swbd_3_M01_SC_AW_RECV = M22_SC_AW_recv[0];
  assign out_swbd_3_M01_SC_W_RECV = M22_SC_W_recv[0];
  assign out_swbd_3_M02_SC_AR_RECV = M23_SC_AR_recv[0];
  assign out_swbd_3_M02_SC_AW_RECV = M23_SC_AW_recv[0];
  assign out_swbd_3_M02_SC_W_RECV = M23_SC_W_recv[0];
  assign out_swbd_3_M03_SC_AR_RECV = M24_SC_AR_recv[0];
  assign out_swbd_3_M03_SC_AW_RECV = M24_SC_AW_recv[0];
  assign out_swbd_3_M03_SC_W_RECV = M24_SC_W_recv[0];
  assign out_swbd_3_M04_SC_AR_RECV = M25_SC_AR_recv[0];
  assign out_swbd_3_M04_SC_AW_RECV = M25_SC_AW_recv[0];
  assign out_swbd_3_M04_SC_W_RECV = M25_SC_W_recv[0];
  assign out_swbd_3_M05_SC_AR_RECV = M26_SC_AR_recv[0];
  assign out_swbd_3_M05_SC_AW_RECV = M26_SC_AW_recv[0];
  assign out_swbd_3_M05_SC_W_RECV = M26_SC_W_recv[0];
  assign out_swbd_4_M00_SC_AR_RECV = M27_SC_AR_recv[0];
  assign out_swbd_4_M00_SC_AW_RECV = M27_SC_AW_recv[0];
  assign out_swbd_4_M00_SC_W_RECV = M27_SC_W_recv[0];
  assign out_swbd_4_M01_SC_AR_RECV = M28_SC_AR_recv[0];
  assign out_swbd_4_M01_SC_AW_RECV = M28_SC_AW_recv[0];
  assign out_swbd_4_M01_SC_W_RECV = M28_SC_W_recv[0];
  assign out_swbd_4_M02_SC_AR_RECV = M29_SC_AR_recv[0];
  assign out_swbd_4_M02_SC_AW_RECV = M29_SC_AW_recv[0];
  assign out_swbd_4_M02_SC_W_RECV = M29_SC_W_recv[0];
  assign out_swbd_4_M03_SC_AR_RECV = M30_SC_AR_recv[0];
  assign out_swbd_4_M03_SC_AW_RECV = M30_SC_AW_recv[0];
  assign out_swbd_4_M03_SC_W_RECV = M30_SC_W_recv[0];
  assign out_swbd_4_M04_SC_AR_RECV = M31_SC_AR_recv[0];
  assign out_swbd_4_M04_SC_AW_RECV = M31_SC_AW_recv[0];
  assign out_swbd_4_M04_SC_W_RECV = M31_SC_W_recv[0];
  assign out_swbd_4_M05_SC_AR_RECV = M32_SC_AR_recv[0];
  assign out_swbd_4_M05_SC_AW_RECV = M32_SC_AW_recv[0];
  assign out_swbd_4_M05_SC_W_RECV = M32_SC_W_recv[0];
  assign out_swbd_5_M00_SC_AR_RECV = M33_SC_AR_recv[0];
  assign out_swbd_5_M00_SC_AW_RECV = M33_SC_AW_recv[0];
  assign out_swbd_5_M00_SC_W_RECV = M33_SC_W_recv[0];
  assign out_swbd_5_M01_SC_AR_RECV = M34_SC_AR_recv[0];
  assign out_swbd_5_M01_SC_AW_RECV = M34_SC_AW_recv[0];
  assign out_swbd_5_M01_SC_W_RECV = M34_SC_W_recv[0];
  assign out_swbd_5_M02_SC_AR_RECV = M35_SC_AR_recv[0];
  assign out_swbd_5_M02_SC_AW_RECV = M35_SC_AW_recv[0];
  assign out_swbd_5_M02_SC_W_RECV = M35_SC_W_recv[0];
  assign out_swbd_5_M03_SC_AR_RECV = M36_SC_AR_recv[0];
  assign out_swbd_5_M03_SC_AW_RECV = M36_SC_AW_recv[0];
  assign out_swbd_5_M03_SC_W_RECV = M36_SC_W_recv[0];
  assign out_swbd_5_M04_SC_AR_RECV = M37_SC_AR_recv[0];
  assign out_swbd_5_M04_SC_AW_RECV = M37_SC_AW_recv[0];
  assign out_swbd_5_M04_SC_W_RECV = M37_SC_W_recv[0];
  assign out_swbd_5_M05_SC_AR_RECV = M38_SC_AR_recv[0];
  assign out_swbd_5_M05_SC_AW_RECV = M38_SC_AW_recv[0];
  assign out_swbd_5_M05_SC_W_RECV = M38_SC_W_recv[0];
  assign out_swbd_6_M00_SC_AR_RECV = M39_SC_AR_recv[0];
  assign out_swbd_6_M00_SC_AW_RECV = M39_SC_AW_recv[0];
  assign out_swbd_6_M00_SC_W_RECV = M39_SC_W_recv[0];
  assign out_swbd_6_M01_SC_AR_RECV = M40_SC_AR_recv[0];
  assign out_swbd_6_M01_SC_AW_RECV = M40_SC_AW_recv[0];
  assign out_swbd_6_M01_SC_W_RECV = M40_SC_W_recv[0];
  assign out_swbd_6_M02_SC_AR_RECV = M41_SC_AR_recv[0];
  assign out_swbd_6_M02_SC_AW_RECV = M41_SC_AW_recv[0];
  assign out_swbd_6_M02_SC_W_RECV = M41_SC_W_recv[0];
  assign out_swbd_6_M03_SC_AR_RECV = M42_SC_AR_recv[0];
  assign out_swbd_6_M03_SC_AW_RECV = M42_SC_AW_recv[0];
  assign out_swbd_6_M03_SC_W_RECV = M42_SC_W_recv[0];
  assign out_swbd_6_M04_SC_AR_RECV = M43_SC_AR_recv[0];
  assign out_swbd_6_M04_SC_AW_RECV = M43_SC_AW_recv[0];
  assign out_swbd_6_M04_SC_W_RECV = M43_SC_W_recv[0];
  assign out_swbd_6_M05_SC_AR_RECV = M44_SC_AR_recv[0];
  assign out_swbd_6_M05_SC_AW_RECV = M44_SC_AW_recv[0];
  assign out_swbd_6_M05_SC_W_RECV = M44_SC_W_recv[0];
  assign out_swbd_7_M00_SC_AR_RECV = M45_SC_AR_recv[0];
  assign out_swbd_7_M00_SC_AW_RECV = M45_SC_AW_recv[0];
  assign out_swbd_7_M00_SC_W_RECV = M45_SC_W_recv[0];
  assign out_swbd_7_M01_SC_AR_RECV = M46_SC_AR_recv[0];
  assign out_swbd_7_M01_SC_AW_RECV = M46_SC_AW_recv[0];
  assign out_swbd_7_M01_SC_W_RECV = M46_SC_W_recv[0];
  assign out_swbd_7_M02_SC_AR_RECV = M47_SC_AR_recv[0];
  assign out_swbd_7_M02_SC_AW_RECV = M47_SC_AW_recv[0];
  assign out_swbd_7_M02_SC_W_RECV = M47_SC_W_recv[0];
  assign out_swbd_7_M03_SC_AR_RECV = M48_SC_AR_recv[0];
  assign out_swbd_7_M03_SC_AW_RECV = M48_SC_AW_recv[0];
  assign out_swbd_7_M03_SC_W_RECV = M48_SC_W_recv[0];
  assign out_swbd_7_M04_SC_AR_RECV = M49_SC_AR_recv[0];
  assign out_swbd_7_M04_SC_AW_RECV = M49_SC_AW_recv[0];
  assign out_swbd_7_M04_SC_W_RECV = M49_SC_W_recv[0];
  assign out_swbd_7_M05_SC_AR_RECV = M50_SC_AR_recv[0];
  assign out_swbd_7_M05_SC_AW_RECV = M50_SC_AW_recv[0];
  assign out_swbd_7_M05_SC_W_RECV = M50_SC_W_recv[0];
  assign r_la_in_swbd_M00_SC_RECV = M00_SC_R_recv[7:0];
  assign s_sc_aclk_1 = s_sc_aclk;
  assign s_sc_aresetn_1 = s_sc_aresetn;
  bd_afc3_arinsw_0 ar_la_in_swbd
       (.aclk(s_sc_aclk_1),
        .aclken(1'b1),
        .m_sc_info({ar_la_in_swbd_M07_SC_INFO,ar_la_in_swbd_M06_SC_INFO,ar_la_in_swbd_M05_SC_INFO,ar_la_in_swbd_M04_SC_INFO,ar_la_in_swbd_M03_SC_INFO,ar_la_in_swbd_M02_SC_INFO,ar_la_in_swbd_M01_SC_INFO,ar_la_in_swbd_M00_SC_INFO}),
        .m_sc_payld({ar_la_in_swbd_M07_SC_PAYLD,ar_la_in_swbd_M06_SC_PAYLD,ar_la_in_swbd_M05_SC_PAYLD,ar_la_in_swbd_M04_SC_PAYLD,ar_la_in_swbd_M03_SC_PAYLD,ar_la_in_swbd_M02_SC_PAYLD,ar_la_in_swbd_M01_SC_PAYLD,ar_la_in_swbd_M00_SC_PAYLD}),
        .m_sc_recv({ar_la_in_swbd_M07_SC_RECV,ar_la_in_swbd_M06_SC_RECV,ar_la_in_swbd_M05_SC_RECV,ar_la_in_swbd_M04_SC_RECV,ar_la_in_swbd_M03_SC_RECV,ar_la_in_swbd_M02_SC_RECV,ar_la_in_swbd_M01_SC_RECV,ar_la_in_swbd_M00_SC_RECV}),
        .m_sc_req({ar_la_in_swbd_M07_SC_REQ,ar_la_in_swbd_M06_SC_REQ,ar_la_in_swbd_M05_SC_REQ,ar_la_in_swbd_M04_SC_REQ,ar_la_in_swbd_M03_SC_REQ,ar_la_in_swbd_M02_SC_REQ,ar_la_in_swbd_M01_SC_REQ,ar_la_in_swbd_M00_SC_REQ}),
        .m_sc_send({ar_la_in_swbd_M07_SC_SEND,ar_la_in_swbd_M06_SC_SEND,ar_la_in_swbd_M05_SC_SEND,ar_la_in_swbd_M04_SC_SEND,ar_la_in_swbd_M03_SC_SEND,ar_la_in_swbd_M02_SC_SEND,ar_la_in_swbd_M01_SC_SEND,ar_la_in_swbd_M00_SC_SEND}),
        .s_sc_info(S00_SC_AR_1_INFO),
        .s_sc_payld(S00_SC_AR_1_PAYLD),
        .s_sc_recv(S00_SC_AR_1_RECV),
        .s_sc_req(S00_SC_AR_1_REQ),
        .s_sc_send(S00_SC_AR_1_SEND));
  bd_afc3_awinsw_0 aw_la_in_swbd
       (.aclk(s_sc_aclk_1),
        .aclken(1'b1),
        .m_sc_info({aw_la_in_swbd_M07_SC_INFO,aw_la_in_swbd_M06_SC_INFO,aw_la_in_swbd_M05_SC_INFO,aw_la_in_swbd_M04_SC_INFO,aw_la_in_swbd_M03_SC_INFO,aw_la_in_swbd_M02_SC_INFO,aw_la_in_swbd_M01_SC_INFO,aw_la_in_swbd_M00_SC_INFO}),
        .m_sc_payld({aw_la_in_swbd_M07_SC_PAYLD,aw_la_in_swbd_M06_SC_PAYLD,aw_la_in_swbd_M05_SC_PAYLD,aw_la_in_swbd_M04_SC_PAYLD,aw_la_in_swbd_M03_SC_PAYLD,aw_la_in_swbd_M02_SC_PAYLD,aw_la_in_swbd_M01_SC_PAYLD,aw_la_in_swbd_M00_SC_PAYLD}),
        .m_sc_recv({aw_la_in_swbd_M07_SC_RECV,aw_la_in_swbd_M06_SC_RECV,aw_la_in_swbd_M05_SC_RECV,aw_la_in_swbd_M04_SC_RECV,aw_la_in_swbd_M03_SC_RECV,aw_la_in_swbd_M02_SC_RECV,aw_la_in_swbd_M01_SC_RECV,aw_la_in_swbd_M00_SC_RECV}),
        .m_sc_req({aw_la_in_swbd_M07_SC_REQ,aw_la_in_swbd_M06_SC_REQ,aw_la_in_swbd_M05_SC_REQ,aw_la_in_swbd_M04_SC_REQ,aw_la_in_swbd_M03_SC_REQ,aw_la_in_swbd_M02_SC_REQ,aw_la_in_swbd_M01_SC_REQ,aw_la_in_swbd_M00_SC_REQ}),
        .m_sc_send({aw_la_in_swbd_M07_SC_SEND,aw_la_in_swbd_M06_SC_SEND,aw_la_in_swbd_M05_SC_SEND,aw_la_in_swbd_M04_SC_SEND,aw_la_in_swbd_M03_SC_SEND,aw_la_in_swbd_M02_SC_SEND,aw_la_in_swbd_M01_SC_SEND,aw_la_in_swbd_M00_SC_SEND}),
        .s_sc_info(S00_SC_AW_1_INFO),
        .s_sc_payld(S00_SC_AW_1_PAYLD),
        .s_sc_recv(S00_SC_AW_1_RECV),
        .s_sc_req(S00_SC_AW_1_REQ),
        .s_sc_send(S00_SC_AW_1_SEND));
  bd_afc3_binsw_0 b_la_in_swbd
       (.aclk(s_sc_aclk_1),
        .aclken(1'b1),
        .m_sc_info(b_la_in_swbd_M00_SC_INFO),
        .m_sc_payld(b_la_in_swbd_M00_SC_PAYLD),
        .m_sc_recv(b_la_in_swbd_M00_SC_RECV),
        .m_sc_req(b_la_in_swbd_M00_SC_REQ),
        .m_sc_send(b_la_in_swbd_M00_SC_SEND),
        .s_sc_info({i_nodes_7_M_SC_B_INFO,i_nodes_6_M_SC_B_INFO,i_nodes_5_M_SC_B_INFO,i_nodes_4_M_SC_B_INFO,i_nodes_3_M_SC_B_INFO,i_nodes_2_M_SC_B_INFO,i_nodes_1_M_SC_B_INFO,i_nodes_0_M_SC_B_INFO}),
        .s_sc_payld({i_nodes_7_M_SC_B_PAYLD,i_nodes_6_M_SC_B_PAYLD,i_nodes_5_M_SC_B_PAYLD,i_nodes_4_M_SC_B_PAYLD,i_nodes_3_M_SC_B_PAYLD,i_nodes_2_M_SC_B_PAYLD,i_nodes_1_M_SC_B_PAYLD,i_nodes_0_M_SC_B_PAYLD}),
        .s_sc_recv({i_nodes_7_M_SC_B_RECV,i_nodes_6_M_SC_B_RECV,i_nodes_5_M_SC_B_RECV,i_nodes_4_M_SC_B_RECV,i_nodes_3_M_SC_B_RECV,i_nodes_2_M_SC_B_RECV,i_nodes_1_M_SC_B_RECV,i_nodes_0_M_SC_B_RECV}),
        .s_sc_req({i_nodes_7_M_SC_B_REQ,i_nodes_6_M_SC_B_REQ,i_nodes_5_M_SC_B_REQ,i_nodes_4_M_SC_B_REQ,i_nodes_3_M_SC_B_REQ,i_nodes_2_M_SC_B_REQ,i_nodes_1_M_SC_B_REQ,i_nodes_0_M_SC_B_REQ}),
        .s_sc_send({i_nodes_7_M_SC_B_SEND,i_nodes_6_M_SC_B_SEND,i_nodes_5_M_SC_B_SEND,i_nodes_4_M_SC_B_SEND,i_nodes_3_M_SC_B_SEND,i_nodes_2_M_SC_B_SEND,i_nodes_1_M_SC_B_SEND,i_nodes_0_M_SC_B_SEND}));
  i_nodes_0_imp_JJ2Z8G i_nodes_0
       (.M_SC_AR_info(S00_SC_AR_2_INFO),
        .M_SC_AR_payld(S00_SC_AR_2_PAYLD),
        .M_SC_AR_recv(S00_SC_AR_2_RECV),
        .M_SC_AR_req(S00_SC_AR_2_REQ),
        .M_SC_AR_send(S00_SC_AR_2_SEND),
        .M_SC_AW_info(S00_SC_AW_2_INFO),
        .M_SC_AW_payld(S00_SC_AW_2_PAYLD),
        .M_SC_AW_recv(S00_SC_AW_2_RECV),
        .M_SC_AW_req(S00_SC_AW_2_REQ),
        .M_SC_AW_send(S00_SC_AW_2_SEND),
        .M_SC_B_info(i_nodes_0_M_SC_B_INFO),
        .M_SC_B_payld(i_nodes_0_M_SC_B_PAYLD),
        .M_SC_B_recv(i_nodes_0_M_SC_B_RECV),
        .M_SC_B_req(i_nodes_0_M_SC_B_REQ),
        .M_SC_B_send(i_nodes_0_M_SC_B_SEND),
        .M_SC_R_info(i_nodes_0_M_SC_R_INFO),
        .M_SC_R_payld(i_nodes_0_M_SC_R_PAYLD),
        .M_SC_R_recv(i_nodes_0_M_SC_R_RECV),
        .M_SC_R_req(i_nodes_0_M_SC_R_REQ),
        .M_SC_R_send(i_nodes_0_M_SC_R_SEND),
        .M_SC_W_info(S00_SC_W_2_INFO),
        .M_SC_W_payld(S00_SC_W_2_PAYLD),
        .M_SC_W_recv(S00_SC_W_2_RECV),
        .M_SC_W_req(S00_SC_W_2_REQ),
        .M_SC_W_send(S00_SC_W_2_SEND),
        .S_SC_AR_info(ar_la_in_swbd_M00_SC_INFO),
        .S_SC_AR_payld(ar_la_in_swbd_M00_SC_PAYLD),
        .S_SC_AR_recv(ar_la_in_swbd_M00_SC_RECV),
        .S_SC_AR_req(ar_la_in_swbd_M00_SC_REQ),
        .S_SC_AR_send(ar_la_in_swbd_M00_SC_SEND),
        .S_SC_AW_info(aw_la_in_swbd_M00_SC_INFO),
        .S_SC_AW_payld(aw_la_in_swbd_M00_SC_PAYLD),
        .S_SC_AW_recv(aw_la_in_swbd_M00_SC_RECV),
        .S_SC_AW_req(aw_la_in_swbd_M00_SC_REQ),
        .S_SC_AW_send(aw_la_in_swbd_M00_SC_SEND),
        .S_SC_B_info(out_swbd_0_M00_SC_B_INFO),
        .S_SC_B_payld(out_swbd_0_M00_SC_B_PAYLD),
        .S_SC_B_recv(out_swbd_0_M00_SC_B_RECV),
        .S_SC_B_req(out_swbd_0_M00_SC_B_REQ),
        .S_SC_B_send(out_swbd_0_M00_SC_B_SEND),
        .S_SC_R_info(out_swbd_0_M00_SC_R_INFO),
        .S_SC_R_payld(out_swbd_0_M00_SC_R_PAYLD),
        .S_SC_R_recv(out_swbd_0_M00_SC_R_RECV),
        .S_SC_R_req(out_swbd_0_M00_SC_R_REQ),
        .S_SC_R_send(out_swbd_0_M00_SC_R_SEND),
        .S_SC_W_info(w_la_in_swbd_M00_SC_INFO),
        .S_SC_W_payld(w_la_in_swbd_M00_SC_PAYLD),
        .S_SC_W_recv(w_la_in_swbd_M00_SC_RECV),
        .S_SC_W_req(w_la_in_swbd_M00_SC_REQ),
        .S_SC_W_send(w_la_in_swbd_M00_SC_SEND),
        .m_sc_aclk(m_sc_aclk_1),
        .m_sc_aresetn(m_sc_aresetn_1),
        .s_sc_aclk(s_sc_aclk_1),
        .s_sc_aresetn(s_sc_aresetn_1));
  i_nodes_1_imp_12IAN3Y i_nodes_1
       (.M_SC_AR_info(S00_SC_AR_3_INFO),
        .M_SC_AR_payld(S00_SC_AR_3_PAYLD),
        .M_SC_AR_recv(S00_SC_AR_3_RECV),
        .M_SC_AR_req(S00_SC_AR_3_REQ),
        .M_SC_AR_send(S00_SC_AR_3_SEND),
        .M_SC_AW_info(S00_SC_AW_3_INFO),
        .M_SC_AW_payld(S00_SC_AW_3_PAYLD),
        .M_SC_AW_recv(S00_SC_AW_3_RECV),
        .M_SC_AW_req(S00_SC_AW_3_REQ),
        .M_SC_AW_send(S00_SC_AW_3_SEND),
        .M_SC_B_info(i_nodes_1_M_SC_B_INFO),
        .M_SC_B_payld(i_nodes_1_M_SC_B_PAYLD),
        .M_SC_B_recv(i_nodes_1_M_SC_B_RECV),
        .M_SC_B_req(i_nodes_1_M_SC_B_REQ),
        .M_SC_B_send(i_nodes_1_M_SC_B_SEND),
        .M_SC_R_info(i_nodes_1_M_SC_R_INFO),
        .M_SC_R_payld(i_nodes_1_M_SC_R_PAYLD),
        .M_SC_R_recv(i_nodes_1_M_SC_R_RECV),
        .M_SC_R_req(i_nodes_1_M_SC_R_REQ),
        .M_SC_R_send(i_nodes_1_M_SC_R_SEND),
        .M_SC_W_info(S00_SC_W_3_INFO),
        .M_SC_W_payld(S00_SC_W_3_PAYLD),
        .M_SC_W_recv(S00_SC_W_3_RECV),
        .M_SC_W_req(S00_SC_W_3_REQ),
        .M_SC_W_send(S00_SC_W_3_SEND),
        .S_SC_AR_info(ar_la_in_swbd_M01_SC_INFO),
        .S_SC_AR_payld(ar_la_in_swbd_M01_SC_PAYLD),
        .S_SC_AR_recv(ar_la_in_swbd_M01_SC_RECV),
        .S_SC_AR_req(ar_la_in_swbd_M01_SC_REQ),
        .S_SC_AR_send(ar_la_in_swbd_M01_SC_SEND),
        .S_SC_AW_info(aw_la_in_swbd_M01_SC_INFO),
        .S_SC_AW_payld(aw_la_in_swbd_M01_SC_PAYLD),
        .S_SC_AW_recv(aw_la_in_swbd_M01_SC_RECV),
        .S_SC_AW_req(aw_la_in_swbd_M01_SC_REQ),
        .S_SC_AW_send(aw_la_in_swbd_M01_SC_SEND),
        .S_SC_B_info(out_swbd_1_M00_SC_B_INFO),
        .S_SC_B_payld(out_swbd_1_M00_SC_B_PAYLD),
        .S_SC_B_recv(out_swbd_1_M00_SC_B_RECV),
        .S_SC_B_req(out_swbd_1_M00_SC_B_REQ),
        .S_SC_B_send(out_swbd_1_M00_SC_B_SEND),
        .S_SC_R_info(out_swbd_1_M00_SC_R_INFO),
        .S_SC_R_payld(out_swbd_1_M00_SC_R_PAYLD),
        .S_SC_R_recv(out_swbd_1_M00_SC_R_RECV),
        .S_SC_R_req(out_swbd_1_M00_SC_R_REQ),
        .S_SC_R_send(out_swbd_1_M00_SC_R_SEND),
        .S_SC_W_info(w_la_in_swbd_M01_SC_INFO),
        .S_SC_W_payld(w_la_in_swbd_M01_SC_PAYLD),
        .S_SC_W_recv(w_la_in_swbd_M01_SC_RECV),
        .S_SC_W_req(w_la_in_swbd_M01_SC_REQ),
        .S_SC_W_send(w_la_in_swbd_M01_SC_SEND),
        .m_sc_aclk(m_sc_aclk_1),
        .m_sc_aresetn(m_sc_aresetn_1),
        .s_sc_aclk(s_sc_aclk_1),
        .s_sc_aresetn(s_sc_aresetn_1));
  i_nodes_2_imp_16P0V1 i_nodes_2
       (.M_SC_AR_info(S00_SC_AR_4_INFO),
        .M_SC_AR_payld(S00_SC_AR_4_PAYLD),
        .M_SC_AR_recv(S00_SC_AR_4_RECV),
        .M_SC_AR_req(S00_SC_AR_4_REQ),
        .M_SC_AR_send(S00_SC_AR_4_SEND),
        .M_SC_AW_info(S00_SC_AW_4_INFO),
        .M_SC_AW_payld(S00_SC_AW_4_PAYLD),
        .M_SC_AW_recv(S00_SC_AW_4_RECV),
        .M_SC_AW_req(S00_SC_AW_4_REQ),
        .M_SC_AW_send(S00_SC_AW_4_SEND),
        .M_SC_B_info(i_nodes_2_M_SC_B_INFO),
        .M_SC_B_payld(i_nodes_2_M_SC_B_PAYLD),
        .M_SC_B_recv(i_nodes_2_M_SC_B_RECV),
        .M_SC_B_req(i_nodes_2_M_SC_B_REQ),
        .M_SC_B_send(i_nodes_2_M_SC_B_SEND),
        .M_SC_R_info(i_nodes_2_M_SC_R_INFO),
        .M_SC_R_payld(i_nodes_2_M_SC_R_PAYLD),
        .M_SC_R_recv(i_nodes_2_M_SC_R_RECV),
        .M_SC_R_req(i_nodes_2_M_SC_R_REQ),
        .M_SC_R_send(i_nodes_2_M_SC_R_SEND),
        .M_SC_W_info(S00_SC_W_4_INFO),
        .M_SC_W_payld(S00_SC_W_4_PAYLD),
        .M_SC_W_recv(S00_SC_W_4_RECV),
        .M_SC_W_req(S00_SC_W_4_REQ),
        .M_SC_W_send(S00_SC_W_4_SEND),
        .S_SC_AR_info(ar_la_in_swbd_M02_SC_INFO),
        .S_SC_AR_payld(ar_la_in_swbd_M02_SC_PAYLD),
        .S_SC_AR_recv(ar_la_in_swbd_M02_SC_RECV),
        .S_SC_AR_req(ar_la_in_swbd_M02_SC_REQ),
        .S_SC_AR_send(ar_la_in_swbd_M02_SC_SEND),
        .S_SC_AW_info(aw_la_in_swbd_M02_SC_INFO),
        .S_SC_AW_payld(aw_la_in_swbd_M02_SC_PAYLD),
        .S_SC_AW_recv(aw_la_in_swbd_M02_SC_RECV),
        .S_SC_AW_req(aw_la_in_swbd_M02_SC_REQ),
        .S_SC_AW_send(aw_la_in_swbd_M02_SC_SEND),
        .S_SC_B_info(out_swbd_2_M00_SC_B_INFO),
        .S_SC_B_payld(out_swbd_2_M00_SC_B_PAYLD),
        .S_SC_B_recv(out_swbd_2_M00_SC_B_RECV),
        .S_SC_B_req(out_swbd_2_M00_SC_B_REQ),
        .S_SC_B_send(out_swbd_2_M00_SC_B_SEND),
        .S_SC_R_info(out_swbd_2_M00_SC_R_INFO),
        .S_SC_R_payld(out_swbd_2_M00_SC_R_PAYLD),
        .S_SC_R_recv(out_swbd_2_M00_SC_R_RECV),
        .S_SC_R_req(out_swbd_2_M00_SC_R_REQ),
        .S_SC_R_send(out_swbd_2_M00_SC_R_SEND),
        .S_SC_W_info(w_la_in_swbd_M02_SC_INFO),
        .S_SC_W_payld(w_la_in_swbd_M02_SC_PAYLD),
        .S_SC_W_recv(w_la_in_swbd_M02_SC_RECV),
        .S_SC_W_req(w_la_in_swbd_M02_SC_REQ),
        .S_SC_W_send(w_la_in_swbd_M02_SC_SEND),
        .m_sc_aclk(m_sc_aclk_1),
        .m_sc_aresetn(m_sc_aresetn_1),
        .s_sc_aclk(s_sc_aclk_1),
        .s_sc_aresetn(s_sc_aresetn_1));
  i_nodes_3_imp_1JQYM0Z i_nodes_3
       (.M_SC_AR_info(S00_SC_AR_5_INFO),
        .M_SC_AR_payld(S00_SC_AR_5_PAYLD),
        .M_SC_AR_recv(S00_SC_AR_5_RECV),
        .M_SC_AR_req(S00_SC_AR_5_REQ),
        .M_SC_AR_send(S00_SC_AR_5_SEND),
        .M_SC_AW_info(S00_SC_AW_5_INFO),
        .M_SC_AW_payld(S00_SC_AW_5_PAYLD),
        .M_SC_AW_recv(S00_SC_AW_5_RECV),
        .M_SC_AW_req(S00_SC_AW_5_REQ),
        .M_SC_AW_send(S00_SC_AW_5_SEND),
        .M_SC_B_info(i_nodes_3_M_SC_B_INFO),
        .M_SC_B_payld(i_nodes_3_M_SC_B_PAYLD),
        .M_SC_B_recv(i_nodes_3_M_SC_B_RECV),
        .M_SC_B_req(i_nodes_3_M_SC_B_REQ),
        .M_SC_B_send(i_nodes_3_M_SC_B_SEND),
        .M_SC_R_info(i_nodes_3_M_SC_R_INFO),
        .M_SC_R_payld(i_nodes_3_M_SC_R_PAYLD),
        .M_SC_R_recv(i_nodes_3_M_SC_R_RECV),
        .M_SC_R_req(i_nodes_3_M_SC_R_REQ),
        .M_SC_R_send(i_nodes_3_M_SC_R_SEND),
        .M_SC_W_info(S00_SC_W_5_INFO),
        .M_SC_W_payld(S00_SC_W_5_PAYLD),
        .M_SC_W_recv(S00_SC_W_5_RECV),
        .M_SC_W_req(S00_SC_W_5_REQ),
        .M_SC_W_send(S00_SC_W_5_SEND),
        .S_SC_AR_info(ar_la_in_swbd_M03_SC_INFO),
        .S_SC_AR_payld(ar_la_in_swbd_M03_SC_PAYLD),
        .S_SC_AR_recv(ar_la_in_swbd_M03_SC_RECV),
        .S_SC_AR_req(ar_la_in_swbd_M03_SC_REQ),
        .S_SC_AR_send(ar_la_in_swbd_M03_SC_SEND),
        .S_SC_AW_info(aw_la_in_swbd_M03_SC_INFO),
        .S_SC_AW_payld(aw_la_in_swbd_M03_SC_PAYLD),
        .S_SC_AW_recv(aw_la_in_swbd_M03_SC_RECV),
        .S_SC_AW_req(aw_la_in_swbd_M03_SC_REQ),
        .S_SC_AW_send(aw_la_in_swbd_M03_SC_SEND),
        .S_SC_B_info(out_swbd_3_M00_SC_B_INFO),
        .S_SC_B_payld(out_swbd_3_M00_SC_B_PAYLD),
        .S_SC_B_recv(out_swbd_3_M00_SC_B_RECV),
        .S_SC_B_req(out_swbd_3_M00_SC_B_REQ),
        .S_SC_B_send(out_swbd_3_M00_SC_B_SEND),
        .S_SC_R_info(out_swbd_3_M00_SC_R_INFO),
        .S_SC_R_payld(out_swbd_3_M00_SC_R_PAYLD),
        .S_SC_R_recv(out_swbd_3_M00_SC_R_RECV),
        .S_SC_R_req(out_swbd_3_M00_SC_R_REQ),
        .S_SC_R_send(out_swbd_3_M00_SC_R_SEND),
        .S_SC_W_info(w_la_in_swbd_M03_SC_INFO),
        .S_SC_W_payld(w_la_in_swbd_M03_SC_PAYLD),
        .S_SC_W_recv(w_la_in_swbd_M03_SC_RECV),
        .S_SC_W_req(w_la_in_swbd_M03_SC_REQ),
        .S_SC_W_send(w_la_in_swbd_M03_SC_SEND),
        .m_sc_aclk(m_sc_aclk_1),
        .m_sc_aresetn(m_sc_aresetn_1),
        .s_sc_aclk(s_sc_aclk_1),
        .s_sc_aresetn(s_sc_aresetn_1));
  i_nodes_4_imp_1HVF3MI i_nodes_4
       (.M_SC_AR_info(S00_SC_AR_6_INFO),
        .M_SC_AR_payld(S00_SC_AR_6_PAYLD),
        .M_SC_AR_recv(S00_SC_AR_6_RECV),
        .M_SC_AR_req(S00_SC_AR_6_REQ),
        .M_SC_AR_send(S00_SC_AR_6_SEND),
        .M_SC_AW_info(S00_SC_AW_6_INFO),
        .M_SC_AW_payld(S00_SC_AW_6_PAYLD),
        .M_SC_AW_recv(S00_SC_AW_6_RECV),
        .M_SC_AW_req(S00_SC_AW_6_REQ),
        .M_SC_AW_send(S00_SC_AW_6_SEND),
        .M_SC_B_info(i_nodes_4_M_SC_B_INFO),
        .M_SC_B_payld(i_nodes_4_M_SC_B_PAYLD),
        .M_SC_B_recv(i_nodes_4_M_SC_B_RECV),
        .M_SC_B_req(i_nodes_4_M_SC_B_REQ),
        .M_SC_B_send(i_nodes_4_M_SC_B_SEND),
        .M_SC_R_info(i_nodes_4_M_SC_R_INFO),
        .M_SC_R_payld(i_nodes_4_M_SC_R_PAYLD),
        .M_SC_R_recv(i_nodes_4_M_SC_R_RECV),
        .M_SC_R_req(i_nodes_4_M_SC_R_REQ),
        .M_SC_R_send(i_nodes_4_M_SC_R_SEND),
        .M_SC_W_info(S00_SC_W_6_INFO),
        .M_SC_W_payld(S00_SC_W_6_PAYLD),
        .M_SC_W_recv(S00_SC_W_6_RECV),
        .M_SC_W_req(S00_SC_W_6_REQ),
        .M_SC_W_send(S00_SC_W_6_SEND),
        .S_SC_AR_info(ar_la_in_swbd_M04_SC_INFO),
        .S_SC_AR_payld(ar_la_in_swbd_M04_SC_PAYLD),
        .S_SC_AR_recv(ar_la_in_swbd_M04_SC_RECV),
        .S_SC_AR_req(ar_la_in_swbd_M04_SC_REQ),
        .S_SC_AR_send(ar_la_in_swbd_M04_SC_SEND),
        .S_SC_AW_info(aw_la_in_swbd_M04_SC_INFO),
        .S_SC_AW_payld(aw_la_in_swbd_M04_SC_PAYLD),
        .S_SC_AW_recv(aw_la_in_swbd_M04_SC_RECV),
        .S_SC_AW_req(aw_la_in_swbd_M04_SC_REQ),
        .S_SC_AW_send(aw_la_in_swbd_M04_SC_SEND),
        .S_SC_B_info(out_swbd_4_M00_SC_B_INFO),
        .S_SC_B_payld(out_swbd_4_M00_SC_B_PAYLD),
        .S_SC_B_recv(out_swbd_4_M00_SC_B_RECV),
        .S_SC_B_req(out_swbd_4_M00_SC_B_REQ),
        .S_SC_B_send(out_swbd_4_M00_SC_B_SEND),
        .S_SC_R_info(out_swbd_4_M00_SC_R_INFO),
        .S_SC_R_payld(out_swbd_4_M00_SC_R_PAYLD),
        .S_SC_R_recv(out_swbd_4_M00_SC_R_RECV),
        .S_SC_R_req(out_swbd_4_M00_SC_R_REQ),
        .S_SC_R_send(out_swbd_4_M00_SC_R_SEND),
        .S_SC_W_info(w_la_in_swbd_M04_SC_INFO),
        .S_SC_W_payld(w_la_in_swbd_M04_SC_PAYLD),
        .S_SC_W_recv(w_la_in_swbd_M04_SC_RECV),
        .S_SC_W_req(w_la_in_swbd_M04_SC_REQ),
        .S_SC_W_send(w_la_in_swbd_M04_SC_SEND),
        .m_sc_aclk(m_sc_aclk_1),
        .m_sc_aresetn(m_sc_aresetn_1),
        .s_sc_aclk(s_sc_aclk_1),
        .s_sc_aresetn(s_sc_aresetn_1));
  i_nodes_5_imp_40YLXG i_nodes_5
       (.M_SC_AR_info(S00_SC_AR_7_INFO),
        .M_SC_AR_payld(S00_SC_AR_7_PAYLD),
        .M_SC_AR_recv(S00_SC_AR_7_RECV),
        .M_SC_AR_req(S00_SC_AR_7_REQ),
        .M_SC_AR_send(S00_SC_AR_7_SEND),
        .M_SC_AW_info(S00_SC_AW_7_INFO),
        .M_SC_AW_payld(S00_SC_AW_7_PAYLD),
        .M_SC_AW_recv(S00_SC_AW_7_RECV),
        .M_SC_AW_req(S00_SC_AW_7_REQ),
        .M_SC_AW_send(S00_SC_AW_7_SEND),
        .M_SC_B_info(i_nodes_5_M_SC_B_INFO),
        .M_SC_B_payld(i_nodes_5_M_SC_B_PAYLD),
        .M_SC_B_recv(i_nodes_5_M_SC_B_RECV),
        .M_SC_B_req(i_nodes_5_M_SC_B_REQ),
        .M_SC_B_send(i_nodes_5_M_SC_B_SEND),
        .M_SC_R_info(i_nodes_5_M_SC_R_INFO),
        .M_SC_R_payld(i_nodes_5_M_SC_R_PAYLD),
        .M_SC_R_recv(i_nodes_5_M_SC_R_RECV),
        .M_SC_R_req(i_nodes_5_M_SC_R_REQ),
        .M_SC_R_send(i_nodes_5_M_SC_R_SEND),
        .M_SC_W_info(S00_SC_W_7_INFO),
        .M_SC_W_payld(S00_SC_W_7_PAYLD),
        .M_SC_W_recv(S00_SC_W_7_RECV),
        .M_SC_W_req(S00_SC_W_7_REQ),
        .M_SC_W_send(S00_SC_W_7_SEND),
        .S_SC_AR_info(ar_la_in_swbd_M05_SC_INFO),
        .S_SC_AR_payld(ar_la_in_swbd_M05_SC_PAYLD),
        .S_SC_AR_recv(ar_la_in_swbd_M05_SC_RECV),
        .S_SC_AR_req(ar_la_in_swbd_M05_SC_REQ),
        .S_SC_AR_send(ar_la_in_swbd_M05_SC_SEND),
        .S_SC_AW_info(aw_la_in_swbd_M05_SC_INFO),
        .S_SC_AW_payld(aw_la_in_swbd_M05_SC_PAYLD),
        .S_SC_AW_recv(aw_la_in_swbd_M05_SC_RECV),
        .S_SC_AW_req(aw_la_in_swbd_M05_SC_REQ),
        .S_SC_AW_send(aw_la_in_swbd_M05_SC_SEND),
        .S_SC_B_info(out_swbd_5_M00_SC_B_INFO),
        .S_SC_B_payld(out_swbd_5_M00_SC_B_PAYLD),
        .S_SC_B_recv(out_swbd_5_M00_SC_B_RECV),
        .S_SC_B_req(out_swbd_5_M00_SC_B_REQ),
        .S_SC_B_send(out_swbd_5_M00_SC_B_SEND),
        .S_SC_R_info(out_swbd_5_M00_SC_R_INFO),
        .S_SC_R_payld(out_swbd_5_M00_SC_R_PAYLD),
        .S_SC_R_recv(out_swbd_5_M00_SC_R_RECV),
        .S_SC_R_req(out_swbd_5_M00_SC_R_REQ),
        .S_SC_R_send(out_swbd_5_M00_SC_R_SEND),
        .S_SC_W_info(w_la_in_swbd_M05_SC_INFO),
        .S_SC_W_payld(w_la_in_swbd_M05_SC_PAYLD),
        .S_SC_W_recv(w_la_in_swbd_M05_SC_RECV),
        .S_SC_W_req(w_la_in_swbd_M05_SC_REQ),
        .S_SC_W_send(w_la_in_swbd_M05_SC_SEND),
        .m_sc_aclk(m_sc_aclk_1),
        .m_sc_aresetn(m_sc_aresetn_1),
        .s_sc_aclk(s_sc_aclk_1),
        .s_sc_aresetn(s_sc_aresetn_1));
  i_nodes_6_imp_ZJ165J i_nodes_6
       (.M_SC_AR_info(S00_SC_AR_8_INFO),
        .M_SC_AR_payld(S00_SC_AR_8_PAYLD),
        .M_SC_AR_recv(S00_SC_AR_8_RECV),
        .M_SC_AR_req(S00_SC_AR_8_REQ),
        .M_SC_AR_send(S00_SC_AR_8_SEND),
        .M_SC_AW_info(S00_SC_AW_8_INFO),
        .M_SC_AW_payld(S00_SC_AW_8_PAYLD),
        .M_SC_AW_recv(S00_SC_AW_8_RECV),
        .M_SC_AW_req(S00_SC_AW_8_REQ),
        .M_SC_AW_send(S00_SC_AW_8_SEND),
        .M_SC_B_info(i_nodes_6_M_SC_B_INFO),
        .M_SC_B_payld(i_nodes_6_M_SC_B_PAYLD),
        .M_SC_B_recv(i_nodes_6_M_SC_B_RECV),
        .M_SC_B_req(i_nodes_6_M_SC_B_REQ),
        .M_SC_B_send(i_nodes_6_M_SC_B_SEND),
        .M_SC_R_info(i_nodes_6_M_SC_R_INFO),
        .M_SC_R_payld(i_nodes_6_M_SC_R_PAYLD),
        .M_SC_R_recv(i_nodes_6_M_SC_R_RECV),
        .M_SC_R_req(i_nodes_6_M_SC_R_REQ),
        .M_SC_R_send(i_nodes_6_M_SC_R_SEND),
        .M_SC_W_info(S00_SC_W_8_INFO),
        .M_SC_W_payld(S00_SC_W_8_PAYLD),
        .M_SC_W_recv(S00_SC_W_8_RECV),
        .M_SC_W_req(S00_SC_W_8_REQ),
        .M_SC_W_send(S00_SC_W_8_SEND),
        .S_SC_AR_info(ar_la_in_swbd_M06_SC_INFO),
        .S_SC_AR_payld(ar_la_in_swbd_M06_SC_PAYLD),
        .S_SC_AR_recv(ar_la_in_swbd_M06_SC_RECV),
        .S_SC_AR_req(ar_la_in_swbd_M06_SC_REQ),
        .S_SC_AR_send(ar_la_in_swbd_M06_SC_SEND),
        .S_SC_AW_info(aw_la_in_swbd_M06_SC_INFO),
        .S_SC_AW_payld(aw_la_in_swbd_M06_SC_PAYLD),
        .S_SC_AW_recv(aw_la_in_swbd_M06_SC_RECV),
        .S_SC_AW_req(aw_la_in_swbd_M06_SC_REQ),
        .S_SC_AW_send(aw_la_in_swbd_M06_SC_SEND),
        .S_SC_B_info(out_swbd_6_M00_SC_B_INFO),
        .S_SC_B_payld(out_swbd_6_M00_SC_B_PAYLD),
        .S_SC_B_recv(out_swbd_6_M00_SC_B_RECV),
        .S_SC_B_req(out_swbd_6_M00_SC_B_REQ),
        .S_SC_B_send(out_swbd_6_M00_SC_B_SEND),
        .S_SC_R_info(out_swbd_6_M00_SC_R_INFO),
        .S_SC_R_payld(out_swbd_6_M00_SC_R_PAYLD),
        .S_SC_R_recv(out_swbd_6_M00_SC_R_RECV),
        .S_SC_R_req(out_swbd_6_M00_SC_R_REQ),
        .S_SC_R_send(out_swbd_6_M00_SC_R_SEND),
        .S_SC_W_info(w_la_in_swbd_M06_SC_INFO),
        .S_SC_W_payld(w_la_in_swbd_M06_SC_PAYLD),
        .S_SC_W_recv(w_la_in_swbd_M06_SC_RECV),
        .S_SC_W_req(w_la_in_swbd_M06_SC_REQ),
        .S_SC_W_send(w_la_in_swbd_M06_SC_SEND),
        .m_sc_aclk(m_sc_aclk_1),
        .m_sc_aresetn(m_sc_aresetn_1),
        .s_sc_aclk(s_sc_aclk_1),
        .s_sc_aresetn(s_sc_aresetn_1));
  i_nodes_7_imp_L9MLTL i_nodes_7
       (.M_SC_AR_info(S00_SC_AR_9_INFO),
        .M_SC_AR_payld(S00_SC_AR_9_PAYLD),
        .M_SC_AR_recv(S00_SC_AR_9_RECV),
        .M_SC_AR_req(S00_SC_AR_9_REQ),
        .M_SC_AR_send(S00_SC_AR_9_SEND),
        .M_SC_AW_info(S00_SC_AW_9_INFO),
        .M_SC_AW_payld(S00_SC_AW_9_PAYLD),
        .M_SC_AW_recv(S00_SC_AW_9_RECV),
        .M_SC_AW_req(S00_SC_AW_9_REQ),
        .M_SC_AW_send(S00_SC_AW_9_SEND),
        .M_SC_B_info(i_nodes_7_M_SC_B_INFO),
        .M_SC_B_payld(i_nodes_7_M_SC_B_PAYLD),
        .M_SC_B_recv(i_nodes_7_M_SC_B_RECV),
        .M_SC_B_req(i_nodes_7_M_SC_B_REQ),
        .M_SC_B_send(i_nodes_7_M_SC_B_SEND),
        .M_SC_R_info(i_nodes_7_M_SC_R_INFO),
        .M_SC_R_payld(i_nodes_7_M_SC_R_PAYLD),
        .M_SC_R_recv(i_nodes_7_M_SC_R_RECV),
        .M_SC_R_req(i_nodes_7_M_SC_R_REQ),
        .M_SC_R_send(i_nodes_7_M_SC_R_SEND),
        .M_SC_W_info(S00_SC_W_9_INFO),
        .M_SC_W_payld(S00_SC_W_9_PAYLD),
        .M_SC_W_recv(S00_SC_W_9_RECV),
        .M_SC_W_req(S00_SC_W_9_REQ),
        .M_SC_W_send(S00_SC_W_9_SEND),
        .S_SC_AR_info(ar_la_in_swbd_M07_SC_INFO),
        .S_SC_AR_payld(ar_la_in_swbd_M07_SC_PAYLD),
        .S_SC_AR_recv(ar_la_in_swbd_M07_SC_RECV),
        .S_SC_AR_req(ar_la_in_swbd_M07_SC_REQ),
        .S_SC_AR_send(ar_la_in_swbd_M07_SC_SEND),
        .S_SC_AW_info(aw_la_in_swbd_M07_SC_INFO),
        .S_SC_AW_payld(aw_la_in_swbd_M07_SC_PAYLD),
        .S_SC_AW_recv(aw_la_in_swbd_M07_SC_RECV),
        .S_SC_AW_req(aw_la_in_swbd_M07_SC_REQ),
        .S_SC_AW_send(aw_la_in_swbd_M07_SC_SEND),
        .S_SC_B_info(out_swbd_7_M00_SC_B_INFO),
        .S_SC_B_payld(out_swbd_7_M00_SC_B_PAYLD),
        .S_SC_B_recv(out_swbd_7_M00_SC_B_RECV),
        .S_SC_B_req(out_swbd_7_M00_SC_B_REQ),
        .S_SC_B_send(out_swbd_7_M00_SC_B_SEND),
        .S_SC_R_info(out_swbd_7_M00_SC_R_INFO),
        .S_SC_R_payld(out_swbd_7_M00_SC_R_PAYLD),
        .S_SC_R_recv(out_swbd_7_M00_SC_R_RECV),
        .S_SC_R_req(out_swbd_7_M00_SC_R_REQ),
        .S_SC_R_send(out_swbd_7_M00_SC_R_SEND),
        .S_SC_W_info(w_la_in_swbd_M07_SC_INFO),
        .S_SC_W_payld(w_la_in_swbd_M07_SC_PAYLD),
        .S_SC_W_recv(w_la_in_swbd_M07_SC_RECV),
        .S_SC_W_req(w_la_in_swbd_M07_SC_REQ),
        .S_SC_W_send(w_la_in_swbd_M07_SC_SEND),
        .m_sc_aclk(m_sc_aclk_1),
        .m_sc_aresetn(m_sc_aresetn_1),
        .s_sc_aclk(s_sc_aclk_1),
        .s_sc_aresetn(s_sc_aresetn_1));
  out_swbd_0_imp_VJ4304 out_swbd_0
       (.M00_SC_AR_info(out_swbd_0_M00_SC_AR_INFO),
        .M00_SC_AR_payld(out_swbd_0_M00_SC_AR_PAYLD),
        .M00_SC_AR_recv(out_swbd_0_M00_SC_AR_RECV),
        .M00_SC_AR_req(out_swbd_0_M00_SC_AR_REQ),
        .M00_SC_AR_send(out_swbd_0_M00_SC_AR_SEND),
        .M00_SC_AW_info(out_swbd_0_M00_SC_AW_INFO),
        .M00_SC_AW_payld(out_swbd_0_M00_SC_AW_PAYLD),
        .M00_SC_AW_recv(out_swbd_0_M00_SC_AW_RECV),
        .M00_SC_AW_req(out_swbd_0_M00_SC_AW_REQ),
        .M00_SC_AW_send(out_swbd_0_M00_SC_AW_SEND),
        .M00_SC_B_info(out_swbd_0_M00_SC_B_INFO),
        .M00_SC_B_payld(out_swbd_0_M00_SC_B_PAYLD),
        .M00_SC_B_recv(out_swbd_0_M00_SC_B_RECV),
        .M00_SC_B_req(out_swbd_0_M00_SC_B_REQ),
        .M00_SC_B_send(out_swbd_0_M00_SC_B_SEND),
        .M00_SC_R_info(out_swbd_0_M00_SC_R_INFO),
        .M00_SC_R_payld(out_swbd_0_M00_SC_R_PAYLD),
        .M00_SC_R_recv(out_swbd_0_M00_SC_R_RECV),
        .M00_SC_R_req(out_swbd_0_M00_SC_R_REQ),
        .M00_SC_R_send(out_swbd_0_M00_SC_R_SEND),
        .M00_SC_W_info(out_swbd_0_M00_SC_W_INFO),
        .M00_SC_W_payld(out_swbd_0_M00_SC_W_PAYLD),
        .M00_SC_W_recv(out_swbd_0_M00_SC_W_RECV),
        .M00_SC_W_req(out_swbd_0_M00_SC_W_REQ),
        .M00_SC_W_send(out_swbd_0_M00_SC_W_SEND),
        .M01_SC_AR_info(out_swbd_0_M01_SC_AR_INFO),
        .M01_SC_AR_payld(out_swbd_0_M01_SC_AR_PAYLD),
        .M01_SC_AR_recv(out_swbd_0_M01_SC_AR_RECV),
        .M01_SC_AR_req(out_swbd_0_M01_SC_AR_REQ),
        .M01_SC_AR_send(out_swbd_0_M01_SC_AR_SEND),
        .M01_SC_AW_info(out_swbd_0_M01_SC_AW_INFO),
        .M01_SC_AW_payld(out_swbd_0_M01_SC_AW_PAYLD),
        .M01_SC_AW_recv(out_swbd_0_M01_SC_AW_RECV),
        .M01_SC_AW_req(out_swbd_0_M01_SC_AW_REQ),
        .M01_SC_AW_send(out_swbd_0_M01_SC_AW_SEND),
        .M01_SC_W_info(out_swbd_0_M01_SC_W_INFO),
        .M01_SC_W_payld(out_swbd_0_M01_SC_W_PAYLD),
        .M01_SC_W_recv(out_swbd_0_M01_SC_W_RECV),
        .M01_SC_W_req(out_swbd_0_M01_SC_W_REQ),
        .M01_SC_W_send(out_swbd_0_M01_SC_W_SEND),
        .M02_SC_AR_info(out_swbd_0_M02_SC_AR_INFO),
        .M02_SC_AR_payld(out_swbd_0_M02_SC_AR_PAYLD),
        .M02_SC_AR_recv(out_swbd_0_M02_SC_AR_RECV),
        .M02_SC_AR_req(out_swbd_0_M02_SC_AR_REQ),
        .M02_SC_AR_send(out_swbd_0_M02_SC_AR_SEND),
        .M02_SC_AW_info(out_swbd_0_M02_SC_AW_INFO),
        .M02_SC_AW_payld(out_swbd_0_M02_SC_AW_PAYLD),
        .M02_SC_AW_recv(out_swbd_0_M02_SC_AW_RECV),
        .M02_SC_AW_req(out_swbd_0_M02_SC_AW_REQ),
        .M02_SC_AW_send(out_swbd_0_M02_SC_AW_SEND),
        .M02_SC_W_info(out_swbd_0_M02_SC_W_INFO),
        .M02_SC_W_payld(out_swbd_0_M02_SC_W_PAYLD),
        .M02_SC_W_recv(out_swbd_0_M02_SC_W_RECV),
        .M02_SC_W_req(out_swbd_0_M02_SC_W_REQ),
        .M02_SC_W_send(out_swbd_0_M02_SC_W_SEND),
        .M03_SC_AR_info(out_swbd_0_M03_SC_AR_INFO),
        .M03_SC_AR_payld(out_swbd_0_M03_SC_AR_PAYLD),
        .M03_SC_AR_recv(out_swbd_0_M03_SC_AR_RECV),
        .M03_SC_AR_req(out_swbd_0_M03_SC_AR_REQ),
        .M03_SC_AR_send(out_swbd_0_M03_SC_AR_SEND),
        .M03_SC_AW_info(out_swbd_0_M03_SC_AW_INFO),
        .M03_SC_AW_payld(out_swbd_0_M03_SC_AW_PAYLD),
        .M03_SC_AW_recv(out_swbd_0_M03_SC_AW_RECV),
        .M03_SC_AW_req(out_swbd_0_M03_SC_AW_REQ),
        .M03_SC_AW_send(out_swbd_0_M03_SC_AW_SEND),
        .M03_SC_W_info(out_swbd_0_M03_SC_W_INFO),
        .M03_SC_W_payld(out_swbd_0_M03_SC_W_PAYLD),
        .M03_SC_W_recv(out_swbd_0_M03_SC_W_RECV),
        .M03_SC_W_req(out_swbd_0_M03_SC_W_REQ),
        .M03_SC_W_send(out_swbd_0_M03_SC_W_SEND),
        .M04_SC_AR_info(out_swbd_0_M04_SC_AR_INFO),
        .M04_SC_AR_payld(out_swbd_0_M04_SC_AR_PAYLD),
        .M04_SC_AR_recv(out_swbd_0_M04_SC_AR_RECV),
        .M04_SC_AR_req(out_swbd_0_M04_SC_AR_REQ),
        .M04_SC_AR_send(out_swbd_0_M04_SC_AR_SEND),
        .M04_SC_AW_info(out_swbd_0_M04_SC_AW_INFO),
        .M04_SC_AW_payld(out_swbd_0_M04_SC_AW_PAYLD),
        .M04_SC_AW_recv(out_swbd_0_M04_SC_AW_RECV),
        .M04_SC_AW_req(out_swbd_0_M04_SC_AW_REQ),
        .M04_SC_AW_send(out_swbd_0_M04_SC_AW_SEND),
        .M04_SC_W_info(out_swbd_0_M04_SC_W_INFO),
        .M04_SC_W_payld(out_swbd_0_M04_SC_W_PAYLD),
        .M04_SC_W_recv(out_swbd_0_M04_SC_W_RECV),
        .M04_SC_W_req(out_swbd_0_M04_SC_W_REQ),
        .M04_SC_W_send(out_swbd_0_M04_SC_W_SEND),
        .M05_SC_AR_info(out_swbd_0_M05_SC_AR_INFO),
        .M05_SC_AR_payld(out_swbd_0_M05_SC_AR_PAYLD),
        .M05_SC_AR_recv(out_swbd_0_M05_SC_AR_RECV),
        .M05_SC_AR_req(out_swbd_0_M05_SC_AR_REQ),
        .M05_SC_AR_send(out_swbd_0_M05_SC_AR_SEND),
        .M05_SC_AW_info(out_swbd_0_M05_SC_AW_INFO),
        .M05_SC_AW_payld(out_swbd_0_M05_SC_AW_PAYLD),
        .M05_SC_AW_recv(out_swbd_0_M05_SC_AW_RECV),
        .M05_SC_AW_req(out_swbd_0_M05_SC_AW_REQ),
        .M05_SC_AW_send(out_swbd_0_M05_SC_AW_SEND),
        .M05_SC_W_info(out_swbd_0_M05_SC_W_INFO),
        .M05_SC_W_payld(out_swbd_0_M05_SC_W_PAYLD),
        .M05_SC_W_recv(out_swbd_0_M05_SC_W_RECV),
        .M05_SC_W_req(out_swbd_0_M05_SC_W_REQ),
        .M05_SC_W_send(out_swbd_0_M05_SC_W_SEND),
        .M06_SC_AR_info(out_swbd_0_M06_SC_AR_INFO),
        .M06_SC_AR_payld(out_swbd_0_M06_SC_AR_PAYLD),
        .M06_SC_AR_recv(out_swbd_0_M06_SC_AR_RECV),
        .M06_SC_AR_req(out_swbd_0_M06_SC_AR_REQ),
        .M06_SC_AR_send(out_swbd_0_M06_SC_AR_SEND),
        .M06_SC_AW_info(out_swbd_0_M06_SC_AW_INFO),
        .M06_SC_AW_payld(out_swbd_0_M06_SC_AW_PAYLD),
        .M06_SC_AW_recv(out_swbd_0_M06_SC_AW_RECV),
        .M06_SC_AW_req(out_swbd_0_M06_SC_AW_REQ),
        .M06_SC_AW_send(out_swbd_0_M06_SC_AW_SEND),
        .M06_SC_W_info(out_swbd_0_M06_SC_W_INFO),
        .M06_SC_W_payld(out_swbd_0_M06_SC_W_PAYLD),
        .M06_SC_W_recv(out_swbd_0_M06_SC_W_RECV),
        .M06_SC_W_req(out_swbd_0_M06_SC_W_REQ),
        .M06_SC_W_send(out_swbd_0_M06_SC_W_SEND),
        .S00_SC_AR_info(S00_SC_AR_2_INFO),
        .S00_SC_AR_payld(S00_SC_AR_2_PAYLD),
        .S00_SC_AR_recv(S00_SC_AR_2_RECV),
        .S00_SC_AR_req(S00_SC_AR_2_REQ),
        .S00_SC_AR_send(S00_SC_AR_2_SEND),
        .S00_SC_AW_info(S00_SC_AW_2_INFO),
        .S00_SC_AW_payld(S00_SC_AW_2_PAYLD),
        .S00_SC_AW_recv(S00_SC_AW_2_RECV),
        .S00_SC_AW_req(S00_SC_AW_2_REQ),
        .S00_SC_AW_send(S00_SC_AW_2_SEND),
        .S00_SC_B_info(S00_SC_B_1_INFO),
        .S00_SC_B_payld(S00_SC_B_1_PAYLD),
        .S00_SC_B_recv(S00_SC_B_1_RECV),
        .S00_SC_B_req(S00_SC_B_1_REQ),
        .S00_SC_B_send(S00_SC_B_1_SEND),
        .S00_SC_R_info(S00_SC_R_1_INFO),
        .S00_SC_R_payld(S00_SC_R_1_PAYLD),
        .S00_SC_R_recv(S00_SC_R_1_RECV),
        .S00_SC_R_req(S00_SC_R_1_REQ),
        .S00_SC_R_send(S00_SC_R_1_SEND),
        .S00_SC_W_info(S00_SC_W_2_INFO),
        .S00_SC_W_payld(S00_SC_W_2_PAYLD),
        .S00_SC_W_recv(S00_SC_W_2_RECV),
        .S00_SC_W_req(S00_SC_W_2_REQ),
        .S00_SC_W_send(S00_SC_W_2_SEND),
        .S01_SC_B_info(S01_SC_B_1_INFO),
        .S01_SC_B_payld(S01_SC_B_1_PAYLD),
        .S01_SC_B_recv(S01_SC_B_1_RECV),
        .S01_SC_B_req(S01_SC_B_1_REQ),
        .S01_SC_B_send(S01_SC_B_1_SEND),
        .S01_SC_R_info(S01_SC_R_1_INFO),
        .S01_SC_R_payld(S01_SC_R_1_PAYLD),
        .S01_SC_R_recv(S01_SC_R_1_RECV),
        .S01_SC_R_req(S01_SC_R_1_REQ),
        .S01_SC_R_send(S01_SC_R_1_SEND),
        .S02_SC_B_info(S02_SC_B_1_INFO),
        .S02_SC_B_payld(S02_SC_B_1_PAYLD),
        .S02_SC_B_recv(S02_SC_B_1_RECV),
        .S02_SC_B_req(S02_SC_B_1_REQ),
        .S02_SC_B_send(S02_SC_B_1_SEND),
        .S02_SC_R_info(S02_SC_R_1_INFO),
        .S02_SC_R_payld(S02_SC_R_1_PAYLD),
        .S02_SC_R_recv(S02_SC_R_1_RECV),
        .S02_SC_R_req(S02_SC_R_1_REQ),
        .S02_SC_R_send(S02_SC_R_1_SEND),
        .S03_SC_B_info(S03_SC_B_1_INFO),
        .S03_SC_B_payld(S03_SC_B_1_PAYLD),
        .S03_SC_B_recv(S03_SC_B_1_RECV),
        .S03_SC_B_req(S03_SC_B_1_REQ),
        .S03_SC_B_send(S03_SC_B_1_SEND),
        .S03_SC_R_info(S03_SC_R_1_INFO),
        .S03_SC_R_payld(S03_SC_R_1_PAYLD),
        .S03_SC_R_recv(S03_SC_R_1_RECV),
        .S03_SC_R_req(S03_SC_R_1_REQ),
        .S03_SC_R_send(S03_SC_R_1_SEND),
        .S04_SC_B_info(S04_SC_B_1_INFO),
        .S04_SC_B_payld(S04_SC_B_1_PAYLD),
        .S04_SC_B_recv(S04_SC_B_1_RECV),
        .S04_SC_B_req(S04_SC_B_1_REQ),
        .S04_SC_B_send(S04_SC_B_1_SEND),
        .S04_SC_R_info(S04_SC_R_1_INFO),
        .S04_SC_R_payld(S04_SC_R_1_PAYLD),
        .S04_SC_R_recv(S04_SC_R_1_RECV),
        .S04_SC_R_req(S04_SC_R_1_REQ),
        .S04_SC_R_send(S04_SC_R_1_SEND),
        .S05_SC_B_info(S05_SC_B_1_INFO),
        .S05_SC_B_payld(S05_SC_B_1_PAYLD),
        .S05_SC_B_recv(S05_SC_B_1_RECV),
        .S05_SC_B_req(S05_SC_B_1_REQ),
        .S05_SC_B_send(S05_SC_B_1_SEND),
        .S05_SC_R_info(S05_SC_R_1_INFO),
        .S05_SC_R_payld(S05_SC_R_1_PAYLD),
        .S05_SC_R_recv(S05_SC_R_1_RECV),
        .S05_SC_R_req(S05_SC_R_1_REQ),
        .S05_SC_R_send(S05_SC_R_1_SEND),
        .S06_SC_B_info(S06_SC_B_1_INFO),
        .S06_SC_B_payld(S06_SC_B_1_PAYLD),
        .S06_SC_B_recv(S06_SC_B_1_RECV),
        .S06_SC_B_req(S06_SC_B_1_REQ),
        .S06_SC_B_send(S06_SC_B_1_SEND),
        .S06_SC_R_info(S06_SC_R_1_INFO),
        .S06_SC_R_payld(S06_SC_R_1_PAYLD),
        .S06_SC_R_recv(S06_SC_R_1_RECV),
        .S06_SC_R_req(S06_SC_R_1_REQ),
        .S06_SC_R_send(S06_SC_R_1_SEND),
        .aclk(m_sc_aclk_1));
  out_swbd_1_imp_1GG8WQ2 out_swbd_1
       (.M00_SC_AR_info(out_swbd_1_M00_SC_AR_INFO),
        .M00_SC_AR_payld(out_swbd_1_M00_SC_AR_PAYLD),
        .M00_SC_AR_recv(out_swbd_1_M00_SC_AR_RECV),
        .M00_SC_AR_req(out_swbd_1_M00_SC_AR_REQ),
        .M00_SC_AR_send(out_swbd_1_M00_SC_AR_SEND),
        .M00_SC_AW_info(out_swbd_1_M00_SC_AW_INFO),
        .M00_SC_AW_payld(out_swbd_1_M00_SC_AW_PAYLD),
        .M00_SC_AW_recv(out_swbd_1_M00_SC_AW_RECV),
        .M00_SC_AW_req(out_swbd_1_M00_SC_AW_REQ),
        .M00_SC_AW_send(out_swbd_1_M00_SC_AW_SEND),
        .M00_SC_B_info(out_swbd_1_M00_SC_B_INFO),
        .M00_SC_B_payld(out_swbd_1_M00_SC_B_PAYLD),
        .M00_SC_B_recv(out_swbd_1_M00_SC_B_RECV),
        .M00_SC_B_req(out_swbd_1_M00_SC_B_REQ),
        .M00_SC_B_send(out_swbd_1_M00_SC_B_SEND),
        .M00_SC_R_info(out_swbd_1_M00_SC_R_INFO),
        .M00_SC_R_payld(out_swbd_1_M00_SC_R_PAYLD),
        .M00_SC_R_recv(out_swbd_1_M00_SC_R_RECV),
        .M00_SC_R_req(out_swbd_1_M00_SC_R_REQ),
        .M00_SC_R_send(out_swbd_1_M00_SC_R_SEND),
        .M00_SC_W_info(out_swbd_1_M00_SC_W_INFO),
        .M00_SC_W_payld(out_swbd_1_M00_SC_W_PAYLD),
        .M00_SC_W_recv(out_swbd_1_M00_SC_W_RECV),
        .M00_SC_W_req(out_swbd_1_M00_SC_W_REQ),
        .M00_SC_W_send(out_swbd_1_M00_SC_W_SEND),
        .M01_SC_AR_info(out_swbd_1_M01_SC_AR_INFO),
        .M01_SC_AR_payld(out_swbd_1_M01_SC_AR_PAYLD),
        .M01_SC_AR_recv(out_swbd_1_M01_SC_AR_RECV),
        .M01_SC_AR_req(out_swbd_1_M01_SC_AR_REQ),
        .M01_SC_AR_send(out_swbd_1_M01_SC_AR_SEND),
        .M01_SC_AW_info(out_swbd_1_M01_SC_AW_INFO),
        .M01_SC_AW_payld(out_swbd_1_M01_SC_AW_PAYLD),
        .M01_SC_AW_recv(out_swbd_1_M01_SC_AW_RECV),
        .M01_SC_AW_req(out_swbd_1_M01_SC_AW_REQ),
        .M01_SC_AW_send(out_swbd_1_M01_SC_AW_SEND),
        .M01_SC_W_info(out_swbd_1_M01_SC_W_INFO),
        .M01_SC_W_payld(out_swbd_1_M01_SC_W_PAYLD),
        .M01_SC_W_recv(out_swbd_1_M01_SC_W_RECV),
        .M01_SC_W_req(out_swbd_1_M01_SC_W_REQ),
        .M01_SC_W_send(out_swbd_1_M01_SC_W_SEND),
        .M02_SC_AR_info(out_swbd_1_M02_SC_AR_INFO),
        .M02_SC_AR_payld(out_swbd_1_M02_SC_AR_PAYLD),
        .M02_SC_AR_recv(out_swbd_1_M02_SC_AR_RECV),
        .M02_SC_AR_req(out_swbd_1_M02_SC_AR_REQ),
        .M02_SC_AR_send(out_swbd_1_M02_SC_AR_SEND),
        .M02_SC_AW_info(out_swbd_1_M02_SC_AW_INFO),
        .M02_SC_AW_payld(out_swbd_1_M02_SC_AW_PAYLD),
        .M02_SC_AW_recv(out_swbd_1_M02_SC_AW_RECV),
        .M02_SC_AW_req(out_swbd_1_M02_SC_AW_REQ),
        .M02_SC_AW_send(out_swbd_1_M02_SC_AW_SEND),
        .M02_SC_W_info(out_swbd_1_M02_SC_W_INFO),
        .M02_SC_W_payld(out_swbd_1_M02_SC_W_PAYLD),
        .M02_SC_W_recv(out_swbd_1_M02_SC_W_RECV),
        .M02_SC_W_req(out_swbd_1_M02_SC_W_REQ),
        .M02_SC_W_send(out_swbd_1_M02_SC_W_SEND),
        .M03_SC_AR_info(out_swbd_1_M03_SC_AR_INFO),
        .M03_SC_AR_payld(out_swbd_1_M03_SC_AR_PAYLD),
        .M03_SC_AR_recv(out_swbd_1_M03_SC_AR_RECV),
        .M03_SC_AR_req(out_swbd_1_M03_SC_AR_REQ),
        .M03_SC_AR_send(out_swbd_1_M03_SC_AR_SEND),
        .M03_SC_AW_info(out_swbd_1_M03_SC_AW_INFO),
        .M03_SC_AW_payld(out_swbd_1_M03_SC_AW_PAYLD),
        .M03_SC_AW_recv(out_swbd_1_M03_SC_AW_RECV),
        .M03_SC_AW_req(out_swbd_1_M03_SC_AW_REQ),
        .M03_SC_AW_send(out_swbd_1_M03_SC_AW_SEND),
        .M03_SC_W_info(out_swbd_1_M03_SC_W_INFO),
        .M03_SC_W_payld(out_swbd_1_M03_SC_W_PAYLD),
        .M03_SC_W_recv(out_swbd_1_M03_SC_W_RECV),
        .M03_SC_W_req(out_swbd_1_M03_SC_W_REQ),
        .M03_SC_W_send(out_swbd_1_M03_SC_W_SEND),
        .M04_SC_AR_info(out_swbd_1_M04_SC_AR_INFO),
        .M04_SC_AR_payld(out_swbd_1_M04_SC_AR_PAYLD),
        .M04_SC_AR_recv(out_swbd_1_M04_SC_AR_RECV),
        .M04_SC_AR_req(out_swbd_1_M04_SC_AR_REQ),
        .M04_SC_AR_send(out_swbd_1_M04_SC_AR_SEND),
        .M04_SC_AW_info(out_swbd_1_M04_SC_AW_INFO),
        .M04_SC_AW_payld(out_swbd_1_M04_SC_AW_PAYLD),
        .M04_SC_AW_recv(out_swbd_1_M04_SC_AW_RECV),
        .M04_SC_AW_req(out_swbd_1_M04_SC_AW_REQ),
        .M04_SC_AW_send(out_swbd_1_M04_SC_AW_SEND),
        .M04_SC_W_info(out_swbd_1_M04_SC_W_INFO),
        .M04_SC_W_payld(out_swbd_1_M04_SC_W_PAYLD),
        .M04_SC_W_recv(out_swbd_1_M04_SC_W_RECV),
        .M04_SC_W_req(out_swbd_1_M04_SC_W_REQ),
        .M04_SC_W_send(out_swbd_1_M04_SC_W_SEND),
        .M05_SC_AR_info(out_swbd_1_M05_SC_AR_INFO),
        .M05_SC_AR_payld(out_swbd_1_M05_SC_AR_PAYLD),
        .M05_SC_AR_recv(out_swbd_1_M05_SC_AR_RECV),
        .M05_SC_AR_req(out_swbd_1_M05_SC_AR_REQ),
        .M05_SC_AR_send(out_swbd_1_M05_SC_AR_SEND),
        .M05_SC_AW_info(out_swbd_1_M05_SC_AW_INFO),
        .M05_SC_AW_payld(out_swbd_1_M05_SC_AW_PAYLD),
        .M05_SC_AW_recv(out_swbd_1_M05_SC_AW_RECV),
        .M05_SC_AW_req(out_swbd_1_M05_SC_AW_REQ),
        .M05_SC_AW_send(out_swbd_1_M05_SC_AW_SEND),
        .M05_SC_W_info(out_swbd_1_M05_SC_W_INFO),
        .M05_SC_W_payld(out_swbd_1_M05_SC_W_PAYLD),
        .M05_SC_W_recv(out_swbd_1_M05_SC_W_RECV),
        .M05_SC_W_req(out_swbd_1_M05_SC_W_REQ),
        .M05_SC_W_send(out_swbd_1_M05_SC_W_SEND),
        .M06_SC_AR_info(out_swbd_1_M06_SC_AR_INFO),
        .M06_SC_AR_payld(out_swbd_1_M06_SC_AR_PAYLD),
        .M06_SC_AR_recv(out_swbd_1_M06_SC_AR_RECV),
        .M06_SC_AR_req(out_swbd_1_M06_SC_AR_REQ),
        .M06_SC_AR_send(out_swbd_1_M06_SC_AR_SEND),
        .M06_SC_AW_info(out_swbd_1_M06_SC_AW_INFO),
        .M06_SC_AW_payld(out_swbd_1_M06_SC_AW_PAYLD),
        .M06_SC_AW_recv(out_swbd_1_M06_SC_AW_RECV),
        .M06_SC_AW_req(out_swbd_1_M06_SC_AW_REQ),
        .M06_SC_AW_send(out_swbd_1_M06_SC_AW_SEND),
        .M06_SC_W_info(out_swbd_1_M06_SC_W_INFO),
        .M06_SC_W_payld(out_swbd_1_M06_SC_W_PAYLD),
        .M06_SC_W_recv(out_swbd_1_M06_SC_W_RECV),
        .M06_SC_W_req(out_swbd_1_M06_SC_W_REQ),
        .M06_SC_W_send(out_swbd_1_M06_SC_W_SEND),
        .S00_SC_AR_info(S00_SC_AR_3_INFO),
        .S00_SC_AR_payld(S00_SC_AR_3_PAYLD),
        .S00_SC_AR_recv(S00_SC_AR_3_RECV),
        .S00_SC_AR_req(S00_SC_AR_3_REQ),
        .S00_SC_AR_send(S00_SC_AR_3_SEND),
        .S00_SC_AW_info(S00_SC_AW_3_INFO),
        .S00_SC_AW_payld(S00_SC_AW_3_PAYLD),
        .S00_SC_AW_recv(S00_SC_AW_3_RECV),
        .S00_SC_AW_req(S00_SC_AW_3_REQ),
        .S00_SC_AW_send(S00_SC_AW_3_SEND),
        .S00_SC_B_info(S07_SC_B_1_INFO),
        .S00_SC_B_payld(S07_SC_B_1_PAYLD),
        .S00_SC_B_recv(S07_SC_B_1_RECV),
        .S00_SC_B_req(S07_SC_B_1_REQ),
        .S00_SC_B_send(S07_SC_B_1_SEND),
        .S00_SC_R_info(S07_SC_R_1_INFO),
        .S00_SC_R_payld(S07_SC_R_1_PAYLD),
        .S00_SC_R_recv(S07_SC_R_1_RECV),
        .S00_SC_R_req(S07_SC_R_1_REQ),
        .S00_SC_R_send(S07_SC_R_1_SEND),
        .S00_SC_W_info(S00_SC_W_3_INFO),
        .S00_SC_W_payld(S00_SC_W_3_PAYLD),
        .S00_SC_W_recv(S00_SC_W_3_RECV),
        .S00_SC_W_req(S00_SC_W_3_REQ),
        .S00_SC_W_send(S00_SC_W_3_SEND),
        .S01_SC_B_info(S08_SC_B_1_INFO),
        .S01_SC_B_payld(S08_SC_B_1_PAYLD),
        .S01_SC_B_recv(S08_SC_B_1_RECV),
        .S01_SC_B_req(S08_SC_B_1_REQ),
        .S01_SC_B_send(S08_SC_B_1_SEND),
        .S01_SC_R_info(S08_SC_R_1_INFO),
        .S01_SC_R_payld(S08_SC_R_1_PAYLD),
        .S01_SC_R_recv(S08_SC_R_1_RECV),
        .S01_SC_R_req(S08_SC_R_1_REQ),
        .S01_SC_R_send(S08_SC_R_1_SEND),
        .S02_SC_B_info(S09_SC_B_1_INFO),
        .S02_SC_B_payld(S09_SC_B_1_PAYLD),
        .S02_SC_B_recv(S09_SC_B_1_RECV),
        .S02_SC_B_req(S09_SC_B_1_REQ),
        .S02_SC_B_send(S09_SC_B_1_SEND),
        .S02_SC_R_info(S09_SC_R_1_INFO),
        .S02_SC_R_payld(S09_SC_R_1_PAYLD),
        .S02_SC_R_recv(S09_SC_R_1_RECV),
        .S02_SC_R_req(S09_SC_R_1_REQ),
        .S02_SC_R_send(S09_SC_R_1_SEND),
        .S03_SC_B_info(S10_SC_B_1_INFO),
        .S03_SC_B_payld(S10_SC_B_1_PAYLD),
        .S03_SC_B_recv(S10_SC_B_1_RECV),
        .S03_SC_B_req(S10_SC_B_1_REQ),
        .S03_SC_B_send(S10_SC_B_1_SEND),
        .S03_SC_R_info(S10_SC_R_1_INFO),
        .S03_SC_R_payld(S10_SC_R_1_PAYLD),
        .S03_SC_R_recv(S10_SC_R_1_RECV),
        .S03_SC_R_req(S10_SC_R_1_REQ),
        .S03_SC_R_send(S10_SC_R_1_SEND),
        .S04_SC_B_info(S11_SC_B_1_INFO),
        .S04_SC_B_payld(S11_SC_B_1_PAYLD),
        .S04_SC_B_recv(S11_SC_B_1_RECV),
        .S04_SC_B_req(S11_SC_B_1_REQ),
        .S04_SC_B_send(S11_SC_B_1_SEND),
        .S04_SC_R_info(S11_SC_R_1_INFO),
        .S04_SC_R_payld(S11_SC_R_1_PAYLD),
        .S04_SC_R_recv(S11_SC_R_1_RECV),
        .S04_SC_R_req(S11_SC_R_1_REQ),
        .S04_SC_R_send(S11_SC_R_1_SEND),
        .S05_SC_B_info(S12_SC_B_1_INFO),
        .S05_SC_B_payld(S12_SC_B_1_PAYLD),
        .S05_SC_B_recv(S12_SC_B_1_RECV),
        .S05_SC_B_req(S12_SC_B_1_REQ),
        .S05_SC_B_send(S12_SC_B_1_SEND),
        .S05_SC_R_info(S12_SC_R_1_INFO),
        .S05_SC_R_payld(S12_SC_R_1_PAYLD),
        .S05_SC_R_recv(S12_SC_R_1_RECV),
        .S05_SC_R_req(S12_SC_R_1_REQ),
        .S05_SC_R_send(S12_SC_R_1_SEND),
        .S06_SC_B_info(S13_SC_B_1_INFO),
        .S06_SC_B_payld(S13_SC_B_1_PAYLD),
        .S06_SC_B_recv(S13_SC_B_1_RECV),
        .S06_SC_B_req(S13_SC_B_1_REQ),
        .S06_SC_B_send(S13_SC_B_1_SEND),
        .S06_SC_R_info(S13_SC_R_1_INFO),
        .S06_SC_R_payld(S13_SC_R_1_PAYLD),
        .S06_SC_R_recv(S13_SC_R_1_RECV),
        .S06_SC_R_req(S13_SC_R_1_REQ),
        .S06_SC_R_send(S13_SC_R_1_SEND),
        .aclk(m_sc_aclk_1));
  out_swbd_2_imp_EAOHFT out_swbd_2
       (.M00_SC_AR_info(out_swbd_2_M00_SC_AR_INFO),
        .M00_SC_AR_payld(out_swbd_2_M00_SC_AR_PAYLD),
        .M00_SC_AR_recv(out_swbd_2_M00_SC_AR_RECV),
        .M00_SC_AR_req(out_swbd_2_M00_SC_AR_REQ),
        .M00_SC_AR_send(out_swbd_2_M00_SC_AR_SEND),
        .M00_SC_AW_info(out_swbd_2_M00_SC_AW_INFO),
        .M00_SC_AW_payld(out_swbd_2_M00_SC_AW_PAYLD),
        .M00_SC_AW_recv(out_swbd_2_M00_SC_AW_RECV),
        .M00_SC_AW_req(out_swbd_2_M00_SC_AW_REQ),
        .M00_SC_AW_send(out_swbd_2_M00_SC_AW_SEND),
        .M00_SC_B_info(out_swbd_2_M00_SC_B_INFO),
        .M00_SC_B_payld(out_swbd_2_M00_SC_B_PAYLD),
        .M00_SC_B_recv(out_swbd_2_M00_SC_B_RECV),
        .M00_SC_B_req(out_swbd_2_M00_SC_B_REQ),
        .M00_SC_B_send(out_swbd_2_M00_SC_B_SEND),
        .M00_SC_R_info(out_swbd_2_M00_SC_R_INFO),
        .M00_SC_R_payld(out_swbd_2_M00_SC_R_PAYLD),
        .M00_SC_R_recv(out_swbd_2_M00_SC_R_RECV),
        .M00_SC_R_req(out_swbd_2_M00_SC_R_REQ),
        .M00_SC_R_send(out_swbd_2_M00_SC_R_SEND),
        .M00_SC_W_info(out_swbd_2_M00_SC_W_INFO),
        .M00_SC_W_payld(out_swbd_2_M00_SC_W_PAYLD),
        .M00_SC_W_recv(out_swbd_2_M00_SC_W_RECV),
        .M00_SC_W_req(out_swbd_2_M00_SC_W_REQ),
        .M00_SC_W_send(out_swbd_2_M00_SC_W_SEND),
        .M01_SC_AR_info(out_swbd_2_M01_SC_AR_INFO),
        .M01_SC_AR_payld(out_swbd_2_M01_SC_AR_PAYLD),
        .M01_SC_AR_recv(out_swbd_2_M01_SC_AR_RECV),
        .M01_SC_AR_req(out_swbd_2_M01_SC_AR_REQ),
        .M01_SC_AR_send(out_swbd_2_M01_SC_AR_SEND),
        .M01_SC_AW_info(out_swbd_2_M01_SC_AW_INFO),
        .M01_SC_AW_payld(out_swbd_2_M01_SC_AW_PAYLD),
        .M01_SC_AW_recv(out_swbd_2_M01_SC_AW_RECV),
        .M01_SC_AW_req(out_swbd_2_M01_SC_AW_REQ),
        .M01_SC_AW_send(out_swbd_2_M01_SC_AW_SEND),
        .M01_SC_W_info(out_swbd_2_M01_SC_W_INFO),
        .M01_SC_W_payld(out_swbd_2_M01_SC_W_PAYLD),
        .M01_SC_W_recv(out_swbd_2_M01_SC_W_RECV),
        .M01_SC_W_req(out_swbd_2_M01_SC_W_REQ),
        .M01_SC_W_send(out_swbd_2_M01_SC_W_SEND),
        .M02_SC_AR_info(out_swbd_2_M02_SC_AR_INFO),
        .M02_SC_AR_payld(out_swbd_2_M02_SC_AR_PAYLD),
        .M02_SC_AR_recv(out_swbd_2_M02_SC_AR_RECV),
        .M02_SC_AR_req(out_swbd_2_M02_SC_AR_REQ),
        .M02_SC_AR_send(out_swbd_2_M02_SC_AR_SEND),
        .M02_SC_AW_info(out_swbd_2_M02_SC_AW_INFO),
        .M02_SC_AW_payld(out_swbd_2_M02_SC_AW_PAYLD),
        .M02_SC_AW_recv(out_swbd_2_M02_SC_AW_RECV),
        .M02_SC_AW_req(out_swbd_2_M02_SC_AW_REQ),
        .M02_SC_AW_send(out_swbd_2_M02_SC_AW_SEND),
        .M02_SC_W_info(out_swbd_2_M02_SC_W_INFO),
        .M02_SC_W_payld(out_swbd_2_M02_SC_W_PAYLD),
        .M02_SC_W_recv(out_swbd_2_M02_SC_W_RECV),
        .M02_SC_W_req(out_swbd_2_M02_SC_W_REQ),
        .M02_SC_W_send(out_swbd_2_M02_SC_W_SEND),
        .M03_SC_AR_info(out_swbd_2_M03_SC_AR_INFO),
        .M03_SC_AR_payld(out_swbd_2_M03_SC_AR_PAYLD),
        .M03_SC_AR_recv(out_swbd_2_M03_SC_AR_RECV),
        .M03_SC_AR_req(out_swbd_2_M03_SC_AR_REQ),
        .M03_SC_AR_send(out_swbd_2_M03_SC_AR_SEND),
        .M03_SC_AW_info(out_swbd_2_M03_SC_AW_INFO),
        .M03_SC_AW_payld(out_swbd_2_M03_SC_AW_PAYLD),
        .M03_SC_AW_recv(out_swbd_2_M03_SC_AW_RECV),
        .M03_SC_AW_req(out_swbd_2_M03_SC_AW_REQ),
        .M03_SC_AW_send(out_swbd_2_M03_SC_AW_SEND),
        .M03_SC_W_info(out_swbd_2_M03_SC_W_INFO),
        .M03_SC_W_payld(out_swbd_2_M03_SC_W_PAYLD),
        .M03_SC_W_recv(out_swbd_2_M03_SC_W_RECV),
        .M03_SC_W_req(out_swbd_2_M03_SC_W_REQ),
        .M03_SC_W_send(out_swbd_2_M03_SC_W_SEND),
        .M04_SC_AR_info(out_swbd_2_M04_SC_AR_INFO),
        .M04_SC_AR_payld(out_swbd_2_M04_SC_AR_PAYLD),
        .M04_SC_AR_recv(out_swbd_2_M04_SC_AR_RECV),
        .M04_SC_AR_req(out_swbd_2_M04_SC_AR_REQ),
        .M04_SC_AR_send(out_swbd_2_M04_SC_AR_SEND),
        .M04_SC_AW_info(out_swbd_2_M04_SC_AW_INFO),
        .M04_SC_AW_payld(out_swbd_2_M04_SC_AW_PAYLD),
        .M04_SC_AW_recv(out_swbd_2_M04_SC_AW_RECV),
        .M04_SC_AW_req(out_swbd_2_M04_SC_AW_REQ),
        .M04_SC_AW_send(out_swbd_2_M04_SC_AW_SEND),
        .M04_SC_W_info(out_swbd_2_M04_SC_W_INFO),
        .M04_SC_W_payld(out_swbd_2_M04_SC_W_PAYLD),
        .M04_SC_W_recv(out_swbd_2_M04_SC_W_RECV),
        .M04_SC_W_req(out_swbd_2_M04_SC_W_REQ),
        .M04_SC_W_send(out_swbd_2_M04_SC_W_SEND),
        .M05_SC_AR_info(out_swbd_2_M05_SC_AR_INFO),
        .M05_SC_AR_payld(out_swbd_2_M05_SC_AR_PAYLD),
        .M05_SC_AR_recv(out_swbd_2_M05_SC_AR_RECV),
        .M05_SC_AR_req(out_swbd_2_M05_SC_AR_REQ),
        .M05_SC_AR_send(out_swbd_2_M05_SC_AR_SEND),
        .M05_SC_AW_info(out_swbd_2_M05_SC_AW_INFO),
        .M05_SC_AW_payld(out_swbd_2_M05_SC_AW_PAYLD),
        .M05_SC_AW_recv(out_swbd_2_M05_SC_AW_RECV),
        .M05_SC_AW_req(out_swbd_2_M05_SC_AW_REQ),
        .M05_SC_AW_send(out_swbd_2_M05_SC_AW_SEND),
        .M05_SC_W_info(out_swbd_2_M05_SC_W_INFO),
        .M05_SC_W_payld(out_swbd_2_M05_SC_W_PAYLD),
        .M05_SC_W_recv(out_swbd_2_M05_SC_W_RECV),
        .M05_SC_W_req(out_swbd_2_M05_SC_W_REQ),
        .M05_SC_W_send(out_swbd_2_M05_SC_W_SEND),
        .M06_SC_AR_info(out_swbd_2_M06_SC_AR_INFO),
        .M06_SC_AR_payld(out_swbd_2_M06_SC_AR_PAYLD),
        .M06_SC_AR_recv(out_swbd_2_M06_SC_AR_RECV),
        .M06_SC_AR_req(out_swbd_2_M06_SC_AR_REQ),
        .M06_SC_AR_send(out_swbd_2_M06_SC_AR_SEND),
        .M06_SC_AW_info(out_swbd_2_M06_SC_AW_INFO),
        .M06_SC_AW_payld(out_swbd_2_M06_SC_AW_PAYLD),
        .M06_SC_AW_recv(out_swbd_2_M06_SC_AW_RECV),
        .M06_SC_AW_req(out_swbd_2_M06_SC_AW_REQ),
        .M06_SC_AW_send(out_swbd_2_M06_SC_AW_SEND),
        .M06_SC_W_info(out_swbd_2_M06_SC_W_INFO),
        .M06_SC_W_payld(out_swbd_2_M06_SC_W_PAYLD),
        .M06_SC_W_recv(out_swbd_2_M06_SC_W_RECV),
        .M06_SC_W_req(out_swbd_2_M06_SC_W_REQ),
        .M06_SC_W_send(out_swbd_2_M06_SC_W_SEND),
        .S00_SC_AR_info(S00_SC_AR_4_INFO),
        .S00_SC_AR_payld(S00_SC_AR_4_PAYLD),
        .S00_SC_AR_recv(S00_SC_AR_4_RECV),
        .S00_SC_AR_req(S00_SC_AR_4_REQ),
        .S00_SC_AR_send(S00_SC_AR_4_SEND),
        .S00_SC_AW_info(S00_SC_AW_4_INFO),
        .S00_SC_AW_payld(S00_SC_AW_4_PAYLD),
        .S00_SC_AW_recv(S00_SC_AW_4_RECV),
        .S00_SC_AW_req(S00_SC_AW_4_REQ),
        .S00_SC_AW_send(S00_SC_AW_4_SEND),
        .S00_SC_B_info(S14_SC_B_1_INFO),
        .S00_SC_B_payld(S14_SC_B_1_PAYLD),
        .S00_SC_B_recv(S14_SC_B_1_RECV),
        .S00_SC_B_req(S14_SC_B_1_REQ),
        .S00_SC_B_send(S14_SC_B_1_SEND),
        .S00_SC_R_info(S14_SC_R_1_INFO),
        .S00_SC_R_payld(S14_SC_R_1_PAYLD),
        .S00_SC_R_recv(S14_SC_R_1_RECV),
        .S00_SC_R_req(S14_SC_R_1_REQ),
        .S00_SC_R_send(S14_SC_R_1_SEND),
        .S00_SC_W_info(S00_SC_W_4_INFO),
        .S00_SC_W_payld(S00_SC_W_4_PAYLD),
        .S00_SC_W_recv(S00_SC_W_4_RECV),
        .S00_SC_W_req(S00_SC_W_4_REQ),
        .S00_SC_W_send(S00_SC_W_4_SEND),
        .S01_SC_B_info(S15_SC_B_1_INFO),
        .S01_SC_B_payld(S15_SC_B_1_PAYLD),
        .S01_SC_B_recv(S15_SC_B_1_RECV),
        .S01_SC_B_req(S15_SC_B_1_REQ),
        .S01_SC_B_send(S15_SC_B_1_SEND),
        .S01_SC_R_info(S15_SC_R_1_INFO),
        .S01_SC_R_payld(S15_SC_R_1_PAYLD),
        .S01_SC_R_recv(S15_SC_R_1_RECV),
        .S01_SC_R_req(S15_SC_R_1_REQ),
        .S01_SC_R_send(S15_SC_R_1_SEND),
        .S02_SC_B_info(S16_SC_B_1_INFO),
        .S02_SC_B_payld(S16_SC_B_1_PAYLD),
        .S02_SC_B_recv(S16_SC_B_1_RECV),
        .S02_SC_B_req(S16_SC_B_1_REQ),
        .S02_SC_B_send(S16_SC_B_1_SEND),
        .S02_SC_R_info(S16_SC_R_1_INFO),
        .S02_SC_R_payld(S16_SC_R_1_PAYLD),
        .S02_SC_R_recv(S16_SC_R_1_RECV),
        .S02_SC_R_req(S16_SC_R_1_REQ),
        .S02_SC_R_send(S16_SC_R_1_SEND),
        .S03_SC_B_info(S17_SC_B_1_INFO),
        .S03_SC_B_payld(S17_SC_B_1_PAYLD),
        .S03_SC_B_recv(S17_SC_B_1_RECV),
        .S03_SC_B_req(S17_SC_B_1_REQ),
        .S03_SC_B_send(S17_SC_B_1_SEND),
        .S03_SC_R_info(S17_SC_R_1_INFO),
        .S03_SC_R_payld(S17_SC_R_1_PAYLD),
        .S03_SC_R_recv(S17_SC_R_1_RECV),
        .S03_SC_R_req(S17_SC_R_1_REQ),
        .S03_SC_R_send(S17_SC_R_1_SEND),
        .S04_SC_B_info(S18_SC_B_1_INFO),
        .S04_SC_B_payld(S18_SC_B_1_PAYLD),
        .S04_SC_B_recv(S18_SC_B_1_RECV),
        .S04_SC_B_req(S18_SC_B_1_REQ),
        .S04_SC_B_send(S18_SC_B_1_SEND),
        .S04_SC_R_info(S18_SC_R_1_INFO),
        .S04_SC_R_payld(S18_SC_R_1_PAYLD),
        .S04_SC_R_recv(S18_SC_R_1_RECV),
        .S04_SC_R_req(S18_SC_R_1_REQ),
        .S04_SC_R_send(S18_SC_R_1_SEND),
        .S05_SC_B_info(S19_SC_B_1_INFO),
        .S05_SC_B_payld(S19_SC_B_1_PAYLD),
        .S05_SC_B_recv(S19_SC_B_1_RECV),
        .S05_SC_B_req(S19_SC_B_1_REQ),
        .S05_SC_B_send(S19_SC_B_1_SEND),
        .S05_SC_R_info(S19_SC_R_1_INFO),
        .S05_SC_R_payld(S19_SC_R_1_PAYLD),
        .S05_SC_R_recv(S19_SC_R_1_RECV),
        .S05_SC_R_req(S19_SC_R_1_REQ),
        .S05_SC_R_send(S19_SC_R_1_SEND),
        .S06_SC_B_info(S20_SC_B_1_INFO),
        .S06_SC_B_payld(S20_SC_B_1_PAYLD),
        .S06_SC_B_recv(S20_SC_B_1_RECV),
        .S06_SC_B_req(S20_SC_B_1_REQ),
        .S06_SC_B_send(S20_SC_B_1_SEND),
        .S06_SC_R_info(S20_SC_R_1_INFO),
        .S06_SC_R_payld(S20_SC_R_1_PAYLD),
        .S06_SC_R_recv(S20_SC_R_1_RECV),
        .S06_SC_R_req(S20_SC_R_1_REQ),
        .S06_SC_R_send(S20_SC_R_1_SEND),
        .aclk(m_sc_aclk_1));
  out_swbd_3_imp_1YSV8IF out_swbd_3
       (.M00_SC_AR_info(out_swbd_3_M00_SC_AR_INFO),
        .M00_SC_AR_payld(out_swbd_3_M00_SC_AR_PAYLD),
        .M00_SC_AR_recv(out_swbd_3_M00_SC_AR_RECV),
        .M00_SC_AR_req(out_swbd_3_M00_SC_AR_REQ),
        .M00_SC_AR_send(out_swbd_3_M00_SC_AR_SEND),
        .M00_SC_AW_info(out_swbd_3_M00_SC_AW_INFO),
        .M00_SC_AW_payld(out_swbd_3_M00_SC_AW_PAYLD),
        .M00_SC_AW_recv(out_swbd_3_M00_SC_AW_RECV),
        .M00_SC_AW_req(out_swbd_3_M00_SC_AW_REQ),
        .M00_SC_AW_send(out_swbd_3_M00_SC_AW_SEND),
        .M00_SC_B_info(out_swbd_3_M00_SC_B_INFO),
        .M00_SC_B_payld(out_swbd_3_M00_SC_B_PAYLD),
        .M00_SC_B_recv(out_swbd_3_M00_SC_B_RECV),
        .M00_SC_B_req(out_swbd_3_M00_SC_B_REQ),
        .M00_SC_B_send(out_swbd_3_M00_SC_B_SEND),
        .M00_SC_R_info(out_swbd_3_M00_SC_R_INFO),
        .M00_SC_R_payld(out_swbd_3_M00_SC_R_PAYLD),
        .M00_SC_R_recv(out_swbd_3_M00_SC_R_RECV),
        .M00_SC_R_req(out_swbd_3_M00_SC_R_REQ),
        .M00_SC_R_send(out_swbd_3_M00_SC_R_SEND),
        .M00_SC_W_info(out_swbd_3_M00_SC_W_INFO),
        .M00_SC_W_payld(out_swbd_3_M00_SC_W_PAYLD),
        .M00_SC_W_recv(out_swbd_3_M00_SC_W_RECV),
        .M00_SC_W_req(out_swbd_3_M00_SC_W_REQ),
        .M00_SC_W_send(out_swbd_3_M00_SC_W_SEND),
        .M01_SC_AR_info(out_swbd_3_M01_SC_AR_INFO),
        .M01_SC_AR_payld(out_swbd_3_M01_SC_AR_PAYLD),
        .M01_SC_AR_recv(out_swbd_3_M01_SC_AR_RECV),
        .M01_SC_AR_req(out_swbd_3_M01_SC_AR_REQ),
        .M01_SC_AR_send(out_swbd_3_M01_SC_AR_SEND),
        .M01_SC_AW_info(out_swbd_3_M01_SC_AW_INFO),
        .M01_SC_AW_payld(out_swbd_3_M01_SC_AW_PAYLD),
        .M01_SC_AW_recv(out_swbd_3_M01_SC_AW_RECV),
        .M01_SC_AW_req(out_swbd_3_M01_SC_AW_REQ),
        .M01_SC_AW_send(out_swbd_3_M01_SC_AW_SEND),
        .M01_SC_W_info(out_swbd_3_M01_SC_W_INFO),
        .M01_SC_W_payld(out_swbd_3_M01_SC_W_PAYLD),
        .M01_SC_W_recv(out_swbd_3_M01_SC_W_RECV),
        .M01_SC_W_req(out_swbd_3_M01_SC_W_REQ),
        .M01_SC_W_send(out_swbd_3_M01_SC_W_SEND),
        .M02_SC_AR_info(out_swbd_3_M02_SC_AR_INFO),
        .M02_SC_AR_payld(out_swbd_3_M02_SC_AR_PAYLD),
        .M02_SC_AR_recv(out_swbd_3_M02_SC_AR_RECV),
        .M02_SC_AR_req(out_swbd_3_M02_SC_AR_REQ),
        .M02_SC_AR_send(out_swbd_3_M02_SC_AR_SEND),
        .M02_SC_AW_info(out_swbd_3_M02_SC_AW_INFO),
        .M02_SC_AW_payld(out_swbd_3_M02_SC_AW_PAYLD),
        .M02_SC_AW_recv(out_swbd_3_M02_SC_AW_RECV),
        .M02_SC_AW_req(out_swbd_3_M02_SC_AW_REQ),
        .M02_SC_AW_send(out_swbd_3_M02_SC_AW_SEND),
        .M02_SC_W_info(out_swbd_3_M02_SC_W_INFO),
        .M02_SC_W_payld(out_swbd_3_M02_SC_W_PAYLD),
        .M02_SC_W_recv(out_swbd_3_M02_SC_W_RECV),
        .M02_SC_W_req(out_swbd_3_M02_SC_W_REQ),
        .M02_SC_W_send(out_swbd_3_M02_SC_W_SEND),
        .M03_SC_AR_info(out_swbd_3_M03_SC_AR_INFO),
        .M03_SC_AR_payld(out_swbd_3_M03_SC_AR_PAYLD),
        .M03_SC_AR_recv(out_swbd_3_M03_SC_AR_RECV),
        .M03_SC_AR_req(out_swbd_3_M03_SC_AR_REQ),
        .M03_SC_AR_send(out_swbd_3_M03_SC_AR_SEND),
        .M03_SC_AW_info(out_swbd_3_M03_SC_AW_INFO),
        .M03_SC_AW_payld(out_swbd_3_M03_SC_AW_PAYLD),
        .M03_SC_AW_recv(out_swbd_3_M03_SC_AW_RECV),
        .M03_SC_AW_req(out_swbd_3_M03_SC_AW_REQ),
        .M03_SC_AW_send(out_swbd_3_M03_SC_AW_SEND),
        .M03_SC_W_info(out_swbd_3_M03_SC_W_INFO),
        .M03_SC_W_payld(out_swbd_3_M03_SC_W_PAYLD),
        .M03_SC_W_recv(out_swbd_3_M03_SC_W_RECV),
        .M03_SC_W_req(out_swbd_3_M03_SC_W_REQ),
        .M03_SC_W_send(out_swbd_3_M03_SC_W_SEND),
        .M04_SC_AR_info(out_swbd_3_M04_SC_AR_INFO),
        .M04_SC_AR_payld(out_swbd_3_M04_SC_AR_PAYLD),
        .M04_SC_AR_recv(out_swbd_3_M04_SC_AR_RECV),
        .M04_SC_AR_req(out_swbd_3_M04_SC_AR_REQ),
        .M04_SC_AR_send(out_swbd_3_M04_SC_AR_SEND),
        .M04_SC_AW_info(out_swbd_3_M04_SC_AW_INFO),
        .M04_SC_AW_payld(out_swbd_3_M04_SC_AW_PAYLD),
        .M04_SC_AW_recv(out_swbd_3_M04_SC_AW_RECV),
        .M04_SC_AW_req(out_swbd_3_M04_SC_AW_REQ),
        .M04_SC_AW_send(out_swbd_3_M04_SC_AW_SEND),
        .M04_SC_W_info(out_swbd_3_M04_SC_W_INFO),
        .M04_SC_W_payld(out_swbd_3_M04_SC_W_PAYLD),
        .M04_SC_W_recv(out_swbd_3_M04_SC_W_RECV),
        .M04_SC_W_req(out_swbd_3_M04_SC_W_REQ),
        .M04_SC_W_send(out_swbd_3_M04_SC_W_SEND),
        .M05_SC_AR_info(out_swbd_3_M05_SC_AR_INFO),
        .M05_SC_AR_payld(out_swbd_3_M05_SC_AR_PAYLD),
        .M05_SC_AR_recv(out_swbd_3_M05_SC_AR_RECV),
        .M05_SC_AR_req(out_swbd_3_M05_SC_AR_REQ),
        .M05_SC_AR_send(out_swbd_3_M05_SC_AR_SEND),
        .M05_SC_AW_info(out_swbd_3_M05_SC_AW_INFO),
        .M05_SC_AW_payld(out_swbd_3_M05_SC_AW_PAYLD),
        .M05_SC_AW_recv(out_swbd_3_M05_SC_AW_RECV),
        .M05_SC_AW_req(out_swbd_3_M05_SC_AW_REQ),
        .M05_SC_AW_send(out_swbd_3_M05_SC_AW_SEND),
        .M05_SC_W_info(out_swbd_3_M05_SC_W_INFO),
        .M05_SC_W_payld(out_swbd_3_M05_SC_W_PAYLD),
        .M05_SC_W_recv(out_swbd_3_M05_SC_W_RECV),
        .M05_SC_W_req(out_swbd_3_M05_SC_W_REQ),
        .M05_SC_W_send(out_swbd_3_M05_SC_W_SEND),
        .S00_SC_AR_info(S00_SC_AR_5_INFO),
        .S00_SC_AR_payld(S00_SC_AR_5_PAYLD),
        .S00_SC_AR_recv(S00_SC_AR_5_RECV),
        .S00_SC_AR_req(S00_SC_AR_5_REQ),
        .S00_SC_AR_send(S00_SC_AR_5_SEND),
        .S00_SC_AW_info(S00_SC_AW_5_INFO),
        .S00_SC_AW_payld(S00_SC_AW_5_PAYLD),
        .S00_SC_AW_recv(S00_SC_AW_5_RECV),
        .S00_SC_AW_req(S00_SC_AW_5_REQ),
        .S00_SC_AW_send(S00_SC_AW_5_SEND),
        .S00_SC_B_info(S21_SC_B_1_INFO),
        .S00_SC_B_payld(S21_SC_B_1_PAYLD),
        .S00_SC_B_recv(S21_SC_B_1_RECV),
        .S00_SC_B_req(S21_SC_B_1_REQ),
        .S00_SC_B_send(S21_SC_B_1_SEND),
        .S00_SC_R_info(S21_SC_R_1_INFO),
        .S00_SC_R_payld(S21_SC_R_1_PAYLD),
        .S00_SC_R_recv(S21_SC_R_1_RECV),
        .S00_SC_R_req(S21_SC_R_1_REQ),
        .S00_SC_R_send(S21_SC_R_1_SEND),
        .S00_SC_W_info(S00_SC_W_5_INFO),
        .S00_SC_W_payld(S00_SC_W_5_PAYLD),
        .S00_SC_W_recv(S00_SC_W_5_RECV),
        .S00_SC_W_req(S00_SC_W_5_REQ),
        .S00_SC_W_send(S00_SC_W_5_SEND),
        .S01_SC_B_info(S22_SC_B_1_INFO),
        .S01_SC_B_payld(S22_SC_B_1_PAYLD),
        .S01_SC_B_recv(S22_SC_B_1_RECV),
        .S01_SC_B_req(S22_SC_B_1_REQ),
        .S01_SC_B_send(S22_SC_B_1_SEND),
        .S01_SC_R_info(S22_SC_R_1_INFO),
        .S01_SC_R_payld(S22_SC_R_1_PAYLD),
        .S01_SC_R_recv(S22_SC_R_1_RECV),
        .S01_SC_R_req(S22_SC_R_1_REQ),
        .S01_SC_R_send(S22_SC_R_1_SEND),
        .S02_SC_B_info(S23_SC_B_1_INFO),
        .S02_SC_B_payld(S23_SC_B_1_PAYLD),
        .S02_SC_B_recv(S23_SC_B_1_RECV),
        .S02_SC_B_req(S23_SC_B_1_REQ),
        .S02_SC_B_send(S23_SC_B_1_SEND),
        .S02_SC_R_info(S23_SC_R_1_INFO),
        .S02_SC_R_payld(S23_SC_R_1_PAYLD),
        .S02_SC_R_recv(S23_SC_R_1_RECV),
        .S02_SC_R_req(S23_SC_R_1_REQ),
        .S02_SC_R_send(S23_SC_R_1_SEND),
        .S03_SC_B_info(S24_SC_B_1_INFO),
        .S03_SC_B_payld(S24_SC_B_1_PAYLD),
        .S03_SC_B_recv(S24_SC_B_1_RECV),
        .S03_SC_B_req(S24_SC_B_1_REQ),
        .S03_SC_B_send(S24_SC_B_1_SEND),
        .S03_SC_R_info(S24_SC_R_1_INFO),
        .S03_SC_R_payld(S24_SC_R_1_PAYLD),
        .S03_SC_R_recv(S24_SC_R_1_RECV),
        .S03_SC_R_req(S24_SC_R_1_REQ),
        .S03_SC_R_send(S24_SC_R_1_SEND),
        .S04_SC_B_info(S25_SC_B_1_INFO),
        .S04_SC_B_payld(S25_SC_B_1_PAYLD),
        .S04_SC_B_recv(S25_SC_B_1_RECV),
        .S04_SC_B_req(S25_SC_B_1_REQ),
        .S04_SC_B_send(S25_SC_B_1_SEND),
        .S04_SC_R_info(S25_SC_R_1_INFO),
        .S04_SC_R_payld(S25_SC_R_1_PAYLD),
        .S04_SC_R_recv(S25_SC_R_1_RECV),
        .S04_SC_R_req(S25_SC_R_1_REQ),
        .S04_SC_R_send(S25_SC_R_1_SEND),
        .S05_SC_B_info(S26_SC_B_1_INFO),
        .S05_SC_B_payld(S26_SC_B_1_PAYLD),
        .S05_SC_B_recv(S26_SC_B_1_RECV),
        .S05_SC_B_req(S26_SC_B_1_REQ),
        .S05_SC_B_send(S26_SC_B_1_SEND),
        .S05_SC_R_info(S26_SC_R_1_INFO),
        .S05_SC_R_payld(S26_SC_R_1_PAYLD),
        .S05_SC_R_recv(S26_SC_R_1_RECV),
        .S05_SC_R_req(S26_SC_R_1_REQ),
        .S05_SC_R_send(S26_SC_R_1_SEND),
        .aclk(m_sc_aclk_1));
  out_swbd_4_imp_1W8CTSE out_swbd_4
       (.M00_SC_AR_info(out_swbd_4_M00_SC_AR_INFO),
        .M00_SC_AR_payld(out_swbd_4_M00_SC_AR_PAYLD),
        .M00_SC_AR_recv(out_swbd_4_M00_SC_AR_RECV),
        .M00_SC_AR_req(out_swbd_4_M00_SC_AR_REQ),
        .M00_SC_AR_send(out_swbd_4_M00_SC_AR_SEND),
        .M00_SC_AW_info(out_swbd_4_M00_SC_AW_INFO),
        .M00_SC_AW_payld(out_swbd_4_M00_SC_AW_PAYLD),
        .M00_SC_AW_recv(out_swbd_4_M00_SC_AW_RECV),
        .M00_SC_AW_req(out_swbd_4_M00_SC_AW_REQ),
        .M00_SC_AW_send(out_swbd_4_M00_SC_AW_SEND),
        .M00_SC_B_info(out_swbd_4_M00_SC_B_INFO),
        .M00_SC_B_payld(out_swbd_4_M00_SC_B_PAYLD),
        .M00_SC_B_recv(out_swbd_4_M00_SC_B_RECV),
        .M00_SC_B_req(out_swbd_4_M00_SC_B_REQ),
        .M00_SC_B_send(out_swbd_4_M00_SC_B_SEND),
        .M00_SC_R_info(out_swbd_4_M00_SC_R_INFO),
        .M00_SC_R_payld(out_swbd_4_M00_SC_R_PAYLD),
        .M00_SC_R_recv(out_swbd_4_M00_SC_R_RECV),
        .M00_SC_R_req(out_swbd_4_M00_SC_R_REQ),
        .M00_SC_R_send(out_swbd_4_M00_SC_R_SEND),
        .M00_SC_W_info(out_swbd_4_M00_SC_W_INFO),
        .M00_SC_W_payld(out_swbd_4_M00_SC_W_PAYLD),
        .M00_SC_W_recv(out_swbd_4_M00_SC_W_RECV),
        .M00_SC_W_req(out_swbd_4_M00_SC_W_REQ),
        .M00_SC_W_send(out_swbd_4_M00_SC_W_SEND),
        .M01_SC_AR_info(out_swbd_4_M01_SC_AR_INFO),
        .M01_SC_AR_payld(out_swbd_4_M01_SC_AR_PAYLD),
        .M01_SC_AR_recv(out_swbd_4_M01_SC_AR_RECV),
        .M01_SC_AR_req(out_swbd_4_M01_SC_AR_REQ),
        .M01_SC_AR_send(out_swbd_4_M01_SC_AR_SEND),
        .M01_SC_AW_info(out_swbd_4_M01_SC_AW_INFO),
        .M01_SC_AW_payld(out_swbd_4_M01_SC_AW_PAYLD),
        .M01_SC_AW_recv(out_swbd_4_M01_SC_AW_RECV),
        .M01_SC_AW_req(out_swbd_4_M01_SC_AW_REQ),
        .M01_SC_AW_send(out_swbd_4_M01_SC_AW_SEND),
        .M01_SC_W_info(out_swbd_4_M01_SC_W_INFO),
        .M01_SC_W_payld(out_swbd_4_M01_SC_W_PAYLD),
        .M01_SC_W_recv(out_swbd_4_M01_SC_W_RECV),
        .M01_SC_W_req(out_swbd_4_M01_SC_W_REQ),
        .M01_SC_W_send(out_swbd_4_M01_SC_W_SEND),
        .M02_SC_AR_info(out_swbd_4_M02_SC_AR_INFO),
        .M02_SC_AR_payld(out_swbd_4_M02_SC_AR_PAYLD),
        .M02_SC_AR_recv(out_swbd_4_M02_SC_AR_RECV),
        .M02_SC_AR_req(out_swbd_4_M02_SC_AR_REQ),
        .M02_SC_AR_send(out_swbd_4_M02_SC_AR_SEND),
        .M02_SC_AW_info(out_swbd_4_M02_SC_AW_INFO),
        .M02_SC_AW_payld(out_swbd_4_M02_SC_AW_PAYLD),
        .M02_SC_AW_recv(out_swbd_4_M02_SC_AW_RECV),
        .M02_SC_AW_req(out_swbd_4_M02_SC_AW_REQ),
        .M02_SC_AW_send(out_swbd_4_M02_SC_AW_SEND),
        .M02_SC_W_info(out_swbd_4_M02_SC_W_INFO),
        .M02_SC_W_payld(out_swbd_4_M02_SC_W_PAYLD),
        .M02_SC_W_recv(out_swbd_4_M02_SC_W_RECV),
        .M02_SC_W_req(out_swbd_4_M02_SC_W_REQ),
        .M02_SC_W_send(out_swbd_4_M02_SC_W_SEND),
        .M03_SC_AR_info(out_swbd_4_M03_SC_AR_INFO),
        .M03_SC_AR_payld(out_swbd_4_M03_SC_AR_PAYLD),
        .M03_SC_AR_recv(out_swbd_4_M03_SC_AR_RECV),
        .M03_SC_AR_req(out_swbd_4_M03_SC_AR_REQ),
        .M03_SC_AR_send(out_swbd_4_M03_SC_AR_SEND),
        .M03_SC_AW_info(out_swbd_4_M03_SC_AW_INFO),
        .M03_SC_AW_payld(out_swbd_4_M03_SC_AW_PAYLD),
        .M03_SC_AW_recv(out_swbd_4_M03_SC_AW_RECV),
        .M03_SC_AW_req(out_swbd_4_M03_SC_AW_REQ),
        .M03_SC_AW_send(out_swbd_4_M03_SC_AW_SEND),
        .M03_SC_W_info(out_swbd_4_M03_SC_W_INFO),
        .M03_SC_W_payld(out_swbd_4_M03_SC_W_PAYLD),
        .M03_SC_W_recv(out_swbd_4_M03_SC_W_RECV),
        .M03_SC_W_req(out_swbd_4_M03_SC_W_REQ),
        .M03_SC_W_send(out_swbd_4_M03_SC_W_SEND),
        .M04_SC_AR_info(out_swbd_4_M04_SC_AR_INFO),
        .M04_SC_AR_payld(out_swbd_4_M04_SC_AR_PAYLD),
        .M04_SC_AR_recv(out_swbd_4_M04_SC_AR_RECV),
        .M04_SC_AR_req(out_swbd_4_M04_SC_AR_REQ),
        .M04_SC_AR_send(out_swbd_4_M04_SC_AR_SEND),
        .M04_SC_AW_info(out_swbd_4_M04_SC_AW_INFO),
        .M04_SC_AW_payld(out_swbd_4_M04_SC_AW_PAYLD),
        .M04_SC_AW_recv(out_swbd_4_M04_SC_AW_RECV),
        .M04_SC_AW_req(out_swbd_4_M04_SC_AW_REQ),
        .M04_SC_AW_send(out_swbd_4_M04_SC_AW_SEND),
        .M04_SC_W_info(out_swbd_4_M04_SC_W_INFO),
        .M04_SC_W_payld(out_swbd_4_M04_SC_W_PAYLD),
        .M04_SC_W_recv(out_swbd_4_M04_SC_W_RECV),
        .M04_SC_W_req(out_swbd_4_M04_SC_W_REQ),
        .M04_SC_W_send(out_swbd_4_M04_SC_W_SEND),
        .M05_SC_AR_info(out_swbd_4_M05_SC_AR_INFO),
        .M05_SC_AR_payld(out_swbd_4_M05_SC_AR_PAYLD),
        .M05_SC_AR_recv(out_swbd_4_M05_SC_AR_RECV),
        .M05_SC_AR_req(out_swbd_4_M05_SC_AR_REQ),
        .M05_SC_AR_send(out_swbd_4_M05_SC_AR_SEND),
        .M05_SC_AW_info(out_swbd_4_M05_SC_AW_INFO),
        .M05_SC_AW_payld(out_swbd_4_M05_SC_AW_PAYLD),
        .M05_SC_AW_recv(out_swbd_4_M05_SC_AW_RECV),
        .M05_SC_AW_req(out_swbd_4_M05_SC_AW_REQ),
        .M05_SC_AW_send(out_swbd_4_M05_SC_AW_SEND),
        .M05_SC_W_info(out_swbd_4_M05_SC_W_INFO),
        .M05_SC_W_payld(out_swbd_4_M05_SC_W_PAYLD),
        .M05_SC_W_recv(out_swbd_4_M05_SC_W_RECV),
        .M05_SC_W_req(out_swbd_4_M05_SC_W_REQ),
        .M05_SC_W_send(out_swbd_4_M05_SC_W_SEND),
        .S00_SC_AR_info(S00_SC_AR_6_INFO),
        .S00_SC_AR_payld(S00_SC_AR_6_PAYLD),
        .S00_SC_AR_recv(S00_SC_AR_6_RECV),
        .S00_SC_AR_req(S00_SC_AR_6_REQ),
        .S00_SC_AR_send(S00_SC_AR_6_SEND),
        .S00_SC_AW_info(S00_SC_AW_6_INFO),
        .S00_SC_AW_payld(S00_SC_AW_6_PAYLD),
        .S00_SC_AW_recv(S00_SC_AW_6_RECV),
        .S00_SC_AW_req(S00_SC_AW_6_REQ),
        .S00_SC_AW_send(S00_SC_AW_6_SEND),
        .S00_SC_B_info(S27_SC_B_1_INFO),
        .S00_SC_B_payld(S27_SC_B_1_PAYLD),
        .S00_SC_B_recv(S27_SC_B_1_RECV),
        .S00_SC_B_req(S27_SC_B_1_REQ),
        .S00_SC_B_send(S27_SC_B_1_SEND),
        .S00_SC_R_info(S27_SC_R_1_INFO),
        .S00_SC_R_payld(S27_SC_R_1_PAYLD),
        .S00_SC_R_recv(S27_SC_R_1_RECV),
        .S00_SC_R_req(S27_SC_R_1_REQ),
        .S00_SC_R_send(S27_SC_R_1_SEND),
        .S00_SC_W_info(S00_SC_W_6_INFO),
        .S00_SC_W_payld(S00_SC_W_6_PAYLD),
        .S00_SC_W_recv(S00_SC_W_6_RECV),
        .S00_SC_W_req(S00_SC_W_6_REQ),
        .S00_SC_W_send(S00_SC_W_6_SEND),
        .S01_SC_B_info(S28_SC_B_1_INFO),
        .S01_SC_B_payld(S28_SC_B_1_PAYLD),
        .S01_SC_B_recv(S28_SC_B_1_RECV),
        .S01_SC_B_req(S28_SC_B_1_REQ),
        .S01_SC_B_send(S28_SC_B_1_SEND),
        .S01_SC_R_info(S28_SC_R_1_INFO),
        .S01_SC_R_payld(S28_SC_R_1_PAYLD),
        .S01_SC_R_recv(S28_SC_R_1_RECV),
        .S01_SC_R_req(S28_SC_R_1_REQ),
        .S01_SC_R_send(S28_SC_R_1_SEND),
        .S02_SC_B_info(S29_SC_B_1_INFO),
        .S02_SC_B_payld(S29_SC_B_1_PAYLD),
        .S02_SC_B_recv(S29_SC_B_1_RECV),
        .S02_SC_B_req(S29_SC_B_1_REQ),
        .S02_SC_B_send(S29_SC_B_1_SEND),
        .S02_SC_R_info(S29_SC_R_1_INFO),
        .S02_SC_R_payld(S29_SC_R_1_PAYLD),
        .S02_SC_R_recv(S29_SC_R_1_RECV),
        .S02_SC_R_req(S29_SC_R_1_REQ),
        .S02_SC_R_send(S29_SC_R_1_SEND),
        .S03_SC_B_info(S30_SC_B_1_INFO),
        .S03_SC_B_payld(S30_SC_B_1_PAYLD),
        .S03_SC_B_recv(S30_SC_B_1_RECV),
        .S03_SC_B_req(S30_SC_B_1_REQ),
        .S03_SC_B_send(S30_SC_B_1_SEND),
        .S03_SC_R_info(S30_SC_R_1_INFO),
        .S03_SC_R_payld(S30_SC_R_1_PAYLD),
        .S03_SC_R_recv(S30_SC_R_1_RECV),
        .S03_SC_R_req(S30_SC_R_1_REQ),
        .S03_SC_R_send(S30_SC_R_1_SEND),
        .S04_SC_B_info(S31_SC_B_1_INFO),
        .S04_SC_B_payld(S31_SC_B_1_PAYLD),
        .S04_SC_B_recv(S31_SC_B_1_RECV),
        .S04_SC_B_req(S31_SC_B_1_REQ),
        .S04_SC_B_send(S31_SC_B_1_SEND),
        .S04_SC_R_info(S31_SC_R_1_INFO),
        .S04_SC_R_payld(S31_SC_R_1_PAYLD),
        .S04_SC_R_recv(S31_SC_R_1_RECV),
        .S04_SC_R_req(S31_SC_R_1_REQ),
        .S04_SC_R_send(S31_SC_R_1_SEND),
        .S05_SC_B_info(S32_SC_B_1_INFO),
        .S05_SC_B_payld(S32_SC_B_1_PAYLD),
        .S05_SC_B_recv(S32_SC_B_1_RECV),
        .S05_SC_B_req(S32_SC_B_1_REQ),
        .S05_SC_B_send(S32_SC_B_1_SEND),
        .S05_SC_R_info(S32_SC_R_1_INFO),
        .S05_SC_R_payld(S32_SC_R_1_PAYLD),
        .S05_SC_R_recv(S32_SC_R_1_RECV),
        .S05_SC_R_req(S32_SC_R_1_REQ),
        .S05_SC_R_send(S32_SC_R_1_SEND),
        .aclk(m_sc_aclk_1));
  out_swbd_5_imp_FVZZGW out_swbd_5
       (.M00_SC_AR_info(out_swbd_5_M00_SC_AR_INFO),
        .M00_SC_AR_payld(out_swbd_5_M00_SC_AR_PAYLD),
        .M00_SC_AR_recv(out_swbd_5_M00_SC_AR_RECV),
        .M00_SC_AR_req(out_swbd_5_M00_SC_AR_REQ),
        .M00_SC_AR_send(out_swbd_5_M00_SC_AR_SEND),
        .M00_SC_AW_info(out_swbd_5_M00_SC_AW_INFO),
        .M00_SC_AW_payld(out_swbd_5_M00_SC_AW_PAYLD),
        .M00_SC_AW_recv(out_swbd_5_M00_SC_AW_RECV),
        .M00_SC_AW_req(out_swbd_5_M00_SC_AW_REQ),
        .M00_SC_AW_send(out_swbd_5_M00_SC_AW_SEND),
        .M00_SC_B_info(out_swbd_5_M00_SC_B_INFO),
        .M00_SC_B_payld(out_swbd_5_M00_SC_B_PAYLD),
        .M00_SC_B_recv(out_swbd_5_M00_SC_B_RECV),
        .M00_SC_B_req(out_swbd_5_M00_SC_B_REQ),
        .M00_SC_B_send(out_swbd_5_M00_SC_B_SEND),
        .M00_SC_R_info(out_swbd_5_M00_SC_R_INFO),
        .M00_SC_R_payld(out_swbd_5_M00_SC_R_PAYLD),
        .M00_SC_R_recv(out_swbd_5_M00_SC_R_RECV),
        .M00_SC_R_req(out_swbd_5_M00_SC_R_REQ),
        .M00_SC_R_send(out_swbd_5_M00_SC_R_SEND),
        .M00_SC_W_info(out_swbd_5_M00_SC_W_INFO),
        .M00_SC_W_payld(out_swbd_5_M00_SC_W_PAYLD),
        .M00_SC_W_recv(out_swbd_5_M00_SC_W_RECV),
        .M00_SC_W_req(out_swbd_5_M00_SC_W_REQ),
        .M00_SC_W_send(out_swbd_5_M00_SC_W_SEND),
        .M01_SC_AR_info(out_swbd_5_M01_SC_AR_INFO),
        .M01_SC_AR_payld(out_swbd_5_M01_SC_AR_PAYLD),
        .M01_SC_AR_recv(out_swbd_5_M01_SC_AR_RECV),
        .M01_SC_AR_req(out_swbd_5_M01_SC_AR_REQ),
        .M01_SC_AR_send(out_swbd_5_M01_SC_AR_SEND),
        .M01_SC_AW_info(out_swbd_5_M01_SC_AW_INFO),
        .M01_SC_AW_payld(out_swbd_5_M01_SC_AW_PAYLD),
        .M01_SC_AW_recv(out_swbd_5_M01_SC_AW_RECV),
        .M01_SC_AW_req(out_swbd_5_M01_SC_AW_REQ),
        .M01_SC_AW_send(out_swbd_5_M01_SC_AW_SEND),
        .M01_SC_W_info(out_swbd_5_M01_SC_W_INFO),
        .M01_SC_W_payld(out_swbd_5_M01_SC_W_PAYLD),
        .M01_SC_W_recv(out_swbd_5_M01_SC_W_RECV),
        .M01_SC_W_req(out_swbd_5_M01_SC_W_REQ),
        .M01_SC_W_send(out_swbd_5_M01_SC_W_SEND),
        .M02_SC_AR_info(out_swbd_5_M02_SC_AR_INFO),
        .M02_SC_AR_payld(out_swbd_5_M02_SC_AR_PAYLD),
        .M02_SC_AR_recv(out_swbd_5_M02_SC_AR_RECV),
        .M02_SC_AR_req(out_swbd_5_M02_SC_AR_REQ),
        .M02_SC_AR_send(out_swbd_5_M02_SC_AR_SEND),
        .M02_SC_AW_info(out_swbd_5_M02_SC_AW_INFO),
        .M02_SC_AW_payld(out_swbd_5_M02_SC_AW_PAYLD),
        .M02_SC_AW_recv(out_swbd_5_M02_SC_AW_RECV),
        .M02_SC_AW_req(out_swbd_5_M02_SC_AW_REQ),
        .M02_SC_AW_send(out_swbd_5_M02_SC_AW_SEND),
        .M02_SC_W_info(out_swbd_5_M02_SC_W_INFO),
        .M02_SC_W_payld(out_swbd_5_M02_SC_W_PAYLD),
        .M02_SC_W_recv(out_swbd_5_M02_SC_W_RECV),
        .M02_SC_W_req(out_swbd_5_M02_SC_W_REQ),
        .M02_SC_W_send(out_swbd_5_M02_SC_W_SEND),
        .M03_SC_AR_info(out_swbd_5_M03_SC_AR_INFO),
        .M03_SC_AR_payld(out_swbd_5_M03_SC_AR_PAYLD),
        .M03_SC_AR_recv(out_swbd_5_M03_SC_AR_RECV),
        .M03_SC_AR_req(out_swbd_5_M03_SC_AR_REQ),
        .M03_SC_AR_send(out_swbd_5_M03_SC_AR_SEND),
        .M03_SC_AW_info(out_swbd_5_M03_SC_AW_INFO),
        .M03_SC_AW_payld(out_swbd_5_M03_SC_AW_PAYLD),
        .M03_SC_AW_recv(out_swbd_5_M03_SC_AW_RECV),
        .M03_SC_AW_req(out_swbd_5_M03_SC_AW_REQ),
        .M03_SC_AW_send(out_swbd_5_M03_SC_AW_SEND),
        .M03_SC_W_info(out_swbd_5_M03_SC_W_INFO),
        .M03_SC_W_payld(out_swbd_5_M03_SC_W_PAYLD),
        .M03_SC_W_recv(out_swbd_5_M03_SC_W_RECV),
        .M03_SC_W_req(out_swbd_5_M03_SC_W_REQ),
        .M03_SC_W_send(out_swbd_5_M03_SC_W_SEND),
        .M04_SC_AR_info(out_swbd_5_M04_SC_AR_INFO),
        .M04_SC_AR_payld(out_swbd_5_M04_SC_AR_PAYLD),
        .M04_SC_AR_recv(out_swbd_5_M04_SC_AR_RECV),
        .M04_SC_AR_req(out_swbd_5_M04_SC_AR_REQ),
        .M04_SC_AR_send(out_swbd_5_M04_SC_AR_SEND),
        .M04_SC_AW_info(out_swbd_5_M04_SC_AW_INFO),
        .M04_SC_AW_payld(out_swbd_5_M04_SC_AW_PAYLD),
        .M04_SC_AW_recv(out_swbd_5_M04_SC_AW_RECV),
        .M04_SC_AW_req(out_swbd_5_M04_SC_AW_REQ),
        .M04_SC_AW_send(out_swbd_5_M04_SC_AW_SEND),
        .M04_SC_W_info(out_swbd_5_M04_SC_W_INFO),
        .M04_SC_W_payld(out_swbd_5_M04_SC_W_PAYLD),
        .M04_SC_W_recv(out_swbd_5_M04_SC_W_RECV),
        .M04_SC_W_req(out_swbd_5_M04_SC_W_REQ),
        .M04_SC_W_send(out_swbd_5_M04_SC_W_SEND),
        .M05_SC_AR_info(out_swbd_5_M05_SC_AR_INFO),
        .M05_SC_AR_payld(out_swbd_5_M05_SC_AR_PAYLD),
        .M05_SC_AR_recv(out_swbd_5_M05_SC_AR_RECV),
        .M05_SC_AR_req(out_swbd_5_M05_SC_AR_REQ),
        .M05_SC_AR_send(out_swbd_5_M05_SC_AR_SEND),
        .M05_SC_AW_info(out_swbd_5_M05_SC_AW_INFO),
        .M05_SC_AW_payld(out_swbd_5_M05_SC_AW_PAYLD),
        .M05_SC_AW_recv(out_swbd_5_M05_SC_AW_RECV),
        .M05_SC_AW_req(out_swbd_5_M05_SC_AW_REQ),
        .M05_SC_AW_send(out_swbd_5_M05_SC_AW_SEND),
        .M05_SC_W_info(out_swbd_5_M05_SC_W_INFO),
        .M05_SC_W_payld(out_swbd_5_M05_SC_W_PAYLD),
        .M05_SC_W_recv(out_swbd_5_M05_SC_W_RECV),
        .M05_SC_W_req(out_swbd_5_M05_SC_W_REQ),
        .M05_SC_W_send(out_swbd_5_M05_SC_W_SEND),
        .S00_SC_AR_info(S00_SC_AR_7_INFO),
        .S00_SC_AR_payld(S00_SC_AR_7_PAYLD),
        .S00_SC_AR_recv(S00_SC_AR_7_RECV),
        .S00_SC_AR_req(S00_SC_AR_7_REQ),
        .S00_SC_AR_send(S00_SC_AR_7_SEND),
        .S00_SC_AW_info(S00_SC_AW_7_INFO),
        .S00_SC_AW_payld(S00_SC_AW_7_PAYLD),
        .S00_SC_AW_recv(S00_SC_AW_7_RECV),
        .S00_SC_AW_req(S00_SC_AW_7_REQ),
        .S00_SC_AW_send(S00_SC_AW_7_SEND),
        .S00_SC_B_info(S33_SC_B_1_INFO),
        .S00_SC_B_payld(S33_SC_B_1_PAYLD),
        .S00_SC_B_recv(S33_SC_B_1_RECV),
        .S00_SC_B_req(S33_SC_B_1_REQ),
        .S00_SC_B_send(S33_SC_B_1_SEND),
        .S00_SC_R_info(S33_SC_R_1_INFO),
        .S00_SC_R_payld(S33_SC_R_1_PAYLD),
        .S00_SC_R_recv(S33_SC_R_1_RECV),
        .S00_SC_R_req(S33_SC_R_1_REQ),
        .S00_SC_R_send(S33_SC_R_1_SEND),
        .S00_SC_W_info(S00_SC_W_7_INFO),
        .S00_SC_W_payld(S00_SC_W_7_PAYLD),
        .S00_SC_W_recv(S00_SC_W_7_RECV),
        .S00_SC_W_req(S00_SC_W_7_REQ),
        .S00_SC_W_send(S00_SC_W_7_SEND),
        .S01_SC_B_info(S34_SC_B_1_INFO),
        .S01_SC_B_payld(S34_SC_B_1_PAYLD),
        .S01_SC_B_recv(S34_SC_B_1_RECV),
        .S01_SC_B_req(S34_SC_B_1_REQ),
        .S01_SC_B_send(S34_SC_B_1_SEND),
        .S01_SC_R_info(S34_SC_R_1_INFO),
        .S01_SC_R_payld(S34_SC_R_1_PAYLD),
        .S01_SC_R_recv(S34_SC_R_1_RECV),
        .S01_SC_R_req(S34_SC_R_1_REQ),
        .S01_SC_R_send(S34_SC_R_1_SEND),
        .S02_SC_B_info(S35_SC_B_1_INFO),
        .S02_SC_B_payld(S35_SC_B_1_PAYLD),
        .S02_SC_B_recv(S35_SC_B_1_RECV),
        .S02_SC_B_req(S35_SC_B_1_REQ),
        .S02_SC_B_send(S35_SC_B_1_SEND),
        .S02_SC_R_info(S35_SC_R_1_INFO),
        .S02_SC_R_payld(S35_SC_R_1_PAYLD),
        .S02_SC_R_recv(S35_SC_R_1_RECV),
        .S02_SC_R_req(S35_SC_R_1_REQ),
        .S02_SC_R_send(S35_SC_R_1_SEND),
        .S03_SC_B_info(S36_SC_B_1_INFO),
        .S03_SC_B_payld(S36_SC_B_1_PAYLD),
        .S03_SC_B_recv(S36_SC_B_1_RECV),
        .S03_SC_B_req(S36_SC_B_1_REQ),
        .S03_SC_B_send(S36_SC_B_1_SEND),
        .S03_SC_R_info(S36_SC_R_1_INFO),
        .S03_SC_R_payld(S36_SC_R_1_PAYLD),
        .S03_SC_R_recv(S36_SC_R_1_RECV),
        .S03_SC_R_req(S36_SC_R_1_REQ),
        .S03_SC_R_send(S36_SC_R_1_SEND),
        .S04_SC_B_info(S37_SC_B_1_INFO),
        .S04_SC_B_payld(S37_SC_B_1_PAYLD),
        .S04_SC_B_recv(S37_SC_B_1_RECV),
        .S04_SC_B_req(S37_SC_B_1_REQ),
        .S04_SC_B_send(S37_SC_B_1_SEND),
        .S04_SC_R_info(S37_SC_R_1_INFO),
        .S04_SC_R_payld(S37_SC_R_1_PAYLD),
        .S04_SC_R_recv(S37_SC_R_1_RECV),
        .S04_SC_R_req(S37_SC_R_1_REQ),
        .S04_SC_R_send(S37_SC_R_1_SEND),
        .S05_SC_B_info(S38_SC_B_1_INFO),
        .S05_SC_B_payld(S38_SC_B_1_PAYLD),
        .S05_SC_B_recv(S38_SC_B_1_RECV),
        .S05_SC_B_req(S38_SC_B_1_REQ),
        .S05_SC_B_send(S38_SC_B_1_SEND),
        .S05_SC_R_info(S38_SC_R_1_INFO),
        .S05_SC_R_payld(S38_SC_R_1_PAYLD),
        .S05_SC_R_recv(S38_SC_R_1_RECV),
        .S05_SC_R_req(S38_SC_R_1_REQ),
        .S05_SC_R_send(S38_SC_R_1_SEND),
        .aclk(m_sc_aclk_1));
  out_swbd_6_imp_1EZXAK3 out_swbd_6
       (.M00_SC_AR_info(out_swbd_6_M00_SC_AR_INFO),
        .M00_SC_AR_payld(out_swbd_6_M00_SC_AR_PAYLD),
        .M00_SC_AR_recv(out_swbd_6_M00_SC_AR_RECV),
        .M00_SC_AR_req(out_swbd_6_M00_SC_AR_REQ),
        .M00_SC_AR_send(out_swbd_6_M00_SC_AR_SEND),
        .M00_SC_AW_info(out_swbd_6_M00_SC_AW_INFO),
        .M00_SC_AW_payld(out_swbd_6_M00_SC_AW_PAYLD),
        .M00_SC_AW_recv(out_swbd_6_M00_SC_AW_RECV),
        .M00_SC_AW_req(out_swbd_6_M00_SC_AW_REQ),
        .M00_SC_AW_send(out_swbd_6_M00_SC_AW_SEND),
        .M00_SC_B_info(out_swbd_6_M00_SC_B_INFO),
        .M00_SC_B_payld(out_swbd_6_M00_SC_B_PAYLD),
        .M00_SC_B_recv(out_swbd_6_M00_SC_B_RECV),
        .M00_SC_B_req(out_swbd_6_M00_SC_B_REQ),
        .M00_SC_B_send(out_swbd_6_M00_SC_B_SEND),
        .M00_SC_R_info(out_swbd_6_M00_SC_R_INFO),
        .M00_SC_R_payld(out_swbd_6_M00_SC_R_PAYLD),
        .M00_SC_R_recv(out_swbd_6_M00_SC_R_RECV),
        .M00_SC_R_req(out_swbd_6_M00_SC_R_REQ),
        .M00_SC_R_send(out_swbd_6_M00_SC_R_SEND),
        .M00_SC_W_info(out_swbd_6_M00_SC_W_INFO),
        .M00_SC_W_payld(out_swbd_6_M00_SC_W_PAYLD),
        .M00_SC_W_recv(out_swbd_6_M00_SC_W_RECV),
        .M00_SC_W_req(out_swbd_6_M00_SC_W_REQ),
        .M00_SC_W_send(out_swbd_6_M00_SC_W_SEND),
        .M01_SC_AR_info(out_swbd_6_M01_SC_AR_INFO),
        .M01_SC_AR_payld(out_swbd_6_M01_SC_AR_PAYLD),
        .M01_SC_AR_recv(out_swbd_6_M01_SC_AR_RECV),
        .M01_SC_AR_req(out_swbd_6_M01_SC_AR_REQ),
        .M01_SC_AR_send(out_swbd_6_M01_SC_AR_SEND),
        .M01_SC_AW_info(out_swbd_6_M01_SC_AW_INFO),
        .M01_SC_AW_payld(out_swbd_6_M01_SC_AW_PAYLD),
        .M01_SC_AW_recv(out_swbd_6_M01_SC_AW_RECV),
        .M01_SC_AW_req(out_swbd_6_M01_SC_AW_REQ),
        .M01_SC_AW_send(out_swbd_6_M01_SC_AW_SEND),
        .M01_SC_W_info(out_swbd_6_M01_SC_W_INFO),
        .M01_SC_W_payld(out_swbd_6_M01_SC_W_PAYLD),
        .M01_SC_W_recv(out_swbd_6_M01_SC_W_RECV),
        .M01_SC_W_req(out_swbd_6_M01_SC_W_REQ),
        .M01_SC_W_send(out_swbd_6_M01_SC_W_SEND),
        .M02_SC_AR_info(out_swbd_6_M02_SC_AR_INFO),
        .M02_SC_AR_payld(out_swbd_6_M02_SC_AR_PAYLD),
        .M02_SC_AR_recv(out_swbd_6_M02_SC_AR_RECV),
        .M02_SC_AR_req(out_swbd_6_M02_SC_AR_REQ),
        .M02_SC_AR_send(out_swbd_6_M02_SC_AR_SEND),
        .M02_SC_AW_info(out_swbd_6_M02_SC_AW_INFO),
        .M02_SC_AW_payld(out_swbd_6_M02_SC_AW_PAYLD),
        .M02_SC_AW_recv(out_swbd_6_M02_SC_AW_RECV),
        .M02_SC_AW_req(out_swbd_6_M02_SC_AW_REQ),
        .M02_SC_AW_send(out_swbd_6_M02_SC_AW_SEND),
        .M02_SC_W_info(out_swbd_6_M02_SC_W_INFO),
        .M02_SC_W_payld(out_swbd_6_M02_SC_W_PAYLD),
        .M02_SC_W_recv(out_swbd_6_M02_SC_W_RECV),
        .M02_SC_W_req(out_swbd_6_M02_SC_W_REQ),
        .M02_SC_W_send(out_swbd_6_M02_SC_W_SEND),
        .M03_SC_AR_info(out_swbd_6_M03_SC_AR_INFO),
        .M03_SC_AR_payld(out_swbd_6_M03_SC_AR_PAYLD),
        .M03_SC_AR_recv(out_swbd_6_M03_SC_AR_RECV),
        .M03_SC_AR_req(out_swbd_6_M03_SC_AR_REQ),
        .M03_SC_AR_send(out_swbd_6_M03_SC_AR_SEND),
        .M03_SC_AW_info(out_swbd_6_M03_SC_AW_INFO),
        .M03_SC_AW_payld(out_swbd_6_M03_SC_AW_PAYLD),
        .M03_SC_AW_recv(out_swbd_6_M03_SC_AW_RECV),
        .M03_SC_AW_req(out_swbd_6_M03_SC_AW_REQ),
        .M03_SC_AW_send(out_swbd_6_M03_SC_AW_SEND),
        .M03_SC_W_info(out_swbd_6_M03_SC_W_INFO),
        .M03_SC_W_payld(out_swbd_6_M03_SC_W_PAYLD),
        .M03_SC_W_recv(out_swbd_6_M03_SC_W_RECV),
        .M03_SC_W_req(out_swbd_6_M03_SC_W_REQ),
        .M03_SC_W_send(out_swbd_6_M03_SC_W_SEND),
        .M04_SC_AR_info(out_swbd_6_M04_SC_AR_INFO),
        .M04_SC_AR_payld(out_swbd_6_M04_SC_AR_PAYLD),
        .M04_SC_AR_recv(out_swbd_6_M04_SC_AR_RECV),
        .M04_SC_AR_req(out_swbd_6_M04_SC_AR_REQ),
        .M04_SC_AR_send(out_swbd_6_M04_SC_AR_SEND),
        .M04_SC_AW_info(out_swbd_6_M04_SC_AW_INFO),
        .M04_SC_AW_payld(out_swbd_6_M04_SC_AW_PAYLD),
        .M04_SC_AW_recv(out_swbd_6_M04_SC_AW_RECV),
        .M04_SC_AW_req(out_swbd_6_M04_SC_AW_REQ),
        .M04_SC_AW_send(out_swbd_6_M04_SC_AW_SEND),
        .M04_SC_W_info(out_swbd_6_M04_SC_W_INFO),
        .M04_SC_W_payld(out_swbd_6_M04_SC_W_PAYLD),
        .M04_SC_W_recv(out_swbd_6_M04_SC_W_RECV),
        .M04_SC_W_req(out_swbd_6_M04_SC_W_REQ),
        .M04_SC_W_send(out_swbd_6_M04_SC_W_SEND),
        .M05_SC_AR_info(out_swbd_6_M05_SC_AR_INFO),
        .M05_SC_AR_payld(out_swbd_6_M05_SC_AR_PAYLD),
        .M05_SC_AR_recv(out_swbd_6_M05_SC_AR_RECV),
        .M05_SC_AR_req(out_swbd_6_M05_SC_AR_REQ),
        .M05_SC_AR_send(out_swbd_6_M05_SC_AR_SEND),
        .M05_SC_AW_info(out_swbd_6_M05_SC_AW_INFO),
        .M05_SC_AW_payld(out_swbd_6_M05_SC_AW_PAYLD),
        .M05_SC_AW_recv(out_swbd_6_M05_SC_AW_RECV),
        .M05_SC_AW_req(out_swbd_6_M05_SC_AW_REQ),
        .M05_SC_AW_send(out_swbd_6_M05_SC_AW_SEND),
        .M05_SC_W_info(out_swbd_6_M05_SC_W_INFO),
        .M05_SC_W_payld(out_swbd_6_M05_SC_W_PAYLD),
        .M05_SC_W_recv(out_swbd_6_M05_SC_W_RECV),
        .M05_SC_W_req(out_swbd_6_M05_SC_W_REQ),
        .M05_SC_W_send(out_swbd_6_M05_SC_W_SEND),
        .S00_SC_AR_info(S00_SC_AR_8_INFO),
        .S00_SC_AR_payld(S00_SC_AR_8_PAYLD),
        .S00_SC_AR_recv(S00_SC_AR_8_RECV),
        .S00_SC_AR_req(S00_SC_AR_8_REQ),
        .S00_SC_AR_send(S00_SC_AR_8_SEND),
        .S00_SC_AW_info(S00_SC_AW_8_INFO),
        .S00_SC_AW_payld(S00_SC_AW_8_PAYLD),
        .S00_SC_AW_recv(S00_SC_AW_8_RECV),
        .S00_SC_AW_req(S00_SC_AW_8_REQ),
        .S00_SC_AW_send(S00_SC_AW_8_SEND),
        .S00_SC_B_info(S39_SC_B_1_INFO),
        .S00_SC_B_payld(S39_SC_B_1_PAYLD),
        .S00_SC_B_recv(S39_SC_B_1_RECV),
        .S00_SC_B_req(S39_SC_B_1_REQ),
        .S00_SC_B_send(S39_SC_B_1_SEND),
        .S00_SC_R_info(S39_SC_R_1_INFO),
        .S00_SC_R_payld(S39_SC_R_1_PAYLD),
        .S00_SC_R_recv(S39_SC_R_1_RECV),
        .S00_SC_R_req(S39_SC_R_1_REQ),
        .S00_SC_R_send(S39_SC_R_1_SEND),
        .S00_SC_W_info(S00_SC_W_8_INFO),
        .S00_SC_W_payld(S00_SC_W_8_PAYLD),
        .S00_SC_W_recv(S00_SC_W_8_RECV),
        .S00_SC_W_req(S00_SC_W_8_REQ),
        .S00_SC_W_send(S00_SC_W_8_SEND),
        .S01_SC_B_info(S40_SC_B_1_INFO),
        .S01_SC_B_payld(S40_SC_B_1_PAYLD),
        .S01_SC_B_recv(S40_SC_B_1_RECV),
        .S01_SC_B_req(S40_SC_B_1_REQ),
        .S01_SC_B_send(S40_SC_B_1_SEND),
        .S01_SC_R_info(S40_SC_R_1_INFO),
        .S01_SC_R_payld(S40_SC_R_1_PAYLD),
        .S01_SC_R_recv(S40_SC_R_1_RECV),
        .S01_SC_R_req(S40_SC_R_1_REQ),
        .S01_SC_R_send(S40_SC_R_1_SEND),
        .S02_SC_B_info(S41_SC_B_1_INFO),
        .S02_SC_B_payld(S41_SC_B_1_PAYLD),
        .S02_SC_B_recv(S41_SC_B_1_RECV),
        .S02_SC_B_req(S41_SC_B_1_REQ),
        .S02_SC_B_send(S41_SC_B_1_SEND),
        .S02_SC_R_info(S41_SC_R_1_INFO),
        .S02_SC_R_payld(S41_SC_R_1_PAYLD),
        .S02_SC_R_recv(S41_SC_R_1_RECV),
        .S02_SC_R_req(S41_SC_R_1_REQ),
        .S02_SC_R_send(S41_SC_R_1_SEND),
        .S03_SC_B_info(S42_SC_B_1_INFO),
        .S03_SC_B_payld(S42_SC_B_1_PAYLD),
        .S03_SC_B_recv(S42_SC_B_1_RECV),
        .S03_SC_B_req(S42_SC_B_1_REQ),
        .S03_SC_B_send(S42_SC_B_1_SEND),
        .S03_SC_R_info(S42_SC_R_1_INFO),
        .S03_SC_R_payld(S42_SC_R_1_PAYLD),
        .S03_SC_R_recv(S42_SC_R_1_RECV),
        .S03_SC_R_req(S42_SC_R_1_REQ),
        .S03_SC_R_send(S42_SC_R_1_SEND),
        .S04_SC_B_info(S43_SC_B_1_INFO),
        .S04_SC_B_payld(S43_SC_B_1_PAYLD),
        .S04_SC_B_recv(S43_SC_B_1_RECV),
        .S04_SC_B_req(S43_SC_B_1_REQ),
        .S04_SC_B_send(S43_SC_B_1_SEND),
        .S04_SC_R_info(S43_SC_R_1_INFO),
        .S04_SC_R_payld(S43_SC_R_1_PAYLD),
        .S04_SC_R_recv(S43_SC_R_1_RECV),
        .S04_SC_R_req(S43_SC_R_1_REQ),
        .S04_SC_R_send(S43_SC_R_1_SEND),
        .S05_SC_B_info(S44_SC_B_1_INFO),
        .S05_SC_B_payld(S44_SC_B_1_PAYLD),
        .S05_SC_B_recv(S44_SC_B_1_RECV),
        .S05_SC_B_req(S44_SC_B_1_REQ),
        .S05_SC_B_send(S44_SC_B_1_SEND),
        .S05_SC_R_info(S44_SC_R_1_INFO),
        .S05_SC_R_payld(S44_SC_R_1_PAYLD),
        .S05_SC_R_recv(S44_SC_R_1_RECV),
        .S05_SC_R_req(S44_SC_R_1_REQ),
        .S05_SC_R_send(S44_SC_R_1_SEND),
        .aclk(m_sc_aclk_1));
  out_swbd_7_imp_Y8MDKD out_swbd_7
       (.M00_SC_AR_info(out_swbd_7_M00_SC_AR_INFO),
        .M00_SC_AR_payld(out_swbd_7_M00_SC_AR_PAYLD),
        .M00_SC_AR_recv(out_swbd_7_M00_SC_AR_RECV),
        .M00_SC_AR_req(out_swbd_7_M00_SC_AR_REQ),
        .M00_SC_AR_send(out_swbd_7_M00_SC_AR_SEND),
        .M00_SC_AW_info(out_swbd_7_M00_SC_AW_INFO),
        .M00_SC_AW_payld(out_swbd_7_M00_SC_AW_PAYLD),
        .M00_SC_AW_recv(out_swbd_7_M00_SC_AW_RECV),
        .M00_SC_AW_req(out_swbd_7_M00_SC_AW_REQ),
        .M00_SC_AW_send(out_swbd_7_M00_SC_AW_SEND),
        .M00_SC_B_info(out_swbd_7_M00_SC_B_INFO),
        .M00_SC_B_payld(out_swbd_7_M00_SC_B_PAYLD),
        .M00_SC_B_recv(out_swbd_7_M00_SC_B_RECV),
        .M00_SC_B_req(out_swbd_7_M00_SC_B_REQ),
        .M00_SC_B_send(out_swbd_7_M00_SC_B_SEND),
        .M00_SC_R_info(out_swbd_7_M00_SC_R_INFO),
        .M00_SC_R_payld(out_swbd_7_M00_SC_R_PAYLD),
        .M00_SC_R_recv(out_swbd_7_M00_SC_R_RECV),
        .M00_SC_R_req(out_swbd_7_M00_SC_R_REQ),
        .M00_SC_R_send(out_swbd_7_M00_SC_R_SEND),
        .M00_SC_W_info(out_swbd_7_M00_SC_W_INFO),
        .M00_SC_W_payld(out_swbd_7_M00_SC_W_PAYLD),
        .M00_SC_W_recv(out_swbd_7_M00_SC_W_RECV),
        .M00_SC_W_req(out_swbd_7_M00_SC_W_REQ),
        .M00_SC_W_send(out_swbd_7_M00_SC_W_SEND),
        .M01_SC_AR_info(out_swbd_7_M01_SC_AR_INFO),
        .M01_SC_AR_payld(out_swbd_7_M01_SC_AR_PAYLD),
        .M01_SC_AR_recv(out_swbd_7_M01_SC_AR_RECV),
        .M01_SC_AR_req(out_swbd_7_M01_SC_AR_REQ),
        .M01_SC_AR_send(out_swbd_7_M01_SC_AR_SEND),
        .M01_SC_AW_info(out_swbd_7_M01_SC_AW_INFO),
        .M01_SC_AW_payld(out_swbd_7_M01_SC_AW_PAYLD),
        .M01_SC_AW_recv(out_swbd_7_M01_SC_AW_RECV),
        .M01_SC_AW_req(out_swbd_7_M01_SC_AW_REQ),
        .M01_SC_AW_send(out_swbd_7_M01_SC_AW_SEND),
        .M01_SC_W_info(out_swbd_7_M01_SC_W_INFO),
        .M01_SC_W_payld(out_swbd_7_M01_SC_W_PAYLD),
        .M01_SC_W_recv(out_swbd_7_M01_SC_W_RECV),
        .M01_SC_W_req(out_swbd_7_M01_SC_W_REQ),
        .M01_SC_W_send(out_swbd_7_M01_SC_W_SEND),
        .M02_SC_AR_info(out_swbd_7_M02_SC_AR_INFO),
        .M02_SC_AR_payld(out_swbd_7_M02_SC_AR_PAYLD),
        .M02_SC_AR_recv(out_swbd_7_M02_SC_AR_RECV),
        .M02_SC_AR_req(out_swbd_7_M02_SC_AR_REQ),
        .M02_SC_AR_send(out_swbd_7_M02_SC_AR_SEND),
        .M02_SC_AW_info(out_swbd_7_M02_SC_AW_INFO),
        .M02_SC_AW_payld(out_swbd_7_M02_SC_AW_PAYLD),
        .M02_SC_AW_recv(out_swbd_7_M02_SC_AW_RECV),
        .M02_SC_AW_req(out_swbd_7_M02_SC_AW_REQ),
        .M02_SC_AW_send(out_swbd_7_M02_SC_AW_SEND),
        .M02_SC_W_info(out_swbd_7_M02_SC_W_INFO),
        .M02_SC_W_payld(out_swbd_7_M02_SC_W_PAYLD),
        .M02_SC_W_recv(out_swbd_7_M02_SC_W_RECV),
        .M02_SC_W_req(out_swbd_7_M02_SC_W_REQ),
        .M02_SC_W_send(out_swbd_7_M02_SC_W_SEND),
        .M03_SC_AR_info(out_swbd_7_M03_SC_AR_INFO),
        .M03_SC_AR_payld(out_swbd_7_M03_SC_AR_PAYLD),
        .M03_SC_AR_recv(out_swbd_7_M03_SC_AR_RECV),
        .M03_SC_AR_req(out_swbd_7_M03_SC_AR_REQ),
        .M03_SC_AR_send(out_swbd_7_M03_SC_AR_SEND),
        .M03_SC_AW_info(out_swbd_7_M03_SC_AW_INFO),
        .M03_SC_AW_payld(out_swbd_7_M03_SC_AW_PAYLD),
        .M03_SC_AW_recv(out_swbd_7_M03_SC_AW_RECV),
        .M03_SC_AW_req(out_swbd_7_M03_SC_AW_REQ),
        .M03_SC_AW_send(out_swbd_7_M03_SC_AW_SEND),
        .M03_SC_W_info(out_swbd_7_M03_SC_W_INFO),
        .M03_SC_W_payld(out_swbd_7_M03_SC_W_PAYLD),
        .M03_SC_W_recv(out_swbd_7_M03_SC_W_RECV),
        .M03_SC_W_req(out_swbd_7_M03_SC_W_REQ),
        .M03_SC_W_send(out_swbd_7_M03_SC_W_SEND),
        .M04_SC_AR_info(out_swbd_7_M04_SC_AR_INFO),
        .M04_SC_AR_payld(out_swbd_7_M04_SC_AR_PAYLD),
        .M04_SC_AR_recv(out_swbd_7_M04_SC_AR_RECV),
        .M04_SC_AR_req(out_swbd_7_M04_SC_AR_REQ),
        .M04_SC_AR_send(out_swbd_7_M04_SC_AR_SEND),
        .M04_SC_AW_info(out_swbd_7_M04_SC_AW_INFO),
        .M04_SC_AW_payld(out_swbd_7_M04_SC_AW_PAYLD),
        .M04_SC_AW_recv(out_swbd_7_M04_SC_AW_RECV),
        .M04_SC_AW_req(out_swbd_7_M04_SC_AW_REQ),
        .M04_SC_AW_send(out_swbd_7_M04_SC_AW_SEND),
        .M04_SC_W_info(out_swbd_7_M04_SC_W_INFO),
        .M04_SC_W_payld(out_swbd_7_M04_SC_W_PAYLD),
        .M04_SC_W_recv(out_swbd_7_M04_SC_W_RECV),
        .M04_SC_W_req(out_swbd_7_M04_SC_W_REQ),
        .M04_SC_W_send(out_swbd_7_M04_SC_W_SEND),
        .M05_SC_AR_info(out_swbd_7_M05_SC_AR_INFO),
        .M05_SC_AR_payld(out_swbd_7_M05_SC_AR_PAYLD),
        .M05_SC_AR_recv(out_swbd_7_M05_SC_AR_RECV),
        .M05_SC_AR_req(out_swbd_7_M05_SC_AR_REQ),
        .M05_SC_AR_send(out_swbd_7_M05_SC_AR_SEND),
        .M05_SC_AW_info(out_swbd_7_M05_SC_AW_INFO),
        .M05_SC_AW_payld(out_swbd_7_M05_SC_AW_PAYLD),
        .M05_SC_AW_recv(out_swbd_7_M05_SC_AW_RECV),
        .M05_SC_AW_req(out_swbd_7_M05_SC_AW_REQ),
        .M05_SC_AW_send(out_swbd_7_M05_SC_AW_SEND),
        .M05_SC_W_info(out_swbd_7_M05_SC_W_INFO),
        .M05_SC_W_payld(out_swbd_7_M05_SC_W_PAYLD),
        .M05_SC_W_recv(out_swbd_7_M05_SC_W_RECV),
        .M05_SC_W_req(out_swbd_7_M05_SC_W_REQ),
        .M05_SC_W_send(out_swbd_7_M05_SC_W_SEND),
        .S00_SC_AR_info(S00_SC_AR_9_INFO),
        .S00_SC_AR_payld(S00_SC_AR_9_PAYLD),
        .S00_SC_AR_recv(S00_SC_AR_9_RECV),
        .S00_SC_AR_req(S00_SC_AR_9_REQ),
        .S00_SC_AR_send(S00_SC_AR_9_SEND),
        .S00_SC_AW_info(S00_SC_AW_9_INFO),
        .S00_SC_AW_payld(S00_SC_AW_9_PAYLD),
        .S00_SC_AW_recv(S00_SC_AW_9_RECV),
        .S00_SC_AW_req(S00_SC_AW_9_REQ),
        .S00_SC_AW_send(S00_SC_AW_9_SEND),
        .S00_SC_B_info(S45_SC_B_1_INFO),
        .S00_SC_B_payld(S45_SC_B_1_PAYLD),
        .S00_SC_B_recv(S45_SC_B_1_RECV),
        .S00_SC_B_req(S45_SC_B_1_REQ),
        .S00_SC_B_send(S45_SC_B_1_SEND),
        .S00_SC_R_info(S45_SC_R_1_INFO),
        .S00_SC_R_payld(S45_SC_R_1_PAYLD),
        .S00_SC_R_recv(S45_SC_R_1_RECV),
        .S00_SC_R_req(S45_SC_R_1_REQ),
        .S00_SC_R_send(S45_SC_R_1_SEND),
        .S00_SC_W_info(S00_SC_W_9_INFO),
        .S00_SC_W_payld(S00_SC_W_9_PAYLD),
        .S00_SC_W_recv(S00_SC_W_9_RECV),
        .S00_SC_W_req(S00_SC_W_9_REQ),
        .S00_SC_W_send(S00_SC_W_9_SEND),
        .S01_SC_B_info(S46_SC_B_1_INFO),
        .S01_SC_B_payld(S46_SC_B_1_PAYLD),
        .S01_SC_B_recv(S46_SC_B_1_RECV),
        .S01_SC_B_req(S46_SC_B_1_REQ),
        .S01_SC_B_send(S46_SC_B_1_SEND),
        .S01_SC_R_info(S46_SC_R_1_INFO),
        .S01_SC_R_payld(S46_SC_R_1_PAYLD),
        .S01_SC_R_recv(S46_SC_R_1_RECV),
        .S01_SC_R_req(S46_SC_R_1_REQ),
        .S01_SC_R_send(S46_SC_R_1_SEND),
        .S02_SC_B_info(S47_SC_B_1_INFO),
        .S02_SC_B_payld(S47_SC_B_1_PAYLD),
        .S02_SC_B_recv(S47_SC_B_1_RECV),
        .S02_SC_B_req(S47_SC_B_1_REQ),
        .S02_SC_B_send(S47_SC_B_1_SEND),
        .S02_SC_R_info(S47_SC_R_1_INFO),
        .S02_SC_R_payld(S47_SC_R_1_PAYLD),
        .S02_SC_R_recv(S47_SC_R_1_RECV),
        .S02_SC_R_req(S47_SC_R_1_REQ),
        .S02_SC_R_send(S47_SC_R_1_SEND),
        .S03_SC_B_info(S48_SC_B_1_INFO),
        .S03_SC_B_payld(S48_SC_B_1_PAYLD),
        .S03_SC_B_recv(S48_SC_B_1_RECV),
        .S03_SC_B_req(S48_SC_B_1_REQ),
        .S03_SC_B_send(S48_SC_B_1_SEND),
        .S03_SC_R_info(S48_SC_R_1_INFO),
        .S03_SC_R_payld(S48_SC_R_1_PAYLD),
        .S03_SC_R_recv(S48_SC_R_1_RECV),
        .S03_SC_R_req(S48_SC_R_1_REQ),
        .S03_SC_R_send(S48_SC_R_1_SEND),
        .S04_SC_B_info(S49_SC_B_1_INFO),
        .S04_SC_B_payld(S49_SC_B_1_PAYLD),
        .S04_SC_B_recv(S49_SC_B_1_RECV),
        .S04_SC_B_req(S49_SC_B_1_REQ),
        .S04_SC_B_send(S49_SC_B_1_SEND),
        .S04_SC_R_info(S49_SC_R_1_INFO),
        .S04_SC_R_payld(S49_SC_R_1_PAYLD),
        .S04_SC_R_recv(S49_SC_R_1_RECV),
        .S04_SC_R_req(S49_SC_R_1_REQ),
        .S04_SC_R_send(S49_SC_R_1_SEND),
        .S05_SC_B_info(S50_SC_B_1_INFO),
        .S05_SC_B_payld(S50_SC_B_1_PAYLD),
        .S05_SC_B_recv(S50_SC_B_1_RECV),
        .S05_SC_B_req(S50_SC_B_1_REQ),
        .S05_SC_B_send(S50_SC_B_1_SEND),
        .S05_SC_R_info(S50_SC_R_1_INFO),
        .S05_SC_R_payld(S50_SC_R_1_PAYLD),
        .S05_SC_R_recv(S50_SC_R_1_RECV),
        .S05_SC_R_req(S50_SC_R_1_REQ),
        .S05_SC_R_send(S50_SC_R_1_SEND),
        .aclk(m_sc_aclk_1));
  bd_afc3_rinsw_0 r_la_in_swbd
       (.aclk(s_sc_aclk_1),
        .aclken(1'b1),
        .m_sc_info(r_la_in_swbd_M00_SC_INFO),
        .m_sc_payld(r_la_in_swbd_M00_SC_PAYLD),
        .m_sc_recv(r_la_in_swbd_M00_SC_RECV),
        .m_sc_req(r_la_in_swbd_M00_SC_REQ),
        .m_sc_send(r_la_in_swbd_M00_SC_SEND),
        .s_sc_info({i_nodes_7_M_SC_R_INFO,i_nodes_6_M_SC_R_INFO,i_nodes_5_M_SC_R_INFO,i_nodes_4_M_SC_R_INFO,i_nodes_3_M_SC_R_INFO,i_nodes_2_M_SC_R_INFO,i_nodes_1_M_SC_R_INFO,i_nodes_0_M_SC_R_INFO}),
        .s_sc_payld({i_nodes_7_M_SC_R_PAYLD,i_nodes_6_M_SC_R_PAYLD,i_nodes_5_M_SC_R_PAYLD,i_nodes_4_M_SC_R_PAYLD,i_nodes_3_M_SC_R_PAYLD,i_nodes_2_M_SC_R_PAYLD,i_nodes_1_M_SC_R_PAYLD,i_nodes_0_M_SC_R_PAYLD}),
        .s_sc_recv({i_nodes_7_M_SC_R_RECV,i_nodes_6_M_SC_R_RECV,i_nodes_5_M_SC_R_RECV,i_nodes_4_M_SC_R_RECV,i_nodes_3_M_SC_R_RECV,i_nodes_2_M_SC_R_RECV,i_nodes_1_M_SC_R_RECV,i_nodes_0_M_SC_R_RECV}),
        .s_sc_req({i_nodes_7_M_SC_R_REQ,i_nodes_6_M_SC_R_REQ,i_nodes_5_M_SC_R_REQ,i_nodes_4_M_SC_R_REQ,i_nodes_3_M_SC_R_REQ,i_nodes_2_M_SC_R_REQ,i_nodes_1_M_SC_R_REQ,i_nodes_0_M_SC_R_REQ}),
        .s_sc_send({i_nodes_7_M_SC_R_SEND,i_nodes_6_M_SC_R_SEND,i_nodes_5_M_SC_R_SEND,i_nodes_4_M_SC_R_SEND,i_nodes_3_M_SC_R_SEND,i_nodes_2_M_SC_R_SEND,i_nodes_1_M_SC_R_SEND,i_nodes_0_M_SC_R_SEND}));
  bd_afc3_winsw_0 w_la_in_swbd
       (.aclk(s_sc_aclk_1),
        .aclken(1'b1),
        .m_sc_info({w_la_in_swbd_M07_SC_INFO,w_la_in_swbd_M06_SC_INFO,w_la_in_swbd_M05_SC_INFO,w_la_in_swbd_M04_SC_INFO,w_la_in_swbd_M03_SC_INFO,w_la_in_swbd_M02_SC_INFO,w_la_in_swbd_M01_SC_INFO,w_la_in_swbd_M00_SC_INFO}),
        .m_sc_payld({w_la_in_swbd_M07_SC_PAYLD,w_la_in_swbd_M06_SC_PAYLD,w_la_in_swbd_M05_SC_PAYLD,w_la_in_swbd_M04_SC_PAYLD,w_la_in_swbd_M03_SC_PAYLD,w_la_in_swbd_M02_SC_PAYLD,w_la_in_swbd_M01_SC_PAYLD,w_la_in_swbd_M00_SC_PAYLD}),
        .m_sc_recv({w_la_in_swbd_M07_SC_RECV,w_la_in_swbd_M06_SC_RECV,w_la_in_swbd_M05_SC_RECV,w_la_in_swbd_M04_SC_RECV,w_la_in_swbd_M03_SC_RECV,w_la_in_swbd_M02_SC_RECV,w_la_in_swbd_M01_SC_RECV,w_la_in_swbd_M00_SC_RECV}),
        .m_sc_req({w_la_in_swbd_M07_SC_REQ,w_la_in_swbd_M06_SC_REQ,w_la_in_swbd_M05_SC_REQ,w_la_in_swbd_M04_SC_REQ,w_la_in_swbd_M03_SC_REQ,w_la_in_swbd_M02_SC_REQ,w_la_in_swbd_M01_SC_REQ,w_la_in_swbd_M00_SC_REQ}),
        .m_sc_send({w_la_in_swbd_M07_SC_SEND,w_la_in_swbd_M06_SC_SEND,w_la_in_swbd_M05_SC_SEND,w_la_in_swbd_M04_SC_SEND,w_la_in_swbd_M03_SC_SEND,w_la_in_swbd_M02_SC_SEND,w_la_in_swbd_M01_SC_SEND,w_la_in_swbd_M00_SC_SEND}),
        .s_sc_info(S00_SC_W_1_INFO),
        .s_sc_payld(S00_SC_W_1_PAYLD),
        .s_sc_recv(S00_SC_W_1_RECV),
        .s_sc_req(S00_SC_W_1_REQ),
        .s_sc_send(S00_SC_W_1_SEND));
endmodule
