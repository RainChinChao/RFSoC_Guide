// ==============================================================
// Generated by Vitis HLS v2024.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="CAMC_CAMC,hls_ip_2024_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xczu48dr-ffvg1517-2-e,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=7.235000,HLS_SYN_LAT=26244,HLS_SYN_TPT=none,HLS_SYN_MEM=40,HLS_SYN_DSP=0,HLS_SYN_FF=3984,HLS_SYN_LUT=6465,HLS_VERSION=2024_1}" *)

module CAMC (
        ap_clk,
        ap_rst_n,
        input_X_TDATA,
        input_X_TVALID,
        input_X_TREADY,
        input_X_TKEEP,
        input_X_TSTRB,
        input_X_TUSER,
        input_X_TLAST,
        input_X_TID,
        input_X_TDEST,
        input_Y_TDATA,
        input_Y_TVALID,
        input_Y_TREADY,
        input_Y_TKEEP,
        input_Y_TSTRB,
        input_Y_TUSER,
        input_Y_TLAST,
        input_Y_TID,
        input_Y_TDEST,
        result_Addr_A,
        result_EN_A,
        result_WEN_A,
        result_Din_A,
        result_Dout_A,
        result_Clk_A,
        result_Rst_A,
        outStream_1_TDATA,
        outStream_1_TVALID,
        outStream_1_TREADY,
        outStream_1_TKEEP,
        outStream_1_TSTRB,
        outStream_1_TUSER,
        outStream_1_TLAST,
        outStream_1_TID,
        outStream_1_TDEST,
        outStream_2_TDATA,
        outStream_2_TVALID,
        outStream_2_TREADY,
        outStream_2_TKEEP,
        outStream_2_TSTRB,
        outStream_2_TUSER,
        outStream_2_TLAST,
        outStream_2_TID,
        outStream_2_TDEST,
        s_axi_CTRL_AWVALID,
        s_axi_CTRL_AWREADY,
        s_axi_CTRL_AWADDR,
        s_axi_CTRL_WVALID,
        s_axi_CTRL_WREADY,
        s_axi_CTRL_WDATA,
        s_axi_CTRL_WSTRB,
        s_axi_CTRL_ARVALID,
        s_axi_CTRL_ARREADY,
        s_axi_CTRL_ARADDR,
        s_axi_CTRL_RVALID,
        s_axi_CTRL_RREADY,
        s_axi_CTRL_RDATA,
        s_axi_CTRL_RRESP,
        s_axi_CTRL_BVALID,
        s_axi_CTRL_BREADY,
        s_axi_CTRL_BRESP,
        interrupt
);

parameter    ap_ST_fsm_state1 = 13'd1;
parameter    ap_ST_fsm_state2 = 13'd2;
parameter    ap_ST_fsm_state3 = 13'd4;
parameter    ap_ST_fsm_state4 = 13'd8;
parameter    ap_ST_fsm_state5 = 13'd16;
parameter    ap_ST_fsm_state6 = 13'd32;
parameter    ap_ST_fsm_state7 = 13'd64;
parameter    ap_ST_fsm_state8 = 13'd128;
parameter    ap_ST_fsm_state9 = 13'd256;
parameter    ap_ST_fsm_state10 = 13'd512;
parameter    ap_ST_fsm_state11 = 13'd1024;
parameter    ap_ST_fsm_state12 = 13'd2048;
parameter    ap_ST_fsm_state13 = 13'd4096;
parameter    C_S_AXI_CTRL_DATA_WIDTH = 32;
parameter    C_S_AXI_CTRL_ADDR_WIDTH = 5;
parameter    C_S_AXI_DATA_WIDTH = 32;

parameter C_S_AXI_CTRL_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);

input   ap_clk;
input   ap_rst_n;
input  [31:0] input_X_TDATA;
input   input_X_TVALID;
output   input_X_TREADY;
input  [3:0] input_X_TKEEP;
input  [3:0] input_X_TSTRB;
input  [1:0] input_X_TUSER;
input  [0:0] input_X_TLAST;
input  [4:0] input_X_TID;
input  [5:0] input_X_TDEST;
input  [31:0] input_Y_TDATA;
input   input_Y_TVALID;
output   input_Y_TREADY;
input  [3:0] input_Y_TKEEP;
input  [3:0] input_Y_TSTRB;
input  [1:0] input_Y_TUSER;
input  [0:0] input_Y_TLAST;
input  [4:0] input_Y_TID;
input  [5:0] input_Y_TDEST;
output  [31:0] result_Addr_A;
output   result_EN_A;
output  [7:0] result_WEN_A;
output  [63:0] result_Din_A;
input  [63:0] result_Dout_A;
output   result_Clk_A;
output   result_Rst_A;
output  [31:0] outStream_1_TDATA;
output   outStream_1_TVALID;
input   outStream_1_TREADY;
output  [3:0] outStream_1_TKEEP;
output  [3:0] outStream_1_TSTRB;
output  [1:0] outStream_1_TUSER;
output  [0:0] outStream_1_TLAST;
output  [4:0] outStream_1_TID;
output  [5:0] outStream_1_TDEST;
output  [31:0] outStream_2_TDATA;
output   outStream_2_TVALID;
input   outStream_2_TREADY;
output  [3:0] outStream_2_TKEEP;
output  [3:0] outStream_2_TSTRB;
output  [1:0] outStream_2_TUSER;
output  [0:0] outStream_2_TLAST;
output  [4:0] outStream_2_TID;
output  [5:0] outStream_2_TDEST;
input   s_axi_CTRL_AWVALID;
output   s_axi_CTRL_AWREADY;
input  [C_S_AXI_CTRL_ADDR_WIDTH - 1:0] s_axi_CTRL_AWADDR;
input   s_axi_CTRL_WVALID;
output   s_axi_CTRL_WREADY;
input  [C_S_AXI_CTRL_DATA_WIDTH - 1:0] s_axi_CTRL_WDATA;
input  [C_S_AXI_CTRL_WSTRB_WIDTH - 1:0] s_axi_CTRL_WSTRB;
input   s_axi_CTRL_ARVALID;
output   s_axi_CTRL_ARREADY;
input  [C_S_AXI_CTRL_ADDR_WIDTH - 1:0] s_axi_CTRL_ARADDR;
output   s_axi_CTRL_RVALID;
input   s_axi_CTRL_RREADY;
output  [C_S_AXI_CTRL_DATA_WIDTH - 1:0] s_axi_CTRL_RDATA;
output  [1:0] s_axi_CTRL_RRESP;
output   s_axi_CTRL_BVALID;
input   s_axi_CTRL_BREADY;
output  [1:0] s_axi_CTRL_BRESP;
output   interrupt;

reg result_Rst_A;

 reg    ap_rst_n_inv;
wire    ap_start;
reg    ap_done;
reg    ap_idle;
(* fsm_encoding = "none" *) reg   [12:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    ap_ready;
wire   [13:0] Sample_no;
reg   [13:0] weights_test_address0;
reg    weights_test_ce0;
reg    weights_test_we0;
reg   [13:0] weights_test_d0;
wire   [13:0] weights_test_q0;
reg   [13:0] clear_array_x_address0;
reg    clear_array_x_ce0;
reg    clear_array_x_we0;
wire   [6:0] clear_array_x_q0;
reg   [13:0] clear_array_y_address0;
reg    clear_array_y_ce0;
reg    clear_array_y_we0;
wire   [6:0] clear_array_y_q0;
reg   [30:0] sum_BPSK;
reg   [30:0] sum_BPSK_45m;
reg   [30:0] sum_BPSK_45p;
reg   [30:0] sum_BPSK_90p;
reg   [30:0] sum_QPSK;
reg   [30:0] sum_QPSK_45m;
reg   [30:0] sum_8PSK;
reg   [30:0] sum_8PSK_45m;
reg   [31:0] sum_16QAM;
reg   [31:0] sum_16QAM_45m;
reg   [13:0] Sample_no_read_reg_676;
reg   [3:0] max_address0;
reg    max_ce0;
wire   [31:0] max_q0;
wire    grp_CAMC_Pipeline_VITIS_LOOP_446_1_fu_362_ap_start;
wire    grp_CAMC_Pipeline_VITIS_LOOP_446_1_fu_362_ap_done;
wire    grp_CAMC_Pipeline_VITIS_LOOP_446_1_fu_362_ap_idle;
wire    grp_CAMC_Pipeline_VITIS_LOOP_446_1_fu_362_ap_ready;
wire    grp_CAMC_Pipeline_VITIS_LOOP_446_1_fu_362_outStream_1_TREADY;
wire    grp_CAMC_Pipeline_VITIS_LOOP_446_1_fu_362_outStream_2_TREADY;
wire    grp_CAMC_Pipeline_VITIS_LOOP_446_1_fu_362_input_X_TREADY;
wire    grp_CAMC_Pipeline_VITIS_LOOP_446_1_fu_362_input_Y_TREADY;
wire   [31:0] grp_CAMC_Pipeline_VITIS_LOOP_446_1_fu_362_outStream_1_TDATA;
wire    grp_CAMC_Pipeline_VITIS_LOOP_446_1_fu_362_outStream_1_TVALID;
wire   [3:0] grp_CAMC_Pipeline_VITIS_LOOP_446_1_fu_362_outStream_1_TKEEP;
wire   [3:0] grp_CAMC_Pipeline_VITIS_LOOP_446_1_fu_362_outStream_1_TSTRB;
wire   [1:0] grp_CAMC_Pipeline_VITIS_LOOP_446_1_fu_362_outStream_1_TUSER;
wire   [0:0] grp_CAMC_Pipeline_VITIS_LOOP_446_1_fu_362_outStream_1_TLAST;
wire   [4:0] grp_CAMC_Pipeline_VITIS_LOOP_446_1_fu_362_outStream_1_TID;
wire   [5:0] grp_CAMC_Pipeline_VITIS_LOOP_446_1_fu_362_outStream_1_TDEST;
wire   [31:0] grp_CAMC_Pipeline_VITIS_LOOP_446_1_fu_362_outStream_2_TDATA;
wire    grp_CAMC_Pipeline_VITIS_LOOP_446_1_fu_362_outStream_2_TVALID;
wire   [3:0] grp_CAMC_Pipeline_VITIS_LOOP_446_1_fu_362_outStream_2_TKEEP;
wire   [3:0] grp_CAMC_Pipeline_VITIS_LOOP_446_1_fu_362_outStream_2_TSTRB;
wire   [1:0] grp_CAMC_Pipeline_VITIS_LOOP_446_1_fu_362_outStream_2_TUSER;
wire   [0:0] grp_CAMC_Pipeline_VITIS_LOOP_446_1_fu_362_outStream_2_TLAST;
wire   [4:0] grp_CAMC_Pipeline_VITIS_LOOP_446_1_fu_362_outStream_2_TID;
wire   [5:0] grp_CAMC_Pipeline_VITIS_LOOP_446_1_fu_362_outStream_2_TDEST;
wire   [13:0] grp_CAMC_Pipeline_VITIS_LOOP_446_1_fu_362_weights_test_address0;
wire    grp_CAMC_Pipeline_VITIS_LOOP_446_1_fu_362_weights_test_ce0;
wire    grp_CAMC_Pipeline_VITIS_LOOP_446_1_fu_362_weights_test_we0;
wire   [13:0] grp_CAMC_Pipeline_VITIS_LOOP_446_1_fu_362_weights_test_d0;
wire   [13:0] grp_CAMC_Pipeline_VITIS_LOOP_446_1_fu_362_clear_array_x_address0;
wire    grp_CAMC_Pipeline_VITIS_LOOP_446_1_fu_362_clear_array_x_ce0;
wire    grp_CAMC_Pipeline_VITIS_LOOP_446_1_fu_362_clear_array_x_we0;
wire   [6:0] grp_CAMC_Pipeline_VITIS_LOOP_446_1_fu_362_clear_array_x_d0;
wire   [13:0] grp_CAMC_Pipeline_VITIS_LOOP_446_1_fu_362_clear_array_y_address0;
wire    grp_CAMC_Pipeline_VITIS_LOOP_446_1_fu_362_clear_array_y_ce0;
wire    grp_CAMC_Pipeline_VITIS_LOOP_446_1_fu_362_clear_array_y_we0;
wire   [6:0] grp_CAMC_Pipeline_VITIS_LOOP_446_1_fu_362_clear_array_y_d0;
wire    grp_ArrayProduct_fu_429_ap_start;
wire    grp_ArrayProduct_fu_429_ap_done;
wire    grp_ArrayProduct_fu_429_ap_idle;
wire    grp_ArrayProduct_fu_429_ap_ready;
wire   [13:0] grp_ArrayProduct_fu_429_weights_test_address0;
wire    grp_ArrayProduct_fu_429_weights_test_ce0;
wire   [30:0] grp_ArrayProduct_fu_429_sum_BPSK;
wire    grp_ArrayProduct_fu_429_sum_BPSK_ap_vld;
wire   [30:0] grp_ArrayProduct_fu_429_sum_BPSK_45m;
wire    grp_ArrayProduct_fu_429_sum_BPSK_45m_ap_vld;
wire   [30:0] grp_ArrayProduct_fu_429_sum_BPSK_45p;
wire    grp_ArrayProduct_fu_429_sum_BPSK_45p_ap_vld;
wire   [30:0] grp_ArrayProduct_fu_429_sum_BPSK_90p;
wire    grp_ArrayProduct_fu_429_sum_BPSK_90p_ap_vld;
wire   [30:0] grp_ArrayProduct_fu_429_sum_QPSK;
wire    grp_ArrayProduct_fu_429_sum_QPSK_ap_vld;
wire   [30:0] grp_ArrayProduct_fu_429_sum_QPSK_45m;
wire    grp_ArrayProduct_fu_429_sum_QPSK_45m_ap_vld;
wire   [30:0] grp_ArrayProduct_fu_429_sum_8PSK;
wire    grp_ArrayProduct_fu_429_sum_8PSK_ap_vld;
wire   [30:0] grp_ArrayProduct_fu_429_sum_8PSK_45m;
wire    grp_ArrayProduct_fu_429_sum_8PSK_45m_ap_vld;
wire   [31:0] grp_ArrayProduct_fu_429_sum_16QAM;
wire    grp_ArrayProduct_fu_429_sum_16QAM_ap_vld;
wire   [31:0] grp_ArrayProduct_fu_429_sum_16QAM_45m;
wire    grp_ArrayProduct_fu_429_sum_16QAM_45m_ap_vld;
wire    grp_CAMC_Pipeline_VITIS_LOOP_537_2_fu_515_ap_start;
wire    grp_CAMC_Pipeline_VITIS_LOOP_537_2_fu_515_ap_done;
wire    grp_CAMC_Pipeline_VITIS_LOOP_537_2_fu_515_ap_idle;
wire    grp_CAMC_Pipeline_VITIS_LOOP_537_2_fu_515_ap_ready;
wire   [3:0] grp_CAMC_Pipeline_VITIS_LOOP_537_2_fu_515_max_address0;
wire    grp_CAMC_Pipeline_VITIS_LOOP_537_2_fu_515_max_ce0;
wire   [63:0] grp_CAMC_Pipeline_VITIS_LOOP_537_2_fu_515_result_T_10_out;
wire    grp_CAMC_Pipeline_VITIS_LOOP_537_2_fu_515_result_T_10_out_ap_vld;
wire    grp_CAMC_Pipeline_VITIS_LOOP_623_3_fu_522_ap_start;
wire    grp_CAMC_Pipeline_VITIS_LOOP_623_3_fu_522_ap_done;
wire    grp_CAMC_Pipeline_VITIS_LOOP_623_3_fu_522_ap_idle;
wire    grp_CAMC_Pipeline_VITIS_LOOP_623_3_fu_522_ap_ready;
wire   [13:0] grp_CAMC_Pipeline_VITIS_LOOP_623_3_fu_522_clear_array_x_address0;
wire    grp_CAMC_Pipeline_VITIS_LOOP_623_3_fu_522_clear_array_x_ce0;
wire   [13:0] grp_CAMC_Pipeline_VITIS_LOOP_623_3_fu_522_clear_array_y_address0;
wire    grp_CAMC_Pipeline_VITIS_LOOP_623_3_fu_522_clear_array_y_ce0;
wire   [13:0] grp_CAMC_Pipeline_VITIS_LOOP_623_3_fu_522_weights_test_address0;
wire    grp_CAMC_Pipeline_VITIS_LOOP_623_3_fu_522_weights_test_ce0;
wire    grp_CAMC_Pipeline_VITIS_LOOP_623_3_fu_522_weights_test_we0;
wire   [13:0] grp_CAMC_Pipeline_VITIS_LOOP_623_3_fu_522_weights_test_d0;
reg    grp_CAMC_Pipeline_VITIS_LOOP_446_1_fu_362_ap_start_reg;
wire    ap_CS_fsm_state2;
wire    ap_CS_fsm_state3;
reg    grp_ArrayProduct_fu_429_ap_start_reg;
wire    ap_CS_fsm_state4;
wire    ap_CS_fsm_state5;
reg    grp_CAMC_Pipeline_VITIS_LOOP_537_2_fu_515_ap_start_reg;
wire    ap_CS_fsm_state11;
wire    ap_CS_fsm_state12;
reg    grp_CAMC_Pipeline_VITIS_LOOP_623_3_fu_522_ap_start_reg;
wire    ap_CS_fsm_state6;
wire    ap_CS_fsm_state7;
wire    ap_CS_fsm_state8;
wire    ap_CS_fsm_state9;
wire    ap_CS_fsm_state10;
wire    ap_CS_fsm_state13;
reg    max_we1_local;
reg   [31:0] max_d1_local;
wire   [31:0] zext_ln522_fu_537_p1;
reg    max_ce1_local;
reg   [3:0] max_address1_local;
reg    max_we0_local;
reg   [31:0] max_d0_local;
wire   [31:0] zext_ln523_fu_546_p1;
reg    max_ce0_local;
reg   [3:0] max_address0_local;
wire   [31:0] zext_ln524_fu_555_p1;
wire   [31:0] zext_ln525_fu_564_p1;
wire   [31:0] zext_ln527_fu_573_p1;
wire   [31:0] zext_ln528_fu_582_p1;
wire   [31:0] zext_ln529_fu_610_p1;
wire   [31:0] zext_ln530_fu_619_p1;
reg   [7:0] result_WEN_A_local;
reg   [63:0] result_Din_A_local;
wire   [63:0] zext_ln520_fu_601_p1;
reg    result_EN_A_local;
reg   [31:0] result_Addr_A_orig;
wire   [63:0] zext_ln520_1_fu_638_p1;
wire   [63:0] zext_ln520_2_fu_667_p1;
wire    regslice_both_outStream_1_V_data_V_U_apdone_blk;
wire    regslice_both_outStream_2_V_data_V_U_apdone_blk;
reg    ap_block_state13;
wire   [0:0] icmp_ln547_fu_587_p2;
wire   [30:0] result_T_5_fu_593_p3;
wire   [0:0] icmp_ln558_fu_624_p2;
wire   [30:0] result_T_10_fu_630_p3;
wire   [0:0] icmp_ln569_fu_653_p2;
wire   [31:0] result_T_13_fu_659_p3;
reg   [12:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
reg    ap_ST_fsm_state3_blk;
wire    ap_ST_fsm_state4_blk;
reg    ap_ST_fsm_state5_blk;
wire    ap_ST_fsm_state6_blk;
wire    ap_ST_fsm_state7_blk;
wire    ap_ST_fsm_state8_blk;
wire    ap_ST_fsm_state9_blk;
wire    ap_ST_fsm_state10_blk;
wire    ap_ST_fsm_state11_blk;
reg    ap_block_state12_on_subcall_done;
reg    ap_ST_fsm_state12_blk;
reg    ap_ST_fsm_state13_blk;
wire    regslice_both_input_X_V_data_V_U_apdone_blk;
wire   [31:0] input_X_TDATA_int_regslice;
wire    input_X_TVALID_int_regslice;
reg    input_X_TREADY_int_regslice;
wire    regslice_both_input_X_V_data_V_U_ack_in;
wire    regslice_both_input_X_V_keep_V_U_apdone_blk;
wire   [3:0] input_X_TKEEP_int_regslice;
wire    regslice_both_input_X_V_keep_V_U_vld_out;
wire    regslice_both_input_X_V_keep_V_U_ack_in;
wire    regslice_both_input_X_V_strb_V_U_apdone_blk;
wire   [3:0] input_X_TSTRB_int_regslice;
wire    regslice_both_input_X_V_strb_V_U_vld_out;
wire    regslice_both_input_X_V_strb_V_U_ack_in;
wire    regslice_both_input_X_V_user_V_U_apdone_blk;
wire   [1:0] input_X_TUSER_int_regslice;
wire    regslice_both_input_X_V_user_V_U_vld_out;
wire    regslice_both_input_X_V_user_V_U_ack_in;
wire    regslice_both_input_X_V_last_V_U_apdone_blk;
wire   [0:0] input_X_TLAST_int_regslice;
wire    regslice_both_input_X_V_last_V_U_vld_out;
wire    regslice_both_input_X_V_last_V_U_ack_in;
wire    regslice_both_input_X_V_id_V_U_apdone_blk;
wire   [4:0] input_X_TID_int_regslice;
wire    regslice_both_input_X_V_id_V_U_vld_out;
wire    regslice_both_input_X_V_id_V_U_ack_in;
wire    regslice_both_input_X_V_dest_V_U_apdone_blk;
wire   [5:0] input_X_TDEST_int_regslice;
wire    regslice_both_input_X_V_dest_V_U_vld_out;
wire    regslice_both_input_X_V_dest_V_U_ack_in;
wire    regslice_both_input_Y_V_data_V_U_apdone_blk;
wire   [31:0] input_Y_TDATA_int_regslice;
wire    input_Y_TVALID_int_regslice;
reg    input_Y_TREADY_int_regslice;
wire    regslice_both_input_Y_V_data_V_U_ack_in;
wire    regslice_both_input_Y_V_keep_V_U_apdone_blk;
wire   [3:0] input_Y_TKEEP_int_regslice;
wire    regslice_both_input_Y_V_keep_V_U_vld_out;
wire    regslice_both_input_Y_V_keep_V_U_ack_in;
wire    regslice_both_input_Y_V_strb_V_U_apdone_blk;
wire   [3:0] input_Y_TSTRB_int_regslice;
wire    regslice_both_input_Y_V_strb_V_U_vld_out;
wire    regslice_both_input_Y_V_strb_V_U_ack_in;
wire    regslice_both_input_Y_V_user_V_U_apdone_blk;
wire   [1:0] input_Y_TUSER_int_regslice;
wire    regslice_both_input_Y_V_user_V_U_vld_out;
wire    regslice_both_input_Y_V_user_V_U_ack_in;
wire    regslice_both_input_Y_V_last_V_U_apdone_blk;
wire   [0:0] input_Y_TLAST_int_regslice;
wire    regslice_both_input_Y_V_last_V_U_vld_out;
wire    regslice_both_input_Y_V_last_V_U_ack_in;
wire    regslice_both_input_Y_V_id_V_U_apdone_blk;
wire   [4:0] input_Y_TID_int_regslice;
wire    regslice_both_input_Y_V_id_V_U_vld_out;
wire    regslice_both_input_Y_V_id_V_U_ack_in;
wire    regslice_both_input_Y_V_dest_V_U_apdone_blk;
wire   [5:0] input_Y_TDEST_int_regslice;
wire    regslice_both_input_Y_V_dest_V_U_vld_out;
wire    regslice_both_input_Y_V_dest_V_U_ack_in;
wire    outStream_1_TVALID_int_regslice;
wire    outStream_1_TREADY_int_regslice;
wire    regslice_both_outStream_1_V_data_V_U_vld_out;
wire    regslice_both_outStream_1_V_keep_V_U_apdone_blk;
wire    regslice_both_outStream_1_V_keep_V_U_ack_in_dummy;
wire    regslice_both_outStream_1_V_keep_V_U_vld_out;
wire    regslice_both_outStream_1_V_strb_V_U_apdone_blk;
wire    regslice_both_outStream_1_V_strb_V_U_ack_in_dummy;
wire    regslice_both_outStream_1_V_strb_V_U_vld_out;
wire    regslice_both_outStream_1_V_user_V_U_apdone_blk;
wire    regslice_both_outStream_1_V_user_V_U_ack_in_dummy;
wire    regslice_both_outStream_1_V_user_V_U_vld_out;
wire    regslice_both_outStream_1_V_last_V_U_apdone_blk;
wire    regslice_both_outStream_1_V_last_V_U_ack_in_dummy;
wire    regslice_both_outStream_1_V_last_V_U_vld_out;
wire    regslice_both_outStream_1_V_id_V_U_apdone_blk;
wire    regslice_both_outStream_1_V_id_V_U_ack_in_dummy;
wire    regslice_both_outStream_1_V_id_V_U_vld_out;
wire    regslice_both_outStream_1_V_dest_V_U_apdone_blk;
wire    regslice_both_outStream_1_V_dest_V_U_ack_in_dummy;
wire    regslice_both_outStream_1_V_dest_V_U_vld_out;
wire    outStream_2_TVALID_int_regslice;
wire    outStream_2_TREADY_int_regslice;
wire    regslice_both_outStream_2_V_data_V_U_vld_out;
wire    regslice_both_outStream_2_V_keep_V_U_apdone_blk;
wire    regslice_both_outStream_2_V_keep_V_U_ack_in_dummy;
wire    regslice_both_outStream_2_V_keep_V_U_vld_out;
wire    regslice_both_outStream_2_V_strb_V_U_apdone_blk;
wire    regslice_both_outStream_2_V_strb_V_U_ack_in_dummy;
wire    regslice_both_outStream_2_V_strb_V_U_vld_out;
wire    regslice_both_outStream_2_V_user_V_U_apdone_blk;
wire    regslice_both_outStream_2_V_user_V_U_ack_in_dummy;
wire    regslice_both_outStream_2_V_user_V_U_vld_out;
wire    regslice_both_outStream_2_V_last_V_U_apdone_blk;
wire    regslice_both_outStream_2_V_last_V_U_ack_in_dummy;
wire    regslice_both_outStream_2_V_last_V_U_vld_out;
wire    regslice_both_outStream_2_V_id_V_U_apdone_blk;
wire    regslice_both_outStream_2_V_id_V_U_ack_in_dummy;
wire    regslice_both_outStream_2_V_id_V_U_vld_out;
wire    regslice_both_outStream_2_V_dest_V_U_apdone_blk;
wire    regslice_both_outStream_2_V_dest_V_U_ack_in_dummy;
wire    regslice_both_outStream_2_V_dest_V_U_vld_out;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 13'd1;
#0 sum_BPSK = 31'd0;
#0 sum_BPSK_45m = 31'd0;
#0 sum_BPSK_45p = 31'd0;
#0 sum_BPSK_90p = 31'd0;
#0 sum_QPSK = 31'd0;
#0 sum_QPSK_45m = 31'd0;
#0 sum_8PSK = 31'd0;
#0 sum_8PSK_45m = 31'd0;
#0 sum_16QAM = 32'd0;
#0 sum_16QAM_45m = 32'd0;
#0 grp_CAMC_Pipeline_VITIS_LOOP_446_1_fu_362_ap_start_reg = 1'b0;
#0 grp_ArrayProduct_fu_429_ap_start_reg = 1'b0;
#0 grp_CAMC_Pipeline_VITIS_LOOP_537_2_fu_515_ap_start_reg = 1'b0;
#0 grp_CAMC_Pipeline_VITIS_LOOP_623_3_fu_522_ap_start_reg = 1'b0;
end

CAMC_weights_test_RAM_AUTO_1R1W #(
    .DataWidth( 14 ),
    .AddressRange( 10000 ),
    .AddressWidth( 14 ))
weights_test_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(weights_test_address0),
    .ce0(weights_test_ce0),
    .we0(weights_test_we0),
    .d0(weights_test_d0),
    .q0(weights_test_q0)
);

CAMC_clear_array_x_RAM_AUTO_1R1W #(
    .DataWidth( 7 ),
    .AddressRange( 10000 ),
    .AddressWidth( 14 ))
clear_array_x_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(clear_array_x_address0),
    .ce0(clear_array_x_ce0),
    .we0(clear_array_x_we0),
    .d0(grp_CAMC_Pipeline_VITIS_LOOP_446_1_fu_362_clear_array_x_d0),
    .q0(clear_array_x_q0)
);

CAMC_clear_array_x_RAM_AUTO_1R1W #(
    .DataWidth( 7 ),
    .AddressRange( 10000 ),
    .AddressWidth( 14 ))
clear_array_y_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(clear_array_y_address0),
    .ce0(clear_array_y_ce0),
    .we0(clear_array_y_we0),
    .d0(grp_CAMC_Pipeline_VITIS_LOOP_446_1_fu_362_clear_array_y_d0),
    .q0(clear_array_y_q0)
);

CAMC_max_RAM_AUTO_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
max_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(max_address0),
    .ce0(max_ce0),
    .we0(max_we0_local),
    .d0(max_d0_local),
    .q0(max_q0),
    .address1(max_address1_local),
    .ce1(max_ce1_local),
    .we1(max_we1_local),
    .d1(max_d1_local)
);

CAMC_CAMC_Pipeline_VITIS_LOOP_446_1 grp_CAMC_Pipeline_VITIS_LOOP_446_1_fu_362(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_CAMC_Pipeline_VITIS_LOOP_446_1_fu_362_ap_start),
    .ap_done(grp_CAMC_Pipeline_VITIS_LOOP_446_1_fu_362_ap_done),
    .ap_idle(grp_CAMC_Pipeline_VITIS_LOOP_446_1_fu_362_ap_idle),
    .ap_ready(grp_CAMC_Pipeline_VITIS_LOOP_446_1_fu_362_ap_ready),
    .input_X_TVALID(input_X_TVALID_int_regslice),
    .input_Y_TVALID(input_Y_TVALID_int_regslice),
    .outStream_1_TREADY(grp_CAMC_Pipeline_VITIS_LOOP_446_1_fu_362_outStream_1_TREADY),
    .outStream_2_TREADY(grp_CAMC_Pipeline_VITIS_LOOP_446_1_fu_362_outStream_2_TREADY),
    .Sample_no(Sample_no_read_reg_676),
    .input_X_TDATA(input_X_TDATA_int_regslice),
    .input_X_TREADY(grp_CAMC_Pipeline_VITIS_LOOP_446_1_fu_362_input_X_TREADY),
    .input_X_TKEEP(input_X_TKEEP_int_regslice),
    .input_X_TSTRB(input_X_TSTRB_int_regslice),
    .input_X_TUSER(input_X_TUSER_int_regslice),
    .input_X_TLAST(input_X_TLAST_int_regslice),
    .input_X_TID(input_X_TID_int_regslice),
    .input_X_TDEST(input_X_TDEST_int_regslice),
    .input_Y_TDATA(input_Y_TDATA_int_regslice),
    .input_Y_TREADY(grp_CAMC_Pipeline_VITIS_LOOP_446_1_fu_362_input_Y_TREADY),
    .input_Y_TKEEP(input_Y_TKEEP_int_regslice),
    .input_Y_TSTRB(input_Y_TSTRB_int_regslice),
    .input_Y_TUSER(input_Y_TUSER_int_regslice),
    .input_Y_TLAST(input_Y_TLAST_int_regslice),
    .input_Y_TID(input_Y_TID_int_regslice),
    .input_Y_TDEST(input_Y_TDEST_int_regslice),
    .outStream_1_TDATA(grp_CAMC_Pipeline_VITIS_LOOP_446_1_fu_362_outStream_1_TDATA),
    .outStream_1_TVALID(grp_CAMC_Pipeline_VITIS_LOOP_446_1_fu_362_outStream_1_TVALID),
    .outStream_1_TKEEP(grp_CAMC_Pipeline_VITIS_LOOP_446_1_fu_362_outStream_1_TKEEP),
    .outStream_1_TSTRB(grp_CAMC_Pipeline_VITIS_LOOP_446_1_fu_362_outStream_1_TSTRB),
    .outStream_1_TUSER(grp_CAMC_Pipeline_VITIS_LOOP_446_1_fu_362_outStream_1_TUSER),
    .outStream_1_TLAST(grp_CAMC_Pipeline_VITIS_LOOP_446_1_fu_362_outStream_1_TLAST),
    .outStream_1_TID(grp_CAMC_Pipeline_VITIS_LOOP_446_1_fu_362_outStream_1_TID),
    .outStream_1_TDEST(grp_CAMC_Pipeline_VITIS_LOOP_446_1_fu_362_outStream_1_TDEST),
    .outStream_2_TDATA(grp_CAMC_Pipeline_VITIS_LOOP_446_1_fu_362_outStream_2_TDATA),
    .outStream_2_TVALID(grp_CAMC_Pipeline_VITIS_LOOP_446_1_fu_362_outStream_2_TVALID),
    .outStream_2_TKEEP(grp_CAMC_Pipeline_VITIS_LOOP_446_1_fu_362_outStream_2_TKEEP),
    .outStream_2_TSTRB(grp_CAMC_Pipeline_VITIS_LOOP_446_1_fu_362_outStream_2_TSTRB),
    .outStream_2_TUSER(grp_CAMC_Pipeline_VITIS_LOOP_446_1_fu_362_outStream_2_TUSER),
    .outStream_2_TLAST(grp_CAMC_Pipeline_VITIS_LOOP_446_1_fu_362_outStream_2_TLAST),
    .outStream_2_TID(grp_CAMC_Pipeline_VITIS_LOOP_446_1_fu_362_outStream_2_TID),
    .outStream_2_TDEST(grp_CAMC_Pipeline_VITIS_LOOP_446_1_fu_362_outStream_2_TDEST),
    .weights_test_address0(grp_CAMC_Pipeline_VITIS_LOOP_446_1_fu_362_weights_test_address0),
    .weights_test_ce0(grp_CAMC_Pipeline_VITIS_LOOP_446_1_fu_362_weights_test_ce0),
    .weights_test_we0(grp_CAMC_Pipeline_VITIS_LOOP_446_1_fu_362_weights_test_we0),
    .weights_test_d0(grp_CAMC_Pipeline_VITIS_LOOP_446_1_fu_362_weights_test_d0),
    .weights_test_q0(weights_test_q0),
    .clear_array_x_address0(grp_CAMC_Pipeline_VITIS_LOOP_446_1_fu_362_clear_array_x_address0),
    .clear_array_x_ce0(grp_CAMC_Pipeline_VITIS_LOOP_446_1_fu_362_clear_array_x_ce0),
    .clear_array_x_we0(grp_CAMC_Pipeline_VITIS_LOOP_446_1_fu_362_clear_array_x_we0),
    .clear_array_x_d0(grp_CAMC_Pipeline_VITIS_LOOP_446_1_fu_362_clear_array_x_d0),
    .clear_array_y_address0(grp_CAMC_Pipeline_VITIS_LOOP_446_1_fu_362_clear_array_y_address0),
    .clear_array_y_ce0(grp_CAMC_Pipeline_VITIS_LOOP_446_1_fu_362_clear_array_y_ce0),
    .clear_array_y_we0(grp_CAMC_Pipeline_VITIS_LOOP_446_1_fu_362_clear_array_y_we0),
    .clear_array_y_d0(grp_CAMC_Pipeline_VITIS_LOOP_446_1_fu_362_clear_array_y_d0)
);

CAMC_ArrayProduct grp_ArrayProduct_fu_429(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_ArrayProduct_fu_429_ap_start),
    .ap_done(grp_ArrayProduct_fu_429_ap_done),
    .ap_idle(grp_ArrayProduct_fu_429_ap_idle),
    .ap_ready(grp_ArrayProduct_fu_429_ap_ready),
    .weights_test_address0(grp_ArrayProduct_fu_429_weights_test_address0),
    .weights_test_ce0(grp_ArrayProduct_fu_429_weights_test_ce0),
    .weights_test_q0(weights_test_q0),
    .sum_BPSK(grp_ArrayProduct_fu_429_sum_BPSK),
    .sum_BPSK_ap_vld(grp_ArrayProduct_fu_429_sum_BPSK_ap_vld),
    .sum_BPSK_45m(grp_ArrayProduct_fu_429_sum_BPSK_45m),
    .sum_BPSK_45m_ap_vld(grp_ArrayProduct_fu_429_sum_BPSK_45m_ap_vld),
    .sum_BPSK_45p(grp_ArrayProduct_fu_429_sum_BPSK_45p),
    .sum_BPSK_45p_ap_vld(grp_ArrayProduct_fu_429_sum_BPSK_45p_ap_vld),
    .sum_BPSK_90p(grp_ArrayProduct_fu_429_sum_BPSK_90p),
    .sum_BPSK_90p_ap_vld(grp_ArrayProduct_fu_429_sum_BPSK_90p_ap_vld),
    .sum_QPSK(grp_ArrayProduct_fu_429_sum_QPSK),
    .sum_QPSK_ap_vld(grp_ArrayProduct_fu_429_sum_QPSK_ap_vld),
    .sum_QPSK_45m(grp_ArrayProduct_fu_429_sum_QPSK_45m),
    .sum_QPSK_45m_ap_vld(grp_ArrayProduct_fu_429_sum_QPSK_45m_ap_vld),
    .sum_8PSK(grp_ArrayProduct_fu_429_sum_8PSK),
    .sum_8PSK_ap_vld(grp_ArrayProduct_fu_429_sum_8PSK_ap_vld),
    .sum_8PSK_45m(grp_ArrayProduct_fu_429_sum_8PSK_45m),
    .sum_8PSK_45m_ap_vld(grp_ArrayProduct_fu_429_sum_8PSK_45m_ap_vld),
    .sum_16QAM(grp_ArrayProduct_fu_429_sum_16QAM),
    .sum_16QAM_ap_vld(grp_ArrayProduct_fu_429_sum_16QAM_ap_vld),
    .sum_16QAM_45m(grp_ArrayProduct_fu_429_sum_16QAM_45m),
    .sum_16QAM_45m_ap_vld(grp_ArrayProduct_fu_429_sum_16QAM_45m_ap_vld)
);

CAMC_CAMC_Pipeline_VITIS_LOOP_537_2 grp_CAMC_Pipeline_VITIS_LOOP_537_2_fu_515(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_CAMC_Pipeline_VITIS_LOOP_537_2_fu_515_ap_start),
    .ap_done(grp_CAMC_Pipeline_VITIS_LOOP_537_2_fu_515_ap_done),
    .ap_idle(grp_CAMC_Pipeline_VITIS_LOOP_537_2_fu_515_ap_idle),
    .ap_ready(grp_CAMC_Pipeline_VITIS_LOOP_537_2_fu_515_ap_ready),
    .zext_ln522(sum_BPSK),
    .max_address0(grp_CAMC_Pipeline_VITIS_LOOP_537_2_fu_515_max_address0),
    .max_ce0(grp_CAMC_Pipeline_VITIS_LOOP_537_2_fu_515_max_ce0),
    .max_q0(max_q0),
    .result_T_10_out(grp_CAMC_Pipeline_VITIS_LOOP_537_2_fu_515_result_T_10_out),
    .result_T_10_out_ap_vld(grp_CAMC_Pipeline_VITIS_LOOP_537_2_fu_515_result_T_10_out_ap_vld)
);

CAMC_CAMC_Pipeline_VITIS_LOOP_623_3 grp_CAMC_Pipeline_VITIS_LOOP_623_3_fu_522(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_CAMC_Pipeline_VITIS_LOOP_623_3_fu_522_ap_start),
    .ap_done(grp_CAMC_Pipeline_VITIS_LOOP_623_3_fu_522_ap_done),
    .ap_idle(grp_CAMC_Pipeline_VITIS_LOOP_623_3_fu_522_ap_idle),
    .ap_ready(grp_CAMC_Pipeline_VITIS_LOOP_623_3_fu_522_ap_ready),
    .Sample_no(Sample_no_read_reg_676),
    .clear_array_x_address0(grp_CAMC_Pipeline_VITIS_LOOP_623_3_fu_522_clear_array_x_address0),
    .clear_array_x_ce0(grp_CAMC_Pipeline_VITIS_LOOP_623_3_fu_522_clear_array_x_ce0),
    .clear_array_x_q0(clear_array_x_q0),
    .clear_array_y_address0(grp_CAMC_Pipeline_VITIS_LOOP_623_3_fu_522_clear_array_y_address0),
    .clear_array_y_ce0(grp_CAMC_Pipeline_VITIS_LOOP_623_3_fu_522_clear_array_y_ce0),
    .clear_array_y_q0(clear_array_y_q0),
    .weights_test_address0(grp_CAMC_Pipeline_VITIS_LOOP_623_3_fu_522_weights_test_address0),
    .weights_test_ce0(grp_CAMC_Pipeline_VITIS_LOOP_623_3_fu_522_weights_test_ce0),
    .weights_test_we0(grp_CAMC_Pipeline_VITIS_LOOP_623_3_fu_522_weights_test_we0),
    .weights_test_d0(grp_CAMC_Pipeline_VITIS_LOOP_623_3_fu_522_weights_test_d0)
);

CAMC_CTRL_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_CTRL_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_CTRL_DATA_WIDTH ))
CTRL_s_axi_U(
    .AWVALID(s_axi_CTRL_AWVALID),
    .AWREADY(s_axi_CTRL_AWREADY),
    .AWADDR(s_axi_CTRL_AWADDR),
    .WVALID(s_axi_CTRL_WVALID),
    .WREADY(s_axi_CTRL_WREADY),
    .WDATA(s_axi_CTRL_WDATA),
    .WSTRB(s_axi_CTRL_WSTRB),
    .ARVALID(s_axi_CTRL_ARVALID),
    .ARREADY(s_axi_CTRL_ARREADY),
    .ARADDR(s_axi_CTRL_ARADDR),
    .RVALID(s_axi_CTRL_RVALID),
    .RREADY(s_axi_CTRL_RREADY),
    .RDATA(s_axi_CTRL_RDATA),
    .RRESP(s_axi_CTRL_RRESP),
    .BVALID(s_axi_CTRL_BVALID),
    .BREADY(s_axi_CTRL_BREADY),
    .BRESP(s_axi_CTRL_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .Sample_no(Sample_no),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle)
);

CAMC_regslice_both #(
    .DataWidth( 32 ))
regslice_both_input_X_V_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(input_X_TDATA),
    .vld_in(input_X_TVALID),
    .ack_in(regslice_both_input_X_V_data_V_U_ack_in),
    .data_out(input_X_TDATA_int_regslice),
    .vld_out(input_X_TVALID_int_regslice),
    .ack_out(input_X_TREADY_int_regslice),
    .apdone_blk(regslice_both_input_X_V_data_V_U_apdone_blk)
);

CAMC_regslice_both #(
    .DataWidth( 4 ))
regslice_both_input_X_V_keep_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(input_X_TKEEP),
    .vld_in(input_X_TVALID),
    .ack_in(regslice_both_input_X_V_keep_V_U_ack_in),
    .data_out(input_X_TKEEP_int_regslice),
    .vld_out(regslice_both_input_X_V_keep_V_U_vld_out),
    .ack_out(input_X_TREADY_int_regslice),
    .apdone_blk(regslice_both_input_X_V_keep_V_U_apdone_blk)
);

CAMC_regslice_both #(
    .DataWidth( 4 ))
regslice_both_input_X_V_strb_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(input_X_TSTRB),
    .vld_in(input_X_TVALID),
    .ack_in(regslice_both_input_X_V_strb_V_U_ack_in),
    .data_out(input_X_TSTRB_int_regslice),
    .vld_out(regslice_both_input_X_V_strb_V_U_vld_out),
    .ack_out(input_X_TREADY_int_regslice),
    .apdone_blk(regslice_both_input_X_V_strb_V_U_apdone_blk)
);

CAMC_regslice_both #(
    .DataWidth( 2 ))
regslice_both_input_X_V_user_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(input_X_TUSER),
    .vld_in(input_X_TVALID),
    .ack_in(regslice_both_input_X_V_user_V_U_ack_in),
    .data_out(input_X_TUSER_int_regslice),
    .vld_out(regslice_both_input_X_V_user_V_U_vld_out),
    .ack_out(input_X_TREADY_int_regslice),
    .apdone_blk(regslice_both_input_X_V_user_V_U_apdone_blk)
);

CAMC_regslice_both #(
    .DataWidth( 1 ))
regslice_both_input_X_V_last_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(input_X_TLAST),
    .vld_in(input_X_TVALID),
    .ack_in(regslice_both_input_X_V_last_V_U_ack_in),
    .data_out(input_X_TLAST_int_regslice),
    .vld_out(regslice_both_input_X_V_last_V_U_vld_out),
    .ack_out(input_X_TREADY_int_regslice),
    .apdone_blk(regslice_both_input_X_V_last_V_U_apdone_blk)
);

CAMC_regslice_both #(
    .DataWidth( 5 ))
regslice_both_input_X_V_id_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(input_X_TID),
    .vld_in(input_X_TVALID),
    .ack_in(regslice_both_input_X_V_id_V_U_ack_in),
    .data_out(input_X_TID_int_regslice),
    .vld_out(regslice_both_input_X_V_id_V_U_vld_out),
    .ack_out(input_X_TREADY_int_regslice),
    .apdone_blk(regslice_both_input_X_V_id_V_U_apdone_blk)
);

CAMC_regslice_both #(
    .DataWidth( 6 ))
regslice_both_input_X_V_dest_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(input_X_TDEST),
    .vld_in(input_X_TVALID),
    .ack_in(regslice_both_input_X_V_dest_V_U_ack_in),
    .data_out(input_X_TDEST_int_regslice),
    .vld_out(regslice_both_input_X_V_dest_V_U_vld_out),
    .ack_out(input_X_TREADY_int_regslice),
    .apdone_blk(regslice_both_input_X_V_dest_V_U_apdone_blk)
);

CAMC_regslice_both #(
    .DataWidth( 32 ))
regslice_both_input_Y_V_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(input_Y_TDATA),
    .vld_in(input_Y_TVALID),
    .ack_in(regslice_both_input_Y_V_data_V_U_ack_in),
    .data_out(input_Y_TDATA_int_regslice),
    .vld_out(input_Y_TVALID_int_regslice),
    .ack_out(input_Y_TREADY_int_regslice),
    .apdone_blk(regslice_both_input_Y_V_data_V_U_apdone_blk)
);

CAMC_regslice_both #(
    .DataWidth( 4 ))
regslice_both_input_Y_V_keep_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(input_Y_TKEEP),
    .vld_in(input_Y_TVALID),
    .ack_in(regslice_both_input_Y_V_keep_V_U_ack_in),
    .data_out(input_Y_TKEEP_int_regslice),
    .vld_out(regslice_both_input_Y_V_keep_V_U_vld_out),
    .ack_out(input_Y_TREADY_int_regslice),
    .apdone_blk(regslice_both_input_Y_V_keep_V_U_apdone_blk)
);

CAMC_regslice_both #(
    .DataWidth( 4 ))
regslice_both_input_Y_V_strb_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(input_Y_TSTRB),
    .vld_in(input_Y_TVALID),
    .ack_in(regslice_both_input_Y_V_strb_V_U_ack_in),
    .data_out(input_Y_TSTRB_int_regslice),
    .vld_out(regslice_both_input_Y_V_strb_V_U_vld_out),
    .ack_out(input_Y_TREADY_int_regslice),
    .apdone_blk(regslice_both_input_Y_V_strb_V_U_apdone_blk)
);

CAMC_regslice_both #(
    .DataWidth( 2 ))
regslice_both_input_Y_V_user_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(input_Y_TUSER),
    .vld_in(input_Y_TVALID),
    .ack_in(regslice_both_input_Y_V_user_V_U_ack_in),
    .data_out(input_Y_TUSER_int_regslice),
    .vld_out(regslice_both_input_Y_V_user_V_U_vld_out),
    .ack_out(input_Y_TREADY_int_regslice),
    .apdone_blk(regslice_both_input_Y_V_user_V_U_apdone_blk)
);

CAMC_regslice_both #(
    .DataWidth( 1 ))
regslice_both_input_Y_V_last_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(input_Y_TLAST),
    .vld_in(input_Y_TVALID),
    .ack_in(regslice_both_input_Y_V_last_V_U_ack_in),
    .data_out(input_Y_TLAST_int_regslice),
    .vld_out(regslice_both_input_Y_V_last_V_U_vld_out),
    .ack_out(input_Y_TREADY_int_regslice),
    .apdone_blk(regslice_both_input_Y_V_last_V_U_apdone_blk)
);

CAMC_regslice_both #(
    .DataWidth( 5 ))
regslice_both_input_Y_V_id_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(input_Y_TID),
    .vld_in(input_Y_TVALID),
    .ack_in(regslice_both_input_Y_V_id_V_U_ack_in),
    .data_out(input_Y_TID_int_regslice),
    .vld_out(regslice_both_input_Y_V_id_V_U_vld_out),
    .ack_out(input_Y_TREADY_int_regslice),
    .apdone_blk(regslice_both_input_Y_V_id_V_U_apdone_blk)
);

CAMC_regslice_both #(
    .DataWidth( 6 ))
regslice_both_input_Y_V_dest_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(input_Y_TDEST),
    .vld_in(input_Y_TVALID),
    .ack_in(regslice_both_input_Y_V_dest_V_U_ack_in),
    .data_out(input_Y_TDEST_int_regslice),
    .vld_out(regslice_both_input_Y_V_dest_V_U_vld_out),
    .ack_out(input_Y_TREADY_int_regslice),
    .apdone_blk(regslice_both_input_Y_V_dest_V_U_apdone_blk)
);

CAMC_regslice_both #(
    .DataWidth( 32 ))
regslice_both_outStream_1_V_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(grp_CAMC_Pipeline_VITIS_LOOP_446_1_fu_362_outStream_1_TDATA),
    .vld_in(grp_CAMC_Pipeline_VITIS_LOOP_446_1_fu_362_outStream_1_TVALID),
    .ack_in(outStream_1_TREADY_int_regslice),
    .data_out(outStream_1_TDATA),
    .vld_out(regslice_both_outStream_1_V_data_V_U_vld_out),
    .ack_out(outStream_1_TREADY),
    .apdone_blk(regslice_both_outStream_1_V_data_V_U_apdone_blk)
);

CAMC_regslice_both #(
    .DataWidth( 4 ))
regslice_both_outStream_1_V_keep_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(grp_CAMC_Pipeline_VITIS_LOOP_446_1_fu_362_outStream_1_TKEEP),
    .vld_in(grp_CAMC_Pipeline_VITIS_LOOP_446_1_fu_362_outStream_1_TVALID),
    .ack_in(regslice_both_outStream_1_V_keep_V_U_ack_in_dummy),
    .data_out(outStream_1_TKEEP),
    .vld_out(regslice_both_outStream_1_V_keep_V_U_vld_out),
    .ack_out(outStream_1_TREADY),
    .apdone_blk(regslice_both_outStream_1_V_keep_V_U_apdone_blk)
);

CAMC_regslice_both #(
    .DataWidth( 4 ))
regslice_both_outStream_1_V_strb_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(grp_CAMC_Pipeline_VITIS_LOOP_446_1_fu_362_outStream_1_TSTRB),
    .vld_in(grp_CAMC_Pipeline_VITIS_LOOP_446_1_fu_362_outStream_1_TVALID),
    .ack_in(regslice_both_outStream_1_V_strb_V_U_ack_in_dummy),
    .data_out(outStream_1_TSTRB),
    .vld_out(regslice_both_outStream_1_V_strb_V_U_vld_out),
    .ack_out(outStream_1_TREADY),
    .apdone_blk(regslice_both_outStream_1_V_strb_V_U_apdone_blk)
);

CAMC_regslice_both #(
    .DataWidth( 2 ))
regslice_both_outStream_1_V_user_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(grp_CAMC_Pipeline_VITIS_LOOP_446_1_fu_362_outStream_1_TUSER),
    .vld_in(grp_CAMC_Pipeline_VITIS_LOOP_446_1_fu_362_outStream_1_TVALID),
    .ack_in(regslice_both_outStream_1_V_user_V_U_ack_in_dummy),
    .data_out(outStream_1_TUSER),
    .vld_out(regslice_both_outStream_1_V_user_V_U_vld_out),
    .ack_out(outStream_1_TREADY),
    .apdone_blk(regslice_both_outStream_1_V_user_V_U_apdone_blk)
);

CAMC_regslice_both #(
    .DataWidth( 1 ))
regslice_both_outStream_1_V_last_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(grp_CAMC_Pipeline_VITIS_LOOP_446_1_fu_362_outStream_1_TLAST),
    .vld_in(grp_CAMC_Pipeline_VITIS_LOOP_446_1_fu_362_outStream_1_TVALID),
    .ack_in(regslice_both_outStream_1_V_last_V_U_ack_in_dummy),
    .data_out(outStream_1_TLAST),
    .vld_out(regslice_both_outStream_1_V_last_V_U_vld_out),
    .ack_out(outStream_1_TREADY),
    .apdone_blk(regslice_both_outStream_1_V_last_V_U_apdone_blk)
);

CAMC_regslice_both #(
    .DataWidth( 5 ))
regslice_both_outStream_1_V_id_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(grp_CAMC_Pipeline_VITIS_LOOP_446_1_fu_362_outStream_1_TID),
    .vld_in(grp_CAMC_Pipeline_VITIS_LOOP_446_1_fu_362_outStream_1_TVALID),
    .ack_in(regslice_both_outStream_1_V_id_V_U_ack_in_dummy),
    .data_out(outStream_1_TID),
    .vld_out(regslice_both_outStream_1_V_id_V_U_vld_out),
    .ack_out(outStream_1_TREADY),
    .apdone_blk(regslice_both_outStream_1_V_id_V_U_apdone_blk)
);

CAMC_regslice_both #(
    .DataWidth( 6 ))
regslice_both_outStream_1_V_dest_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(grp_CAMC_Pipeline_VITIS_LOOP_446_1_fu_362_outStream_1_TDEST),
    .vld_in(grp_CAMC_Pipeline_VITIS_LOOP_446_1_fu_362_outStream_1_TVALID),
    .ack_in(regslice_both_outStream_1_V_dest_V_U_ack_in_dummy),
    .data_out(outStream_1_TDEST),
    .vld_out(regslice_both_outStream_1_V_dest_V_U_vld_out),
    .ack_out(outStream_1_TREADY),
    .apdone_blk(regslice_both_outStream_1_V_dest_V_U_apdone_blk)
);

CAMC_regslice_both #(
    .DataWidth( 32 ))
regslice_both_outStream_2_V_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(grp_CAMC_Pipeline_VITIS_LOOP_446_1_fu_362_outStream_2_TDATA),
    .vld_in(grp_CAMC_Pipeline_VITIS_LOOP_446_1_fu_362_outStream_2_TVALID),
    .ack_in(outStream_2_TREADY_int_regslice),
    .data_out(outStream_2_TDATA),
    .vld_out(regslice_both_outStream_2_V_data_V_U_vld_out),
    .ack_out(outStream_2_TREADY),
    .apdone_blk(regslice_both_outStream_2_V_data_V_U_apdone_blk)
);

CAMC_regslice_both #(
    .DataWidth( 4 ))
regslice_both_outStream_2_V_keep_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(grp_CAMC_Pipeline_VITIS_LOOP_446_1_fu_362_outStream_2_TKEEP),
    .vld_in(grp_CAMC_Pipeline_VITIS_LOOP_446_1_fu_362_outStream_2_TVALID),
    .ack_in(regslice_both_outStream_2_V_keep_V_U_ack_in_dummy),
    .data_out(outStream_2_TKEEP),
    .vld_out(regslice_both_outStream_2_V_keep_V_U_vld_out),
    .ack_out(outStream_2_TREADY),
    .apdone_blk(regslice_both_outStream_2_V_keep_V_U_apdone_blk)
);

CAMC_regslice_both #(
    .DataWidth( 4 ))
regslice_both_outStream_2_V_strb_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(grp_CAMC_Pipeline_VITIS_LOOP_446_1_fu_362_outStream_2_TSTRB),
    .vld_in(grp_CAMC_Pipeline_VITIS_LOOP_446_1_fu_362_outStream_2_TVALID),
    .ack_in(regslice_both_outStream_2_V_strb_V_U_ack_in_dummy),
    .data_out(outStream_2_TSTRB),
    .vld_out(regslice_both_outStream_2_V_strb_V_U_vld_out),
    .ack_out(outStream_2_TREADY),
    .apdone_blk(regslice_both_outStream_2_V_strb_V_U_apdone_blk)
);

CAMC_regslice_both #(
    .DataWidth( 2 ))
regslice_both_outStream_2_V_user_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(grp_CAMC_Pipeline_VITIS_LOOP_446_1_fu_362_outStream_2_TUSER),
    .vld_in(grp_CAMC_Pipeline_VITIS_LOOP_446_1_fu_362_outStream_2_TVALID),
    .ack_in(regslice_both_outStream_2_V_user_V_U_ack_in_dummy),
    .data_out(outStream_2_TUSER),
    .vld_out(regslice_both_outStream_2_V_user_V_U_vld_out),
    .ack_out(outStream_2_TREADY),
    .apdone_blk(regslice_both_outStream_2_V_user_V_U_apdone_blk)
);

CAMC_regslice_both #(
    .DataWidth( 1 ))
regslice_both_outStream_2_V_last_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(grp_CAMC_Pipeline_VITIS_LOOP_446_1_fu_362_outStream_2_TLAST),
    .vld_in(grp_CAMC_Pipeline_VITIS_LOOP_446_1_fu_362_outStream_2_TVALID),
    .ack_in(regslice_both_outStream_2_V_last_V_U_ack_in_dummy),
    .data_out(outStream_2_TLAST),
    .vld_out(regslice_both_outStream_2_V_last_V_U_vld_out),
    .ack_out(outStream_2_TREADY),
    .apdone_blk(regslice_both_outStream_2_V_last_V_U_apdone_blk)
);

CAMC_regslice_both #(
    .DataWidth( 5 ))
regslice_both_outStream_2_V_id_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(grp_CAMC_Pipeline_VITIS_LOOP_446_1_fu_362_outStream_2_TID),
    .vld_in(grp_CAMC_Pipeline_VITIS_LOOP_446_1_fu_362_outStream_2_TVALID),
    .ack_in(regslice_both_outStream_2_V_id_V_U_ack_in_dummy),
    .data_out(outStream_2_TID),
    .vld_out(regslice_both_outStream_2_V_id_V_U_vld_out),
    .ack_out(outStream_2_TREADY),
    .apdone_blk(regslice_both_outStream_2_V_id_V_U_apdone_blk)
);

CAMC_regslice_both #(
    .DataWidth( 6 ))
regslice_both_outStream_2_V_dest_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(grp_CAMC_Pipeline_VITIS_LOOP_446_1_fu_362_outStream_2_TDEST),
    .vld_in(grp_CAMC_Pipeline_VITIS_LOOP_446_1_fu_362_outStream_2_TVALID),
    .ack_in(regslice_both_outStream_2_V_dest_V_U_ack_in_dummy),
    .data_out(outStream_2_TDEST),
    .vld_out(regslice_both_outStream_2_V_dest_V_U_vld_out),
    .ack_out(outStream_2_TREADY),
    .apdone_blk(regslice_both_outStream_2_V_dest_V_U_apdone_blk)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_ArrayProduct_fu_429_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state4)) begin
            grp_ArrayProduct_fu_429_ap_start_reg <= 1'b1;
        end else if ((grp_ArrayProduct_fu_429_ap_ready == 1'b1)) begin
            grp_ArrayProduct_fu_429_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_CAMC_Pipeline_VITIS_LOOP_446_1_fu_362_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state2)) begin
            grp_CAMC_Pipeline_VITIS_LOOP_446_1_fu_362_ap_start_reg <= 1'b1;
        end else if ((grp_CAMC_Pipeline_VITIS_LOOP_446_1_fu_362_ap_ready == 1'b1)) begin
            grp_CAMC_Pipeline_VITIS_LOOP_446_1_fu_362_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_CAMC_Pipeline_VITIS_LOOP_537_2_fu_515_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state11)) begin
            grp_CAMC_Pipeline_VITIS_LOOP_537_2_fu_515_ap_start_reg <= 1'b1;
        end else if ((grp_CAMC_Pipeline_VITIS_LOOP_537_2_fu_515_ap_ready == 1'b1)) begin
            grp_CAMC_Pipeline_VITIS_LOOP_537_2_fu_515_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_CAMC_Pipeline_VITIS_LOOP_623_3_fu_522_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state11)) begin
            grp_CAMC_Pipeline_VITIS_LOOP_623_3_fu_522_ap_start_reg <= 1'b1;
        end else if ((grp_CAMC_Pipeline_VITIS_LOOP_623_3_fu_522_ap_ready == 1'b1)) begin
            grp_CAMC_Pipeline_VITIS_LOOP_623_3_fu_522_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        Sample_no_read_reg_676 <= Sample_no;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_ArrayProduct_fu_429_sum_16QAM_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
        sum_16QAM <= grp_ArrayProduct_fu_429_sum_16QAM;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_ArrayProduct_fu_429_sum_16QAM_45m_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
        sum_16QAM_45m <= grp_ArrayProduct_fu_429_sum_16QAM_45m;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_ArrayProduct_fu_429_sum_8PSK_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
        sum_8PSK <= grp_ArrayProduct_fu_429_sum_8PSK;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_ArrayProduct_fu_429_sum_8PSK_45m_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
        sum_8PSK_45m <= grp_ArrayProduct_fu_429_sum_8PSK_45m;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_ArrayProduct_fu_429_sum_BPSK_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
        sum_BPSK <= grp_ArrayProduct_fu_429_sum_BPSK;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_ArrayProduct_fu_429_sum_BPSK_45m_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
        sum_BPSK_45m <= grp_ArrayProduct_fu_429_sum_BPSK_45m;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_ArrayProduct_fu_429_sum_BPSK_45p_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
        sum_BPSK_45p <= grp_ArrayProduct_fu_429_sum_BPSK_45p;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_ArrayProduct_fu_429_sum_BPSK_90p_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
        sum_BPSK_90p <= grp_ArrayProduct_fu_429_sum_BPSK_90p;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_ArrayProduct_fu_429_sum_QPSK_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
        sum_QPSK <= grp_ArrayProduct_fu_429_sum_QPSK;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_ArrayProduct_fu_429_sum_QPSK_45m_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
        sum_QPSK_45m <= grp_ArrayProduct_fu_429_sum_QPSK_45m;
    end
end

assign ap_ST_fsm_state10_blk = 1'b0;

assign ap_ST_fsm_state11_blk = 1'b0;

always @ (*) begin
    if ((1'b1 == ap_block_state12_on_subcall_done)) begin
        ap_ST_fsm_state12_blk = 1'b1;
    end else begin
        ap_ST_fsm_state12_blk = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_block_state13)) begin
        ap_ST_fsm_state13_blk = 1'b1;
    end else begin
        ap_ST_fsm_state13_blk = 1'b0;
    end
end

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state2_blk = 1'b0;

always @ (*) begin
    if ((grp_CAMC_Pipeline_VITIS_LOOP_446_1_fu_362_ap_done == 1'b0)) begin
        ap_ST_fsm_state3_blk = 1'b1;
    end else begin
        ap_ST_fsm_state3_blk = 1'b0;
    end
end

assign ap_ST_fsm_state4_blk = 1'b0;

always @ (*) begin
    if ((grp_ArrayProduct_fu_429_ap_done == 1'b0)) begin
        ap_ST_fsm_state5_blk = 1'b1;
    end else begin
        ap_ST_fsm_state5_blk = 1'b0;
    end
end

assign ap_ST_fsm_state6_blk = 1'b0;

assign ap_ST_fsm_state7_blk = 1'b0;

assign ap_ST_fsm_state8_blk = 1'b0;

assign ap_ST_fsm_state9_blk = 1'b0;

always @ (*) begin
    if (((1'b0 == ap_block_state13) & (1'b1 == ap_CS_fsm_state13))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state13) & (1'b1 == ap_CS_fsm_state13))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        clear_array_x_address0 = grp_CAMC_Pipeline_VITIS_LOOP_623_3_fu_522_clear_array_x_address0;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        clear_array_x_address0 = grp_CAMC_Pipeline_VITIS_LOOP_446_1_fu_362_clear_array_x_address0;
    end else begin
        clear_array_x_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        clear_array_x_ce0 = grp_CAMC_Pipeline_VITIS_LOOP_623_3_fu_522_clear_array_x_ce0;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        clear_array_x_ce0 = grp_CAMC_Pipeline_VITIS_LOOP_446_1_fu_362_clear_array_x_ce0;
    end else begin
        clear_array_x_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        clear_array_x_we0 = grp_CAMC_Pipeline_VITIS_LOOP_446_1_fu_362_clear_array_x_we0;
    end else begin
        clear_array_x_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        clear_array_y_address0 = grp_CAMC_Pipeline_VITIS_LOOP_623_3_fu_522_clear_array_y_address0;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        clear_array_y_address0 = grp_CAMC_Pipeline_VITIS_LOOP_446_1_fu_362_clear_array_y_address0;
    end else begin
        clear_array_y_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        clear_array_y_ce0 = grp_CAMC_Pipeline_VITIS_LOOP_623_3_fu_522_clear_array_y_ce0;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        clear_array_y_ce0 = grp_CAMC_Pipeline_VITIS_LOOP_446_1_fu_362_clear_array_y_ce0;
    end else begin
        clear_array_y_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        clear_array_y_we0 = grp_CAMC_Pipeline_VITIS_LOOP_446_1_fu_362_clear_array_y_we0;
    end else begin
        clear_array_y_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        input_X_TREADY_int_regslice = grp_CAMC_Pipeline_VITIS_LOOP_446_1_fu_362_input_X_TREADY;
    end else begin
        input_X_TREADY_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        input_Y_TREADY_int_regslice = grp_CAMC_Pipeline_VITIS_LOOP_446_1_fu_362_input_Y_TREADY;
    end else begin
        input_Y_TREADY_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        max_address0 = grp_CAMC_Pipeline_VITIS_LOOP_537_2_fu_515_max_address0;
    end else begin
        max_address0 = max_address0_local;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        max_address0_local = 64'd9;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        max_address0_local = 64'd7;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        max_address0_local = 64'd5;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        max_address0_local = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        max_address0_local = 64'd1;
    end else begin
        max_address0_local = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        max_address1_local = 64'd8;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        max_address1_local = 64'd6;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        max_address1_local = 64'd4;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        max_address1_local = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        max_address1_local = 64'd0;
    end else begin
        max_address1_local = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        max_ce0 = grp_CAMC_Pipeline_VITIS_LOOP_537_2_fu_515_max_ce0;
    end else begin
        max_ce0 = max_ce0_local;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6))) begin
        max_ce0_local = 1'b1;
    end else begin
        max_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6))) begin
        max_ce1_local = 1'b1;
    end else begin
        max_ce1_local = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        max_d0_local = sum_16QAM_45m;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        max_d0_local = zext_ln530_fu_619_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        max_d0_local = zext_ln528_fu_582_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        max_d0_local = zext_ln525_fu_564_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        max_d0_local = zext_ln523_fu_546_p1;
    end else begin
        max_d0_local = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        max_d1_local = sum_16QAM;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        max_d1_local = zext_ln529_fu_610_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        max_d1_local = zext_ln527_fu_573_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        max_d1_local = zext_ln524_fu_555_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        max_d1_local = zext_ln522_fu_537_p1;
    end else begin
        max_d1_local = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6))) begin
        max_we0_local = 1'b1;
    end else begin
        max_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6))) begin
        max_we1_local = 1'b1;
    end else begin
        max_we1_local = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        result_Addr_A_orig = 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        result_Addr_A_orig = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        result_Addr_A_orig = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        result_Addr_A_orig = 64'd1;
    end else begin
        result_Addr_A_orig = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        result_Din_A_local = grp_CAMC_Pipeline_VITIS_LOOP_537_2_fu_515_result_T_10_out;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        result_Din_A_local = zext_ln520_2_fu_667_p1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        result_Din_A_local = zext_ln520_1_fu_638_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        result_Din_A_local = zext_ln520_fu_601_p1;
    end else begin
        result_Din_A_local = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | ((1'b0 == ap_block_state13) & (1'b1 == ap_CS_fsm_state13)))) begin
        result_EN_A_local = 1'b1;
    end else begin
        result_EN_A_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | ((1'b0 == ap_block_state13) & (1'b1 == ap_CS_fsm_state13)))) begin
        result_WEN_A_local = 8'd255;
    end else begin
        result_WEN_A_local = 8'd0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        weights_test_address0 = grp_CAMC_Pipeline_VITIS_LOOP_623_3_fu_522_weights_test_address0;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        weights_test_address0 = grp_ArrayProduct_fu_429_weights_test_address0;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        weights_test_address0 = grp_CAMC_Pipeline_VITIS_LOOP_446_1_fu_362_weights_test_address0;
    end else begin
        weights_test_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        weights_test_ce0 = grp_CAMC_Pipeline_VITIS_LOOP_623_3_fu_522_weights_test_ce0;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        weights_test_ce0 = grp_ArrayProduct_fu_429_weights_test_ce0;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        weights_test_ce0 = grp_CAMC_Pipeline_VITIS_LOOP_446_1_fu_362_weights_test_ce0;
    end else begin
        weights_test_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        weights_test_d0 = grp_CAMC_Pipeline_VITIS_LOOP_623_3_fu_522_weights_test_d0;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        weights_test_d0 = grp_CAMC_Pipeline_VITIS_LOOP_446_1_fu_362_weights_test_d0;
    end else begin
        weights_test_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        weights_test_we0 = grp_CAMC_Pipeline_VITIS_LOOP_623_3_fu_522_weights_test_we0;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        weights_test_we0 = grp_CAMC_Pipeline_VITIS_LOOP_446_1_fu_362_weights_test_we0;
    end else begin
        weights_test_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            if (((1'b1 == ap_CS_fsm_state3) & (grp_CAMC_Pipeline_VITIS_LOOP_446_1_fu_362_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            if (((1'b1 == ap_CS_fsm_state5) & (grp_ArrayProduct_fu_429_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            if (((1'b0 == ap_block_state12_on_subcall_done) & (1'b1 == ap_CS_fsm_state12))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end
        end
        ap_ST_fsm_state13 : begin
            if (((1'b0 == ap_block_state13) & (1'b1 == ap_CS_fsm_state13))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

always @ (*) begin
    ap_block_state12_on_subcall_done = ((grp_CAMC_Pipeline_VITIS_LOOP_623_3_fu_522_ap_done == 1'b0) | (grp_CAMC_Pipeline_VITIS_LOOP_537_2_fu_515_ap_done == 1'b0));
end

always @ (*) begin
    ap_block_state13 = ((regslice_both_outStream_2_V_data_V_U_apdone_blk == 1'b1) | (regslice_both_outStream_1_V_data_V_U_apdone_blk == 1'b1));
end

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign grp_ArrayProduct_fu_429_ap_start = grp_ArrayProduct_fu_429_ap_start_reg;

assign grp_CAMC_Pipeline_VITIS_LOOP_446_1_fu_362_ap_start = grp_CAMC_Pipeline_VITIS_LOOP_446_1_fu_362_ap_start_reg;

assign grp_CAMC_Pipeline_VITIS_LOOP_446_1_fu_362_outStream_1_TREADY = (outStream_1_TREADY_int_regslice & ap_CS_fsm_state3);

assign grp_CAMC_Pipeline_VITIS_LOOP_446_1_fu_362_outStream_2_TREADY = (outStream_2_TREADY_int_regslice & ap_CS_fsm_state3);

assign grp_CAMC_Pipeline_VITIS_LOOP_537_2_fu_515_ap_start = grp_CAMC_Pipeline_VITIS_LOOP_537_2_fu_515_ap_start_reg;

assign grp_CAMC_Pipeline_VITIS_LOOP_623_3_fu_522_ap_start = grp_CAMC_Pipeline_VITIS_LOOP_623_3_fu_522_ap_start_reg;

assign icmp_ln547_fu_587_p2 = ((sum_QPSK > sum_QPSK_45m) ? 1'b1 : 1'b0);

assign icmp_ln558_fu_624_p2 = ((sum_8PSK > sum_8PSK_45m) ? 1'b1 : 1'b0);

assign icmp_ln569_fu_653_p2 = ((sum_16QAM > sum_16QAM_45m) ? 1'b1 : 1'b0);

assign input_X_TREADY = regslice_both_input_X_V_data_V_U_ack_in;

assign input_Y_TREADY = regslice_both_input_Y_V_data_V_U_ack_in;

assign outStream_1_TVALID = regslice_both_outStream_1_V_data_V_U_vld_out;

assign outStream_1_TVALID_int_regslice = grp_CAMC_Pipeline_VITIS_LOOP_446_1_fu_362_outStream_1_TVALID;

assign outStream_2_TVALID = regslice_both_outStream_2_V_data_V_U_vld_out;

assign outStream_2_TVALID_int_regslice = grp_CAMC_Pipeline_VITIS_LOOP_446_1_fu_362_outStream_2_TVALID;

assign result_Addr_A = result_Addr_A_orig << 32'd3;

assign result_Clk_A = ap_clk;

assign result_Din_A = result_Din_A_local;

assign result_EN_A = result_EN_A_local;

always @ (*) begin
    result_Rst_A = ~ap_rst_n;
end

assign result_T_10_fu_630_p3 = ((icmp_ln558_fu_624_p2[0:0] == 1'b1) ? sum_8PSK : sum_8PSK_45m);

assign result_T_13_fu_659_p3 = ((icmp_ln569_fu_653_p2[0:0] == 1'b1) ? sum_16QAM : sum_16QAM_45m);

assign result_T_5_fu_593_p3 = ((icmp_ln547_fu_587_p2[0:0] == 1'b1) ? sum_QPSK : sum_QPSK_45m);

assign result_WEN_A = result_WEN_A_local;

assign zext_ln520_1_fu_638_p1 = result_T_10_fu_630_p3;

assign zext_ln520_2_fu_667_p1 = result_T_13_fu_659_p3;

assign zext_ln520_fu_601_p1 = result_T_5_fu_593_p3;

assign zext_ln522_fu_537_p1 = sum_BPSK;

assign zext_ln523_fu_546_p1 = sum_BPSK_45m;

assign zext_ln524_fu_555_p1 = sum_BPSK_45p;

assign zext_ln525_fu_564_p1 = sum_BPSK_90p;

assign zext_ln527_fu_573_p1 = sum_QPSK;

assign zext_ln528_fu_582_p1 = sum_QPSK_45m;

assign zext_ln529_fu_610_p1 = sum_8PSK;

assign zext_ln530_fu_619_p1 = sum_8PSK_45m;


reg find_kernel_block = 0;
// synthesis translate_off
`include "CAMC_hls_deadlock_kernel_monitor_top.vh"
// synthesis translate_on

endmodule //CAMC

